_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t destroy for REMAnalyticsEvent(id *a1)
{
  uint64_t result;
  uint64_t *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = (uint64_t *)&unk_1ED23FF70;
      goto LABEL_5;
    case 1:
      swift_bridgeObjectRelease();
      v3 = (uint64_t *)&unk_1ED23FF90;
      goto LABEL_5;
    case 2:
      swift_bridgeObjectRelease();
      v3 = (uint64_t *)&unk_1EE721568;
LABEL_5:
      v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v3) + 64);
      v5 = sub_1A46900B4();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
      goto LABEL_12;
    case 3:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 5:
    case 7:
      goto LABEL_12;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    case 12:

LABEL_12:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A44300E8()
{
  uint64_t v0;

  MEMORY[0x1A85A0114](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t Lock.sync<A>(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  a1(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(a3, a5);
}

uint64_t sub_1A4430190()
{
  return os_unfair_lock_lock_with_options();
}

uint64_t UnfairLock.init(options:)(int *a1)
{
  uint64_t v1;
  int v2;
  _DWORD *v3;

  v2 = *a1;
  v3 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = 0;
  *(_DWORD *)(v1 + 24) = (v2 & 1) << 16;
  return v1;
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_1A44301FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t result;

  v4 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1A85A01C8](v4);
  if (result)
  {
    a3();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t REMAnalyticsEvent.isUsed.getter()
{
  void *v0;
  uint64_t IsEventUsed;

  REMAnalyticsEvent.id.getter();
  v0 = (void *)sub_1A469087C();
  IsEventUsed = AnalyticsIsEventUsed();
  swift_bridgeObjectRelease();

  return IsEventUsed;
}

void REMAnalyticsEvent.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;

  type metadata accessor for REMAnalyticsEvent();
  MEMORY[0x1E0C80A78]();
  sub_1A44304C4(v0, (uint64_t)&v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2 = (char *)sub_1A443034C + 4 * byte_1A46A4520[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_1A443034C()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  v1 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70) + 64);
  swift_bridgeObjectRelease();
  sub_1A449C92C(v1);
  return 0xD000000000000021;
}

uint64_t sub_1A44304C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMAnalyticsEvent()
{
  uint64_t result;

  result = qword_1ED2403D8;
  if (!qword_1ED2403D8)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *initializeWithCopy for REMAnalyticsEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_WORD *)a1 = *(_WORD *)a2;
      v6 = a2[2];
      a1[1] = a2[1];
      a1[2] = v6;
      swift_bridgeObjectRetain();
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70);
      v8 = *(int *)(v7 + 64);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1A46900B4();
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        goto LABEL_16;
      goto LABEL_7;
    case 1u:
      *(_WORD *)a1 = *(_WORD *)a2;
      v13 = a2[2];
      a1[1] = a2[1];
      a1[2] = v13;
      swift_bridgeObjectRetain();
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FF90);
      v14 = *(int *)(v7 + 64);
      v9 = (char *)a1 + v14;
      v10 = (char *)a2 + v14;
      v11 = sub_1A46900B4();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        goto LABEL_7;
      goto LABEL_16;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v15 = a2[2];
      a1[1] = a2[1];
      a1[2] = v15;
      swift_bridgeObjectRetain();
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721568);
      v16 = *(int *)(v7 + 64);
      v9 = (char *)a1 + v16;
      v10 = (char *)a2 + v16;
      v11 = sub_1A46900B4();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
LABEL_7:
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
LABEL_16:
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v44 = *(int *)(v7 + 80);
      v45 = (_QWORD *)((char *)a1 + v44);
      v46 = (_QWORD *)((char *)a2 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 3u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      v20 = a2[5];
      a1[4] = a2[4];
      a1[5] = v20;
      v21 = a2[7];
      a1[6] = a2[6];
      a1[7] = v21;
      v22 = a2[8];
      v23 = a2[9];
      a1[8] = v22;
      a1[9] = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 5u:
      v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 6u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      v25 = a2[5];
      a1[4] = a2[4];
      a1[5] = v25;
      v26 = a2[7];
      a1[6] = a2[6];
      a1[7] = v26;
      v27 = a2[9];
      a1[8] = a2[8];
      a1[9] = v27;
      v28 = a2[10];
      v29 = a2[11];
      a1[10] = v28;
      a1[11] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 7u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 8u:
      v30 = a2[1];
      *a1 = *a2;
      a1[1] = v30;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v31 = a2[4];
      a1[3] = a2[3];
      a1[4] = v31;
      v32 = a2[6];
      a1[5] = a2[5];
      a1[6] = v32;
      v33 = a2[8];
      a1[7] = a2[7];
      a1[8] = v33;
      v34 = a2[10];
      a1[9] = a2[9];
      a1[10] = v34;
      v35 = a2[11];
      v36 = a2[12];
      a1[11] = v35;
      a1[12] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 9u:
      v37 = a2[1];
      *a1 = *a2;
      a1[1] = v37;
      v38 = a2[3];
      a1[2] = a2[2];
      a1[3] = v38;
      v39 = a2[4];
      v40 = a2[5];
      a1[4] = v39;
      a1[5] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 0xCu:
      v41 = (void *)*a2;
      v42 = a2[1];
      *a1 = v41;
      a1[1] = v42;
      v43 = v41;
      swift_bridgeObjectRetain();
LABEL_18:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A859FFE8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1A859FF40](a1, v6, a5);
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A859FFF4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

unint64_t measureTimeElapsed(_:level:block:)(uint64_t a1, unint64_t a2, int a3, char *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  _BOOL4 v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t result;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v6 = v5;
  v53 = a5;
  v54 = a4;
  v52 = a1;
  v9 = sub_1A4690600();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v47 - v14;
  if (qword_1ED243CE0 != -1)
    swift_once();
  v16 = sub_1A4690318();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED243138);
  swift_bridgeObjectRetain_n();
  v49 = v17;
  v18 = sub_1A469030C();
  v19 = os_log_type_enabled(v18, (os_log_type_t)a3);
  v50 = a3;
  if (v19)
  {
    v51 = v13;
    v20 = swift_slowAlloc();
    v47 = v5;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc();
    v48 = v9;
    v23 = v22;
    v56 = v22;
    *(_DWORD *)v21 = 136446210;
    swift_bridgeObjectRetain();
    v55 = sub_1A4431120(v52, a2, &v56);
    v13 = v51;
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A442D000, v18, (os_log_type_t)a3, "START %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    v24 = v23;
    v9 = v48;
    MEMORY[0x1A85A0114](v24, -1, -1);
    v25 = v21;
    v6 = v47;
    MEMORY[0x1A85A0114](v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v26 = sub_1A46905F4();
  ((void (*)(uint64_t))v54)(v26);
  if (v6)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  sub_1A46905F4();
  v28 = sub_1A46905E8();
  if (v28 >= sub_1A46905E8())
  {
    v51 = v13;
    v38 = sub_1A46905E8();
    result = sub_1A46905E8();
    if (v38 < result)
    {
      __break(1u);
    }
    else
    {
      v39 = (double)(v38 - result) / 1000000.0;
      swift_bridgeObjectRetain_n();
      v40 = sub_1A469030C();
      v41 = v50;
      if (os_log_type_enabled(v40, (os_log_type_t)v50))
      {
        v42 = swift_slowAlloc();
        v43 = swift_slowAlloc();
        v54 = v15;
        v44 = v43;
        v56 = v43;
        *(_DWORD *)v42 = 136446466;
        v53 = v10;
        swift_bridgeObjectRetain();
        v55 = sub_1A4431120(v52, a2, &v56);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v42 + 12) = 2048;
        v55 = *(_QWORD *)&v39;
        sub_1A46911D0();
        _os_log_impl(&dword_1A442D000, v40, v41, "END %{public}s, {elapsed: %f ms}", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v44, -1, -1);
        MEMORY[0x1A85A0114](v42, -1, -1);

        v45 = *(void (**)(char *, uint64_t))(v53 + 8);
        v45(v51, v9);
        return ((uint64_t (*)(char *, uint64_t))v45)(v54, v9);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v46 = *(void (**)(char *, uint64_t))(v10 + 8);
        v46(v51, v9);
        return ((uint64_t (*)(char *, uint64_t))v46)(v15, v9);
      }
    }
  }
  else
  {
    v54 = v15;
    swift_bridgeObjectRetain_n();
    v29 = sub_1A469030C();
    v30 = v50;
    if (os_log_type_enabled(v29, (os_log_type_t)v50))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v53 = v10;
      v33 = v9;
      v34 = v32;
      v56 = v32;
      v51 = v13;
      *(_DWORD *)v31 = 136446210;
      swift_bridgeObjectRetain();
      v55 = sub_1A4431120(v52, a2, &v56);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v29, v30, "END %{public}s, {elapsed: UNDEFINED ms}", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v34, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);

      v35 = *(void (**)(char *, uint64_t))(v53 + 8);
      v35(v51, v33);
      v36 = v54;
      v37 = v33;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v35 = *(void (**)(char *, uint64_t))(v10 + 8);
      v35(v13, v9);
      v36 = v54;
      v37 = v9;
    }
    return ((uint64_t (*)(char *, uint64_t))v35)(v36, v37);
  }
  return result;
}

uint64_t sub_1A4431120(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A443122C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A44311F0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A44311F0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A44311F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A443122C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A46911DC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A445964C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A46914E8();
  if (!v8)
  {
    sub_1A469162C();
    __break(1u);
LABEL_17:
    result = sub_1A46916F8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1A44313E4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4]);
}

uint64_t sub_1A44313F8(uint64_t a1)
{
  return sub_1A44313E4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44301FC);
}

void sub_1A4431404()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)v0 + 16));
}

uint64_t UnfairLock.__deallocating_deinit()
{
  return sub_1A44300E8();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A468FBEC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t __swift_memcpy6_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_WORD *)(result + 4) = *((_WORD *)a2 + 2);
  *(_DWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroy_24Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for REMRemindersListDataView.ShowCompleted(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED242A78);
}

uint64_t type metadata accessor for REMSearchCriterion()
{
  uint64_t result;

  result = qword_1ED243030;
  if (!qword_1ED243030)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1A4431A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void rdi_os_crash()
{
  _os_crash();
  __break(1u);
}

void sub_1A4432C48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005>::result_type std::mersenne_twister_engine<unsigned long long,64ul,312ul,156ul,31ul,13043109905998158313ull,29ul,6148914691236517205ull,17ul,8202884508482404352ull,37ul,18444473444759240704ull,43ul,6364136223846793005ull>::operator()(std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005> *this)
{
  size_t i;
  size_t v2;
  std::mersenne_twister_engine<unsigned long long, 64, 312, 156, 31, 13043109905998158313, 29, 6148914691236517205, 17, 8202884508482404352, 37, 18444473444759240704, 43, 6364136223846793005>::result_type v3;
  uint64_t v4;

  i = this->__i_;
  v2 = (i + 1) % 0x138;
  v3 = this->__x_[(i + 156) % 0x138] ^ ((this->__x_[v2] & 0x7FFFFFFE | this->__x_[i] & 0xFFFFFFFF80000000) >> 1) ^ ((uint64_t)(this->__x_[v2] << 63) >> 63) & 0xB5026F5AA96619E9;
  this->__x_[i] = v3;
  this->__i_ = v2;
  v4 = (((v3 >> 29) & 0x5555555555555555 ^ v3) << 17) & 0x71D67FFFEDA60000 ^ (v3 >> 29) & 0x5555555555555555 ^ v3;
  return (v4 << 37) & 0xFFF7EEE000000000 ^ v4 ^ (((v4 << 37) & 0xFFF7EEE000000000 ^ v4) >> 43);
}

void sub_1A4433F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

id soft_getCTGreenTeaOsLogHandle(uint64_t a1)
{
  void *v2;
  void *v3;
  _Unwind_Exception *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  v9 = getgetCTGreenTeaOsLogHandleSymbolLoc_ptr;
  if (!getgetCTGreenTeaOsLogHandleSymbolLoc_ptr)
  {
    v3 = (void *)libCTGreenTeaLoggerLibrary();
    v2 = dlsym(v3, "getCTGreenTeaOsLogHandle");
    v7[3] = (uint64_t)v2;
    getgetCTGreenTeaOsLogHandleSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (!v2)
  {
    v5 = (_Unwind_Exception *)-[REMRegulatoryLogger init].cold.1();
    _Block_object_dispose(&v6, 8);
    _Unwind_Resume(v5);
  }
  ((void (*)(uint64_t))v2)(a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t libCTGreenTeaLoggerLibrary()
{
  uint64_t v0;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  v6 = libCTGreenTeaLoggerLibraryCore_frameworkLibrary;
  if (!libCTGreenTeaLoggerLibraryCore_frameworkLibrary)
  {
    v7 = xmmword_1E4C0DD38;
    v8 = 0;
    v0 = _sl_dlopen();
    v4[3] = v0;
    libCTGreenTeaLoggerLibraryCore_frameworkLibrary = v0;
  }
  _Block_object_dispose(&v3, 8);
  if (!v0)
  {
    v2 = (void *)abort_report_np();
    __break(1u);
    free(v2);
  }
  return v0;
}

void sub_1A4434738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t REMSuggestedAttributesAccuracy.correctSample.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesAccuracy.incorrectSample.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesAccuracy.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 120);
  v13 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 104) = v12;
  *(_QWORD *)(a1 + 112) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesAccuracy.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v11 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v12 = *(_QWORD *)(v1 + 96);
  v13 = *(_QWORD *)(v1 + 120);
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = v14;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v12;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 120) = v13;
  *(_QWORD *)(a1 + 128) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void __swiftcall REMSuggestedAttributesAccuracy.init(correctSample:incorrectSample:metrics:)(ReminderKitInternal::REMSuggestedAttributesAccuracy *__return_ptr retstr, Swift::OpaquePointer correctSample, Swift::OpaquePointer incorrectSample, ReminderKitInternal::MultiClassificationMetric *metrics)
{
  void *rawValue;
  Swift::Double recall;
  void *v6;
  __int128 v7;
  __int128 v8;

  rawValue = metrics->typeIIErrors._rawValue;
  recall = metrics->recall;
  v6 = metrics->indexedClasses._rawValue;
  retstr->correctSample = correctSample;
  retstr->incorrectSample = incorrectSample;
  v7 = *(_OWORD *)&metrics->confusionMatrix._rawValue;
  *(_OWORD *)&retstr->metrics.correctIndices._rawValue = *(_OWORD *)&metrics->correctIndices._rawValue;
  *(_OWORD *)&retstr->metrics.confusionMatrix._rawValue = v7;
  v8 = *(_OWORD *)&metrics->falseNegatives._rawValue;
  *(_OWORD *)&retstr->metrics.trueNegatives._rawValue = *(_OWORD *)&metrics->trueNegatives._rawValue;
  *(_OWORD *)&retstr->metrics.falseNegatives._rawValue = v8;
  *(_OWORD *)&retstr->metrics.recalls._rawValue = *(_OWORD *)&metrics->recalls._rawValue;
  retstr->metrics.typeIIErrors._rawValue = rawValue;
  *(_OWORD *)&retstr->metrics.accuracy = *(_OWORD *)&metrics->accuracy;
  retstr->metrics.recall = recall;
  retstr->metrics.indexedClasses._rawValue = v6;
}

BOOL sub_1A44349A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO08ListPathE0O13DetailSectionO9hashValueSivg_0()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A4434A00()
{
  return sub_1A4691C98();
}

uint64_t sub_1A4434A28()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A4434A68()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x636572726F636E69;
  if (*v0 != 1)
    v1 = 0x7363697274656DLL;
  if (*v0)
    return v1;
  else
    return 0x5374636572726F63;
}

uint64_t sub_1A4434ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4436D88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4434B00()
{
  return 0;
}

void sub_1A4434B0C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A4434B18()
{
  sub_1A4434DC0();
  return sub_1A4691DB8();
}

uint64_t sub_1A4434B40()
{
  sub_1A4434DC0();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesAccuracy.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C290);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v22 = v1[1];
  v19 = *((_OWORD *)v1 + 1);
  v18 = *((_OWORD *)v1 + 2);
  v17 = *((_OWORD *)v1 + 3);
  v16 = *((_OWORD *)v1 + 4);
  v15 = *((_OWORD *)v1 + 5);
  v21 = v1[12];
  v9 = v1[13];
  v10 = v1[14];
  v11 = v1[15];
  v20 = v1[16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4434DC0();
  sub_1A4691D40();
  *(_QWORD *)&v23 = v8;
  v33 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A44351D8(&qword_1ED23EAB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v20;
    v13 = v21;
    *(_QWORD *)&v23 = v22;
    v33 = 1;
    sub_1A4691890();
    v23 = v19;
    v24 = v18;
    v25 = v17;
    v26 = v16;
    v27 = v15;
    v28 = v13;
    v29 = v9;
    v30 = v10;
    v31 = v11;
    v32 = v12;
    v33 = 2;
    sub_1A4434E04();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A4434DC0()
{
  unint64_t result;

  result = qword_1EE71C298;
  if (!qword_1EE71C298)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4695830, &type metadata for REMSuggestedAttributesAccuracy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71C298);
  }
  return result;
}

unint64_t sub_1A4434E04()
{
  unint64_t result;

  result = qword_1EE71C2A0;
  if (!qword_1EE71C2A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for MultiClassificationMetric, &type metadata for MultiClassificationMetric);
    atomic_store(result, (unint64_t *)&qword_1EE71C2A0);
  }
  return result;
}

uint64_t REMSuggestedAttributesAccuracy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[6];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71C2A8);
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4434DC0();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = a2;
  v31 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  LOBYTE(v33) = 0;
  sub_1A44351D8(&qword_1ED23E750, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v8 = v32;
  sub_1A46917C4();
  v9 = v42[0];
  LOBYTE(v33) = 1;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v10 = v42[0];
  v52 = 2;
  sub_1A4435238();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v8);
  v31 = *((_QWORD *)&v53 + 1);
  v32 = v53;
  v11 = *((_QWORD *)&v54 + 1);
  v12 = v55;
  v28 = v56;
  v29 = v54;
  v26 = v57;
  v27 = *((_QWORD *)&v56 + 1);
  v24 = v58;
  v25 = *((_QWORD *)&v57 + 1);
  v13 = *((_QWORD *)&v58 + 1);
  v14 = v59;
  v23 = v60;
  v15 = v9;
  *(_QWORD *)&v33 = v9;
  *((_QWORD *)&v33 + 1) = v10;
  v34 = v53;
  v35 = v54;
  v36 = v55;
  v37 = v56;
  v38 = v57;
  v39 = v58;
  v40 = v59;
  v41 = v60;
  sub_1A443527C((uint64_t)&v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v40;
  v17 = v30;
  *(_OWORD *)(v30 + 96) = v39;
  *(_OWORD *)(v17 + 112) = v16;
  *(_QWORD *)(v17 + 128) = v41;
  v18 = v36;
  *(_OWORD *)(v17 + 32) = v35;
  *(_OWORD *)(v17 + 48) = v18;
  v19 = v38;
  *(_OWORD *)(v17 + 64) = v37;
  *(_OWORD *)(v17 + 80) = v19;
  v20 = v34;
  *(_OWORD *)v17 = v33;
  *(_OWORD *)(v17 + 16) = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v42[0] = v15;
  v42[1] = v10;
  v42[2] = v32;
  v42[3] = v31;
  v42[4] = v29;
  v42[5] = v11;
  v43 = v12;
  v44 = v28;
  v45 = v27;
  v46 = v26;
  v47 = v25;
  v48 = v24;
  v49 = v13;
  v50 = v14;
  v51 = v23;
  return sub_1A443535C((uint64_t)v42);
}

uint64_t sub_1A44351D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED242FF0);
    v8 = a2;
    result = MEMORY[0x1A85A0000](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A4435238()
{
  unint64_t result;

  result = qword_1EE71C2B8;
  if (!qword_1EE71C2B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for MultiClassificationMetric, &type metadata for MultiClassificationMetric);
    atomic_store(result, (unint64_t *)&qword_1EE71C2B8);
  }
  return result;
}

uint64_t sub_1A443527C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A443535C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A443543C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesAccuracy.init(from:)(a1, a2);
}

uint64_t sub_1A4435450(_QWORD *a1)
{
  return REMSuggestedAttributesAccuracy.encode(to:)(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for MultiClassificationMetric(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for REMSuggestedAttributesAccuracy()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesAccuracy(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributesAccuracy(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesAccuracy(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesAccuracy(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 136))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesAccuracy(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 136) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesAccuracy()
{
  return &type metadata for REMSuggestedAttributesAccuracy;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1A4435964(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A4435984(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for os_unfair_recursive_lock_s(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1ED23FBD0);
}

void type metadata accessor for REMManualOrderingListType(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C388);
}

void type metadata accessor for REMShareeStatus(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C390);
}

void type metadata accessor for REMListSharingStatus(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C398);
}

void type metadata accessor for REMAlarmProximity(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3A0);
}

void type metadata accessor for REMAlarmVehicleTriggerEvent(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3A8);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1A4435A38(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A4435A58(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for _opaque_pthread_mutex_t(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3B0);
}

void type metadata accessor for os_unfair_lock_options_t(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1EE71C3B8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1ED242E40);
}

void type metadata accessor for NLTag(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3C8);
}

void type metadata accessor for Options(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3D0);
}

uint64_t getEnumTagSinglePayload for Diff.RemainingIndex(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Diff.RemainingIndex(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3D8);
}

void type metadata accessor for REMAccountType(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3E0);
}

void type metadata accessor for REMSortingStyle(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3E8);
}

void type metadata accessor for CLAccuracyAuthorization(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C3F0);
}

void type metadata accessor for CLAuthorizationStatus(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1EE71C3F8);
}

void type metadata accessor for REMSmartListUserDefinedVisibility(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1ED240E10);
}

void type metadata accessor for REMRecurrenceFrequency(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1EE71C408);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1ED23E810);
}

void type metadata accessor for Dataclass(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1EE71C418);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1ED23FBE0);
}

void type metadata accessor for REMReminderPriorityLevel(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1EE71C428);
}

void type metadata accessor for REMSmartListType(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1ED240E00);
}

void type metadata accessor for NLTagScheme(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C438);
}

void type metadata accessor for NLLanguage(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C440);
}

void type metadata accessor for REMReminderNextThirdsHour(uint64_t a1)
{
  sub_1A4436F70(a1, &qword_1EE71C448);
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesAccuracy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesAccuracy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4435D48 + 4 * byte_1A46945B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A4435D7C + 4 * byte_1A46945B0[v4]))();
}

uint64_t sub_1A4435D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4435D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4435D8CLL);
  return result;
}

uint64_t sub_1A4435D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4435DA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A4435DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4435DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4435DB8(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1A4435DC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesAccuracy.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesAccuracy.CodingKeys;
}

unint64_t sub_1A4435DE0()
{
  unint64_t result;

  result = qword_1EE71C450;
  if (!qword_1EE71C450)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46949E8, &type metadata for REMSuggestedAttributesAccuracy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71C450);
  }
  return result;
}

uint64_t sub_1A4435E24(uint64_t a1, uint64_t a2)
{
  return sub_1A4436764(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1A4435E3C(uint64_t a1, uint64_t a2)
{
  return sub_1A4436764(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEA950]);
}

void sub_1A4435E50(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1A4435E58@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1A4435E6C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1A4435E80@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A4435E94(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1A4435EC4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A4435EF0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1A4435F14(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1A4435F28(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1A4435F3C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1A4435F50@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A4435F64(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A4435F78(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A4435F8C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A4435FA0()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1A4435FB0()
{
  return sub_1A4691290();
}

_QWORD *sub_1A4435FC8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1A4435FE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A4436014()
{
  return sub_1A4691C98();
}

uint64_t sub_1A443603C()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A4436080()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A44360C0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1A4690888();
  *a2 = 0;
  return result;
}

uint64_t sub_1A4436134(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1A4690894();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A44361B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v2 = sub_1A469087C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_1A44361F0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A4436204@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1A4436F24(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_QWORD *sub_1A4436240@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1A443624C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1A443625C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1A4436268()
{
  sub_1A4436344(&qword_1EE71C5B0, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1A4694AE8);
  sub_1A4436344(&qword_1EE71C5B8, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1A4694A88);
  return sub_1A4691710();
}

uint64_t sub_1A44362EC()
{
  return sub_1A4436344(&qword_1EE71C458, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1A4694A4C);
}

uint64_t sub_1A4436318()
{
  return sub_1A4436344(&qword_1EE71C460, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1A4694A20);
}

uint64_t sub_1A4436344(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1A85A0000](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4436384()
{
  return sub_1A4436344(&qword_1EE71C468, (uint64_t (*)(uint64_t))type metadata accessor for NLLanguage, (uint64_t)&unk_1A4694ABC);
}

uint64_t sub_1A44363B0()
{
  sub_1A4436344(&qword_1EE71C550, (uint64_t (*)(uint64_t))type metadata accessor for NLTag, (uint64_t)&unk_1A4695620);
  sub_1A4436344(&qword_1EE71C558, (uint64_t (*)(uint64_t))type metadata accessor for NLTag, (uint64_t)&unk_1A46955C0);
  return sub_1A4691710();
}

uint64_t sub_1A4436434()
{
  sub_1A4436344(&qword_1EE71C5A0, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_1A4694C40);
  sub_1A4436344(&qword_1EE71C5A8, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_1A4694BE0);
  return sub_1A4691710();
}

uint64_t sub_1A44364B8()
{
  return sub_1A4436344(&qword_1EE71C470, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_1A4694BA4);
}

uint64_t sub_1A44364E4()
{
  return sub_1A4436344(&qword_1EE71C478, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_1A4694B78);
}

uint64_t sub_1A4436510()
{
  sub_1A4436344(&qword_1EE71C560, (uint64_t (*)(uint64_t))type metadata accessor for REMSortingStyle, (uint64_t)&unk_1A46952CC);
  sub_1A4436344((unint64_t *)&unk_1EE71C568, (uint64_t (*)(uint64_t))type metadata accessor for REMSortingStyle, (uint64_t)&unk_1A4695274);
  return sub_1A4691710();
}

uint64_t sub_1A4436594()
{
  sub_1A4436344(&qword_1EE71C590, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_1A4694D88);
  sub_1A4436344(&qword_1EE71C598, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_1A4694D30);
  return sub_1A4691710();
}

uint64_t sub_1A4436618()
{
  sub_1A4436344(&qword_1EE71C580, (uint64_t (*)(uint64_t))type metadata accessor for Dataclass, (uint64_t)&unk_1A46957F0);
  sub_1A4436344(&qword_1EE71C588, (uint64_t (*)(uint64_t))type metadata accessor for Dataclass, (uint64_t)&unk_1A4694F10);
  return sub_1A4691710();
}

uint64_t sub_1A443669C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469087C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A44366E0()
{
  sub_1A4436344((unint64_t *)&qword_1ED23E800, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1A4695084);
  sub_1A4436344(&qword_1EE71C578, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1A4695024);
  return sub_1A4691710();
}

uint64_t sub_1A4436764(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A44367A0()
{
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44367E0()
{
  uint64_t v0;

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4691C8C();
  sub_1A4690948();
  v0 = sub_1A4691CC8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A4436850()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v2 = v1;
  if (v0 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A44368D8()
{
  return sub_1A4436344(&qword_1EE71C480, (uint64_t (*)(uint64_t))type metadata accessor for NLTagScheme, (uint64_t)&unk_1A4694C14);
}

uint64_t sub_1A4436904()
{
  return sub_1A4436344(&qword_1EE71C488, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_1A4694CF8);
}

uint64_t sub_1A4436930()
{
  return sub_1A4436344((unint64_t *)&unk_1EE71C490, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_1A4694CD0);
}

uint64_t sub_1A443695C()
{
  return sub_1A4436344(&qword_1ED240DF8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartListType, (uint64_t)&unk_1A4694D60);
}

uint64_t sub_1A4436988()
{
  return sub_1A4436344(&qword_1EE71C4A0, (uint64_t (*)(uint64_t))type metadata accessor for REMReminderPriorityLevel, (uint64_t)&unk_1A4694E50);
}

uint64_t sub_1A44369B4()
{
  return sub_1A4436344(&qword_1EE71C4A8, (uint64_t (*)(uint64_t))type metadata accessor for Dataclass, (uint64_t)&unk_1A4694ED8);
}

uint64_t sub_1A44369E0()
{
  return sub_1A4436344(&qword_1EE71C4B0, (uint64_t (*)(uint64_t))type metadata accessor for Dataclass, (uint64_t)&unk_1A4694EB0);
}

uint64_t sub_1A4436A0C()
{
  return sub_1A4436344(&qword_1EE71C4B8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1A4694FE8);
}

uint64_t sub_1A4436A38()
{
  return sub_1A4436344((unint64_t *)&unk_1EE71C4C0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1A4694FBC);
}

uint64_t sub_1A4436A64()
{
  return sub_1A4436344(&qword_1ED23E808, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1A4695058);
}

uint64_t sub_1A4436A90()
{
  return sub_1A4436344(&qword_1EE71C4D0, (uint64_t (*)(uint64_t))type metadata accessor for REMRecurrenceFrequency, (uint64_t)&unk_1A4695154);
}

uint64_t sub_1A4436ABC()
{
  return sub_1A4436344(&qword_1EE71C4D8, (uint64_t (*)(uint64_t))type metadata accessor for REMSortingStyle, (uint64_t)&unk_1A469523C);
}

uint64_t sub_1A4436AE8()
{
  return sub_1A4436344(&qword_1EE71C4E0, (uint64_t (*)(uint64_t))type metadata accessor for REMSortingStyle, (uint64_t)&unk_1A4695214);
}

uint64_t sub_1A4436B14()
{
  return sub_1A4436344(&qword_1EE71C4E8, (uint64_t (*)(uint64_t))type metadata accessor for REMSortingStyle, (uint64_t)&unk_1A46952A4);
}

uint64_t sub_1A4436B40()
{
  return sub_1A4436344(&qword_1EE71C4F0, (uint64_t (*)(uint64_t))type metadata accessor for Options, (uint64_t)&unk_1A46953E8);
}

uint64_t sub_1A4436B6C()
{
  return sub_1A4436344(&qword_1EE71C4F8, (uint64_t (*)(uint64_t))type metadata accessor for Options, (uint64_t)&unk_1A46953B4);
}

uint64_t sub_1A4436B98()
{
  return sub_1A4436344(&qword_1EE71C500, (uint64_t (*)(uint64_t))type metadata accessor for Options, (uint64_t)&unk_1A4695414);
}

uint64_t sub_1A4436BC4()
{
  return sub_1A4436344(&qword_1EE71C508, (uint64_t (*)(uint64_t))type metadata accessor for Options, (uint64_t)&unk_1A4695450);
}

uint64_t sub_1A4436BF0()
{
  return sub_1A4436344(&qword_1EE71C510, (uint64_t (*)(uint64_t))type metadata accessor for NLTag, (uint64_t)&unk_1A4695584);
}

uint64_t sub_1A4436C1C()
{
  return sub_1A4436344(&qword_1EE71C518, (uint64_t (*)(uint64_t))type metadata accessor for NLTag, (uint64_t)&unk_1A4695558);
}

uint64_t sub_1A4436C48()
{
  return sub_1A4436344(&qword_1EE71C520, (uint64_t (*)(uint64_t))type metadata accessor for NLTag, (uint64_t)&unk_1A46955F4);
}

uint64_t sub_1A4436C74()
{
  return sub_1A4436344(&qword_1EE71C528, (uint64_t (*)(uint64_t))type metadata accessor for REMAlarmVehicleTriggerEvent, (uint64_t)&unk_1A46956F0);
}

uint64_t sub_1A4436CA0()
{
  return sub_1A4436344(&qword_1EE71C530, (uint64_t (*)(uint64_t))type metadata accessor for REMAlarmProximity, (uint64_t)&unk_1A4695790);
}

uint64_t sub_1A4436CCC()
{
  return sub_1A4436344(&qword_1EE71C538, (uint64_t (*)(uint64_t))type metadata accessor for Dataclass, (uint64_t)&unk_1A4694F40);
}

unint64_t sub_1A4436CFC()
{
  unint64_t result;

  result = qword_1EE71C540;
  if (!qword_1EE71C540)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4694958, &type metadata for REMSuggestedAttributesAccuracy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71C540);
  }
  return result;
}

unint64_t sub_1A4436D44()
{
  unint64_t result;

  result = qword_1EE71C548;
  if (!qword_1EE71C548)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4694980, &type metadata for REMSuggestedAttributesAccuracy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71C548);
  }
  return result;
}

uint64_t sub_1A4436D88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5374636572726F63 && a2 == 0xED0000656C706D61;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636572726F636E69 && a2 == 0xEF656C706D615374 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A4436F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void type metadata accessor for REMHashtagType(uint64_t a1)
{
  sub_1A4436F70(a1, (unint64_t *)&unk_1EE71C5C0);
}

void sub_1A4436F70(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t Diff.RemainingIndex.from.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Diff.RemainingIndex.from.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Diff.RemainingIndex.from.modify())()
{
  return nullsub_1;
}

uint64_t Diff.RemainingIndex.to.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t Diff.RemainingIndex.to.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*Diff.RemainingIndex.to.modify())()
{
  return nullsub_1;
}

BOOL static Diff.RemainingIndex.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_1A4437034(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::Int __swiftcall Diff.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t Diff.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Diff.elements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*Diff.elements.modify())()
{
  return nullsub_1;
}

uint64_t Diff.remainingIndexes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Diff.remainingIndexes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Diff.remainingIndexes.modify())()
{
  return nullsub_1;
}

ReminderKitInternal::Diff __swiftcall Diff.init(elements:remainingIndexes:)(Swift::OpaquePointer elements, Swift::OpaquePointer remainingIndexes)
{
  Swift::OpaquePointer *v2;
  ReminderKitInternal::Diff result;

  v2->_rawValue = elements._rawValue;
  v2[1]._rawValue = remainingIndexes._rawValue;
  result.remainingIndexes = remainingIndexes;
  result.elements = elements;
  return result;
}

uint64_t sub_1A44370E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t DiffProtocol.startIndex.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 24))();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1A443710C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t DiffProtocol.endIndex.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v2 = (*(uint64_t (**)(void))(a2 + 24))();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = MEMORY[0x1A859E4AC](v2, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t (*sub_1A4437188(uint64_t (*result)(), unint64_t *a2))()
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    v4 = *(_QWORD *)v2 + 24 * v3;
    v5 = *(_BYTE *)(v4 + 48);
    *(_OWORD *)result = *(_OWORD *)(v4 + 32);
    *((_BYTE *)result + 16) = v5;
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A44371D4@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;

  v3 = *result;
  if (*result < 0 || (v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    v5 = v2[1];
    a2[2] = result;
    a2[3] = v5;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A4437220@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  v4 = *(_QWORD *)(v2 + 16);
  a1[2] = 0;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1A4437250()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

void sub_1A4437264(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1A4437274@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44372AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_1A45D59B0(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1A44372E0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;

  v2 = *result;
  v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result)
    return 0;
  v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    result = 0;
    v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      result = (uint64_t *)((char *)result + 1);
      if (v4 == result)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1A4437338(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_1A4437354(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_1A4437370(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

_QWORD *sub_1A443738C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_1A44373A4(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

__n128 sub_1A44373BC@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = 0;
  return result;
}

uint64_t sub_1A44373CC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1A44373D8()
{
  return 2;
}

_QWORD *sub_1A44373E0()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = sub_1A44599D8(*v0, v0[1]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *sub_1A4437428(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t *v3;

  return sub_1A45D3964(a1, a2, a3, *v3, v3[1]);
}

uint64_t sub_1A4437430()
{
  return sub_1A4690ABC();
}

_QWORD *Diff.Element.init(trace:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (__OFADD__(*result, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = result[3];
  v3 = result[1];
  if (*result + 1 == result[2])
  {
    if (!__OFADD__(v3, 1))
    {
      if (v3 + 1 == v2)
      {
        *(_QWORD *)a2 = 0;
        *(_QWORD *)(a2 + 8) = 0;
        *(_BYTE *)(a2 + 16) = -1;
        return result;
      }
      goto LABEL_6;
    }
LABEL_10:
    __break(1u);
    return result;
  }
LABEL_6:
  if (v3 >= v2)
  {
    *(_QWORD *)a2 = *result;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 1;
  }
  else
  {
    *(_QWORD *)a2 = v3;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
  }
  return result;
}

uint64_t Point.x.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Point.hash(into:)()
{
  sub_1A4691C98();
  return sub_1A4691C98();
}

uint64_t Point.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A4437550()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A44375A8()
{
  sub_1A4691C98();
  return sub_1A4691C98();
}

uint64_t sub_1A44375E0()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

__n128 Trace.from.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

__n128 Trace.to.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[1];
  *a1 = result;
  return result;
}

uint64_t Trace.D.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t Trace.hash(into:)()
{
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691C98();
}

uint64_t Trace.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A4437744()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A44377D0()
{
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691C98();
}

uint64_t sub_1A4437830()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t Collection.diff(_:isEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  return Collection.diff(_:identitiesEqual:contentsEqual:)(a1, a2, a3, 0, 0, a4, a5, a6);
}

uint64_t Collection.diff(_:identitiesEqual:contentsEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  _QWORD *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  char v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  BOOL v39;
  char v40;
  __int128 v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  __int128 v47;
  _QWORD v48[2];
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  __int128 v64;

  v54 = a5;
  v63 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v51 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v52 = AssociatedTypeWitness;
  v16 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v50 = (uint64_t)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v62 = (uint64_t)v48 - v18;
  v53 = a1;
  v55 = a6;
  v56 = a7;
  v57 = v8;
  result = (uint64_t)Collection.outputDiffPathTraces(to:isEqual:)(a1, a2, a3, a6, a7);
  v20 = *(_QWORD *)(result + 16);
  if (!v20)
  {
    result = swift_bridgeObjectRelease();
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_36:
    *a8 = v23;
    a8[1] = v22;
    return result;
  }
  v48[1] = result;
  v49 = a8;
  v21 = (uint64_t *)(result + 56);
  v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v24 = *(_OWORD *)(v21 - 3);
    v25 = *(v21 - 3);
    if (__OFADD__(v25, 1))
      break;
    v26 = *(v21 - 1);
    v27 = *v21;
    v28 = *(v21 - 2);
    v64 = *(_OWORD *)(v21 - 3);
    if (v25 + 1 != v26)
    {
      v38 = 0;
      v39 = *((_QWORD *)&v24 + 1) < v27;
      v40 = 0;
      if (!v39)
        goto LABEL_24;
      goto LABEL_25;
    }
    v29 = *((_QWORD *)&v24 + 1) + 1;
    if (__OFADD__(*((_QWORD *)&v24 + 1), 1))
      goto LABEL_38;
    LODWORD(v61) = v29 == v27;
    if (v29 == v27 && v63 != 0)
    {
      v60 = v20;
      swift_retain();
      v58 = v23;
      sub_1A45D2598(v62);
      v59 = v22;
      v31 = v50;
      v32 = v63;
      sub_1A45D2598(v50);
      v33 = v32(v62, v31);
      sub_1A443A6F8((uint64_t)v32);
      v34 = v52;
      v35 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v36 = v31;
      v22 = v59;
      v35(v36, v52);
      v37 = v34;
      v20 = v60;
      result = ((uint64_t (*)(uint64_t, uint64_t))v35)(v62, v37);
      v23 = v58;
      if ((v33 & 1) == 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v40 = 1;
        v38 = 2;
        v41 = v64;
        if ((result & 1) != 0)
        {
          v41 = v64;
          goto LABEL_26;
        }
LABEL_33:
        v61 = v41;
        result = (uint64_t)sub_1A44392D0(0, v23[2] + 1, 1, v23, &qword_1ED242268);
        v41 = v61;
        v23 = (_QWORD *)result;
LABEL_26:
        v43 = v23[2];
        v42 = v23[3];
        if (v43 >= v42 >> 1)
        {
          v61 = v41;
          result = (uint64_t)sub_1A44392D0((_QWORD *)(v42 > 1), v43 + 1, 1, v23, &qword_1ED242268);
          v41 = v61;
          v23 = (_QWORD *)result;
        }
        v23[2] = v43 + 1;
        v44 = &v23[3 * v43];
        *((_OWORD *)v44 + 2) = v41;
        *((_BYTE *)v44 + 48) = v38;
        if ((v40 & 1) == 0)
          goto LABEL_4;
LABEL_29:
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1A4438C58(0, v22[2] + 1, 1, v22);
          v22 = (_QWORD *)result;
        }
        v46 = v22[2];
        v45 = v22[3];
        v47 = v64;
        if (v46 >= v45 >> 1)
        {
          result = (uint64_t)sub_1A4438C58((_QWORD *)(v45 > 1), v46 + 1, 1, v22);
          v47 = v64;
          v22 = (_QWORD *)result;
        }
        v22[2] = v46 + 1;
        *(_OWORD *)&v22[2 * v46 + 4] = v47;
        goto LABEL_4;
      }
    }
    if (v28 + 1 != v27)
    {
      if (v28 < v27)
      {
        v38 = 0;
        v40 = v61;
        goto LABEL_25;
      }
      v40 = v61;
LABEL_24:
      v38 = 1;
      v28 = v25;
LABEL_25:
      result = swift_isUniquelyReferenced_nonNull_native();
      v41 = (unint64_t)v28;
      if ((result & 1) == 0)
        goto LABEL_33;
      goto LABEL_26;
    }
    if (v29 == v27)
      goto LABEL_29;
LABEL_4:
    v21 += 5;
    if (!--v20)
    {
      result = swift_bridgeObjectRelease();
      a8 = v49;
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

_QWORD *Collection.outputDiffPathTraces(to:isEqual:)(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t *v5;
  _QWORD *v6;

  v5 = (unint64_t *)Collection.diffTraces(to:isEqual:)(a1, a2, a3, a4, a5);
  sub_1A4690E4C();
  sub_1A4690E4C();
  v6 = sub_1A443A9C8(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Collection.diffTraces(to:isEqual:)(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v10 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A4690E4C();
  (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, a1, a4);
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a4);
  }
  else
  {
    v14 = sub_1A4690E4C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a4);
    if (!v14)
      return MEMORY[0x1E0DEE9D8];
  }
  if (!sub_1A4690E4C())
    return sub_1A443A708();
  if (sub_1A4690E4C())
    return sub_1A4437F30(a1, a2, a3, a4, a5);
  return sub_1A4437E54();
}

uint64_t sub_1A4437E54()
{
  uint64_t result;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A4690E4C();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = MEMORY[0x1E0DEE9D8];
    if (v1)
    {
      v7 = MEMORY[0x1E0DEE9D8];
      sub_1A445A860(0, v1, 0);
      v2 = 0;
      result = v7;
      v3 = *(_QWORD *)(v7 + 16);
      v4 = 40 * v3;
      do
      {
        v8 = result;
        v5 = *(_QWORD *)(result + 24);
        if (v3 + v2 >= v5 >> 1)
        {
          sub_1A445A860(v5 > 1, v3 + v2 + 1, 1);
          result = v8;
        }
        *(_QWORD *)(result + 16) = v3 + v2 + 1;
        v6 = (_QWORD *)(result + v4);
        v6[4] = v2;
        v6[5] = 0;
        v6[7] = 0;
        v6[8] = 0;
        v6[6] = v2 + 1;
        v4 += 40;
        ++v2;
      }
      while (v1 != v2);
    }
  }
  return result;
}

uint64_t sub_1A4437F30(unint64_t a1, uint64_t (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;
  _BOOL4 v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  _BOOL4 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  BOOL v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BOOL4 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t AssociatedTypeWitness;
  unint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _BOOL4 v76;
  int v77;
  __int128 v78;
  uint64_t v79;
  __int128 v80;
  _QWORD v81[3];
  char v82;
  uint64_t v83;
  char v84;

  v64 = a3;
  v63 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v60 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v69 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v68 = (uint64_t)&v53 - v12;
  v72 = v5;
  v13 = sub_1A4690E4C();
  v62 = a1;
  v14 = sub_1A4690E4C();
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  if (__OFADD__(v15, 1))
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  v6 = v14;
  v54 = v13 + v14;
  v16 = (_QWORD *)sub_1A44A6218(0xFFFFFFFFFFFFFFFFLL, v15 + 1);
  a1 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  v65 = v16;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_6;
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
LABEL_85:
  result = (uint64_t)sub_1A4614350(v65);
  v65 = (_QWORD *)result;
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_86;
LABEL_6:
  if (a1 >= v65[2])
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  v71 = v65 + 4;
  v65[a1 + 4] = 0;
  if (v54 < 0)
  {
LABEL_88:
    __break(1u);
    return result;
  }
  v18 = 0;
  v75 = -v6;
  v19 = __OFSUB__(0, v6);
  v76 = v19;
  v70 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v66 = a5;
  a1 = (unint64_t)v65;
  v67 = a4;
  v59 = v13;
  while (2)
  {
    v77 = 0;
    v73 = v18;
    v74 = 0;
    LOBYTE(v20) = 0;
    v21 = -v18;
LABEL_13:
    a4 = v67;
    while (1)
    {
      v22 = v21;
      if (v21 >= v18)
        break;
      v20 = !__OFADD__(v21, 2);
      v23 = 0x8000000000000000;
      if (!__OFADD__(v21, 2))
        v23 = 0;
      v74 = v23;
      if (__OFADD__(v21, 2))
        v21 = 0x7FFFFFFFFFFFFFFFLL;
      else
        v21 += 2;
      if (v76)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        swift_bridgeObjectRelease();
        return (uint64_t)v70;
      }
LABEL_31:
      if (v22 >= v75 && v13 >= v22)
      {
        v24 = v22 + v6;
        if (__OFADD__(v22, v6))
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
LABEL_80:
          __break(1u);
LABEL_81:
          __break(1u);
          goto LABEL_82;
        }
        v25 = v24 - 1;
        if (__OFSUB__(v24, 1))
          goto LABEL_78;
        if ((v25 & 0x8000000000000000) != 0 || v25 >= *(_QWORD *)(a1 + 16))
        {
          v27 = 0;
          v26 = 1;
          v28 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_79;
        }
        else
        {
          v26 = 0;
          v27 = v71[v25];
          v28 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_79;
        }
        v29 = v20;
        if ((v28 & 0x8000000000000000) != 0 || v28 >= *(_QWORD *)(a1 + 16))
        {
          v31 = 0;
          v30 = 1;
        }
        else
        {
          v30 = 0;
          v31 = v71[v28];
        }
        v81[0] = v18;
        v81[1] = v22;
        v81[2] = v27;
        v82 = v26;
        v83 = v31;
        v84 = v30;
        sub_1A4438574(v81, (uint64_t *)&v78);
        v18 = v73;
        v32 = v79;
        v20 = v29;
        if (v79 <= v13)
        {
          v33 = v80;
          if ((uint64_t)v80 <= v6)
          {
            v58 = v80;
            v55 = v21;
            v56 = v20;
            v57 = v78;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v34 = v70;
            else
              v34 = sub_1A4438A2C(0, v70[2] + 1, 1, v70);
            v36 = v34[2];
            v35 = v34[3];
            v37 = v58;
            if (v36 >= v35 >> 1)
            {
              v51 = sub_1A4438A2C((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
              v37 = v58;
              v34 = v51;
            }
            v34[2] = v36 + 1;
            v38 = &v34[5 * v36];
            *((_OWORD *)v38 + 2) = v57;
            v38[6] = v32;
            *(_OWORD *)(v38 + 7) = v37;
            v70 = v34;
            if (v32 < 0 || v33 < 0 || v32 >= v13 || v33 >= v6)
            {
              a4 = v33;
              a5 = v32;
LABEL_62:
              if ((v24 & 0x8000000000000000) == 0)
                goto LABEL_65;
              goto LABEL_80;
            }
            while (1)
            {
              v39 = v6;
              v40 = v68;
              sub_1A45D2598(v68);
              v41 = v69;
              sub_1A45D2598(v69);
              if ((v63(v41, v40) & 1) == 0)
                break;
              v42 = v70;
              v44 = v70[2];
              v43 = v70[3];
              if (v44 >= v43 >> 1)
                v42 = sub_1A4438A2C((_QWORD *)(v43 > 1), v44 + 1, 1, v70);
              v6 = v39;
              a5 = v32 + 1;
              a4 = v33 + 1;
              v42[2] = v44 + 1;
              v70 = v42;
              v45 = &v42[5 * v44];
              v45[4] = v32;
              v45[5] = v33;
              v45[6] = v32 + 1;
              v45[7] = v33 + 1;
              v45[8] = v73;
              v46 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
              v47 = AssociatedTypeWitness;
              v46(v69, AssociatedTypeWitness);
              v46(v68, v47);
              v13 = v59;
              a1 = (unint64_t)v65;
              if (v32 + 1 < v59)
              {
                ++v33;
                ++v32;
                if (a4 < v6)
                  continue;
              }
              goto LABEL_62;
            }
            v48 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
            v49 = AssociatedTypeWitness;
            v48(v69, AssociatedTypeWitness);
            v48(v68, v49);
            a4 = v33;
            a5 = v32;
            v13 = v59;
            v6 = v39;
            a1 = (unint64_t)v65;
            if ((v24 & 0x8000000000000000) != 0)
              goto LABEL_80;
LABEL_65:
            if (v24 >= *(_QWORD *)(a1 + 16))
              goto LABEL_81;
            v71[v24] = a5;
            v50 = a5 < v13;
            a5 = v66;
            v18 = v73;
            LOBYTE(v20) = v56;
            v21 = v55;
            if (!v50 && a4 >= v6)
              goto LABEL_76;
            goto LABEL_13;
          }
        }
      }
    }
    if ((v21 != v18) | v77 & 1)
      goto LABEL_70;
    if (v20)
    {
      v77 = 1;
      v21 = v18;
      v20 = 1;
      if (v76)
        goto LABEL_75;
      goto LABEL_31;
    }
    if (v74 != 0x8000000000000000)
    {
      v20 = 0;
      v77 = 1;
      v21 = v18;
      if (v76)
        goto LABEL_75;
      goto LABEL_31;
    }
LABEL_70:
    if (v18 != v54)
    {
      if (!__OFADD__(v18++, 1))
        continue;
      __break(1u);
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *sub_1A4438574@<X0>(_QWORD *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;

  v2 = *result;
  if (__OFSUB__(0, *result))
  {
    __break(1u);
    goto LABEL_23;
  }
  v3 = result[1];
  v4 = result[4];
  if (v3 == -*result)
  {
LABEL_3:
    if (*((_BYTE *)result + 40))
      v4 = -1;
    v5 = v4 - v3;
    if (!__OFSUB__(v4, v3))
    {
      v6 = v5 - 1;
      if (!__OFSUB__(v5, 1))
      {
        v7 = v4;
LABEL_21:
        *a2 = v4;
        a2[1] = v6;
        a2[2] = v7;
        a2[3] = v5;
        a2[4] = v2;
        return result;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = result[2];
  if (v3 == v2)
  {
    if (!*((_BYTE *)result + 24))
      goto LABEL_17;
LABEL_12:
    v8 = 0;
    goto LABEL_17;
  }
  if ((result[3] & 1) != 0)
    goto LABEL_12;
  if (v8 >= v4)
    v9 = 1;
  else
    v9 = *((_BYTE *)result + 40);
  if ((v9 & 1) == 0)
    goto LABEL_3;
LABEL_17:
  v10 = __OFADD__(v8, 1);
  v7 = v8 + 1;
  if (v10)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v4 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v10 = __OFSUB__(v7, v3);
  v6 = v7 - v3;
  if (!v10)
  {
    v5 = v6;
    goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Collection<>.diff(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD v6[6];

  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  return Collection.diff(_:identitiesEqual:contentsEqual:)(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1A443AB74, (uint64_t)v6, 0, 0, a2, a3, a5);
}

uint64_t Collection<>.diffTraces(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A4438690(a1, a2, a3, a4, (uint64_t)sub_1A443AB74, (uint64_t (*)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))Collection.diffTraces(to:isEqual:));
}

uint64_t Collection<>.outputDiffPathTraces(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A4438690(a1, a2, a3, a4, (uint64_t)sub_1A443AB74, (uint64_t (*)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))Collection.outputDiffPathTraces(to:isEqual:));
}

uint64_t sub_1A4438690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))
{
  _QWORD v7[6];

  v7[2] = a2;
  v7[3] = a3;
  v7[4] = a4;
  return a6(a1, a5, v7, a2, a3);
}

uint64_t DiffProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  swift_getAssociatedTypeWitness();
  sub_1A4690CA8();
  return swift_bridgeObjectRelease();
}

uint64_t Diff.Element.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) != 1)
    {
      v3 = 10325;
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      goto LABEL_7;
    }
    v1 = 10308;
  }
  else
  {
    v1 = 10313;
  }
  v3 = v1;
LABEL_7:
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return v3;
}

uint64_t Diff.RemainingIndex.debugDescription.getter()
{
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return 40;
}

_QWORD *sub_1A4438920(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B1C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4438A2C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242270);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443A8DC(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4438B4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243008);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443A7F4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4438C58(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242260);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B0DC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4438D64(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C898);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443A7F4(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4438E70(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C860);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B2B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4438F7C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C890);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443B3A4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A44390A0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439F3C(a1, a2, a3, a4, &qword_1ED23ECE8);
}

_QWORD *sub_1A44390AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242618);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B498(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A44391B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242288);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B788(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A44392C4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A44392D0(a1, a2, a3, a4, &qword_1ED242258);
}

_QWORD *sub_1A44392D0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443B878(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A44393EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C888);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B964(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A44394F8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C878);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443BA54(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4439618(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C870);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443B58C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4439734(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439760(a1, a2, a3, a4, &qword_1EE71C7C8);
}

uint64_t sub_1A4439740(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C810, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

_QWORD *sub_1A4439754(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439760(a1, a2, a3, a4, &qword_1EE71C868);
}

_QWORD *sub_1A4439760(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4])
          memmove(v14, a4 + 4, 8 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443A7F4(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4439868(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, (uint64_t *)&unk_1EE71ED30, type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate);
}

uint64_t sub_1A443987C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1A469162C();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A443BE4C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1A4439A88(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C850);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443BC50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4439B94(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C848);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4])
          memmove(v12, a4 + 4, 80 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443BD58(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4439CB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C840, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
}

uint64_t sub_1A4439CC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C838, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
}

uint64_t sub_1A4439CDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C830, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
}

uint64_t sub_1A4439CF0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C828, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
}

uint64_t sub_1A4439D04(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C820, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
}

uint64_t sub_1A4439D18(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A443987C(a1, a2, a3, a4, &qword_1EE71C818, (uint64_t (*)(_QWORD))type metadata accessor for REMAnalyticsEvent);
}

char *sub_1A4439D2C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF8);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A443BF64(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4439E24(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C808);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B0DC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4439F30(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439F3C(a1, a2, a3, a4, &qword_1ED23EB50);
}

_QWORD *sub_1A4439F3C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v14 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443B680(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A443A044(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439F3C(a1, a2, a3, a4, &qword_1EE71C7F0);
}

_QWORD *sub_1A443A050(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439F3C(a1, a2, a3, a4, &qword_1EE71C800);
}

_QWORD *sub_1A443A05C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A4439F3C(a1, a2, a3, a4, &qword_1EE71C7F8);
}

_QWORD *sub_1A443A068(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443C048(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A443A174(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7D8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443C150(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A443A280(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7D0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443C258(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A443A38C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443BB60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A443A498(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7B8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A443C348(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1A443A5A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7B0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1A443C450(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

BOOL _s19ReminderKitInternal5TraceV2eeoiySbAC_ACtFZ_0(int64x2_t *a1, int64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*a1, *a2), (int32x4_t)vceqq_s64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].i64[0] == a2[2].i64[0];
}

uint64_t sub_1A443A6F8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1A443A708()
{
  uint64_t result;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  result = sub_1A4690E4C();
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v1 = result;
    result = MEMORY[0x1E0DEE9D8];
    if (v1)
    {
      v7 = MEMORY[0x1E0DEE9D8];
      sub_1A445A860(0, v1, 0);
      v2 = 0;
      result = v7;
      v3 = *(_QWORD *)(v7 + 16);
      v4 = 40 * v3 + 32;
      do
      {
        v8 = result;
        v5 = *(_QWORD *)(result + 24);
        if (v3 + v2 >= v5 >> 1)
        {
          sub_1A445A860(v5 > 1, v3 + v2 + 1, 1);
          result = v8;
        }
        *(_QWORD *)(result + 16) = v3 + v2 + 1;
        v6 = (_QWORD *)(result + v4);
        *v6 = 0;
        v6[1] = v2;
        v6[2] = 0;
        v6[3] = v2 + 1;
        v6[4] = 0;
        v4 += 40;
        ++v2;
      }
      while (v1 != v2);
    }
  }
  return result;
}

char *sub_1A443A7F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

char *sub_1A443A8DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 40 * a1 + 32);
    v6 = 40 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

_QWORD *sub_1A443A9C8(unint64_t *a1)
{
  int64_t v1;
  unint64_t *v2;
  unint64_t *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  __int128 v16;
  __int128 v17;

  v1 = a1[2];
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = a1;
  v3 = &a1[5 * v1];
  v4 = *(v3 - 1);
  v16 = *((_OWORD *)v3 + 1);
  v17 = *(_OWORD *)v3;
  v5 = sub_1A4438A2C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = v5[2];
  v6 = v5[3];
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
    goto LABEL_20;
  while (1)
  {
    v5[2] = v8;
    v9 = &v5[5 * v7];
    v9[4] = v4;
    *(_OWORD *)(v9 + 5) = v17;
    *(_OWORD *)(v9 + 7) = v16;
    v8 = v17;
    if (!(v4 | (unint64_t)v17))
      return v5;
    swift_bridgeObjectRetain();
    v10 = v1 - 1;
    *(_QWORD *)&v17 = v2;
    v6 = (unint64_t)&v2[5 * v1];
    v2 = (unint64_t *)(v6 + 8);
    while (v10 < v1)
    {
      v6 = *v2;
      if (*v2 == v4 && v2[1] == v8)
      {
        v12 = *(v2 - 2);
        v13 = *(v2 - 1);
        v14 = v2[2];
        v7 = v5[2];
        if (v7 >= v5[3] >> 1)
        {
          v5 = sub_1A4438A2C((_QWORD *)1, v7 + 1, 1, v5);
          v7 = v5[2];
        }
        memmove(v5 + 9, v5 + 4, 40 * v7);
        v5[2] = v7 + 1;
        v5[4] = v12;
        v5[5] = v13;
        v5[6] = v4;
        v5[7] = v8;
        v5[8] = v14;
        v6 = v12 | v13;
        if (!(v12 | v13))
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v5;
        }
        v4 = v12;
        v8 = v13;
      }
      --v10;
      v2 -= 5;
      if (v10 == -1)
        goto LABEL_17;
    }
    __break(1u);
LABEL_20:
    v5 = sub_1A4438A2C((_QWORD *)(v6 > 1), v8, 1, v5);
  }
}

uint64_t sub_1A443AB78()
{
  swift_getAssociatedTypeWitness();
  return sub_1A4690864() & 1;
}

unint64_t sub_1A443ABE0(uint64_t a1)
{
  unint64_t result;

  result = sub_1A443AC04();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A443AC04()
{
  unint64_t result;

  result = qword_1ED2420D8;
  if (!qword_1ED2420D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for Diff, &type metadata for Diff);
    atomic_store(result, (unint64_t *)&qword_1ED2420D8);
  }
  return result;
}

unint64_t sub_1A443AC4C()
{
  unint64_t result;

  result = qword_1ED2420D0;
  if (!qword_1ED2420D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for Diff, &type metadata for Diff);
    atomic_store(result, (unint64_t *)&qword_1ED2420D0);
  }
  return result;
}

uint64_t sub_1A443AC90()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1A443AC9C()
{
  return sub_1A443AD20(&qword_1EE71C770, &qword_1EE71C778, MEMORY[0x1E0DEA228]);
}

uint64_t sub_1A443ACC8()
{
  return sub_1A443AD20(&qword_1EE71C780, &qword_1EE71C788, MEMORY[0x1E0DEDE48]);
}

uint64_t sub_1A443ACF4()
{
  return sub_1A443AD20(&qword_1EE71C790, &qword_1EE71C798, MEMORY[0x1E0DEC908]);
}

uint64_t sub_1A443AD20(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1A85A0000](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A443AD64()
{
  unint64_t result;

  result = qword_1EE71C7A0;
  if (!qword_1EE71C7A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for Point, &type metadata for Point);
    atomic_store(result, (unint64_t *)&qword_1EE71C7A0);
  }
  return result;
}

unint64_t sub_1A443ADAC()
{
  unint64_t result;

  result = qword_1EE71C7A8;
  if (!qword_1EE71C7A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for Trace, &type metadata for Trace);
    atomic_store(result, (unint64_t *)&qword_1EE71C7A8);
  }
  return result;
}

uint64_t dispatch thunk of DiffProtocol.elements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for Diff()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19ReminderKitInternal4DiffVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Diff(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for Diff(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Diff(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Diff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Diff()
{
  return &type metadata for Diff;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Diff.Element(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Diff.Element(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A443B024(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1A443B02C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Diff.Element()
{
  return &type metadata for Diff.Element;
}

ValueMetadata *type metadata accessor for Diff.RemainingIndex()
{
  return &type metadata for Diff.RemainingIndex;
}

ValueMetadata *type metadata accessor for Point()
{
  return &type metadata for Point;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for Trace(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Trace(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Trace()
{
  return &type metadata for Trace;
}

char *sub_1A443B0DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B1C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B2B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B3A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B498(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B58C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B680(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242290);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B788(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

char *sub_1A443B878(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443B964(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443BA54(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C880);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443BB60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443BC50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C858);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443BD58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 80 * a1 + 32;
    v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443BE4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

char *sub_1A443BF64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443C048(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443C150(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443C258(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A443C348(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

char *sub_1A443C450(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.minK.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.maxK.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.bestK.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t KMeansAutoTuner.KMeanTuningHistory.modelMetricHistory.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static KMeansAutoTuner.TuningMethod.== infix(_:_:)()
{
  return 1;
}

uint64_t KMeansAutoTuner.TuningMethod.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t KMeansAutoTuner.TuningMethod.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A443C5E8()
{
  return 1;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO011AccountPathE0O9hashValueSivg_0()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A443C630()
{
  return sub_1A4691C98();
}

uint64_t sub_1A443C654()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t KMeansAutoTuner.__allocating_init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;

  v11 = swift_allocObject();
  KMeansAutoTuner.init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(a1, v12, a3, a4, a5, a6);
  return v11;
}

uint64_t KMeansAutoTuner.init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t result;
  uint64_t inited;
  _QWORD *v19;
  _QWORD *v20;
  double v21;
  double v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  double *v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  char v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  double v51;
  double v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD v62[5];
  uint64_t v63;

  v8 = v6;
  v63 = a5;
  v10 = a4;
  if (a3 >= a4)
  {
    sub_1A443E440();
    swift_allocError();
    *v16 = a3;
    v16[1] = v10;
    goto LABEL_5;
  }
  v13 = v7;
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 40);
  if (v14 < v10)
  {
    sub_1A444A5F4();
    swift_allocError();
    *v15 = v10;
    v15[1] = v14;
LABEL_5:
    swift_willThrow();
    swift_release();
    goto LABEL_6;
  }
  v6[4] = a3;
  v6[5] = v10;
  sub_1A443E484(a6, (uint64_t)(v6 + 6));
  if (__OFSUB__(v10, a3))
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    result = sub_1A4691C08();
    __break(1u);
    return result;
  }
  v59 = v6 + 6;
  if (v10 - a3 == 1)
  {
    v6[2] = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C8A8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
    *(_QWORD *)(inited + 32) = a3;
    sub_1A443E484(a6, (uint64_t)v62);
    type metadata accessor for KMeans();
    swift_allocObject();
    swift_retain();
    v19 = KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(a3, a1, v63, (uint64_t)v62, 0.0001);
    if (!v7)
    {
      *(_QWORD *)(inited + 40) = v19;
      v55 = sub_1A444A4F8((_QWORD *)inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C8B0);
      swift_arrayDestroy();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a6);
      v6[3] = v55;
      return (uint64_t)v8;
    }
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C8B0);
    swift_arrayDestroy();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(a6);
    a6 = (uint64_t)(v6 + 6);
LABEL_6:
    __swift_destroy_boxed_opaque_existential_1(a6);
    swift_deallocPartialClassInstance();
    return (uint64_t)v8;
  }
  v57 = v10 - a3;
  v58 = v6;
  v56 = a3;
  if (a3 == v10)
  {
    v61 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v21 = INFINITY;
    v22 = -INFINITY;
    goto LABEL_14;
  }
  v28 = a3;
  v61 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v21 = INFINITY;
  v22 = -INFINITY;
  v60 = v10;
  while (1)
  {
    if (v28 >= v10)
    {
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    sub_1A443E484(a6, (uint64_t)v62);
    type metadata accessor for KMeans();
    swift_allocObject();
    swift_retain();
    v29 = (double *)KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(v28, a1, v63, (uint64_t)v62, 0.0001);
    if (v13)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v58;
      a6 = (uint64_t)v59;
      goto LABEL_6;
    }
    v30 = v29;
    v31 = a1;
    v32 = a6;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62[0] = v20;
    v35 = sub_1A443E654(v28);
    v36 = v20[2];
    v37 = (v34 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
      goto LABEL_64;
    v39 = v34;
    if (v20[3] >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v20 = (_QWORD *)v62[0];
        if ((v34 & 1) != 0)
          goto LABEL_34;
      }
      else
      {
        sub_1A4448218((uint64_t *)&unk_1EE71CBE0);
        v20 = (_QWORD *)v62[0];
        if ((v39 & 1) != 0)
          goto LABEL_34;
      }
    }
    else
    {
      sub_1A44426E4(v38, isUniquelyReferenced_nonNull_native, (uint64_t *)&unk_1EE71CBE0);
      v40 = sub_1A443E654(v28);
      if ((v39 & 1) != (v41 & 1))
        goto LABEL_71;
      v35 = v40;
      v20 = (_QWORD *)v62[0];
      if ((v39 & 1) != 0)
      {
LABEL_34:
        v42 = v20[7];
        swift_release();
        *(_QWORD *)(v42 + 8 * v35) = v30;
        goto LABEL_38;
      }
    }
    v20[(v35 >> 6) + 8] |= 1 << v35;
    v43 = 8 * v35;
    *(_QWORD *)(v20[6] + v43) = v28;
    *(_QWORD *)(v20[7] + v43) = v30;
    v44 = v20[2];
    v45 = __OFADD__(v44, 1);
    v46 = v44 + 1;
    if (v45)
      goto LABEL_67;
    v20[2] = v46;
LABEL_38:
    swift_bridgeObjectRelease();
    v47 = v28 - 1;
    if (__OFSUB__(v28, 1))
      goto LABEL_65;
    if (v20[2])
    {
      v48 = sub_1A443E654(v28 - 1);
      if ((v49 & 1) != 0)
        break;
    }
    swift_release();
    a6 = v32;
    a1 = v31;
    v13 = 0;
LABEL_24:
    ++v28;
    v10 = v60;
    if (v60 == v28)
      goto LABEL_14;
  }
  v50 = *(_QWORD *)(v20[7] + 8 * v48);
  swift_beginAccess();
  v51 = v30[15];
  swift_beginAccess();
  v52 = v51 - *(double *)(v50 + 120);
  if (v52 < 0.0)
  {
    if (v52 < v21)
      v21 = v52;
    if (v22 <= v52)
      v22 = v52;
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v61 = sub_1A4438D64(0, v61[2] + 1, 1, v61);
    a6 = v32;
    v54 = v61[2];
    v53 = v61[3];
    a1 = v31;
    if (v54 >= v53 >> 1)
      v61 = sub_1A4438D64((_QWORD *)(v53 > 1), v54 + 1, 1, v61);
    v13 = 0;
    v61[2] = v54 + 1;
    *(double *)&v61[v54 + 4] = v52;
    swift_release();
    swift_release();
    goto LABEL_24;
  }
  swift_release();
  if (v28)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v32);
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  a6 = v32;
  v10 = v60;
LABEL_14:
  v23 = v57;
  v24 = v57 - 2;
  if (__OFSUB__(v57, 2))
    goto LABEL_69;
  if ((v24 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v25 = v61[2];
  if (v24 >= v25)
    goto LABEL_70;
  v26 = (v22 + v21) * 0.5;
  if (v26 < *(double *)&v61[v24 + 4])
  {
    while (v23 - 2 >= 1)
    {
      if (v57 - 3 >= (uint64_t)v25)
        goto LABEL_66;
      v27 = *(double *)&v61[v23-- + 1];
      if (v26 >= v27)
      {
        v24 = v23 - 2;
        goto LABEL_54;
      }
    }
    v24 = -1;
  }
LABEL_54:
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a6);
  swift_bridgeObjectRelease();
  if (v24 == -1)
    goto LABEL_58;
  v47 = v56 + v24;
  if (__OFADD__(v56, v24))
  {
    __break(1u);
LABEL_58:
    v47 = v10 - 1;
  }
LABEL_59:
  v8 = v58;
  v58[2] = v47;
  v58[3] = v20;
  return (uint64_t)v8;
}

unint64_t sub_1A443CDB8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBD0);
  v2 = sub_1A46916E0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v6, (uint64_t)&v15, &qword_1EE71CBD8);
    v7 = v15;
    v8 = v16;
    result = sub_1A443E4C8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1A444A940(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443CEEC(uint64_t a1)
{
  return sub_1A443D130(a1, &qword_1EE71CB98);
}

unint64_t sub_1A443CEF8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E50);
  v2 = sub_1A46916E0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v6, (uint64_t)&v13, &qword_1EE71CBC8);
    v7 = v13;
    result = sub_1A443E750(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1A444A940(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1A443D024(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E820),
        v2 = (_QWORD *)sub_1A46916E0(),
        (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A443E52C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v2[2] = v11;
      v4 += 2;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1A443D124(uint64_t a1)
{
  return sub_1A443D130(a1, &qword_1EE71C9C8);
}

unint64_t sub_1A443D130(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1A46916E0();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A443E4C8(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D244(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71C988);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A00);
  v6 = sub_1A46916E0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v12, (uint64_t)v5, (uint64_t *)&unk_1EE71C988);
    result = sub_1A443E79C((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1A46915B4();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_1A444A940(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D3E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB90);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1A443E4C8(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D4F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E418);
  v2 = sub_1A46916E0();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v6, (uint64_t)v15, &qword_1EE71CA80);
    result = sub_1A443E720((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1A444A940(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D630(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  unsigned __int8 v5;
  char v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAC0);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 33);
  while (1)
  {
    v5 = *(v4 - 1);
    v6 = *v4;
    result = sub_1A443E7EC(v5);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v2[6] + result) = v5;
    *(_BYTE *)(v2[7] + result) = v6;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D728(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAF0);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1A443E750((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D830(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CAE0);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_retain();
    result = sub_1A443E750((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443D938(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  void *v5;
  id v6;
  id v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAF8);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = *(v4 - 1);
    v7 = v5;
    result = sub_1A443E750((uint64_t)v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = 8 * result;
    *(_QWORD *)(v2[6] + v10) = v6;
    *(_QWORD *)(v2[7] + v10) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443DA40(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439F8);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1A443E4C8(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443DB58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CA58);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CA50);
  v6 = sub_1A46916E0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v12, (uint64_t)v5, &qword_1EE71CA58);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1A443E4C8(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_1A46900B4();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443DCF8(uint64_t a1)
{
  return sub_1A443DD68(a1, &qword_1EE71CA08, &qword_1EE71CA10, &qword_1EE71C9E8);
}

unint64_t sub_1A443DD14(uint64_t a1)
{
  return sub_1A443DD68(a1, &qword_1EE71CA18, &qword_1EE71CA20, &qword_1EE71C9F8);
}

unint64_t sub_1A443DD30(uint64_t a1)
{
  return sub_1A443DD68(a1, &qword_1EE71CA28, &qword_1EE71CA30, &qword_1EE71C9F0);
}

unint64_t sub_1A443DD4C(uint64_t a1)
{
  return sub_1A443DD68(a1, &qword_1EE71CA38, &qword_1EE71CA40, &qword_1EE71CA00);
}

unint64_t sub_1A443DD68(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_1A46916E0();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v11, (uint64_t)&v18, a3);
    v12 = v18;
    result = sub_1A443EBD8(v18, a4);
    if ((v14 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v12;
    result = (unint64_t)sub_1A444A940(&v19, (_OWORD *)(v8[7] + 32 * result));
    v15 = v8[2];
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_11;
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443DE94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED241730);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71C9B8);
  v6 = sub_1A46916E0();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1A444ABF4(v12, (uint64_t)v5, qword_1ED241730);
    result = sub_1A443E6BC((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1A46900FC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443E028(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  id v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71C9A8);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    v11 = *v4;
    v5 = *((id *)v4 - 1);
    result = sub_1A443E68C((uint64_t)v5);
    if ((v7 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    v8 = v2[2];
    v9 = __OFADD__(v8, 1);
    v10 = v8 + 1;
    if (v9)
      goto LABEL_11;
    v2[2] = v10;
    v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A443E134(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9A0);
  v2 = (_QWORD *)sub_1A46916E0();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    result = sub_1A443EA68((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

ReminderKitInternal::KMeansAutoTuner::KMeanTuningHistory __swiftcall KMeansAutoTuner.tuningSnapshot()()
{
  Swift::Int isUniquelyReferenced_nonNull_native;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  Swift::Int v9;
  Swift::Int v10;
  void *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  ReminderKitInternal::KMeansAutoTuner::KMeanTuningHistory result;

  v3 = v2[4];
  v4 = v2[5];
  if (v4 < v3)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v5 = v1;
  v6 = v2[2];
  if (v3 != v4)
  {
    v19 = v2[2];
    v8 = v2[3];
    isUniquelyReferenced_nonNull_native = swift_retain();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v20 = v3;
    while (v3 < v4)
    {
      if (*(_QWORD *)(v8 + 16))
      {
        isUniquelyReferenced_nonNull_native = sub_1A443E654(v3);
        if ((v9 & 1) != 0)
        {
          v13 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * isUniquelyReferenced_nonNull_native);
          swift_beginAccess();
          v14 = v13[13];
          v15 = v13[14];
          v16 = v13[15];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            isUniquelyReferenced_nonNull_native = (Swift::Int)sub_1A4438F7C(0, v7[2] + 1, 1, v7);
            v7 = (_QWORD *)isUniquelyReferenced_nonNull_native;
          }
          v18 = v7[2];
          v17 = v7[3];
          if (v18 >= v17 >> 1)
          {
            isUniquelyReferenced_nonNull_native = (Swift::Int)sub_1A4438F7C((_QWORD *)(v17 > 1), v18 + 1, 1, v7);
            v7 = (_QWORD *)isUniquelyReferenced_nonNull_native;
          }
          v7[2] = v18 + 1;
          v12 = &v7[3 * v18];
          v12[4] = v14;
          v12[5] = v15;
          v12[6] = v16;
        }
      }
      if (v4 == ++v3)
      {
        isUniquelyReferenced_nonNull_native = swift_release();
        v6 = v19;
        v3 = v20;
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_15:
  *v5 = v3;
  v5[1] = v4;
  v5[2] = v6;
  v5[3] = (uint64_t)v7;
LABEL_18:
  result.modelMetricHistory._rawValue = v11;
  result.bestK = v10;
  result.maxK = v9;
  result.minK = isUniquelyReferenced_nonNull_native;
  return result;
}

unint64_t KMeansAutoTuner.bestModel()()
{
  uint64_t v0;
  unint64_t result;
  char v2;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    result = sub_1A443E654(*(_QWORD *)(v0 + 16));
    if ((v2 & 1) != 0)
      return swift_retain();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t KMeansAutoTuner.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return v0;
}

uint64_t KMeansAutoTuner.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  return swift_deallocClassInstance();
}

unint64_t sub_1A443E440()
{
  unint64_t result;

  result = qword_1EE71C8A0;
  if (!qword_1EE71C8A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4695E10, &type metadata for KMeansAutoTuner.InvalidSearchingIntervalError);
    atomic_store(result, (unint64_t *)&qword_1EE71C8A0);
  }
  return result;
}

uint64_t sub_1A443E484(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1A443E4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A4691C8C();
  sub_1A4690948();
  v4 = sub_1A4691CC8();
  return sub_1A443EC84(a1, a2, v4);
}

void sub_1A443E52C(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A443E590()
{
  uint64_t v0;
  uint64_t v1;

  sub_1A4690948();
  swift_bridgeObjectRelease();
  v1 = sub_1A4691CC8();
  return sub_1A443ED64(v0, v1);
}

unint64_t sub_1A443E654(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A4691C80();
  return sub_1A44403D0(a1, v2);
}

unint64_t sub_1A443E68C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A4691134();
  return sub_1A443EFF4(a1, v2);
}

unint64_t sub_1A443E6BC(uint64_t a1)
{
  uint64_t v2;

  sub_1A46900FC();
  sub_1A444A950((unint64_t *)&qword_1ED23FE90, MEMORY[0x1E0CB09C8]);
  v2 = sub_1A46907E0();
  return sub_1A443F0FC(a1, v2);
}

unint64_t sub_1A443E720(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A469135C();
  return sub_1A443F234(a1, v2);
}

unint64_t sub_1A443E750(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A4691134();
  return sub_1A443F2F8(a1, v2, (unint64_t *)&qword_1ED2440D8);
}

unint64_t sub_1A443E79C(uint64_t a1)
{
  uint64_t v2;

  sub_1A46915B4();
  v2 = sub_1A46907E0();
  return sub_1A443F408(a1, v2);
}

uint64_t sub_1A443E7EC(uint64_t a1)
{
  uint64_t v2;

  sub_1A4691C8C();
  REMFeatureFlags.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  v2 = sub_1A4691CC8();
  return sub_1A443F530(a1, v2);
}

unint64_t sub_1A443E864(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A4691134();
  return sub_1A443F2F8(a1, v2, &qword_1EE71CB20);
}

uint64_t sub_1A443E8B0(uint64_t a1)
{
  uint64_t v2;

  sub_1A4691C8C();
  sub_1A468D950(a1);
  sub_1A4690948();
  swift_bridgeObjectRelease();
  v2 = sub_1A4691CC8();
  return sub_1A443FA7C(a1, v2);
}

unint64_t sub_1A443E924(void *a1, uint64_t a2, char a3)
{
  char v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = a3 & 1;
  sub_1A4691C8C();
  sub_1A4691C98();
  if ((a3 & 1) != 0)
  {
    v8 = a1;
    sub_1A469114C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v7 = (void *)sub_1A4690B94();
    sub_1A469114C();

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v7 = (void *)sub_1A4690B94();
    sub_1A469114C();
  }

  v9 = sub_1A4691CC8();
  return sub_1A443FF84(a1, a2, v6, v9);
}

unint64_t sub_1A443EA10(unsigned __int8 a1)
{
  uint64_t v2;

  sub_1A4691C8C();
  sub_1A4691C98();
  v2 = sub_1A4691CC8();
  return sub_1A44401BC(a1, v2);
}

unint64_t sub_1A443EA68(uint64_t a1)
{
  uint64_t v2;

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4691C8C();
  sub_1A4690948();
  v2 = sub_1A4691CC8();
  swift_bridgeObjectRelease();
  return sub_1A444025C(a1, v2);
}

unint64_t sub_1A443EAEC(uint64_t a1)
{
  uint64_t v2;

  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  v2 = sub_1A4691CC8();
  return sub_1A444046C(a1, v2);
}

unint64_t sub_1A443EB68(uint64_t a1)
{
  uint64_t v2;

  sub_1A4691C8C();
  sub_1A4691C98();
  v2 = sub_1A4691CC8();
  return sub_1A44403D0(a1, v2);
}

unint64_t sub_1A443EBC0(uint64_t a1)
{
  return sub_1A443EBD8(a1, &qword_1EE71CA48);
}

unint64_t sub_1A443EBCC(uint64_t a1)
{
  return sub_1A443EBD8(a1, &qword_1EE71C9E8);
}

unint64_t sub_1A443EBD8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  v4 = sub_1A46907E0();
  return sub_1A444054C(a1, v4, a2);
}

unint64_t sub_1A443EC54(uint64_t a1)
{
  return sub_1A443EBD8(a1, &qword_1EE71C9F0);
}

unint64_t sub_1A443EC60(uint64_t a1)
{
  return sub_1A443EBD8(a1, &qword_1EE71C9F8);
}

unint64_t sub_1A443EC6C(uint64_t a1)
{
  return sub_1A443EBD8(a1, &qword_1EE71CA00);
}

unint64_t sub_1A443EC78(uint64_t a1)
{
  return sub_1A443EBD8(a1, &qword_1EE71C9D8);
}

unint64_t sub_1A443EC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A4691A40() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A4691A40() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1A443ED64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1A443EFF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for REMObjectID_Codable();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1A4691140();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1A4691140();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1A443F0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1A444A950((unint64_t *)&qword_1ED23FEA0, MEMORY[0x1E0CB09D0]);
      v14 = sub_1A4690864();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1A443F234(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1A444AB84(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1A859EBC0](v9, a1);
      sub_1A444ABC0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1A443F2F8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1A444AA40(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1A4691140();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1A4691140();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1A443F408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1A46915B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      v14 = sub_1A4690864();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

uint64_t sub_1A443F530(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

uint64_t sub_1A443FA7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1A443FF84(void *a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  void *v21;
  char v22;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v8 = v4;
    v9 = a3;
    v10 = ~v6;
    do
    {
      v11 = *(_QWORD *)(v8 + 48) + 24 * v7;
      v12 = *(void **)v11;
      v13 = *(_QWORD *)(v11 + 8);
      if ((*(_BYTE *)(v11 + 16) & 1) != 0)
      {
        if ((v9 & 1) != 0)
        {
          sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
          sub_1A444A990(v12, v13, 1);
          v14 = v12;
          v15 = a1;
          v16 = sub_1A4691140();

          if ((v16 & 1) != 0)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
            v17 = (void *)sub_1A4690B94();
            v18 = (void *)sub_1A4690B94();
            v19 = sub_1A4691140();

            sub_1A444AA18(v12, v13, 1);
            v9 = a3;
            if ((v19 & 1) != 0)
              return v7;
          }
          else
          {
            sub_1A444AA18(v12, v13, 1);
            v9 = a3;
          }
        }
      }
      else if ((v9 & 1) == 0)
      {
        sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
        v20 = (void *)sub_1A4690B94();
        v21 = (void *)sub_1A4690B94();
        v22 = sub_1A4691140();

        sub_1A444AA18(v12, v13, 0);
        if ((v22 & 1) != 0)
          return v7;
      }
      v7 = (v7 + 1) & v10;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1A44401BC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1A444025C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v8 = v7;
    if (v6 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v15 = v14;
          if (v13 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v15 == v16)
            break;
          v18 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1A44403D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1A444046C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    v7 = *(_QWORD *)(v6 + 8 * v5);
    v8 = *(_QWORD *)(a1 + 16);
    v9 = *(_QWORD *)(a1 + 24);
    v10 = *(_QWORD *)(v7 + 16) == v8 && *(_QWORD *)(v7 + 24) == v9;
    if (!v10 && (sub_1A4691A40() & 1) == 0)
    {
      v11 = ~v4;
      do
      {
        v5 = (v5 + 1) & v11;
        if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
          break;
        v12 = *(_QWORD *)(v6 + 8 * v5);
        v13 = *(_QWORD *)(v12 + 16) == v8 && *(_QWORD *)(v12 + 24) == v9;
      }
      while (!v13 && (sub_1A4691A40() & 1) == 0);
    }
  }
  return v5;
}

unint64_t sub_1A444054C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = -1 << *(_BYTE *)(v3 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = ~v4;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    do
    {
      if ((sub_1A4690864() & 1) != 0)
        break;
      v5 = (v5 + 1) & v6;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

uint64_t sub_1A4440614(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E418);
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1A444A940((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1A444AB84(v25, (uint64_t)&v38);
      sub_1A44311F0(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1A469135C();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1A444A940(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4440928(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBD0);
  v6 = sub_1A46916C8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1A444A940(v24, v35);
      }
      else
      {
        sub_1A44311F0((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1A4691C8C();
      sub_1A4690948();
      result = sub_1A4691CC8();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1A444A940(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4440C24(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_1A46915B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A00);
  v39 = a2;
  v10 = sub_1A46916C8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_1A444A940((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_1A44311F0(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    result = sub_1A46907E0();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_1A444A940(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1A4440FA8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB90);
  v37 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A44412B0(uint64_t a1, char a2)
{
  return sub_1A4443458(a1, a2, &qword_1EE71CBC0);
}

uint64_t sub_1A44412BC(uint64_t a1, char a2)
{
  return sub_1A4443458(a1, a2, &qword_1EE71CBB8);
}

uint64_t sub_1A44412C8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBB0);
  v40 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v21);
      v33 = *v32;
      v34 = v32[1];
      v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A4691C8C();
      sub_1A4690948();
      result = sub_1A4691CC8();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v17);
      *v19 = v33;
      v19[1] = v34;
      v19[2] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A44415EC(uint64_t a1, char a2)
{
  return sub_1A4444320(a1, a2, &qword_1EE71CBA0);
}

uint64_t sub_1A44415F8(uint64_t a1, char a2)
{
  return sub_1A4444320(a1, a2, &qword_1EE71C9C8);
}

uint64_t sub_1A4441604(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  char v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBA8);
  v39 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v39 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v31 = *v29;
      v30 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v21);
      v33 = *v32;
      v35 = v32[1];
      v34 = v32[2];
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1A4691C8C();
      sub_1A4690948();
      result = sub_1A4691CC8();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v31;
      v18[1] = v30;
      v19 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 24 * v17);
      *v19 = v33;
      v19[1] = v35;
      v19[2] = v34;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4441928(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E50);
  v6 = sub_1A46916C8();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v2;
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v8 + 63) >> 6;
    v13 = v6 + 64;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v12)
          goto LABEL_34;
        v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v12)
            goto LABEL_34;
          v20 = v9[v15];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_34:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v33;
                goto LABEL_41;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v9 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v15 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_43;
                if (v15 >= v12)
                  goto LABEL_34;
                v20 = v9[v15];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v15 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v18);
      v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((a2 & 1) != 0)
      {
        sub_1A444A940(v23, v34);
      }
      else
      {
        sub_1A44311F0((uint64_t)v23, (uint64_t)v34);
        v24 = v22;
      }
      result = sub_1A4691134();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v22;
      result = (uint64_t)sub_1A444A940(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v16));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v7;
  return result;
}

uint64_t sub_1A4441BF8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB88);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1A4691C80();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4441EAC(uint64_t a1, char a2)
{
  return sub_1A4442184(a1, a2, &qword_1EE71CB80);
}

uint64_t sub_1A4441EB8(uint64_t a1, char a2)
{
  return sub_1A44426E4(a1, a2, &qword_1EE71CB38);
}

uint64_t sub_1A4441EC4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB40);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1A4691C80();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4442178(uint64_t a1, char a2)
{
  return sub_1A4442184(a1, a2, &qword_1EE71CB48);
}

uint64_t sub_1A4442184(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1A46916C8();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v36 = a2;
    v35 = v4;
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v33 = -1 << v11;
    v34 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v14)
          goto LABEL_31;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_31;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v4 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64)
                bzero((void *)(v6 + 64), 8 * v14);
              else
                *v10 = v33;
              v4 = v35;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_40;
                if (v9 >= v14)
                  goto LABEL_31;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v9 = v22;
          }
        }
LABEL_21:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = 8 * v19;
      v24 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v23);
      v25 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v23);
      result = sub_1A4691C80();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v15 + 8 * (v27 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v15 + 8 * v28);
        }
        while (v32 == -1);
        v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v17) = v24;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v17) = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v4 = v8;
  return result;
}

uint64_t sub_1A4442424(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB50);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = a2;
    v32 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v10;
    v31 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v17 = v16 | (v8 << 6);
      }
      else
      {
        v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13)
          goto LABEL_31;
        v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          v8 = v18 + 1;
          if (v18 + 1 >= v13)
            goto LABEL_31;
          v19 = v9[v8];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                result = swift_release();
                v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v30;
              v3 = v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                v8 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v19 = v9[v8];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v8 = v20;
          }
        }
LABEL_21:
        v12 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
      v22 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v17);
      result = sub_1A4691C80();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v21;
      *(_BYTE *)(*(_QWORD *)(v7 + 56) + v15) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_1A44426C0(uint64_t a1, char a2)
{
  return sub_1A44426E4(a1, a2, &qword_1EE71CB58);
}

uint64_t sub_1A44426CC(uint64_t a1, char a2)
{
  return sub_1A44426E4(a1, a2, &qword_1EE71CB60);
}

uint64_t sub_1A44426D8(uint64_t a1, char a2)
{
  return sub_1A44426E4(a1, a2, &qword_1EE71CB68);
}

uint64_t sub_1A44426E4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1A46916C8();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v32 = -1 << v11;
    v33 = v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34)
          goto LABEL_33;
        v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_33;
          v23 = v10[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v6 + 64), 8 * v34);
                else
                  *v10 = v32;
                *(_QWORD *)(v6 + 16) = 0;
              }
              break;
            }
            v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_41;
                if (v9 >= v34)
                  goto LABEL_33;
                v23 = v10[v9];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v9 = v24;
          }
        }
LABEL_30:
        v13 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = 8 * v21;
      v30 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v29);
      v31 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v29);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_1A4691C80();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v27 = v17 == v26;
          if (v17 == v26)
            v17 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 8 * v18;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v30;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v31;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A4442994(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB70);
  result = sub_1A46916C8();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_1A4691C80();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_1A4442CC4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB78);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = 1 << *(_BYTE *)(v5 + 32);
    v34 = v3;
    v35 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v35)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v35);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v8 >= v35)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        v31 = v30;
      result = sub_1A4691C80();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

void sub_1A4442F74(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E820);
  v6 = sub_1A46916C8();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v14);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1A4446B28(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_1A4443154(uint64_t a1, char a2)
{
  return sub_1A4443D38(a1, a2, (uint64_t *)&unk_1EE71CB28);
}

uint64_t sub_1A4443160(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CAE0);
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_retain();
    }
    result = sub_1A4691134();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4443434(uint64_t a1, char a2)
{
  return sub_1A4443D38(a1, a2, &qword_1EE71CB00);
}

uint64_t sub_1A4443440(uint64_t a1, char a2)
{
  return sub_1A4443458(a1, a2, &qword_1EE71CB18);
}

uint64_t sub_1A444344C(uint64_t a1, char a2)
{
  return sub_1A4443458(a1, a2, &qword_1EE71CAF8);
}

uint64_t sub_1A4443458(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v7 = sub_1A46916C8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v37 = v3;
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v11)
    {
      v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12)
      break;
    v24 = (_QWORD *)(v6 + 64);
    v25 = *(_QWORD *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v12)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          v4 = v37;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v12)
              goto LABEL_33;
            v25 = *(_QWORD *)(v38 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v11 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = 8 * v22;
    v32 = *(void **)(*(_QWORD *)(v6 + 48) + v31);
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      v34 = v32;
      v35 = v33;
    }
    result = sub_1A4691134();
    v16 = -1 << *(_BYTE *)(v8 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = 8 * v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v32;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v20) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v37;
  v24 = (_QWORD *)(v6 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v6 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A4443724(uint64_t a1, char a2)
{
  return sub_1A4443D38(a1, a2, &qword_1EE71CB10);
}

uint64_t sub_1A4443730(uint64_t a1, char a2)
{
  return sub_1A4443D38(a1, a2, &qword_1EE71CB08);
}

uint64_t sub_1A444373C(uint64_t a1, char a2)
{
  return sub_1A4443D38(a1, a2, &qword_1ED2439F8);
}

uint64_t sub_1A4443748(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t *v19;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C998);
  v6 = sub_1A46916C8();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_26;
  v19 = v2;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v11 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v10 <= 1)
  {
    swift_release();
    v12 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_26;
    goto LABEL_22;
  }
  v12 = (_QWORD *)(v5 + 64);
  v13 = *(_QWORD *)(v5 + 72);
  v14 = 1;
  if (v13)
    goto LABEL_17;
  v14 = 2;
  if (v10 <= 2)
    goto LABEL_19;
  v13 = *(_QWORD *)(v5 + 80);
  if (v13)
  {
LABEL_17:
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_18:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v11);
    sub_1A4691C8C();
    __asm { BR              X8 }
  }
  v15 = 3;
  if (v10 > 3)
  {
    v13 = *(_QWORD *)(v5 + 88);
    if (v13)
    {
      v14 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v14 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
        JUMPOUT(0x1A4443CDCLL);
      }
      if (v14 >= v10)
        break;
      v13 = *(_QWORD *)(v5 + 64 + 8 * v14);
      ++v15;
      if (v13)
        goto LABEL_17;
    }
  }
LABEL_19:
  swift_release();
  v3 = v19;
  if ((a2 & 1) == 0)
    goto LABEL_26;
LABEL_22:
  v17 = 1 << *(_BYTE *)(v5 + 32);
  if (v17 >= 64)
    bzero(v12, ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v12 = -1 << v17;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_26:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A4443D2C(uint64_t a1, char a2)
{
  return sub_1A4443D38(a1, a2, (uint64_t *)&unk_1EE71CA60);
}

uint64_t sub_1A4443D38(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;
  char v39;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v39 = a2;
  v7 = sub_1A46916C8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v38 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v36 = v3;
  v37 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_33;
      v24 = *(_QWORD *)(v38 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          v4 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v37)
              goto LABEL_33;
            v24 = *(_QWORD *)(v38 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v34 = v33;
    }
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v4 = v36;
  v23 = (_QWORD *)(v6 + 64);
  if ((v39 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v6 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A4444040(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAF0);
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      swift_bridgeObjectRetain();
    }
    result = sub_1A4691134();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4444314(uint64_t a1, char a2)
{
  return sub_1A4444320(a1, a2, &qword_1EE71CAD8);
}

uint64_t sub_1A4444320(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1A46916C8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A4444630(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  void *v50;
  char v51;
  uint64_t v52;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421E0);
  v6 = v5;
  v7 = sub_1A46916C8();
  v47 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_43;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v46 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v44 = v2;
  v45 = (unint64_t)(v8 + 63) >> 6;
  v11 = v7 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v48 = v13;
      v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v19 >= v45)
      break;
    v20 = v46;
    v21 = v46[v19];
    v22 = v13 + 1;
    if (!v21)
    {
      v22 = v13 + 2;
      if (v13 + 2 >= v45)
        goto LABEL_36;
      v21 = v46[v22];
      if (!v21)
      {
        v23 = v13 + 3;
        if (v13 + 3 >= v45)
        {
LABEL_36:
          swift_release();
          v3 = v44;
          if ((a2 & 1) == 0)
            goto LABEL_43;
          goto LABEL_39;
        }
        v21 = v46[v23];
        if (!v21)
        {
          while (1)
          {
            v22 = v23 + 1;
            if (__OFADD__(v23, 1))
              goto LABEL_45;
            if (v22 >= v45)
              goto LABEL_36;
            v21 = v46[v22];
            ++v23;
            if (v21)
              goto LABEL_21;
          }
        }
        v22 = v13 + 3;
      }
    }
LABEL_21:
    v10 = (v21 - 1) & v21;
    v48 = v22;
    v18 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    v24 = *(_QWORD *)(v6 + 48) + 24 * v18;
    v25 = *(void **)v24;
    v26 = *(_QWORD *)(v24 + 8);
    v27 = *(_BYTE *)(v24 + 16);
    v28 = *(_QWORD *)(v6 + 56) + 40 * v18;
    v29 = *(_QWORD *)(v28 + 8);
    v50 = *(void **)v28;
    v30 = *(_QWORD *)(v28 + 16);
    v52 = *(_QWORD *)(v28 + 24);
    v51 = *(_BYTE *)(v28 + 32);
    if ((a2 & 1) == 0)
    {
      sub_1A444A990(v25, v26, v27);
      sub_1A444A9B8(v50, v29, v30, v52, v51);
    }
    sub_1A4691C8C();
    v49 = v30;
    v31 = v29;
    sub_1A4691C98();
    if ((v27 & 1) != 0)
    {
      v32 = a2;
      v33 = v6;
      v34 = v25;
      sub_1A469114C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
      v35 = (void *)sub_1A4690B94();
      sub_1A469114C();

      v6 = v33;
      a2 = v32;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
      v35 = (void *)sub_1A4690B94();
      sub_1A469114C();
    }

    result = sub_1A4691CC8();
    v36 = -1 << *(_BYTE *)(v47 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v11 + 8 * (v37 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v11 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v11 + 8 * v38);
      }
      while (v42 == -1);
      v14 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = *(_QWORD *)(v47 + 48) + 24 * v14;
    *(_QWORD *)v15 = v25;
    *(_QWORD *)(v15 + 8) = v26;
    *(_BYTE *)(v15 + 16) = v27;
    v16 = *(_QWORD *)(v47 + 56) + 40 * v14;
    *(_QWORD *)v16 = v50;
    *(_QWORD *)(v16 + 8) = v31;
    v13 = v48;
    *(_QWORD *)(v16 + 16) = v49;
    *(_QWORD *)(v16 + 24) = v52;
    *(_BYTE *)(v16 + 32) = v51;
    ++*(_QWORD *)(v47 + 16);
  }
  swift_release();
  v3 = v44;
  v20 = v46;
  if ((a2 & 1) == 0)
    goto LABEL_43;
LABEL_39:
  v43 = 1 << *(_BYTE *)(v6 + 32);
  if (v43 >= 64)
    bzero(v20, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v20 = -1 << v43;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_43:
  result = swift_release();
  *v3 = v47;
  return result;
}

uint64_t sub_1A4444A3C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CAC8);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v31 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v30 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v19 >= v30)
          goto LABEL_33;
        v20 = v31[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v30)
            goto LABEL_33;
          v20 = v31[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v5 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v31[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_42;
                if (v8 >= v30)
                  goto LABEL_33;
                v20 = v31[v8];
                ++v21;
                if (v20)
                  goto LABEL_30;
              }
            }
            v8 = v21;
          }
        }
LABEL_30:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v26 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v18);
      v27 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0)
        v28 = v27;
      sub_1A4691C8C();
      sub_1A4691C98();
      result = sub_1A4691CC8();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v24 = v15 == v23;
          if (v15 == v23)
            v15 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v26;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16) = v27;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A4444D04(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAC0);
  v6 = sub_1A46916C8();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_26;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v18 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v18 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_26;
    goto LABEL_22;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v18 <= 2)
    goto LABEL_19;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    sub_1A4691C8C();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v18 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x1A4445248);
      }
      if (v13 >= v18)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_19:
  swift_release();
  if ((a2 & 1) == 0)
    goto LABEL_26;
LABEL_22:
  v16 = 1 << *(_BYTE *)(v5 + 32);
  if (v16 >= 64)
    bzero(v11, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v16;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_26:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A444528C(uint64_t a1, char a2)
{
  return sub_1A4445B5C(a1, a2, &qword_1EE71CAB8);
}

uint64_t sub_1A4445298(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAB0);
  v36 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A44455AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAA8);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1A4691C80();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4445860(uint64_t a1, char a2)
{
  return sub_1A4445B5C(a1, a2, &qword_1EE71CAA0);
}

uint64_t sub_1A444586C(uint64_t a1, char a2)
{
  return sub_1A4445B5C(a1, a2, &qword_1EE71CA98);
}

uint64_t sub_1A4445878(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  _QWORD *v32;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CA90);
  result = sub_1A46916C8();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v32 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v31 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v31)
          goto LABEL_33;
        v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v31)
            goto LABEL_33;
          v21 = v32[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v30 = 1 << *(_BYTE *)(v5 + 32);
              if (v30 >= 64)
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v32 = -1 << v30;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v31)
                  goto LABEL_33;
                v21 = v32[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = 8 * v19;
      v28 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v27);
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v27);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_1A4691C8C();
      sub_1A4691C98();
      result = sub_1A4691CC8();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = 8 * v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v28;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1A4445B50(uint64_t a1, char a2)
{
  return sub_1A4445B5C(a1, a2, &qword_1EE71CA88);
}

uint64_t sub_1A4445B5C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v36 = a2;
  v7 = sub_1A46916C8();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v35 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v34 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v34)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v35 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v34)
        goto LABEL_33;
      v24 = *(_QWORD *)(v35 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v34)
              goto LABEL_33;
            v24 = *(_QWORD *)(v35 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + v30);
    v32 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v30);
    if ((v36 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    swift_bridgeObjectRelease();
    result = sub_1A4691CC8();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v32;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v6 + 32);
  if (v33 >= 64)
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v33;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1A4445E80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CA70);
  v37 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4446188(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_1A46900B4();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CA50);
  v43 = a2;
  v8 = sub_1A46916C8();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_1A4691C8C();
      sub_1A4690948();
      result = sub_1A4691CC8();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_1A44464F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9E0);
  v42 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A4446814(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9D0);
  v36 = a2;
  v6 = sub_1A46916C8();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void sub_1A4446B28(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

unint64_t sub_1A4446B90()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  unint64_t result;

  sub_1A4690948();
  swift_bridgeObjectRelease();
  sub_1A4691CC8();
  result = sub_1A46912C0();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_QWORD *)(v0[7] + 8 * result) = v1;
  ++v0[2];
  return result;
}

void *sub_1A4446CA4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E418);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1A444AB84(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1A44311F0(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1A444A940(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4446E88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBD0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1A44311F0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1A444A940(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A444706C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_1A46915B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A00);
  v6 = *v0;
  v7 = sub_1A46916BC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_1A44311F0(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_1A444A940(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A44472A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB90);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A4447454()
{
  return sub_1A4448AE8(&qword_1EE71CBC0);
}

id sub_1A4447460()
{
  return sub_1A4448AE8(&qword_1EE71CBB8);
}

void *sub_1A444746C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBB0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v19;
    v25[1] = v18;
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v26 = v22;
    v26[1] = v23;
    v26[2] = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4447634()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9C8);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A44477E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBA8);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = *v21;
    v23 = v21[1];
    v24 = v21[2];
    v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v25 = v19;
    v25[1] = v18;
    v26 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v20);
    *v26 = v22;
    v26[1] = v23;
    v26[2] = v24;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A44479B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E50);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1A44311F0(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1A444A940(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4447B74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB88);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4447D20()
{
  return sub_1A4447EE4(&qword_1EE71CB80);
}

void *sub_1A4447D2C()
{
  return sub_1A4448218(&qword_1EE71CB38);
}

void *sub_1A4447D38()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB40);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4447ED8()
{
  return sub_1A4447EE4(&qword_1EE71CB48);
}

void *sub_1A4447EE4(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A46916BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v22 = __clz(__rbit64(v20));
    v13 = (v20 - 1) & v20;
    v16 = v22 + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4448068()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB50);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A44481F4()
{
  return sub_1A4448218(&qword_1EE71CB58);
}

void *sub_1A4448200()
{
  return sub_1A4448218(&qword_1EE71CB60);
}

void *sub_1A444820C()
{
  return sub_1A4448218(&qword_1EE71CB68);
}

void *sub_1A4448218(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A46916BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    result = (void *)swift_retain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A44483B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1A46900B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB70);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1A46916BC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A44485D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB78);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4448770()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E820);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A4448910()
{
  return sub_1A4448E40((uint64_t *)&unk_1EE71CB28);
}

void *sub_1A444891C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CAE0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A4448AC4()
{
  return sub_1A4448E40(&qword_1EE71CB00);
}

id sub_1A4448AD0()
{
  return sub_1A4448AE8(&qword_1EE71CB18);
}

id sub_1A4448ADC()
{
  return sub_1A4448AE8(&qword_1EE71CAF8);
}

id sub_1A4448AE8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A46916BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    v19 = *(void **)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v19;
    v20 = v18;
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A4448C84()
{
  return sub_1A4448E40(&qword_1EE71CB10);
}

id sub_1A4448C90()
{
  return sub_1A4448E40(&qword_1EE71CB08);
}

id sub_1A4448C9C()
{
  return sub_1A4448E40(&qword_1ED2439F8);
}

void *sub_1A4448CA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C998);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A4448E34()
{
  return sub_1A4448E40((uint64_t *)&unk_1EE71CA60);
}

id sub_1A4448E40(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A46916BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = v21;
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4448FE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAF0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4449190()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421E0);
  v31 = v0;
  v1 = *v0;
  v2 = sub_1A46916BC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v31 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v32 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    v28 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v11)
      goto LABEL_26;
    v29 = *(_QWORD *)(v32 + 8 * v28);
    ++v7;
    if (!v29)
    {
      v7 = v28 + 1;
      if (v28 + 1 >= v11)
        goto LABEL_26;
      v29 = *(_QWORD *)(v32 + 8 * v7);
      if (!v29)
        break;
    }
LABEL_25:
    v10 = (v29 - 1) & v29;
    v13 = __clz(__rbit64(v29)) + (v7 << 6);
LABEL_12:
    v14 = 24 * v13;
    v15 = *(_QWORD *)(v1 + 56);
    v16 = *(_QWORD *)(v1 + 48) + 24 * v13;
    v17 = *(void **)v16;
    v18 = *(_QWORD *)(v16 + 8);
    v19 = *(_BYTE *)(v16 + 16);
    v20 = 40 * v13;
    v21 = *(void **)(v15 + v20);
    v22 = *(_QWORD *)(v15 + v20 + 8);
    v23 = *(_QWORD *)(v15 + v20 + 16);
    v24 = *(_QWORD *)(v15 + v20 + 24);
    v25 = *(_BYTE *)(v15 + v20 + 32);
    v26 = *(_QWORD *)(v3 + 48) + v14;
    *(_QWORD *)v26 = *(_QWORD *)v16;
    *(_QWORD *)(v26 + 8) = v18;
    *(_BYTE *)(v26 + 16) = v19;
    v27 = *(_QWORD *)(v3 + 56) + v20;
    *(_QWORD *)v27 = v21;
    *(_QWORD *)(v27 + 8) = v22;
    *(_QWORD *)(v27 + 16) = v23;
    *(_QWORD *)(v27 + 24) = v24;
    *(_BYTE *)(v27 + 32) = v25;
    sub_1A444A990(v17, v18, v19);
    result = sub_1A444A9B8(v21, v22, v23, v24, v25);
  }
  v30 = v28 + 2;
  if (v30 >= v11)
    goto LABEL_26;
  v29 = *(_QWORD *)(v32 + 8 * v30);
  if (v29)
  {
    v7 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v7 >= v11)
      goto LABEL_26;
    v29 = *(_QWORD *)(v32 + 8 * v7);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1A444939C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CAC8);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A444953C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAC0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A44496C4()
{
  return sub_1A4449BE8(&qword_1EE71CAB8);
}

void *sub_1A44496D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAB0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4449884()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CAA8);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4449A24()
{
  return sub_1A4449BE8(&qword_1EE71CAA0);
}

void *sub_1A4449A30()
{
  return sub_1A4449BE8(&qword_1EE71CA98);
}

void *sub_1A4449A3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CA90);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4449BDC()
{
  return sub_1A4449BE8(&qword_1EE71CA88);
}

void *sub_1A4449BE8(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A46916BC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_26;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_25:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = *(_QWORD *)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v17) = v18;
    swift_retain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v21 = v19 + 2;
  if (v21 >= v14)
    goto LABEL_26;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4449D88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CA70);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A4449F30()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_1A46900B4();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CA50);
  v31 = v0;
  v4 = *v0;
  v5 = sub_1A46916BC();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A444A18C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9E0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A444A344()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9D0);
  v2 = *v0;
  v3 = sub_1A46916BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1A444A4F8(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CBE0);
  v3 = (_QWORD *)sub_1A46916E0();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_1A443E654(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_1A443E654(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A444A5F4()
{
  unint64_t result;

  result = qword_1EE71C8B8;
  if (!qword_1EE71C8B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4695DD0, &type metadata for KMeansAutoTuner.MoreClustersThanPointsError);
    atomic_store(result, (unint64_t *)&qword_1EE71C8B8);
  }
  return result;
}

unint64_t sub_1A444A63C()
{
  unint64_t result;

  result = qword_1EE71C8C0;
  if (!qword_1EE71C8C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for KMeansAutoTuner.TuningMethod, &type metadata for KMeansAutoTuner.TuningMethod);
    atomic_store(result, (unint64_t *)&qword_1EE71C8C0);
  }
  return result;
}

uint64_t type metadata accessor for KMeansAutoTuner()
{
  return objc_opt_self();
}

uint64_t method lookup function for KMeansAutoTuner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KMeansAutoTuner.__allocating_init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t destroy for KMeansAutoTuner.KMeanTuningHistory()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for KMeansAutoTuner.KMeanTuningHistory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for KMeansAutoTuner.KMeanTuningHistory(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for KMeansAutoTuner.KMeanTuningHistory(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for KMeansAutoTuner.KMeanTuningHistory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KMeansAutoTuner.KMeanTuningHistory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.KMeanTuningHistory()
{
  return &type metadata for KMeansAutoTuner.KMeanTuningHistory;
}

uint64_t getEnumTagSinglePayload for KMeansAutoTuner.TuningMethod(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for KMeansAutoTuner.TuningMethod(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A444A8BC + 4 * byte_1A4695C82[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A444A8DC + 4 * byte_1A4695C87[v4]))();
}

_BYTE *sub_1A444A8BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A444A8DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A444A8E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A444A8EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A444A8F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A444A8FC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1A444A908()
{
  return 0;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.TuningMethod()
{
  return &type metadata for KMeansAutoTuner.TuningMethod;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.MoreClustersThanPointsError()
{
  return &type metadata for KMeansAutoTuner.MoreClustersThanPointsError;
}

ValueMetadata *type metadata accessor for KMeansAutoTuner.InvalidSearchingIntervalError()
{
  return &type metadata for KMeansAutoTuner.InvalidSearchingIntervalError;
}

_OWORD *sub_1A444A940(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A444A950(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A46900FC();
    result = MEMORY[0x1A85A0000](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A444A990(void *a1, uint64_t a2, char a3)
{
  id v3;

  if ((a3 & 1) != 0)
    v3 = a1;
  return swift_bridgeObjectRetain();
}

id sub_1A444A9B8(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return sub_1A444AA0C(a1);
  sub_1A444A9F4(a1, a2);
  swift_retain();
  return (id)swift_retain();
}

id sub_1A444A9F4(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    return sub_1A444AA0C(a1);
  return a1;
}

id sub_1A444AA0C(id a1)
{
  return a1;
}

uint64_t sub_1A444AA18(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A444AA40(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1A444AA78(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB88);
  v3 = (_QWORD *)sub_1A46916E0();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1A443E654(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1A443E654(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A444AB84(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A444ABC0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1A444ABF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t PromiseError.errorCode.getter()
{
  uint64_t v0;
  uint64_t result;
  _BYTE v2[24];
  unint64_t v3;
  uint64_t v4;

  sub_1A444AC88(v0, (uint64_t)v2);
  result = v3;
  if (v3 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return 2;
  }
  return result;
}

uint64_t sub_1A444AC88(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PromiseError(a2, a1);
  return a2;
}

unint64_t PromiseError.errorUserInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  _OWORD v7[2];
  _OWORD v8[2];
  __int128 v9;
  uint64_t v10;
  __int128 v11;

  v1 = v0;
  v2 = 0xEA00000000006465;
  sub_1A444AC88(v1, (uint64_t)&v9);
  if (v10)
  {
    if (v10 == 1)
    {
      v3 = 0x6E6F646E6162612ELL;
    }
    else
    {
      sub_1A444A940(&v9, v8);
      sub_1A444A940(&v11, v7);
      sub_1A4691410();
      sub_1A4690984();
      sub_1A4691590();
      sub_1A4690984();
      sub_1A4691590();
      sub_1A4690984();
      v3 = 0;
      v2 = 0xE000000000000000;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    }
  }
  else
  {
    v3 = 0x6C6C65636E61632ELL;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v3;
  *(_QWORD *)(inited + 56) = v2;
  return sub_1A443CDB8(inited);
}

uint64_t sub_1A444AE7C()
{
  uint64_t v0;
  uint64_t result;
  _BYTE v2[24];
  unint64_t v3;
  uint64_t v4;

  sub_1A444AC88(v0, (uint64_t)v2);
  result = v3;
  if (v3 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return 2;
  }
  return result;
}

uint64_t sub_1A444AED0()
{
  sub_1A4452250();
  return sub_1A4691C20();
}

uint64_t sub_1A444AEF8()
{
  sub_1A4452250();
  return sub_1A4691C14();
}

uint64_t PromiseDisposableToken.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t PromiseDisposableToken.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t PromiseDisposableToken.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PromiseDisposableToken.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *Promise.__allocating_init(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;

  v6 = sub_1A44513F8(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a1);
  return v6;
}

_QWORD *Promise.init(value:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  _QWORD *v4;

  v3 = *v1;
  v4 = sub_1A445131C(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
  return v4;
}

uint64_t Promise.__allocating_init(error:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  Promise.init(error:)(a1, v3, v4, v5);
  return v2;
}

_QWORD *Promise.init(error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  _DWORD *v8;

  v5 = v4;
  type metadata accessor for Seal(0, *(_QWORD *)(*v5 + 80), a3, a4);
  type metadata accessor for UnfairLock();
  v7 = swift_allocObject();
  v8 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v7 + 16) = v8;
  *v8 = 0;
  *(_DWORD *)(v7 + 24) = 0;
  v5[2] = sub_1A44D935C(v7, a1);
  return v5;
}

uint64_t Promise.__allocating_init(resolver:)(void (*a1)(uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *, uint64_t (*)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  Promise.init(resolver:)(a1, a2, v5, v6);
  return v4;
}

_QWORD *Promise.init(resolver:)(void (*a1)(uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *, uint64_t (*)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _DWORD *v7;

  type metadata accessor for Seal(0, *(_QWORD *)(*v4 + 80), a3, a4);
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_DWORD *)(v6 + 24) = 0;
  v4[2] = sub_1A44D93A8(v6);
  swift_retain_n();
  a1(sub_1A4451438, v4, sub_1A4451458, v4);
  swift_release_n();
  return v4;
}

uint64_t Promise.__allocating_init(resolver:)(void (*a1)(uint64_t (*)(), _QWORD *, uint64_t (*)(), _QWORD *, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  Promise.init(resolver:)(a1, a2, v5, v6);
  return v4;
}

_QWORD *Promise.init(resolver:)(void (*a1)(uint64_t (*)(), _QWORD *, uint64_t (*)(), _QWORD *, uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _DWORD *v7;

  type metadata accessor for Seal(0, *(_QWORD *)(*v4 + 80), a3, a4);
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_DWORD *)(v6 + 24) = 0;
  v4[2] = sub_1A44D93A8(v6);
  swift_retain_n();
  a1(sub_1A44532D4, v4, sub_1A44532D8, v4, sub_1A4451478, v4);
  swift_release_n();
  return v4;
}

uint64_t Promise.__allocating_init(block:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[6];

  v7[2] = *(_QWORD *)(v2 + 80);
  v7[3] = a1;
  v7[4] = a2;
  v3 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A4451498, (uint64_t)v7, v4, v5);
  swift_release();
  return v3;
}

uint64_t sub_1A444B320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void (*)(uint64_t a1), _QWORD *), uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a7;
  v13[3] = a1;
  v13[4] = a2;
  v13[5] = a3;
  v13[6] = a4;
  swift_retain();
  swift_retain();
  a5(sub_1A44530F8, v13);
  return swift_release();
}

void sub_1A444B3B4(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;

  v10 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v13 = sub_1A4691D10();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v18 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = (void *)*v15;
    a4(*v15);

  }
  else
  {
    (*(void (**)(char *, _QWORD *, uint64_t))(v10 + 32))(v12, v15, a6);
    a2(v12);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a6);
  }
}

uint64_t Promise.__allocating_init(_:scheduleOn:)(void *a1, void (*a2)(void *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];

  v8[2] = a1;
  v4 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(), _QWORD *, uint64_t (*)(), _QWORD *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44514A4, (uint64_t)v8, v5, v6);
  a2(a1);

  return v4;
}

uint64_t sub_1A444B570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v13;
  _QWORD *v14;

  v13 = *MEMORY[0x1E0DEEDD8] & *a7;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = *(_QWORD *)(v13 + 80);
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = a5;
  v14[6] = a6;
  v14[7] = a3;
  v14[8] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  return sub_1A4525084((uint64_t)sub_1A44530E0, (uint64_t)v14);
}

void sub_1A444B62C(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, void (*a6)(id), uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v24[2];
  void (*v25)(char *);
  id v26;

  v24[0] = a7;
  v24[1] = a3;
  v25 = a2;
  v12 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v15 = sub_1A4691D10();
  MEMORY[0x1E0C80A78](v15);
  v17 = (id *)((char *)v24 - v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v24 - v16, a1, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = *v17;
    v19 = v26;
    v20 = v26;
    if (swift_dynamicCast())
    {

      a4(v21, v22);
      v23 = v26;
    }
    else
    {

      a6(v19);
      v23 = v19;
    }

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v12 + 32))(v14, v17, a8);
    v25(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a8);
  }
}

uint64_t sub_1A444B7C4(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  sub_1A444B818(a1, a2, a3, v7);
  return v6;
}

_QWORD *sub_1A444B818(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(*v4 + 80);
  type metadata accessor for Seal(0, v6, a3, a4);
  v7 = swift_retain();
  v4[2] = sub_1A44D93A8(v7);
  type metadata accessor for PromiseWeakResolver(0, v6, v8, v9);
  sub_1A4451938();
  a2();
  swift_release();
  swift_release();
  return v4;
}

uint64_t sub_1A444B8B0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;

  v8 = *v4;
  type metadata accessor for DeferredPromise(0, a4, a3, a4);
  v9 = swift_retain();
  v10 = sub_1A44D8E2C(v9);
  v11 = *(_QWORD *)(v8 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = v10;
  swift_retain();
  swift_retain_n();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A44532C0, v12, (uint64_t)sub_1A44532D0, v13, (uint64_t)sub_1A445324C, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v16 = *(_QWORD *)(v10 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444BA1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;

  v9 = *v6;
  type metadata accessor for DeferredPromise(0, a5, a3, a4);
  v10 = swift_retain();
  v11 = sub_1A44D8E2C(v10);
  v12 = *(_QWORD *)(v9 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a6;
  v13[4] = v11;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v12;
  v14[3] = a6;
  v14[4] = v11;
  v15 = swift_allocObject();
  swift_retain_n();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v12;
  v16[3] = a6;
  v16[4] = v15;
  v16[5] = v11;
  v16[6] = a3;
  v16[7] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A4453248, (uint64_t)v13, (uint64_t)sub_1A4453244, (uint64_t)v14, (uint64_t)sub_1A44514D8, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v18 = *(_QWORD *)(v11 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A444BBDC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v10 + 16;
  swift_beginAccess();
  v12 = MEMORY[0x1A85A01C8](v11);
  if (v12)
  {
    a4(a1, v12);
    DeferredPromise.resolve(_:)((uint64_t)v9);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    sub_1A4451C3C();
    v13 = (void *)swift_allocError();
    *(_QWORD *)v14 = 0;
    *(_QWORD *)(v14 + 8) = 0;
    *(_QWORD *)(v14 + 16) = 0;
    *(_QWORD *)(v14 + 24) = 1;
    *(_OWORD *)(v14 + 32) = 0u;
    *(_OWORD *)(v14 + 48) = 0u;
    DeferredPromise.reject(_:)(v13);

  }
}

uint64_t sub_1A444BD8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;

  v10 = *v5;
  type metadata accessor for DeferredPromise(0, a4, a3, a4);
  v11 = swift_retain();
  v12 = sub_1A44D8E2C(v11);
  v13 = *(_QWORD *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v12;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v13;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = v12;
  swift_retain();
  swift_retain_n();
  sub_1A44D96B0(a1, *(uint64_t *)&a5, 0, (uint64_t)sub_1A445308C, v14, (uint64_t)sub_1A445306C, v15, (uint64_t)sub_1A44514E8, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v18 = *(_QWORD *)(v12 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444BF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(uint64_t);
  _BYTE v11[24];

  v4 = *(_QWORD *)(*(_QWORD *)a4 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9(v6);
  DeferredPromise.resolve(_:)((uint64_t)v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1A444C020(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;

  v8 = *v4;
  type metadata accessor for DeferredPromise(0, a4, a3, a4);
  v9 = swift_retain();
  v10 = sub_1A44D8E2C(v9);
  v11 = *(_QWORD *)(v8 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v14[3] = a2;
  v14[4] = a3;
  v14[5] = v10;
  swift_retain();
  swift_retain_n();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A44532C0, v12, (uint64_t)sub_1A44532D0, v13, (uint64_t)sub_1A4451508, (uint64_t)v14);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v16 = *(_QWORD *)(v10 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444C18C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  a2();
  v7 = qword_1ED243C50;
  swift_retain();
  if (v7 != -1)
    swift_once();
  v8 = (void *)qword_1ED2431A0;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a5;
  *(_QWORD *)(v9 + 24) = a4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a4;
  swift_retain_n();
  sub_1A44D96B0(v8, 0, 1, (uint64_t)sub_1A44532C0, v9, (uint64_t)sub_1A44532D0, v10, (uint64_t)sub_1A445304C, v11);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A444C36C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;
  uint64_t v18;

  v9 = *v6;
  type metadata accessor for DeferredPromise(0, a5, a3, a4);
  v10 = swift_retain();
  v11 = sub_1A44D8E2C(v10);
  v12 = *(_QWORD *)(v9 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v12;
  v13[3] = a6;
  v13[4] = v11;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v12;
  v14[3] = a6;
  v14[4] = v11;
  v15 = swift_allocObject();
  swift_retain_n();
  swift_unknownObjectWeakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v12;
  v16[3] = a6;
  v16[4] = v15;
  v16[5] = v11;
  v16[6] = a3;
  v16[7] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A4453248, (uint64_t)v13, (uint64_t)sub_1A4452F3C, (uint64_t)v14, (uint64_t)sub_1A445154C, (uint64_t)v16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v18 = *(_QWORD *)(v11 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A444C52C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;

  v12 = a2 + 16;
  swift_beginAccess();
  v13 = MEMORY[0x1A85A01C8](v12);
  if (v13)
  {
    a4(a1, v13);
    v16 = qword_1ED243C50;
    swift_retain();
    if (v16 != -1)
      swift_once();
    v17 = (void *)qword_1ED2431A0;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a7;
    v18[4] = a3;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = a3;
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a6;
    v20[3] = a7;
    v20[4] = a3;
    swift_retain_n();
    sub_1A44D96B0(v17, 0, 1, (uint64_t)sub_1A4452F5C, (uint64_t)v18, (uint64_t)sub_1A4453244, (uint64_t)v19, (uint64_t)sub_1A445302C, (uint64_t)v20);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1A4451C3C();
    v14 = (void *)swift_allocError();
    *(_QWORD *)v15 = 0;
    *(_QWORD *)(v15 + 8) = 0;
    *(_QWORD *)(v15 + 16) = 0;
    *(_QWORD *)(v15 + 24) = 1;
    *(_OWORD *)(v15 + 32) = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
    DeferredPromise.reject(_:)(v14);

  }
}

uint64_t sub_1A444C7A4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = *v3;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v7 + 80);
  sub_1A44D96B0(a1, 0, 1, (uint64_t)nullsub_1, 0, a2, a3, (uint64_t)nullsub_1, v8);
  swift_release();
  return swift_retain();
}

uint64_t sub_1A444C850(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v10 = *v5;
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = (_QWORD *)swift_allocObject();
  v13 = *(_QWORD *)(v10 + 80);
  v12[2] = v13;
  v12[3] = a5;
  v12[4] = v11;
  v12[5] = a3;
  v12[6] = a4;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = a5;
  swift_retain();
  swift_retain();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)nullsub_1, 0, (uint64_t)sub_1A4451580, (uint64_t)v12, (uint64_t)nullsub_1, v14);
  swift_release();
  swift_release();
  swift_release();
  return swift_retain();
}

uint64_t sub_1A444C978(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t result;

  v5 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1A85A01C8](v5);
  if (result)
  {
    a3(a1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A444C9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A444CB40(a1, a2, a3, (void (*)(void))sub_1A44D97B4);
}

uint64_t sub_1A444C9F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v10 = *v5;
  v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = *(_QWORD *)(v10 + 80);
  v12[3] = a5;
  v12[4] = v11;
  v12[5] = a3;
  v12[6] = a4;
  swift_retain();
  swift_retain();
  sub_1A44D97B4(a1, (uint64_t)sub_1A44515A4, (uint64_t)v12);
  swift_release();
  swift_release();
  return swift_retain();
}

uint64_t sub_1A444CAD0(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;
  uint64_t result;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1A85A01C8](v3);
  if (result)
  {
    a2();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1A444CB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A444CB40(a1, a2, a3, (void (*)(void))sub_1A44D97C8);
}

uint64_t sub_1A444CB40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  return swift_retain();
}

uint64_t sub_1A444CB68(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  v4 = swift_allocObject();
  v5 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v4 + 16) = v5;
  v6 = sub_1A444B8B0(a1, (uint64_t)sub_1A44515C4, v4, v5);
  swift_release();
  return v6;
}

uint64_t sub_1A444CBD4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;

  v5 = *v2;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = *(_QWORD *)(v5 + 80);
  v6[3] = a2;
  v6[4] = a1;
  if (qword_1ED243C50 != -1)
    swift_once();
  v7 = (id)qword_1ED2431A0;
  v8 = sub_1A444B8B0(v7, (uint64_t)sub_1A445160C, (uint64_t)v6, a2);
  swift_release();

  return v8;
}

uint64_t sub_1A444CC8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_0;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t *v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  void (*v51)(uint64_t *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t MetatypeMetadata;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];
  uint64_t v59;
  uint64_t v60;

  v52 = a5;
  v60 = a2;
  v8 = sub_1A4691CEC();
  v56 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v55 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v50 - v11;
  v12 = sub_1A46911A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v50 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v22 = a1;
  v23 = a1;
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v24((char *)&v50 - v21, v23, a3);
  v25 = swift_dynamicCast();
  v26 = *(_QWORD *)(a4 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  if ((v25 & 1) != 0)
  {
    v27(v16, 0, 1, a4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v52, v16, a4);
  }
  else
  {
    v27(v16, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v59 = a3;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v58);
    v30 = v22;
    v24((char *)boxed_opaque_existential_0, v22, a3);
    v31 = v24;
    v51 = (void (*)(uint64_t *, uint64_t, uint64_t))v24;
    v32 = v54;
    sub_1A4691CD4();
    MetatypeMetadata = swift_getMetatypeMetadata();
    v59 = MetatypeMetadata;
    v58[0] = v60;
    v33 = v55;
    sub_1A4691CD4();
    LODWORD(v52) = sub_1A4690FFC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A20);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1A4695E60;
    v31(v19, v30, a3);
    v35 = sub_1A46908E8();
    v37 = v36;
    v38 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    v39 = sub_1A4452FE8();
    *(_QWORD *)(v34 + 64) = v39;
    *(_QWORD *)(v34 + 32) = v35;
    *(_QWORD *)(v34 + 40) = v37;
    v40 = sub_1A4691CE0();
    *(_QWORD *)(v34 + 96) = v38;
    *(_QWORD *)(v34 + 104) = v39;
    *(_QWORD *)(v34 + 72) = v40;
    *(_QWORD *)(v34 + 80) = v41;
    v42 = sub_1A4691CE0();
    *(_QWORD *)(v34 + 136) = v38;
    *(_QWORD *)(v34 + 144) = v39;
    *(_QWORD *)(v34 + 112) = v42;
    *(_QWORD *)(v34 + 120) = v43;
    sub_1A444AA40(0, qword_1EE71CC28);
    v44 = (void *)sub_1A4691188();
    sub_1A4690300();
    swift_bridgeObjectRelease();

    sub_1A4451C3C();
    swift_allocError();
    v46 = v45;
    v45[3] = a3;
    v47 = __swift_allocate_boxed_opaque_existential_0(v45);
    v51(v47, v30, a3);
    v46[7] = MetatypeMetadata;
    v46[4] = v60;
    swift_willThrow();
    v48 = v57;
    v49 = *(void (**)(char *, uint64_t))(v56 + 8);
    v49(v33, v57);
    return ((uint64_t (*)(char *, uint64_t))v49)(v32, v48);
  }
}

uint64_t Promise.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t Promise.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t Promise<A>.map<A>(on:closure:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v21;

  v10 = *v5;
  v11 = sub_1A4690C78();
  type metadata accessor for DeferredPromise(0, v11, v12, v13);
  v14 = swift_retain();
  v15 = sub_1A44D8E2C(v14);
  v16 = *(_QWORD *)(v10 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a5;
  v17[4] = v15;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v16;
  v18[3] = a5;
  v18[4] = v15;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v16;
  v19[3] = a5;
  v19[4] = v15;
  v19[5] = a2;
  v19[6] = a3;
  swift_retain_n();
  swift_retain();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A4453248, (uint64_t)v17, (uint64_t)sub_1A4453244, (uint64_t)v18, (uint64_t)sub_1A445162C, (uint64_t)v19);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v21 = *(_QWORD *)(v15 + 16);
  if (v21)
  {
    swift_retain();
    swift_release();
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444D1D8(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16[3];

  v8 = *a2;
  v11[2] = a5;
  v12 = *(_QWORD *)(*(_QWORD *)(v8 + 80) + 16);
  v13 = a6;
  v14 = a3;
  v15 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  v16[0] = (id)sub_1A4460F34((void (*)(char *, char *))sub_1A4452F7C, (uint64_t)v11, a5, v12, v9, a6, MEMORY[0x1E0DEDB38], (uint64_t)v16);
  DeferredPromise.resolve(_:)((uint64_t)v16);
  return swift_bridgeObjectRelease();
}

uint64_t Promise<A>.compactMap<A>(on:closure:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t result;
  uint64_t v21;

  v10 = *v5;
  v11 = sub_1A4690C78();
  type metadata accessor for DeferredPromise(0, v11, v12, v13);
  v14 = swift_retain();
  v15 = sub_1A44D8E2C(v14);
  v16 = *(_QWORD *)(v10 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a5;
  v17[4] = v15;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v16;
  v18[3] = a5;
  v18[4] = v15;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v16;
  v19[3] = a5;
  v19[4] = v15;
  v19[5] = a2;
  v19[6] = a3;
  swift_retain_n();
  swift_retain();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A4452F5C, (uint64_t)v17, (uint64_t)sub_1A4452F3C, (uint64_t)v18, (uint64_t)sub_1A445163C, (uint64_t)v19);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v21 = *(_QWORD *)(v15 + 16);
  if (v21)
  {
    swift_retain();
    swift_release();
    return v21;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444D494()
{
  uint64_t v1[3];

  v1[0] = sub_1A4690A98();
  DeferredPromise.resolve(_:)((uint64_t)v1);
  return swift_bridgeObjectRelease();
}

uint64_t Promise<A>.reduce<A>(_:on:nextPartialResult:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v33 = a4;
  v34 = a2;
  v31 = a3;
  v10 = *v6;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DeferredPromise(0, v16, v14, v15);
  v32 = v6[2];
  v17 = swift_retain();
  v18 = sub_1A44D8E2C(v17);
  v19 = *(_QWORD *)(v10 + 80);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v19;
  v20[3] = a6;
  v30 = a6;
  v20[4] = v18;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v19;
  v21[3] = a6;
  v21[4] = v18;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  swift_retain_n();
  v22(v13, a1, a5);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v19;
  *((_QWORD *)v25 + 3) = a5;
  *((_QWORD *)v25 + 4) = v30;
  *((_QWORD *)v25 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v25[v23], v13, a5);
  v26 = &v25[v24];
  v27 = v33;
  *(_QWORD *)v26 = v31;
  *((_QWORD *)v26 + 1) = v27;
  swift_retain();
  swift_retain();
  sub_1A44D96B0(v34, 0, 1, (uint64_t)sub_1A4453248, (uint64_t)v20, (uint64_t)sub_1A4453244, (uint64_t)v21, (uint64_t)sub_1A4451660, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v29 = *(_QWORD *)(v18 + 16);
  if (v29)
  {
    swift_retain();
    swift_release();
    return v29;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444D79C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  _BYTE v7[24];

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A4690AE0();
  DeferredPromise.resolve(_:)((uint64_t)v5);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Promise<A>.reduce<A>(into:on:updateAccumulatingResult:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;

  v33 = a4;
  v34 = a2;
  v31 = a3;
  v10 = *v6;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DeferredPromise(0, v16, v14, v15);
  v32 = v6[2];
  v17 = swift_retain();
  v18 = sub_1A44D8E2C(v17);
  v19 = *(_QWORD *)(v10 + 80);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v19;
  v20[3] = a6;
  v30 = a6;
  v20[4] = v18;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v19;
  v21[3] = a6;
  v21[4] = v18;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  swift_retain_n();
  v22(v13, a1, a5);
  v23 = (*(unsigned __int8 *)(v11 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = (v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = v19;
  *((_QWORD *)v25 + 3) = a5;
  *((_QWORD *)v25 + 4) = v30;
  *((_QWORD *)v25 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v25[v23], v13, a5);
  v26 = &v25[v24];
  v27 = v33;
  *(_QWORD *)v26 = v31;
  *((_QWORD *)v26 + 1) = v27;
  swift_retain();
  swift_retain();
  sub_1A44D96B0(v34, 0, 1, (uint64_t)sub_1A4453248, (uint64_t)v20, (uint64_t)sub_1A4453244, (uint64_t)v21, (uint64_t)sub_1A44516FC, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v29 = *(_QWORD *)(v18 + 16);
  if (v29)
  {
    swift_retain();
    swift_release();
    return v29;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444DADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[24];

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v11[-v7];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v6, v9, v2);
  sub_1A4690AD4();
  DeferredPromise.resolve(_:)((uint64_t)v8);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t Promise<A>.unique<A>(on:uniqueBy:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;

  v10 = *(_QWORD *)(*(_QWORD *)v6 + 80);
  swift_getAssociatedTypeWitness();
  v11 = sub_1A4690C78();
  type metadata accessor for DeferredPromise(0, v11, v12, v13);
  v14 = swift_retain();
  v15 = sub_1A44D8E2C(v14);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v10;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = a6;
  v16[6] = v15;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v10;
  v17[3] = a4;
  v17[4] = a5;
  v17[5] = a6;
  v17[6] = v15;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v10;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = a6;
  v18[6] = v15;
  v18[7] = a2;
  v18[8] = a3;
  swift_retain_n();
  swift_retain();
  sub_1A44D96B0(a1, 0, 1, (uint64_t)sub_1A4452EF8, (uint64_t)v16, (uint64_t)sub_1A4452ED8, (uint64_t)v17, (uint64_t)sub_1A4451770, (uint64_t)v18);
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v20 = *(_QWORD *)(v15 + 16);
  if (v20)
  {
    swift_retain();
    swift_release();
    return v20;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A444DE1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9[3];

  v9[0] = Sequence.unique<A>(by:)(a3, a4, a5, a6, a7, a8);
  DeferredPromise.resolve(_:)((uint64_t)v9);
  return swift_bridgeObjectRelease();
}

uint64_t static Promise.all<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4690EAC();
  if (v24)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
    v10 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v11 = (char *)swift_allocObject();
    *((_QWORD *)v11 + 2) = *(_QWORD *)(v3 + 80);
    *((_QWORD *)v11 + 3) = a2;
    *((_QWORD *)v11 + 4) = a3;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, a2);
    if (qword_1ED243C50 != -1)
      swift_once();
    v12 = (void *)qword_1ED2431A0;
    v13 = sub_1A4690C78();
    v14 = v12;
    v15 = sub_1A444C020(v14, (uint64_t)sub_1A4451794, (uint64_t)v11, v13);
    swift_release();
    swift_release();

  }
  else
  {
    v16 = sub_1A4690C78();
    type metadata accessor for Promise(0, v16, v17, v18);
    v24 = sub_1A4690BF4();
    v15 = (uint64_t)sub_1A44513F8((uint64_t)&v24, v19, v20, v21);
    swift_bridgeObjectRelease();
  }
  return v15;
}

uint64_t sub_1A444E0B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t AssociatedConformanceWitness;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a2;
  v34 = *(_QWORD *)(a3 - 8);
  v35 = a1;
  v36 = *(_QWORD *)(v34 + 64);
  v8 = MEMORY[0x1E0C80A78](a1);
  v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v17 = (char *)&v31 - v16;
  type metadata accessor for Promise(0, a3, v18, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v32, a4);
  sub_1A4690EC4();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  static Promise.all<A>(_:)(v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  v22 = v33;
  v21 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v35, a3);
  v23 = v21;
  v24 = (*(unsigned __int8 *)(v21 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v25 = (char *)swift_allocObject();
  *((_QWORD *)v25 + 2) = a3;
  *((_QWORD *)v25 + 3) = a4;
  *((_QWORD *)v25 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v25[v24], v22, a3);
  if (qword_1ED243C50 != -1)
    swift_once();
  v26 = (void *)qword_1ED2431A0;
  v27 = sub_1A4690C78();
  v28 = v26;
  v29 = sub_1A444C020(v28, (uint64_t)sub_1A4452E44, (uint64_t)v25, v27);
  swift_release();
  swift_release();

  return v29;
}

_QWORD *sub_1A444E31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v5 = sub_1A4690C78();
  type metadata accessor for Promise(0, v5, v6, v7);
  sub_1A44A2D8C(a3, a3);
  v8 = *(_QWORD *)(a3 - 8);
  swift_allocObject();
  v9 = sub_1A4690BC4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v10, a2, a3);
  sub_1A44A24E8(v9);
  v11 = sub_1A4690BE8();
  swift_bridgeObjectRelease();
  v17 = v11;
  v15 = sub_1A44513F8((uint64_t)&v17, v12, v13, v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t static Promise.all(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A444EE10(a1, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))static Promise.all<A>(_:), a3, a4);
}

uint64_t static Promise.race<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = v3;
  sub_1A4690EAC();
  if (v24)
  {
    v10 = type metadata accessor for Promise(0, *(_QWORD *)(v4 + 80), v8, v9);
    MEMORY[0x1E0C80A78](v10);
    v20 = a2;
    v21 = a3;
    v22 = a1;
    v23 = v24;
    v11 = swift_allocObject();
    Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44517B0, (uint64_t)v19, v12, v13);
    swift_release();
  }
  else
  {
    v14 = *(_QWORD *)(v4 + 80);
    v15 = type metadata accessor for Promise(0, v14, v8, v9);
    MEMORY[0x1E0C80A78](v15);
    v20 = v14;
    v21 = a2;
    v22 = a3;
    v11 = swift_allocObject();
    Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))nullsub_1, (uint64_t)v19, v16, v17);
  }
  return v11;
}

void sub_1A444E530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, _QWORD *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  void (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  void *v44;
  id v45;
  uint64_t v46;
  _QWORD *v47;
  void *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  void (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a5;
  v58 = a4;
  v60 = a2;
  v61 = a3;
  v59 = a1;
  v56 = a6;
  v10 = *a6;
  v11 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v17 = (char *)&v54 - v16;
  v18 = swift_allocObject();
  v19 = *(_QWORD *)(v10 + 80);
  *(_BYTE *)(v18 + 16) = sub_1A444EA00() & 1;
  *(_QWORD *)(v18 + 24) = v20;
  type metadata accessor for Promise(0, v19, v21, v22);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v24 = v19;
  v23(v13, v57, a7);
  sub_1A4690EC4();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v57 = static Promise.race<A>(_:)(v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v19;
  v26[3] = a7;
  v26[4] = a8;
  v26[5] = v18;
  v27 = v60;
  v26[6] = v59;
  v26[7] = v27;
  v28 = qword_1ED243C50;
  swift_retain();
  swift_retain();
  if (v28 != -1)
    swift_once();
  v29 = (id)qword_1ED2431A0;
  v55 = MEMORY[0x1E0DEE9C0] + 8;
  v30 = sub_1A444B8B0(v29, (uint64_t)sub_1A4452BC8, (uint64_t)v26, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();

  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v24;
  v31[3] = a7;
  v31[4] = a8;
  v31[5] = v18;
  v56 = a8;
  v32 = v58;
  v31[6] = v61;
  v31[7] = v32;
  v33 = (void *)qword_1ED2431A0;
  v34 = *(_QWORD *)(v30 + 16);
  v54 = v24;
  v35 = *(_QWORD *)(v34 + 16);
  swift_retain();
  swift_retain();
  v36 = v33;
  os_unfair_lock_lock_with_options();
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v36;
  *(_QWORD *)(v37 + 24) = 0;
  *(_BYTE *)(v37 + 32) = 1;
  *(_QWORD *)(v37 + 40) = nullsub_1;
  *(_QWORD *)(v37 + 48) = 0;
  *(_QWORD *)(v37 + 56) = sub_1A4452BE8;
  *(_QWORD *)(v37 + 64) = v31;
  *(_QWORD *)(v37 + 72) = nullsub_1;
  *(_QWORD *)(v37 + 80) = 0;
  v38 = v36;
  swift_retain();
  v39 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v37);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
  v39();
  swift_release();
  swift_release();
  swift_release();

  v40 = (_QWORD *)swift_allocObject();
  v41 = v54;
  v40[2] = v54;
  v40[3] = a7;
  v42 = v56;
  v40[4] = v56;
  v40[5] = v18;
  v43 = v60;
  v40[6] = v59;
  v40[7] = v43;
  v44 = (void *)qword_1ED2431A0;
  swift_retain();
  swift_retain();
  v45 = v44;
  v46 = sub_1A444B8B0(v45, (uint64_t)sub_1A4452BC8, (uint64_t)v40, v55);
  swift_release();

  v47 = (_QWORD *)swift_allocObject();
  v47[2] = v41;
  v47[3] = a7;
  v47[4] = v42;
  v47[5] = v18;
  v47[6] = v61;
  v47[7] = v32;
  v48 = (void *)qword_1ED2431A0;
  v49 = *(_QWORD *)(*(_QWORD *)(v46 + 16) + 16);
  swift_retain();
  swift_retain();
  v50 = v48;
  os_unfair_lock_lock_with_options();
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v50;
  *(_QWORD *)(v51 + 24) = 0;
  *(_BYTE *)(v51 + 32) = 1;
  *(_QWORD *)(v51 + 40) = nullsub_1;
  *(_QWORD *)(v51 + 48) = 0;
  *(_QWORD *)(v51 + 56) = sub_1A4452BE8;
  *(_QWORD *)(v51 + 64) = v47;
  *(_QWORD *)(v51 + 72) = nullsub_1;
  *(_QWORD *)(v51 + 80) = 0;
  v52 = v50;
  swift_retain();
  v53 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v51);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 16));
  v53();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A444EA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  _QWORD v8[2];

  v0 = sub_1A4691080();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A4691044();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1A46905DC();
  MEMORY[0x1E0C80A78](v6);
  sub_1A444AA40(0, (unint64_t *)&qword_1ED243E38);
  sub_1A46905C4();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1A4436344((unint64_t *)&qword_1ED243E30, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E18);
  sub_1A4452DAC((unint64_t *)&qword_1ED243E20, &qword_1ED243E18);
  sub_1A46912A8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  sub_1A46910B0();
  return 0;
}

uint64_t sub_1A444EBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  uint64_t result;
  _QWORD v13[6];

  v7 = *(void **)(v3 + 8);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = *(_QWORD *)(a3 + 16);
  v8[3] = v3;
  v8[4] = a1;
  v8[5] = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1A4452D08;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_1A4452D50;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A44697A0;
  v13[3] = &block_descriptor_156;
  v10 = _Block_copy(v13);
  v11 = v7;
  swift_retain();
  swift_release();
  dispatch_sync(v11, v10);

  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v10 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1A444ED08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t BlockRunner;
  _QWORD v14[9];

  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a7;
  v14[5] = a3;
  v14[6] = a4;
  v14[7] = a1;
  swift_beginAccess();
  BlockRunner = type metadata accessor for Promise.FirstBlockRunner(0, a5, v10, v11);
  sub_1A444EBCC(a8, (uint64_t)v14, BlockRunner);
  return swift_endAccess();
}

uint64_t sub_1A444ED8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t BlockRunner;
  _QWORD v14[5];

  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a1;
  swift_beginAccess();
  BlockRunner = type metadata accessor for Promise.FirstBlockRunner(0, a5, v10, v11);
  sub_1A444EBCC(a8, (uint64_t)v14, BlockRunner);
  return swift_endAccess();
}

uint64_t static Promise.race(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A444EE10(a1, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))static Promise.race<A>(_:), a3, a4);
}

uint64_t sub_1A444EE10(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  type metadata accessor for Promise(0, *(_QWORD *)(v4 + 80), a3, a4);
  v10 = a1;
  v7 = sub_1A4690C78();
  v8 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v7);
  return a2(&v10, v7, v8);
}

uint64_t static Promise.zip<A, B>(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v4 = *a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v4 + 80);
  *(_QWORD *)(v5 + 24) = a2;
  v6 = qword_1ED243C50;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = *(_QWORD *)(v2 + 80);
  v8 = (id)qword_1ED2431A0;
  v9 = sub_1A444C020(v8, (uint64_t)sub_1A44517BC, v5, v7);
  swift_release();

  return v9;
}

uint64_t sub_1A444EF48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v14;

  v4 = *a2;
  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = *(_QWORD *)(v4 + 80);
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a3);
  if (qword_1ED243C50 != -1)
    swift_once();
  v10 = (id)qword_1ED2431A0;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = sub_1A444B8B0(v10, (uint64_t)sub_1A4452AFC, v9, TupleTypeMetadata2);
  swift_release();

  return v12;
}

uint64_t static Promise.zip<A, B, C>(_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;

  v6 = *a1;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = *(_QWORD *)(v6 + 80);
  v7[3] = a2;
  v7[4] = a3;
  v8 = qword_1ED243C50;
  swift_retain();
  swift_retain();
  if (v8 != -1)
    swift_once();
  v9 = *(_QWORD *)(v3 + 80);
  v10 = (id)qword_1ED2431A0;
  v11 = sub_1A444C020(v10, (uint64_t)sub_1A4451800, (uint64_t)v7, v9);
  swift_release();

  return v11;
}

uint64_t sub_1A444F160(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t TupleTypeMetadata3;
  uint64_t v16;
  uint64_t v18;

  v6 = *a2;
  v7 = *a3;
  v8 = *(_QWORD *)(a4 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a4;
  *((_QWORD *)v12 + 3) = *(_QWORD *)(v6 + 80);
  *((_QWORD *)v12 + 4) = *(_QWORD *)(v7 + 80);
  *((_QWORD *)v12 + 5) = a3;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], v10, a4);
  v13 = qword_1ED243C50;
  swift_retain();
  if (v13 != -1)
    swift_once();
  v14 = (id)qword_1ED2431A0;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v16 = sub_1A444C020(v14, (uint64_t)sub_1A445299C, (uint64_t)v12, TupleTypeMetadata3);
  swift_release();

  return v16;
}

uint64_t sub_1A444F2CC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  id v20;
  uint64_t TupleTypeMetadata3;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;

  v26 = *a2;
  v27 = a2;
  v8 = *(_QWORD *)(a5 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](a1);
  v25 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v18 = (v13 + *(unsigned __int8 *)(v8 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a4;
  *((_QWORD *)v19 + 3) = a5;
  *((_QWORD *)v19 + 4) = *(_QWORD *)(v26 + 80);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v17], v14, a4);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v25, a5);
  if (qword_1ED243C50 != -1)
    swift_once();
  v20 = (id)qword_1ED2431A0;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v22 = sub_1A444B8B0(v20, (uint64_t)sub_1A4452A58, (uint64_t)v19, TupleTypeMetadata3);
  swift_release();

  return v22;
}

uint64_t sub_1A444F4A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v15;
  uint64_t v16;

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v15 = a7 + *(int *)(TupleTypeMetadata3 + 48);
  v16 = a7 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a7, a2, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(v15, a3, a5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(v16, a1, a6);
}

uint64_t static Promise.zip<A, B, C, D>(_:_:_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;

  v8 = *a1;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = *(_QWORD *)(v8 + 80);
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v10 = qword_1ED243C50;
  swift_retain();
  swift_retain();
  swift_retain();
  if (v10 != -1)
    swift_once();
  v11 = *(_QWORD *)(v4 + 80);
  v12 = (id)qword_1ED2431A0;
  v13 = sub_1A444C020(v12, (uint64_t)sub_1A4451850, (uint64_t)v9, v11);
  swift_release();

  return v13;
}

uint64_t sub_1A444F658(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t TupleTypeMetadata;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a2;
  v8 = *a2;
  v9 = *a3;
  v25 = *a4;
  v10 = *(_QWORD *)(a5 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v14, v13);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = a5;
  v26 = *(_QWORD *)(v8 + 80);
  *((_QWORD *)v16 + 3) = v26;
  v17 = *(_QWORD *)(v9 + 80);
  *((_QWORD *)v16 + 4) = v17;
  v18 = *(_QWORD *)(v25 + 80);
  *((_QWORD *)v16 + 5) = v18;
  *((_QWORD *)v16 + 6) = a3;
  *((_QWORD *)v16 + 7) = a4;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v16[v15], v12, a5);
  v19 = qword_1ED243C50;
  swift_retain();
  swift_retain();
  if (v19 != -1)
    swift_once();
  v20 = (id)qword_1ED2431A0;
  v28 = a5;
  v29 = v26;
  v30 = v17;
  v31 = v18;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v22 = sub_1A444C020(v20, (uint64_t)sub_1A44526D4, (uint64_t)v16, TupleTypeMetadata);
  swift_release();

  return v22;
}

uint64_t sub_1A444F800(uint64_t a1, _QWORD *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  id v24;
  uint64_t TupleTypeMetadata;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v32 = a3;
  v33 = a2;
  v9 = *a3;
  v30 = *a2;
  v31 = v9;
  v10 = *(_QWORD *)(a6 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](a1);
  v29 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a6);
  v19 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v20 = (v15 + *(unsigned __int8 *)(v10 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = a5;
  *((_QWORD *)v21 + 3) = a6;
  v30 = *(_QWORD *)(v30 + 80);
  *((_QWORD *)v21 + 4) = v30;
  v22 = v32;
  v31 = *(_QWORD *)(v31 + 80);
  *((_QWORD *)v21 + 5) = v31;
  *((_QWORD *)v21 + 6) = v22;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v19], v16, a5);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v21[v20], v29, a6);
  v23 = qword_1ED243C50;
  swift_retain();
  if (v23 != -1)
    swift_once();
  v24 = (id)qword_1ED2431A0;
  v34 = a5;
  v35 = a6;
  v36 = v30;
  v37 = v31;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v26 = sub_1A444C020(v24, (uint64_t)sub_1A44527AC, (uint64_t)v21, TupleTypeMetadata);
  swift_release();

  return v26;
}

uint64_t sub_1A444FA04(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  id v30;
  uint64_t TupleTypeMetadata;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v42 = a2;
  v36 = a4;
  v37 = a7;
  v38 = a1;
  v41 = *a2;
  v47 = *(_QWORD *)(a7 - 8);
  v8 = *(_QWORD *)(v47 + 64);
  v9 = MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 - 8);
  v35 = v14;
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v18, v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v36, a6);
  v20 = v47;
  v21 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))((char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v37);
  v22 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v23 = (v16 + *(unsigned __int8 *)(v11 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v24 = (v12 + *(unsigned __int8 *)(v20 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = (char *)swift_allocObject();
  v27 = v34;
  v26 = v35;
  *((_QWORD *)v25 + 2) = v35;
  *((_QWORD *)v25 + 3) = v27;
  *((_QWORD *)v25 + 4) = v21;
  v41 = *(_QWORD *)(v41 + 80);
  *((_QWORD *)v25 + 5) = v41;
  v28 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v29 = v26;
  v28(&v25[v22], v17, v26);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v25[v23], v39, v27);
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v25[v24], v40, v21);
  if (qword_1ED243C50 != -1)
    swift_once();
  v30 = (id)qword_1ED2431A0;
  v43 = v29;
  v44 = v27;
  v45 = v21;
  v46 = v41;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v32 = sub_1A444B8B0(v30, (uint64_t)sub_1A44528C8, (uint64_t)v25, TupleTypeMetadata);
  swift_release();

  return v32;
}

uint64_t sub_1A444FC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *TupleTypeMetadata;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v16 = a9 + TupleTypeMetadata[12];
  v17 = a9 + TupleTypeMetadata[16];
  v18 = a9 + TupleTypeMetadata[20];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(a9, a2, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(v16, a3, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(v17, a4, a7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 16))(v18, a1, a8);
}

uint64_t static Promise.firstNonNil<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD *__return_ptr, uint64_t);

  v7 = *(_QWORD *)(v3 + 80);
  v8 = sub_1A46911A0();
  v26 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - v10;
  v12 = *(_QWORD *)(a2 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v9);
  v27 = a3;
  v14 = sub_1A4690EAC();
  if (v28)
  {
    v26 = v8;
    v17 = (uint64_t)v28;
    v28(&v28, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
    v18 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v19 = (char *)swift_allocObject();
    *((_QWORD *)v19 + 2) = v7;
    *((_QWORD *)v19 + 3) = a2;
    *((_QWORD *)v19 + 4) = v27;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v18], (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    if (qword_1ED243C50 != -1)
      swift_once();
    v20 = (id)qword_1ED2431A0;
    v21 = sub_1A444C020(v20, (uint64_t)sub_1A44518C8, (uint64_t)v19, v26);
    swift_release();
    swift_release();

    sub_1A443A6F8(v17);
  }
  else
  {
    type metadata accessor for Promise(0, v8, v15, v16);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v11, 1, 1, v7);
    v21 = (uint64_t)sub_1A44513F8((uint64_t)v11, v22, v23, v24);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v8);
  }
  return v21;
}

_QWORD *sub_1A444FF78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a2;
  v40 = a1;
  v34[0] = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v8;
  v34[1] = *(_QWORD *)(v8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v38 = AssociatedTypeWitness;
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v36 = (char *)v34 - v10;
  v11 = sub_1A46911A0();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v34 - v17;
  v19 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v18, v40, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v18, v11);
    type metadata accessor for Promise(0, a3, v22, v23);
    (*(void (**)(char *, uint64_t, uint64_t))(v34[0] + 16))(v7, v35, a4);
    v24 = v36;
    sub_1A4690EC4();
    v25 = v38;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v27 = (_QWORD *)static Promise.firstNonNil<A>(_:)(v24, v25, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, a3);
    type metadata accessor for Promise(0, v11, v28, v29);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v21, a3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, a3);
    v27 = sub_1A44513F8((uint64_t)v15, v30, v31, v32);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, a3);
  }
  return v27;
}

uint64_t static Promise.firstNonNil(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  type metadata accessor for Promise(0, *(_QWORD *)(v4 + 80), a3, a4);
  v12 = a1;
  v6 = sub_1A46911A0();
  type metadata accessor for Promise(255, v6, v7, v8);
  swift_getFunctionTypeMetadata0();
  v9 = sub_1A4690C78();
  v10 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v9);
  return static Promise.firstNonNil<A>(_:)((uint64_t)&v12, v9, v10);
}

uint64_t static Promise.delay(until:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242180);
  v2 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = 0;
  *(_DWORD *)(v3 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2420F0);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v5 + 40) = 0;
  *(_BYTE *)(v5 + 48) = -1;
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = 0;
  *(_QWORD *)(v2 + 16) = v5;
  swift_retain_n();
  sub_1A4451980((uint64_t)sub_1A4451918, v2, a1);
  swift_release_n();
  return v2;
}

uint64_t Promise.errorAsNil()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_1A46911A0();
  type metadata accessor for Promise(0, v1, v2, v3);
  v4 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A4451C20, v0, v5, v6);
  return v4;
}

void sub_1A44503F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void (*v18)(void);
  id v19;

  v7 = *a5;
  v8 = (_QWORD *)swift_allocObject();
  v9 = *(_QWORD *)(v7 + 80);
  v8[2] = v9;
  v8[3] = a1;
  v8[4] = a2;
  v10 = qword_1ED243C50;
  swift_retain();
  if (v10 != -1)
    swift_once();
  v11 = (id)qword_1ED2431A0;
  v12 = sub_1A444B8B0(v11, (uint64_t)sub_1A44525F0, (uint64_t)v8, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();

  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = a1;
  v13[4] = a2;
  v14 = (void *)qword_1ED2431A0;
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 16) + 16);
  swift_retain();
  v16 = v14;
  os_unfair_lock_lock_with_options();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = 0;
  *(_BYTE *)(v17 + 32) = 1;
  *(_QWORD *)(v17 + 40) = nullsub_1;
  *(_QWORD *)(v17 + 48) = 0;
  *(_QWORD *)(v17 + 56) = sub_1A445260C;
  *(_QWORD *)(v17 + 64) = v13;
  *(_QWORD *)(v17 + 72) = nullsub_1;
  *(_QWORD *)(v17 + 80) = 0;
  v19 = v16;
  swift_retain();
  v18 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v17);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  v18();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A44505BC(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[2];

  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - v9;
  v11 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v13 - v9, a1, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, a4);
  a2(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A4450694(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_1A46911A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))((char *)&v11 - v8, 1, 1, a4);
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t Promise.get()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_1A4450758()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1A44507D0;
  return sub_1A4691BB4();
}

uint64_t sub_1A44507D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A445083C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4450848(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _QWORD *v18;
  id v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void (*v26)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v4 = sub_1A4690CE4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v32((char *)&v28 - v6, a1, v4);
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = (v8 + 24) & ~v8;
  v34 = v8 | 7;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v3;
  v35 = v9;
  v33 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v33(v10 + v9, v7, v4);
  if (qword_1ED243C50 != -1)
    swift_once();
  v11 = (id)qword_1ED2431A0;
  v12 = sub_1A444B8B0(v11, (uint64_t)sub_1A44523D4, v10, MEMORY[0x1E0DEE9C0] + 8);
  v31 = v12;
  swift_release();

  v13 = v32;
  v32(v7, a1, v4);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v3;
  v33(v14 + v35, v7, v4);
  v15 = *(_QWORD *)(v12 + 16);
  v29 = a1;
  v30 = v3;
  v16 = *(_QWORD *)(v15 + 16);
  v17 = (id)qword_1ED2431A0;
  os_unfair_lock_lock_with_options();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = sub_1A4452454;
  v18[4] = v14;
  v19 = v17;
  swift_retain();
  v20 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44524D8, (uint64_t)v18);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  v20();
  swift_release();

  swift_release();
  v13(v7, v29, v4);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v30;
  v33(v21 + v35, v7, v4);
  v22 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + 16);
  v23 = (id)qword_1ED2431A0;
  os_unfair_lock_lock_with_options();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = 0;
  *(_BYTE *)(v24 + 32) = 1;
  *(_QWORD *)(v24 + 40) = nullsub_1;
  *(_QWORD *)(v24 + 48) = 0;
  *(_QWORD *)(v24 + 56) = sub_1A4452580;
  *(_QWORD *)(v24 + 64) = v21;
  *(_QWORD *)(v24 + 72) = nullsub_1;
  *(_QWORD *)(v24 + 80) = 0;
  v25 = v23;
  swift_retain();
  v26 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v24);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
  v26();
  swift_release();

  swift_release();
  return swift_release();
}

uint64_t sub_1A4450BC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4690CE4();
  return sub_1A4690CD8();
}

uint64_t sub_1A4450C64()
{
  sub_1A4690CF0();
  sub_1A4436344(&qword_1EE71CC20, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
  swift_allocError();
  sub_1A46906D8();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4690CE4();
  return sub_1A4690CCC();
}

uint64_t sub_1A4450D10(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4690CE4();
  return sub_1A4690CCC();
}

uint64_t Promise.__allocating_init(task:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[4];

  v6[2] = *(_QWORD *)(v1 + 80);
  v6[3] = a1;
  v2 = swift_allocObject();
  Promise.init(resolver:)((void (*)(uint64_t (*)(), _QWORD *, uint64_t (*)(), _QWORD *, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A4451C30, (uint64_t)v6, v3, v4);
  swift_release();
  return v2;
}

uint64_t sub_1A4450DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CC08);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A4690D08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a8;
  v20[5] = a7;
  v20[6] = a1;
  v20[7] = a2;
  v20[8] = a5;
  v20[9] = a6;
  v20[10] = a3;
  v20[11] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A44F8E0C((uint64_t)v18, (uint64_t)&unk_1EE71CC18, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1A4450EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8[8] = v13;
  v8[9] = v14;
  v8[6] = a8;
  v8[7] = v12;
  v8[4] = a6;
  v8[5] = a7;
  v8[3] = a5;
  v9 = sub_1A4690CF0();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = swift_task_alloc();
  v8[13] = *(_QWORD *)(v14 - 8);
  v8[14] = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  v8[15] = v10;
  v8[16] = __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
  *v10 = v8;
  v10[1] = sub_1A4450FCC;
  return sub_1A4690D14();
}

uint64_t sub_1A4450FCC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4451030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t))(v0 + 24))(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4451098()
{
  uint64_t v0;
  void *v1;
  id v2;
  char v3;
  void *v4;
  void (*v5)(uint64_t);
  uint64_t v6;

  v1 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  v3 = swift_dynamicCast();
  v4 = *(void **)(v0 + 136);
  if ((v3 & 1) != 0)
  {
    v5 = *(void (**)(uint64_t))(v0 + 40);
    v6 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    v5(v6);
  }
  else
  {
    (*(void (**)(_QWORD))(v0 + 56))(*(_QWORD *)(v0 + 136));
  }

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4451148(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1A44D93E4(a1, v3, v4, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A44511B0(void *a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1A44D94E8(a1, v3, v4, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A4451218()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    v1 = swift_release();
    sub_1A44D95D4(v1, v2, v3, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1A4451268()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

BOOL _s19ReminderKitInternal12PromiseErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[24];
  unint64_t v7;
  _BYTE v8[32];

  sub_1A444AC88(a1, (uint64_t)v6);
  v3 = v7;
  if (v7 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    v3 = 2;
  }
  sub_1A444AC88(a2, (uint64_t)v6);
  v4 = v7;
  if (v7 >= 2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    v4 = 2;
  }
  return v3 == v4;
}

_QWORD *sub_1A445131C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v13;

  v2 = v1;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Seal(0, v4, v8, v9);
  type metadata accessor for UnfairLock();
  v10 = swift_allocObject();
  v11 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v10 + 16) = v11;
  *v11 = 0;
  *(_DWORD *)(v10 + 24) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v2[2] = sub_1A44D9310(v10, (uint64_t)v7);
  return v2;
}

_QWORD *sub_1A44513F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for Promise(0, *(_QWORD *)(v4 + 80), a3, a4);
  swift_allocObject();
  return sub_1A445131C(a1);
}

uint64_t sub_1A4451438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D93E4(a1, a2, a3, a4);
}

uint64_t sub_1A4451458(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D94E8(a1, a2, a3, a4);
}

uint64_t sub_1A4451478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44D95D4(a1, a2, a3, a4);
}

uint64_t sub_1A4451498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A444B320(a1, a2, a3, a4, *(void (**)(void (*)(uint64_t), _QWORD *))(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 16));
}

uint64_t sub_1A44514A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1A444B570(a1, a2, a3, a4, a5, a6, *(_QWORD **)(v6 + 16));
}

uint64_t sub_1A44514B0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A44514D8(uint64_t a1)
{
  return sub_1A4451558(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444BBDC);
}

uint64_t sub_1A44514E8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A444BF08(a1, v1[3], v1[4], v1[5]);
}

uint64_t sub_1A4451508(uint64_t a1)
{
  uint64_t v1;

  return sub_1A444C18C(a1, *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_5Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A445154C(uint64_t a1)
{
  return sub_1A4451558(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444C52C);
}

uint64_t sub_1A4451558(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3]);
}

uint64_t sub_1A445156C()
{
  return swift_deallocObject();
}

uint64_t sub_1A4451580(uint64_t a1)
{
  uint64_t v1;

  return sub_1A444C978(a1, *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40));
}

uint64_t sub_1A4451590()
{
  return swift_deallocObject();
}

uint64_t sub_1A44515A4()
{
  uint64_t v0;

  return sub_1A444CAD0(*(_QWORD *)(v0 + 32), *(void (**)(void))(v0 + 40));
}

uint64_t sub_1A44515B4()
{
  return swift_deallocObject();
}

uint64_t sub_1A44515C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1A44515FC()
{
  return swift_deallocObject();
}

uint64_t sub_1A445160C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1A444CC8C(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1A445162C(uint64_t a1)
{
  return sub_1A4451648(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444D1D8);
}

uint64_t sub_1A445163C(uint64_t a1)
{
  return sub_1A4451648(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444D494);
}

uint64_t sub_1A4451648(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[4], v2[5], v2[6], v2[2], v2[3]);
}

uint64_t sub_1A4451660(uint64_t a1)
{
  return sub_1A4451708(a1, (uint64_t (*)(uint64_t, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444D79C);
}

uint64_t objectdestroy_46Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44516FC(uint64_t a1)
{
  return sub_1A4451708(a1, (uint64_t (*)(uint64_t, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444DADC);
}

uint64_t sub_1A4451708(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, char *, _QWORD, _QWORD, _QWORD, _QWORD))
{
  char *v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;

  v3 = *(_QWORD *)(*((_QWORD *)v2 + 3) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = &v2[(*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8];
  return a2(a1, *((_QWORD *)v2 + 5), &v2[v4], *(_QWORD *)v5, *((_QWORD *)v5 + 1), *((_QWORD *)v2 + 2), *((_QWORD *)v2 + 4));
}

uint64_t sub_1A4451744()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4451770(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A444DE1C(a1, v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t type metadata accessor for Promise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Promise);
}

uint64_t sub_1A4451794(uint64_t a1)
{
  return sub_1A44518E4(a1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1A444E0B8);
}

void sub_1A44517B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A444E530(a1, a2, a3, a4, *(_QWORD *)(v4 + 32), *(_QWORD **)(v4 + 40), *(_QWORD *)(v4 + 16), *(_QWORD **)(v4 + 24));
}

uint64_t sub_1A44517BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A444EF48(a1, *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A44517D4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4451800(uint64_t a1)
{
  uint64_t v1;

  return sub_1A444F160(a1, *(uint64_t **)(v1 + 24), *(uint64_t **)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A445181C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4451850(uint64_t a1)
{
  uint64_t v1;

  return sub_1A444F658(a1, *(_QWORD **)(v1 + 24), *(uint64_t **)(v1 + 32), *(uint64_t **)(v1 + 40), *(_QWORD *)(v1 + 16));
}

uint64_t objectdestroy_55Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A44518C8(uint64_t a1)
{
  return sub_1A44518E4(a1, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1A444FF78);
}

uint64_t sub_1A44518E4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 24) - 8) + 80);
  return a2(a1, v2 + ((v3 + 40) & ~v3), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1A4451918()
{
  return sub_1A4567508();
}

uint64_t sub_1A4451938()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  return v0;
}

uint64_t sub_1A4451980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v21 = a3;
  v5 = sub_1A46905A0();
  v22 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A46905DC();
  v8 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A46905AC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED243E38);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF540], v11);
  swift_retain();
  v16 = (void *)sub_1A46910BC();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A4452640;
  *(_QWORD *)(v17 + 24) = v15;
  aBlock[4] = sub_1A4452640;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor;
  v18 = _Block_copy(aBlock);
  sub_1A46905C4();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A4436344((unint64_t *)&qword_1ED242FC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A4452DAC((unint64_t *)&qword_1ED242FE0, (uint64_t *)&unk_1ED242FD0);
  sub_1A46912A8();
  MEMORY[0x1A859E8A8](v21, v10, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  return swift_release();
}

void sub_1A4451C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_1A44503F4(a1, a2, a3, a4, v4);
}

uint64_t sub_1A4451C28(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4450848(a1, v1);
}

uint64_t sub_1A4451C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1A4450DCC(a1, a2, a3, a4, a5, a6, *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 16));
}

unint64_t sub_1A4451C3C()
{
  unint64_t result;

  result = qword_1EE720D90;
  if (!qword_1EE720D90)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for PromiseError, &type metadata for PromiseError);
    atomic_store(result, (unint64_t *)&qword_1EE720D90);
  }
  return result;
}

uint64_t destroy for PromiseError(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    v1 = result;
    __swift_destroy_boxed_opaque_existential_1(result);
    return __swift_destroy_boxed_opaque_existential_1(v1 + 32);
  }
  return result;
}

uint64_t initializeWithCopy for PromiseError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v5 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 56) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for PromiseError(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *((_QWORD *)a2 + 3);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
      v5 = *((_QWORD *)a2 + 7);
      *(_QWORD *)(a1 + 56) = v5;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 32, (uint64_t)(a2 + 2));
      return a1;
    }
LABEL_7:
    v6 = *a2;
    v7 = a2[1];
    v8 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)a1 = v6;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + 32), (uint64_t *)a2 + 4);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for PromiseError(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    goto LABEL_6;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
LABEL_6:
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for PromiseError(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PromiseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_1A44520A0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_1A44520B8(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 56) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PromiseError()
{
  return &type metadata for PromiseError;
}

uint64_t type metadata accessor for PromiseDisposableToken()
{
  return objc_opt_self();
}

uint64_t method lookup function for PromiseDisposableToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PromiseDisposableToken.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1A4452134()
{
  return sub_1A445220C();
}

uint64_t method lookup function for Promise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Promise.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Promise.__allocating_init(error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Promise.__allocating_init(resolver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of Promise.then<A>(on:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Promise.then<A, B>(on:disposeOn:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Promise.error(on:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Promise.error<A>(on:disposeOn:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of Promise.always(on:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Promise.always<A>(on:disposeOn:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of Promise.cancelled(on:closure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of Promise.rebase(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of Promise.cast<A>(as:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t sub_1A4452200()
{
  return sub_1A445220C();
}

uint64_t sub_1A445220C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for PromiseWeakResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PromiseWeakResolver);
}

unint64_t sub_1A4452250()
{
  unint64_t result;

  result = qword_1EE71CC00;
  if (!qword_1EE71CC00)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for PromiseError, &type metadata for PromiseError);
    atomic_store(result, (unint64_t *)&qword_1EE71CC00);
  }
  return result;
}

uint64_t sub_1A4452294()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44522D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1A4452388;
  return sub_1A4450EE8(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A4452388()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A44523D4(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4690CE4();
  return sub_1A4450BC0(a1);
}

uint64_t sub_1A4452454()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4690CE4();
  return sub_1A4450C64();
}

uint64_t sub_1A44524AC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44524D8(uint64_t result)
{
  uint64_t v1;

  if (*(unsigned __int8 *)(result + 8) >= 2u)
    return sub_1A44DA18C(*(_QWORD *)(v1 + 16), 0, 1, *(uint64_t (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32));
  return result;
}

uint64_t objectdestroy_77Tm()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v1 = sub_1A4690CE4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A4452580(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  sub_1A4690CE4();
  return sub_1A4450D10(a1);
}

uint64_t sub_1A44525F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A44505BC(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A445260C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4450694(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A445261C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4452640()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1A4452660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A44526D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1A444F800(a1, *(_QWORD **)(v1 + 48), *(_QWORD **)(v1 + 56), v1 + ((v3 + 64) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A4452704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);
  return swift_deallocObject();
}

uint64_t sub_1A44527AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1A444FA04(a1, *(_QWORD **)(v1 + 48), v1 + v5, v1 + ((v5 + *(_QWORD *)(v4 + 64) + v6) & ~v6), v2, v3, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A44527FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = *((_QWORD *)v0 + 3);
  v2 = *((_QWORD *)v0 + 4);
  v3 = *(_QWORD *)(*((_QWORD *)v0 + 2) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v2 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(char *))(v3 + 8))(&v0[v4]);
  (*(void (**)(char *, uint64_t))(v5 + 8))(&v0[v6], v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(&v0[v8], v2);
  return swift_deallocObject();
}

uint64_t sub_1A44528C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v3 = v2[2];
  v4 = v2[3];
  v5 = v2[4];
  v6 = *(_QWORD *)(v3 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = (v7 + *(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1A444FC70(a1, (uint64_t)v2 + v7, (uint64_t)v2 + v9, (uint64_t)v2 + ((v9 + *(_QWORD *)(v8 + 64) + v10) & ~v10), v3, v4, v5, v2[5], a2);
}

uint64_t sub_1A4452930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A445299C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1A444F2CC(a1, *(_QWORD **)(v1 + 40), v1 + ((v3 + 48) & ~v3), v2, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A44529CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + v3);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);
  return swift_deallocObject();
}

uint64_t sub_1A4452A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v3 = v2[2];
  v4 = v2[3];
  v5 = *(_QWORD *)(v3 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return sub_1A444F4A0(a1, (uint64_t)v2 + v6, (uint64_t)v2 + ((v6 + *(_QWORD *)(v5 + 64) + v7) & ~v7), v3, v4, v2[4], a2);
}

uint64_t sub_1A4452AA4()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A4452AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = v2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v9 = a2 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v8, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, a1, v6);
}

uint64_t sub_1A4452BA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A4452BC8(uint64_t a1)
{
  return sub_1A4452BFC(a1, (uint64_t)sub_1A4452D58);
}

uint64_t sub_1A4452BE8(uint64_t a1)
{
  return sub_1A4452C50(a1, (uint64_t)sub_1A4452CE8);
}

uint64_t sub_1A4452BFC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A444ED08(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4], a2);
}

uint64_t objectdestroy_129Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4452C50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1A444ED8C(a1, v2[5], v2[6], v2[7], v2[2], v2[3], v2[4], a2);
}

uint64_t objectdestroy_89Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4452CB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4513B30(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(void *))(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t type metadata accessor for Promise.FirstBlockRunner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Promise.FirstBlockRunner);
}

uint64_t sub_1A4452CF8()
{
  return swift_deallocObject();
}

uint64_t sub_1A4452D08()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t (*v2)(void);
  uint64_t result;

  v1 = *(_BYTE **)(v0 + 24);
  if ((*v1 & 1) == 0)
  {
    v2 = *(uint64_t (**)(void))(v0 + 32);
    *v1 = 1;
    return v2();
  }
  return result;
}

uint64_t sub_1A4452D40()
{
  return swift_deallocObject();
}

uint64_t sub_1A4452D50()
{
  uint64_t v0;

  return sub_1A4469780(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1A4452D5C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1A4452D84()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 40))(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1A4452DAC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4452DEC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

_QWORD *sub_1A4452E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1A444E31C(a1, v1 + ((v3 + 40) & ~v3), v2);
}

uint64_t sub_1A4452E74(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  return a1;
}

uint64_t sub_1A4452EB4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4452ED8(void *a1)
{
  return DeferredPromise.reject(_:)(a1);
}

void sub_1A4452EF8()
{
  DeferredPromise.cancel()();
}

uint64_t sub_1A4452F18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4452F3C(void *a1)
{
  return DeferredPromise.reject(_:)(a1);
}

void sub_1A4452F5C()
{
  DeferredPromise.cancel()();
}

uint64_t sub_1A4452F7C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v2 + 40))();
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_1A4452FE8()
{
  unint64_t result;

  result = qword_1ED2439A0;
  if (!qword_1ED2439A0)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2439A0);
  }
  return result;
}

uint64_t sub_1A445302C(uint64_t a1)
{
  return DeferredPromise.resolve(_:)(a1);
}

uint64_t sub_1A445304C(uint64_t a1)
{
  return DeferredPromise.resolve(_:)(a1);
}

uint64_t sub_1A445306C(void *a1)
{
  return DeferredPromise.reject(_:)(a1);
}

void sub_1A445308C()
{
  DeferredPromise.cancel()();
}

uint64_t sub_1A44530AC()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A44530E0(uint64_t a1)
{
  uint64_t v1;

  sub_1A444B62C(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t, uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(id))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16));
}

void sub_1A44530F8(uint64_t a1)
{
  uint64_t v1;

  sub_1A444B3B4(a1, *(void (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A4453108()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t initializeBufferWithCopyOfBuffer for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = v3;
  return a1;
}

void destroy for REMRemindersInCalendarDataView.FetchResultToken(uint64_t a1)
{

}

uint64_t sub_1A445314C(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

uint64_t sub_1A4453188(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.FetchResultToken(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.FetchResultToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void REMStore.invoke<A, B>(_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, void *, uint64_t, uint64_t);
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22[3];

  v5 = v4;
  v22[2] = *(id *)MEMORY[0x1E0C80C00];
  v22[0] = 0;
  v9 = objc_msgSend(v4, sel_resultFromPerformingInvocation_error_, a1, v22);
  v10 = v22[0];
  if (v9)
  {
    v11 = v9;
    v21 = a2;
    swift_getAssociatedTypeWitness();
    v12 = swift_dynamicCastUnknownClass();
    if (v12)
    {
      v13 = v12;
      v22[0] = a1;
      v14 = *(void (**)(uint64_t, void *, uint64_t, uint64_t))(a4 + 24);
      v15 = v10;
      v11 = v11;
      v14(v13, v5, v21, a4);

    }
    else
    {
      v17 = (void *)objc_opt_self();
      v22[0] = 0;
      v22[1] = (id)0xE000000000000000;
      v18 = v10;
      sub_1A4691410();
      sub_1A4690984();
      v19 = objc_msgSend(v11, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      sub_1A4691DD0();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      MEMORY[0x1A85A0000](MEMORY[0x1E0CB2120], a2);
      sub_1A4691A1C();
      v20 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v20);

      swift_willThrow();
    }

  }
  else
  {
    v16 = v22[0];
    sub_1A468FE68();

    swift_willThrow();
  }
}

uint64_t REMStoreInvocationKeySpace.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMStoreInvocationKeySpace.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of REMInvocableProtocol.clientResult(from:store:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t type metadata accessor for REMStoreInvocationKeySpace()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMStoreInvocationKeySpace()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A445362C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71CF40);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71CF40);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void REMRecurrenceFrequency.shortDescription.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_1A4690318();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return;
    default:
      if (qword_1EE71BFD0 != -1)
        swift_once();
      v6 = __swift_project_value_buffer(0x796C72756F68, (uint64_t)qword_1EE71CF40);
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, 0x796C72756F68);
      v7 = MEMORY[0x1E0DEE9D8];
      sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
      sub_1A443CDB8(v7);
      sub_1A4510F48((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
      __break(1u);
      break;
  }
}

void REMRecurrenceFrequency.tinyDescription.getter(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1A4690318();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >= 5)
  {
    v7 = v4;
    if (qword_1EE71BFD0 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE71CF40);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
    sub_1A443CDB8(v9);
    sub_1A4510F48((uint64_t)"Unknown REMRecurrenceFrequency", 30, 2);
    __break(1u);
  }
}

unint64_t sub_1A445391C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CF58);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4696430;
  *(_QWORD *)(inited + 32) = 28261;
  *(_QWORD *)(inited + 40) = 0xE200000000000000;
  v1 = sub_1A462EDF8((uint64_t)&unk_1E4C0DDD0);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = 0x736E61482D687ALL;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  v2 = sub_1A462EDF8((uint64_t)&unk_1E4C0F2E0);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 72) = v2;
  return sub_1A443CEEC(inited);
}

uint64_t Calendar.isDateComponents(_:inSameDayAs:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  id v26;
  id v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  unsigned int v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  void *v36;
  uint64_t v37;
  char *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  id v40;
  id v41;
  char *v42;
  char *v43;
  char *v44;
  char v45;
  void (*v46)(char *, uint64_t);
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;

  v53 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v9 = MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - v11;
  v13 = sub_1A46900B4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v56 = (char *)&v48 - v18;
  MEMORY[0x1E0C80A78](v17);
  v55 = (char *)&v48 - v19;
  v20 = sub_1A468FDE4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v22(v7, a1, v20);
  v23 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v23(v7, 0, 1, v20);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v25 = 0;
  if (v24(v7, 1, v20) != 1)
  {
    v25 = (void *)sub_1A468FD30();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
  }
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D844D0]), sel_initWithDueDateComponents_alarms_, v25, 0);

  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_8;
  }
  v50 = v23;
  v27 = objc_msgSend(v26, sel_date);

  v28 = v56;
  sub_1A4690084();

  v29 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v29(v12, v28, v13);
  v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v30(v12, 0, 1, v13);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v31(v12, 1, v13) == 1)
  {
LABEL_8:
    v37 = (uint64_t)v12;
LABEL_15:
    sub_1A445404C(v37, &qword_1ED243190);
    v45 = 0;
    return v45 & 1;
  }
  v48 = v31;
  v49 = v14;
  v29(v55, v12, v13);
  v32 = v54;
  v22(v54, v53, v20);
  v50(v32, 0, 1, v20);
  v33 = v24(v32, 1, v20);
  v34 = v29;
  v35 = v30;
  if (v33 == 1)
  {
    v36 = 0;
  }
  else
  {
    v36 = (void *)sub_1A468FD30();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v32, v20);
  }
  v38 = v52;
  v39 = v48;
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D844D0]), sel_initWithDueDateComponents_alarms_, v36, 0);

  if (!v40)
  {
    v35(v38, 1, 1, v13);
    goto LABEL_14;
  }
  v41 = objc_msgSend(v40, sel_date);

  v42 = v56;
  sub_1A4690084();

  v34(v38, v42, v13);
  v35(v38, 0, 1, v13);
  if (v39(v38, 1, v13) == 1)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v49 + 8))(v55, v13);
    v37 = (uint64_t)v38;
    goto LABEL_15;
  }
  v43 = v51;
  v34(v51, v38, v13);
  v44 = v55;
  v45 = sub_1A4690270();
  v46 = *(void (**)(char *, uint64_t))(v49 + 8);
  v46(v43, v13);
  v46(v44, v13);
  return v45 & 1;
}

uint64_t Calendar.endOfDay(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v3 = sub_1A4690294();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A46900B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v19 - v15;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CB1130], v3);
  sub_1A4690264();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A445404C((uint64_t)v9, &qword_1ED243190);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v20, a1, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    sub_1A469021C();
    sub_1A4690024();
    v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v14, v10);
    return ((uint64_t (*)(char *, uint64_t))v18)(v16, v10);
  }
}

uint64_t Calendar.startOfMonth(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4454094(a1, MEMORY[0x1E0CAE5A0], a2);
}

uint64_t sub_1A445404C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t Calendar.endOfMonth(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4454094(a1, MEMORY[0x1E0CAE580], a2);
}

uint64_t sub_1A4454094@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v23)(uint64_t);
  uint64_t v24;

  v23 = a2;
  v24 = a3;
  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A4690294();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CF60);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CB1160], v8);
  sub_1A4690228();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = sub_1A468FBF8();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18);
  if ((_DWORD)v20 == 1)
  {
    sub_1A445404C((uint64_t)v14, &qword_1EE71CF60);
    v21 = 1;
  }
  else
  {
    v23(v20);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
    v21 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v17, v21, 1, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v17, 1, v4) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v24, v7, v4);
    return sub_1A445404C((uint64_t)v17, &qword_1ED243190);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v24, v17, v4);
  }
}

uint64_t Calendar.beginningOfNextDay(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;

  v52 = a1;
  v54 = a2;
  v53 = sub_1A46900B4();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v43 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A4690240();
  v4 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  v50 = v4;
  MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1A469024C();
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A4690234();
  v9 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A468FDE4();
  v45 = *(_QWORD *)(v20 - 8);
  v46 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1A46902AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v19, 1, 1, v23);
  v24 = sub_1A46902F4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v16, 1, 1, v24);
  v41 = v22;
  sub_1A468FDB4();
  v25 = v9;
  v26 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
  v27 = v11;
  v26(v11, *MEMORY[0x1E0CB0F90], v8);
  v28 = v44;
  v29 = v47;
  (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v7, *MEMORY[0x1E0CB1010], v47);
  v31 = v49;
  v30 = v50;
  v32 = v48;
  (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v48, *MEMORY[0x1E0CB0FD8], v49);
  v33 = v27;
  v34 = v7;
  v35 = v32;
  sub_1A4690288();
  v36 = v51;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v35, v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v29);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v33, v42);
  v37 = v53;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v41, v46);
  v38 = v43;
  v39 = (uint64_t)v55;
  (*(void (**)(void))(v36 + 16))();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v39, 1, v37) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v54, v38, v37);
    return sub_1A445404C(v39, &qword_1ED243190);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v37);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v54, v39, v37);
  }
}

uint64_t Calendar.beginningOfPreviousDay(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;

  v58 = a2;
  v60 = a1;
  v2 = sub_1A469024C();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A4690240();
  v53 = *(_QWORD *)(v4 - 8);
  v54 = v4;
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1A4690234();
  v44 = *(_QWORD *)(v48 - 8);
  v6 = v44;
  MEMORY[0x1E0C80A78](v48);
  v45 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A46902AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1A46900B4();
  v50 = *(_QWORD *)(v52 - 8);
  v12 = MEMORY[0x1E0C80A78](v52);
  v49 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v43 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1A468FDE4();
  v46 = *(_QWORD *)(v25 - 8);
  v47 = v25;
  MEMORY[0x1E0C80A78](v25);
  v59 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v24, 1, 1, v8);
  v27 = sub_1A46902F4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v21, 1, 1, v27);
  sub_1A468FDB4();
  sub_1A469027C();
  v43 = v15;
  sub_1A469021C();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v28 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v29 = v45;
  v30 = v48;
  v28(v45, *MEMORY[0x1E0CB0F90], v48);
  v31 = v53;
  v32 = v54;
  v33 = v51;
  (*(void (**)(char *, _QWORD, uint64_t))(v53 + 104))(v51, *MEMORY[0x1E0CB0FE0], v54);
  v34 = v55;
  v35 = v56;
  v36 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v56 + 104))(v55, *MEMORY[0x1E0CB1010], v57);
  sub_1A4690288();
  v37 = v36;
  v38 = v49;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v37);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v32);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v30);
  v39 = v50;
  v40 = *(void (**)(char *, uint64_t))(v50 + 8);
  v41 = v52;
  v40(v43, v52);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v59, v47);
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v60, v41);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v18, 1, v41) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v58, v38, v41);
    return sub_1A445404C((uint64_t)v18, &qword_1ED243190);
  }
  else
  {
    v40(v38, v41);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v58, v18, v41);
  }
}

uint64_t Equatable.tryEqual(_:_:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  void *v14;
  void *v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v7 = v6;
  v17 = a6;
  v18 = a2;
  v16[0] = a5;
  v19 = a3;
  v9 = sub_1A468FF7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[1] = v7;
  v16[2] = a1;
  result = sub_1A4690864();
  if ((result & 1) == 0)
  {
    sub_1A468FEBC();
    sub_1A468FEC8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v14 = (void *)objc_opt_self();
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    sub_1A4691A10();
    sub_1A4690984();
    sub_1A4691A10();
    sub_1A4690984();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v22 = v17;
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4690984();
    sub_1A4690984();
    v15 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_internalErrorWithDebugDescription_, v15, v16[0]);

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A4454E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71CF68);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71CF68);
  if (qword_1EE71C088 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE75B8A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

ReminderKitInternal::RDUserNotificationCategory_optional __swiftcall RDUserNotificationCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::RDUserNotificationCategory_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static RDUserNotificationCategory.allCases.getter()
{
  return &unk_1E4C0F4C8;
}

uint64_t RDUserNotificationCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A4454FB0 + 4 * byte_1A4696440[*v0]))(0xD00000000000001FLL, 0x80000001A46BB7D0);
}

unint64_t sub_1A4454FB0()
{
  return 0xD000000000000023;
}

uint64_t sub_1A445507C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466AB30(*a1, *a2);
}

uint64_t sub_1A4455088()
{
  sub_1A4691C8C();
  RDUserNotificationCategory.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A44550EC()
{
  RDUserNotificationCategory.rawValue.getter();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A445513C()
{
  sub_1A4691C8C();
  RDUserNotificationCategory.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::RDUserNotificationCategory_optional sub_1A445519C(Swift::String *a1)
{
  return RDUserNotificationCategory.init(rawValue:)(*a1);
}

uint64_t sub_1A44551A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RDUserNotificationCategory.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A44551CC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0F4C8;
}

ReminderKitInternal::RDUserNotificationAction_optional __swiftcall RDUserNotificationAction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::RDUserNotificationAction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 11;
  if (v3 < 0xB)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t RDUserNotificationAction.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A445526C + 4 * byte_1A469644D[*v0]))(0xD00000000000002FLL, 0x80000001A46BBAB0);
}

unint64_t sub_1A445526C()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1A44552B4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 6;
}

uint64_t sub_1A44552C4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 7;
}

uint64_t sub_1A44552D4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t sub_1A44552E4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 14;
}

uint64_t sub_1A44552F4@<X0>(uint64_t a1@<X8>)
{
  return a1 + 22;
}

void sub_1A4455304()
{
  JUMPOUT(0x1A4455310);
}

void sub_1A445531C(char *a1)
{
  sub_1A466B90C(*a1);
}

uint64_t sub_1A4455328()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A46371F4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

void sub_1A445536C(uint64_t a1)
{
  char *v1;

  sub_1A46371F4(a1, *v1);
}

uint64_t sub_1A4455374()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A46371F4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

ReminderKitInternal::RDUserNotificationAction_optional sub_1A44553B4(Swift::String *a1)
{
  return RDUserNotificationAction.init(rawValue:)(*a1);
}

uint64_t sub_1A44553C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RDUserNotificationAction.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void RDUserNotificationType.init(notificationContent:)(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;

  v1 = objc_msgSend(a1, sel_categoryIdentifier);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  RDUserNotificationCategory.init(rawValue:)(v5);
  __asm { BR              X10 }
}

void sub_1A4455460(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, os_log_t log, uint64_t a11, uint64_t a12, uint64_t a13, os_log_type_t a14, uint64_t a15, uint64_t type, __int128 a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  os_log_type_t v51;
  uint64_t v52[3];
  uint64_t v53;

  v34 = UNNotificationContent.reminderIDs.getter();
  if (v34)
  {
    v35 = v34;

    *(_QWORD *)v31 = v35;
    *(_QWORD *)(v31 + 8) = 0;
    v36 = 0x80;
  }
  else
  {
    if (qword_1EE71BFD8 != -1)
      swift_once();
    v37 = sub_1A4690318();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EE71CF68);
    v38 = v32;
    v39 = sub_1A469030C();
    v40 = sub_1A4690FFC();
    if (os_log_type_enabled(v39, v40))
    {
      v51 = v40;
      v41 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v52[0] = v50;
      *(_DWORD *)v41 = 136315394;
      v42 = objc_msgSend(v38, *(SEL *)(v33 + 2776));
      v43 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v45 = v44;

      v53 = sub_1A4431120(v43, v45, v52);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      v46 = objc_msgSend(v38, sel_userInfo);
      sub_1A4690708();

      v47 = sub_1A4690714();
      v49 = v48;
      swift_bridgeObjectRelease();
      v53 = sub_1A4431120(v47, v49, v52);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v39, v51, "No reminderIDs found in shared list update notification content. {categoryIdentifier: %s, userInfo: %s}", (uint8_t *)v41, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v50, -1, -1);
      MEMORY[0x1A85A0114](v41, -1, -1);

    }
    else
    {

    }
    *(_QWORD *)v31 = 0;
    *(_QWORD *)(v31 + 8) = 0;
    v36 = -2;
  }
  *(_BYTE *)(v31 + 16) = v36;
}

uint64_t UNNotificationContent.notificationIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t result;
  unint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _BYTE v30[40];
  __int128 v31;
  __int128 v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900FC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v1, sel_userInfo);
  v12 = sub_1A4690708();

  v28 = 0xD000000000000033;
  v29 = 0x80000001A46BD3C0;
  sub_1A4691374();
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1A443E720((uint64_t)v30), (v14 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v12 + 56) + 32 * v13, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v30);
  if (!*((_QWORD *)&v32 + 1))
  {
    sub_1A445404C((uint64_t)&v31, &qword_1ED243E68);
    goto LABEL_9;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_9:
    v18 = objc_msgSend(v2, sel_userInfo);
    v19 = sub_1A4690708();

    v28 = 0xD00000000000001FLL;
    v29 = 0x80000001A46BD400;
    sub_1A4691374();
    if (*(_QWORD *)(v19 + 16) && (v20 = sub_1A443E720((uint64_t)v30), (v21 & 1) != 0))
    {
      sub_1A44311F0(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v31);
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_1A444ABC0((uint64_t)v30);
    if (*((_QWORD *)&v32 + 1))
    {
      result = swift_dynamicCast();
      if ((result & 1) == 0)
      {
LABEL_19:
        *(_QWORD *)a1 = 0;
        *(_QWORD *)(a1 + 8) = 0;
        v17 = -1;
        goto LABEL_20;
      }
      sub_1A46900C0();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
        v24 = (void *)objc_opt_self();
        v25 = (void *)sub_1A46900D8();
        v26 = objc_msgSend(v24, sel_objectIDWithUUID_, v25);

        result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        *(_QWORD *)a1 = v26;
        *(_QWORD *)(a1 + 8) = 0;
        *(_BYTE *)(a1 + 16) = 0;
        return result;
      }
      v22 = &qword_1ED243170;
      v23 = v6;
    }
    else
    {
      v22 = &qword_1ED243E68;
      v23 = (char *)&v31;
    }
    result = sub_1A445404C((uint64_t)v23, v22);
    goto LABEL_19;
  }
  v16 = v29;
  *(_QWORD *)a1 = v28;
  *(_QWORD *)(a1 + 8) = v16;
  v17 = 1;
LABEL_20:
  *(_BYTE *)(a1 + 16) = v17;
  return result;
}

id UNNotificationContent.listID.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t *v12;
  char *v13;
  id v14;
  void *v16;
  void *v17;
  _QWORD v18[3];
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v0, sel_userInfo);
  v9 = sub_1A4690708();

  v18[1] = 0xD00000000000001BLL;
  v18[2] = 0x80000001A46BD420;
  sub_1A4691374();
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1A443E720((uint64_t)v19), (v11 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
  {
    v12 = &qword_1ED243E68;
    v13 = (char *)&v20;
LABEL_10:
    sub_1A445404C((uint64_t)v13, v12);
    return 0;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      v16 = (void *)objc_opt_self();
      v17 = (void *)sub_1A46900D8();
      v14 = objc_msgSend(v16, sel_objectIDWithUUID_, v17);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v14;
    }
    v12 = &qword_1ED243170;
    v13 = v3;
    goto LABEL_10;
  }
  return 0;
}

unint64_t UNNotificationContent.reminderIDs.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(v0, sel_userInfo);
  v9 = sub_1A4690708();

  v23 = 0xD000000000000020;
  v24 = 0x80000001A46BD440;
  sub_1A4691374();
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1A443E720((uint64_t)v25), (v11 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v26);
  }
  else
  {
    v26 = 0u;
    v27 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v25);
  if (!*((_QWORD *)&v27 + 1))
  {
    sub_1A445404C((uint64_t)&v26, &qword_1ED243E68);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v12 = v23;
  v13 = MEMORY[0x1E0DEE9D8];
  v25[0] = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v23 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v22 = v12;
    v15 = v12 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A46900C0();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        sub_1A445404C((uint64_t)v3, &qword_1ED243170);
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
        v16 = (void *)objc_opt_self();
        v17 = (void *)sub_1A46900D8();
        v18 = objc_msgSend(v16, sel_objectIDWithUUID_, v17, v22);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v19 = swift_bridgeObjectRelease();
        if (v18)
        {
          MEMORY[0x1A859E3E0](v19);
          if (*(_QWORD *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A4690BDC();
          sub_1A4690C18();
          sub_1A4690BB8();
        }
      }
      v15 += 16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v13 = v25[0];
  }
  swift_bridgeObjectRelease();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v21)
      return v13;
    goto LABEL_20;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v13;
}

uint64_t sub_1A4456C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1A469099C();
  if (v1)
  {
    v2 = v0;
    v3 = v1;
    do
    {
      v6 = sub_1A469099C();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        v4 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      v2 = sub_1A469099C();
      v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_1A469099C();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

void REMNotificationIdentifier.init(reminder:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  char v11;

  v4 = objc_msgSend(a1, sel_daCalendarItemUniqueIdentifier);
  if (!v4)
    goto LABEL_5;
  v5 = v4;
  v6 = (id)_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v8 = v7;

  v9 = objc_msgSend(a1, sel_account);
  v10 = objc_msgSend(v9, sel_capabilities);

  LODWORD(v9) = objc_msgSend(v10, sel_supportsEventKitSync);
  if (!(_DWORD)v9)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = objc_msgSend(a1, sel_objectID);

    v8 = 0;
    v11 = 0;
    goto LABEL_6;
  }

  v11 = 1;
LABEL_6:
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 16) = v11;
}

void REMNotificationIdentifier.init(requestIdentifier:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A4690A14() & 1) != 0)
  {
    v13 = sub_1A4690954();
    v14 = sub_1A4460598(v13, a1, a2);
    v16 = v15;
    v18 = v17;
    v20 = v19;
    swift_bridgeObjectRelease();
    MEMORY[0x1A859E164](v14, v16, v18, v20);
    swift_bridgeObjectRelease();
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      v33 = (void *)objc_opt_self();
      v34 = (void *)sub_1A46900D8();
      v35 = objc_msgSend(v33, sel_objectIDWithUUID_, v34);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(_QWORD *)a3 = v35;
      *(_QWORD *)(a3 + 8) = 0;
      *(_BYTE *)(a3 + 16) = 0;
      return;
    }
    sub_1A445404C((uint64_t)v8, &qword_1ED243170);
    goto LABEL_12;
  }
  if ((sub_1A4690A14() & 1) == 0)
  {
    if (qword_1EE71BFD8 != -1)
      swift_once();
    v36 = sub_1A4690318();
    __swift_project_value_buffer(v36, (uint64_t)qword_1EE71CF68);
    swift_bridgeObjectRetain();
    v37 = sub_1A469030C();
    v38 = sub_1A4690FF0();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v42 = v40;
      *(_DWORD *)v39 = 136446210;
      swift_bridgeObjectRetain();
      v41 = sub_1A4431120(a1, a2, &v42);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v37, v38, "Received a REMNotificationIdentifier with unknown prefix: %{public}s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v40, -1, -1);
      MEMORY[0x1A85A0114](v39, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
LABEL_12:
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    v32 = -1;
    goto LABEL_13;
  }
  v21 = sub_1A4690954();
  v22 = sub_1A4460598(v21, a1, a2);
  v24 = v23;
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease();
  v29 = MEMORY[0x1A859E164](v22, v24, v26, v28);
  v31 = v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v29;
  *(_QWORD *)(a3 + 8) = v31;
  v32 = 1;
LABEL_13:
  *(_BYTE *)(a3 + 16) = v32;
}

uint64_t REMNotificationIdentifier.requestIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[2];

  v1 = sub_1A46900FC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)v0;
  v6 = *(void **)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    strcpy((char *)v9, "daCalItemUID-");
    HIWORD(v9[1]) = -4864;
    sub_1A4690984();
  }
  else
  {
    sub_1A44599A0(*(void **)v0, *(id *)(v0 + 8), 0);
    v7 = objc_msgSend(v5, sel_uuid);
    sub_1A46900F0();

    sub_1A46900CC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    strcpy((char *)v9, "REMObjectID-");
    BYTE5(v9[1]) = 0;
    HIWORD(v9[1]) = -5120;
    sub_1A4690984();
    sub_1A44599C8(v5, v6, 0);
    swift_bridgeObjectRelease();
  }
  return v9[0];
}

id REMStore.fetchReminder(notificationIdentifier:includingDueDateDeltaAlerts:)(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v17[2];

  v3 = v2;
  v17[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  if (*(_BYTE *)(a1 + 16) != 1)
  {
    if ((a2 & 1) != 0)
    {
      v9 = (void *)objc_opt_self();
      v10 = v5;
      v11 = objc_msgSend(v9, sel_fetchOptionsIncludingDueDateDeltaAlerts);
      v17[0] = 0;
      v7 = objc_msgSend(v3, sel_fetchReminderWithObjectID_fetchOptions_error_, v10, v11, v17);

      v12 = v17[0];
      if (!v7)
        goto LABEL_11;
    }
    else
    {
      v17[0] = 0;
      v13 = objc_msgSend(v3, sel_fetchReminderWithObjectID_error_, v5, v17);
      v12 = v17[0];
      if (!v13)
      {
LABEL_11:
        v7 = v12;
        sub_1A468FE68();

        swift_willThrow();
        sub_1A44599C8(v5, v4, 0);
        return v7;
      }
      v7 = v13;
    }
    v14 = v12;
    sub_1A44599C8(v5, v4, 0);
    return v7;
  }
  v6 = (void *)sub_1A469087C();
  v17[0] = 0;
  v7 = objc_msgSend(v3, sel_fetchReminderWithDACalendarItemUniqueIdentifier_inList_error_, v6, 0, v17);

  if (v7)
  {
    v8 = v17[0];
  }
  else
  {
    v15 = v17[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v7;
}

uint64_t REMStore.fetchReminders(notificationIdentifiers:)(uint64_t a1)
{
  void *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  unint64_t v20;
  id v21;
  _QWORD *v22;
  unint64_t v23;
  id v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v29 = *MEMORY[0x1E0C80C00];
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v26 = v1;
    v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
    do
    {
      v7 = (void *)*((_QWORD *)v5 - 2);
      v8 = (void *)*((_QWORD *)v5 - 1);
      v9 = *v5;
      if (v9 == 1)
      {
        sub_1A44599A0(*((void **)v5 - 2), *((id *)v5 - 1), 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1A4438920(0, v3[2] + 1, 1, v3);
        v11 = v3[2];
        v10 = v3[3];
        if (v11 >= v10 >> 1)
          v3 = sub_1A4438920((_QWORD *)(v10 > 1), v11 + 1, 1, v3);
        v3[2] = v11 + 1;
        v6 = &v3[2 * v11];
        v6[4] = v7;
        v6[5] = v8;
      }
      else
      {
        v12 = v7;
        MEMORY[0x1A859E3E0]();
        if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        sub_1A4690BB8();
      }
      v5 += 24;
      sub_1A44599C8(v7, v8, v9);
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v2 = v26;
  }
  v13 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v27 = 0;
  v14 = objc_msgSend(v2, sel_fetchRemindersWithDACalendarItemUniqueIdentifiers_inList_error_, v13, 0, &v27);

  v15 = v27;
  if (!v14)
    goto LABEL_17;
  sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
  v16 = sub_1A4690708();
  v17 = v15;

  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v18 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v27 = 0;
  v19 = objc_msgSend(v2, sel_fetchRemindersWithObjectIDs_error_, v18, &v27);

  v15 = v27;
  if (v19)
  {
    sub_1A4460634();
    v20 = sub_1A4690708();
    v21 = v15;

    v22 = sub_1A445A2EC(v16, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A45D3F2C);
    swift_bridgeObjectRelease();
    v23 = sub_1A4459BEC(v20);
    swift_bridgeObjectRelease();
    v27 = v22;
    sub_1A4459340(v23, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1A445FB44);
    return (uint64_t)v27;
  }
  else
  {
LABEL_17:
    v25 = v15;
    swift_bridgeObjectRelease();
    sub_1A468FE68();

    return swift_willThrow();
  }
}

Swift::String __swiftcall REMReminderNextThirdsHour.stringForSnoozingUntil()()
{
  unint64_t v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  if (v0 >= 4)
  {
    type metadata accessor for REMReminderNextThirdsHour(0);
    v5 = sub_1A4691BCC();
    __break(1u);
  }
  else
  {
    v1 = (id)_REMGetLocalizedString();
    v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v4 = v3;

    v5 = v2;
    v6 = v4;
  }
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

Swift::String __swiftcall REMReminderNextThirdsHour.systemImageStringForSnoozingUntil()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v1 = v0;
  v2 = 0x78616D2E6E7573;
  v3 = (void *)0xE700000000000000;
  switch(v1)
  {
    case 0:
    case 3:
      break;
    case 1:
      v3 = (void *)0xE500000000000000;
      v2 = 0x6B636F6C63;
      break;
    case 2:
      v3 = (void *)0xEA00000000007372;
      v2 = 0x6174732E6E6F6F6DLL;
      break;
    default:
      type metadata accessor for REMReminderNextThirdsHour(0);
      v2 = sub_1A4691BCC();
      __break(1u);
      break;
  }
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

void UNMutableNotificationContent.setNotificationIdentifier(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  _OWORD v28[2];
  _BYTE v29[40];
  __int128 v30;
  uint64_t v31;

  v2 = v1;
  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(a1 + 16);
  if (v8 == 255)
  {
    *(_QWORD *)&v30 = 0xD00000000000001FLL;
    *((_QWORD *)&v30 + 1) = 0x80000001A46BD400;
    sub_1A4691374();
    v20 = objc_msgSend(v2, sel_userInfo);
    v21 = sub_1A4690708();

    *(_QWORD *)&v28[0] = v21;
    sub_1A445D86C((uint64_t)v29, &v30);
    sub_1A444ABC0((uint64_t)v29);
    sub_1A445404C((uint64_t)&v30, &qword_1ED243E68);
    v22 = (void *)sub_1A46906F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setUserInfo_, v22);

  }
  else
  {
    v10 = *(void **)a1;
    v9 = *(void **)(a1 + 8);
    if ((v8 & 1) != 0)
    {
      *(_QWORD *)&v30 = 0xD000000000000033;
      *((_QWORD *)&v30 + 1) = 0x80000001A46BD3C0;
      sub_1A446068C(v10, v9, v8);
      sub_1A44599A0(v10, v9, 1);
      v23 = MEMORY[0x1E0DEA968];
      sub_1A4691374();
      v31 = v23;
      *(_QWORD *)&v30 = v10;
      *((_QWORD *)&v30 + 1) = v9;
      v24 = objc_msgSend(v2, sel_userInfo);
      v25 = sub_1A4690708();

      sub_1A444A940(&v30, v28);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v27 = v25;
      sub_1A445DE6C(v28, (uint64_t)v29, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1A444ABC0((uint64_t)v29);
      v19 = (void *)sub_1A46906F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setUserInfo_, v19);
    }
    else
    {
      *(_QWORD *)&v30 = 0xD00000000000001FLL;
      *((_QWORD *)&v30 + 1) = 0x80000001A46BD400;
      sub_1A446068C(v10, v9, v8);
      sub_1A44599A0(v10, v9, 0);
      v11 = MEMORY[0x1E0DEA968];
      sub_1A4691374();
      v12 = objc_msgSend(v10, sel_uuid);
      sub_1A46900F0();

      v13 = sub_1A46900CC();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v31 = v11;
      *(_QWORD *)&v30 = v13;
      *((_QWORD *)&v30 + 1) = v15;
      v16 = objc_msgSend(v2, sel_userInfo);
      v17 = sub_1A4690708();

      sub_1A444A940(&v30, v28);
      v18 = swift_isUniquelyReferenced_nonNull_native();
      v27 = v17;
      sub_1A445DE6C(v28, (uint64_t)v29, v18);
      swift_bridgeObjectRelease();
      sub_1A444ABC0((uint64_t)v29);
      v19 = (void *)sub_1A46906F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setUserInfo_, v19);
      sub_1A44599B0(v10, v9, v8);
    }
    sub_1A44599B0(v10, v9, v8);

  }
}

Swift::Void __swiftcall UNMutableNotificationContent.setReminderIDs(_:)(Swift::OpaquePointer_optional a1)
{
  void *v1;
  void *v2;
  unint64_t rawValue;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  id v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;
  _BYTE v33[40];
  __int128 v34;
  uint64_t v35;

  v2 = v1;
  rawValue = (unint64_t)a1.value._rawValue;
  v4 = sub_1A46900FC();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!rawValue)
    goto LABEL_23;
  if (!(rawValue >> 62))
  {
    if (*(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_23:
    *(_QWORD *)&v34 = 0xD000000000000020;
    *((_QWORD *)&v34 + 1) = 0x80000001A46BD440;
    sub_1A4691374();
    v24 = objc_msgSend(v2, sel_userInfo);
    v25 = sub_1A4690708();

    *(_QWORD *)&v31[0] = v25;
    sub_1A445D86C((uint64_t)v33, &v34);
    sub_1A444ABC0((uint64_t)v33);
    sub_1A445404C((uint64_t)&v34, &qword_1ED243E68);
LABEL_24:
    v26 = (void *)sub_1A46906F0();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setUserInfo_, v26);

    return;
  }
  swift_bridgeObjectRetain();
  v23 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_23;
LABEL_4:
  *(_QWORD *)&v34 = 0xD000000000000020;
  *((_QWORD *)&v34 + 1) = 0x80000001A46BD440;
  sub_1A4691374();
  if (rawValue >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
  {
LABEL_19:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    v35 = v19;
    *(_QWORD *)&v34 = v8;
    v20 = objc_msgSend(v2, sel_userInfo);
    v21 = sub_1A4690708();

    v32 = v21;
    if (v19)
    {
      sub_1A444A940(&v34, v31);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v30 = v21;
      sub_1A445DE6C(v31, (uint64_t)v33, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1A444ABC0((uint64_t)v33);
    }
    else
    {
      sub_1A445404C((uint64_t)&v34, &qword_1ED243E68);
      sub_1A445D86C((uint64_t)v33, v31);
      sub_1A444ABC0((uint64_t)v33);
      sub_1A445404C((uint64_t)v31, &qword_1ED243E68);
    }
    goto LABEL_24;
  }
  *(_QWORD *)&v34 = MEMORY[0x1E0DEE9D8];
  sub_1A445A8BC(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v27 = v2;
    v9 = 0;
    do
    {
      if ((rawValue & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1A859ECE0](v9, rawValue);
      else
        v10 = *(id *)(rawValue + 8 * v9 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_uuid, v27);
      sub_1A46900F0();

      v13 = sub_1A46900CC();
      v15 = v14;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);

      v8 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445A8BC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v34;
      }
      v17 = *(_QWORD *)(v8 + 16);
      v16 = *(_QWORD *)(v8 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1A445A8BC(v16 > 1, v17 + 1, 1);
        v8 = v34;
      }
      ++v9;
      *(_QWORD *)(v8 + 16) = v17 + 1;
      v18 = v8 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
    }
    while (v7 != v9);
    v2 = v27;
    goto LABEL_19;
  }
  __break(1u);
}

Swift::Void __swiftcall UNMutableNotificationContent.setListID(_:)(REMObjectID_optional a1)
{
  void *v1;
  void *v2;
  Class isa;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _OWORD v27[2];
  _BYTE v28[40];
  __int128 v29;
  uint64_t v30;

  v2 = v1;
  isa = a1.value.super.isa;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900FC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - v12;
  if (isa)
  {
    v14 = -[objc_class uuid](isa, sel_uuid);
    sub_1A46900F0();

    v15 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v15(v6, v11, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v15(v13, v6, v7);
      *(_QWORD *)&v29 = 0xD00000000000001BLL;
      *((_QWORD *)&v29 + 1) = 0x80000001A46BD420;
      v16 = MEMORY[0x1E0DEA968];
      sub_1A4691374();
      v17 = sub_1A46900CC();
      v30 = v16;
      *(_QWORD *)&v29 = v17;
      *((_QWORD *)&v29 + 1) = v18;
      v19 = objc_msgSend(v2, sel_userInfo);
      v20 = sub_1A4690708();

      sub_1A444A940(&v29, v27);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v26 = v20;
      sub_1A445DE6C(v27, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      sub_1A444ABC0((uint64_t)v28);
      v22 = (void *)sub_1A46906F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_setUserInfo_, v22);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1A445404C((uint64_t)v6, &qword_1ED243170);
  *(_QWORD *)&v29 = 0xD00000000000001BLL;
  *((_QWORD *)&v29 + 1) = 0x80000001A46BD420;
  sub_1A4691374();
  v23 = objc_msgSend(v2, sel_userInfo);
  v24 = sub_1A4690708();

  *(_QWORD *)&v27[0] = v24;
  sub_1A445D86C((uint64_t)v28, &v29);
  sub_1A444ABC0((uint64_t)v28);
  sub_1A445404C((uint64_t)&v29, &qword_1ED243E68);
  v25 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUserInfo_, v25);

}

uint64_t UNNotificationContent.firesBeforeFirstUnlock.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t result;
  unsigned __int8 v6;
  _BYTE v7[40];
  __int128 v8;
  __int128 v9;

  v1 = objc_msgSend(v0, sel_userInfo);
  v2 = sub_1A4690708();

  *(_QWORD *)&v8 = 0xD00000000000002BLL;
  *((_QWORD *)&v8 + 1) = 0x80000001A46BD470;
  sub_1A4691374();
  if (*(_QWORD *)(v2 + 16) && (v3 = sub_1A443E720((uint64_t)v7), (v4 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v2 + 56) + 32 * v3, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v7);
  if (*((_QWORD *)&v9 + 1))
  {
    result = swift_dynamicCast();
    if ((_DWORD)result)
      return v6;
  }
  else
  {
    sub_1A445404C((uint64_t)&v8, &qword_1ED243E68);
    return 0;
  }
  return result;
}

Swift::Void __swiftcall UNMutableNotificationContent.setFiresBeforeFirstUnlock(_:)(Swift::Bool a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  void *v7;
  _OWORD v8[2];
  __int128 v9;
  uint64_t v10;
  _BYTE v11[40];

  v2 = v1;
  *(_QWORD *)&v9 = 0xD00000000000002BLL;
  *((_QWORD *)&v9 + 1) = 0x80000001A46BD470;
  sub_1A4691374();
  v10 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v9) = a1;
  v4 = objc_msgSend(v2, sel_userInfo);
  v5 = sub_1A4690708();

  sub_1A444A940(&v9, v8);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1A445DE6C(v8, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v11);
  v7 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUserInfo_, v7, v5);

}

uint64_t UNNotificationContent.lastRecurringFireDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  _BYTE v11[40];
  __int128 v12;
  __int128 v13;

  v3 = objc_msgSend(v1, sel_userInfo);
  v4 = sub_1A4690708();

  sub_1A4691374();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1A443E720((uint64_t)v11), (v6 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v12);
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v11);
  if (*((_QWORD *)&v13 + 1))
  {
    v7 = sub_1A46900B4();
    v8 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, v8 ^ 1u, 1, v7);
  }
  else
  {
    sub_1A445404C((uint64_t)&v12, &qword_1ED243E68);
    v10 = sub_1A46900B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

void UNMutableNotificationContent.setLastRecurringFireDate(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_0;
  id v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  void *v9;
  _OWORD v10[2];
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _BYTE v14[40];

  v2 = v1;
  *(_QWORD *)&v12 = 0xD00000000000002ALL;
  *((_QWORD *)&v12 + 1) = 0x80000001A46BD4A0;
  sub_1A4691374();
  v4 = sub_1A46900B4();
  v13 = v4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(boxed_opaque_existential_0, a1, v4);
  v6 = objc_msgSend(v2, sel_userInfo);
  v7 = sub_1A4690708();

  v11 = v7;
  if (v13)
  {
    sub_1A444A940(&v12, v10);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A445DE6C(v10, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    sub_1A444ABC0((uint64_t)v14);
  }
  else
  {
    sub_1A445404C((uint64_t)&v12, &qword_1ED243E68);
    sub_1A445D86C((uint64_t)v14, v10);
    sub_1A444ABC0((uint64_t)v14);
    sub_1A445404C((uint64_t)v10, &qword_1ED243E68);
  }
  v9 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_setUserInfo_, v9);

}

uint64_t sub_1A4458C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A4438920(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4458D6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A4438D64(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 8 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4458EB0(unint64_t a1)
{
  return sub_1A4459340(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1A445FD58);
}

uint64_t sub_1A4458EBC(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  int64_t v23;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v23 = v4 + v2;
  else
    v23 = v4;
  v3 = sub_1A4439740(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  v10 = sub_1A468FC28();
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = *(_QWORD *)(v11 + 72);
  v14 = v3 + v12 + v13 * v8;
  v15 = a1 + v12;
  v16 = v13 * v2;
  v17 = v14 + v16;
  v18 = v15 + v16;
  if (v15 < v17 && v14 < v18)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v20 = *(_QWORD *)(v3 + 16);
  v21 = __OFADD__(v20, v2);
  v22 = v20 + v2;
  if (!v21)
  {
    *(_QWORD *)(v3 + 16) = v22;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4459024(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x1A859ECEC](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1A445FF6C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v9 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A4690BB8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44591DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A4439618(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4459334(unint64_t a1)
{
  return sub_1A4459340(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1A4460180);
}

uint64_t sub_1A4459340(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1A859ECEC](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1A4690BB8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44594FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1A443A38C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445964C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A44596E0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4459854(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A4459854(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1A44596E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A44CC038(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A469141C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A469162C();
      __break(1u);
LABEL_10:
      v2 = sub_1A46909A8();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A46916F8();
    __break(1u);
LABEL_14:
    result = sub_1A469162C();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A4459854(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243150);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

id sub_1A44599A0(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    return (id)swift_bridgeObjectRetain();
  else
    return a1;
}

void sub_1A44599B0(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    sub_1A44599C8(a1, a2, a3 & 1);
}

void sub_1A44599C8(void *a1, id a2, char a3)
{
  if ((a3 & 1) != 0)
    swift_bridgeObjectRelease();
  else

}

_QWORD *sub_1A44599D8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  _QWORD *v5;
  size_t v6;
  _QWORD *v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242268);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v5[2] = v2;
  v5[3] = 2 * ((uint64_t)(v6 - 32) / 24);
  v7 = sub_1A45D3964(&v9, (uint64_t)(v5 + 4), v2, a1, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 != (_QWORD *)v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1A4459AC4(uint64_t a1)
{
  unint64_t v1;
  _QWORD *v3;
  size_t v4;
  unint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242258);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  v5 = sub_1A45D39E0((unint64_t)&v7, (uint64_t)(v3 + 4), v1);
  sub_1A4460E28(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A4459BD0(uint64_t a1)
{
  return sub_1A4459EDC(a1, &qword_1ED243000, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1A45D3A6C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4460F28);
}

uint64_t sub_1A4459BEC(unint64_t a1)
{
  uint64_t v2;
  uint64_t *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1A4691308();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (uint64_t *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
    v3 = (uint64_t *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1A45D3C68((uint64_t)&v8, v3 + 4, v2, a1);
  result = sub_1A4460EDC();
  if (v6 == v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

size_t sub_1A4459CE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0C8);
  v3 = *(_QWORD *)(sub_1A46900FC() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      v9 = sub_1A45D3F30(&v10, (uint64_t)v6 + v5, v1, a1);
      sub_1A4460EDC();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A4459DDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1A45D4278((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A4460EDC();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1A4459EC0(uint64_t a1)
{
  return sub_1A4459EDC(a1, &qword_1EE71D0D0, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1A45D4474, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4460EDC);
}

_QWORD *sub_1A4459EDC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = (_QWORD *)swift_allocObject();
  v9 = _swift_stdlib_malloc_size(v8);
  v10 = v9 - 32;
  if (v9 < 32)
    v10 = v9 - 17;
  v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  v11 = a3(v18, v8 + 4, v4, a1);
  v12 = v18[0];
  v13 = v18[1];
  v14 = v18[2];
  v15 = v18[3];
  v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v8;
}

uint64_t sub_1A4459FC4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 8 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 8 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C898);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

_QWORD *sub_1A445A12C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C878);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_1A45D4678(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1A4460EDC();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

int64_t *sub_1A445A21C(int64_t *result, int64_t a2)
{
  int64_t v2;
  int64_t v4;
  int64_t *v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8[3];

  v2 = a2 - (_QWORD)result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    if (!v2)
      return (int64_t *)MEMORY[0x1E0DEE9D8];
    v4 = (int64_t)result;
    if (v2 <= 0)
    {
      v5 = (int64_t *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243008);
      v5 = (int64_t *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v2;
      v5[3] = 2 * (v7 >> 3);
    }
    result = sub_1A45D48A0(v8, v5 + 4, v2, v4, a2);
    if (result == (int64_t *)v2)
      return v5;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A445A2E0(uint64_t a1)
{
  return sub_1A445A2EC(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1A45D3F2C);
}

_QWORD *sub_1A445A2EC(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v2;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  v5 = (_QWORD *)swift_allocObject();
  v6 = _swift_stdlib_malloc_size(v5);
  v7 = v6 - 32;
  if (v6 < 32)
    v7 = v6 - 25;
  v5[2] = v2;
  v5[3] = (2 * (v7 >> 3)) | 1;
  v8 = a2(&v10, v5 + 4, v2, a1);
  swift_bridgeObjectRetain();
  sub_1A4460EDC();
  if (v8 != v2)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t sub_1A445A3D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x1E0DEE9D8];
    v8 = 16 * v5;
    if (v5 <= 0)
    {
      v9 = (char *)MEMORY[0x1E0DEE9D8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = v9 + 32;
        v13 = (char *)(a2 + 16 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8])
          goto LABEL_19;
        memcpy(v12, v13, 16 * v5);
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D028);
      v9 = (char *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      *((_QWORD *)v9 + 2) = v5;
      *((_QWORD *)v9 + 3) = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445A540(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v2 = sub_1A4691308();
    if (v2)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v2 <= 0)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
    v3 = (_QWORD *)swift_allocObject();
    v4 = _swift_stdlib_malloc_size(v3);
    v5 = v4 - 32;
    if (v4 < 32)
      v5 = v4 - 25;
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1A45D4BC8(&v8, v3 + 4, v2, a1);
  result = sub_1A4460EDC();
  if (v6 == (_QWORD *)v2)
    return (uint64_t)v3;
  __break(1u);
  return result;
}

_QWORD *sub_1A445A638(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_10;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v2 <= 0)
    {
      v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
      v3 = (_QWORD *)swift_allocObject();
      v4 = _swift_stdlib_malloc_size(v3);
      v5 = v4 - 32;
      if (v4 < 32)
        v5 = v4 - 25;
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1A4460394((unint64_t)(v3 + 4), v2, v1);
    v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v2 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v2)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1A445A72C(char *a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;

  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  if (a2 > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C898);
    v4 = 8 * a2;
    v5 = (char *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    *((_QWORD *)v5 + 2) = a2;
    *((_QWORD *)v5 + 3) = 2 * (v7 >> 3);
    v8 = v5 + 32;
    if (&v5[v4 + 32] <= a1 || v8 >= &a1[v4])
    {
      memcpy(v8, a1, 8 * a2);
      return (uint64_t)v5;
    }
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445A860(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445AD44(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A87C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445AEB8(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445A898(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445BCA4(a1, a2, a3, *v3, &qword_1ED243008);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A8BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445ABDC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A8D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445B1E4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A8F4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445B340(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A910(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445B4C4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445A92C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445B9B0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A948(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445BB1C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445A964(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445BCA4(a1, a2, a3, *v3, &qword_1EE71D0B0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A988(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445BDFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A9A4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445C640(a1, a2, a3, (_QWORD *)*v3, &qword_1EE71D0C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
  *v3 = result;
  return result;
}

uint64_t sub_1A445A9D0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445C0A0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445A9EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445C640(a1, a2, a3, (_QWORD *)*v3, &qword_1EE71D058, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AA18(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445C370(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445AA34(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445C4BC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445AA50(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445C640(a1, a2, a3, (_QWORD *)*v3, &qword_1EE71D030, type metadata accessor for ReminderUUID);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AA7C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445C820(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AA98(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445BF48(a1, a2, a3, *v3, &qword_1EE71D028);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445AABC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445BF48(a1, a2, a3, *v3, &qword_1EE71C808);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445AAE0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445C9D0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AAFC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445CCE0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445AB18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445CE54(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AB34(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445CFDC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AB50(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445D164(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445AB6C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1A445D2C0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1A445AB88(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445D444(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445ABA4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445D59C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445ABC0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A445D704(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A445ABDC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445AD44(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242270);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    memcpy(v12, v13, 40 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445AEB8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D088);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D090);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B040(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D098);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B1E4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C898);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B340(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D070);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B4C4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D078);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D080);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B668(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1A445C640(a1, a2, a3, a4, &qword_1EE71D0C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1A445B67C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A445BF48(a1, a2, a3, a4, &qword_1ED242278);
}

uint64_t sub_1A445B688(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0D8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B810(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C878);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C880);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445B9B0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242618);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445BB1C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0A8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445BCA4(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445BDFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445BF48(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9])
      memmove(v14, v15, 16 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C0A0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D068);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C208(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D040);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C370(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D060);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C4BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D038);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8])
      memmove(v12, v13, 120 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[120 * v8] || v12 >= &v13[120 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C640(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C820(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D018);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D020);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445C9C4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1A445BF48(a1, a2, a3, a4, &qword_1EE71D028);
}

uint64_t sub_1A445C9D0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7D8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445CB58(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7E0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7E8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445CCE0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C870);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445CE54(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFF0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445CFDC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFE0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFE8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445D164(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445D2C0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFB0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 4;
  v14 = a4 + 4;
  v15 = 4 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v10 + 4, a4 + 4, v15 * 8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFB8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445D444(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFC0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445D59C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445D704(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23F350);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

double sub_1A445D86C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A443E720(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A4446CA4();
      v9 = v11;
    }
    sub_1A444ABC0(*(_QWORD *)(v9 + 48) + 40 * v6);
    sub_1A444A940((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1A45A87F0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1A445D954@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A443E79C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A444706C();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1A46915B4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_1A444A940((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1A45A89B8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_1A445DA50@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A443E750(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A44479B0();
      v9 = v11;
    }

    sub_1A444A940((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_1A45A8E24(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

uint64_t sub_1A445DB34(unint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_1A443E750(a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v9 = *v2;
      v17 = *v2;
      *v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1A444891C();
        v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0)
    v5 = v4;
  else
    v5 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v6 = (id)a1;
  v7 = sub_1A4691614();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  v8 = sub_1A4691308();
  v9 = sub_1A4561B14(v5, v8);
  swift_retain();
  a1 = sub_1A443E750((uint64_t)v6);
  v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  v15 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * a1);
  sub_1A45A9190(a1, v9);
  *v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1A445DC80(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1A443E4C8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1A4448AC4();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1A45A9340(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A445DD4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  char v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v5 = v4;
  v9 = a3 & 1;
  swift_bridgeObjectRetain();
  v10 = sub_1A443E924(a1, a2, v9);
  LOBYTE(a2) = v11;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v5;
    v21 = *v5;
    *v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A4449190();
      v14 = v21;
    }
    sub_1A444AA18(*(void **)(*(_QWORD *)(v14 + 48) + 24 * v10), *(_QWORD *)(*(_QWORD *)(v14 + 48) + 24 * v10 + 8), *(_BYTE *)(*(_QWORD *)(v14 + 48) + 24 * v10 + 16));
    v15 = *(_QWORD *)(v14 + 56) + 40 * v10;
    v16 = *(_QWORD *)v15;
    v17 = *(_QWORD *)(v15 + 8);
    v18 = *(_QWORD *)(v15 + 16);
    v19 = *(_QWORD *)(v15 + 24);
    v20 = *(_BYTE *)(v15 + 32);
    sub_1A45A9514(v10, v14);
    *v5 = v14;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v19 = 0;
    v20 = -1;
  }
  *(_QWORD *)a4 = v16;
  *(_QWORD *)(a4 + 8) = v17;
  *(_QWORD *)(a4 + 16) = v18;
  *(_QWORD *)(a4 + 24) = v19;
  *(_BYTE *)(a4 + 32) = v20;
  return result;
}

_OWORD *sub_1A445DE6C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443E720(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        return sub_1A444A940(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A4446CA4();
      goto LABEL_7;
    }
    sub_1A4440614(v13, a3 & 1);
    v19 = sub_1A443E720(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A444AB84(a2, (uint64_t)v21);
      return sub_1A4509488(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1A4691C08();
  __break(1u);
  return result;
}

_OWORD *sub_1A445DFA4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A443E4C8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1A444A940(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A4446E88();
      goto LABEL_7;
    }
    sub_1A4440928(v15, a4 & 1);
    v21 = sub_1A443E4C8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509500(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1A4691C08();
  __break(1u);
  return result;
}

_OWORD *sub_1A445E0D4(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_1A46915B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1A443E79C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        return sub_1A444A940(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1A444706C();
      goto LABEL_7;
    }
    sub_1A4440C24(v17, a3 & 1);
    v23 = sub_1A443E79C(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1A4509568(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_1A4691C08();
  __break(1u);
  return result;
}

void sub_1A445E250(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1A443E750((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1A4447460();
      goto LABEL_7;
    }
    sub_1A44412BC(v12, a3 & 1);
    v17 = sub_1A443E750((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  sub_1A4691C08();
  __break(1u);
}

uint64_t sub_1A445E37C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A443E4C8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A4447634();
      goto LABEL_7;
    }
    sub_1A44415F8(v15, a4 & 1);
    v21 = sub_1A443E4C8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A450960C(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445E4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1A443E4C8(a3, a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a5 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        result = swift_bridgeObjectRelease();
        *(double *)v23 = a6;
        *(_QWORD *)(v23 + 8) = a1;
        *(_QWORD *)(v23 + 16) = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a5 & 1) == 0)
    {
      sub_1A44477E8();
      goto LABEL_7;
    }
    sub_1A4441604(v19, a5 & 1);
    v25 = sub_1A443E4C8(a3, a4);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509654(v16, a3, a4, a1, a2, v22, a6);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

_OWORD *sub_1A445E604(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1A443E750((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_1A444A940(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1A44479B0();
      goto LABEL_7;
    }
    sub_1A4441928(v12, a3 & 1);
    v18 = sub_1A443E750((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A45096A8(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  result = (_OWORD *)sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445E734(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  sub_1A443E52C(a2);
  v11 = v10;
  v12 = v8[2];
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v9;
    v16 = v8[3];
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v17 = *v4;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v18 = v17[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v18 + 8 * v11) = a1;
        return result;
      }
      return sub_1A450970C(v11, a2, a1, v17);
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_1A4448770();
      goto LABEL_7;
    }
    sub_1A4442F74(v14, a3 & 1);
    sub_1A443E52C(a2);
    if ((v15 & 1) == (v21 & 1))
    {
      v11 = v20;
      v17 = *v4;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      return sub_1A450970C(v11, a2, a1, v17);
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

id sub_1A445E848(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1A443E750((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        result = (id)swift_release();
        *(_QWORD *)(v16 + 8 * v9) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1A444891C();
      goto LABEL_7;
    }
    sub_1A4443160(v12, a3 & 1);
    v18 = sub_1A443E750((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  result = (id)sub_1A4691C08();
  __break(1u);
  return result;
}

void sub_1A445E974(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A445EAF4(a1, a2, a3, a4, (void (*)(void))sub_1A4448AC4, (void (*)(void))sub_1A4443434, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4509750);
}

void sub_1A445E990(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1A443E864((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];

        *(_QWORD *)(v16 + 8 * v9) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1A4448AD0();
      goto LABEL_7;
    }
    sub_1A4443440(v12, a3 & 1);
    v17 = sub_1A443E864((uint64_t)a2);
    if ((v13 & 1) == (v18 & 1))
    {
      v9 = v17;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v9, (uint64_t)a2, a1, v15);
      v19 = a2;
      return;
    }
  }
  sub_1A444AA40(0, &qword_1EE71CB20);
  sub_1A4691C08();
  __break(1u);
}

void sub_1A445EABC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A445EAF4(a1, a2, a3, a4, (void (*)(void))sub_1A4448C84, (void (*)(void))sub_1A4443724, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4509750);
}

void sub_1A445EAD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_1A445EAF4(a1, a2, a3, a4, (void (*)(void))sub_1A4448C9C, (void (*)(void))sub_1A444373C, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4509750);
}

void sub_1A445EAF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;

  v10 = v7;
  v15 = *v7;
  v17 = sub_1A443E4C8(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);

        *(_QWORD *)(v24 + 8 * v17) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    a6();
    v25 = sub_1A443E4C8(a2, a3);
    if ((v21 & 1) == (v26 & 1))
    {
      v17 = v25;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_1A4691C08();
  __break(1u);
}

int64_t sub_1A445EC48(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  int64_t result;
  char v14;
  int64_t v15;
  _QWORD *v16;
  char v17;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443E8B0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return result;
      }
      return sub_1A450970C(v10, a2, a1, v16);
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (int64_t)sub_1A4448CA8();
      goto LABEL_7;
    }
    sub_1A4443748(result, a3 & 1);
    result = sub_1A443E8B0(a2);
    if ((v14 & 1) == (v17 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1A450970C(v10, a2, a1, v16);
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445ED50(uint64_t a1, void *a2, uint64_t a3, char a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  char v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v6 = (_QWORD **)v5;
  v11 = a4 & 1;
  v12 = (_QWORD *)*v5;
  v14 = sub_1A443E924(a2, a3, a4 & 1);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
        return sub_1A4460E94(a1, v20[7] + 40 * v14);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1A4449190();
      goto LABEL_7;
    }
    sub_1A4444630(v17, a5 & 1);
    v22 = sub_1A443E924(a2, a3, v11);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v6;
      if ((v18 & 1) != 0)
        return sub_1A4460E94(a1, v20[7] + 40 * v14);
LABEL_11:
      sub_1A450979C(v14, (uint64_t)a2, a3, v11, a1, v20);
      return sub_1A444A990(a2, a3, v11);
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445EE9C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443EAE8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A44496C4();
      goto LABEL_7;
    }
    sub_1A444528C(v13, a3 & 1);
    v19 = sub_1A443EAE8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v10, a2, a1, v16);
      return swift_retain();
    }
  }
  type metadata accessor for REMSuggestedContact();
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445EFB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A443E4C8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A44496D0();
      goto LABEL_7;
    }
    sub_1A4445298(v15, a4 & 1);
    v21 = sub_1A443E4C8(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A450960C(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F0E4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A444AC38(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1A4509754(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A4449884();
      goto LABEL_7;
    }
    sub_1A44455AC(v13, a3 & 1);
    v19 = sub_1A444AC38(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1A4509754(v10, a2, a1, v16);
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F1F8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443EAE8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A4449A24();
      goto LABEL_7;
    }
    sub_1A4445860(v13, a3 & 1);
    v19 = sub_1A443EAE8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v10, a2, a1, v16);
      return swift_retain();
    }
  }
  type metadata accessor for REMSuggestedLocation();
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F314(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443EAE8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A4449A30();
      goto LABEL_7;
    }
    sub_1A444586C(v13, a3 & 1);
    v19 = sub_1A443EAE8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v10, a2, a1, v16);
      return swift_retain();
    }
  }
  type metadata accessor for REMSuggestedWeekDay();
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F430(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443EB68(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_1A4509754(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A4449A3C();
      goto LABEL_7;
    }
    sub_1A4445878(v13, a3 & 1);
    v19 = sub_1A443EB68(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1A4509754(v10, a2, a1, v16);
    }
  }
  type metadata accessor for REMRecurrenceFrequency(0);
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F544(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1A443EAE8(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1A4449BDC();
      goto LABEL_7;
    }
    sub_1A4445B50(v13, a3 & 1);
    v19 = sub_1A443EAE8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509608(v10, a2, a1, v16);
      return swift_retain();
    }
  }
  type metadata accessor for REMSuggestedList();
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F660(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A443E4C8(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_BYTE *)(v18[7] + v12) = a1 & 1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_1A4449D88();
      goto LABEL_7;
    }
    sub_1A4445E80(result, a4 & 1);
    result = sub_1A443E4C8(a2, a3);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A450981C(v12, a2, a3, a1 & 1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A445F784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1A443E4C8(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1A444A18C();
      goto LABEL_7;
    }
    sub_1A44464F0(v17, a5 & 1);
    v23 = sub_1A443E4C8(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A4509864(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t (*sub_1A445F8C4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A445F9F0(v6, a2, a3);
  return sub_1A445F918;
}

uint64_t (*sub_1A445F91C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A445FA5C(v6, a2, a3);
  return sub_1A445F918;
}

uint64_t (*sub_1A445F970(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1A445FAD0(v6, a2, a3);
  return sub_1A445F918;
}

void sub_1A445F9C4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1A445F9F0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1A859ECE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s19ReminderKitInternal23REMAccountsListDataViewC5ModelV10PinnedListOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1A445FA5C(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1A859ECE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for REMAccountsListDataView.Model.PinnedList;
  }
  __break(1u);
  return result;
}

void destroy for REMAccountsListDataView.Model.PinnedList(id *a1)
{

}

uint64_t (*sub_1A445FAD0(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1A859ECE0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return destroy for KMeans.ClusterStats;
  }
  __break(1u);
  return result;
}

uint64_t destroy for KMeans.ClusterStats()
{
  return swift_release();
}

uint64_t sub_1A445FB44(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A4460EE4(&qword_1EE71D0E8, &qword_1EE71D0E0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0E0);
          v12 = sub_1A445F8C4(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445FD58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A4460EE4(&qword_1EE71D050, &qword_1EE71D048);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D048);
          v12 = sub_1A445F8C4(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A445FF6C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A4460EE4(&qword_1EE71D010, &qword_1EE71D008);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D008);
          v12 = sub_1A445F8C4(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A444AA40(0, &qword_1ED23E818);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4460180(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A4460EE4(&qword_1EE71D000, &qword_1EE71CFF8);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFF8);
          v12 = sub_1A445F91C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1A444AA40(0, &qword_1EE721E10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4460394(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1A4460EE4(&qword_1EE71CFD8, &qword_1EE71CFD0);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CFD0);
          v12 = sub_1A445F970(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for REMGroceryLanguage();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

unint64_t sub_1A4460598(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    result = sub_1A469096C();
    if ((v6 & 1) != 0)
      result = v5;
    if (4 * v3 >= result >> 14)
      return sub_1A4690A5C();
  }
  __break(1u);
  return result;
}

unint64_t sub_1A4460634()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED243C58;
  if (!qword_1ED243C58)
  {
    v1 = sub_1A444AA40(255, (unint64_t *)&qword_1ED2440D8);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED243C58);
  }
  return result;
}

id sub_1A446068C(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_1A44599A0(result, a2, a3 & 1);
  return result;
}

unint64_t sub_1A44606A8()
{
  unint64_t result;

  result = qword_1EE71CF88;
  if (!qword_1EE71CF88)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for RDUserNotificationCategory, &type metadata for RDUserNotificationCategory);
    atomic_store(result, (unint64_t *)&qword_1EE71CF88);
  }
  return result;
}

uint64_t sub_1A44606EC()
{
  return sub_1A4460EE4(&qword_1EE71CF90, &qword_1EE71CF98);
}

unint64_t sub_1A4460714()
{
  unint64_t result;

  result = qword_1EE71CFA0;
  if (!qword_1EE71CFA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for RDUserNotificationAction, &type metadata for RDUserNotificationAction);
    atomic_store(result, (unint64_t *)&qword_1EE71CFA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RDUserNotificationCategory(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RDUserNotificationCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A4460834 + 4 * byte_1A4696461[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A4460868 + 4 * byte_1A469645C[v4]))();
}

uint64_t sub_1A4460868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4460870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4460878);
  return result;
}

uint64_t sub_1A4460884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A446088CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A4460890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4460898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RDUserNotificationCategory()
{
  return &type metadata for RDUserNotificationCategory;
}

uint64_t getEnumTagSinglePayload for RDUserNotificationAction(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RDUserNotificationAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1A4460990 + 4 * byte_1A469646B[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1A44609C4 + 4 * byte_1A4696466[v4]))();
}

uint64_t sub_1A44609C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44609CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44609D4);
  return result;
}

uint64_t sub_1A44609E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44609E8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1A44609EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44609F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RDUserNotificationAction()
{
  return &type metadata for RDUserNotificationAction;
}

id sub_1A4460A14(id result, void *a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 5:
      result = sub_1A44599A0(result, a2, a3 & 1);
      break;
    case 2:
      result = result;
      break;
    case 3:
    case 4:
      result = (id)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RDUserNotificationType(uint64_t a1)
{
  sub_1A4460A60(*(void **)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1A4460A60(void *a1, void *a2, unsigned __int8 a3)
{
  switch(a3 >> 5)
  {
    case 0:
    case 1:
    case 5:
      sub_1A44599C8(a1, a2, a3 & 1);
      break;
    case 2:

      break;
    case 3:
    case 4:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t _s19ReminderKitInternal22RDUserNotificationTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A4460A14(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for RDUserNotificationType(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  unsigned __int8 v5;
  void *v6;
  void *v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A4460A14(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A4460A60(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for RDUserNotificationType(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A4460A60(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RDUserNotificationType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7A && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 122);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 5) & 0xFFFFFF87 | (8 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0xF))) ^ 0x7F;
  if (v3 >= 0x79)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for RDUserNotificationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 122;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_1A4460C24(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 <= 0xBF)
    return v1 >> 5;
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1A4460C40(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x1Fu;
  return result;
}

uint64_t sub_1A4460C50(uint64_t result, unsigned int a2)
{
  if (a2 < 6)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for RDUserNotificationType()
{
  return &type metadata for RDUserNotificationType;
}

void destroy for REMNotificationIdentifier(uint64_t a1)
{
  sub_1A44599C8(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal25REMNotificationIdentifierOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44599A0(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMNotificationIdentifier(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A44599A0(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A44599C8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMNotificationIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A44599C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMNotificationIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMNotificationIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A4460E0C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMNotificationIdentifier()
{
  return &type metadata for REMNotificationIdentifier;
}

uint64_t sub_1A4460E28(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A4460E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A4460EDC()
{
  return swift_release();
}

uint64_t sub_1A4460EE4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4460F34(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1A46911A0();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1A4690A74();
  v57 = sub_1A46906CC();
  v53 = sub_1A4691578();
  sub_1A4691530();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1A4690A68();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1A46911B8();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1A4691560();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1A46911B8();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1A4691560();
      sub_1A46911B8();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t sub_1A4461440(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_1A44A3918();
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_1A44C15DC(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

unint64_t sub_1A44614BC(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1A446742C(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1A4691404();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1A46914E8();
      v5 = sub_1A46914F4();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

uint64_t sub_1A446159C(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_1A446737C(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_1A4467534(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t REMHashtagLabelCollection.labels.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL REMHashtagLabelCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

void REMHashtagLabelCollection.init()(_QWORD *a1@<X8>)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0DEE9E8];
  *a1 = MEMORY[0x1E0DEE9D8];
  a1[1] = v1;
}

uint64_t REMHashtagLabelCollection.init(labels:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[2];
  uint64_t v28;

  v4 = sub_1A468FBEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  result = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0DEE9E8];
  v28 = MEMORY[0x1E0DEE9E8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v24 = a2;
    swift_bridgeObjectRetain_n();
    v23 = a1;
    v14 = (uint64_t *)(a1 + 40);
    do
    {
      v15 = *(v14 - 1);
      v16 = *v14;
      swift_bridgeObjectRetain();
      sub_1A469018C();
      v17 = sub_1A4690210();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v11, 0, 1, v17);
      v27[0] = v15;
      v27[1] = v16;
      sub_1A4466118();
      v25 = sub_1A4691260();
      v26 = v18;
      sub_1A468FBC8();
      v19 = sub_1A4691218();
      v21 = v20;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      sub_1A446615C((uint64_t)v11);
      swift_bridgeObjectRetain();
      sub_1A4465F6C(v27, v19, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 += 2;
      --v13;
    }
    while (v13);
    a1 = v23;
    result = swift_bridgeObjectRelease_n();
    v12 = v28;
    a2 = v24;
  }
  *a2 = a1;
  a2[1] = v12;
  return result;
}

uint64_t REMHashtagLabelCollection.labels(matchingHashtagNames:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[2];
  uint64_t v31;

  v3 = sub_1A468FBEC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9E8];
  if (v10)
  {
    v26 = *v1;
    v31 = MEMORY[0x1E0DEE9E8];
    swift_bridgeObjectRetain_n();
    v27 = a1;
    v12 = (uint64_t *)(a1 + 40);
    v13 = v3;
    do
    {
      v14 = *(v12 - 1);
      v15 = *v12;
      swift_bridgeObjectRetain();
      sub_1A469018C();
      v16 = sub_1A4690210();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
      v30[0] = v14;
      v30[1] = v15;
      sub_1A4466118();
      v28 = sub_1A4691260();
      v29 = v17;
      sub_1A468FBC8();
      v18 = sub_1A4691218();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
      swift_bridgeObjectRelease();
      sub_1A446615C((uint64_t)v9);
      swift_bridgeObjectRetain();
      sub_1A4465F6C(v30, v18, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 += 2;
      --v10;
    }
    while (v10);
    v21 = v27;
    v22 = swift_bridgeObjectRelease_n();
    v23 = v31;
    MEMORY[0x1E0C80A78](v22);
    *(&v26 - 2) = v21;
    *(&v26 - 1) = v23;
    v24 = swift_bridgeObjectRetain();
    v11 = sub_1A44DFD28(v24, sub_1A446619C);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1A4461A90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v5 = sub_1A468FBEC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v12 = a1[1];
  sub_1A469018C();
  v14 = sub_1A4690210();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v11, 0, 1, v14);
  v20[2] = v13;
  v20[3] = v12;
  sub_1A4466118();
  v20[0] = sub_1A4691260();
  v20[1] = v15;
  sub_1A468FBC8();
  v16 = sub_1A4691218();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  sub_1A446615C((uint64_t)v11);
  LOBYTE(v16) = sub_1A4462344(v16, v18, a3);
  swift_bridgeObjectRelease();
  return v16 & 1;
}

Swift::Bool __swiftcall REMHashtagLabelCollection.contains(matchOfHashtagName:)(Swift::String matchOfHashtagName)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  object = matchOfHashtagName._object;
  countAndFlagsBits = matchOfHashtagName._countAndFlagsBits;
  v4 = sub_1A468FBEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v1 + 8);
  sub_1A469018C();
  v12 = sub_1A4690210();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 0, 1, v12);
  v18[2] = countAndFlagsBits;
  v18[3] = object;
  sub_1A4466118();
  v18[0] = sub_1A4691260();
  v18[1] = v13;
  sub_1A468FBC8();
  v14 = sub_1A4691218();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  sub_1A446615C((uint64_t)v10);
  LOBYTE(v4) = sub_1A4462344(v14, v16, v11);
  swift_bridgeObjectRelease();
  return v4 & 1;
}

Swift::String_optional __swiftcall REMHashtagLabelCollection.label(matchingHashtagName:)(Swift::String matchingHashtagName)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  Swift::String_optional result;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[2];
  uint64_t v30;

  object = matchingHashtagName._object;
  countAndFlagsBits = matchingHashtagName._countAndFlagsBits;
  v3 = sub_1A468FBEC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
  *(_QWORD *)(inited + 32) = countAndFlagsBits;
  *(_QWORD *)(inited + 40) = object;
  v30 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1A469018C();
  v11 = sub_1A4690210();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
  v29[0] = countAndFlagsBits;
  v29[1] = (uint64_t)object;
  sub_1A4466118();
  v27 = sub_1A4691260();
  v28 = v12;
  sub_1A468FBC8();
  v13 = sub_1A4691218();
  v15 = v14;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_1A446615C((uint64_t)v9);
  swift_bridgeObjectRetain();
  sub_1A4465F6C(v29, v13, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = inited;
  v26 = v30;
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1A44DFD28(v16, sub_1A44679E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  v18 = sub_1A4461440(v17);
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = v18;
  v22 = v20;
  result.value._object = v22;
  result.value._countAndFlagsBits = v21;
  return result;
}

uint64_t REMHashtagLabelCollection.suggestedLabels(forHashtagNamePrefix:)(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v5 = sub_1A468FBEC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v2;
  v13 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v13 = a1 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    sub_1A469018C();
    v14 = sub_1A4690210();
    v41 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v42 = v14;
    v41(v11, 0, 1);
    v48 = a1;
    v49 = a2;
    v15 = sub_1A4466118();
    v46 = sub_1A4691260();
    v47 = v16;
    sub_1A468FBC8();
    v38 = v15;
    v40 = sub_1A4691218();
    v44 = v17;
    v39 = *(void (**)(char *, uint64_t))(v6 + 8);
    v39(v8, v5);
    swift_bridgeObjectRelease();
    sub_1A446615C((uint64_t)v11);
    v18 = *(_QWORD *)(v12 + 16);
    result = swift_bridgeObjectRetain();
    if (v18)
    {
      v20 = 0;
      v36 = -(uint64_t)v18;
      v37 = v5;
      v21 = MEMORY[0x1E0DEE9D8];
      v33 = v18;
      v34 = v12;
      do
      {
        v35 = v21;
        if (v20 <= v18)
          v22 = v18;
        else
          v22 = v20;
        v43 = -(uint64_t)v22;
        v23 = (uint64_t *)(v12 + 40 + 16 * v20++);
        while (1)
        {
          if (v43 + v20 == 1)
          {
            __break(1u);
            return result;
          }
          v25 = *(v23 - 1);
          v24 = *v23;
          swift_bridgeObjectRetain();
          sub_1A469018C();
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v41)(v11, 0, 1, v42);
          v48 = v25;
          v49 = v24;
          v46 = sub_1A4691260();
          v47 = v26;
          sub_1A468FBC8();
          sub_1A4691218();
          v39(v8, v37);
          swift_bridgeObjectRelease();
          sub_1A446615C((uint64_t)v11);
          v27 = sub_1A4690A14();
          swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            break;
          result = swift_bridgeObjectRelease();
          ++v20;
          v23 += 2;
          if (v36 + v20 == 1)
          {
            v21 = v35;
            goto LABEL_22;
          }
        }
        v21 = v35;
        result = swift_isUniquelyReferenced_nonNull_native();
        v45 = v21;
        if ((result & 1) == 0)
        {
          result = sub_1A445A8BC(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v45;
        }
        v18 = v33;
        v29 = *(_QWORD *)(v21 + 16);
        v28 = *(_QWORD *)(v21 + 24);
        v30 = v29 + 1;
        if (v29 >= v28 >> 1)
        {
          v43 = v29 + 1;
          result = sub_1A445A8BC(v28 > 1, v29 + 1, 1);
          v30 = v43;
          v21 = v45;
        }
        *(_QWORD *)(v21 + 16) = v30;
        v31 = v21 + 16 * v29;
        *(_QWORD *)(v31 + 32) = v25;
        *(_QWORD *)(v31 + 40) = v24;
      }
      while (v36 + v20);
    }
    else
    {
      v21 = MEMORY[0x1E0DEE9D8];
    }
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_1A4462344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A4691C8C();
    sub_1A4690948();
    v6 = sub_1A4691CC8();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A4691A40() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A4691A40() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_1A4462478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_1A4691C80();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1A4462540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;

  if (*(_QWORD *)(a2 + 16))
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4691C8C();
    sub_1A4690948();
    v3 = sub_1A4691CC8();
    swift_bridgeObjectRelease();
    v4 = -1 << *(_BYTE *)(a2 + 32);
    v5 = v3 & ~v4;
    v6 = a2 + 56;
    if (((*(_QWORD *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
    {
      v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v9 = v8;
      if (v7 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v12 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) != 0)
      {
LABEL_18:
        v20 = 1;
        return v20 & 1;
      }
      v13 = ~v4;
      v14 = (v5 + 1) & v13;
      if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
      {
        while (1)
        {
          v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v17 = v16;
          if (v15 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v17 == v18)
            break;
          v20 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            v14 = (v14 + 1) & v13;
            if (((*(_QWORD *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
              continue;
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  v20 = 0;
  return v20 & 1;
}

uint64_t sub_1A4462704(void *a1, uint64_t a2)
{
  id v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  id v15;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v3 = a1;
    v4 = sub_1A4691344();

    return v4 & 1;
  }
  if (!*(_QWORD *)(a2 + 16)
    || (v6 = sub_1A4691134(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        v9 = a2 + 56,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    v12 = 0;
    return v12 & 1;
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v8);
  v11 = sub_1A4691140();

  if ((v11 & 1) == 0)
  {
    v13 = ~v7;
    v14 = (v8 + 1) & v13;
    if (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
    {
      do
      {
        v15 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v14);
        v12 = sub_1A4691140();

        if ((v12 & 1) != 0)
          break;
        v14 = (v14 + 1) & v13;
      }
      while (((*(_QWORD *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  v12 = 1;
  return v12 & 1;
}

BOOL sub_1A4462860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1A4691C8C();
  sub_1A4691C98();
  v4 = sub_1A4691CC8();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1A446294C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1A4690210();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1A4436344(&qword_1EE71D0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]),
        v6 = sub_1A46907E0(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1A4436344(&qword_1EE71D100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
      v12 = sub_1A4690864();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t REMHashtagLabelCollection.isDisjoint(with:)(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4462ADC(*(_QWORD *)(a1 + 8), *(_QWORD *)(v1 + 8));
}

uint64_t sub_1A4462ADC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v32 = v4;
  v33 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v31 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    while (1)
    {
      v12 = v11;
      if (!v8)
        break;
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v11 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v15 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v12 + 2;
      if (v12 + 2 >= v31)
        goto LABEL_48;
      v16 = *(_QWORD *)(v33 + 8 * v11);
      if (!v16)
      {
        v11 = v12 + 3;
        if (v12 + 3 >= v31)
          goto LABEL_48;
        v16 = *(_QWORD *)(v33 + 8 * v11);
        if (!v16)
          break;
      }
    }
LABEL_30:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v18 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v14);
      v20 = *v18;
      v19 = v18[1];
      sub_1A4691C8C();
      swift_bridgeObjectRetain();
      sub_1A4690948();
      v21 = sub_1A4691CC8();
      v22 = -1 << *(_BYTE *)(v5 + 32);
      v23 = v21 & ~v22;
      if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
      {
        v24 = *(_QWORD *)(v5 + 48);
        v25 = (_QWORD *)(v24 + 16 * v23);
        v26 = *v25 == v20 && v25[1] == v19;
        if (v26 || (sub_1A4691A40() & 1) != 0)
        {
LABEL_44:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = 0;
LABEL_45:
          sub_1A4460EDC();
          return v30;
        }
        v27 = ~v22;
        while (1)
        {
          v23 = (v23 + 1) & v27;
          if (((*(_QWORD *)(v9 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
            break;
          v28 = (_QWORD *)(v24 + 16 * v23);
          v29 = *v28 == v20 && v28[1] == v19;
          if (v29 || (sub_1A4691A40() & 1) != 0)
            goto LABEL_44;
        }
      }
      result = swift_bridgeObjectRelease();
    }
  }
  v17 = v12 + 4;
  if (v12 + 4 >= v31)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    v30 = 1;
    goto LABEL_45;
  }
  v16 = *(_QWORD *)(v33 + 8 * v17);
  if (v16)
  {
    v11 = v12 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v31)
      goto LABEL_48;
    v16 = *(_QWORD *)(v33 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_30;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t REMHashtagLabelCollection.intersection(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;

  v5 = sub_1A468FBEC();
  v55 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  result = MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9E8];
    goto LABEL_19;
  }
  result = *a1;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  if (!*(_QWORD *)(*a1 + 16))
  {
LABEL_19:
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_25;
  }
  v57 = v7;
  v58 = v5;
  v48 = result;
  v49 = a2;
  v14 = a1[1];
  swift_bridgeObjectRetain();
  v53 = v14;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v47 = v11;
  v16 = v11 + 40;
  v51 = -(uint64_t)v12;
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v18 = (uint64_t)v54;
  v45 = v16;
  v46 = v12;
  do
  {
    v50 = v17;
    if (v15 <= v12)
      v19 = v12;
    else
      v19 = v15;
    v52 = -(uint64_t)v19;
    v20 = (uint64_t *)(v16 + 16 * v15++);
    while (1)
    {
      if (v52 + v15 == 1)
      {
        __break(1u);
        return result;
      }
      v21 = *(v20 - 1);
      v22 = *v20;
      swift_bridgeObjectRetain();
      sub_1A469018C();
      v23 = sub_1A4690210();
      v56 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
      v56(v18, 0, 1, v23);
      v61 = v21;
      v62 = v22;
      sub_1A4466118();
      v59 = sub_1A4691260();
      v60 = v24;
      v25 = v57;
      sub_1A468FBC8();
      v26 = sub_1A4691218();
      v28 = v27;
      v29 = *(void (**)(char *, uint64_t))(v55 + 8);
      v30 = v25;
      v18 = (uint64_t)v54;
      v29(v30, v58);
      swift_bridgeObjectRelease();
      sub_1A446615C(v18);
      LOBYTE(v26) = sub_1A4462344(v26, v28, v53);
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v15;
      v20 += 2;
      if (v51 + v15 == 1)
      {
        v17 = v50;
        goto LABEL_20;
      }
    }
    v17 = v50;
    result = swift_isUniquelyReferenced_nonNull_native();
    v63 = v17;
    if ((result & 1) == 0)
    {
      result = sub_1A445A8BC(0, v17[2] + 1, 1);
      v17 = v63;
    }
    v32 = v17[2];
    v31 = v17[3];
    if (v32 >= v31 >> 1)
    {
      result = sub_1A445A8BC(v31 > 1, v32 + 1, 1);
      v17 = v63;
    }
    v17[2] = v32 + 1;
    v33 = &v17[2 * v32];
    v33[4] = v21;
    v33[5] = v22;
    v16 = v45;
    v12 = v46;
  }
  while (v51 + v15);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v13 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  v63 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  v34 = v17[2];
  if (v34)
  {
    swift_bridgeObjectRetain_n();
    v50 = v17;
    v35 = v17 + 5;
    do
    {
      v36 = *(v35 - 1);
      v37 = *v35;
      swift_bridgeObjectRetain();
      sub_1A469018C();
      v56(v18, 0, 1, v23);
      v61 = v36;
      v62 = v37;
      v59 = sub_1A4691260();
      v60 = v38;
      v39 = v23;
      v40 = v29;
      v41 = v57;
      sub_1A468FBC8();
      v55 = sub_1A4691218();
      v43 = v42;
      v44 = v41;
      v29 = v40;
      v23 = v39;
      v29(v44, v58);
      swift_bridgeObjectRelease();
      sub_1A446615C(v18);
      swift_bridgeObjectRetain();
      sub_1A4465F6C(&v61, v55, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 += 2;
      --v34;
    }
    while (v34);
    v17 = v50;
    result = swift_release_n();
    v13 = v63;
  }
  a2 = v49;
LABEL_25:
  *a2 = v17;
  a2[1] = v13;
  return result;
}

void REMHashtagLabelCollection.union(_:)(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  void *v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;

  v65 = sub_1A468FBEC();
  v62 = *(_QWORD **)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  v11 = (_QWORD *)*v2;
  if (!*(_QWORD *)(*v2 + 16))
  {
    v50 = a1[1];
    *a2 = v10;
    a2[1] = v50;
LABEL_27:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return;
  }
  v12 = v2[1];
  v60 = *(_QWORD *)(v10 + 16);
  if (!v60)
  {
    *a2 = v11;
    a2[1] = v12;
    goto LABEL_27;
  }
  v52 = a2;
  v71 = v11;
  v58 = v10 + 32;
  v59 = v12;
  swift_bridgeObjectRetain();
  v61 = v10;
  swift_bridgeObjectRetain();
  v13 = 0;
  v53 = v9;
  v54 = v6;
  do
  {
    if (v13 >= *(_QWORD *)(v61 + 16))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return;
    }
    v14 = (uint64_t *)(v58 + 16 * v13);
    v16 = *v14;
    v15 = v14[1];
    swift_bridgeObjectRetain();
    sub_1A469018C();
    v17 = sub_1A4690210();
    v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v18(v9, 0, 1, v17);
    v69 = v16;
    v70 = v15;
    v19 = sub_1A4466118();
    v67 = sub_1A4691260();
    v68 = v20;
    sub_1A468FBC8();
    v21 = sub_1A4691218();
    v23 = v22;
    v57 = (void (*)(char *, uint64_t))v62[1];
    v57(v6, v65);
    swift_bridgeObjectRelease();
    sub_1A446615C((uint64_t)v9);
    LOBYTE(v21) = sub_1A4462344(v21, v23, v59);
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v64 = v18;
      v56 = v16;
      v24 = (void *)sub_1A469087C();
      v25 = v71;
      v26 = v71[2];
      if (v26)
      {
        v55 = v19;
        v63 = v17;
        swift_bridgeObjectRetain();
        v27 = 0;
        v28 = v25 + 5;
        while (1)
        {
          swift_bridgeObjectRetain();
          v29 = (void *)sub_1A469087C();
          v30 = objc_msgSend(v24, sel_localizedStandardCompare_, v29);
          swift_bridgeObjectRelease();

          if (v30 == (id)-1)
            break;
          v28 += 2;
          if (v26 == ++v27)
          {
            swift_bridgeObjectRelease();
            v9 = v53;
            v17 = v63;
            v19 = v55;
            goto LABEL_13;
          }
        }
        swift_bridgeObjectRelease();
        v9 = v53;
        v17 = v63;
        v19 = v55;
        if (v25[2] < v27)
          goto LABEL_29;
        sub_1A44656D4(v27, v27, v56, v15);

        v6 = v54;
        v18 = v64;
      }
      else
      {
LABEL_13:
        v31 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_1A4438920(0, v25[2] + 1, 1, v25);
        v18 = v64;
        v33 = v25[2];
        v32 = v25[3];
        v34 = v56;
        if (v33 >= v32 >> 1)
        {
          v25 = sub_1A4438920((_QWORD *)(v32 > 1), v33 + 1, 1, v25);
          v34 = v56;
        }
        v25[2] = v33 + 1;
        v35 = &v25[2 * v33];
        v35[4] = v34;
        v35[5] = v15;

        v71 = v25;
        v6 = v54;
        v19 = v31;
      }
    }
    ++v13;
  }
  while (v13 != v60);
  v36 = v17;
  swift_bridgeObjectRelease();
  v37 = v71;
  v38 = MEMORY[0x1E0DEE9E8];
  v66 = MEMORY[0x1E0DEE9E8];
  v39 = v71[2];
  if (v39)
  {
    swift_bridgeObjectRetain_n();
    v62 = v37;
    v63 = v36;
    v40 = v37 + 5;
    v64 = v18;
    v41 = v57;
    do
    {
      v42 = *(v40 - 1);
      v43 = *v40;
      swift_bridgeObjectRetain();
      sub_1A469018C();
      v64(v9, 0, 1, v63);
      v69 = v42;
      v70 = v43;
      v67 = sub_1A4691260();
      v68 = v44;
      sub_1A468FBC8();
      v45 = sub_1A4691218();
      v46 = v19;
      v48 = v47;
      v41(v6, v65);
      swift_bridgeObjectRelease();
      sub_1A446615C((uint64_t)v9);
      swift_bridgeObjectRetain();
      sub_1A4465F6C(&v69, v45, v48);
      swift_bridgeObjectRelease();
      v19 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 += 2;
      --v39;
    }
    while (v39);
    v37 = v62;
    swift_bridgeObjectRelease_n();
    v38 = v66;
  }
  v49 = v52;
  *v52 = v37;
  v49[1] = v38;
}

uint64_t REMHashtagLabelCollection.subtracting(_:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void (*v61)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;

  v5 = sub_1A468FBEC();
  v60 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  result = MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  v12 = *(_QWORD *)(*v2 + 16);
  if (v12)
  {
    v13 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      v62 = v7;
      v63 = v5;
      v54 = a2;
      v14 = a1[1];
      v52 = v13;
      swift_bridgeObjectRetain();
      v58 = v14;
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v15 = 0;
      v53 = v11;
      v16 = v11 + 40;
      v56 = -(uint64_t)v12;
      v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v18 = (uint64_t)v59;
      v19 = v12;
      v50 = v11 + 40;
      v51 = v12;
      do
      {
        v55 = v17;
        if (v15 <= v19)
          v20 = v19;
        else
          v20 = v15;
        v57 = -(uint64_t)v20;
        v21 = (uint64_t *)(v16 + 16 * v15++);
        while (1)
        {
          if (v57 + v15 == 1)
          {
            __break(1u);
            return result;
          }
          v22 = *(v21 - 1);
          v23 = *v21;
          swift_bridgeObjectRetain();
          sub_1A469018C();
          v24 = sub_1A4690210();
          v61 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
          v61(v18, 0, 1, v24);
          v66 = v22;
          v67 = v23;
          sub_1A4466118();
          v64 = sub_1A4691260();
          v65 = v25;
          v26 = v62;
          sub_1A468FBC8();
          v27 = sub_1A4691218();
          v29 = v28;
          v30 = *(void (**)(char *, uint64_t))(v60 + 8);
          v31 = v26;
          v18 = (uint64_t)v59;
          v30(v31, v63);
          swift_bridgeObjectRelease();
          sub_1A446615C(v18);
          LOBYTE(v27) = sub_1A4462344(v27, v29, v58);
          swift_bridgeObjectRelease();
          if ((v27 & 1) == 0)
            break;
          result = swift_bridgeObjectRelease();
          ++v15;
          v21 += 2;
          if (v56 + v15 == 1)
          {
            v17 = v55;
            goto LABEL_19;
          }
        }
        v17 = v55;
        result = swift_isUniquelyReferenced_nonNull_native();
        v68 = v17;
        if ((result & 1) == 0)
        {
          result = sub_1A445A8BC(0, v17[2] + 1, 1);
          v17 = v68;
        }
        v33 = v17[2];
        v32 = v17[3];
        if (v33 >= v32 >> 1)
        {
          result = sub_1A445A8BC(v32 > 1, v33 + 1, 1);
          v17 = v68;
        }
        v17[2] = v33 + 1;
        v34 = &v17[2 * v33];
        v34[4] = v22;
        v34[5] = v23;
        v16 = v50;
        v19 = v51;
      }
      while (v56 + v15);
LABEL_19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      v36 = (_QWORD *)MEMORY[0x1E0DEE9E8];
      v68 = (_QWORD *)MEMORY[0x1E0DEE9E8];
      v37 = v17[2];
      if (v37)
      {
        swift_bridgeObjectRetain_n();
        v55 = v17;
        v38 = v17 + 5;
        do
        {
          v39 = *(v38 - 1);
          v40 = *v38;
          swift_bridgeObjectRetain();
          sub_1A469018C();
          v61(v18, 0, 1, v24);
          v66 = v39;
          v67 = v40;
          v64 = sub_1A4691260();
          v65 = v41;
          v42 = v24;
          v43 = v30;
          v44 = v62;
          sub_1A468FBC8();
          v60 = sub_1A4691218();
          v46 = v45;
          v47 = v44;
          v30 = v43;
          v24 = v42;
          v30(v47, v63);
          swift_bridgeObjectRelease();
          sub_1A446615C(v18);
          swift_bridgeObjectRetain();
          sub_1A4465F6C(&v66, v60, v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v38 += 2;
          --v37;
        }
        while (v37);
        v17 = v55;
        result = swift_release_n();
        v36 = v68;
      }
      v48 = v54;
      *v54 = v17;
      v48[1] = v36;
    }
    else
    {
      v49 = v2[1];
      *a2 = v11;
      a2[1] = v49;
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
  }
  else
  {
    v35 = MEMORY[0x1E0DEE9E8];
    *a2 = MEMORY[0x1E0DEE9D8];
    a2[1] = v35;
  }
  return result;
}

uint64_t REMHashtagLabelCollection.isSuperset(of:)(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4465B2C(*(_QWORD *)(v1 + 8), *(_QWORD *)(a1 + 8));
}

uint64_t REMHashtagLabelCollection.isSubset(of:)(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4465B2C(*(_QWORD *)(a1 + 8), *(_QWORD *)(v1 + 8));
}

uint64_t REMHashtagLabelCollection.matches(_:)(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4464338(*(_QWORD *)(v1 + 8), *(_QWORD *)(a1 + 8));
}

void sub_1A4463B98(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
      sub_1A469132C();
    else
      sub_1A4465E1C(v5, a2);
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1A4465E1C(v6, a1);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v26 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a1 + 56);
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v10 = 0;
  v27 = (unint64_t)(v7 + 63) >> 6;
  v11 = a2 + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_36;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v14 >= v27)
      return;
    v15 = *(_QWORD *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v27)
        return;
      v15 = *(_QWORD *)(v26 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v27)
          return;
        v15 = *(_QWORD *)(v26 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_35:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_36:
    v17 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    v18 = sub_1A4691134();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_43;
    v28 = v10;
    v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
    v22 = sub_1A4691140();

    if ((v22 & 1) == 0)
    {
      v23 = ~v19;
      while (1)
      {
        v20 = (v20 + 1) & v23;
        if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
        v25 = sub_1A4691140();

        if ((v25 & 1) != 0)
          goto LABEL_19;
      }
LABEL_43:

      return;
    }
LABEL_19:

    v10 = v28;
  }
  v16 = v14 + 3;
  if (v16 >= v27)
    return;
  v15 = *(_QWORD *)(v26 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_35;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v27)
      return;
    v15 = *(_QWORD *)(v26 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_35;
  }
LABEL_46:
  __break(1u);
}

uint64_t sub_1A4463E80(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    sub_1A4691C8C();
    sub_1A4691C98();
    result = sub_1A4691CC8();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(_QWORD *)(v19 + 8 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(_QWORD *)(v19 + 8 * v18) == v16)
      goto LABEL_7;
  }
}

void sub_1A4464060(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  char v22;
  uint64_t v23;
  id v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  int64_t v28;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
      sub_1A469132C();
    else
      sub_1A4465E1C(v5, a2);
    return;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    sub_1A4465E1C(v6, a1);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v26 = a1 + 56;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a1 + 56);
  type metadata accessor for REMObjectID_Codable();
  v10 = 0;
  v27 = (unint64_t)(v7 + 63) >> 6;
  v11 = a2 + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_36;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v14 >= v27)
      return;
    v15 = *(_QWORD *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v27)
        return;
      v15 = *(_QWORD *)(v26 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v27)
          return;
        v15 = *(_QWORD *)(v26 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_35:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_36:
    v17 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v13);
    v18 = sub_1A4691134();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_43;
    v28 = v10;
    v21 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
    v22 = sub_1A4691140();

    if ((v22 & 1) == 0)
    {
      v23 = ~v19;
      while (1)
      {
        v20 = (v20 + 1) & v23;
        if (((*(_QWORD *)(v11 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
          break;
        v24 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v20);
        v25 = sub_1A4691140();

        if ((v25 & 1) != 0)
          goto LABEL_19;
      }
LABEL_43:

      return;
    }
LABEL_19:

    v10 = v28;
  }
  v16 = v14 + 3;
  if (v16 >= v27)
    return;
  v15 = *(_QWORD *)(v26 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_35;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v27)
      return;
    v15 = *(_QWORD *)(v26 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_35;
  }
LABEL_46:
  __break(1u);
}

uint64_t sub_1A4464338(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
          break;
      }
    }
LABEL_23:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    v18 = sub_1A4691CC8();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_39;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1A4691A40() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1A4691A40() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 4;
  if (v3 + 4 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_23;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t static REMHashtagLabelCollection.sortedLabels<A>(from:)()
{
  return sub_1A4690AEC();
}

uint64_t sub_1A4464614(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static REMHashtagLabelCollection.sort<A>(_:byName:)()
{
  return sub_1A4690AEC();
}

BOOL sub_1A4464690(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v5;
  void *v6;
  id v7;

  a3();
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t))a3)(a2);
  v6 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, sel_localizedStandardCompare_, v6);

  return v7 == (id)-1;
}

uint64_t REMHashtagLabelCollection.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  result = sub_1A4691C98();
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A4690948();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static REMHashtagLabelCollection.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  return sub_1A4464B60(*a1, *a2);
}

uint64_t sub_1A44647CC(uint64_t a1, uint64_t a2)
{
  uint64_t Predicate;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  v5 = MEMORY[0x1E0C80A78](Predicate);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1A4467960(a1 + v12, (uint64_t)v10);
        sub_1A4467960(a2 + v12, (uint64_t)v7);
        v15 = static REMCustomSmartListFilterDescriptor.PostFetchPredicate.== infix(_:_:)(v10, v7);
        sub_1A44679A4((uint64_t)v7);
        sub_1A44679A4((uint64_t)v10);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1A44648E8(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v23 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v6 == v23)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1A859ECE0](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v13 = (id)MEMORY[0x1A859ECE0](0, a2);
LABEL_21:
    v14 = v13;
    type metadata accessor for REMObjectID_Codable();
    v15 = sub_1A4691140();

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v24)
        {
          v22 = (id)MEMORY[0x1A859ECE0](i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)MEMORY[0x1A859ECE0](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = sub_1A4691140();

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4464B60(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1A4691A40(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1A4691A40() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A4464C24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = 0;
  v4 = a1 + 32;
  v5 = a2 + 32;
  v26 = a1 + 32;
  v27 = *(_QWORD *)(a1 + 16);
  v28 = a2 + 32;
  while (1)
  {
    v6 = (unint64_t *)(v4 + 16 * v3);
    v7 = *v6;
    v29 = v6[1];
    v8 = (unint64_t *)(v5 + 16 * v3);
    v9 = *v8;
    v10 = v8[1];
    v11 = *v6 >> 62;
    if (!(_DWORD)v11)
    {
      if (v9 >> 62)
        return 0;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      sub_1A4467604(v9);
      sub_1A4467604(v7);
      v12 = sub_1A4691140();
      sub_1A4467654(v9);
      v13 = v7;
LABEL_11:
      sub_1A4467654(v13);
      if ((v12 & 1) == 0)
        return 0;
      goto LABEL_22;
    }
    if ((_DWORD)v11 == 1)
    {
      if (v9 >> 62 != 1)
        return 0;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      sub_1A4467604(v9);
      sub_1A4467604(v7);
      v5 = v28;
      v12 = sub_1A4691140();
      sub_1A4467654(v9);
      v13 = v7;
      goto LABEL_11;
    }
    if (v9 >> 62 != 2)
      return 0;
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
    sub_1A4467604(v9);
    sub_1A4467604(v7);
    if ((sub_1A4691140() & 1) == 0)
      goto LABEL_33;
    v14 = *(_QWORD *)(v29 + 16);
    if (v14 != *(_QWORD *)(v10 + 16))
      goto LABEL_33;
    if (v14 && v29 != v10)
      break;
LABEL_21:
    sub_1A4467654(v9);
    sub_1A4467654(v7);
    v4 = v26;
    v2 = v27;
    v5 = v28;
LABEL_22:
    if (++v3 == v2)
      return 1;
  }
  v16 = (unint64_t *)(v29 + 32);
  v17 = (unint64_t *)(v10 + 32);
  while (1)
  {
    v19 = *v16++;
    v18 = v19;
    v21 = *v17++;
    v20 = v21;
    if ((v18 & 0x8000000000000000) != 0)
    {
      if ((v20 & 0x8000000000000000) == 0)
        break;
      v18 &= ~0x8000000000000000;
      v20 &= ~0x8000000000000000;
    }
    else if ((v20 & 0x8000000000000000) != 0)
    {
      break;
    }
    v22 = (id)v20;
    v23 = (id)v18;
    v24 = sub_1A4691140();

    if ((v24 & 1) == 0)
      break;
    if (!--v14)
      goto LABEL_21;
  }
LABEL_33:
  sub_1A4467654(v9);
  sub_1A4467654(v7);
  return 0;
}

uint64_t sub_1A4464EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  char v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    v3 = (unint64_t *)(a1 + 32);
    v4 = (unint64_t *)(a2 + 32);
    while (1)
    {
      v6 = *v3++;
      v5 = v6;
      v8 = *v4++;
      v7 = v8;
      if ((v5 & 0x8000000000000000) != 0)
      {
        if ((v7 & 0x8000000000000000) == 0)
          return 0;
        v5 &= ~0x8000000000000000;
        v7 &= ~0x8000000000000000;
      }
      else if ((v7 & 0x8000000000000000) != 0)
      {
        return 0;
      }
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      v9 = (id)v7;
      v10 = (id)v5;
      v11 = sub_1A4691140();

      if ((v11 & 1) == 0)
        break;
      if (!--v2)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_1A4464FD0(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  id v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  char v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;

  v5 = (void *)((unint64_t)a1 >> 62);
  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v23 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v6 == v23)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  v7 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  if (v6 != *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
    return 0;
LABEL_4:
  if (!v6)
    return 1;
  v8 = a1 & 0xFFFFFFFFFFFFFF8;
  v9 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v8 = a1;
  if (v5)
    v9 = v8;
  v10 = a2 & 0xFFFFFFFFFFFFFF8;
  v11 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v10 = a2;
  if (v7)
    v11 = v10;
  if (v9 == v11)
    return 1;
  if (v6 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v24 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1A859ECE0](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v5 = (void *)result;
  v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v13 = (id)MEMORY[0x1A859ECE0](0, a2);
LABEL_21:
    v14 = v13;
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
    v15 = sub_1A4691140();

    if ((v15 & 1) != 0)
    {
      v16 = 1 - v6;
      for (i = 5; ; ++i)
      {
        v6 = v16 + i == 5;
        if (v16 + i == 5)
          return v6;
        v21 = i - 4;
        if (v24)
        {
          v22 = (id)MEMORY[0x1A859ECE0](i - 4, a1);
          if (v2)
            goto LABEL_23;
        }
        else
        {
          if (v21 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          v22 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_23:
            v18 = (id)MEMORY[0x1A859ECE0](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v21 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v18 = *(id *)(a2 + 8 * i);
LABEL_24:
        v19 = v18;
        v20 = sub_1A4691140();

        if ((v20 & 1) == 0)
          return v6;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

BOOL sub_1A4465258(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = a1 + 5;
  v6 = a2 + 5;
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t REMHashtagLabelCollection.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A4691C98();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A4690948();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_1A4691CC8();
}

uint64_t sub_1A4465374()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_1A4691C8C();
  v2 = *(_QWORD *)(v1 + 16);
  sub_1A4691C98();
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1A4690948();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_1A4691CC8();
}

uint64_t sub_1A4465410(_QWORD **a1, _QWORD **a2)
{
  return sub_1A4464B60(*a1, *a2);
}

uint64_t REMHashtagLabelCollection.init<A>(hashtags:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];
  uint64_t v36;

  v8 = sub_1A468FBEC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A4460F34((void (*)(char *, char *))sub_1A4465670, 0, a2, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], a3, MEMORY[0x1E0DEDD18], v15);
  v17 = MEMORY[0x1E0DEE9E8];
  v36 = MEMORY[0x1E0DEE9E8];
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v30 = a1;
    v31 = a2;
    v32 = a4;
    swift_bridgeObjectRetain_n();
    v29 = v16;
    v19 = (uint64_t *)(v16 + 40);
    v20 = v8;
    do
    {
      v21 = *(v19 - 1);
      v22 = *v19;
      swift_bridgeObjectRetain();
      sub_1A469018C();
      v23 = sub_1A4690210();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 0, 1, v23);
      v35[0] = v21;
      v35[1] = v22;
      sub_1A4466118();
      v33 = sub_1A4691260();
      v34 = v24;
      sub_1A468FBC8();
      v25 = sub_1A4691218();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v20);
      swift_bridgeObjectRelease();
      sub_1A446615C((uint64_t)v14);
      swift_bridgeObjectRetain();
      sub_1A4465F6C(v35, v25, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 += 2;
      --v18;
    }
    while (v18);
    v16 = v29;
    swift_bridgeObjectRelease_n();
    v17 = v36;
    a2 = v31;
    a4 = v32;
    a1 = v30;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  *a4 = v16;
  a4[1] = v17;
  return result;
}

void sub_1A4465670(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_name);
  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

char *sub_1A44656D4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1A4438920(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4465854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = a3;
    v5 = a2;
    v6 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (v23 < v5)
    goto LABEL_31;
LABEL_4:
  v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x1A859ECEC](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = (_QWORD *)(v13 + 32 + 8 * v6);
  type metadata accessor for REMGroceryLanguage();
  swift_arrayDestroy();
  if (!v8)
  {
LABEL_28:
    *v15 = v3;
    return sub_1A4690BB8();
  }
  if (!(v7 >> 62))
  {
    v16 = *(_QWORD *)(v13 + 16);
    v17 = v16 - v5;
    if (!__OFSUB__(v16, v5))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  v17 = v24 - v5;
  if (__OFSUB__(v24, v5))
    goto LABEL_40;
LABEL_21:
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v15 + 1);
    v19 = (char *)(v13 + 32 + 8 * v5);
    if (v15 + 1 != (_QWORD *)v19 || v18 >= &v19[8 * v17])
      memmove(v18, v19, 8 * v17);
    if (!(v7 >> 62))
    {
      v20 = *(_QWORD *)(v13 + 16);
      v21 = v20 + v8;
      if (!__OFADD__(v20, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v21;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    v21 = v25 + v8;
    if (!__OFADD__(v25, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4465B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t i;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;

  if (*(_QWORD *)(a1 + 16) < *(_QWORD *)(a2 + 16))
    return 0;
  v3 = a2;
  v4 = a1;
  v31 = a2 + 56;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v30 = (unint64_t)(63 - v5) >> 6;
  v32 = a1 + 56;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v12)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (i << 6);
      v12 = i;
      if (!*(_QWORD *)(v4 + 16))
        goto LABEL_40;
      goto LABEL_25;
    }
    v13 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v13 >= v30)
      goto LABEL_41;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    v12 = i + 1;
    if (!v14)
    {
      v12 = i + 2;
      if (i + 2 >= v30)
        goto LABEL_41;
      v14 = *(_QWORD *)(v31 + 8 * v12);
      if (!v14)
      {
        v12 = i + 3;
        if (i + 3 >= v30)
          goto LABEL_41;
        v14 = *(_QWORD *)(v31 + 8 * v12);
        if (!v14)
          break;
      }
    }
LABEL_24:
    v7 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
    if (!*(_QWORD *)(v4 + 16))
    {
LABEL_40:
      v2 = 0;
      goto LABEL_42;
    }
LABEL_25:
    v16 = v3;
    v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v19 = *v17;
    v18 = v17[1];
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    v20 = sub_1A4691CC8();
    v21 = v4;
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = v20 & ~v22;
    if (((*(_QWORD *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
      goto LABEL_39;
    v24 = *(_QWORD *)(v21 + 48);
    v25 = (_QWORD *)(v24 + 16 * v23);
    v26 = *v25 == v19 && v25[1] == v18;
    if (!v26 && (sub_1A4691A40() & 1) == 0)
    {
      v27 = ~v22;
      while (1)
      {
        v23 = (v23 + 1) & v27;
        if (((*(_QWORD *)(v32 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
          break;
        v28 = (_QWORD *)(v24 + 16 * v23);
        v29 = *v28 == v19 && v28[1] == v18;
        if (v29 || (sub_1A4691A40() & 1) != 0)
          goto LABEL_7;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      v2 = 0;
LABEL_42:
      sub_1A4460EDC();
      return v2;
    }
LABEL_7:
    result = swift_bridgeObjectRelease();
    v3 = v16;
    v4 = v21;
  }
  v15 = i + 4;
  if (i + 4 >= v30)
  {
LABEL_41:
    v2 = 1;
    goto LABEL_42;
  }
  v14 = *(_QWORD *)(v31 + 8 * v15);
  if (v14)
  {
    v12 = i + 4;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v12 >= v30)
      goto LABEL_41;
    v14 = *(_QWORD *)(v31 + 8 * v12);
    ++v15;
    if (v14)
      goto LABEL_24;
  }
LABEL_45:
  __break(1u);
  return result;
}

void sub_1A4465E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1A4691308())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_1A4691344();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1A4465F6C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  v8 = sub_1A4691CC8();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A4691A40() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A4691A40() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A461E194(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

unint64_t sub_1A4466118()
{
  unint64_t result;

  result = qword_1ED240500;
  if (!qword_1ED240500)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED240500);
  }
  return result;
}

uint64_t sub_1A446615C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A446619C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A4461A90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1A44661B8(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1A4691314();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1A4691308();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1A44BD410(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1A461CDF0(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1A44BDA3C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A4691134();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1A4691140();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1A4691140();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1A461E32C((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A4466454(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_1A4691C80();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A461E348(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A446654C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1A4436344((unint64_t *)&qword_1ED23FE90, v11, MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1A46907E0();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1A4436344((unint64_t *)&qword_1ED23FEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v21 = sub_1A4690864();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A461E468((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1A44667A8(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1A4691314();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for REMObjectID_Codable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1A4691308();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1A44BD434(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1A461D07C(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1A44BDA3C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A4691134();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for REMObjectID_Codable();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1A4691140();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1A4691140();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1A461E6BC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A4466A24(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1A4691C8C();
  sub_1A4691C98();
  v6 = sub_1A4691CC8();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A461E850(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A4466B40(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_1A4691C8C();
  sub_1A4691C98();
  v6 = sub_1A4691CC8();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A461E99C(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1A4466C5C(_QWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  id v24;
  void *v26;
  id v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  v7 = sub_1A4691CC8();
  swift_bridgeObjectRelease();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v3;
    *v3 = 0x8000000000000000;
    v24 = a2;
    sub_1A461EAE8((uint64_t)v24, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v28;
    swift_bridgeObjectRelease();
    *a1 = v24;
    return 1;
  }
  v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = ~v8;
      do
      {
        v9 = (v9 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
          goto LABEL_15;
        v17 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v19 = v18;
        if (v17 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v19 == v20)
          goto LABEL_16;
        v22 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v22 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  v26 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v9);
  *a1 = v26;
  v27 = v26;
  return 0;
}

uint64_t sub_1A4466E84(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1A4691314();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1A4691308();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1A44BD618(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1A461D8E8(v26);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1A44BDA3C(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A4691134();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1A4691140();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1A4691140();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1A461ED14((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1A4467120(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1A4690210();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1A4436344(&qword_1EE71D0F8, v11, MEMORY[0x1E0CB0E58]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1A46907E0();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1A4436344(&qword_1EE71D100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
      v21 = sub_1A4690864();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A461EEC0((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1A446737C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_1A446742C(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1A44674C8(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1A44AC7EC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1A44674C8(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1A44CC09C(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

uint64_t sub_1A4467534(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

BOOL sub_1A446758C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A4464690(a1, a2, *(void (**)(void))(v2 + 32));
}

unint64_t sub_1A44675B0()
{
  unint64_t result;

  result = qword_1EE71D0F0;
  if (!qword_1EE71D0F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelCollection, &type metadata for REMHashtagLabelCollection);
    atomic_store(result, (unint64_t *)&qword_1EE71D0F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelCollection()
{
  return &type metadata for REMHashtagLabelCollection;
}

unint64_t sub_1A4467604(unint64_t result)
{
  unint64_t v1;
  id v2;

  v1 = result >> 62;
  if (result >> 62 == 2)
  {
    v2 = (id)(result & 0x3FFFFFFFFFFFFFFFLL);
    return swift_bridgeObjectRetain();
  }
  else if ((_DWORD)v1 == 1)
  {
    return (unint64_t)(id)(result & 0x3FFFFFFFFFFFFFFFLL);
  }
  else if (!(_DWORD)v1)
  {
    return (unint64_t)(id)result;
  }
  return result;
}

void sub_1A4467654(unint64_t a1)
{
  unint64_t v1;

  v1 = a1 >> 62;
  if (a1 >> 62 == 2)
  {

    swift_bridgeObjectRelease();
  }
  else if ((_DWORD)v1 == 1)
  {

  }
  else if (!(_DWORD)v1)
  {

  }
}

uint64_t sub_1A44676A4(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1A4438920(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

char *sub_1A446780C(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = sub_1A4439D2C(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = v12 - a2;
  if (__OFSUB__(v12, a2))
    goto LABEL_27;
  if ((v13 & 0x8000000000000000) == 0)
  {
    result = &v4[a1 + 32];
    v14 = &v4[a2 + 32];
    if (a1 != a2 || result >= &v14[v13])
      result = (char *)memmove(result, v14, v13);
    v15 = *((_QWORD *)v4 + 2);
    v16 = __OFADD__(v15, v8);
    v17 = v15 + v8;
    if (!v16)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4467960(uint64_t a1, uint64_t a2)
{
  uint64_t Predicate;

  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(Predicate - 8) + 16))(a2, a1, Predicate);
  return a2;
}

uint64_t sub_1A44679A4(uint64_t a1)
{
  uint64_t Predicate;

  Predicate = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(Predicate - 8) + 8))(a1, Predicate);
  return a1;
}

uint64_t sub_1A44679E0(uint64_t *a1)
{
  return sub_1A446619C(a1) & 1;
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A46900FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED240CF0);
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.init(uuid:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t REMiCloudSharedItemSpecifier.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _BYTE *v20;
  char *v21;
  char v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v31 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D108);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v30 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242E50);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A468FC7C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A468FF4C();
  if (!v16)
    goto LABEL_10;
  if (v15 == 0x7370747468 && v16 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v17 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
LABEL_10:
    sub_1A44682C8();
    swift_allocError();
    *v20 = 0;
LABEL_15:
    swift_willThrow();
    v23 = sub_1A468FF7C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a1, v23);
  }
LABEL_6:
  sub_1A468FF34();
  if (!v18)
  {
    sub_1A44682C8();
    swift_allocError();
    v22 = 1;
LABEL_14:
    *v21 = v22;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  v19 = (_QWORD *)sub_1A468FEA4();
  if (!v19[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1A468FC58();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v10, &qword_1ED242E50);
LABEL_13:
    sub_1A44682C8();
    swift_allocError();
    v22 = 2;
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  v25 = v32;
  sub_1A4467EA8(v19, v32);
  swift_bridgeObjectRelease();
  sub_1A446830C((uint64_t)v25, (uint64_t)v6);
  v26 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v6, 1, v26) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1EE71D108);
    sub_1A44682C8();
    swift_allocError();
    *v27 = 3;
    swift_willThrow();
    v28 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
    sub_1A445404C((uint64_t)v25, &qword_1EE71D108);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v29 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
    sub_1A445404C((uint64_t)v25, &qword_1EE71D108);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return sub_1A44683E0((uint64_t)v6, v31, type metadata accessor for REMiCloudSharedItemSpecifier);
  }
}

uint64_t sub_1A4467EA8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  _QWORD v24[4];
  uint64_t v25;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900FC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[2] != 4
    || (a1[4] != 47 || a1[5] != 0xE100000000000000) && (sub_1A4691A40() & 1) == 0
    || (a1[6] != 0x7265646E696D6572 || a1[7] != 0xE900000000000073) && (sub_1A4691A40() & 1) == 0
    || (a1[8] != 0x6574616C706D6574 || a1[9] != 0xE800000000000000) && (sub_1A4691A40() & 1) == 0)
  {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1A46900C0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED243170);
LABEL_13:
    v11 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  v13 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v13(v10, v6, v7);
  v14 = sub_1A468FC70();
  if (v15
    && (v25 = v14, v26 = v15, sub_1A4466118(), v16 = sub_1A4691230(), v18 = v17, swift_bridgeObjectRelease(), v18))
  {
    v25 = v16;
    v26 = v18;
    v24[2] = 95;
    v24[3] = 0xE100000000000000;
    v24[0] = 32;
    v24[1] = 0xE100000000000000;
    v19 = sub_1A4691224();
    v21 = v20;
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  v13(a2, v10, v7);
  v22 = (uint64_t *)&a2[*(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20)];
  *v22 = v19;
  v22[1] = v21;
  v23 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a2, 0, 1, v23);
}

uint64_t REMiCloudSharedItemSpecifier.navigationSpecifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A446839C(v1, (uint64_t)v5);
  sub_1A44683E0((uint64_t)v5, a1, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  type metadata accessor for REMNavigationSpecifier(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s19ReminderKitInternal28REMiCloudSharedItemSpecifierO14PublicTemplateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;

  if ((sub_1A46900E4() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
    v5 = (_QWORD *)(a1 + v4);
    v6 = *(_QWORD *)(a1 + v4 + 8);
    v7 = (_QWORD *)(a2 + v4);
    v8 = v7[1];
    if (v6)
    {
      if (v8)
      {
        v9 = *v5 == *v7 && v6 == v8;
        if (v9 || (sub_1A4691A40() & 1) != 0)
          return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_1A44682C8()
{
  unint64_t result;

  result = qword_1EE71D110;
  if (!qword_1EE71D110)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4696924, &type metadata for REMiCloudSharedItemSpecifier.URLParsingError);
    atomic_store(result, (unint64_t *)&qword_1EE71D110);
  }
  return result;
}

uint64_t sub_1A446830C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMiCloudSharedItemSpecifier(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED23F130);
}

uint64_t sub_1A4468368(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A446839C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMiCloudSharedItemSpecifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A44683E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s19ReminderKitInternal28REMiCloudSharedItemSpecifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v23;

  v4 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D120);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_1A446839C(a1, (uint64_t)v13);
  sub_1A446839C(a2, v14);
  sub_1A44683E0((uint64_t)v13, (uint64_t)v9, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  sub_1A44683E0(v14, (uint64_t)v7, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  if ((sub_1A46900E4() & 1) == 0)
    goto LABEL_11;
  v15 = *(int *)(v4 + 20);
  v16 = &v9[v15];
  v17 = *(_QWORD *)&v9[v15 + 8];
  v18 = &v7[v15];
  v19 = *((_QWORD *)v18 + 1);
  if (v17)
  {
    if (v19)
    {
      v20 = *(_QWORD *)v16 == *(_QWORD *)v18 && v17 == v19;
      if (v20 || (sub_1A4691A40() & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v21 = 0;
    goto LABEL_12;
  }
  if (v19)
    goto LABEL_11;
LABEL_9:
  v21 = 1;
LABEL_12:
  sub_1A4468ECC((uint64_t)v7);
  sub_1A4468ECC((uint64_t)v9);
  return v21;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMiCloudSharedItemSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1A46900FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = v9[1];
    *v8 = *v9;
    v8[1] = v10;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for REMiCloudSharedItemSpecifier(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = v7[1];
  *v6 = *v7;
  v6[1] = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t assignWithTake for REMiCloudSharedItemSpecifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (uint64_t *)(a2 + v5);
  v9 = *v7;
  v8 = v7[1];
  *v6 = v9;
  v6[1] = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMiCloudSharedItemSpecifier()
{
  type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for REMiCloudSharedItemSpecifier()
{
  type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A44688AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900FC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for REMiCloudSharedItemSpecifier.PublicTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMiCloudSharedItemSpecifier.PublicTemplate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for REMiCloudSharedItemSpecifier.PublicTemplate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A46900FC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_1A4468CB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMiCloudSharedItemSpecifier.URLParsingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMiCloudSharedItemSpecifier.URLParsingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A4468E04 + 4 * byte_1A46967F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A4468E38 + 4 * asc_1A46967F0[v4]))();
}

uint64_t sub_1A4468E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4468E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4468E48);
  return result;
}

uint64_t sub_1A4468E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4468E5CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A4468E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4468E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMiCloudSharedItemSpecifier.URLParsingError()
{
  return &type metadata for REMiCloudSharedItemSpecifier.URLParsingError;
}

unint64_t sub_1A4468E88()
{
  unint64_t result;

  result = qword_1EE71D118;
  if (!qword_1EE71D118)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46968FC, &type metadata for REMiCloudSharedItemSpecifier.URLParsingError);
    atomic_store(result, (unint64_t *)&qword_1EE71D118);
  }
  return result;
}

uint64_t sub_1A4468ECC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static REMChecksumAlgorithm.== infix(_:_:)()
{
  return 1;
}

uint64_t REMChecksumAlgorithm.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMChecksumAlgorithm.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t REMChecksumRepresentable.rem_checksum.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  char *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v21 = sub_1A46906B4();
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v22 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A4690654();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v18 - v13;
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  if (!v3)
  {
    v19 = v16;
    v20 = v15;
    v18[1] = v6;
    v18[2] = v12;
    v18[4] = v8;
    v18[5] = v14;
    v18[3] = v9;
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    sub_1A4436344(&qword_1ED23F690, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9988], MEMORY[0x1E0CA9978]);
    sub_1A4690648();
    __asm { BR              X10 }
  }
  return v2;
}

uint64_t sub_1A44694E4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A468FC94();
  if (!result || (result = sub_1A468FCAC(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1A468FCA0();
      sub_1A46906B4();
      sub_1A4436344(&qword_1ED23F690, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9988], MEMORY[0x1E0CA9978]);
      return sub_1A4690630();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A44695A8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1A44695EC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_1A4469630()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2421A0;
  if (!qword_1ED2421A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED242FF0);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2421A0);
  }
  return result;
}

unint64_t sub_1A4469680()
{
  unint64_t result;

  result = qword_1EE71D130;
  if (!qword_1EE71D130)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMChecksumAlgorithm, &type metadata for REMChecksumAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EE71D130);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMChecksumAlgorithm(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A4469704 + 4 * byte_1A4696970[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4469724 + 4 * byte_1A4696975[v4]))();
}

_BYTE *sub_1A4469704(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4469724(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A446972C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4469734(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A446973C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4469744(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMChecksumAlgorithm()
{
  return &type metadata for REMChecksumAlgorithm;
}

uint64_t dispatch thunk of REMChecksumRepresentable.rem_baseForChecksum()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMChecksumRepresentable.rem_checksumAlgorithm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A4469780(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A44697A0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1A44697C0()
{
  qword_1EE71D140 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_none");
  return swift_unknownObjectRetain();
}

uint64_t sub_1A44697E8()
{
  qword_1ED242448 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

unint64_t REM_os_activity.init(_:dso:options:)@<X0>(void *dso@<X3>, unint64_t result@<X0>, char a3@<W2>, os_activity_flag_t *a4@<X4>, unint64_t a5@<X8>)
{
  unint64_t v6;
  _QWORD *v7;
  os_activity_flag_t v8;
  NSObject *v9;
  void *v10;
  char *v11;
  unsigned int v12;
  int v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unint64_t v18;
  char description[8];

  v6 = result;
  v7 = (_QWORD *)a5;
  v8 = *a4;
  if ((a3 & 1) == 0)
  {
    if (result)
    {
      if (dso)
      {
        if (qword_1ED242708 == -1)
        {
LABEL_5:
          v9 = qword_1ED242448;
          v10 = dso;
          v11 = (char *)v6;
LABEL_16:
          result = (unint64_t)_os_activity_create(v10, v11, v9, v8);
LABEL_18:
          *v7 = result;
          return result;
        }
LABEL_29:
        v18 = result;
        swift_once();
        v6 = v18;
        goto LABEL_5;
      }
LABEL_17:
      result = 0;
      goto LABEL_18;
    }
    __break(1u);
    goto LABEL_20;
  }
  a5 = HIDWORD(result);
  if (HIDWORD(result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result >> 11 != 27)
  {
    LODWORD(a5) = WORD1(result);
    if (WORD1(result) <= 0x10u)
    {
      if ((result & 0xFFFFFF80) == 0)
      {
        if (result > 0xFF)
        {
          __break(1u);
          goto LABEL_29;
        }
        v12 = (result + 1);
        goto LABEL_12;
      }
LABEL_22:
      v13 = (result & 0x3F) << 8;
      v14 = (v13 | (result >> 6)) + 33217;
      v15 = (v13 | (result >> 6) & 0x3F) << 8;
      v16 = (((v15 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
      v17 = (v15 | (result >> 12)) + 8487393;
      if ((_DWORD)a5)
        v12 = v16;
      else
        v12 = v17;
      if (result < 0x800)
        v12 = v14;
LABEL_12:
      *(_QWORD *)description = (v12 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v12) & 0x38)) & 0x38));
      if (dso)
      {
        if (qword_1ED242708 != -1)
          swift_once();
        v9 = qword_1ED242448;
        v11 = description;
        v10 = dso;
        goto LABEL_16;
      }
      goto LABEL_17;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

unint64_t REM_os_activity.init(_:dso:parent:options:)@<X0>(os_activity_t dso@<X3>, unint64_t result@<X0>, char a3@<W2>, NSObject **a4@<X4>, os_activity_flag_t *a5@<X5>, os_activity_t *a6@<X8>)
{
  unint64_t v8;
  os_activity_t *v9;
  NSObject *v10;
  os_activity_flag_t v11;
  os_activity_t v12;
  char *v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  char description[8];

  v8 = result;
  v9 = a6;
  v10 = *a4;
  v11 = *a5;
  if (!*a4)
  {
    if (qword_1ED242708 != -1)
      goto LABEL_28;
    goto LABEL_7;
  }
  for (; (a3 & 1) != 0; result = swift_unknownObjectRetain())
  {
    a6 = (os_activity_t *)HIDWORD(v8);
    if (HIDWORD(v8))
      goto LABEL_19;
    if (v8 >> 11 == 27)
    {
      __break(1u);
      return result;
    }
    LODWORD(a6) = WORD1(v8);
    if (WORD1(v8) > 0x10u)
      goto LABEL_20;
    if ((v8 & 0xFFFFFF80) != 0)
      goto LABEL_21;
    if (v8 <= 0xFF)
    {
      v14 = (v8 + 1);
      goto LABEL_14;
    }
    __break(1u);
LABEL_28:
    swift_once();
LABEL_7:
    v10 = qword_1ED242448;
  }
  if (!v8)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    v15 = (v8 & 0x3F) << 8;
    v16 = (v15 | (v8 >> 6)) + 33217;
    v17 = (v15 | (v8 >> 6) & 0x3F) << 8;
    v18 = (((v17 | (v8 >> 12) & 0x3F) << 8) | (v8 >> 18)) - 2122219023;
    v19 = (v17 | (v8 >> 12)) + 8487393;
    if ((_DWORD)a6)
      v14 = v18;
    else
      v14 = v19;
    if (v8 < 0x800)
      v14 = v16;
LABEL_14:
    *(_QWORD *)description = (v14 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v14) & 0x38)) & 0x38));
    if (!dso)
      goto LABEL_17;
    v13 = description;
    v12 = dso;
    goto LABEL_16;
  }
  if (dso)
  {
    v12 = dso;
    v13 = (char *)v8;
LABEL_16:
    dso = _os_activity_create(v12, v13, v10, v11);
  }
LABEL_17:
  result = swift_unknownObjectRelease();
  *v9 = dso;
  return result;
}

uint64_t static REM_os_activity.none.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A4469BA8(qword_1EE71BFE0, &qword_1EE71D140, a1);
}

uint64_t static REM_os_activity.current.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1A4469BA8(&qword_1ED242708, &qword_1ED242448, a1);
}

uint64_t sub_1A4469BA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_unknownObjectRetain();
}

void static REM_os_activity.Options.ifNonePresent.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static REM_os_activity.initiate(_:dso:options:execute:)(const char *a1, int a2, char a3, uint64_t a4, os_activity_flag_t *a5, void *aBlock)
{
  os_activity_flag_t v9;
  void *v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char isEscapingClosureAtFileLocation;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t aBlocka;
  uint64_t v27;
  uint64_t (*v28)(uint64_t);
  void *v29;
  uint64_t (*v30)();
  uint64_t v31;
  char description[8];

  v9 = *a5;
  v10 = _Block_copy(aBlock);
  v12 = v10;
  if ((a3 & 1) != 0)
  {
LABEL_6:
    v11 = (unint64_t)a1 >> 32;
    if (!((unint64_t)a1 >> 32))
    {
      if (a1 >> 11 == 27)
      {
LABEL_28:
        __break(1u);
        return;
      }
      LODWORD(v11) = a1 >> 16;
      if (a1 >> 16 <= 0x10)
      {
        if ((a1 & 0xFFFFFF80) == 0)
        {
          if (a1 > 0xFF)
          {
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
          v16 = ((_BYTE)a1 + 1);
LABEL_12:
          *(_QWORD *)description = (v16 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v16) & 0x38)) & 0x38));
          if (!a4)
            goto LABEL_14;
          v17 = swift_allocObject();
          *(_QWORD *)(v17 + 16) = v12;
          v18 = swift_allocObject();
          *(_QWORD *)(v18 + 16) = sub_1A4469F7C;
          *(_QWORD *)(v18 + 24) = v17;
          v30 = sub_1A4452640;
          v31 = v18;
          aBlocka = MEMORY[0x1E0C809B0];
          v27 = 1107296256;
          v28 = sub_1A44697A0;
          v29 = &block_descriptor_0;
          v19 = _Block_copy(&aBlocka);
          _Block_copy(v12);
          swift_retain();
          swift_release();
          _os_activity_initiate((void *)a4, description, v9, v19);
          _Block_release(v19);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) == 0)
          {
LABEL_14:
            _Block_release(v12);
            return;
          }
          goto LABEL_27;
        }
LABEL_20:
        v21 = (a1 & 0x3F) << 8;
        v22 = (v21 | (a1 >> 6)) + 33217;
        v23 = (v21 | (a1 >> 6) & 0x3F) << 8;
        v24 = (((v23 | (a1 >> 12) & 0x3F) << 8) | (a1 >> 18)) - 2122219023;
        v25 = (v23 | (a1 >> 12)) + 8487393;
        if ((_DWORD)v11)
          v16 = v24;
        else
          v16 = v25;
        if (a1 < 0x800)
          v16 = v22;
        goto LABEL_12;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (!a4)
  {
    _Block_release(v10);
    return;
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1A446A6BC;
  *(_QWORD *)(v14 + 24) = v13;
  v30 = sub_1A446A6C0;
  v31 = v14;
  aBlocka = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = sub_1A44697A0;
  v29 = &block_descriptor_14;
  v15 = _Block_copy(&aBlocka);
  _Block_copy(v12);
  swift_retain();
  swift_release();
  _os_activity_initiate((void *)a4, a1, v9, v15);
  _Block_release(v15);
  a4 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  _Block_release(v12);
  if ((a4 & 1) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
}

uint64_t sub_1A4469F58()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A4469F7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1A4469F88()
{
  return swift_deallocObject();
}

uint64_t sub_1A4469F98()
{
  return swift_deallocObject();
}

void REM_os_activity.apply(execute:)(const void *a1)
{
  NSObject **v1;
  void *v2;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isEscapingClosureAtFileLocation;
  _QWORD v9[6];

  v2 = _Block_copy(a1);
  v3 = v2;
  v4 = *v1;
  if (*v1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_1A446A6BC;
    *(_QWORD *)(v6 + 24) = v5;
    v9[4] = sub_1A446A6C0;
    v9[5] = v6;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_1A44697A0;
    v9[3] = &block_descriptor_25;
    v7 = _Block_copy(v9);
    swift_retain();
    swift_release();
    os_activity_apply(v4, v7);
    _Block_release(v7);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  else
  {
    _Block_release(v2);
  }
}

uint64_t sub_1A446A0EC()
{
  return swift_deallocObject();
}

unint64_t static REM_os_activity.labelUserAction(_:dso:)@<X0>(unint64_t result@<X0>, char a2@<W2>, uint64_t a3@<X3>, unint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  _QWORD v12[3];

  if ((a2 & 1) != 0)
  {
    a4 = HIDWORD(result);
    if (!HIDWORD(result))
    {
      if (result >> 11 != 27)
      {
        LODWORD(a4) = WORD1(result);
        if (WORD1(result) > 0x10u)
        {
LABEL_16:
          __break(1u);
          goto LABEL_17;
        }
        if ((result & 0xFFFFFF80) != 0)
        {
LABEL_17:
          v7 = (result & 0x3F) << 8;
          v8 = (v7 | (result >> 6)) + 33217;
          v9 = (v7 | (result >> 6) & 0x3F) << 8;
          v10 = (((v9 | (result >> 12) & 0x3F) << 8) | (result >> 18)) - 2122219023;
          v11 = (v9 | (result >> 12)) + 8487393;
          if ((_DWORD)a4)
            v6 = v10;
          else
            v6 = v11;
          if (result < 0x800)
            v6 = v8;
          goto LABEL_11;
        }
        if (result <= 0xFF)
        {
          v6 = (result + 1);
LABEL_11:
          v12[1] = v4;
          v12[2] = v5;
          v12[0] = (v6 + 0xFEFEFEFEFEFEFFLL) & ~(-1 << ((32 - (__clz(v6) & 0x38)) & 0x38));
          if (a3)
            return MEMORY[0x1A859F8A4](a3, v12);
          return result;
        }
        __break(1u);
      }
      __break(1u);
      goto LABEL_25;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (a3)
LABEL_25:
    JUMPOUT(0x1A859F8A4);
  return result;
}

uint64_t REM_os_activity.Options.rawValue.getter()
{
  unsigned int *v0;

  return *v0;
}

uint64_t REM_os_activity.Options.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static REM_os_activity.Options.default.getter(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

void static REM_os_activity.Options.detached.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

_DWORD *sub_1A446A240@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1A446A24C(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1A446A254@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1A446A268@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_1A446A27C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A446A290(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1A446A2C0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_1A446A2EC@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_1A446A310(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_1A446A324(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

_DWORD *sub_1A446A338(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_1A446A34C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A446A360(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A446A374(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A446A388(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A446A39C()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_1A446A3AC(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

_DWORD *sub_1A446A3C0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1A446A3D0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

BOOL sub_1A446A3DC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void __swiftcall REM_os_activity.Scope.init()(ReminderKitInternal::REM_os_activity::Scope *__return_ptr retstr)
{
  retstr->state.opaque[0] = 0;
  retstr->state.opaque[1] = 0;
}

void REM_os_activity.Scope.enter(_:)(NSObject **a1)
{
  os_activity_scope_state_s *v1;
  NSObject *v2;

  v2 = *a1;
  if (v2)
    os_activity_scope_enter(v2, v1);
}

Swift::Void __swiftcall REM_os_activity.Scope.leave()()
{
  os_activity_scope_state_s *v0;

  os_activity_scope_leave(v0);
}

unint64_t sub_1A446A41C()
{
  unint64_t result;

  result = qword_1EE71D150;
  if (!qword_1EE71D150)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REM_os_activity.Options, &type metadata for REM_os_activity.Options);
    atomic_store(result, (unint64_t *)&qword_1EE71D150);
  }
  return result;
}

unint64_t sub_1A446A464()
{
  unint64_t result;

  result = qword_1EE71D158;
  if (!qword_1EE71D158)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REM_os_activity.Options, &type metadata for REM_os_activity.Options);
    atomic_store(result, (unint64_t *)&qword_1EE71D158);
  }
  return result;
}

unint64_t sub_1A446A4AC()
{
  unint64_t result;

  result = qword_1ED241880;
  if (!qword_1ED241880)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REM_os_activity.Options, &type metadata for REM_os_activity.Options);
    atomic_store(result, (unint64_t *)&qword_1ED241880);
  }
  return result;
}

unint64_t sub_1A446A4F4()
{
  unint64_t result;

  result = qword_1ED241918;
  if (!qword_1ED241918)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REM_os_activity.Options, &type metadata for REM_os_activity.Options);
    atomic_store(result, (unint64_t *)&qword_1ED241918);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for REM_os_activity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t destroy for REM_os_activity()
{
  return swift_unknownObjectRelease();
}

_QWORD *assignWithCopy for REM_os_activity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for REM_os_activity(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REM_os_activity(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REM_os_activity(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for REM_os_activity()
{
  return &type metadata for REM_os_activity;
}

ValueMetadata *type metadata accessor for REM_os_activity.Options()
{
  return &type metadata for REM_os_activity.Options;
}

ValueMetadata *type metadata accessor for REM_os_activity.Scope()
{
  return &type metadata for REM_os_activity.Scope;
}

uint64_t sub_1A446A6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71D160);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71D160);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t throwingCast<A>(_:as:failureMessage:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[32];
  void (*v21)(char *, char *, uint64_t);

  v21 = a4;
  v19 = a3;
  v10 = sub_1A46911A0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - v12;
  sub_1A44311F0(a1, (uint64_t)v20);
  v14 = swift_dynamicCast();
  v15 = *(_QWORD *)(a5 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if ((v14 & 1) != 0)
  {
    v16(v13, 0, 1, a5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a6, v13, a5);
  }
  else
  {
    v16(v13, 1, 1, a5);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1A44311F0(a1, (uint64_t)v20);
    sub_1A446A8D4((uint64_t)v20, a2, v19, v21);
    sub_1A445404C((uint64_t)v20, &qword_1ED243E68);
    return swift_willThrow();
  }
}

{
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];

  sub_1A444ABF4(a1, (uint64_t)&v13, &qword_1ED243E68);
  if (v14)
  {
    sub_1A444A940(&v13, v15);
    throwingCast<A>(_:as:failureMessage:)((uint64_t)v15, a2, 0, 0, a5, a6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1A445404C((uint64_t)&v13, &qword_1ED243E68);
    sub_1A446A8D4(a1, a2, a3, a4);
    return swift_willThrow();
  }
}

id sub_1A446A8D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, char *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  NSObject *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  NSObject *v49;
  int v50;
  _BOOL4 v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  void (*v62)(char *, uint64_t);
  unint64_t v63;
  uint64_t v64;
  char *v65;
  void *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  char *v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  void *v78;
  id v79;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  char v92[32];
  _OWORD v93[2];
  __int128 v94;
  uint64_t MetatypeMetadata;

  v91 = a4;
  v88 = a3;
  v6 = sub_1A4691CEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v83 = (void (*)(char *, char *, uint64_t))((char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v8);
  v85 = (char *)&v81 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v86 = (char *)&v81 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v87 = (char *)&v81 - v15;
  MEMORY[0x1E0C80A78](v14);
  v90 = (char *)&v81 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D178);
  v18 = MEMORY[0x1E0C80A78](v17);
  v82 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v81 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v81 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v84 = (uint64_t)&v81 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v81 - v29;
  v31 = MEMORY[0x1E0C80A78](v28);
  v33 = (char *)&v81 - v32;
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v81 - v34;
  sub_1A444ABF4(a1, (uint64_t)&v94, &qword_1ED243E68);
  if (MetatypeMetadata)
  {
    sub_1A444A940(&v94, v93);
    sub_1A44311F0((uint64_t)v93, (uint64_t)v92);
    sub_1A4691CD4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v35, 0, 1, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v35, 1, 1, v6);
  }
  v89 = 7104878;
  MetatypeMetadata = swift_getMetatypeMetadata();
  *(_QWORD *)&v94 = a2;
  v36 = v90;
  sub_1A4691CD4();
  if (v91)
  {
    if (qword_1EE71BFF0 != -1)
      swift_once();
    v37 = sub_1A4690318();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EE71D160);
    sub_1A444ABF4((uint64_t)v35, (uint64_t)v33, &qword_1EE71D178);
    v38 = v87;
    v39 = v36;
    v83 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v83(v87, v36, v6);
    swift_bridgeObjectRetain_n();
    v40 = sub_1A469030C();
    v41 = sub_1A4690FFC();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      LODWORD(v82) = v41;
      v81 = v35;
      v42 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      *(_QWORD *)&v94 = v43;
      *(_DWORD *)v42 = 136315650;
      sub_1A444ABF4((uint64_t)v33, (uint64_t)v30, &qword_1EE71D178);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v30, 1, v6) == 1)
      {
        v44 = 0xE300000000000000;
        v45 = 7104878;
      }
      else
      {
        v57 = v86;
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v86, v30, v6);
        v83(v85, v57, v6);
        v45 = sub_1A46908E8();
        v44 = v58;
        (*(void (**)(char *, uint64_t))(v7 + 8))(v57, v6);
      }
      v59 = v87;
      *(_QWORD *)&v93[0] = sub_1A4431120(v45, v44, (uint64_t *)&v94);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v33, &qword_1EE71D178);
      *(_WORD *)(v42 + 12) = 2080;
      v60 = sub_1A4691CE0();
      *(_QWORD *)&v93[0] = sub_1A4431120(v60, v61, (uint64_t *)&v94);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v62 = *(void (**)(char *, uint64_t))(v7 + 8);
      v62(v59, v6);
      *(_WORD *)(v42 + 22) = 2080;
      v63 = (unint64_t)v91;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v93[0] = sub_1A4431120(v88, v63, (uint64_t *)&v94);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      v56 = v62;
      _os_log_impl(&dword_1A442D000, v40, (os_log_type_t)v82, "Failed cast {given: %s, expect: %s, message: \"%s}\"", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v43, -1, -1);
      MEMORY[0x1A85A0114](v42, -1, -1);

      v36 = v90;
      v35 = v81;
    }
    else
    {
      sub_1A445404C((uint64_t)v33, &qword_1EE71D178);
      v55 = v38;
      v56 = *(void (**)(char *, uint64_t))(v7 + 8);
      v56(v55, v6);

      swift_bridgeObjectRelease_n();
      v36 = v39;
    }
    *(_QWORD *)&v94 = 0;
    *((_QWORD *)&v94 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v94 = 0xD000000000000014;
    *((_QWORD *)&v94 + 1) = 0x80000001A46BD730;
    v64 = v84;
    sub_1A444ABF4((uint64_t)v35, v84, &qword_1EE71D178);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v64, 1, v6) != 1)
    {
      v65 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v86, v64, v6);
      v83(v85, v65, v6);
      v89 = sub_1A46908E8();
      v56(v65, v6);
    }
    v66 = (void *)objc_opt_self();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691CE0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4690984();
  }
  else
  {
    if (qword_1EE71BFF0 != -1)
      swift_once();
    v46 = sub_1A4690318();
    __swift_project_value_buffer(v46, (uint64_t)qword_1EE71D160);
    sub_1A444ABF4((uint64_t)v35, (uint64_t)v25, &qword_1EE71D178);
    v47 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v48 = (char *)v83;
    v47((char *)v83, v36, v6);
    v49 = sub_1A469030C();
    v50 = sub_1A4690FFC();
    v51 = os_log_type_enabled(v49, (os_log_type_t)v50);
    v91 = v47;
    if (v51)
    {
      LODWORD(v88) = v50;
      v81 = v35;
      v52 = swift_slowAlloc();
      v87 = (char *)swift_slowAlloc();
      *(_QWORD *)&v94 = v87;
      *(_DWORD *)v52 = 136315394;
      sub_1A444ABF4((uint64_t)v25, (uint64_t)v22, &qword_1EE71D178);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v22, 1, v6) == 1)
      {
        v53 = 0xE300000000000000;
        v54 = 7104878;
      }
      else
      {
        v67 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v68 = v7;
        v69 = v86;
        v67(v86, v22, v6);
        v47(v85, v69, v6);
        v54 = sub_1A46908E8();
        v53 = v70;
        v71 = v69;
        v7 = v68;
        (*(void (**)(char *, uint64_t))(v68 + 8))(v71, v6);
      }
      *(_QWORD *)&v93[0] = sub_1A4431120(v54, v53, (uint64_t *)&v94);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v25, &qword_1EE71D178);
      *(_WORD *)(v52 + 12) = 2080;
      v72 = (char *)v83;
      v73 = sub_1A4691CE0();
      *(_QWORD *)&v93[0] = sub_1A4431120(v73, v74, (uint64_t *)&v94);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v56 = *(void (**)(char *, uint64_t))(v7 + 8);
      v56(v72, v6);
      _os_log_impl(&dword_1A442D000, v49, (os_log_type_t)v88, "Failed cast {given: %s, expect: %s}", (uint8_t *)v52, 0x16u);
      v75 = v87;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v75, -1, -1);
      MEMORY[0x1A85A0114](v52, -1, -1);

      v35 = v81;
      v36 = v90;
    }
    else
    {
      sub_1A445404C((uint64_t)v25, &qword_1EE71D178);
      v56 = *(void (**)(char *, uint64_t))(v7 + 8);
      v56(v48, v6);

    }
    *(_QWORD *)&v94 = 0;
    *((_QWORD *)&v94 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v94 = 0xD000000000000014;
    *((_QWORD *)&v94 + 1) = 0x80000001A46BD730;
    v76 = v82;
    sub_1A444ABF4((uint64_t)v35, v82, &qword_1EE71D178);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v76, 1, v6) != 1)
    {
      v77 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v86, v76, v6);
      v91(v85, v77, v6);
      v89 = sub_1A46908E8();
      v56(v77, v6);
    }
    v66 = (void *)objc_opt_self();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691CE0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  sub_1A4690984();
  v78 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v79 = objc_msgSend(v66, sel_internalErrorWithDebugDescription_, v78);

  v56(v36, v6);
  sub_1A445404C((uint64_t)v35, &qword_1EE71D178);
  return v79;
}

uint64_t sub_1A446B4F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED23F270);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23F270);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id ACAccountStore.MigrationSet.parent.getter()
{
  id *v0;

  return *v0;
}

id ACAccountStore.MigrationSet.calDAV.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id ACAccountStore.MigrationSet.cloudKit.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t ACAccountStore.MigrationSet.eligibleForAutoCloudKitMigration.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

Swift::Bool __swiftcall ACAccountStore.MigrationSet.contains(accountID:)(REMObjectID accountID)
{
  uint64_t v1;
  Class isa;
  void *v3;
  void *v4;
  void *v5;
  uint64_t inited;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  objc_class *v11;
  unsigned __int8 v12;
  unint64_t v14;

  isa = accountID.super.isa;
  v3 = *(void **)v1;
  v4 = *(void **)(v1 + 8);
  v5 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4696C10;
  *(_QWORD *)(inited + 32) = v3;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v5;
  v14 = inited;
  sub_1A4690BB8();
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = sub_1A446C7DC(v14);
  swift_bridgeObjectRelease();
  v11 = isa;
  v12 = sub_1A446C934(v10, v11);
  swift_bridgeObjectRelease();

  return v12 & 1;
}

uint64_t sub_1A446B668(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1A4690D8C();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1A4465F6C(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void ACAccountStore.rem_migrationSets()()
{
  void *v0;
  unint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  const char *v9;
  unint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  Class v32;
  unint64_t v33;
  uint32_t *p_ivar_base_size;
  id v35;
  void *v36;
  BOOL v37;
  id v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  char v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  char v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  void *v78;
  unint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  void *v101;
  id v102;
  unsigned __int8 v103;
  _QWORD *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  unint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  os_log_type_t v125;
  unint64_t v126;
  NSObject *v127;
  void *v128;
  uint64_t v129;
  id v130;
  int v131;
  unint64_t v132;
  void *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  os_log_type_t v138;
  unint64_t v139;
  uint8_t *v140;
  unint64_t v141;
  NSObject *log;
  os_log_t loga;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146[3];
  _QWORD *v147;

  v1 = MEMORY[0x1E0DEE9D8];
  v147 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v130 = objc_msgSend(v0, sel_accountTypeWithAccountTypeIdentifier_, *MEMORY[0x1E0C8F058]);
  v2 = objc_msgSend(v0, sel_accountsWithAccountType_);
  if (v2)
  {
    v3 = v2;
    v4 = sub_1A4690BA0();

    v5 = sub_1A446C630(v4);
    swift_bridgeObjectRelease();
    if (v5)
      v1 = v5;
  }
  if (qword_1ED2427C8 != -1)
LABEL_86:
    swift_once();
  v6 = sub_1A4690318();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED23F270);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A469030C();
  v8 = sub_1A4690FD8();
  v9 = "FirstBlockRunner";
  v10 = v1 >> 62;
  if (os_log_type_enabled(v7, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v146[0] = v12;
    v140 = v11;
    *(_DWORD *)v11 = 136315138;
    if (v10)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1A46916A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v14 = MEMORY[0x1E0DEE9D8];
    log = v7;
    v138 = v8;
    v136 = v12;
    if (v13)
    {
      v144 = MEMORY[0x1E0DEE9D8];
      sub_1A445A8BC(0, v13 & ~(v13 >> 63), 0);
      if (v13 < 0)
      {
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
        return;
      }
      v134 = v1 >> 62;
      v15 = v1;
      v16 = 0;
      v14 = v144;
      v17 = v15;
      v18 = v15 & 0xC000000000000001;
      do
      {
        if (v18)
          v19 = (id)MEMORY[0x1A859ECE0](v16, v17);
        else
          v19 = *(id *)(v17 + 8 * v16 + 32);
        v20 = v19;
        v21 = objc_msgSend(v19, sel_description);
        v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v24 = v23;

        v26 = *(_QWORD *)(v144 + 16);
        v25 = *(_QWORD *)(v144 + 24);
        if (v26 >= v25 >> 1)
          sub_1A445A8BC(v25 > 1, v26 + 1, 1);
        ++v16;
        *(_QWORD *)(v144 + 16) = v26 + 1;
        v27 = v144 + 16 * v26;
        *(_QWORD *)(v27 + 32) = v22;
        *(_QWORD *)(v27 + 40) = v24;
      }
      while (v13 != v16);
      v9 = "FirstBlockRunner";
      v10 = v134;
    }
    else
    {
      v17 = v1;
    }
    v28 = MEMORY[0x1A859E404](v14, MEMORY[0x1E0DEA968]);
    v30 = v29;
    swift_bridgeObjectRelease();
    sub_1A4431120(v28, v30, v146);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    v1 = v17;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, log, v138, "rem_migrationSets getting CalDAV accounts {calDavAccounts: %s}", v140, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v136, -1, -1);
    MEMORY[0x1A85A0114](v140, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v10)
  {
    swift_bridgeObjectRetain();
    v31 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v31)
      goto LABEL_23;
  }
  else
  {
    v31 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v31)
    {
LABEL_23:
      v32 = 0;
      v33 = v1 & 0xC000000000000001;
      loga = (os_log_t)(v1 & 0xFFFFFFFFFFFFFF8);
      v141 = v1 + 32;
      v133 = (void *)*MEMORY[0x1E0CFAAD8];
      p_ivar_base_size = &REMRemindersListDataView_TemplateInvocation__metaData.ivar_base_size;
      v129 = *MEMORY[0x1E0C8F070];
      v131 = *((_QWORD *)v9 + 230);
      v132 = v1;
      v135 = v1 & 0xC000000000000001;
      v137 = v31;
      while (1)
      {
        if (v33)
        {
          v35 = (id)MEMORY[0x1A859ECE0](v32, v1);
        }
        else
        {
          if (v32 >= loga[2].isa)
            goto LABEL_85;
          v35 = *(id *)(v141 + 8 * (_QWORD)v32);
        }
        v36 = v35;
        v37 = __OFADD__(v32, 1);
        v32 = (Class)((char *)v32 + 1);
        if (v37)
        {
          __break(1u);
LABEL_85:
          __break(1u);
          goto LABEL_86;
        }
        v38 = objc_msgSend(v35, *((SEL *)p_ivar_base_size + 367));
        if (!v38)
          goto LABEL_25;
        v39 = v38;
        if ((objc_msgSend(v38, sel_rem_isEligibleForCloudKitReminders) & 1) == 0)
          break;
        ACAccount.rem_childCalDAVAccountEnabledForReminders.getter();
        v41 = v40;
        v42 = objc_msgSend(v40, sel_identifier);

        v43 = objc_msgSend(v36, sel_identifier);
        v44 = v43;
        if (v42)
        {
          if (!v43)
          {

            goto LABEL_26;
          }
          sub_1A444AA40(0, (unint64_t *)&qword_1EE71D180);
          v45 = v42;
          v33 = v135;
          v31 = v137;
          v46 = sub_1A4691140();

          p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
          if ((v46 & 1) == 0)
          {

            goto LABEL_26;
          }
        }
        else if (v43)
        {

          goto LABEL_26;
        }
        v47 = objc_msgSend(v39, sel_aa_accountClass);
        if (v47)
        {
          v48 = v47;
          v49 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v51 = v50;
          if (v49 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v51 == v52)
          {
            v53 = v133;

            swift_bridgeObjectRelease_n();
LABEL_46:
            v56 = v39;
            v57 = sub_1A469030C();
            v58 = sub_1A4690FD8();
            if (os_log_type_enabled(v57, v58))
            {
              v59 = swift_slowAlloc();
              v60 = swift_slowAlloc();
              v146[0] = v60;
              *(_DWORD *)v59 = v131;
              v61 = objc_msgSend(v56, sel_description);
              v62 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              v64 = v63;

              *(_QWORD *)(v59 + 4) = sub_1A4431120(v62, v64, v146);
              swift_bridgeObjectRelease();
              swift_arrayDestroy();
              v65 = v60;
              v1 = v132;
              MEMORY[0x1A85A0114](v65, -1, -1);
              MEMORY[0x1A85A0114](v59, -1, -1);

            }
            else
            {

            }
LABEL_79:
            v33 = v135;
            v31 = v137;
            p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
            goto LABEL_26;
          }
          v54 = sub_1A4691A40();
          v55 = v133;

          v1 = v132;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v54 & 1) != 0)
            goto LABEL_46;
        }
        v66 = v39;
        v67 = sub_1A469030C();
        v68 = sub_1A4690FD8();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = swift_slowAlloc();
          v70 = swift_slowAlloc();
          v146[0] = v70;
          *(_DWORD *)v69 = v131;
          v71 = objc_msgSend(v66, sel_description);
          v72 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v74 = v73;

          v75 = v72;
          v1 = v132;
          *(_QWORD *)(v69 + 4) = sub_1A4431120(v75, v74, v146);

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A442D000, v67, v68, "rem_migrationSets exploring AppleAccount {displayAccount: %s}", (uint8_t *)v69, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v70, -1, -1);
          MEMORY[0x1A85A0114](v69, -1, -1);

        }
        else
        {

        }
        v76 = objc_msgSend(v66, sel_childAccountsWithAccountTypeIdentifier_, v129);
        v77 = v66;
        v33 = v135;
        v31 = v137;
        p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
        if (v76)
        {
          v78 = v76;
          v128 = v77;
          sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
          v79 = sub_1A4690BA0();

          swift_bridgeObjectRetain_n();
          v80 = sub_1A469030C();
          v81 = sub_1A4690FD8();
          v82 = v79 >> 62;
          if (os_log_type_enabled(v80, v81))
          {
            v83 = swift_slowAlloc();
            v124 = swift_slowAlloc();
            v146[0] = v124;
            *(_DWORD *)v83 = v131;
            v126 = v79 >> 62;
            v127 = v80;
            if (v82)
            {
              swift_bridgeObjectRetain();
              v84 = sub_1A46916A4();
              swift_bridgeObjectRelease();
            }
            else
            {
              v84 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
            }
            v85 = MEMORY[0x1E0DEE9D8];
            v125 = v81;
            if (v84)
            {
              v123 = v83;
              v145 = MEMORY[0x1E0DEE9D8];
              sub_1A445A8BC(0, v84 & ~(v84 >> 63), 0);
              if (v84 < 0)
                goto LABEL_94;
              v86 = 0;
              v85 = v145;
              v139 = v79 & 0xC000000000000001;
              v87 = v79;
              v88 = v84;
              do
              {
                if (v139)
                  v89 = (id)MEMORY[0x1A859ECE0](v86, v79);
                else
                  v89 = *(id *)(v79 + 8 * v86 + 32);
                v90 = v89;
                v91 = objc_msgSend(v89, sel_description);
                v92 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                v94 = v93;

                v96 = *(_QWORD *)(v145 + 16);
                v95 = *(_QWORD *)(v145 + 24);
                if (v96 >= v95 >> 1)
                  sub_1A445A8BC(v95 > 1, v96 + 1, 1);
                ++v86;
                *(_QWORD *)(v145 + 16) = v96 + 1;
                v97 = v145 + 16 * v96;
                *(_QWORD *)(v97 + 32) = v92;
                *(_QWORD *)(v97 + 40) = v94;
                v79 = v87;
              }
              while (v88 != v86);
              v1 = v132;
              v33 = v135;
              v31 = v137;
              v83 = v123;
            }
            v98 = MEMORY[0x1A859E404](v85, MEMORY[0x1E0DEA968]);
            v100 = v99;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v83 + 4) = sub_1A4431120(v98, v100, v146);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1A442D000, v127, v125, "rem_migrationSets adding the first CloudKit type child account {ckAccounts: %s}", (uint8_t *)v83, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1A85A0114](v124, -1, -1);
            MEMORY[0x1A85A0114](v83, -1, -1);

            p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
            v82 = v126;
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          if (v82)
          {
            swift_bridgeObjectRetain();
            v114 = sub_1A46916A4();
            swift_bridgeObjectRelease();
            if (!v114)
            {
LABEL_81:

              swift_bridgeObjectRelease();
              goto LABEL_26;
            }
          }
          else if (!*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            goto LABEL_81;
          }
          if ((v79 & 0xC000000000000001) != 0)
          {
            v102 = (id)MEMORY[0x1A859ECE0](0, v79);
            v101 = v128;
          }
          else
          {
            v101 = v128;
            if (!*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_93;
            }
            v102 = *(id *)(v79 + 32);
          }
          swift_bridgeObjectRelease();
          v103 = objc_msgSend(v101, sel_rem_eligibleForAutoCloudKitMigration);
          v104 = v147;
          v105 = v101;
          v106 = v36;
          v107 = v102;
          v108 = v105;
          v109 = v106;
          v110 = v107;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v104 = sub_1A44391B8(0, v104[2] + 1, 1, v104);
          v112 = v104[2];
          v111 = v104[3];
          if (v112 >= v111 >> 1)
            v104 = sub_1A44391B8((_QWORD *)(v111 > 1), v112 + 1, 1, v104);
          v104[2] = v112 + 1;
          v113 = &v104[4 * v112];
          v113[4] = v108;
          v113[5] = v109;
          v113[6] = v110;
          *((_BYTE *)v113 + 56) = v103;

          v147 = v104;
          v1 = v132;
          goto LABEL_79;
        }

LABEL_26:
        if (v32 == (Class)v31)
          goto LABEL_88;
      }

LABEL_25:
      goto LABEL_26;
    }
  }
LABEL_88:
  swift_bridgeObjectRelease();
  v115 = sub_1A469030C();
  v116 = sub_1A4691008();
  if (os_log_type_enabled(v115, v116))
  {
    v117 = (uint8_t *)swift_slowAlloc();
    v118 = swift_slowAlloc();
    v146[0] = v118;
    *(_DWORD *)v117 = 136446210;
    swift_beginAccess();
    v119 = swift_bridgeObjectRetain();
    v120 = MEMORY[0x1A859E404](v119, &type metadata for ACAccountStore.MigrationSet);
    v122 = v121;
    swift_bridgeObjectRelease();
    sub_1A4431120(v120, v122, v146);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v115, v116, "rem_migrationSets result {result: %{public}s}", v117, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v118, -1, -1);
    MEMORY[0x1A85A0114](v117, -1, -1);
  }

  swift_beginAccess();
}

uint64_t sub_1A446C630(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_1A469153C();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1A44311F0(i, (uint64_t)v5);
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
    if (!swift_dynamicCast())
      break;
    sub_1A4691518();
    sub_1A4691548();
    sub_1A4691554();
    sub_1A4691524();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

uint64_t sub_1A446C748(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1A4690D8C();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A4465F6C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A446C7DC(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
  sub_1A446D1A8();
  result = sub_1A4690D8C();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1A46916A4();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1A859ECE0](i, a1);
        sub_1A44661B8(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1A44661B8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

id sub_1A446C934(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[4];
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void *v48;

  v41 = a2;
  v3 = sub_1A46900FC();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A46912D8();
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
    sub_1A446D1A8();
    result = (id)sub_1A4690DB0();
    a1 = v43;
    v35 = v44;
    v6 = v45;
    v7 = v46;
    v8 = v47;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 56);
    v35 = a1 + 56;
    v6 = ~v9;
    v11 = -v9;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v8 = v12 & v10;
    result = (id)swift_bridgeObjectRetain();
    v7 = 0;
  }
  v33[0] = v6;
  v33[3] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v34 = (unint64_t)(v6 + 64) >> 6;
  v33[2] = MEMORY[0x1E0DEE9B0] + 8;
  while (1)
  {
    v14 = v8;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v18 = sub_1A4691338();
    v19 = v18;
    if (!v18)
      goto LABEL_38;
    v42 = v18;
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2421C8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v20 = v48;
    swift_unknownObjectRelease();
    v17 = v7;
    if (!v20)
      goto LABEL_37;
LABEL_32:
    v36 = v7;
    v37 = v14;
    result = objc_msgSend(v20, sel_identifier, v33[0]);
    if (!result)
      goto LABEL_40;
    v24 = result;
    v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v27 = v26;

    v28 = objc_msgSend(v41, sel_uuid);
    v29 = v38;
    sub_1A46900F0();

    v30 = sub_1A46900CC();
    v32 = v31;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v40);
    if (v25 == v30 && v27 == v32)
    {

      swift_bridgeObjectRelease_n();
LABEL_36:
      v19 = 1;
      goto LABEL_38;
    }
    v13 = sub_1A4691A40();

    swift_bridgeObjectRelease();
    result = (id)swift_bridgeObjectRelease();
    v7 = v17;
    if ((v13 & 1) != 0)
      goto LABEL_36;
  }
  if (v8)
  {
    v15 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v16 = v15 | (v7 << 6);
    v17 = v7;
LABEL_31:
    v20 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v16);
    if (!v20)
      goto LABEL_37;
    goto LABEL_32;
  }
  v21 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v21 >= v34)
      goto LABEL_37;
    v22 = *(_QWORD *)(v35 + 8 * v21);
    v17 = v7 + 1;
    if (!v22)
    {
      v17 = v7 + 2;
      if (v7 + 2 >= v34)
        goto LABEL_37;
      v22 = *(_QWORD *)(v35 + 8 * v17);
      if (!v22)
      {
        v17 = v7 + 3;
        if (v7 + 3 >= v34)
          goto LABEL_37;
        v22 = *(_QWORD *)(v35 + 8 * v17);
        if (!v22)
        {
          v17 = v7 + 4;
          if (v7 + 4 >= v34)
            goto LABEL_37;
          v22 = *(_QWORD *)(v35 + 8 * v17);
          if (!v22)
          {
            v17 = v7 + 5;
            if (v7 + 5 >= v34)
              goto LABEL_37;
            v22 = *(_QWORD *)(v35 + 8 * v17);
            if (!v22)
            {
              v23 = v7 + 6;
              while (v34 != v23)
              {
                v22 = *(_QWORD *)(v35 + 8 * v23++);
                if (v22)
                {
                  v17 = v23 - 1;
                  goto LABEL_30;
                }
              }
LABEL_37:
              v19 = 0;
LABEL_38:
              sub_1A4460EDC();
              return (id)v19;
            }
          }
        }
      }
    }
LABEL_30:
    v8 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v17 << 6);
    goto LABEL_31;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

void _s12MigrationSetVwxx(id *a1)
{

}

uint64_t _s12MigrationSetVwcp(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

uint64_t _s12MigrationSetVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s12MigrationSetVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t _s12MigrationSetVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s12MigrationSetVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ACAccountStore.MigrationSet()
{
  return &type metadata for ACAccountStore.MigrationSet;
}

uint64_t sub_1A446CF04(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for REMObjectID_Codable();
  sub_1A4436344((unint64_t *)&qword_1EE71D198, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, MEMORY[0x1E0DEFCF8]);
  result = sub_1A4690D8C();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1A46916A4();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1A859ECE0](i, a1);
        sub_1A44667A8(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1A44667A8(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A446D064(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for REMReminderPriorityLevel(0);
  sub_1A4436344(&qword_1EE71D190, (uint64_t (*)(uint64_t))type metadata accessor for REMReminderPriorityLevel, (uint64_t)&unk_1A4694E10);
  result = sub_1A4690D8C();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A4466A24(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1A446D0F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1A446D164();
  result = sub_1A4690D8C();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1A4466B40(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1A446D164()
{
  unint64_t result;

  result = qword_1EE71D188;
  if (!qword_1EE71D188)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMCustomSmartListFilterDescriptor.PostFetchPredicateType, &type metadata for REMCustomSmartListFilterDescriptor.PostFetchPredicateType);
    atomic_store(result, (unint64_t *)&qword_1EE71D188);
  }
  return result;
}

unint64_t sub_1A446D1A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2421D0;
  if (!qword_1ED2421D0)
  {
    v1 = sub_1A444AA40(255, (unint64_t *)&qword_1ED2421C8);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2421D0);
  }
  return result;
}

uint64_t sub_1A446D200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t TupleTypeMetadata3;
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v9 = *(_QWORD *)v5;
  v8 = *((_QWORD *)v5 + 1);
  v10 = v5[16];
  v13 = type metadata accessor for SortedPatchElement(255, *(_QWORD *)(a1 + 16), v11, v12);
  if (EnumCaseMultiPayload == 1)
  {
    v14 = &v5[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v10;
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v14, v13);
  }
  else
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v17 = &v5[*(int *)(TupleTypeMetadata3 + 48)];
    v18 = &v5[*(int *)(TupleTypeMetadata3 + 64)];
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = v10;
    v19 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v19(v18, v13);
    return ((uint64_t (*)(char *, uint64_t))v19)(v17, v13);
  }
}

void static ExtendedPatch<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t TupleTypeMetadata2;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  _QWORD v32[12];
  uint64_t v33;
  uint64_t v34;

  v32[4] = a4;
  v33 = a1;
  v34 = a2;
  v32[11] = *(_QWORD *)(a3 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v32[6] = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v32[5] = (char *)v32 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v32[7] = (char *)v32 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v32[2] = (char *)v32 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v32[3] = (char *)v32 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v32[8] = (char *)v32 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v32[0] = (char *)v32 - v17;
  MEMORY[0x1E0C80A78](v16);
  v32[1] = (char *)v32 - v18;
  v21 = type metadata accessor for ExtendedPatch(0, v19, v19, v20);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v24 = MEMORY[0x1E0C80A78](v23);
  v25 = MEMORY[0x1E0C80A78](v24);
  MEMORY[0x1E0C80A78](v25);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v32[10] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v27 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v29 = (char *)v32 + *(int *)(v27 + 48) - v28;
  v32[9] = v22;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v30((char *)v32 - v28, v33, v21);
  v30(v29, v34, v21);
  v31 = (char *)sub_1A446D5B0 + 4 * byte_1A4696C50[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A446D5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  void (*v6)(char *, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  void (*v20)(uint64_t, uint64_t);

  v6(v4, v2, v0);
  v8 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  v9 = &v4[v8];
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 104) + 8))(&v4[v8], v1);
    v10 = 0;
    v11 = *(_QWORD *)(v7 - 112);
    v0 = v3;
  }
  else
  {
    v12 = *(_QWORD *)v4;
    v13 = *v5;
    v14 = (char *)v5 + v8;
    v15 = *(_QWORD *)(v7 - 104);
    v16 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    v17 = *(_QWORD *)(v7 - 184);
    v16(v17, v9, v1);
    v18 = *(_QWORD *)(v7 - 192);
    v16(v18, v14, v1);
    if (v12 == v13)
    {
      v10 = sub_1A4690864();
      v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v19(v18, v1);
      v19(v17, v1);
    }
    else
    {
      v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v20(v18, v1);
      v20(v17, v1);
      v10 = 0;
    }
    v11 = *(_QWORD *)(v7 - 120);
  }
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v2, v0);
  return v10 & 1;
}

uint64_t type metadata accessor for ExtendedPatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExtendedPatch);
}

void sub_1A446DA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  static ExtendedPatch<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t extendedPatch<A>(from:to:sort:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v15;

  Collection<>.extendedDiff(_:)(a2, a5, a6, a7, &v15);
  v11 = ExtendedDiff.patch<A>(from:to:sort:)(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t ExtendedDiff.patch<A>(from:to:sort:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int128 *v6;
  __int128 v11;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[3];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v11 = v6[1];
  v36 = *v6;
  v37 = v11;
  v38 = v6[2];
  if (a3)
  {
    swift_retain();
    v14 = sub_1A446DD4C(a1, a2, a3, a4, a5, a6);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    sub_1A45D6B1C(v14, AssociatedTypeWitness, v16, v17);
    sub_1A443A6F8(a3);
  }
  else
  {
    v18 = sub_1A446DFC0(a1, a2, a5, a6);
    v19 = swift_getAssociatedTypeWitness();
    sub_1A45D6B1C(v18, v19, v20, v21);
  }
  swift_bridgeObjectRelease();
  v22 = swift_getAssociatedTypeWitness();
  type metadata accessor for SortedPatchElement(255, v22, v23, v24);
  v25 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF48], v25);
  v26 = MEMORY[0x1E0DEB458];
  v27 = sub_1A4690E28();
  v34 = v35;
  MEMORY[0x1E0C80A78](v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  type metadata accessor for ExtendedPatch(0, v22, v29, v30);
  v33[0] = v26;
  v33[1] = sub_1A446E8D8();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8A0], v28, v33);
  v31 = sub_1A4690A98();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1A446DD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __int128 *v6;
  __int128 v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[2];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;

  v11 = v6[1];
  v45 = *v6;
  v46 = v11;
  v47 = v6[2];
  sub_1A446E91C(a1, a2, a5, a6);
  v39 = a5;
  v40 = a6;
  v41 = a3;
  v42 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for BoxedDiffAndPatchElement(255, AssociatedTypeWitness, v13, v14);
  v15 = sub_1A4690C78();
  v16 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v15);
  v17 = sub_1A4690AEC();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v45 = v17;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = AssociatedTypeWitness;
  v35 = a5;
  v36 = a6;
  v37 = sub_1A4470920;
  v38 = v18;
  v21 = (char *)type metadata accessor for SortedPatchElement(255, AssociatedTypeWitness, v19, v20);
  v22 = sub_1A4690C78();
  MEMORY[0x1A85A0000](v16, v22);
  v23 = sub_1A4690AF8();
  swift_release();
  swift_bridgeObjectRelease();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF48], v22);
  v24 = MEMORY[0x1E0DEB458];
  sub_1A4690E28();
  v44 = v45;
  v32 = a5;
  v33 = a6;
  v34 = v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  v43[0] = v24;
  v43[1] = sub_1A446E8D8();
  v26 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8C0], v25, v43);
  v28 = sub_1A449F0A4((void (*)(char *, char *))sub_1A4470954, (uint64_t)v31, v25, v21, MEMORY[0x1E0DEDCE8], v26, MEMORY[0x1E0DEDD18], v27);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v45 = v28;
  v29 = sub_1A4690AEC();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1A446DFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD *v4;
  __int128 v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[7];
  _QWORD v23[3];
  __int128 v24;
  __int128 v25;
  _OWORD v26[3];

  v7 = v4[1];
  v26[0] = *v4;
  v26[1] = v7;
  v26[2] = v4[2];
  v25 = v26[0];
  v8 = Diff.patch<A>(from:to:)(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for Patch(255, AssociatedTypeWitness, v10, v11);
  v12 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF48], v12);
  v13 = MEMORY[0x1E0DEB458];
  sub_1A4690E28();
  v24 = v26[0];
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = v8;
  v22[5] = v26;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  v17 = (char *)type metadata accessor for SortedPatchElement(0, AssociatedTypeWitness, v15, v16);
  v23[0] = v13;
  v23[1] = sub_1A446E8D8();
  v18 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8C0], v14, v23);
  v20 = sub_1A449F0A4((void (*)(char *, char *))sub_1A4470A74, (uint64_t)v22, v14, v17, MEMORY[0x1E0DEDCE8], v18, MEMORY[0x1E0DEDD18], v19);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1A446E12C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t *, char *, uint64_t);
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t (*v60)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t TupleTypeMetadata2;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t TupleTypeMetadata3;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;

  v102 = a2;
  v101 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v98 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v96 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v95 = (char *)&v92 - v7;
  v10 = type metadata accessor for Patch(0, AssociatedTypeWitness, v8, v9);
  v103 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v94 = (char *)&v92 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v93 = (char *)&v92 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (uint64_t *)((char *)&v92 - v19);
  MEMORY[0x1E0C80A78](v18);
  v97 = (char *)&v92 - v21;
  v100 = AssociatedTypeWitness;
  v24 = type metadata accessor for SortedPatchElement(0, AssociatedTypeWitness, v22, v23);
  v99 = *(_QWORD *)(v24 - 8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v92 - v28;
  v30 = *a1;
  sub_1A4690CA8();
  v31 = *(uint64_t **)(v102 + 40);
  if (!sub_1A4462478(*(_QWORD *)&v29[*(int *)(v24 + 28)], (uint64_t)v31))
  {
    if (v30 >= 1)
    {
      sub_1A4690CA8();
      v50 = *(_QWORD *)&v27[*(int *)(v24 + 28)];
      v51 = *(void (**)(char *, uint64_t))(v99 + 8);
      v51(v27, v24);
      if (sub_1A4462478(v50, (uint64_t)v31))
      {
        v51(v29, v24);
        v54 = type metadata accessor for ExtendedPatch(0, v100, v52, v53);
        return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v101, 1, 1, v54);
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v13, v29, v10);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      v37 = v100;
      if (EnumCaseMultiPayload != 1)
      {
        v74 = *(_QWORD *)v13;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        v87 = *(int *)(TupleTypeMetadata3 + 48);
        v88 = &v13[v87];
        v89 = &v13[*(int *)(TupleTypeMetadata3 + 64)];
        v45 = v101;
        v77 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
        v77((char *)v101 + v87, v88, v37);
        v78 = (char *)v45 + *(int *)(TupleTypeMetadata3 + 64);
        v79 = v89;
        goto LABEL_18;
      }
      v59 = v101;
      *v101 = *(_QWORD *)v13;
      v49 = type metadata accessor for ExtendedPatch(0, v37, v57, v58);
      swift_storeEnumTagMultiPayload();
      v60 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
      v61 = v59;
    }
    else
    {
      v80 = *(_QWORD *)v13;
      v81 = v100;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      v83 = v101;
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))((char *)v101 + *(int *)(TupleTypeMetadata2 + 48), &v13[*(int *)(TupleTypeMetadata2 + 48)], v81);
      *v83 = v80;
      v49 = type metadata accessor for ExtendedPatch(0, v81, v84, v85);
      swift_storeEnumTagMultiPayload();
      v60 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
      v61 = v83;
    }
    return v60(v61, 0, 1, v49);
  }
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_22;
  }
  sub_1A4690CA8();
  v33 = v103;
  v34 = v97;
  (*(void (**)(char *, char *, uint64_t))(v103 + 32))(v97, v27, v10);
  v35 = *(void (**)(uint64_t *, char *, uint64_t))(v33 + 16);
  v35(v20, v29, v10);
  v36 = swift_getEnumCaseMultiPayload();
  if (!v36)
  {
    v102 = *v20;
    v62 = v100;
    v63 = (char *)v20 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    v64 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
    v65 = v96;
    v64(v96, v63, v62);
    v31 = (uint64_t *)v94;
    v35((uint64_t *)v94, v34, v10);
    v66 = swift_getEnumCaseMultiPayload();
    v32 = *(void (**)(char *, uint64_t))(v103 + 8);
    if (v66 != 1)
      goto LABEL_22;
    v32(v34, v10);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v29, v24);
    v67 = *v31;
    v68 = swift_getTupleTypeMetadata3();
    v69 = v101;
    v70 = (char *)v101 + *(int *)(v68 + 64);
    v71 = v102;
    *v101 = v67;
    v69[1] = v71;
    v64(v70, v65, v62);
    v49 = type metadata accessor for ExtendedPatch(0, v62, v72, v73);
    swift_storeEnumTagMultiPayload();
    v60 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
    v61 = v69;
    return v60(v61, 0, 1, v49);
  }
  v37 = v100;
  if (v36 != 1)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v10);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v29, v24);
    v74 = *v20;
    v75 = swift_getTupleTypeMetadata3();
    v76 = (char *)v20 + *(int *)(v75 + 64);
    v45 = v101;
    v77 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
    v77((char *)v101 + *(int *)(v75 + 48), (char *)v20 + *(int *)(v75 + 48), v37);
    v78 = (char *)v45 + *(int *)(v75 + 64);
    v79 = v76;
LABEL_18:
    v77(v78, v79, v37);
    *v45 = v74;
    v49 = type metadata accessor for ExtendedPatch(0, v37, v90, v91);
    goto LABEL_19;
  }
  v38 = *v20;
  v31 = (uint64_t *)v93;
  v35((uint64_t *)v93, v34, v10);
  v39 = swift_getEnumCaseMultiPayload();
  v32 = *(void (**)(char *, uint64_t))(v33 + 8);
  if (!v39)
  {
    v32(v34, v10);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v29, v24);
    v40 = *v31;
    v41 = swift_getTupleTypeMetadata2();
    v42 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
    v43 = v95;
    v42(v95, (char *)v31 + *(int *)(v41 + 48), v37);
    v44 = swift_getTupleTypeMetadata3();
    v45 = v101;
    v46 = (char *)v101 + *(int *)(v44 + 64);
    *v101 = v38;
    v45[1] = v40;
    v42(v46, v43, v37);
    v49 = type metadata accessor for ExtendedPatch(0, v37, v47, v48);
LABEL_19:
    swift_storeEnumTagMultiPayload();
    v60 = *(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56);
    v61 = v45;
    return v60(v61, 0, 1, v49);
  }
LABEL_22:
  v32((char *)v31, v10);
  result = sub_1A4691638();
  __break(1u);
  return result;
}

uint64_t sub_1A446E8BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A446E12C(a1, *(_QWORD *)(v2 + 40), a2);
}

unint64_t sub_1A446E8D8()
{
  unint64_t result;

  result = qword_1ED242188;
  if (!qword_1ED242188)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB440], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED242188);
  }
  return result;
}

uint64_t sub_1A446E91C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _OWORD *v4;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[11];
  uint64_t v20;
  _OWORD v21[2];
  __int128 v22;

  v7 = v4[1];
  v21[0] = *v4;
  v21[1] = v7;
  v22 = v4[2];
  v8 = sub_1A446DFC0(a1, a2, a3, a4);
  v9 = *(_QWORD *)(v22 + 16);
  v19[9] = 0;
  v19[10] = v9;
  v20 = 0;
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = v21;
  v19[5] = &v20;
  v19[6] = v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = (char *)type metadata accessor for BoxedDiffAndPatchElement(0, AssociatedTypeWitness, v12, v13);
  v15 = sub_1A4470A08();
  v17 = sub_1A449F0A4((void (*)(char *, char *))sub_1A44709E4, (uint64_t)v19, v10, v14, MEMORY[0x1E0DEDCE8], v15, MEMORY[0x1E0DEDD18], v16);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1A446EA18(uint64_t a1, uint64_t a2, uint64_t (*a3)(__int128 *, __int128 *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  char v10;
  __int128 v11;
  char v12;
  __int128 v13;
  char v14;
  __int128 v15;
  char v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for BoxedDiffAndPatchElement(0, AssociatedTypeWitness, v5, v6);
  sub_1A446D200(v7, (uint64_t)&v15);
  v13 = v15;
  v14 = v16;
  sub_1A446D200(v7, (uint64_t)&v11);
  v9 = v11;
  v10 = v12;
  return a3(&v13, &v9) & 1;
}

uint64_t sub_1A446EAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t TupleTypeMetadata3;
  char *v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v6 = type metadata accessor for SortedPatchElement(0, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  v15 = type metadata accessor for BoxedDiffAndPatchElement(0, a2, v13, v14);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)&v33 - v16, a1, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = &v17[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    v20 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v20(v12, v19, v6);
    sub_1A46918E4();
    swift_allocObject();
    v21 = sub_1A4690BC4();
    v20(v22, v12, v6);
    return sub_1A44A24E8(v21);
  }
  else
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v25 = &v17[*(int *)(TupleTypeMetadata3 + 48)];
    v26 = &v17[*(int *)(TupleTypeMetadata3 + 64)];
    v27 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v27(v12, v25, v6);
    v27(v10, v26, v6);
    sub_1A46918E4();
    v28 = *(_QWORD *)(v7 + 72);
    swift_allocObject();
    v29 = sub_1A4690BC4();
    v31 = v30;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v30, v12, v6);
    v27((char *)(v31 + v28), v10, v6);
    v23 = sub_1A44A24E8(v29);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  return v23;
}

uint64_t sub_1A446ED2C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = type metadata accessor for Patch(0, AssociatedTypeWitness, v4, v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - v8;
  v12 = type metadata accessor for SortedPatchElement(0, AssociatedTypeWitness, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v19 - v14;
  v16 = *a1;
  sub_1A4690CA8();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v15, v6);
  v17 = *(_QWORD *)&v15[*(int *)(v12 + 28)];
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return sub_1A45D6C48((uint64_t)v9, v17, v16, AssociatedTypeWitness, v20);
}

uint64_t sub_1A446EE6C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = type metadata accessor for Patch(0, AssociatedTypeWitness, v7, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - v10;
  v12 = *a1;
  result = sub_1A4690CA8();
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = *(_QWORD *)(a2 + 24);
    if (v12 < *(_QWORD *)(v14 + 16))
      return sub_1A45D6C48((uint64_t)v11, v12, *(_QWORD *)(v14 + 8 * v12 + 32), AssociatedTypeWitness, a3);
  }
  __break(1u);
  return result;
}

unint64_t *sub_1A446EF64@<X0>(unint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *result;
  if ((*result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v7 = *(_QWORD *)(a2 + 32);
  if (v4 >= *(_QWORD *)(v7 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v9 = v7 + 24 * v4;
  v10 = *(_QWORD *)(v9 + 32);
  v11 = *(_QWORD *)(v9 + 40);
  v12 = *(unsigned __int8 *)(v9 + 48);
  if (v12 == 3)
  {
    v13 = *a3 + 1;
    if (!__OFADD__(*a3, 1))
    {
      *a3 = v13;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SortedPatchElement(255, AssociatedTypeWitness, v15, v16);
      result = (unint64_t *)swift_getTupleTypeMetadata3();
      *(_QWORD *)a4 = v10;
      *(_QWORD *)(a4 + 8) = v11;
      *(_BYTE *)(a4 + 16) = 3;
      v17 = v4 + v13;
      if (!__OFADD__(v4, v13))
      {
        v18 = __OFSUB__(v17, 1);
        v19 = v17 - 1;
        if (!v18)
        {
          if ((v19 & 0x8000000000000000) == 0)
          {
            v20 = *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16);
            if (v19 < v20)
            {
              result = (unint64_t *)sub_1A4690CA8();
              if (!__OFADD__(v4, *a3))
              {
                if (v4 + *a3 < v20)
                  goto LABEL_15;
                goto LABEL_24;
              }
LABEL_23:
              __break(1u);
LABEL_24:
              __break(1u);
              goto LABEL_25;
            }
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for SortedPatchElement(255, AssociatedTypeWitness, v21, v22);
  result = (unint64_t *)swift_getTupleTypeMetadata2();
  *(_QWORD *)a4 = v10;
  *(_QWORD *)(a4 + 8) = v11;
  *(_BYTE *)(a4 + 16) = v12;
  v23 = v4 + *a3;
  if (__OFADD__(v4, *a3))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if ((v23 & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v23 < *(_QWORD *)(*(_QWORD *)(a2 + 16) + 16))
  {
LABEL_15:
    sub_1A4690CA8();
    type metadata accessor for BoxedDiffAndPatchElement(0, AssociatedTypeWitness, v24, v25);
    return (unint64_t *)swift_storeEnumTagMultiPayload();
  }
LABEL_27:
  __break(1u);
  return result;
}

void ExtendedPatch.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  (*(void (**)(char *))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1A446F280 + 4 * byte_1A4696C54[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A446F280()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;

  v5 = *(_QWORD *)v1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v2, &v1[*(int *)(TupleTypeMetadata2 + 48)], v0);
  *(_QWORD *)(v4 - 80) = 0;
  *(_QWORD *)(v4 - 72) = 0xE000000000000000;
  sub_1A4690984();
  *(_QWORD *)(v4 - 88) = v5;
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4691A10();
  sub_1A4690984();
  v7 = *(_QWORD *)(v4 - 80);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
  return v7;
}

uint64_t sub_1A446F53C()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = MEMORY[0x1E0DE9D38] + 64;
    swift_getTupleTypeLayout2();
    v6 = &v5;
    v7 = v2;
    swift_getTupleTypeLayout3();
    v8 = &v4;
    swift_getTupleTypeLayout3();
    v9 = &v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1A446F604(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  void (*v23)(unint64_t, uint64_t, uint64_t);

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = ((v7 + 8) & ~v7) + v8;
  v10 = ((v7 + 16) & ~v7) + v8;
  if (v9 > v10)
    v10 = ((v6 + 8) & ~(unint64_t)v6) + v8;
  v11 = ((v9 + v6) & ~(unint64_t)v6) + v8;
  if (v10 > v11)
    v11 = v10;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  v13 = v6 & 0x100000;
  if (v7 > 7 || v13 != 0 || (unint64_t)(v12 + 1) > 0x18)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v16 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v19 = ~v7;
    switch(*((_BYTE *)a2 + v12))
    {
      case 0:
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v19, ((unint64_t)a2 + v7 + 8) & v19, v4);
        *((_BYTE *)v3 + v12) = 0;
        break;
      case 1:
        *a1 = *a2;
        *((_BYTE *)a1 + v12) = 1;
        break;
      case 2:
        *a1 = *a2;
        v20 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        v21 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v20 = *v21;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v20 + v7 + 8) & v19, ((unint64_t)v21 + v7 + 8) & v19, v4);
        *((_BYTE *)v3 + v12) = 2;
        break;
      case 3:
        *a1 = *a2;
        v22 = ((unint64_t)a2 + v7 + 8) & v19;
        v23 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
        v23(((unint64_t)a1 + v7 + 8) & v19, v22, v4);
        v23((v8 + v7 + (((unint64_t)v3 + v7 + 8) & v19)) & v19, (v8 + v7 + v22) & v19, v4);
        *((_BYTE *)v3 + v12) = 3;
        break;
      default:
        if (v12 <= 3)
          v18 = v12;
        else
          v18 = 4;
        __asm { BR              X13 }
        return result;
    }
  }
  return v3;
}

uint64_t sub_1A446F84C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v4 + 8) & ~v4) + v5;
  v7 = ((v4 + 16) & ~v4) + v5;
  if (v6 > v7)
    v7 = ((v4 + 8) & ~v4) + v5;
  v8 = ((v6 + v4) & ~v4) + v5;
  if (v7 > v8)
    v8 = v7;
  if (v8 <= 8)
    v8 = 8;
  v10 = ~v4;
  switch(*(_BYTE *)(result + v8))
  {
    case 0:
      v11 = result + v4;
      goto LABEL_15;
    case 1:
      return result;
    case 2:
      v11 = ((result + 15) & 0xFFFFFFFFFFFFFFF8) + v4;
LABEL_15:
      result = (*(uint64_t (**)(uint64_t, _QWORD))(v3 + 8))((v11 + 8) & v10, *(_QWORD *)(a2 + 16));
      break;
    case 3:
      v12 = (result + v4 + 8) & v10;
      v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      v13(v12, v2);
      result = ((uint64_t (*)(uint64_t, uint64_t))v13)((v5 + v4 + v12) & v10, v2);
      break;
    default:
      if (*(unsigned __int8 *)(result + v8) <= 3u)
        v9 = *(unsigned __int8 *)(result + v8);
      else
        v9 = 4;
      __asm { BR              X14 }
      return result;
  }
  return result;
}

_QWORD *sub_1A446F9D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(unint64_t, uint64_t, uint64_t);
  _QWORD *result;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  v9 = ((v6 + 16) & ~v6) + v7;
  if (v8 > v9)
    v9 = ((v6 + 8) & ~v6) + v7;
  v10 = ((v8 + v6) & ~v6) + v7;
  if (v9 > v10)
    v10 = v9;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v13 = ~v6;
  switch(*((_BYTE *)a2 + v11))
  {
    case 0:
      *a1 = *a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v13, ((unint64_t)a2 + v6 + 8) & v13, v4);
      v14 = 0;
      break;
    case 1:
      *a1 = *a2;
      v14 = 1;
      break;
    case 2:
      *a1 = *a2;
      v15 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      v16 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v16;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v15 + v6 + 8) & v13, ((unint64_t)v16 + v6 + 8) & v13, v4);
      v14 = 2;
      break;
    case 3:
      *a1 = *a2;
      v17 = ((unint64_t)a2 + v6 + 8) & v13;
      v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
      v18(((unint64_t)a1 + v6 + 8) & v13, v17, v4);
      v18((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v13)) & v13, (v7 + v6 + v17) & v13, v4);
      v14 = 3;
      break;
    default:
      if (v11 <= 3)
        v12 = v11;
      else
        v12 = 4;
      __asm { BR              X13 }
      return result;
  }
  *((_BYTE *)a1 + v11) = v14;
  return a1;
}

_QWORD *sub_1A446FBD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);
  _QWORD *result;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = ((v7 + 8) & ~v7) + v8;
    v10 = ((v7 + 16) & ~v7) + v8;
    if (v9 > v10)
      v10 = ((v7 + 8) & ~v7) + v8;
    v11 = ((v9 + v7) & ~v7) + v8;
    if (v10 > v11)
      v11 = v10;
    if (v11 <= 8)
      v12 = 8;
    else
      v12 = v11;
    v14 = ~v7;
    switch(*((_BYTE *)a1 + v12))
    {
      case 0:
        v15 = (char *)a1 + v7;
        goto LABEL_16;
      case 1:
        break;
      case 2:
        v15 = (char *)((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7);
LABEL_16:
        (*(void (**)(unint64_t, _QWORD))(v6 + 8))((unint64_t)(v15 + 8) & v14, *(_QWORD *)(a3 + 16));
        break;
      case 3:
        v16 = ((unint64_t)a1 + v7 + 8) & v14;
        v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v17(v16, *(_QWORD *)(a3 + 16));
        v17((v8 + v7 + v16) & v14, v5);
        break;
      default:
        if (v12 <= 3)
          v13 = v12;
        else
          v13 = 4;
        __asm { BR              X12 }
        return result;
    }
    switch(*((_BYTE *)a2 + v12))
    {
      case 0:
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 8) & v14, ((unint64_t)a2 + v7 + 8) & v14, v5);
        v19 = 0;
        break;
      case 1:
        *a1 = *a2;
        v19 = 1;
        break;
      case 2:
        v21 = *a2;
        v20 = (unint64_t)a2 + 15;
        *a1 = v21;
        v22 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v22 = *(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v22 + v7 + 8) & v14, ((v20 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v14, v5);
        v19 = 2;
        break;
      case 3:
        *a1 = *a2;
        v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
        v23(((unint64_t)a1 + v7 + 8) & v14, ((unint64_t)a2 + v7 + 8) & v14, v5);
        v23((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v14)) & v14, (v8 + v7 + (((unint64_t)a2 + v7 + 8) & v14)) & v14, v5);
        v19 = 3;
        break;
      default:
        if (v12 <= 3)
          v18 = v12;
        else
          v18 = 4;
        __asm { BR              X12 }
        return result;
    }
    *((_BYTE *)a1 + v12) = v19;
  }
  return a1;
}

_QWORD *sub_1A446FED0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void (*v18)(unint64_t, uint64_t, uint64_t);
  _QWORD *result;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  v9 = ((v6 + 16) & ~v6) + v7;
  if (v8 > v9)
    v9 = ((v6 + 8) & ~v6) + v7;
  v10 = ((v8 + v6) & ~v6) + v7;
  if (v9 > v10)
    v10 = v9;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v13 = ~v6;
  switch(*((_BYTE *)a2 + v11))
  {
    case 0:
      *a1 = *a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v13, ((unint64_t)a2 + v6 + 8) & v13, v4);
      v14 = 0;
      break;
    case 1:
      *a1 = *a2;
      v14 = 1;
      break;
    case 2:
      *a1 = *a2;
      v15 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      v16 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v16;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)v15 + v6 + 8) & v13, ((unint64_t)v16 + v6 + 8) & v13, v4);
      v14 = 2;
      break;
    case 3:
      *a1 = *a2;
      v17 = ((unint64_t)a2 + v6 + 8) & v13;
      v18 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
      v18(((unint64_t)a1 + v6 + 8) & v13, v17, v4);
      v18((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v13)) & v13, (v7 + v6 + v17) & v13, v4);
      v14 = 3;
      break;
    default:
      if (v11 <= 3)
        v12 = v11;
      else
        v12 = 4;
      __asm { BR              X13 }
      return result;
  }
  *((_BYTE *)a1 + v11) = v14;
  return a1;
}

_QWORD *sub_1A44700D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);
  _QWORD *result;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = ((v7 + 8) & ~v7) + v8;
    v10 = ((v7 + 16) & ~v7) + v8;
    if (v9 > v10)
      v10 = ((v7 + 8) & ~v7) + v8;
    v11 = ((v9 + v7) & ~v7) + v8;
    if (v10 > v11)
      v11 = v10;
    if (v11 <= 8)
      v12 = 8;
    else
      v12 = v11;
    v14 = ~v7;
    switch(*((_BYTE *)a1 + v12))
    {
      case 0:
        v15 = (char *)a1 + v7;
        goto LABEL_16;
      case 1:
        break;
      case 2:
        v15 = (char *)((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v7);
LABEL_16:
        (*(void (**)(unint64_t, _QWORD))(v6 + 8))((unint64_t)(v15 + 8) & v14, *(_QWORD *)(a3 + 16));
        break;
      case 3:
        v16 = ((unint64_t)a1 + v7 + 8) & v14;
        v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v17(v16, *(_QWORD *)(a3 + 16));
        v17((v8 + v7 + v16) & v14, v5);
        break;
      default:
        if (v12 <= 3)
          v13 = v12;
        else
          v13 = 4;
        __asm { BR              X12 }
        return result;
    }
    switch(*((_BYTE *)a2 + v12))
    {
      case 0:
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)a1 + v7 + 8) & v14, ((unint64_t)a2 + v7 + 8) & v14, v5);
        v19 = 0;
        break;
      case 1:
        *a1 = *a2;
        v19 = 1;
        break;
      case 2:
        v21 = *a2;
        v20 = (unint64_t)a2 + 15;
        *a1 = v21;
        v22 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        *v22 = *(_QWORD *)(v20 & 0xFFFFFFFFFFFFFFF8);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v22 + v7 + 8) & v14, ((v20 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v14, v5);
        v19 = 2;
        break;
      case 3:
        *a1 = *a2;
        v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
        v23(((unint64_t)a1 + v7 + 8) & v14, ((unint64_t)a2 + v7 + 8) & v14, v5);
        v23((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v14)) & v14, (v8 + v7 + (((unint64_t)a2 + v7 + 8) & v14)) & v14, v5);
        v19 = 3;
        break;
      default:
        if (v12 <= 3)
          v18 = v12;
        else
          v18 = 4;
        __asm { BR              X12 }
        return result;
    }
    *((_BYTE *)a1 + v12) = v19;
  }
  return a1;
}

uint64_t sub_1A44703CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unsigned int v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v4 + 8) & ~v4) + v5;
  v7 = ((v4 + 16) & ~v4) + v5;
  if (v6 > v7)
    v7 = ((v4 + 8) & ~v4) + v5;
  v8 = ((v6 + v4) & ~v4) + v5;
  if (v7 > v8)
    v8 = v7;
  v9 = 8;
  if (v8 > 8)
    v9 = v8;
  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_25;
  v10 = v9 + 1;
  v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    v14 = ((a2 + ~(-1 << v11) - 252) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_25;
      goto LABEL_18;
    }
    if (v14 < 2)
    {
LABEL_25:
      v16 = *(unsigned __int8 *)(a1 + v9);
      if (v16 >= 4)
        return (v16 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_25;
LABEL_18:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return (v15 + 253);
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A44704C8 + 4 * byte_1A4696CA0[(v10 - 1)]))();
}

void sub_1A4470514(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  v9 = ((v6 + 16) & ~v6) + v7;
  if (v8 > v9)
    v9 = ((v6 + 8) & ~v6) + v7;
  v10 = ((v8 + v6) & ~v6) + v7;
  if (v9 > v10)
    v10 = v9;
  if (v10 <= 8)
    v10 = 8;
  v11 = v10 + 1;
  if (a3 < 0xFD)
  {
    v12 = 0u;
  }
  else if (v11 <= 3)
  {
    v14 = ((a3 + ~(-1 << (8 * v11)) - 252) >> (8 * v11)) + 1;
    if (HIWORD(v14))
    {
      v12 = 4u;
    }
    else if (v14 >= 0x100)
    {
      v12 = 2;
    }
    else
    {
      v12 = v14 > 1;
    }
  }
  else
  {
    v12 = 1u;
  }
  if (a2 <= 0xFC)
    __asm { BR              X11 }
  v13 = a2 - 253;
  if (v11 < 4)
  {
    if ((_DWORD)v10 != -1)
    {
      v15 = v13 & ~(-1 << (8 * v11));
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *a1 = v15;
        *((_BYTE *)a1 + 2) = BYTE2(v15);
      }
      else if ((_DWORD)v11 == 2)
      {
        *a1 = v15;
      }
      else
      {
        *(_BYTE *)a1 = v15;
      }
    }
  }
  else
  {
    bzero(a1, v10 + 1);
    *(_DWORD *)a1 = v13;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A44706F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = ((v3 + 8) & ~v3) + v4;
  v6 = ((v3 + 16) & ~v3) + v4;
  if (v5 > v6)
    v6 = ((v3 + 8) & ~v3) + v4;
  v7 = ((v5 + v3) & ~v3) + v4;
  if (v6 > v7)
    v7 = v6;
  v8 = 8;
  if (v7 > 8)
    v8 = v7;
  if (*(unsigned __int8 *)(a1 + v8) < 4u)
    return *(unsigned __int8 *)(a1 + v8);
  if (v8 <= 3)
    v9 = v8;
  else
    v9 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A4470774 + 4 * byte_1A4696CAE[v9]))();
}

void sub_1A44707BC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  size_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = ((v5 + 8) & ~v5) + v6;
  v8 = ((v5 + 16) & ~v5) + v6;
  if (a2 > 3)
  {
    if (v7 > v8)
      v8 = ((v5 + 8) & ~v5) + v6;
    v10 = ((v7 + v5) & ~v5) + v6;
    if (v8 > v10)
      v10 = v8;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = a2 - 4;
    if (v11 < 4)
    {
      v13 = v12 >> (8 * v11);
      v14 = v12 & ~(-1 << (8 * v11));
      a1[v11] = v13 + 4;
      bzero(a1, v11);
      if ((_DWORD)v11 == 3)
      {
        *(_WORD *)a1 = v14;
        a1[2] = BYTE2(v14);
      }
      else if ((_DWORD)v11 == 2)
      {
        *(_WORD *)a1 = v14;
      }
      else
      {
        *a1 = v14;
      }
    }
    else
    {
      a1[v11] = 4;
      bzero(a1, v11);
      *(_DWORD *)a1 = v12;
    }
  }
  else
  {
    if (v7 > v8)
      v8 = ((v5 + 8) & ~v5) + v6;
    v9 = ((v7 + v5) & ~v5) + v6;
    if (v8 > v9)
      v9 = v8;
    if (v9 <= 8)
      v9 = 8;
    a1[v9] = a2;
  }
}

uint64_t sub_1A44708E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A446EA18(a1, a2, *(uint64_t (**)(__int128 *, __int128 *))(v2 + 32)) & 1;
}

uint64_t type metadata accessor for BoxedDiffAndPatchElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BoxedDiffAndPatchElement);
}

uint64_t sub_1A4470910()
{
  return swift_deallocObject();
}

uint64_t sub_1A4470920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A446EAE0(a1, *(_QWORD *)(v4 + 16), a3, a4);
}

uint64_t sub_1A4470928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A4470954@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A446ED2C(a1, a2);
}

BOOL sub_1A4470974(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for SortedPatchElement(0, AssociatedTypeWitness, v5, v6);
  return *(_QWORD *)(a1 + *(int *)(v7 + 28)) < *(_QWORD *)(a2 + *(int *)(v7 + 28));
}

unint64_t *sub_1A44709E4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A446EF64(a1, *(_QWORD *)(v2 + 32), *(uint64_t **)(v2 + 40), a2);
}

unint64_t sub_1A4470A08()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED2421B0;
  if (!qword_1ED2421B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2421A8);
    v2 = sub_1A446E8D8();
    v3[0] = MEMORY[0x1E0DEB458];
    v3[1] = v2;
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED2421B0);
  }
  return result;
}

uint64_t sub_1A4470A74@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A446EE6C(a1, *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_1A4470A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  char v7;
  char *v8;
  uint64_t *v9;

  result = type metadata accessor for SortedPatchElement(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v8 = &v7;
    swift_getTupleTypeLayout2();
    v9 = &v6;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1A4470B3C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  BOOL v17;
  unsigned int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  unsigned int v46;
  uint64_t v47;
  char v48;
  void (*v49)(unint64_t, unint64_t);
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(void);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = ~(v6 | 7);
  v9 = v6 + 8;
  v10 = *(_QWORD *)(v5 + 64);
  v11 = ((v7 + 8) & ~v7) + v10;
  if (v11 <= ((v11 + v7) & ~v7) + v10)
    v11 = ((v11 + v6) & ~(unint64_t)v6) + v10;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  v13 = (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v14 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  if (v14 <= ((v14 + (v6 | 7)) & ~(v6 | 7)) + v13)
    v15 = ((v14 + (v6 | 7)) & ~(v6 | 7)) + v13;
  else
    v15 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  v16 = v6 & 0x100000;
  v17 = v7 <= 7 && v16 == 0;
  if (v17 && (v15 | 1) <= 0x18)
  {
    v18 = *((unsigned __int8 *)a2 + v15);
    if ((v15 & 0xFFFFFFF8) != 0 && v18 >= 2)
      v18 = *(_DWORD *)a2 + 2;
    v20 = ~v7;
    v21 = v12 + 1;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v22 = (a1 + 24) & v8;
    v23 = (unint64_t)(a2 + 3) & v8;
    v24 = *(unsigned __int8 *)(v23 + v12);
    if (v18 == 1)
    {
      if (v24 >= 3)
      {
        if (v12 <= 3)
          v25 = v12;
        else
          v25 = 4;
        __asm { BR              X12 }
      }
      if (v24 == 2)
      {
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v29 = (v9 + v22) & v20;
        v30 = (v9 + v23) & v20;
        v31 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
        v32 = v4;
        v61 = v15;
        v57 = v10;
        v31(v29, v30);
        v21 = v12 + 1;
        ((void (*)(uint64_t, uint64_t, uint64_t))v31)((v57 + v7 + v29) & ~v7, (v57 + v7 + v30) & ~v7, v32);
        v15 = v61;
        v28 = 2;
      }
      else if (v24 == 1)
      {
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v28 = 1;
      }
      else
      {
        v33 = v15;
        *(_QWORD *)v22 = *(_QWORD *)v23;
        (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v9 + v22) & v20, (v9 + v23) & v20);
        v28 = 0;
        v15 = v33;
      }
      *(_BYTE *)(v22 + v12) = v28;
      v34 = (_QWORD *)(((v22 | 7) + v21) & 0xFFFFFFFFFFFFF8);
      v35 = (_QWORD *)(((v23 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
      *v34 = *v35;
      *(_QWORD *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v3 + v15) = 1;
    }
    else
    {
      if (v24 >= 3)
      {
        if (v12 <= 3)
          v27 = v12;
        else
          v27 = 4;
        __asm { BR              X12 }
      }
      v60 = v4;
      v62 = v15;
      v58 = v10;
      v59 = ~v7;
      if (v24 == 2)
      {
        *(_QWORD *)v22 = *(_QWORD *)v23;
        v53 = (v9 + v22) & v20;
        v54 = (v9 + v23) & v20;
        v56 = *(void (**)(void))(v5 + 16);
        v37 = v4;
        v55 = v5;
        v38 = v10;
        v56();
        v39 = v38 + v7;
        v40 = (v38 + v7 + v53) & ~v7;
        v5 = v55;
        v21 = v12 + 1;
        v41 = v37;
        v9 = v7 + 8;
        ((void (*)(uint64_t, uint64_t, uint64_t))v56)(v40, (v39 + v54) & ~v7, v41);
        v36 = 2;
      }
      else
      {
        *(_QWORD *)v22 = *(_QWORD *)v23;
        if (v24 == 1)
        {
          v36 = 1;
        }
        else
        {
          (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v9 + v22) & v20, (v9 + v23) & v20);
          v36 = 0;
        }
      }
      *(_BYTE *)(v22 + v12) = v36;
      v42 = (_QWORD *)(((v22 | 7) + v21) & 0xFFFFFFFFFFFFF8);
      v43 = (_QWORD *)(((v23 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
      *v42 = *v43;
      *(_QWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFF8);
      v44 = (_QWORD *)((v13 + v22) & v8);
      v45 = (_QWORD *)((v13 + v23) & v8);
      v46 = *((unsigned __int8 *)v45 + v12);
      if (v46 >= 3)
      {
        if (v12 <= 3)
          v47 = v12;
        else
          v47 = 4;
        __asm { BR              X12 }
      }
      if (v46 == 2)
      {
        *v44 = *v45;
        v49 = *(void (**)(unint64_t, unint64_t))(v5 + 16);
        v49(((unint64_t)v44 + v9) & v59, ((unint64_t)v45 + v9) & v59);
        ((void (*)(unint64_t, unint64_t, uint64_t))v49)((v58 + v7 + (((unint64_t)v44 + v9) & v59)) & v59, (v58 + v7 + (((unint64_t)v45 + v9) & v59)) & v59, v60);
        v48 = 2;
      }
      else
      {
        *v44 = *v45;
        if (v46 == 1)
        {
          v48 = 1;
        }
        else
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v44 + v9) & v59, ((unint64_t)v45 + v9) & v59, v60);
          v48 = 0;
        }
      }
      *((_BYTE *)v44 + v12) = v48;
      v50 = (_QWORD *)(((unint64_t)v44 + v12 + 8) & 0xFFFFFFFFFFFFFFF8);
      v51 = (_QWORD *)(((unint64_t)v45 + v12 + 8) & 0xFFFFFFFFFFFFFFF8);
      *v50 = *v51;
      *(_QWORD *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFF8);
      *((_BYTE *)v3 + v62) = 0;
    }
  }
  else
  {
    v26 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v26 + ((v7 + 16) & v8));
    swift_retain();
  }
  return v3;
}

_DWORD *sub_1A44710A0(_DWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(unint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(unint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = v4 | 7;
  v6 = ~(v4 | 7);
  v7 = v4 + 8;
  v8 = *(_QWORD *)(v3 + 64);
  v9 = ((v4 + 8) & ~v4) + v8;
  if (v9 <= ((v9 + v4) & ~v4) + v8)
    v9 = ((v9 + v4) & ~v4) + v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = v11 + (((v4 | 7) + 17) & ~(v4 | 7));
  if (v12 <= ((v12 + v5) & ~v5) + v11)
    v12 = ((v12 + v5) & ~v5) + v11;
  v13 = *((unsigned __int8 *)result + v12);
  v14 = v12 & 0xFFFFFFF8;
  if (v13 >= 2 && v14 != 0)
    v13 = *result + 2;
  v16 = ~v4;
  v17 = (uint64_t)result + v5 + 17;
  v18 = v17 & v6;
  v19 = *(unsigned __int8 *)((v17 & v6) + v10);
  if (v13 != 1)
  {
    if (v19 >= 3)
    {
      if (v10 <= 3)
        v21 = v10;
      else
        v21 = 4;
      __asm { BR              X13 }
    }
    if (v19 == 2)
    {
      v32 = *(_QWORD *)(v2 - 8);
      v23 = (v7 + v18) & v16;
      v24 = *(void (**)(unint64_t))(v3 + 8);
      v25 = *(_QWORD *)(v3 + 64);
      v26 = v2;
      v24(v23);
      v27 = v25 + v4 + v23;
      v7 = v4 + 8;
      result = (_DWORD *)((uint64_t (*)(unint64_t, uint64_t))v24)(v27 & ~v4, v26);
      v2 = v26;
      v8 = v25;
      v3 = v32;
      v16 = ~v4;
    }
    else if (v19 != 1)
    {
      v22 = v2;
      result = (_DWORD *)(*(uint64_t (**)(unint64_t))(v3 + 8))((v7 + v18) & v16);
      v2 = v22;
    }
    v18 = ((v17 | v4) + v11) & v6;
    v28 = *(unsigned __int8 *)(v18 + v10);
    if (v28 >= 3)
    {
      if (v10 <= 3)
        v29 = v10;
      else
        v29 = 4;
      __asm { BR              X13 }
    }
    if (v28 != 2)
    {
      if (v28 != 1)
        return (_DWORD *)(*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))((v7 + v18) & v16, v2);
      return result;
    }
LABEL_39:
    v30 = (v7 + v18) & v16;
    v33 = *(void (**)(unint64_t))(v3 + 8);
    v31 = v2;
    v33(v30);
    return (_DWORD *)((uint64_t (*)(unint64_t, uint64_t))v33)((v8 + v4 + v30) & v16, v31);
  }
  if (v19 >= 3)
  {
    if (v10 <= 3)
      v20 = v10;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  if (v19 == 2)
    goto LABEL_39;
  if (v19 != 1)
    return (_DWORD *)(*(uint64_t (**)(unint64_t, uint64_t))(v3 + 8))((v7 + v18) & v16, v2);
  return result;
}

uint64_t sub_1A44713DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, unint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  unsigned int v49;
  uint64_t v50;
  void (*v51)(unint64_t, unint64_t, uint64_t);
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v6 | 7;
  v8 = ~(v6 | 7);
  v9 = v6 + 8;
  v10 = *(_QWORD *)(v5 + 64);
  v11 = ((v6 + 8) & ~v6) + v10;
  if (v11 <= ((v11 + v6) & ~v6) + v10)
    v11 = ((v11 + v6) & ~v6) + v10;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  v13 = (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v14 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  v15 = ((v14 + v7) & ~v7) + v13;
  if (v14 > v15)
    v15 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  v16 = *(unsigned __int8 *)(a2 + v15);
  v67 = v15;
  v17 = v15 & 0xFFFFFFF8;
  if (v16 >= 2 && v17 != 0)
    v16 = *(_DWORD *)a2 + 2;
  v19 = ~v6;
  v20 = v12 + 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v21 = a1 + v7 + 17;
  v22 = v21 & v8;
  v23 = a2 + v7 + 17;
  v24 = v23 & v8;
  v25 = *(unsigned __int8 *)((v23 & v8) + v12);
  if (v16 == 1)
  {
    if (v25 >= 3)
    {
      if (v12 <= 3)
        v26 = v12;
      else
        v26 = 4;
      __asm { BR              X12 }
    }
    if (v25 == 2)
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      v29 = (v9 + v22) & v19;
      v30 = v5;
      v31 = (v9 + v24) & v19;
      v32 = *(void (**)(unint64_t, unint64_t))(v30 + 16);
      v33 = v4;
      v34 = v10;
      v32(v29, v31);
      v35 = v34 + v6 + v29;
      v3 = a1;
      ((void (*)(unint64_t, unint64_t, uint64_t))v32)(v35 & ~v6, (v34 + v6 + v31) & ~v6, v33);
      v20 = v12 + 1;
      v28 = 2;
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      if (v25 == 1)
      {
        v28 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v9 + v22) & v19, (v9 + v24) & v19);
        v28 = 0;
      }
    }
    *(_BYTE *)(v22 + v12) = v28;
    v36 = (v22 | 7) + v20;
    v37 = (v24 | 7) + v20;
    v38 = 1;
  }
  else
  {
    if (v25 >= 3)
    {
      if (v12 <= 3)
        v27 = v12;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    v65 = v6 + 8;
    v66 = v4;
    v63 = v10;
    v64 = ~v6;
    if (v25 == 2)
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      v55 = (v9 + v22) & v19;
      v56 = (v9 + v24) & v19;
      v57 = v5;
      v58 = *(void (**)(void))(v5 + 16);
      v40 = v4;
      v41 = v10;
      v59 = v23;
      v58();
      v42 = (v41 + v6 + v55) & ~v6;
      v43 = (v41 + v6 + v56) & ~v6;
      v20 = v12 + 1;
      v3 = a1;
      v44 = v40;
      v5 = v57;
      ((void (*)(unint64_t, unint64_t, uint64_t))v58)(v42, v43, v44);
      v23 = v59;
      v39 = 2;
    }
    else if (v25 == 1)
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      v39 = 1;
    }
    else
    {
      v60 = v23;
      *(_QWORD *)v22 = *(_QWORD *)v24;
      (*(void (**)(uint64_t, uint64_t))(v5 + 16))((v9 + v22) & v19, (v9 + v24) & v19);
      v39 = 0;
      v23 = v60;
    }
    *(_BYTE *)(v22 + v12) = v39;
    v45 = (_QWORD *)(((v22 | 7) + v20) & 0xFFFFFFFFFFFFF8);
    v46 = (_QWORD *)(((v24 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
    *v45 = *v46;
    *(_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFF8);
    v47 = (_QWORD *)(((v21 | v6) + v13) & v8);
    v48 = (_QWORD *)(((v23 | v6) + v13) & v8);
    v49 = *((unsigned __int8 *)v48 + v12);
    if (v49 >= 3)
    {
      if (v12 <= 3)
        v50 = v12;
      else
        v50 = 4;
      __asm { BR              X12 }
    }
    if (v49 == 2)
    {
      *v47 = *v48;
      v51 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
      v51(((unint64_t)v47 + v65) & v64, ((unint64_t)v48 + v65) & v64, v66);
      v51((v63 + v6 + (((unint64_t)v47 + v65) & v64)) & v64, (v63 + v6 + (((unint64_t)v48 + v65) & v64)) & v64, v66);
      LOBYTE(v49) = 2;
    }
    else
    {
      *v47 = *v48;
      if (v49 != 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)v47 + v65) & v64, ((unint64_t)v48 + v65) & v64, v66);
        LOBYTE(v49) = 0;
      }
    }
    v38 = 0;
    *((_BYTE *)v47 + v12) = v49;
    v36 = (uint64_t)v47 + v12 + 8;
    v37 = (uint64_t)v48 + v12 + 8;
  }
  v52 = (_QWORD *)(v36 & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  *(_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
  *(_BYTE *)(v3 + v67) = v38;
  return v3;
}

uint64_t sub_1A4471914(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(unint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, uint64_t);
  unint64_t v38;
  unsigned int v39;
  BOOL v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, unint64_t, uint64_t);
  unint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  unsigned int v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  void (*v70)(unint64_t, unint64_t, uint64_t);
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;

  if ((__int128 *)a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v7 | 7;
  v9 = ~(v7 | 7);
  v10 = v7 + 8;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = ((v7 + 8) & ~v7) + v11;
  v80 = v11;
  if (v12 <= ((v12 + v7) & ~v7) + v11)
    v12 = ((v12 + v7) & ~v7) + v11;
  if (v12 <= 8)
    v13 = 8;
  else
    v13 = v12;
  v14 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = v14 + (((v7 | 7) + 17) & ~(v7 | 7));
  v82 = v14;
  if (v15 <= ((v15 + v8) & ~v8) + v14)
    v15 = ((v15 + v8) & ~v8) + v14;
  v16 = *(unsigned __int8 *)(a1 + v15);
  v84 = v15;
  v17 = v15 & 0xFFFFFFF8;
  if (v16 >= 2 && v17 != 0)
    v16 = *(_DWORD *)a1 + 2;
  v83 = ~v7;
  v81 = a1 + v8 + 17;
  v19 = v81 & v9;
  v20 = *(unsigned __int8 *)((v81 & v9) + v13);
  if (v16 == 1)
  {
    if (v20 >= 3)
    {
      if (v13 <= 3)
        v21 = v13;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 != 2)
    {
      if (v20 != 1)
      {
        v23 = v10 + v19;
LABEL_42:
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v23 & v83, v5);
LABEL_45:
        v9 = ~(v7 | 7);
        goto LABEL_46;
      }
      goto LABEL_46;
    }
    v24 = v10 + v19;
LABEL_44:
    v77 = v10;
    v34 = v6;
    v35 = v5;
    v36 = v24 & v83;
    v75 = v17;
    v37 = *(void (**)(unint64_t, uint64_t))(v34 + 8);
    v37(v24 & v83, v35);
    v38 = v80 + v7 + v36;
    v5 = v35;
    v6 = v34;
    v10 = v77;
    v37(v38 & v83, v5);
    v17 = v75;
    goto LABEL_45;
  }
  if (v20 >= 3)
  {
    if (v13 <= 3)
      v22 = v13;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  if (v20 == 2)
  {
    v25 = v10 + v19;
    v79 = (_QWORD *)(v81 & v9);
    v26 = *(_QWORD *)(v5 - 8);
    v27 = *(_QWORD *)(a3 + 16);
    v28 = v25 & v83;
    v74 = v17;
    v29 = *(void (**)(unint64_t, uint64_t))(v26 + 8);
    v29(v25 & v83, v27);
    v30 = v80 + v7 + v28;
    v5 = v27;
    v6 = v26;
    v10 = v7 + 8;
    v19 = (uint64_t)v79;
    v29(v30 & v83, v5);
    v17 = v74;
  }
  else
  {
    if (v20 == 1)
      goto LABEL_34;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))((v10 + v19) & v83, v5);
  }
  v9 = ~(v7 | 7);
LABEL_34:
  v31 = ((v81 | v7) + v82) & v9;
  v32 = *(unsigned __int8 *)(v31 + v13);
  if (v32 >= 3)
  {
    if (v13 <= 3)
      v33 = v13;
    else
      v33 = 4;
    __asm { BR              X13 }
  }
  if (v32 == 2)
  {
    v24 = v10 + v31;
    goto LABEL_44;
  }
  if (v32 != 1)
  {
    v23 = v10 + v31;
    goto LABEL_42;
  }
LABEL_46:
  v39 = *((unsigned __int8 *)a2 + v84);
  if (v17)
    v40 = v39 >= 2;
  else
    v40 = 0;
  if (v40)
    v39 = *(_DWORD *)a2 + 2;
  v41 = v13 + 1;
  v42 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v42;
  v43 = (uint64_t)a2 + v8 + 17;
  v44 = v43 & v9;
  v45 = *(unsigned __int8 *)((v43 & v9) + v13);
  if (v39 == 1)
  {
    if (v45 >= 3)
    {
      if (v13 <= 3)
        v46 = v13;
      else
        v46 = 4;
      __asm { BR              X12 }
    }
    if (v45 == 2)
    {
      *(_QWORD *)v19 = *(_QWORD *)v44;
      v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v49((v10 + v19) & v83, (v10 + v44) & v83, v5);
      v49((v80 + v7 + ((v10 + v19) & v83)) & v83, (v80 + v7 + ((v10 + v44) & v83)) & v83, v5);
      v41 = v13 + 1;
      v48 = 2;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v44;
      if (v45 == 1)
      {
        v48 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((v10 + v19) & v83, (v10 + v44) & v83, v5);
        v48 = 0;
        v41 = v13 + 1;
      }
    }
    *(_BYTE *)(v19 + v13) = v48;
    v50 = (v19 | 7) + v41;
    v51 = (v44 | 7) + v41;
    v52 = 1;
  }
  else
  {
    if (v45 >= 3)
    {
      if (v13 <= 3)
        v47 = v13;
      else
        v47 = 4;
      __asm { BR              X12 }
    }
    if (v45 == 2)
    {
      *(_QWORD *)v19 = *(_QWORD *)v44;
      v78 = v10;
      v54 = (v10 + v19) & v83;
      v55 = v10 + v44;
      v56 = v5;
      v57 = v55 & v83;
      v76 = v6;
      v58 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
      v58(v54, v55 & v83, v56);
      v59 = v80 + v7 + v57;
      v5 = v56;
      v10 = v78;
      v58((v80 + v7 + v54) & v83, v59 & v83, v5);
      v41 = v13 + 1;
      v6 = v76;
      v9 = ~(v7 | 7);
      v53 = 2;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v44;
      if (v45 == 1)
      {
        v53 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))((v10 + v19) & v83, (v10 + v44) & v83, v5);
        v53 = 0;
        v9 = ~(v7 | 7);
        v41 = v13 + 1;
      }
    }
    *(_BYTE *)(v19 + v13) = v53;
    v60 = (_QWORD *)(((v19 | 7) + v41) & 0xFFFFFFFFFFFFF8);
    v61 = (_QWORD *)(((v44 | 7) + v41) & 0xFFFFFFFFFFFFFFF8);
    *v60 = *v61;
    *(_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFF8);
    v62 = (_QWORD *)(((v81 | v7) + v82) & v9);
    v63 = (_QWORD *)(((v43 | v7) + v82) & v9);
    v64 = *((unsigned __int8 *)v63 + v13);
    if (v64 >= 3)
    {
      if (v13 <= 3)
        v65 = v13;
      else
        v65 = 4;
      __asm { BR              X12 }
    }
    if (v64 == 2)
    {
      *v62 = *v63;
      v66 = ((unint64_t)v62 + v10) & v83;
      v67 = (unint64_t)v63 + v10;
      v68 = v5;
      v69 = v67 & v83;
      v70 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
      v70(v66, v67 & v83, v68);
      v70((v80 + v7 + v66) & v83, (v80 + v7 + v69) & v83, v68);
      LOBYTE(v64) = 2;
    }
    else
    {
      *v62 = *v63;
      if (v64 != 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v62 + v10) & v83, ((unint64_t)v63 + v10) & v83, v5);
        LOBYTE(v64) = 0;
      }
    }
    v52 = 0;
    *((_BYTE *)v62 + v13) = v64;
    v50 = (uint64_t)v62 + v13 + 8;
    v51 = (uint64_t)v63 + v13 + 8;
  }
  v71 = (_QWORD *)(v50 & 0xFFFFFFFFFFFFF8);
  v72 = (_QWORD *)(v51 & 0xFFFFFFFFFFFFFFF8);
  *v71 = *v72;
  *(_QWORD *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFF8);
  *(_BYTE *)(a1 + v84) = v52;
  return a1;
}

uint64_t sub_1A4472110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(unint64_t, unint64_t);
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  unsigned int v49;
  uint64_t v50;
  void (*v51)(unint64_t, unint64_t, uint64_t);
  _QWORD *v52;
  _QWORD *v53;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void (*v58)(void);
  uint64_t v59;
  uint64_t v60;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v6 | 7;
  v8 = ~(v6 | 7);
  v9 = v6 + 8;
  v10 = *(_QWORD *)(v5 + 64);
  v11 = ((v6 + 8) & ~v6) + v10;
  if (v11 <= ((v11 + v6) & ~v6) + v10)
    v11 = ((v11 + v6) & ~v6) + v10;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  v13 = (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v14 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  v15 = ((v14 + v7) & ~v7) + v13;
  if (v14 > v15)
    v15 = v13 + (((v6 | 7) + 17) & ~(v6 | 7));
  v16 = *(unsigned __int8 *)(a2 + v15);
  v67 = v15;
  v17 = v15 & 0xFFFFFFF8;
  if (v16 >= 2 && v17 != 0)
    v16 = *(_DWORD *)a2 + 2;
  v19 = ~v6;
  v20 = v12 + 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v21 = a1 + v7 + 17;
  v22 = v21 & v8;
  v23 = a2 + v7 + 17;
  v24 = v23 & v8;
  v25 = *(unsigned __int8 *)((v23 & v8) + v12);
  if (v16 == 1)
  {
    if (v25 >= 3)
    {
      if (v12 <= 3)
        v26 = v12;
      else
        v26 = 4;
      __asm { BR              X12 }
    }
    if (v25 == 2)
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      v29 = (v9 + v22) & v19;
      v30 = v5;
      v31 = (v9 + v24) & v19;
      v32 = *(void (**)(unint64_t, unint64_t))(v30 + 32);
      v33 = v4;
      v34 = v10;
      v32(v29, v31);
      v35 = v34 + v6 + v29;
      v3 = a1;
      ((void (*)(unint64_t, unint64_t, uint64_t))v32)(v35 & ~v6, (v34 + v6 + v31) & ~v6, v33);
      v20 = v12 + 1;
      v28 = 2;
    }
    else
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      if (v25 == 1)
      {
        v28 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v5 + 32))((v9 + v22) & v19, (v9 + v24) & v19);
        v28 = 0;
      }
    }
    *(_BYTE *)(v22 + v12) = v28;
    v36 = (v22 | 7) + v20;
    v37 = (v24 | 7) + v20;
    v38 = 1;
  }
  else
  {
    if (v25 >= 3)
    {
      if (v12 <= 3)
        v27 = v12;
      else
        v27 = 4;
      __asm { BR              X12 }
    }
    v65 = v6 + 8;
    v66 = v4;
    v63 = v10;
    v64 = ~v6;
    if (v25 == 2)
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      v55 = (v9 + v22) & v19;
      v56 = (v9 + v24) & v19;
      v57 = v5;
      v58 = *(void (**)(void))(v5 + 32);
      v40 = v4;
      v41 = v10;
      v59 = v23;
      v58();
      v42 = (v41 + v6 + v55) & ~v6;
      v43 = (v41 + v6 + v56) & ~v6;
      v20 = v12 + 1;
      v3 = a1;
      v44 = v40;
      v5 = v57;
      ((void (*)(unint64_t, unint64_t, uint64_t))v58)(v42, v43, v44);
      v23 = v59;
      v39 = 2;
    }
    else if (v25 == 1)
    {
      *(_QWORD *)v22 = *(_QWORD *)v24;
      v39 = 1;
    }
    else
    {
      v60 = v23;
      *(_QWORD *)v22 = *(_QWORD *)v24;
      (*(void (**)(uint64_t, uint64_t))(v5 + 32))((v9 + v22) & v19, (v9 + v24) & v19);
      v39 = 0;
      v23 = v60;
    }
    *(_BYTE *)(v22 + v12) = v39;
    v45 = (_QWORD *)(((v22 | 7) + v20) & 0xFFFFFFFFFFFFF8);
    v46 = (_QWORD *)(((v24 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
    *v45 = *v46;
    *(_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFF8);
    v47 = (_QWORD *)(((v21 | v6) + v13) & v8);
    v48 = (_QWORD *)(((v23 | v6) + v13) & v8);
    v49 = *((unsigned __int8 *)v48 + v12);
    if (v49 >= 3)
    {
      if (v12 <= 3)
        v50 = v12;
      else
        v50 = 4;
      __asm { BR              X12 }
    }
    if (v49 == 2)
    {
      *v47 = *v48;
      v51 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
      v51(((unint64_t)v47 + v65) & v64, ((unint64_t)v48 + v65) & v64, v66);
      v51((v63 + v6 + (((unint64_t)v47 + v65) & v64)) & v64, (v63 + v6 + (((unint64_t)v48 + v65) & v64)) & v64, v66);
      LOBYTE(v49) = 2;
    }
    else
    {
      *v47 = *v48;
      if (v49 != 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)v47 + v65) & v64, ((unint64_t)v48 + v65) & v64, v66);
        LOBYTE(v49) = 0;
      }
    }
    v38 = 0;
    *((_BYTE *)v47 + v12) = v49;
    v36 = (uint64_t)v47 + v12 + 8;
    v37 = (uint64_t)v48 + v12 + 8;
  }
  v52 = (_QWORD *)(v36 & 0xFFFFFFFFFFFFF8);
  v53 = (_QWORD *)(v37 & 0xFFFFFFFFFFFFFFF8);
  *v52 = *v53;
  *(_QWORD *)(((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFF8);
  *(_BYTE *)(v3 + v67) = v38;
  return v3;
}

uint64_t sub_1A4472648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(unint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, uint64_t);
  unint64_t v38;
  unsigned int v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(unint64_t, unint64_t, uint64_t);
  unint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  void (*v69)(unint64_t, unint64_t, uint64_t);
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;

  if (a1 == a2)
    return a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v7 | 7;
  v9 = ~(v7 | 7);
  v10 = v7 + 8;
  v11 = *(_QWORD *)(v6 + 64);
  v12 = ((v7 + 8) & ~v7) + v11;
  v79 = v11;
  if (v12 <= ((v12 + v7) & ~v7) + v11)
    v12 = ((v12 + v7) & ~v7) + v11;
  if (v12 <= 8)
    v13 = 8;
  else
    v13 = v12;
  v14 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v15 = v14 + (((v7 | 7) + 17) & ~(v7 | 7));
  v81 = v14;
  if (v15 <= ((v15 + v8) & ~v8) + v14)
    v15 = ((v15 + v8) & ~v8) + v14;
  v16 = *(unsigned __int8 *)(a1 + v15);
  v83 = v15;
  v17 = v15 & 0xFFFFFFF8;
  if (v16 >= 2 && v17 != 0)
    v16 = *(_DWORD *)a1 + 2;
  v82 = ~v7;
  v80 = a1 + v8 + 17;
  v19 = v80 & v9;
  v20 = *(unsigned __int8 *)((v80 & v9) + v13);
  if (v16 == 1)
  {
    if (v20 >= 3)
    {
      if (v13 <= 3)
        v21 = v13;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 != 2)
    {
      if (v20 != 1)
      {
        v23 = v10 + v19;
LABEL_42:
        (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v23 & v82, v5);
LABEL_45:
        v9 = ~(v7 | 7);
        goto LABEL_46;
      }
      goto LABEL_46;
    }
    v24 = v10 + v19;
LABEL_44:
    v76 = v10;
    v34 = v6;
    v35 = v5;
    v36 = v24 & v82;
    v74 = v17;
    v37 = *(void (**)(unint64_t, uint64_t))(v34 + 8);
    v37(v24 & v82, v35);
    v38 = v79 + v7 + v36;
    v5 = v35;
    v6 = v34;
    v10 = v76;
    v37(v38 & v82, v5);
    v17 = v74;
    goto LABEL_45;
  }
  if (v20 >= 3)
  {
    if (v13 <= 3)
      v22 = v13;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  if (v20 == 2)
  {
    v25 = v10 + v19;
    v78 = (_QWORD *)(v80 & v9);
    v26 = *(_QWORD *)(v5 - 8);
    v27 = *(_QWORD *)(a3 + 16);
    v28 = v25 & v82;
    v73 = v17;
    v29 = *(void (**)(unint64_t, uint64_t))(v26 + 8);
    v29(v25 & v82, v27);
    v30 = v79 + v7 + v28;
    v5 = v27;
    v6 = v26;
    v10 = v7 + 8;
    v19 = (uint64_t)v78;
    v29(v30 & v82, v5);
    v17 = v73;
  }
  else
  {
    if (v20 == 1)
      goto LABEL_34;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))((v10 + v19) & v82, v5);
  }
  v9 = ~(v7 | 7);
LABEL_34:
  v31 = ((v80 | v7) + v81) & v9;
  v32 = *(unsigned __int8 *)(v31 + v13);
  if (v32 >= 3)
  {
    if (v13 <= 3)
      v33 = v13;
    else
      v33 = 4;
    __asm { BR              X13 }
  }
  if (v32 == 2)
  {
    v24 = v10 + v31;
    goto LABEL_44;
  }
  if (v32 != 1)
  {
    v23 = v10 + v31;
    goto LABEL_42;
  }
LABEL_46:
  v39 = *(unsigned __int8 *)(a2 + v83);
  if (v17)
    v40 = v39 >= 2;
  else
    v40 = 0;
  if (v40)
    v39 = *(_DWORD *)a2 + 2;
  v41 = v13 + 1;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v42 = a2 + v8 + 17;
  v43 = v42 & v9;
  v44 = *(unsigned __int8 *)((v42 & v9) + v13);
  if (v39 == 1)
  {
    if (v44 >= 3)
    {
      if (v13 <= 3)
        v45 = v13;
      else
        v45 = 4;
      __asm { BR              X12 }
    }
    if (v44 == 2)
    {
      *(_QWORD *)v19 = *(_QWORD *)v43;
      v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
      v48((v10 + v19) & v82, (v10 + v43) & v82, v5);
      v48((v79 + v7 + ((v10 + v19) & v82)) & v82, (v79 + v7 + ((v10 + v43) & v82)) & v82, v5);
      v41 = v13 + 1;
      v47 = 2;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v43;
      if (v44 == 1)
      {
        v47 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))((v10 + v19) & v82, (v10 + v43) & v82, v5);
        v47 = 0;
        v41 = v13 + 1;
      }
    }
    *(_BYTE *)(v19 + v13) = v47;
    v49 = (v19 | 7) + v41;
    v50 = (v43 | 7) + v41;
    v51 = 1;
  }
  else
  {
    if (v44 >= 3)
    {
      if (v13 <= 3)
        v46 = v13;
      else
        v46 = 4;
      __asm { BR              X12 }
    }
    if (v44 == 2)
    {
      *(_QWORD *)v19 = *(_QWORD *)v43;
      v77 = v10;
      v53 = (v10 + v19) & v82;
      v54 = v10 + v43;
      v55 = v5;
      v56 = v54 & v82;
      v75 = v6;
      v57 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
      v57(v53, v54 & v82, v55);
      v58 = v79 + v7 + v56;
      v5 = v55;
      v10 = v77;
      v57((v79 + v7 + v53) & v82, v58 & v82, v5);
      v41 = v13 + 1;
      v6 = v75;
      v9 = ~(v7 | 7);
      v52 = 2;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v43;
      if (v44 == 1)
      {
        v52 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))((v10 + v19) & v82, (v10 + v43) & v82, v5);
        v52 = 0;
        v9 = ~(v7 | 7);
        v41 = v13 + 1;
      }
    }
    *(_BYTE *)(v19 + v13) = v52;
    v59 = (_QWORD *)(((v19 | 7) + v41) & 0xFFFFFFFFFFFFF8);
    v60 = (_QWORD *)(((v43 | 7) + v41) & 0xFFFFFFFFFFFFFFF8);
    *v59 = *v60;
    *(_QWORD *)(((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFF8);
    v61 = (_QWORD *)(((v80 | v7) + v81) & v9);
    v62 = (_QWORD *)(((v42 | v7) + v81) & v9);
    v63 = *((unsigned __int8 *)v62 + v13);
    if (v63 >= 3)
    {
      if (v13 <= 3)
        v64 = v13;
      else
        v64 = 4;
      __asm { BR              X12 }
    }
    if (v63 == 2)
    {
      *v61 = *v62;
      v65 = ((unint64_t)v61 + v10) & v82;
      v66 = (unint64_t)v62 + v10;
      v67 = v5;
      v68 = v66 & v82;
      v69 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
      v69(v65, v66 & v82, v67);
      v69((v79 + v7 + v65) & v82, (v79 + v7 + v68) & v82, v67);
      LOBYTE(v63) = 2;
    }
    else
    {
      *v61 = *v62;
      if (v63 != 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)v61 + v10) & v82, ((unint64_t)v62 + v10) & v82, v5);
        LOBYTE(v63) = 0;
      }
    }
    v51 = 0;
    *((_BYTE *)v61 + v13) = v63;
    v49 = (uint64_t)v61 + v13 + 8;
    v50 = (uint64_t)v62 + v13 + 8;
  }
  v70 = (_QWORD *)(v49 & 0xFFFFFFFFFFFFF8);
  v71 = (_QWORD *)(v50 & 0xFFFFFFFFFFFFFFF8);
  *v70 = *v71;
  *(_QWORD *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFF8);
  *(_BYTE *)(a1 + v83) = v51;
  return a1;
}

uint64_t sub_1A4472E44(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v15;
  unsigned int v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = v4 | 7;
  v6 = ((v4 | 7) + 17) & ~(v4 | 7);
  v7 = *(_QWORD *)(v3 + 64);
  v8 = ((v4 + 8) & ~v4) + v7;
  v9 = ((v8 + v4) & ~v4) + v7;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v9 = 8;
  v10 = (((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v11 = v10 + v6;
  v12 = ((v10 + v6 + v5) & ~v5) + v10;
  if (v11 > v12)
    v12 = v11;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_22;
  v13 = v12 | 1;
  if ((v12 | 1) <= 3)
  {
    v15 = (a2 + ~(-1 << (8 * (v12 | 1))) - 254) >> (8 * (v12 | 1));
    if (v15 > 0xFFFE)
    {
      if (!*(_DWORD *)(a1 + v13))
        goto LABEL_22;
      goto LABEL_18;
    }
    if (v15 > 0xFE)
    {
      if (!*(_WORD *)(a1 + v13))
        goto LABEL_22;
      goto LABEL_18;
    }
    if (!v15)
    {
LABEL_22:
      v16 = *(unsigned __int8 *)(a1 + v12);
      if (v16 >= 2)
        return (v16 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  if (!*(_BYTE *)(a1 + v13))
    goto LABEL_22;
LABEL_18:
  if (v13 > 3)
    LODWORD(v13) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A4472F54 + 4 * byte_1A4696D2B[(v13 - 1)]))();
}

void sub_1A4472FA0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v6 | 7;
  v8 = ((v6 | 7) + 17) & ~(v6 | 7);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = ((v6 + 8) & ~v6) + v9;
  v11 = ((v10 + v6) & ~v6) + v9;
  if (v10 > v11)
    v11 = v10;
  if (v11 <= 8)
    v11 = 8;
  v12 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v13 = v12 + v8;
  v14 = ((v12 + v8 + v7) & ~v7) + v12;
  if (v13 > v14)
    v14 = v13;
  v15 = v14 | 1;
  if (a3 < 0xFF)
  {
    v16 = 0u;
  }
  else if (v15 <= 3)
  {
    v18 = (a3 + ~(-1 << (8 * v15)) - 254) >> (8 * v15);
    if (v18 > 0xFFFE)
    {
      v16 = 4u;
    }
    else if (v18 >= 0xFF)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 != 0;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v17 = a2 - 255;
  if (v15 < 4)
  {
    v19 = v17 & ~(-1 << (8 * v15));
    bzero(a1, v15);
    if ((_DWORD)v15 == 1)
    {
      *a1 = v19;
    }
    else
    {
      *(_WORD *)a1 = v19;
      a1[2] = BYTE2(v19);
    }
  }
  else
  {
    bzero(a1, v14 | 1);
    *(_DWORD *)a1 = v17;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A447318C(_DWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = v3 | 7;
  v5 = ((v3 | 7) + 17) & ~(v3 | 7);
  v6 = *(_QWORD *)(v2 + 64);
  v7 = ((v3 + 8) & ~v3) + v6;
  v8 = ((v7 + v3) & ~v3) + v6;
  if (v7 > v8)
    v8 = v7;
  if (v8 <= 8)
    v8 = 8;
  v9 = (((v8 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v10 = v9 + v5;
  v11 = ((v9 + v5 + v4) & ~v4) + v9;
  if (v10 <= v11)
    v10 = v11;
  v12 = *((unsigned __int8 *)a1 + v10);
  v13 = v10 & 0xFFFFFFF8;
  if (v12 >= 2 && v13 != 0)
    return (*a1 + 2);
  return v12;
}

void sub_1A4473220(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  size_t v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = v5 | 7;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = ((v5 | 7) + 17) & ~(v5 | 7);
  v9 = ((v5 + 8) & ~v5) + v7;
  v10 = ((v9 + v5) & ~v5) + v7;
  if (a2 > 1)
  {
    if (v9 > v10)
      v10 = v9;
    if (v10 <= 8)
      v10 = 8;
    v13 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    v14 = ((v13 + v8 + v6) & ~v6) + v13;
    if (v13 + v8 > v14)
      v14 = v13 + v8;
    v15 = a2 - 2;
    a1[v14] = 2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v15;
  }
  else
  {
    if (v9 > v10)
      v10 = v9;
    if (v10 <= 8)
      v10 = 8;
    v11 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    v12 = ((v11 + v8 + v6) & ~v6) + v11;
    if (v11 + v8 > v12)
      v12 = v11 + v8;
    a1[v12] = a2;
  }
}

id REMMembership.toJSON()@<X0>(unint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t inited;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  unint64_t v26;
  id v27;
  void *v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  id result;
  char v35;
  unint64_t *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;

  v2 = v1;
  v39 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1A46900B4();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A46900FC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4696430;
  *(_QWORD *)(inited + 32) = 0x44497265626D656DLL;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  v15 = objc_msgSend(v1, sel_memberIdentifier);
  sub_1A46900F0();

  v16 = sub_1A46900CC();
  v18 = v17;
  v37 = *(void (**)(char *, uint64_t))(v9 + 8);
  v37(v13, v8);
  v19 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v16;
  *(_QWORD *)(inited + 56) = v18;
  v20 = v19;
  *(_QWORD *)(inited + 72) = v19;
  *(_QWORD *)(inited + 80) = 0x6465696669646F6DLL;
  *(_QWORD *)(inited + 88) = 0xEA00000000006E4FLL;
  v21 = objc_msgSend(v2, sel_modifiedOn);
  sub_1A4690084();

  sub_1A468FFE8();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 96) = v23;
  v24 = inited;
  v25 = v2;
  v26 = sub_1A443CDB8(v24);
  v27 = objc_msgSend(v25, sel_groupIdentifier);
  if (v27)
  {
    v28 = v27;
    sub_1A46900F0();

    v29 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v29(v5, v13, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    {
      v30 = v38;
      v29(v38, v5, v8);
      v31 = sub_1A46900CC();
      v45 = v20;
      *(_QWORD *)&v44 = v31;
      *((_QWORD *)&v44 + 1) = v32;
      sub_1A444A940(&v44, v43);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = v26;
      sub_1A445DFA4(v43, 0x444970756F7267, 0xE700000000000000, isUniquelyReferenced_nonNull_native);
      v26 = v42;
      swift_bridgeObjectRelease();
      v37(v30, v8);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5, 1, 1, v8);
  }
  sub_1A4473730((uint64_t)v5);
LABEL_6:
  result = objc_msgSend(v25, sel_isObsolete);
  if ((_DWORD)result)
  {
    v45 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v44) = 1;
    sub_1A444A940(&v44, v43);
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v42 = v26;
    sub_1A445DFA4(v43, 0x656C6F73624F7369, 0xEA00000000006574, v35);
    v26 = v42;
    result = (id)swift_bridgeObjectRelease();
  }
  v36 = v39;
  *v39 = v26;
  *((_BYTE *)v36 + 8) = 0;
  return result;
}

uint64_t sub_1A4473730(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_BYTE *static REMMembership.fromJSON(_:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void *v47;
  unsigned int v48;
  void *v49;
  id v50;
  char *v51;
  void *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD v65[2];
  _OWORD v66[2];
  _OWORD v67[2];
  _OWORD v68[2];
  char *v69;

  v2 = sub_1A46900B4();
  v62 = *(_QWORD *)(v2 - 8);
  v63 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v60 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)&v56 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v56 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v61 = (char *)&v56 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v56 - v15;
  v17 = sub_1A46900FC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v56 - v22;
  if ((a1[8] & 1) != 0)
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_QWORD *)v24 = 0;
    *(_QWORD *)(v24 + 8) = 0;
    v25 = 3;
LABEL_10:
    *(_BYTE *)(v24 + 16) = v25;
    swift_willThrow();
    return a1;
  }
  a1 = *(_BYTE **)a1;
  if (!*((_QWORD *)a1 + 2) || (v26 = sub_1A443E4C8(0x44497265626D656DLL, 0xE800000000000000), (v27 & 1) == 0))
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_OWORD *)v24 = xmmword_1A4696E60;
    v25 = 1;
    goto LABEL_10;
  }
  sub_1A44311F0(*((_QWORD *)a1 + 7) + 32 * v26, (uint64_t)v67);
  sub_1A444A940(v67, v68);
  sub_1A44311F0((uint64_t)v68, (uint64_t)v67);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_8;
  v59 = v23;
  v28 = v17;
  sub_1A46900C0();
  swift_bridgeObjectRelease();
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v29(v16, 1, v28) == 1)
  {
    sub_1A4473730((uint64_t)v16);
LABEL_8:
    sub_1A4473FBC();
    swift_allocError();
    *(_OWORD *)v30 = xmmword_1A4696E60;
    *(_BYTE *)(v30 + 16) = 2;
    swift_willThrow();
LABEL_23:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    return a1;
  }
  v58 = v18;
  v32 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v33 = v16;
  v34 = v28;
  v32(v59, v33, v28);
  if (!*((_QWORD *)a1 + 2) || (v35 = sub_1A443E4C8(0x6465696669646F6DLL, 0xEA00000000006E4FLL), (v36 & 1) == 0))
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_OWORD *)v42 = xmmword_1A4696E30;
    *(_BYTE *)(v42 + 16) = 1;
    swift_willThrow();
LABEL_22:
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v28);
    goto LABEL_23;
  }
  sub_1A44311F0(*((_QWORD *)a1 + 7) + 32 * v35, (uint64_t)v66);
  sub_1A444A940(v66, v67);
  sub_1A44311F0((uint64_t)v67, (uint64_t)v66);
  if (!swift_dynamicCast())
  {
    sub_1A4473FBC();
    swift_allocError();
    *(_OWORD *)v43 = xmmword_1A4696E30;
    *(_BYTE *)(v43 + 16) = 2;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    goto LABEL_22;
  }
  v37 = v32;
  sub_1A468FFDC();
  v38 = v58;
  if (*((_QWORD *)a1 + 2) && (v39 = sub_1A443E4C8(0x444970756F7267, 0xE700000000000000), (v40 & 1) != 0))
  {
    sub_1A44311F0(*((_QWORD *)a1 + 7) + 32 * v39, (uint64_t)v65);
    sub_1A444A940(v65, v66);
    sub_1A44311F0((uint64_t)v66, (uint64_t)v65);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_20:
      sub_1A4473FBC();
      swift_allocError();
      *(_OWORD *)v41 = xmmword_1A4696E40;
      *(_BYTE *)(v41 + 16) = 2;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
LABEL_36:
      (*(void (**)(char *, uint64_t))(v62 + 8))(v69, v63);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v34);
      goto LABEL_23;
    }
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    if (v29(v12, 1, v34) == 1)
    {
      sub_1A4473730((uint64_t)v12);
      v38 = v58;
      goto LABEL_20;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
    v37(v21, v12, v34);
    v44 = (uint64_t)v61;
    v37(v61, v21, v34);
    v38 = v58;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v44, 0, 1, v34);
  }
  else
  {
    v44 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v61, 1, 1, v34);
  }
  if (*((_QWORD *)a1 + 2) && (v45 = sub_1A443E4C8(0x656C6F73624F7369, 0xEA00000000006574), (v46 & 1) != 0))
  {
    sub_1A44311F0(*((_QWORD *)a1 + 7) + 32 * v45, (uint64_t)v65);
    sub_1A444A940(v65, v66);
    sub_1A44311F0((uint64_t)v66, (uint64_t)v65);
    if (!swift_dynamicCast())
    {
      sub_1A4473FBC();
      swift_allocError();
      *(_OWORD *)v55 = xmmword_1A4696E50;
      *(_BYTE *)(v55 + 16) = 2;
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
      sub_1A4473730(v44);
      goto LABEL_36;
    }
    LODWORD(v58) = v64;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  }
  else
  {
    LODWORD(v58) = 0;
  }
  sub_1A4474000(v44, (uint64_t)v9);
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v60, v69, v63);
  v47 = (void *)sub_1A46900D8();
  v48 = v29(v9, 1, v34);
  v57 = v34;
  if (v48 == 1)
  {
    v49 = 0;
  }
  else
  {
    v49 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v34);
  }
  v50 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v51 = v60;
  v52 = (void *)sub_1A4690030();
  a1 = objc_msgSend(v50, sel_initWithMemberIdentifier_groupIdentifier_isObsolete_modifiedOn_, v47, v49, v58, v52);

  v53 = v63;
  v54 = *(void (**)(char *, uint64_t))(v62 + 8);
  v54(v51, v63);
  sub_1A4473730((uint64_t)v61);
  v54(v69, v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v59, v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  return a1;
}

id sub_1A4473F74@<X0>(unint64_t *a1@<X8>)
{
  return REMMembership.toJSON()(a1);
}

_BYTE *sub_1A4473F94@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _BYTE *result;

  result = static REMMembership.fromJSON(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1A4473FBC()
{
  unint64_t result;

  result = qword_1EE71D1A0;
  if (!qword_1EE71D1A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMJSONDeserializationError, &type metadata for REMJSONDeserializationError);
    atomic_store(result, (unint64_t *)&qword_1EE71D1A0);
  }
  return result;
}

uint64_t sub_1A4474000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.predicateVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

id REMRemindersInCalendarDataView.FetchResultToken.token.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.init(dataRepresentation:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  sub_1A468FE20();
  swift_allocObject();
  sub_1A468FE14();
  sub_1A447410C();
  sub_1A468FDFC();
  sub_1A44695EC(a1, a2);
  result = swift_release();
  if (!v3)
  {
    *a3 = v8;
    a3[1] = v9;
  }
  return result;
}

unint64_t sub_1A447410C()
{
  unint64_t result;

  result = qword_1ED23FB18;
  if (!qword_1ED23FB18)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.FetchResultToken, &type metadata for REMRemindersInCalendarDataView.FetchResultToken);
    atomic_store(result, (unint64_t *)&qword_1ED23FB18);
  }
  return result;
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.dataRepresentation()()
{
  uint64_t v0;

  sub_1A468FE50();
  swift_allocObject();
  sub_1A468FE44();
  sub_1A44741E0();
  v0 = sub_1A468FE2C();
  swift_release();
  return v0;
}

unint64_t sub_1A44741E0()
{
  unint64_t result;

  result = qword_1ED23FB10;
  if (!qword_1ED23FB10)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.FetchResultToken, &type metadata for REMRemindersInCalendarDataView.FetchResultToken);
    atomic_store(result, (unint64_t *)&qword_1ED23FB10);
  }
  return result;
}

uint64_t static REMRemindersInCalendarDataView.FetchResultToken.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
  return sub_1A4691140() & 1;
}

uint64_t sub_1A4474294()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656B6F74;
  else
    return 0xD000000000000010;
}

uint64_t sub_1A44742D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4495AC4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A44742F4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A4474300()
{
  sub_1A44744A8();
  return sub_1A4691DB8();
}

uint64_t sub_1A4474328()
{
  sub_1A44744A8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44744A8();
  sub_1A4691D40();
  v11 = 0;
  sub_1A4691878();
  if (!v2)
  {
    v9[1] = v9[0];
    v10 = 1;
    type metadata accessor for REMFetchResultToken_Codable();
    sub_1A4436344(&qword_1ED23FAC0, (uint64_t (*)(uint64_t))type metadata accessor for REMFetchResultToken_Codable, (uint64_t)&protocol conformance descriptor for REMFetchResultToken_Codable);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A44744A8()
{
  unint64_t result;

  result = qword_1ED23FAF8;
  if (!qword_1ED23FAF8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697900, &type metadata for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23FAF8);
  }
  return result;
}

uint64_t REMRemindersInCalendarDataView.FetchResultToken.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44744A8();
  sub_1A4691D28();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_1A46917AC();
    type metadata accessor for REMFetchResultToken_Codable();
    v13 = 1;
    sub_1A4436344(&qword_1ED23FAC8, (uint64_t (*)(uint64_t))type metadata accessor for REMFetchResultToken_Codable, (uint64_t)&protocol conformance descriptor for REMFetchResultToken_Codable);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4474670@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMRemindersInCalendarDataView.FetchResultToken.init(from:)(a1, a2);
}

uint64_t sub_1A4474684(_QWORD *a1)
{
  return REMRemindersInCalendarDataView.FetchResultToken.encode(to:)(a1);
}

uint64_t sub_1A4474698(_QWORD *a1, _QWORD *a2)
{
  if (*a1 != *a2)
    return 0;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
  return sub_1A4691140() & 1;
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.matchedReminderIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.removedReminderIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.updatedListIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.init(matchedReminderIDs:removedReminderIDs:updatedListIDs:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

void static REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  sub_1A4464060(*a1, *a2);
  if ((v6 & 1) != 0)
  {
    sub_1A4464060(v2, v4);
    if ((v7 & 1) != 0)
      sub_1A4464060(v3, v5);
  }
}

unint64_t sub_1A4474790()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x4C64657461647075;
  if (*v0 == 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0xD000000000000012;
}

uint64_t sub_1A44747F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4495BA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A447481C()
{
  sub_1A4474A18();
  return sub_1A4691DB8();
}

uint64_t sub_1A4474844()
{
  sub_1A4474A18();
  return sub_1A4691DC4();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4474A18();
  sub_1A4691D40();
  v16 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  sub_1A4474CE4((unint64_t *)&qword_1ED2439E0, &qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3B8]);
  sub_1A4691890();
  if (!v2)
  {
    v10 = v13;
    v16 = v14;
    v15 = 1;
    sub_1A4691890();
    v16 = v10;
    v15 = 2;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A4474A18()
{
  unint64_t result;

  result = qword_1ED241598;
  if (!qword_1ED241598)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46978B0, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241598);
  }
  return result;
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB20);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4474A18();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  v17 = 0;
  sub_1A4474CE4((unint64_t *)&qword_1ED2440C8, &qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3D8]);
  sub_1A46917C4();
  v9 = v18;
  v17 = 1;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v17 = 2;
  v15 = v18;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v15;
  v11 = v16;
  *v16 = v9;
  v11[1] = v12;
  v11[2] = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4474CE4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2440C0);
    v10 = sub_1A4436344(a2, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, a3);
    result = MEMORY[0x1A85A0000](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4474D68@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.init(from:)(a1, a2);
}

uint64_t sub_1A4474D7C(_QWORD *a1)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.encode(to:)(a1);
}

void sub_1A4474D90(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a2[1];
  v5 = a2[2];
  sub_1A4464060(*a1, *a2);
  if ((v6 & 1) != 0)
  {
    sub_1A4464060(v2, v4);
    if ((v7 & 1) != 0)
      sub_1A4464060(v3, v5);
  }
}

BOOL sub_1A4474E00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A4474E18()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656D6572636E69;
  else
    return 0x64616F6C6572;
}

uint64_t sub_1A4474E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4495D14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4474E7C()
{
  sub_1A449449C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4474EA4()
{
  sub_1A449449C();
  return sub_1A4691DC4();
}

uint64_t sub_1A4474ED4()
{
  return 12383;
}

uint64_t sub_1A4474EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1A4474F5C(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A4474F68()
{
  sub_1A44944E0();
  return sub_1A4691DB8();
}

uint64_t sub_1A4474F90()
{
  sub_1A44944E0();
  return sub_1A4691DC4();
}

unint64_t sub_1A4474FB8()
{
  return 0xD000000000000012;
}

uint64_t sub_1A4474FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4495E14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A4474FFC()
{
  sub_1A4494568();
  return sub_1A4691DB8();
}

uint64_t sub_1A4475024()
{
  sub_1A4494568();
  return sub_1A4691DC4();
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB90);
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB88);
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB80);
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *v1;
  v12 = v1[1];
  v18 = v1[2];
  v19 = v12;
  v13 = *((_BYTE *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449449C();
  sub_1A4691D40();
  if ((v13 & 1) != 0)
  {
    LOBYTE(v26) = 1;
    sub_1A44944E0();
    sub_1A469180C();
    v26 = v24;
    v27 = v19;
    v28 = v18;
    sub_1A4494524();
    v14 = v23;
    sub_1A4691890();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v14);
  }
  else
  {
    LOBYTE(v26) = 0;
    sub_1A4494568();
    sub_1A469180C();
    v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
    sub_1A4474CE4((unint64_t *)&qword_1ED2439E0, &qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3B8]);
    v15 = v21;
    sub_1A4691890();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v9);
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  _QWORD *v25;
  _BYTE v26[4];
  int v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;

  v29 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB38);
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v31 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB30);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB28);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = a1[3];
  v33 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1A449449C();
  v13 = v36;
  sub_1A4691D28();
  if (!v13)
  {
    v28 = v5;
    v15 = v31;
    v14 = v32;
    v36 = v9;
    v16 = sub_1A46917DC();
    v17 = v16;
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      v27 = *(unsigned __int8 *)(v16 + 32);
      if ((v27 & 1) != 0)
      {
        LOBYTE(v34) = 1;
        sub_1A44944E0();
        sub_1A4691734();
        sub_1A44945AC();
        sub_1A46917C4();
        (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v15, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v11, v8);
        v18 = v34;
        v19 = v35;
      }
      else
      {
        LOBYTE(v34) = 0;
        sub_1A4494568();
        sub_1A4691734();
        v32 = v17;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
        sub_1A4474CE4((unint64_t *)&qword_1ED2440C8, &qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3D8]);
        sub_1A46917C4();
        v24 = v36;
        (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v7, v4);
        swift_bridgeObjectRelease();
        (*(void (**)(_BYTE *, uint64_t))(v24 + 8))(v11, v8);
        v18 = v34;
        v19 = 0uLL;
      }
      v25 = v29;
      *v29 = v18;
      *(_OWORD *)(v25 + 1) = v19;
      *((_BYTE *)v25 + 24) = v27;
    }
    else
    {
      v20 = sub_1A46914B8();
      swift_allocError();
      v22 = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
      *v22 = &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult;
      sub_1A4691740();
      sub_1A46914A0();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC450], v20);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
}

uint64_t sub_1A44756DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.init(from:)(a1, a2);
}

uint64_t sub_1A44756F0(_QWORD *a1)
{
  return REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.encode(to:)(a1);
}

uint64_t REMRemindersInCalendarDataView.RemindersInCalendarResult.remindersResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return sub_1A44945F0(v2, v3, v4, v5);
}

id REMRemindersInCalendarDataView.RemindersInCalendarResult.latestFetchResultToken.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  return v2;
}

__n128 REMRemindersInCalendarDataView.RemindersInCalendarResult.init(remindersResult:latestFetchResultToken:)@<Q0>(__n128 *a1@<X0>, unint64_t *a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = *a2;
  v6 = a2[1];
  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  a3[2].n128_u64[0] = v5;
  a3[2].n128_u64[1] = v6;
  return result;
}

void static REMRemindersInCalendarDataView.fetchRemindersInCalendar(store:diffingAgainst:)(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  char v20;
  objc_super v21;
  objc_super v22;
  uint64_t v23[3];
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;

  v4 = a1[1];
  if (v4)
  {
    v5 = *a1;
    v6 = a1[1];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v4 == 0;
  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersInCalendarDataView.Invocation()), sel_initWithFetchResultTokenToDiffAgainst_, v6);
  sub_1A4475A18((uint64_t)v8, v5, v7, v23);
  if (v2)
    goto LABEL_5;
  v10 = v23[0];
  v9 = v23[1];
  v11 = v23[2];
  v12 = v24;
  v13 = v26;
  if (!v26)
  {
    v18 = (void *)objc_opt_self();
    v19 = (void *)sub_1A469087C();
    objc_msgSend(v18, sel_internalErrorWithDebugDescription_, v19);

    swift_willThrow();
    sub_1A4494644(v10, v9, v11, v12);
LABEL_5:

    return;
  }
  v27 = v25;
  v21.super_class = (Class)type metadata accessor for REMFetchResultToken_Codable();
  v21.receiver = objc_allocWithZone(v21.super_class);
  v14 = v13;
  sub_1A44945F0(v10, v9, v11, v12);
  v15 = objc_msgSend(v14, sel_persistentHistoryTokens);
  sub_1A444AA40(0, &qword_1ED2402E0);
  v20 = v12;
  sub_1A4690708();

  v16 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v22 = v21;
  v17 = objc_msgSendSuper2(&v22, sel_initWithPersistentHistoryTokens_, v16);

  sub_1A4494644(v10, v9, v11, v20);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v11;
  *(_BYTE *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v17;
}

ReminderKitInternal::REMRemindersInCalendarDataView::Invocation::Parameters __swiftcall REMRemindersInCalendarDataView.Invocation.Parameters.init(lastFetchPredicateVersion:)(ReminderKitInternal::REMRemindersInCalendarDataView::Invocation::Parameters lastFetchPredicateVersion)
{
  uint64_t v1;

  *(_QWORD *)v1 = lastFetchPredicateVersion.lastFetchPredicateVersion.value;
  *(_BYTE *)(v1 + 8) = lastFetchPredicateVersion.lastFetchPredicateVersion.is_nil;
  return lastFetchPredicateVersion;
}

id REMRemindersInCalendarDataView.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

void sub_1A4475A18(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  void (*v60)(_QWORD *, _QWORD);
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  id v70;
  id v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  id v92[6];
  _QWORD v93[5];
  char v94;
  void *v95;

  v5 = v4;
  v82 = a1;
  v81 = a4;
  v8 = sub_1A46915B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v85 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93[4] = a2;
  v94 = a3 & 1;
  v95 = v5;
  sub_1A468FE50();
  swift_allocObject();
  v11 = sub_1A468FE44();
  v12 = v5;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v84 = type metadata accessor for REMStoreObjectsContainer();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v16 = (uint64_t)v15;
  v15[3] = v14;
  v17 = v15 + 3;
  v15[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED243F48);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20 = (uint64_t)v85;
  v19(v85, v18, v8);
  v89 = v84;
  v86 = (_QWORD *)v16;
  swift_retain();
  v21 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v86, v20);
  v21(v93, 0);
  sub_1A44947F0();
  v22 = v83;
  v23 = sub_1A468FE2C();
  if (v22)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v25 = sub_1A4690318();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE721AB0);
    v26 = v22;
    v27 = v22;
    v28 = sub_1A469030C();
    v29 = sub_1A4690FF0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v83 = (void *)v11;
      v31 = v30;
      v32 = swift_slowAlloc();
      v86 = (_QWORD *)v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v33 = Error.rem_errorDescription.getter((uint64_t)v92[5]);
      v93[0] = sub_1A4431120(v33, v34, (uint64_t *)&v86);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      v93[0] = type metadata accessor for REMRemindersInCalendarDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FAF0);
      v35 = sub_1A46908E8();
      v93[0] = sub_1A4431120(v35, v36, (uint64_t *)&v86);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v32, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v37 = v23;
    v38 = v24;
    v76 = v18;
    v77 = v19;
    v78 = v8;
    v79 = v16;
    v83 = (void *)v11;
    swift_beginAccess();
    v39 = *v17;
    v40 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v37, v38);
    swift_bridgeObjectRetain();
    v92[0] = objc_msgSend(v40, sel_init);
    v41 = type metadata accessor for REMRemindersInCalendarDataView.Invocation();
    v86 = (_QWORD *)v41;
    v42 = v38;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FAF0);
    v44 = sub_1A46908E8();
    v46 = v45;
    v80 = &v73;
    MEMORY[0x1E0C80A78](v44);
    v47 = v42;
    *(&v73 - 6) = (uint64_t)v92;
    *(&v73 - 5) = (uint64_t)&v95;
    *(&v73 - 4) = v82;
    *(&v73 - 3) = v48;
    v49 = v48;
    v50 = v47;
    *(&v73 - 2) = v47;
    *(&v73 - 1) = v39;
    v51 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v44, v46, v51, (char *)sub_1A4496070, (uint64_t)(&v73 - 8));
    v75 = v43;
    v82 = v41;
    sub_1A44695EC(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v52 = objc_msgSend(v92[0], sel_resultStorages);
    v53 = sub_1A4690708();

    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v86 = (_QWORD *)v53;
    sub_1A44311F0((uint64_t)&v86, (uint64_t)v93);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v74 = v49;
      v80 = (uint64_t *)v50;
      v54 = v91;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);
      v55 = v95;
      v56 = v84;
      v57 = (_QWORD *)swift_allocObject();
      v57[2] = v55;
      v57[3] = v54;
      v58 = v55;
      v57[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v59 = (uint64_t)v85;
      v77(v85, v76, v78);
      v89 = v56;
      v86 = v57;
      swift_retain();
      v60 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v86, v59);
      v60(v93, 0);
      v61 = v92[0];
      v62 = objc_msgSend(v92[0], sel_resultData);
      v63 = sub_1A468FFC4();
      v65 = v64;

      sub_1A4494838();
      sub_1A468FDFC();
      sub_1A44695EC(v63, v65);
      v66 = (uint64_t)v86;
      v67 = v87;
      v68 = v88;
      v69 = v89;
      v85 = v90;
      sub_1A44945F0((uint64_t)v86, v87, v88, v89);
      v70 = v61;
      v71 = objc_msgSend(v70, sel_latestFetchResultToken);
      sub_1A44695EC(v74, (unint64_t)v80);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A4494644(v66, v67, v68, v69);

      v72 = v81;
      *v81 = v66;
      v72[1] = v67;
      v72[2] = v68;
      *((_BYTE *)v72 + 24) = v69;
      v72[4] = (uint64_t)v85;
      v72[5] = (uint64_t)v71;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v86, (uint64_t)v93);
      sub_1A459A0BC((uint64_t)v93, 0, 0);
      sub_1A4496084((uint64_t)v93);
      swift_willThrow();
      sub_1A44695EC(v49, v50);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v86);

    }
  }
}

void sub_1A4476534(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD);
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  unint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  char *v54;
  id v55;
  uint64_t v56;
  void (*v57)(_QWORD *, _QWORD);
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81[2];
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  id v95[6];
  _QWORD v96[4];
  uint64_t v97[2];
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  char v101;
  void *v102;

  v4 = v3;
  v89 = a1;
  v88 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v92 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[1];
  v99 = *a2;
  v100 = v9;
  v101 = *((_BYTE *)a2 + 32);
  v102 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v10 = sub_1A468FE44();
  v11 = v4;
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v91 = type metadata accessor for REMStoreObjectsContainer();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v15 = (uint64_t)v14;
  v14[3] = v13;
  v16 = v14 + 3;
  v14[4] = sub_1A443CEF8(v12);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19 = (uint64_t)v92;
  v18(v92, v17, v6);
  v98 = v91;
  v97[0] = v15;
  swift_retain();
  v20 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v97, v19);
  v20(v96, 0);
  sub_1A4498320();
  v21 = v90;
  v22 = sub_1A468FE2C();
  if (v21)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE721AB0);
    v25 = v21;
    v26 = v21;
    v27 = sub_1A469030C();
    v28 = sub_1A4690FF0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v90 = (void *)v10;
      v30 = v29;
      v31 = swift_slowAlloc();
      v97[0] = v31;
      *(_DWORD *)v30 = 136315394;
      swift_getErrorValue();
      v32 = Error.rem_errorDescription.getter((uint64_t)v95[5]);
      v96[0] = sub_1A4431120(v32, v33, v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      v96[0] = type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D588);
      v34 = sub_1A46908E8();
      v96[0] = sub_1A4431120(v34, v35, v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v27, v28, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v31, -1, -1);
      MEMORY[0x1A85A0114](v30, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v36 = v22;
    v37 = v23;
    v83 = v17;
    v84 = v18;
    v85 = v6;
    v86 = v15;
    v90 = (void *)v10;
    swift_beginAccess();
    v38 = *v16;
    v39 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v36, v37);
    swift_bridgeObjectRetain();
    v95[0] = objc_msgSend(v39, sel_init);
    v40 = type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation();
    v97[0] = v40;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D588);
    v42 = sub_1A46908E8();
    v44 = v43;
    v87 = v81;
    MEMORY[0x1E0C80A78](v42);
    v81[-6] = (uint64_t)v95;
    v81[-5] = (uint64_t)&v102;
    v81[-4] = v89;
    v81[-3] = v45;
    v46 = v45;
    v81[-2] = v37;
    v81[-1] = v38;
    v47 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v42, v44, v47, (char *)sub_1A4496070, (uint64_t)&v81[-8]);
    v89 = 0;
    v81[1] = v41;
    v82 = v40;
    sub_1A44695EC(v46, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v48 = v37;
    sub_1A468FE14();
    v49 = objc_msgSend(v95[0], sel_resultStorages);
    v50 = sub_1A4690708();

    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v97[0] = v50;
    sub_1A44311F0((uint64_t)v97, (uint64_t)v96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v81[0] = v46;
      v87 = (uint64_t *)v48;
      v51 = v94;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
      v52 = v102;
      v53 = v91;
      v54 = (char *)swift_allocObject();
      *((_QWORD *)v54 + 2) = v52;
      *((_QWORD *)v54 + 3) = v51;
      v55 = v52;
      *((_QWORD *)v54 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v56 = (uint64_t)v92;
      v84(v92, v83, v85);
      v98 = v53;
      v97[0] = (uint64_t)v54;
      swift_retain();
      v57 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v97, v56);
      v57(v96, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
      v58 = v95[0];
      v59 = objc_msgSend(v95[0], sel_resultData);
      v60 = sub_1A468FFC4();
      v62 = v61;

      sub_1A4498364();
      v63 = (void *)v89;
      sub_1A468FDFC();
      if (!v63)
      {
        sub_1A44695EC(v60, v62);
        v75 = v97[0];
        swift_bridgeObjectRetain();
        v76 = v58;
        v77 = objc_msgSend(v76, sel_latestFetchResultToken);
        sub_1A44695EC(v81[0], (unint64_t)v87);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v78 = v88;
        *v88 = v75;
        v78[1] = (uint64_t)v77;
        return;
      }
      v92 = v54;
      sub_1A44695EC(v60, v62);
      if (qword_1EE71C138 != -1)
        swift_once();
      v64 = sub_1A4690318();
      __swift_project_value_buffer(v64, (uint64_t)qword_1EE721AB0);
      v65 = v63;
      v66 = v63;
      v67 = sub_1A469030C();
      v68 = sub_1A4690FF0();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        v97[0] = v70;
        *(_DWORD *)v69 = 136315394;
        swift_getErrorValue();
        v71 = Error.rem_errorDescription.getter(v93);
        v96[0] = sub_1A4431120(v71, v72, v97);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v69 + 12) = 2080;
        v96[0] = v82;
        v73 = sub_1A46908E8();
        v96[0] = sub_1A4431120(v73, v74, v97);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v67, v68, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v70, -1, -1);
        MEMORY[0x1A85A0114](v69, -1, -1);
      }
      else
      {

      }
      v79 = (unint64_t)v87;
      v80 = v81[0];
      swift_willThrow();
      sub_1A44695EC(v80, v79);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v97, (uint64_t)v96);
      sub_1A459A0BC((uint64_t)v96, 0, 0);
      sub_1A4496084((uint64_t)v96);
      swift_willThrow();
      sub_1A44695EC(v46, v48);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
    }

  }
}

void sub_1A4477030(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  id v83[6];
  _QWORD v84[4];
  uint64_t v85[3];
  uint64_t v86;
  _QWORD v87[4];

  v4 = v3;
  v78 = a1;
  v77 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v81 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87[3] = a2;
  v87[0] = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = v4;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v80 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v81;
  v17(v81, v16, v6);
  v86 = v80;
  v85[0] = v14;
  swift_retain();
  v19 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v85, v18);
  v19(v84, 0);
  sub_1A4498298();
  v20 = v79;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v79 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v85[0] = v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v83[5]);
      v84[0] = sub_1A4431120(v31, v32, v85);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v84[0] = type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D570);
      v33 = sub_1A46908E8();
      v84[0] = sub_1A4431120(v33, v34, v85);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v72 = v16;
    v73 = v17;
    v74 = v6;
    v75 = v14;
    v79 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v83[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation();
    v85[0] = v39;
    v40 = v36;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D570);
    v42 = sub_1A46908E8();
    v44 = v43;
    v76 = &v69;
    MEMORY[0x1E0C80A78](v42);
    v45 = v40;
    *(&v69 - 6) = (uint64_t)v83;
    *(&v69 - 5) = (uint64_t)v87;
    *(&v69 - 4) = v78;
    *(&v69 - 3) = v46;
    v47 = v46;
    v48 = v45;
    *(&v69 - 2) = v45;
    *(&v69 - 1) = v37;
    v49 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v42, v44, v49, (char *)sub_1A4496070, (uint64_t)(&v69 - 8));
    v71 = v41;
    v78 = v39;
    sub_1A44695EC(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v50 = objc_msgSend(v83[0], sel_resultStorages);
    v51 = sub_1A4690708();

    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v85[0] = v51;
    sub_1A44311F0((uint64_t)v85, (uint64_t)v84);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v70 = v47;
      v76 = (uint64_t *)v48;
      v52 = v82;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
      v53 = (void *)v87[0];
      v54 = v80;
      v55 = (_QWORD *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      v56 = v53;
      v55[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v57 = (uint64_t)v81;
      v73(v81, v72, v74);
      v86 = v54;
      v85[0] = (uint64_t)v55;
      swift_retain();
      v58 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v85, v57);
      v58(v84, 0);
      v59 = v83[0];
      v60 = objc_msgSend(v83[0], sel_resultData);
      v61 = sub_1A468FFC4();
      v63 = v62;

      sub_1A44982DC();
      sub_1A468FDFC();
      sub_1A44695EC(v61, v63);
      v64 = v85[0];
      v65 = v85[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66 = v59;
      v67 = objc_msgSend(v66, sel_latestFetchResultToken);
      sub_1A44695EC(v70, (unint64_t)v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v68 = v77;
      *v77 = v64;
      v68[1] = v65;
      v68[2] = (uint64_t)v67;
    }
    else
    {
      sub_1A44311F0((uint64_t)v85, (uint64_t)v84);
      sub_1A459A0BC((uint64_t)v84, 0, 0);
      sub_1A4496084((uint64_t)v84);
      swift_willThrow();
      sub_1A44695EC(v47, v48);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);

    }
  }
}

void sub_1A4477B08(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(__int128 *, _QWORD);
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  void (*v45)(__int128 *, _QWORD);
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  unint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  id v88[6];
  void *v89;

  v66 = a1;
  v63 = a2;
  v69 = sub_1A46915B4();
  v3 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v70 = (char *)v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = v2;
  sub_1A468FE50();
  swift_allocObject();
  v5 = sub_1A468FE44();
  v6 = v2;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v68 = type metadata accessor for REMStoreObjectsContainer();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v6;
  v9[3] = v8;
  v9[4] = sub_1A443CEF8(v7);
  if (qword_1ED244118 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v69, (uint64_t)qword_1ED243F48);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12 = (uint64_t)v70;
  v64 = v10;
  v65 = v11;
  ((void (*)(char *))v11)(v70);
  *((_QWORD *)&v80 + 1) = v68;
  *(_QWORD *)&v79 = v9;
  swift_retain();
  v13 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v79, v12);
  v13(&v71, 0);
  type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D550, type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CustomSmartListInvocation.Parameters);
  v14 = v67;
  v15 = sub_1A468FE2C();
  if (v14)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v17 = sub_1A4690318();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EE721AB0);
    v18 = v14;
    v19 = v14;
    v20 = sub_1A469030C();
    v21 = sub_1A4690FF0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v67 = v9;
      v24 = v23;
      *(_QWORD *)&v79 = v23;
      *(_DWORD *)v22 = 136315394;
      swift_getErrorValue();
      v25 = Error.rem_errorDescription.getter((uint64_t)v88[5]);
      *(_QWORD *)&v71 = sub_1A4431120(v25, v26, (uint64_t *)&v79);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v22 + 12) = 2080;
      *(_QWORD *)&v71 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D558);
      v27 = sub_1A46908E8();
      *(_QWORD *)&v71 = sub_1A4431120(v27, v28, (uint64_t *)&v79);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v20, v21, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v24, -1, -1);
      MEMORY[0x1A85A0114](v22, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v29 = v15;
    v30 = v16;
    v67 = v9;
    v62 = v5;
    swift_beginAccess();
    v31 = v9[3];
    v32 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v29, v30);
    swift_bridgeObjectRetain();
    v88[0] = objc_msgSend(v32, sel_init);
    v59 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation();
    *(_QWORD *)&v79 = v59;
    v58[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D558);
    v33 = sub_1A46908E8();
    v35 = v34;
    v60 = v33;
    v61 = v58;
    MEMORY[0x1E0C80A78](v33);
    v58[-6] = v88;
    v58[-5] = &v89;
    v58[-4] = v66;
    v58[-3] = v29;
    v58[-2] = v30;
    v58[-1] = v31;
    v36 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v60, v35, v36, (char *)sub_1A4496070, (uint64_t)&v58[-8]);
    sub_1A44695EC(v29, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v37 = objc_msgSend(v88[0], sel_resultStorages);
    v38 = sub_1A4690708();

    *((_QWORD *)&v80 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    *(_QWORD *)&v79 = v38;
    sub_1A44311F0((uint64_t)&v79, (uint64_t)&v71);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v61 = (_QWORD *)v29;
      v66 = v30;
      v39 = v87;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);
      v40 = v89;
      v41 = v68;
      v42 = (_QWORD *)swift_allocObject();
      v42[2] = v40;
      v42[3] = v39;
      v43 = v40;
      v42[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v44 = (uint64_t)v70;
      v65(v70, v64, v69);
      *((_QWORD *)&v80 + 1) = v41;
      *(_QWORD *)&v79 = v42;
      swift_retain();
      v45 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v79, v44);
      v45(&v71, 0);
      v46 = v88[0];
      v47 = objc_msgSend(v88[0], sel_resultData);
      v48 = sub_1A468FFC4();
      v50 = v49;

      sub_1A44980D0();
      sub_1A468FDFC();
      sub_1A44695EC(v48, v50);
      v75 = v83;
      v76 = v84;
      v77 = v85;
      v78 = v86;
      v71 = v79;
      v72 = v80;
      v73 = v81;
      v74 = v82;
      sub_1A4498114((uint64_t)&v71);
      v51 = v46;
      v52 = objc_msgSend(v51, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v61, v66);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A44981D4((uint64_t)&v71);

      v53 = v76;
      v54 = v63;
      *(_OWORD *)(v63 + 64) = v75;
      *(_OWORD *)(v54 + 80) = v53;
      v55 = v78;
      *(_OWORD *)(v54 + 96) = v77;
      *(_OWORD *)(v54 + 112) = v55;
      v56 = v72;
      *(_OWORD *)v54 = v71;
      *(_OWORD *)(v54 + 16) = v56;
      v57 = v74;
      *(_OWORD *)(v54 + 32) = v73;
      *(_OWORD *)(v54 + 48) = v57;
      *(_QWORD *)(v54 + 128) = v52;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v79, (uint64_t)&v71);
      sub_1A459A0BC((uint64_t)&v71, 0, 0);
      sub_1A4496084((uint64_t)&v71);
      swift_willThrow();
      sub_1A44695EC(v29, v30);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v79);

    }
  }
}

void sub_1A447854C(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  sub_1A4482104(a1, a2, (void (*)(uint64_t))sub_1A4498048, (uint64_t)&type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation, &qword_1EE71D540, (char *)sub_1A4496070, (void (*)(void))sub_1A449808C, a3);
}

void sub_1A44785A4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  void (*v56)(_QWORD *, _QWORD);
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80[2];
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94[6];
  _QWORD v95[4];
  uint64_t v96[2];
  uint64_t v97;
  _QWORD v98[4];

  v4 = v3;
  v87 = a1;
  v86 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v91 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98[3] = a2;
  v98[0] = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = v4;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v90 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v91;
  v17(v91, v16, v6);
  v97 = v90;
  v96[0] = v14;
  swift_retain();
  v19 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v96, v18);
  v19(v95, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  sub_1A4474CE4((unint64_t *)&qword_1ED2439E0, &qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3B8]);
  v20 = v89;
  v21 = sub_1A468FE2C();
  v88 = v14;
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v89 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v96[0] = v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v94[5]);
      v95[0] = sub_1A4431120(v31, v32, v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v95[0] = type metadata accessor for REMListStableSortingDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D520);
      v33 = sub_1A46908E8();
      v95[0] = sub_1A4431120(v33, v34, v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v82 = v16;
    v83 = v17;
    v84 = v6;
    v89 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v94[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMListStableSortingDataView.Invocation();
    v96[0] = v39;
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D520);
    v41 = sub_1A46908E8();
    v43 = v42;
    v85 = v80;
    MEMORY[0x1E0C80A78](v41);
    v80[-6] = (uint64_t)v94;
    v80[-5] = (uint64_t)v98;
    v80[-4] = v87;
    v80[-3] = v44;
    v45 = v44;
    v80[-2] = v36;
    v80[-1] = v37;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (char *)sub_1A4496070, (uint64_t)&v80[-8]);
    v87 = 0;
    v80[1] = v40;
    v81 = v39;
    sub_1A44695EC(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v47 = v36;
    sub_1A468FE14();
    v48 = objc_msgSend(v94[0], sel_resultStorages);
    v49 = sub_1A4690708();

    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v96[0] = v49;
    sub_1A44311F0((uint64_t)v96, (uint64_t)v95);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v80[0] = v45;
      v85 = (uint64_t *)v47;
      v50 = v93;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
      v51 = (void *)v98[0];
      v52 = v90;
      v53 = (char *)swift_allocObject();
      *((_QWORD *)v53 + 2) = v51;
      *((_QWORD *)v53 + 3) = v50;
      v54 = v51;
      *((_QWORD *)v53 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v55 = (uint64_t)v91;
      v83(v91, v82, v84);
      v97 = v52;
      v96[0] = (uint64_t)v53;
      swift_retain();
      v56 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v96, v55);
      v56(v95, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D528);
      v57 = v94[0];
      v58 = objc_msgSend(v94[0], sel_resultData);
      v59 = sub_1A468FFC4();
      v61 = v60;

      sub_1A4497FAC();
      v62 = (void *)v87;
      sub_1A468FDFC();
      if (!v62)
      {
        sub_1A44695EC(v59, v61);
        v74 = v96[0];
        swift_bridgeObjectRetain();
        v75 = v57;
        v76 = objc_msgSend(v75, sel_latestFetchResultToken);
        sub_1A44695EC(v80[0], (unint64_t)v85);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v77 = v86;
        *v86 = v74;
        v77[1] = (uint64_t)v76;
        return;
      }
      v91 = v53;
      sub_1A44695EC(v59, v61);
      if (qword_1EE71C138 != -1)
        swift_once();
      v63 = sub_1A4690318();
      __swift_project_value_buffer(v63, (uint64_t)qword_1EE721AB0);
      v64 = v62;
      v65 = v62;
      v66 = sub_1A469030C();
      v67 = sub_1A4690FF0();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v96[0] = v69;
        *(_DWORD *)v68 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v92);
        v95[0] = sub_1A4431120(v70, v71, v96);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v68 + 12) = 2080;
        v95[0] = v81;
        v72 = sub_1A46908E8();
        v95[0] = sub_1A4431120(v72, v73, v96);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v68, -1, -1);
      }
      else
      {

      }
      v78 = (unint64_t)v85;
      v79 = v80[0];
      swift_willThrow();
      sub_1A44695EC(v79, v78);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v96, (uint64_t)v95);
      sub_1A459A0BC((uint64_t)v95, 0, 0);
      sub_1A4496084((uint64_t)v95);
      swift_willThrow();
      sub_1A44695EC(v45, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    }

  }
}

void sub_1A44790B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1A4479110(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListBatchDeleteInvocation.CountInvocation, &qword_1EE71D518, (char *)sub_1A4496070, a3);
}

void sub_1A44790E4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1A4479110(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation, &qword_1EE71D508, (char *)sub_1A4496070, a3);
}

void sub_1A4479110(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, uint64_t *a6@<X8>)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void (*v20)(char *);
  void (*v21)(_QWORD *, _QWORD);
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD);
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t (*v75)(_QWORD);
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  id v81[6];
  _QWORD v82[4];
  uint64_t v83[2];
  uint64_t v84;
  void *v85;

  v74 = a5;
  v76 = a4;
  v75 = a3;
  v78 = a2;
  v73 = a1;
  v71 = a6;
  v7 = sub_1A46915B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = v6;
  sub_1A468FE50();
  swift_allocObject();
  v11 = sub_1A468FE44();
  v12 = v6;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v15 = type metadata accessor for REMStoreObjectsContainer();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v12;
  v17 = (uint64_t)v16;
  v16[3] = v14;
  v18 = v16 + 3;
  v16[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED243F48);
  v20 = *(void (**)(char *))(v8 + 16);
  v72 = v19;
  v20(v10);
  v84 = v15;
  v83[0] = v17;
  v77 = v17;
  swift_retain();
  v21 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v83, (uint64_t)v10);
  v21(v82, 0);
  type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D500, type metadata accessor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Parameters);
  v22 = v79;
  v23 = sub_1A468FE2C();
  if (v22)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v25 = sub_1A4690318();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE721AB0);
    v26 = v22;
    v27 = v22;
    v28 = sub_1A469030C();
    v29 = sub_1A4690FF0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v83[0] = v31;
      *(_DWORD *)v30 = 136315394;
      swift_getErrorValue();
      v32 = Error.rem_errorDescription.getter((uint64_t)v81[5]);
      v82[0] = sub_1A4431120(v32, v33, v83);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      v82[0] = v75(0);
      __swift_instantiateConcreteTypeFromMangledName(v76);
      v34 = sub_1A46908E8();
      v82[0] = sub_1A4431120(v34, v35, v83);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v31, -1, -1);
      MEMORY[0x1A85A0114](v30, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v36 = v23;
    v67 = (void (*)(char *, uint64_t, uint64_t))v20;
    v68 = v15;
    v70 = v7;
    v69 = v10;
    v78 = v11;
    v37 = v24;
    swift_beginAccess();
    v38 = *v18;
    v39 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v36, v37);
    swift_bridgeObjectRetain();
    v81[0] = objc_msgSend(v39, sel_init);
    v40 = (uint64_t *)v75(0);
    v83[0] = (uint64_t)v40;
    v41 = __swift_instantiateConcreteTypeFromMangledName(v76);
    v42 = sub_1A46908E8();
    v44 = v43;
    v79 = &v66;
    MEMORY[0x1E0C80A78](v42);
    *(&v66 - 6) = (uint64_t)v81;
    *(&v66 - 5) = (uint64_t)&v85;
    *(&v66 - 4) = v73;
    *(&v66 - 3) = v36;
    *(&v66 - 2) = v37;
    *(&v66 - 1) = v38;
    v45 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v42, v44, v45, v74, (uint64_t)(&v66 - 8));
    v75 = (uint64_t (*)(_QWORD))v41;
    v76 = v40;
    v46 = v36;
    sub_1A44695EC(v36, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v47 = objc_msgSend(v81[0], sel_resultStorages);
    v48 = sub_1A4690708();

    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v83[0] = v48;
    sub_1A44311F0((uint64_t)v83, (uint64_t)v82);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v79 = (uint64_t *)v37;
      v49 = v80;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      v50 = v85;
      v51 = v68;
      v52 = (_QWORD *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      v53 = v50;
      v52[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v54 = (uint64_t)v69;
      v67(v69, v72, v70);
      v84 = v51;
      v83[0] = (uint64_t)v52;
      swift_retain();
      v55 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v83, v54);
      v55(v82, 0);
      v56 = v81[0];
      v57 = objc_msgSend(v81[0], sel_resultData);
      v58 = sub_1A468FFC4();
      v60 = v59;

      sub_1A4497F68();
      sub_1A468FDFC();
      sub_1A44695EC(v58, v60);
      v62 = v83[0];
      v61 = v83[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63 = v56;
      v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A44695EC(v46, (unint64_t)v79);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v65 = v71;
      *v71 = v62;
      v65[1] = v61;
      v65[2] = (uint64_t)v64;
    }
    else
    {
      sub_1A44311F0((uint64_t)v83, (uint64_t)v82);
      sub_1A459A0BC((uint64_t)v82, 0, 0);
      sub_1A4496084((uint64_t)v82);
      swift_willThrow();
      sub_1A44695EC(v36, v37);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);

    }
  }
}

void sub_1A4479C30(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void (*v27)(_QWORD *, _QWORD);
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  void (*v62)(_QWORD *, _QWORD);
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  _QWORD v75[2];
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  id v91[6];
  _QWORD v92[4];
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  void *v97;

  v5 = v4;
  v86 = a1;
  v83 = a4;
  v84 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result(0);
  v8 = MEMORY[0x1E0C80A78](v84);
  v82 = (uint64_t)v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v85 = (char *)v75 - v11;
  MEMORY[0x1E0C80A78](v10);
  v81 = (uint64_t)v75 - v12;
  v13 = sub_1A46915B4();
  v87 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v89 = (char *)v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = a2;
  v96 = a3;
  v97 = v5;
  sub_1A468FE50();
  swift_allocObject();
  v15 = sub_1A468FE44();
  v16 = v5;
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v19 = type metadata accessor for REMStoreObjectsContainer();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v16;
  v21 = (uint64_t)v20;
  v20[3] = v18;
  v22 = v20 + 3;
  v20[4] = sub_1A443CEF8(v17);
  if (qword_1ED244118 != -1)
    swift_once();
  v23 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED243F48);
  v24 = v13;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v26 = (uint64_t)v89;
  v25(v89, v23, v24);
  v94 = v19;
  v93 = (_QWORD *)v21;
  v87 = v21;
  swift_retain();
  v27 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v93, v26);
  v27(v92, 0);
  sub_1A4497EA4();
  v28 = v88;
  v29 = sub_1A468FE2C();
  if (v28)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v31 = sub_1A4690318();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EE721AB0);
    v32 = v28;
    v33 = v28;
    v34 = sub_1A469030C();
    v35 = sub_1A4690FF0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v93 = (_QWORD *)v37;
      *(_DWORD *)v36 = 136315394;
      swift_getErrorValue();
      v38 = Error.rem_errorDescription.getter((uint64_t)v91[5]);
      v92[0] = sub_1A4431120(v38, v39, (uint64_t *)&v93);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v36 + 12) = 2080;
      v92[0] = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4E8);
      v40 = sub_1A46908E8();
      v92[0] = sub_1A4431120(v40, v41, (uint64_t *)&v93);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v34, v35, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v37, -1, -1);
      MEMORY[0x1A85A0114](v36, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v42 = v29;
    v43 = v30;
    v76 = v23;
    v77 = v24;
    v78 = v25;
    v79 = v19;
    v80 = v15;
    swift_beginAccess();
    v44 = *v22;
    v45 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v42, v43);
    swift_bridgeObjectRetain();
    v91[0] = objc_msgSend(v45, sel_init);
    v46 = type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation();
    v93 = (_QWORD *)v46;
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4E8);
    v48 = v42;
    v49 = sub_1A46908E8();
    v51 = v50;
    v88 = v75;
    MEMORY[0x1E0C80A78](v49);
    v75[-6] = v91;
    v75[-5] = &v97;
    v75[-4] = v86;
    v75[-3] = v48;
    v75[-2] = v43;
    v75[-1] = v44;
    v52 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v49, v51, v52, (char *)sub_1A4496070, (uint64_t)&v75[-8]);
    v75[1] = v47;
    v86 = v46;
    sub_1A44695EC(v48, v43);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v53 = v43;
    sub_1A468FE14();
    v54 = objc_msgSend(v91[0], sel_resultStorages);
    v55 = sub_1A4690708();

    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v93 = (_QWORD *)v55;
    sub_1A44311F0((uint64_t)&v93, (uint64_t)v92);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v88 = (_QWORD *)v48;
      v56 = v90;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
      v57 = v97;
      v58 = v79;
      v59 = (_QWORD *)swift_allocObject();
      v59[2] = v57;
      v59[3] = v56;
      v60 = v57;
      v59[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v61 = (uint64_t)v89;
      v78(v89, v76, v77);
      v94 = v58;
      v93 = v59;
      swift_retain();
      v62 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v93, v61);
      v62(v92, 0);
      v63 = v91[0];
      v64 = objc_msgSend(v91[0], sel_resultData);
      v65 = sub_1A468FFC4();
      v67 = v66;

      sub_1A4436344(&qword_1EE71D4F0, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result, (uint64_t)&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      v68 = v85;
      sub_1A468FDFC();
      sub_1A44695EC(v65, v67);
      v69 = (uint64_t)v68;
      v70 = v81;
      sub_1A44683E0(v69, v81, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      v71 = v82;
      sub_1A4497EE8(v70, v82, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      v72 = v63;
      v73 = objc_msgSend(v72, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v88, v53);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A4497F2C(v70, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      v74 = v83;
      sub_1A44683E0(v71, v83, type metadata accessor for REMRemindersListBatchDeleteInvocation.OldestCompletionDateInvocation.Result);
      *(_QWORD *)(v74 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4F8) + 28)) = v73;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v93, (uint64_t)v92);
      sub_1A459A0BC((uint64_t)v92, 0, 0);
      sub_1A4496084((uint64_t)v92);
      swift_willThrow();
      sub_1A44695EC(v48, v53);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
    }

  }
}

void sub_1A447A848(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD);
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  uint64_t v57;
  void (*v58)(__int128 *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  void *v82;
  uint64_t v83;
  char *v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  id v108[6];
  void *v109;
  char v110;
  char v111;
  char v112;
  char v113;
  char v114;
  char v115;

  v4 = v3;
  v79 = a3;
  v80 = a1;
  v6 = a2 >> 8;
  v7 = a2 >> 24;
  v8 = sub_1A46915B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = a2 & 1;
  v111 = v6;
  v112 = BYTE2(a2) & 1;
  v113 = v7;
  v114 = BYTE4(a2) & 1;
  v115 = BYTE5(a2) & 1;
  v109 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v11 = sub_1A468FE44();
  v12 = v4;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v83 = type metadata accessor for REMStoreObjectsContainer();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v16 = v15;
  v15[3] = v14;
  v17 = v15 + 3;
  v15[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED243F48);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20 = (uint64_t)v84;
  v19(v84, v18, v8);
  *((_QWORD *)&v97 + 1) = v83;
  *(_QWORD *)&v96 = v16;
  v81 = v16;
  swift_retain();
  v21 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v96, v20);
  v21(&v85, 0);
  sub_1A4497CA8();
  v22 = v82;
  v23 = sub_1A468FE2C();
  if (v22)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v25 = sub_1A4690318();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE721AB0);
    v26 = v22;
    v27 = v22;
    v28 = sub_1A469030C();
    v29 = sub_1A4690FF0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v82 = (void *)v11;
      v31 = v30;
      v32 = swift_slowAlloc();
      *(_QWORD *)&v96 = v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v33 = Error.rem_errorDescription.getter((uint64_t)v108[5]);
      *(_QWORD *)&v85 = sub_1A4431120(v33, v34, (uint64_t *)&v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      *(_QWORD *)&v85 = type metadata accessor for REMAccountsListDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EFD8);
      v35 = sub_1A46908E8();
      *(_QWORD *)&v85 = sub_1A4431120(v35, v36, (uint64_t *)&v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v32, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v37 = v24;
    v74 = v18;
    v75 = v19;
    v76 = v8;
    v82 = (void *)v11;
    v38 = v23;
    swift_beginAccess();
    v39 = *v17;
    v40 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v38, v37);
    swift_bridgeObjectRetain();
    v108[0] = objc_msgSend(v40, sel_init);
    v41 = type metadata accessor for REMAccountsListDataView.Invocation();
    v77 = 0;
    v42 = v41;
    *(_QWORD *)&v96 = v41;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EFD8);
    v44 = sub_1A46908E8();
    v46 = v45;
    v78 = &v73;
    MEMORY[0x1E0C80A78](v44);
    *(&v73 - 6) = (uint64_t)v108;
    *(&v73 - 5) = (uint64_t)&v109;
    *(&v73 - 4) = v80;
    *(&v73 - 3) = v38;
    *(&v73 - 2) = v37;
    *(&v73 - 1) = v39;
    v47 = sub_1A4690FD8();
    v48 = v77;
    measureTimeElapsed(_:level:block:)(v44, v46, v47, (char *)sub_1A4496070, (uint64_t)(&v73 - 8));
    if (v48)
    {
      sub_1A44695EC(v38, v37);
      sub_1A44695EC(v38, v37);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v77 = v43;
      v80 = v42;
      sub_1A44695EC(v38, v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A468FE20();
      swift_allocObject();
      sub_1A468FE14();
      v49 = objc_msgSend(v108[0], sel_resultStorages);
      v50 = sub_1A4690708();

      *((_QWORD *)&v97 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
      *(_QWORD *)&v96 = v50;
      sub_1A44311F0((uint64_t)&v96, (uint64_t)&v85);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
      v51 = v37;
      if (swift_dynamicCast())
      {
        v78 = (uint64_t *)v38;
        v52 = v107;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
        v53 = v109;
        v54 = v83;
        v55 = (_QWORD *)swift_allocObject();
        v55[2] = v53;
        v55[3] = v52;
        v56 = v53;
        v55[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
        v57 = (uint64_t)v84;
        v75(v84, v74, v76);
        *((_QWORD *)&v97 + 1) = v54;
        *(_QWORD *)&v96 = v55;
        swift_retain();
        v58 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
        sub_1A4599F20((uint64_t)&v96, v57);
        v58(&v85, 0);
        v59 = v108[0];
        v60 = objc_msgSend(v108[0], sel_resultData);
        v61 = sub_1A468FFC4();
        v63 = v62;

        sub_1A4497CEC();
        sub_1A468FDFC();
        sub_1A44695EC(v61, v63);
        v93 = v104;
        v94 = v105;
        v95 = v106;
        v89 = v100;
        v90 = v101;
        v91 = v102;
        v92 = v103;
        v85 = v96;
        v86 = v97;
        v87 = v98;
        v88 = v99;
        sub_1A4497D30((uint64_t)&v85);
        v64 = v59;
        v65 = objc_msgSend(v64, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v78, v51);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A4497DEC((uint64_t)&v85);

        v66 = v94;
        v67 = v79;
        *(_OWORD *)(v79 + 128) = v93;
        *(_OWORD *)(v67 + 144) = v66;
        v68 = v95;
        v69 = v90;
        *(_OWORD *)(v67 + 64) = v89;
        *(_OWORD *)(v67 + 80) = v69;
        v70 = v92;
        *(_OWORD *)(v67 + 96) = v91;
        *(_OWORD *)(v67 + 112) = v70;
        v71 = v86;
        *(_OWORD *)v67 = v85;
        *(_OWORD *)(v67 + 16) = v71;
        v72 = v88;
        *(_OWORD *)(v67 + 32) = v87;
        *(_OWORD *)(v67 + 48) = v72;
        *(_QWORD *)(v67 + 160) = v68;
        *(_QWORD *)(v67 + 168) = v65;
        return;
      }
      sub_1A44311F0((uint64_t)&v96, (uint64_t)&v85);
      sub_1A459A0BC((uint64_t)&v85, 0, 0);
      sub_1A4496084((uint64_t)&v85);
      swift_willThrow();
      sub_1A44695EC(v38, v37);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
    }

  }
}

void sub_1A447B2C8(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(__int128 *, _QWORD);
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  _QWORD *v42;
  id v43;
  uint64_t v44;
  void (*v45)(__int128 *, _QWORD);
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  id v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _QWORD v57[2];
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  id v87[6];
  void *v88;

  v65 = a1;
  v62 = a2;
  v68 = sub_1A46915B4();
  v3 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v69 = (char *)v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v2;
  sub_1A468FE50();
  swift_allocObject();
  v5 = sub_1A468FE44();
  v6 = v2;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v67 = type metadata accessor for REMStoreObjectsContainer();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v6;
  v9[3] = v8;
  v9[4] = sub_1A443CEF8(v7);
  if (qword_1ED244118 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v68, (uint64_t)qword_1ED243F48);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12 = (uint64_t)v69;
  v63 = v10;
  v64 = v11;
  ((void (*)(char *))v11)(v69);
  *((_QWORD *)&v79 + 1) = v67;
  *(_QWORD *)&v78 = v9;
  swift_retain();
  v13 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v78, v12);
  v13(&v70, 0);
  type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D4C0, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  v14 = v66;
  v15 = sub_1A468FE2C();
  if (v14)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v17 = sub_1A4690318();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EE721AB0);
    v18 = v14;
    v19 = v14;
    v20 = sub_1A469030C();
    v21 = sub_1A4690FF0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v66 = v9;
      v24 = v23;
      *(_QWORD *)&v78 = v23;
      *(_DWORD *)v22 = 136315394;
      swift_getErrorValue();
      v25 = Error.rem_errorDescription.getter((uint64_t)v87[5]);
      *(_QWORD *)&v70 = sub_1A4431120(v25, v26, (uint64_t *)&v78);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v22 + 12) = 2080;
      *(_QWORD *)&v70 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4C8);
      v27 = sub_1A46908E8();
      *(_QWORD *)&v70 = sub_1A4431120(v27, v28, (uint64_t *)&v78);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v20, v21, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v24, -1, -1);
      MEMORY[0x1A85A0114](v22, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v29 = v15;
    v30 = v16;
    v66 = v9;
    v61 = v5;
    swift_beginAccess();
    v31 = v9[3];
    v32 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v29, v30);
    swift_bridgeObjectRetain();
    v87[0] = objc_msgSend(v32, sel_init);
    v58 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation();
    *(_QWORD *)&v78 = v58;
    v57[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4C8);
    v33 = sub_1A46908E8();
    v35 = v34;
    v59 = v33;
    v60 = v57;
    MEMORY[0x1E0C80A78](v33);
    v57[-6] = v87;
    v57[-5] = &v88;
    v57[-4] = v65;
    v57[-3] = v29;
    v57[-2] = v30;
    v57[-1] = v31;
    v36 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v59, v35, v36, (char *)sub_1A4496070, (uint64_t)&v57[-8]);
    sub_1A44695EC(v29, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v37 = objc_msgSend(v87[0], sel_resultStorages);
    v38 = sub_1A4690708();

    *((_QWORD *)&v79 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    *(_QWORD *)&v78 = v38;
    sub_1A44311F0((uint64_t)&v78, (uint64_t)&v70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v60 = (_QWORD *)v29;
      v65 = v30;
      v39 = v86;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
      v40 = v88;
      v41 = v67;
      v42 = (_QWORD *)swift_allocObject();
      v42[2] = v40;
      v42[3] = v39;
      v43 = v40;
      v42[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v44 = (uint64_t)v69;
      v64(v69, v63, v68);
      *((_QWORD *)&v79 + 1) = v41;
      *(_QWORD *)&v78 = v42;
      swift_retain();
      v45 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v78, v44);
      v45(&v70, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4D0);
      v69 = (char *)v87[0];
      v46 = objc_msgSend(v87[0], sel_resultData);
      v47 = sub_1A468FFC4();
      v49 = v48;

      sub_1A4497ADC(&qword_1EE71D4D8, &qword_1EE71D4D0);
      sub_1A468FDFC();
      sub_1A44695EC(v47, v49);
      v74 = v82;
      v75 = v83;
      v76 = v84;
      v77 = v85;
      v70 = v78;
      v71 = v79;
      v72 = v80;
      v73 = v81;
      sub_1A4497B1C((uint64_t)&v70);
      v50 = v69;
      v51 = objc_msgSend(v50, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v60, v65);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A4497BE0((uint64_t)&v70);

      v52 = v75;
      v53 = v62;
      *(_OWORD *)(v62 + 64) = v74;
      *(_OWORD *)(v53 + 80) = v52;
      v54 = v77;
      *(_OWORD *)(v53 + 96) = v76;
      *(_OWORD *)(v53 + 112) = v54;
      v55 = v71;
      *(_OWORD *)v53 = v70;
      *(_OWORD *)(v53 + 16) = v55;
      v56 = v73;
      *(_OWORD *)(v53 + 32) = v72;
      *(_OWORD *)(v53 + 48) = v56;
      *(_QWORD *)(v53 + 128) = v51;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v78, (uint64_t)&v70);
      sub_1A459A0BC((uint64_t)&v70, 0, 0);
      sub_1A4496084((uint64_t)&v70);
      swift_willThrow();
      sub_1A44695EC(v29, v30);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);

    }
  }
}

void sub_1A447BD28(void *a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t *v102;
  void *v103;
  uint64_t v104;
  id *v105;
  id v106;
  uint64_t v107;
  uint64_t v108[3];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119[6];
  uint64_t v120;
  void *v121;

  v105 = (id *)a2;
  v103 = a1;
  v102 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = (void **)(v13 + 3);
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v109 = v12;
  v108[0] = v16;
  v104 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v108, (uint64_t)v7);
  v19(&v120, 0);
  type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters(0);
  sub_1A4436344(&qword_1ED23EFF8, type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ListSectionsInvocation.Parameters);
  v20 = v106;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v108[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v119[5]);
      v120 = sub_1A4431120(v30, v31, v108);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v120 = type metadata accessor for REMRemindersListDataView.ListSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F000);
      v32 = sub_1A46908E8();
      v120 = sub_1A4431120(v32, v33, v108);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = (void *)v21;
    v96 = v17;
    v97 = v18;
    v98 = v12;
    v100 = (_QWORD *)v4;
    v99 = (uint64_t)v7;
    v101 = v8;
    v35 = v22;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8((uint64_t)v34, (unint64_t)v35);
    swift_bridgeObjectRetain();
    v119[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.ListSectionsInvocation();
    v108[0] = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F000);
    v40 = sub_1A46908E8();
    v42 = v41;
    v105 = &v91;
    MEMORY[0x1E0C80A78](v40);
    *(&v91 - 6) = v119;
    *(&v91 - 5) = &v121;
    *(&v91 - 4) = v103;
    *(&v91 - 3) = v34;
    *(&v91 - 2) = v35;
    *(&v91 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v91 - 8));
    v106 = 0;
    v95 = v39;
    v103 = (void *)v38;
    v44 = (uint64_t)v34;
    sub_1A44695EC((uint64_t)v34, (unint64_t)v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v45 = sub_1A468FE14();
    v46 = objc_msgSend(v119[0], sel_resultStorages);
    v47 = sub_1A4690708();

    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v108[0] = v47;
    sub_1A44311F0((uint64_t)v108, (uint64_t)&v120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v94 = v44;
      v105 = (id *)v35;
      v48 = v118;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
      v49 = v121;
      v50 = v98;
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v49;
      v51[3] = v48;
      v52 = v49;
      v51[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v53 = v99;
      v97((char *)v99, v96, (uint64_t)v100);
      v109 = v50;
      v108[0] = (uint64_t)v51;
      swift_retain();
      v54 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v108, v53);
      v54(&v120, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F058);
      v55 = v119[0];
      v56 = objc_msgSend(v119[0], sel_resultData);
      v57 = sub_1A468FFC4();
      v59 = v58;

      sub_1A4497ADC(&qword_1ED23F050, &qword_1ED23F058);
      v60 = v106;
      sub_1A468FDFC();
      v106 = v60;
      if (!v60)
      {
        sub_1A44695EC(v57, v59);
        v95 = v108[0];
        v96 = v45;
        v103 = (void *)v108[1];
        v99 = v108[2];
        LODWORD(v98) = v109;
        LODWORD(v97) = BYTE1(v109);
        v74 = v110;
        v75 = v111;
        v76 = v112;
        v77 = v113;
        v100 = v51;
        v78 = v114;
        v79 = v115;
        v81 = v116;
        v80 = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v91 = v76;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92 = v80;
        swift_bridgeObjectRetain();
        v82 = v55;
        v93 = objc_msgSend(v82, sel_latestFetchResultToken);
        sub_1A44695EC(v94, (unint64_t)v105);
        swift_bridgeObjectRelease();
        v83 = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = (uint64_t)v91;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v85 = v95;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v86 = v102;
        v87 = (uint64_t)v103;
        *v102 = v85;
        v86[1] = v87;
        v86[2] = v99;
        *((_BYTE *)v86 + 24) = v98;
        *((_BYTE *)v86 + 25) = (_BYTE)v97;
        v86[4] = v74;
        v86[5] = v75;
        v86[6] = v84;
        v86[7] = v77;
        v86[8] = v78;
        v86[9] = v79;
        v88 = v92;
        v86[10] = v83;
        v86[11] = v88;
        v86[12] = (uint64_t)v93;
        return;
      }
      sub_1A44695EC(v57, v59);
      if (qword_1EE71C138 != -1)
        swift_once();
      v61 = sub_1A4690318();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EE721AB0);
      v62 = v106;
      v63 = v106;
      v64 = v62;
      v65 = sub_1A469030C();
      v66 = sub_1A4690FF0();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v100 = v51;
        v69 = v68;
        v108[0] = v68;
        *(_DWORD *)v67 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v107);
        v120 = sub_1A4431120(v70, v71, v108);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v67 + 12) = 2080;
        v120 = (uint64_t)v103;
        v72 = sub_1A46908E8();
        v120 = sub_1A4431120(v72, v73, v108);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v65, v66, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v67, -1, -1);
      }
      else
      {

      }
      v89 = (unint64_t)v105;
      v90 = v94;
      swift_willThrow();
      sub_1A44695EC(v90, v89);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v108, (uint64_t)&v120);
      sub_1A459A0BC((uint64_t)&v120, 0, 0);
      sub_1A4496084((uint64_t)&v120);
      swift_willThrow();
      sub_1A44695EC(v44, (unint64_t)v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    }

  }
}

void sub_1A447C9DC(unint64_t a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(__int128 *, _QWORD);
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  void (*v57)(__int128 *, _QWORD);
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _QWORD v82[2];
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  void *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  id v113[9];
  char v114;
  char v115;
  char v116;
  void *v117;

  v91 = a1;
  v5 = v4;
  v89 = a4;
  v8 = a3 >> 8;
  v9 = sub_1A46915B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v94 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113[8] = a2;
  v114 = a3;
  v115 = v8;
  v116 = BYTE2(a3) & 1;
  v117 = v5;
  sub_1A468FE50();
  swift_allocObject();
  v12 = sub_1A468FE44();
  v13 = v5;
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v93 = type metadata accessor for REMStoreObjectsContainer();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v13;
  v16[3] = v15;
  v16[4] = sub_1A443CEF8(v14);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED243F48);
  v18 = v9;
  v19 = v17;
  v20 = *(void (**)(char *, uint64_t))(v10 + 16);
  v21 = (uint64_t)v94;
  v90 = v18;
  v20(v94, v17);
  *((_QWORD *)&v105 + 1) = v93;
  *(_QWORD *)&v104 = v16;
  swift_retain();
  v22 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v104, v21);
  v22(&v95, 0);
  sub_1A449790C();
  v23 = v92;
  v24 = sub_1A468FE2C();
  if (v23)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v26 = sub_1A4690318();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE721AB0);
    v27 = v23;
    v28 = v23;
    v29 = sub_1A469030C();
    v30 = sub_1A4690FF0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v92 = v16;
      v33 = v32;
      *(_QWORD *)&v104 = v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v34 = Error.rem_errorDescription.getter((uint64_t)v113[5]);
      *(_QWORD *)&v95 = sub_1A4431120(v34, v35, (uint64_t *)&v104);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      *(_QWORD *)&v95 = type metadata accessor for REMRemindersListDataView.TemplateSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4A8);
      v36 = sub_1A46908E8();
      *(_QWORD *)&v95 = sub_1A4431120(v36, v37, (uint64_t *)&v104);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v29, v30, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v38 = v24;
    v84 = v19;
    v85 = (void (*)(char *, uint64_t, uint64_t))v20;
    v92 = v16;
    v88 = v12;
    v39 = v25;
    swift_beginAccess();
    v40 = v16[3];
    v41 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v38, v39);
    swift_bridgeObjectRetain();
    v113[0] = objc_msgSend(v41, sel_init);
    v83 = type metadata accessor for REMRemindersListDataView.TemplateSectionsInvocation();
    *(_QWORD *)&v104 = v83;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4A8);
    v43 = sub_1A46908E8();
    v45 = v44;
    v87 = v82;
    MEMORY[0x1E0C80A78](v43);
    v82[-6] = v113;
    v82[-5] = &v117;
    v82[-4] = v91;
    v82[-3] = v38;
    v82[-2] = v39;
    v82[-1] = v40;
    v91 = v40;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v43, v45, v46, (char *)sub_1A4496070, (uint64_t)&v82[-8]);
    v86 = 0;
    v82[1] = v42;
    v47 = v39;
    sub_1A44695EC(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v48 = sub_1A468FE14();
    v49 = objc_msgSend(v113[0], sel_resultStorages);
    v50 = sub_1A4690708();

    *((_QWORD *)&v105 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    *(_QWORD *)&v104 = v50;
    sub_1A44311F0((uint64_t)&v104, (uint64_t)&v95);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v87 = (_QWORD *)v38;
      v91 = v47;
      v51 = v112;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
      v52 = v117;
      v53 = v93;
      v54 = (_QWORD *)swift_allocObject();
      v54[2] = v52;
      v54[3] = v51;
      v55 = v52;
      v54[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v56 = (uint64_t)v94;
      v85(v94, v84, v90);
      *((_QWORD *)&v105 + 1) = v53;
      *(_QWORD *)&v104 = v54;
      swift_retain();
      v57 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v104, v56);
      v57(&v95, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D4B0);
      v58 = v113[0];
      v59 = objc_msgSend(v113[0], sel_resultData);
      v60 = sub_1A468FFC4();
      v62 = v61;

      sub_1A4497ADC(&qword_1EE71D4B8, &qword_1EE71D4B0);
      v63 = v86;
      sub_1A468FDFC();
      if (!v63)
      {
        sub_1A44695EC(v60, v62);
        v99 = v108;
        v100 = v109;
        v101 = v110;
        v102 = v111;
        v95 = v104;
        v96 = v105;
        v97 = v106;
        v98 = v107;
        sub_1A4497B1C((uint64_t)&v95);
        v75 = v58;
        v76 = objc_msgSend(v75, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v87, v91);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A4497BE0((uint64_t)&v95);

        v77 = v100;
        v78 = v89;
        *(_OWORD *)(v89 + 64) = v99;
        *(_OWORD *)(v78 + 80) = v77;
        v79 = v102;
        *(_OWORD *)(v78 + 96) = v101;
        *(_OWORD *)(v78 + 112) = v79;
        v80 = v96;
        *(_OWORD *)v78 = v95;
        *(_OWORD *)(v78 + 16) = v80;
        v81 = v98;
        *(_OWORD *)(v78 + 32) = v97;
        *(_OWORD *)(v78 + 48) = v81;
        *(_QWORD *)(v78 + 128) = v76;
        return;
      }
      v93 = (uint64_t)v54;
      v94 = (char *)v48;
      sub_1A44695EC(v60, v62);
      if (qword_1EE71C138 != -1)
        swift_once();
      v64 = sub_1A4690318();
      __swift_project_value_buffer(v64, (uint64_t)qword_1EE721AB0);
      v65 = v63;
      v66 = v63;
      v67 = sub_1A469030C();
      v68 = sub_1A4690FF0();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        *(_QWORD *)&v104 = v70;
        *(_DWORD *)v69 = 136315394;
        swift_getErrorValue();
        v71 = Error.rem_errorDescription.getter(v103);
        *(_QWORD *)&v95 = sub_1A4431120(v71, v72, (uint64_t *)&v104);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v69 + 12) = 2080;
        *(_QWORD *)&v95 = v83;
        v73 = sub_1A46908E8();
        *(_QWORD *)&v95 = sub_1A4431120(v73, v74, (uint64_t *)&v104);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v67, v68, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v70, -1, -1);
        MEMORY[0x1A85A0114](v69, -1, -1);
      }
      else
      {

      }
      swift_willThrow();
      sub_1A44695EC((uint64_t)v87, v91);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)&v104, (uint64_t)&v95);
      sub_1A459A0BC((uint64_t)&v95, 0, 0);
      sub_1A4496084((uint64_t)&v95);
      swift_willThrow();
      sub_1A44695EC(v38, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
    }

  }
}

void sub_1A447D450(unint64_t a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void (*v22)(__int128 *, _QWORD);
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  void (*v57)(__int128 *, _QWORD);
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  id v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  _QWORD v82[2];
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t, uint64_t);
  void *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  id v113[9];
  char v114;
  char v115;
  char v116;
  void *v117;

  v91 = a1;
  v5 = v4;
  v89 = a4;
  v8 = a3 >> 8;
  v9 = sub_1A46915B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v94 = (char *)v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113[8] = a2;
  v114 = a3;
  v115 = v8;
  v116 = BYTE2(a3) & 1;
  v117 = v5;
  sub_1A468FE50();
  swift_allocObject();
  v12 = sub_1A468FE44();
  v13 = v5;
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v93 = type metadata accessor for REMStoreObjectsContainer();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v13;
  v16[3] = v15;
  v16[4] = sub_1A443CEF8(v14);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED243F48);
  v18 = v9;
  v19 = v17;
  v20 = *(void (**)(char *, uint64_t))(v10 + 16);
  v21 = (uint64_t)v94;
  v90 = v18;
  v20(v94, v17);
  *((_QWORD *)&v105 + 1) = v93;
  *(_QWORD *)&v104 = v16;
  swift_retain();
  v22 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v104, v21);
  v22(&v95, 0);
  sub_1A449790C();
  v23 = v92;
  v24 = sub_1A468FE2C();
  if (v23)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v26 = sub_1A4690318();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE721AB0);
    v27 = v23;
    v28 = v23;
    v29 = sub_1A469030C();
    v30 = sub_1A4690FF0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v92 = v16;
      v33 = v32;
      *(_QWORD *)&v104 = v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v34 = Error.rem_errorDescription.getter((uint64_t)v113[5]);
      *(_QWORD *)&v95 = sub_1A4431120(v34, v35, (uint64_t *)&v104);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      *(_QWORD *)&v95 = type metadata accessor for REMRemindersListDataView.TemplateInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D490);
      v36 = sub_1A46908E8();
      *(_QWORD *)&v95 = sub_1A4431120(v36, v37, (uint64_t *)&v104);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v29, v30, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v38 = v24;
    v84 = v19;
    v85 = (void (*)(char *, uint64_t, uint64_t))v20;
    v92 = v16;
    v88 = v12;
    v39 = v25;
    swift_beginAccess();
    v40 = v16[3];
    v41 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v38, v39);
    swift_bridgeObjectRetain();
    v113[0] = objc_msgSend(v41, sel_init);
    v83 = type metadata accessor for REMRemindersListDataView.TemplateInvocation();
    *(_QWORD *)&v104 = v83;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D490);
    v43 = sub_1A46908E8();
    v45 = v44;
    v87 = v82;
    MEMORY[0x1E0C80A78](v43);
    v82[-6] = v113;
    v82[-5] = &v117;
    v82[-4] = v91;
    v82[-3] = v38;
    v82[-2] = v39;
    v82[-1] = v40;
    v91 = v40;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v43, v45, v46, (char *)sub_1A4496070, (uint64_t)&v82[-8]);
    v86 = 0;
    v82[1] = v42;
    v47 = v39;
    sub_1A44695EC(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v48 = sub_1A468FE14();
    v49 = objc_msgSend(v113[0], sel_resultStorages);
    v50 = sub_1A4690708();

    *((_QWORD *)&v105 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    *(_QWORD *)&v104 = v50;
    sub_1A44311F0((uint64_t)&v104, (uint64_t)&v95);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v87 = (_QWORD *)v38;
      v91 = v47;
      v51 = v112;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
      v52 = v117;
      v53 = v93;
      v54 = (_QWORD *)swift_allocObject();
      v54[2] = v52;
      v54[3] = v51;
      v55 = v52;
      v54[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v56 = (uint64_t)v94;
      v85(v94, v84, v90);
      *((_QWORD *)&v105 + 1) = v53;
      *(_QWORD *)&v104 = v54;
      swift_retain();
      v57 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v104, v56);
      v57(&v95, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D498);
      v58 = v113[0];
      v59 = objc_msgSend(v113[0], sel_resultData);
      v60 = sub_1A468FFC4();
      v62 = v61;

      sub_1A4497ADC(&qword_1EE71D4A0, &qword_1EE71D498);
      v63 = v86;
      sub_1A468FDFC();
      if (!v63)
      {
        sub_1A44695EC(v60, v62);
        v99 = v108;
        v100 = v109;
        v101 = v110;
        v102 = v111;
        v95 = v104;
        v96 = v105;
        v97 = v106;
        v98 = v107;
        sub_1A4497950((uint64_t)&v95);
        v75 = v58;
        v76 = objc_msgSend(v75, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v87, v91);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A4497A18((uint64_t)&v95);

        v77 = v100;
        v78 = v89;
        *(_OWORD *)(v89 + 64) = v99;
        *(_OWORD *)(v78 + 80) = v77;
        v79 = v102;
        *(_OWORD *)(v78 + 96) = v101;
        *(_OWORD *)(v78 + 112) = v79;
        v80 = v96;
        *(_OWORD *)v78 = v95;
        *(_OWORD *)(v78 + 16) = v80;
        v81 = v98;
        *(_OWORD *)(v78 + 32) = v97;
        *(_OWORD *)(v78 + 48) = v81;
        *(_QWORD *)(v78 + 128) = v76;
        return;
      }
      v93 = (uint64_t)v54;
      v94 = (char *)v48;
      sub_1A44695EC(v60, v62);
      if (qword_1EE71C138 != -1)
        swift_once();
      v64 = sub_1A4690318();
      __swift_project_value_buffer(v64, (uint64_t)qword_1EE721AB0);
      v65 = v63;
      v66 = v63;
      v67 = sub_1A469030C();
      v68 = sub_1A4690FF0();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = swift_slowAlloc();
        v70 = swift_slowAlloc();
        *(_QWORD *)&v104 = v70;
        *(_DWORD *)v69 = 136315394;
        swift_getErrorValue();
        v71 = Error.rem_errorDescription.getter(v103);
        *(_QWORD *)&v95 = sub_1A4431120(v71, v72, (uint64_t *)&v104);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v69 + 12) = 2080;
        *(_QWORD *)&v95 = v83;
        v73 = sub_1A46908E8();
        *(_QWORD *)&v95 = sub_1A4431120(v73, v74, (uint64_t *)&v104);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v67, v68, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v69, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v70, -1, -1);
        MEMORY[0x1A85A0114](v69, -1, -1);
      }
      else
      {

      }
      swift_willThrow();
      sub_1A44695EC((uint64_t)v87, v91);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)&v104, (uint64_t)&v95);
      sub_1A459A0BC((uint64_t)&v95, 0, 0);
      sub_1A4496084((uint64_t)&v95);
      swift_willThrow();
      sub_1A44695EC(v38, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v104);
    }

  }
}

void sub_1A447DEC4(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  void (*v60)(_QWORD *, _QWORD);
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  uint64_t *v69;
  uint64_t v70[2];
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82[6];
  _QWORD v83[4];
  uint64_t v84[3];
  uint64_t v85;
  uint64_t v86;
  char v87;
  void *v88;

  v5 = v4;
  v77 = a1;
  v76 = a4;
  v8 = sub_1A46915B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v80 = (char *)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = a2;
  v87 = a3;
  v88 = v5;
  sub_1A468FE50();
  swift_allocObject();
  v11 = sub_1A468FE44();
  v12 = v5;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v79 = type metadata accessor for REMStoreObjectsContainer();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v16 = (uint64_t)v15;
  v15[3] = v14;
  v17 = v15 + 3;
  v15[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED243F48);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20 = (uint64_t)v80;
  v19(v80, v18, v8);
  v85 = v79;
  v84[0] = v16;
  swift_retain();
  v21 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v84, v20);
  v21(v83, 0);
  sub_1A4497884();
  v22 = v78;
  v23 = sub_1A468FE2C();
  if (v22)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v25 = sub_1A4690318();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE721AB0);
    v26 = v22;
    v27 = v22;
    v28 = sub_1A469030C();
    v29 = sub_1A4690FF0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v78 = (void *)v11;
      v31 = v30;
      v32 = swift_slowAlloc();
      v84[0] = v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v33 = Error.rem_errorDescription.getter((uint64_t)v82[5]);
      v83[0] = sub_1A4431120(v33, v34, v84);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      v83[0] = type metadata accessor for REMListPickerDataView.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D478);
      v35 = sub_1A46908E8();
      v83[0] = sub_1A4431120(v35, v36, v84);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v32, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v37 = v23;
    v38 = v24;
    v71 = v18;
    v72 = v19;
    v73 = v8;
    v74 = v16;
    v78 = (void *)v11;
    swift_beginAccess();
    v39 = *v17;
    v40 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v37, v38);
    swift_bridgeObjectRetain();
    v82[0] = objc_msgSend(v40, sel_init);
    v41 = type metadata accessor for REMListPickerDataView.Invocation();
    v84[0] = v41;
    v42 = v38;
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D478);
    v44 = sub_1A46908E8();
    v46 = v45;
    v75 = v70;
    MEMORY[0x1E0C80A78](v44);
    v47 = v42;
    v70[-6] = (uint64_t)v82;
    v70[-5] = (uint64_t)&v88;
    v70[-4] = v77;
    v70[-3] = v48;
    v49 = v48;
    v50 = v47;
    v70[-2] = v47;
    v70[-1] = v39;
    v51 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v44, v46, v51, (char *)sub_1A4496070, (uint64_t)&v70[-8]);
    v70[1] = v43;
    v77 = v41;
    sub_1A44695EC(v49, v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v52 = objc_msgSend(v82[0], sel_resultStorages);
    v53 = sub_1A4690708();

    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v84[0] = v53;
    sub_1A44311F0((uint64_t)v84, (uint64_t)v83);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v70[0] = v49;
      v75 = (uint64_t *)v50;
      v54 = v81;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
      v55 = v88;
      v56 = v79;
      v57 = (_QWORD *)swift_allocObject();
      v57[2] = v55;
      v57[3] = v54;
      v58 = v55;
      v57[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v59 = (uint64_t)v80;
      v72(v80, v71, v73);
      v85 = v56;
      v84[0] = (uint64_t)v57;
      swift_retain();
      v60 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v84, v59);
      v60(v83, 0);
      v61 = v82[0];
      v62 = objc_msgSend(v82[0], sel_resultData);
      v63 = sub_1A468FFC4();
      v65 = v64;

      sub_1A44978C8();
      sub_1A468FDFC();
      sub_1A44695EC(v63, v65);
      v66 = v84[0];
      swift_bridgeObjectRetain();
      v67 = v61;
      v68 = objc_msgSend(v67, sel_latestFetchResultToken);
      sub_1A44695EC(v70[0], (unint64_t)v75);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v69 = v76;
      *v76 = v66;
      v69[1] = (uint64_t)v68;
    }
    else
    {
      sub_1A44311F0((uint64_t)v84, (uint64_t)v83);
      sub_1A459A0BC((uint64_t)v83, 0, 0);
      sub_1A4496084((uint64_t)v83);
      swift_willThrow();
      sub_1A44695EC(v49, v50);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);

    }
  }
}

void sub_1A447E998(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(__int128 *, _QWORD);
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void (*v56)(__int128 *, _QWORD);
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  id v63;
  __int128 v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  void *v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _OWORD v92[4];
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _OWORD v103[2];
  uint64_t v104;
  id v105[6];
  id v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _OWORD v112[3];
  uint64_t v113;

  v4 = v3;
  v78 = a1;
  v76 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v81 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[5];
  v111 = a2[4];
  v112[0] = v9;
  *(_DWORD *)((char *)v112 + 15) = *(_DWORD *)((char *)a2 + 95);
  v10 = a2[1];
  v107 = *a2;
  v108 = v10;
  v11 = a2[3];
  v109 = a2[2];
  v110 = v11;
  v106 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v113 = sub_1A468FE44();
  v12 = objc_msgSend(v4, sel_store);
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v15 = type metadata accessor for REMStoreObjectsContainer();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v12;
  v17 = v16;
  v16[3] = v14;
  v18 = v16 + 3;
  v16[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v21 = (uint64_t)v81;
  v20(v81, v19, v6);
  *((_QWORD *)&v94 + 1) = v15;
  *(_QWORD *)&v93 = v17;
  v79 = v17;
  swift_retain();
  v77 = v15;
  v22 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v93, v21);
  v22(&v82, 0);
  sub_1A4497714();
  v23 = v80;
  v24 = sub_1A468FE2C();
  if (v23)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v26 = sub_1A4690318();
    __swift_project_value_buffer(v26, (uint64_t)qword_1EE721AB0);
    v27 = v23;
    v28 = v23;
    v29 = sub_1A469030C();
    v30 = sub_1A4690FF0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      *(_QWORD *)&v93 = v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v33 = Error.rem_errorDescription.getter((uint64_t)v105[5]);
      *(_QWORD *)&v82 = sub_1A4431120(v33, v34, (uint64_t *)&v93);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      *(_QWORD *)&v82 = type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1B0);
      v35 = sub_1A46908E8();
      *(_QWORD *)&v82 = sub_1A4431120(v35, v36, (uint64_t *)&v93);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v29, v30, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v32, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v37 = v25;
    v72 = v19;
    v73 = v20;
    v74 = v6;
    v38 = v24;
    swift_beginAccess();
    v39 = *v18;
    v40 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v38, v37);
    swift_bridgeObjectRetain();
    v105[0] = objc_msgSend(v40, sel_init);
    v71 = type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
    *(_QWORD *)&v93 = v71;
    v41 = v37;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1B0);
    v43 = sub_1A46908E8();
    v45 = v44;
    v75 = &v70;
    MEMORY[0x1E0C80A78](v43);
    *(&v70 - 6) = (uint64_t)v105;
    *(&v70 - 5) = (uint64_t)&v106;
    *(&v70 - 4) = v78;
    *(&v70 - 3) = v46;
    v47 = v46;
    *(&v70 - 2) = v41;
    *(&v70 - 1) = v39;
    v80 = (void *)v39;
    v48 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v43, v45, v48, (char *)sub_1A4496070, (uint64_t)(&v70 - 8));
    v78 = v42;
    sub_1A44695EC(v47, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v49 = objc_msgSend(v105[0], sel_resultStorages);
    v50 = sub_1A4690708();

    *((_QWORD *)&v94 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    *(_QWORD *)&v93 = v50;
    sub_1A44311F0((uint64_t)&v93, (uint64_t)&v82);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v80 = (void *)v41;
      v75 = (uint64_t *)v47;
      v51 = v104;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);
      v52 = objc_msgSend(v106, sel_store);
      v53 = v77;
      v54 = (_QWORD *)swift_allocObject();
      v54[2] = v52;
      v54[3] = v51;
      v54[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v55 = (uint64_t)v81;
      v73(v81, v72, v74);
      *((_QWORD *)&v94 + 1) = v53;
      *(_QWORD *)&v93 = v54;
      swift_retain();
      v56 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v93, v55);
      v56(&v82, 0);
      v57 = v105[0];
      v58 = objc_msgSend(v105[0], sel_resultData);
      v59 = sub_1A468FFC4();
      v61 = v60;

      sub_1A4497758();
      sub_1A468FDFC();
      sub_1A44695EC(v59, v61);
      v90 = v101;
      v91 = v102;
      v92[0] = v103[0];
      *(_OWORD *)((char *)v92 + 9) = *(_OWORD *)((char *)v103 + 9);
      v86 = v97;
      v87 = v98;
      v88 = v99;
      v89 = v100;
      v82 = v93;
      v83 = v94;
      v84 = v95;
      v85 = v96;
      sub_1A449779C((uint64_t)&v82, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976A4);
      v62 = v57;
      v63 = objc_msgSend(v62, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v75, (unint64_t)v80);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A449779C((uint64_t)&v82, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976DC);

      v64 = v91;
      v65 = v76;
      *(_OWORD *)(v76 + 128) = v90;
      *(_OWORD *)(v65 + 144) = v64;
      *(_OWORD *)(v65 + 160) = v92[0];
      *(_OWORD *)(v65 + 169) = *(_OWORD *)((char *)v92 + 9);
      v66 = v87;
      *(_OWORD *)(v65 + 64) = v86;
      *(_OWORD *)(v65 + 80) = v66;
      v67 = v89;
      *(_OWORD *)(v65 + 96) = v88;
      *(_OWORD *)(v65 + 112) = v67;
      v68 = v83;
      *(_OWORD *)v65 = v82;
      *(_OWORD *)(v65 + 16) = v68;
      v69 = v85;
      *(_OWORD *)(v65 + 32) = v84;
      *(_OWORD *)(v65 + 48) = v69;
      *(_QWORD *)(v65 + 192) = v63;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v93, (uint64_t)&v82);
      sub_1A459A0BC((uint64_t)&v82, 0, 0);
      sub_1A4496084((uint64_t)&v82);
      swift_willThrow();
      sub_1A44695EC(v47, v41);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v93);

    }
  }
}

void sub_1A447F46C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD);
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  id v72;
  _QWORD *v73;
  char *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  id v89[6];
  uint64_t v90;
  id v91;

  v78 = a2;
  v76 = a1;
  v75 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = objc_msgSend(v3, sel_store);
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = (id)type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v83 = (uint64_t)v12;
  v80 = (_QWORD *)v16;
  v77 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v80, (uint64_t)v7);
  v19(&v90, 0);
  type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  sub_1A4436344(&qword_1ED241F78, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributesHarvester.MentionsExtractionRequest);
  v20 = v79;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v80 = (_QWORD *)v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v89[5]);
      v90 = sub_1A4431120(v30, v31, (uint64_t *)&v80);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v90 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1E0);
      v32 = sub_1A46908E8();
      v90 = sub_1A4431120(v32, v33, (uint64_t *)&v80);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v22;
    v70 = v17;
    v71 = v18;
    v72 = v12;
    v73 = (_QWORD *)v4;
    v74 = v7;
    v78 = v8;
    v35 = v21;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v34);
    swift_bridgeObjectRetain();
    v89[0] = objc_msgSend(v37, sel_init);
    v80 = (_QWORD *)type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1E0);
    v39 = v34;
    v40 = sub_1A46908E8();
    v42 = v41;
    v79 = &v68;
    MEMORY[0x1E0C80A78](v40);
    *(&v68 - 6) = (uint64_t)v89;
    *(&v68 - 5) = (uint64_t)&v91;
    *(&v68 - 4) = v76;
    *(&v68 - 3) = v35;
    *(&v68 - 2) = v39;
    *(&v68 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v68 - 8));
    v76 = v38;
    sub_1A44695EC(v35, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v44 = sub_1A468FE14();
    v45 = objc_msgSend(v89[0], sel_resultStorages);
    v46 = sub_1A4690708();

    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v80 = (_QWORD *)v46;
    sub_1A44311F0((uint64_t)&v80, (uint64_t)&v90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v69 = v35;
      v79 = (_QWORD *)v39;
      v47 = v88;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      v48 = objc_msgSend(v91, sel_store);
      v49 = (uint64_t)v72;
      v50 = (_QWORD *)swift_allocObject();
      v50[2] = v48;
      v50[3] = v47;
      v50[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v51 = (uint64_t)v74;
      v71(v74, v70, (uint64_t)v73);
      v83 = v49;
      v80 = v50;
      swift_retain();
      v52 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v80, v51);
      v52(&v90, 0);
      v53 = v89[0];
      v54 = objc_msgSend(v89[0], sel_resultData);
      v55 = sub_1A468FFC4();
      v57 = v56;

      sub_1A4497660();
      sub_1A468FDFC();
      v68 = v44;
      sub_1A44695EC(v55, v57);
      v58 = (uint64_t)v80;
      v59 = v81;
      v60 = v82;
      v61 = v84;
      v73 = v50;
      v76 = v86;
      v62 = v87;
      v63 = v83;
      v64 = v85;
      sub_1A44976A4((uint64_t)v80, v81, v82, v83, v84, v85, v86, v87);
      v65 = v53;
      v72 = v65;
      v74 = (char *)objc_msgSend(v65, sel_latestFetchResultToken, v68);
      sub_1A44695EC(v69, (unint64_t)v79);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v66 = v76;
      sub_1A44976DC(v58, v59, v60, v63, v61, v64, v76, v62);

      v67 = v75;
      *v75 = v58;
      v67[1] = v59;
      v67[2] = v60;
      v67[3] = v63;
      v67[4] = v61;
      v67[5] = v64;
      v67[6] = v66;
      *((_BYTE *)v67 + 56) = v62;
      v67[8] = (uint64_t)v74;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v80, (uint64_t)&v90);
      sub_1A459A0BC((uint64_t)&v90, 0, 0);
      sub_1A4496084((uint64_t)&v90);
      swift_willThrow();
      sub_1A44695EC(v35, v39);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);

    }
  }
}

void sub_1A447FFEC(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>, id a4@<D0>)
{
  void *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD);
  void *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  id v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  _BYTE *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81[6];
  _QWORD v82[4];
  uint64_t v83[3];
  uint64_t v84;
  id v85[3];

  v5 = v4;
  v76 = a1;
  v75 = a3;
  v8 = sub_1A46915B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85[0] = v5;
  v85[1] = a2;
  v85[2] = a4;
  sub_1A468FE50();
  swift_allocObject();
  v11 = sub_1A468FE44();
  v12 = objc_msgSend(v5, sel_store);
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v78 = type metadata accessor for REMStoreObjectsContainer();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v16 = (uint64_t)v15;
  v15[3] = v14;
  v17 = v15 + 3;
  v15[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED243F48);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20 = (uint64_t)v79;
  v19(v79, v18, v8);
  v84 = v78;
  v83[0] = v16;
  swift_retain();
  v21 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v83, v20);
  v21(v82, 0);
  sub_1A449761C();
  v22 = v77;
  v23 = sub_1A468FE2C();
  if (v22)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v25 = sub_1A4690318();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE721AB0);
    v26 = v22;
    v27 = v22;
    v28 = sub_1A469030C();
    v29 = sub_1A4690FF0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v77 = (void *)v11;
      v31 = v30;
      v32 = swift_slowAlloc();
      v83[0] = v32;
      *(_DWORD *)v31 = 136315394;
      swift_getErrorValue();
      v33 = Error.rem_errorDescription.getter((uint64_t)v81[5]);
      v82[0] = sub_1A4431120(v33, v34, v83);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v31 + 12) = 2080;
      v82[0] = type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1C0);
      v35 = sub_1A46908E8();
      v82[0] = sub_1A4431120(v35, v36, v83);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v28, v29, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v32, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v37 = v23;
    v70 = v18;
    v71 = v19;
    v72 = v8;
    v73 = v16;
    v77 = (void *)v11;
    v38 = v24;
    swift_beginAccess();
    v39 = *v17;
    v40 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v37, v38);
    swift_bridgeObjectRetain();
    v81[0] = objc_msgSend(v40, sel_init);
    v41 = type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
    v83[0] = v41;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1C0);
    v43 = sub_1A46908E8();
    v45 = v44;
    v74 = &v67;
    MEMORY[0x1E0C80A78](v43);
    v46 = v38;
    *(&v67 - 6) = (uint64_t)v81;
    *(&v67 - 5) = (uint64_t)v85;
    *(&v67 - 4) = v76;
    *(&v67 - 3) = v47;
    v48 = v47;
    v49 = v46;
    *(&v67 - 2) = v46;
    *(&v67 - 1) = v39;
    v50 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v43, v45, v50, (char *)sub_1A4496070, (uint64_t)(&v67 - 8));
    v69 = v42;
    v76 = v41;
    sub_1A44695EC(v48, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v51 = objc_msgSend(v81[0], sel_resultStorages);
    v52 = sub_1A4690708();

    v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v83[0] = v52;
    sub_1A44311F0((uint64_t)v83, (uint64_t)v82);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v68 = v48;
      v74 = (uint64_t *)v49;
      v53 = v80;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
      v54 = objc_msgSend(v85[0], sel_store);
      v55 = v78;
      v56 = (_QWORD *)swift_allocObject();
      v56[2] = v54;
      v56[3] = v53;
      v56[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v57 = (uint64_t)v79;
      v71(v79, v70, v72);
      v84 = v55;
      v83[0] = (uint64_t)v56;
      swift_retain();
      v58 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v83, v57);
      v58(v82, 0);
      v59 = v81[0];
      v60 = objc_msgSend(v81[0], sel_resultData);
      v61 = sub_1A468FFC4();
      v63 = v62;

      sub_1A4497594();
      sub_1A468FDFC();
      sub_1A44695EC(v61, v63);
      LOBYTE(v63) = v83[0];
      v64 = v59;
      v65 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A44695EC(v68, (unint64_t)v74);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v66 = v75;
      *v75 = v63;
      *((_QWORD *)v66 + 1) = v65;
    }
    else
    {
      sub_1A44311F0((uint64_t)v83, (uint64_t)v82);
      sub_1A459A0BC((uint64_t)v82, 0, 0);
      sub_1A4496084((uint64_t)v82);
      swift_willThrow();
      sub_1A44695EC(v48, v49);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);

    }
  }
}

void sub_1A4480AE4(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void (*v57)(_QWORD *, _QWORD);
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  id v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _BYTE *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  id v80[6];
  _QWORD v81[4];
  uint64_t v82[3];
  uint64_t v83;
  id v84[4];

  v4 = v3;
  v75 = a1;
  v74 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v78 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84[3] = a2;
  v84[0] = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = objc_msgSend(v4, sel_store);
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v77 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v78;
  v17(v78, v16, v6);
  v83 = v77;
  v82[0] = v14;
  swift_retain();
  v19 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v82, v18);
  v19(v81, 0);
  sub_1A44975D8();
  v20 = v76;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v76 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v82[0] = v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v80[5]);
      v81[0] = sub_1A4431120(v31, v32, v82);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v81[0] = type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1F0);
      v33 = sub_1A46908E8();
      v81[0] = sub_1A4431120(v33, v34, v82);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v69 = v16;
    v70 = v17;
    v71 = v6;
    v72 = v14;
    v76 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v80[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
    v82[0] = v39;
    v40 = v36;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1F0);
    v42 = sub_1A46908E8();
    v44 = v43;
    v73 = &v66;
    MEMORY[0x1E0C80A78](v42);
    v45 = v40;
    *(&v66 - 6) = (uint64_t)v80;
    *(&v66 - 5) = (uint64_t)v84;
    *(&v66 - 4) = v75;
    *(&v66 - 3) = v46;
    v47 = v46;
    v48 = v45;
    *(&v66 - 2) = v45;
    *(&v66 - 1) = v37;
    v49 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v42, v44, v49, (char *)sub_1A4496070, (uint64_t)(&v66 - 8));
    v68 = v41;
    v75 = v39;
    sub_1A44695EC(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v50 = objc_msgSend(v80[0], sel_resultStorages);
    v51 = sub_1A4690708();

    v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v82[0] = v51;
    sub_1A44311F0((uint64_t)v82, (uint64_t)v81);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v67 = v47;
      v73 = (uint64_t *)v48;
      v52 = v79;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      v53 = objc_msgSend(v84[0], sel_store);
      v54 = v77;
      v55 = (_QWORD *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      v55[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v56 = (uint64_t)v78;
      v70(v78, v69, v71);
      v83 = v54;
      v82[0] = (uint64_t)v55;
      swift_retain();
      v57 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v82, v56);
      v57(v81, 0);
      v58 = v80[0];
      v59 = objc_msgSend(v80[0], sel_resultData);
      v60 = sub_1A468FFC4();
      v62 = v61;

      sub_1A4497594();
      sub_1A468FDFC();
      sub_1A44695EC(v60, v62);
      LOBYTE(v62) = v82[0];
      v63 = v58;
      v64 = objc_msgSend(v63, sel_latestFetchResultToken);
      sub_1A44695EC(v67, (unint64_t)v73);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v65 = v74;
      *v74 = v62;
      *((_QWORD *)v65 + 1) = v64;
    }
    else
    {
      sub_1A44311F0((uint64_t)v82, (uint64_t)v81);
      sub_1A459A0BC((uint64_t)v81, 0, 0);
      sub_1A4496084((uint64_t)v81);
      swift_willThrow();
      sub_1A44695EC(v47, v48);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);

    }
  }
}

void sub_1A44815C4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  void *v6;
  void *v7;
  char v9;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, _QWORD);
  void *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  id v64;
  id v65;
  _BYTE *v66;
  _QWORD v67[2];
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  _QWORD *v71;
  _BYTE *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  id v79[6];
  _QWORD v80[4];
  uint64_t v81[3];
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  char v86;
  uint64_t v87;
  id v88;

  v7 = v6;
  v9 = a4;
  v73 = a1;
  v72 = a6;
  v12 = a4 >> 8;
  v13 = sub_1A46915B4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v76 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = a2;
  v84 = a3;
  v85 = v9;
  v86 = v12;
  v87 = a5;
  v88 = v7;
  sub_1A468FE50();
  swift_allocObject();
  v77 = sub_1A468FE44();
  v16 = objc_msgSend(v7, sel_store);
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v75 = type metadata accessor for REMStoreObjectsContainer();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v16;
  v19[3] = v18;
  v19[4] = sub_1A443CEF8(v17);
  if (qword_1ED244118 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED243F48);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v22 = v13;
  v23 = (uint64_t)v76;
  v21(v76, v20, v22);
  v82 = v75;
  v81[0] = (uint64_t)v19;
  swift_retain();
  v24 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v81, v23);
  v24(v80, 0);
  sub_1A4497550();
  v25 = v74;
  v26 = sub_1A468FE2C();
  if (v25)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v28 = sub_1A4690318();
    __swift_project_value_buffer(v28, (uint64_t)qword_1EE721AB0);
    v29 = v25;
    v30 = v25;
    v31 = sub_1A469030C();
    v32 = sub_1A4690FF0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v81[0] = v34;
      *(_DWORD *)v33 = 136315394;
      swift_getErrorValue();
      v35 = Error.rem_errorDescription.getter((uint64_t)v79[5]);
      v80[0] = sub_1A4431120(v35, v36, v81);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v33 + 12) = 2080;
      v80[0] = type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1D8);
      v37 = sub_1A46908E8();
      v80[0] = sub_1A4431120(v37, v38, v81);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v31, v32, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v34, -1, -1);
      MEMORY[0x1A85A0114](v33, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v39 = v26;
    v40 = v27;
    v68 = v20;
    v69 = v21;
    v70 = v22;
    v71 = v19;
    swift_beginAccess();
    v41 = v19[3];
    v42 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v39, v40);
    swift_bridgeObjectRetain();
    v79[0] = objc_msgSend(v42, sel_init);
    v43 = type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
    v81[0] = v43;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F1D8);
    v45 = sub_1A46908E8();
    v47 = v46;
    v74 = v67;
    MEMORY[0x1E0C80A78](v45);
    v67[-6] = v79;
    v67[-5] = &v88;
    v67[-4] = v73;
    v67[-3] = v39;
    v67[-2] = v40;
    v67[-1] = v41;
    v48 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v45, v47, v48, (char *)sub_1A4496070, (uint64_t)&v67[-8]);
    v67[1] = v44;
    v73 = v43;
    v49 = v39;
    sub_1A44695EC(v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v50 = objc_msgSend(v79[0], sel_resultStorages);
    v51 = sub_1A4690708();

    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v81[0] = v51;
    sub_1A44311F0((uint64_t)v81, (uint64_t)v80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    v52 = v40;
    if (swift_dynamicCast())
    {
      v74 = (_QWORD *)v49;
      v53 = v78;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      v54 = objc_msgSend(v88, sel_store);
      v55 = v75;
      v56 = (_QWORD *)swift_allocObject();
      v56[2] = v54;
      v56[3] = v53;
      v56[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v57 = (uint64_t)v76;
      v69(v76, v68, v70);
      v82 = v55;
      v81[0] = (uint64_t)v56;
      swift_retain();
      v58 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v81, v57);
      v58(v80, 0);
      v59 = v79[0];
      v60 = objc_msgSend(v79[0], sel_resultData);
      v61 = sub_1A468FFC4();
      v63 = v62;

      sub_1A4497594();
      sub_1A468FDFC();
      sub_1A44695EC(v61, v63);
      LOBYTE(v63) = v81[0];
      v64 = v59;
      v65 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v74, v52);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v66 = v72;
      *v72 = v63;
      *((_QWORD *)v66 + 1) = v65;
    }
    else
    {
      sub_1A44311F0((uint64_t)v81, (uint64_t)v80);
      sub_1A459A0BC((uint64_t)v80, 0, 0);
      sub_1A4496084((uint64_t)v80);
      swift_willThrow();
      sub_1A44695EC(v49, v40);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);

    }
  }
}

void sub_1A44820AC(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  sub_1A4482104(a1, a2, (void (*)(uint64_t))sub_1A44974C8, (uint64_t)&type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation, &qword_1EE71D460, (char *)sub_1A4496070, (void (*)(void))sub_1A449750C, a3);
}

void sub_1A4482104(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, void (*a8)(void)@<X7>, _BYTE *a9@<X8>)
{
  void *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t (*v26)(_QWORD *, _QWORD);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  id v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  void (*v62)(_QWORD *, _QWORD);
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  id v68;
  id v69;
  _BYTE *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _BYTE *v76;
  void (*v77)(void);
  uint64_t v78;
  char *v79;
  uint64_t (*v80)(_QWORD);
  uint64_t *v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  uint64_t v84;
  void *v85;
  uint64_t v86;
  id v87[6];
  _QWORD v88[4];
  _QWORD *v89;
  uint64_t v90;
  _QWORD v91[4];

  v77 = a8;
  v79 = a7;
  v81 = a6;
  v80 = a5;
  v84 = a4;
  v83 = a3;
  v10 = v9;
  v78 = a1;
  v76 = a9;
  v12 = sub_1A46915B4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91[3] = a2;
  v91[0] = v10;
  sub_1A468FE50();
  swift_allocObject();
  v16 = sub_1A468FE44();
  v17 = v10;
  v18 = MEMORY[0x1E0DEE9D8];
  v19 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v20 = type metadata accessor for REMStoreObjectsContainer();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v17;
  v22 = (uint64_t)v21;
  v21[3] = v19;
  v23 = v21 + 3;
  v21[4] = sub_1A443CEF8(v18);
  if (qword_1ED244118 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED243F48);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v25(v15, v24, v12);
  v90 = v20;
  v89 = (_QWORD *)v22;
  v82 = v22;
  swift_retain();
  v26 = (uint64_t (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v89, (uint64_t)v15);
  v27 = v26(v88, 0);
  v83(v27);
  v28 = v85;
  v29 = sub_1A468FE2C();
  v85 = (void *)v30;
  if (v28)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v31 = sub_1A4690318();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EE721AB0);
    v32 = v28;
    v33 = v28;
    v34 = sub_1A469030C();
    v35 = sub_1A4690FF0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v89 = (_QWORD *)v37;
      *(_DWORD *)v36 = 136315394;
      swift_getErrorValue();
      v38 = Error.rem_errorDescription.getter((uint64_t)v87[5]);
      v88[0] = sub_1A4431120(v38, v39, (uint64_t *)&v89);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v36 + 12) = 2080;
      v88[0] = v80(0);
      __swift_instantiateConcreteTypeFromMangledName(v81);
      v40 = sub_1A46908E8();
      v88[0] = sub_1A4431120(v40, v41, (uint64_t *)&v89);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v34, v35, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v37, -1, -1);
      MEMORY[0x1A85A0114](v36, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v71 = v24;
    v72 = v25;
    v73 = v20;
    v83 = (void (*)(uint64_t))v16;
    v74 = v12;
    v75 = v15;
    v42 = (uint64_t (*)(_QWORD))v29;
    swift_beginAccess();
    v43 = *v23;
    v44 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    v84 = 0;
    v45 = (unint64_t)v85;
    sub_1A44695A8((uint64_t)v42, (unint64_t)v85);
    swift_bridgeObjectRetain();
    v87[0] = objc_msgSend(v44, sel_init);
    v46 = v80(0);
    v89 = (_QWORD *)v46;
    v47 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(v81);
    v48 = sub_1A46908E8();
    v50 = v49;
    MEMORY[0x1E0C80A78](v48);
    *(&v71 - 6) = (uint64_t)v87;
    *(&v71 - 5) = (uint64_t)v91;
    *(&v71 - 4) = v78;
    *(&v71 - 3) = (uint64_t)v42;
    *(&v71 - 2) = v45;
    *(&v71 - 1) = v43;
    v51 = sub_1A4690FD8();
    v52 = v84;
    measureTimeElapsed(_:level:block:)(v48, v50, v51, v79, (uint64_t)(&v71 - 8));
    if (v52)
    {
      v53 = (unint64_t)v85;
      sub_1A44695EC((uint64_t)v42, (unint64_t)v85);
      sub_1A44695EC((uint64_t)v42, v53);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      v81 = v47;
      v84 = v46;
      sub_1A44695EC((uint64_t)v42, (unint64_t)v85);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A468FE20();
      swift_allocObject();
      sub_1A468FE14();
      v54 = objc_msgSend(v87[0], sel_resultStorages);
      v55 = sub_1A4690708();

      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
      v89 = (_QWORD *)v55;
      sub_1A44311F0((uint64_t)&v89, (uint64_t)v88);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
      if (swift_dynamicCast())
      {
        v80 = v42;
        v56 = v86;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
        v57 = (void *)v91[0];
        v58 = v73;
        v59 = (_QWORD *)swift_allocObject();
        v59[2] = v57;
        v59[3] = v56;
        v60 = v57;
        v59[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
        v61 = (uint64_t)v75;
        v72(v75, v71, v74);
        v90 = v58;
        v89 = v59;
        swift_retain();
        v62 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
        sub_1A4599F20((uint64_t)&v89, v61);
        v62(v88, 0);
        v63 = v87[0];
        v64 = objc_msgSend(v87[0], sel_resultData);
        v65 = sub_1A468FFC4();
        v67 = v66;

        v77();
        sub_1A468FDFC();
        sub_1A44695EC(v65, v67);
        LOBYTE(v67) = (_BYTE)v89;
        v68 = v63;
        v69 = objc_msgSend(v68, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v80, (unint64_t)v85);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v70 = v76;
        *v76 = v67;
        *((_QWORD *)v70 + 1) = v69;
        return;
      }
      sub_1A44311F0((uint64_t)&v89, (uint64_t)v88);
      sub_1A459A0BC((uint64_t)v88, 0, 0);
      sub_1A4496084((uint64_t)v88);
      swift_willThrow();
      sub_1A44695EC((uint64_t)v42, (unint64_t)v85);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
    }

  }
}

void sub_1A4482BE4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  void (*v56)(_QWORD *, _QWORD);
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80[2];
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94[6];
  _QWORD v95[4];
  uint64_t v96[2];
  uint64_t v97;
  _QWORD v98[4];

  v4 = v3;
  v88 = a1;
  v87 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v91 = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98[3] = a2;
  v98[0] = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = v4;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v90 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v91;
  v17(v91, v16, v6);
  v97 = v90;
  v96[0] = v14;
  swift_retain();
  v19 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v96, v18);
  v19(v95, 0);
  sub_1A4497484();
  v20 = v89;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v89 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v96[0] = v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v94[5]);
      v95[0] = sub_1A4431120(v31, v32, v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v95[0] = type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D450);
      v33 = sub_1A46908E8();
      v95[0] = sub_1A4431120(v33, v34, v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v82 = v16;
    v83 = v17;
    v84 = v6;
    v85 = v14;
    v89 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v94[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
    v96[0] = v39;
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D450);
    v41 = sub_1A46908E8();
    v43 = v42;
    v86 = v80;
    MEMORY[0x1E0C80A78](v41);
    v80[-6] = (uint64_t)v94;
    v80[-5] = (uint64_t)v98;
    v80[-4] = v88;
    v80[-3] = v44;
    v45 = v44;
    v80[-2] = v36;
    v80[-1] = v37;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (char *)sub_1A4496070, (uint64_t)&v80[-8]);
    v88 = 0;
    v80[1] = v40;
    v81 = v39;
    sub_1A44695EC(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v47 = v36;
    sub_1A468FE14();
    v48 = objc_msgSend(v94[0], sel_resultStorages);
    v49 = sub_1A4690708();

    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v96[0] = v49;
    sub_1A44311F0((uint64_t)v96, (uint64_t)v95);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v80[0] = v45;
      v86 = (uint64_t *)v47;
      v50 = v93;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
      v51 = (void *)v98[0];
      v52 = v90;
      v53 = (char *)swift_allocObject();
      *((_QWORD *)v53 + 2) = v51;
      *((_QWORD *)v53 + 3) = v50;
      v54 = v51;
      *((_QWORD *)v53 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v55 = (uint64_t)v91;
      v83(v91, v82, v84);
      v97 = v52;
      v96[0] = (uint64_t)v53;
      swift_retain();
      v56 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v96, v55);
      v56(v95, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
      v57 = v94[0];
      v58 = objc_msgSend(v94[0], sel_resultData);
      v59 = sub_1A468FFC4();
      v61 = v60;

      sub_1A4474CE4((unint64_t *)&qword_1ED2440C8, &qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3D8]);
      v62 = (void *)v88;
      sub_1A468FDFC();
      if (!v62)
      {
        sub_1A44695EC(v59, v61);
        v74 = v96[0];
        swift_bridgeObjectRetain();
        v75 = v57;
        v76 = objc_msgSend(v75, sel_latestFetchResultToken);
        sub_1A44695EC(v80[0], (unint64_t)v86);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v77 = v87;
        *v87 = v74;
        v77[1] = (uint64_t)v76;
        return;
      }
      v91 = v53;
      sub_1A44695EC(v59, v61);
      if (qword_1EE71C138 != -1)
        swift_once();
      v63 = sub_1A4690318();
      __swift_project_value_buffer(v63, (uint64_t)qword_1EE721AB0);
      v64 = v62;
      v65 = v62;
      v66 = sub_1A469030C();
      v67 = sub_1A4690FF0();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v96[0] = v69;
        *(_DWORD *)v68 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v92);
        v95[0] = sub_1A4431120(v70, v71, v96);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v68 + 12) = 2080;
        v95[0] = v81;
        v72 = sub_1A46908E8();
        v95[0] = sub_1A4431120(v72, v73, v96);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v68, -1, -1);
      }
      else
      {

      }
      v78 = (unint64_t)v86;
      v79 = v80[0];
      swift_willThrow();
      sub_1A44695EC(v79, v78);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v96, (uint64_t)v95);
      sub_1A459A0BC((uint64_t)v95, 0, 0);
      sub_1A4496084((uint64_t)v95);
      swift_willThrow();
      sub_1A44695EC(v45, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    }

  }
}

void sub_1A44836E4(void *a1@<X0>, __int128 *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD);
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  id v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  void *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  _QWORD v94[103];
  uint64_t v95[100];
  id v96[8];
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD v106[3];
  id v107;

  v4 = v3;
  v87 = a3;
  v88 = a1;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v92 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[9];
  v105 = a2[8];
  v106[0] = v9;
  *(_OWORD *)((char *)v106 + 9) = *(__int128 *)((char *)a2 + 153);
  v10 = a2[5];
  v101 = a2[4];
  v102 = v10;
  v11 = a2[6];
  v104 = a2[7];
  v103 = v11;
  v12 = a2[1];
  v97 = *a2;
  v98 = v12;
  v13 = a2[2];
  v100 = a2[3];
  v99 = v13;
  v107 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v93 = sub_1A468FE44();
  v14 = objc_msgSend(v4, sel_store);
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v91 = type metadata accessor for REMStoreObjectsContainer();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v14;
  v18 = (uint64_t)v17;
  v17[3] = v16;
  v19 = v17 + 3;
  v17[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v22 = (uint64_t)v92;
  v21(v92, v20, v6);
  v95[3] = v91;
  v95[0] = v18;
  v89 = v18;
  swift_retain();
  v23 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v95, v22);
  v23(v94, 0);
  sub_1A44967D0();
  v24 = v90;
  v25 = sub_1A468FE2C();
  if (v24)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v27 = sub_1A4690318();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EE721AB0);
    v28 = v24;
    v29 = v24;
    v30 = sub_1A469030C();
    v31 = sub_1A4690FF0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v95[0] = v33;
      *(_DWORD *)v32 = 136315394;
      swift_getErrorValue();
      v34 = Error.rem_errorDescription.getter((uint64_t)v96[5]);
      v94[0] = sub_1A4431120(v34, v35, v95);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v32 + 12) = 2080;
      v94[0] = type metadata accessor for REMSuggestedAttributesTrainer();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D438);
      v36 = sub_1A46908E8();
      v94[0] = sub_1A4431120(v36, v37, v95);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v32, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v38 = v25;
    v39 = v26;
    v83 = v20;
    v84 = v21;
    v85 = v6;
    swift_beginAccess();
    v40 = *v19;
    v41 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v38, v39);
    swift_bridgeObjectRetain();
    v96[0] = objc_msgSend(v41, sel_init);
    v82 = type metadata accessor for REMSuggestedAttributesTrainer();
    v95[0] = v82;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D438);
    v43 = sub_1A46908E8();
    v45 = v44;
    v86 = &v81;
    MEMORY[0x1E0C80A78](v43);
    *(&v81 - 6) = (uint64_t)v96;
    *(&v81 - 5) = (uint64_t)&v107;
    *(&v81 - 4) = (uint64_t)v88;
    *(&v81 - 3) = v38;
    v46 = v38;
    v48 = v47;
    *(&v81 - 2) = v47;
    *(&v81 - 1) = v40;
    v90 = (void *)v40;
    v49 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v43, v45, v49, (char *)sub_1A4496070, (uint64_t)(&v81 - 8));
    v88 = 0;
    v81 = v42;
    sub_1A44695EC(v46, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v50 = sub_1A468FE14();
    v51 = objc_msgSend(v96[0], sel_resultStorages);
    v52 = sub_1A4690708();

    v95[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v95[0] = v52;
    sub_1A44311F0((uint64_t)v95, (uint64_t)v94);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v90 = (void *)v48;
      v86 = (_QWORD *)v46;
      v53 = v95[99];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
      v54 = objc_msgSend(v107, sel_store);
      v55 = v91;
      v56 = (char *)swift_allocObject();
      *((_QWORD *)v56 + 2) = v54;
      *((_QWORD *)v56 + 3) = v53;
      *((_QWORD *)v56 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v57 = (uint64_t)v92;
      v84(v92, v83, v85);
      v95[3] = v55;
      v95[0] = (uint64_t)v56;
      swift_retain();
      v58 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v95, v57);
      v58(v94, 0);
      v59 = v96[0];
      v60 = objc_msgSend(v96[0], sel_resultData);
      v61 = sub_1A468FFC4();
      v63 = v62;

      sub_1A4496814();
      v64 = v88;
      sub_1A468FDFC();
      if (!v64)
      {
        sub_1A44695EC(v61, v63);
        memcpy(v94, v95, 0x318uLL);
        sub_1A4496CF0((uint64_t)v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496858, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A449694C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1A4496988, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A4496C38);
        v77 = v59;
        v78 = objc_msgSend(v77, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v86, (unint64_t)v90);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A4496CF0((uint64_t)v94, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496FEC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A44970E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1A449711C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A44973CC);

        v79 = v87;
        memcpy(v87, v94, 0x318uLL);
        v79[99] = v78;
        return;
      }
      v92 = v56;
      sub_1A44695EC(v61, v63);
      if (qword_1EE71C138 != -1)
        swift_once();
      v65 = sub_1A4690318();
      __swift_project_value_buffer(v65, (uint64_t)qword_1EE721AB0);
      v66 = v64;
      v67 = v64;
      v68 = sub_1A469030C();
      v69 = sub_1A4690FF0();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v91 = v50;
        v72 = v71;
        v95[0] = v71;
        *(_DWORD *)v70 = 136315394;
        swift_getErrorValue();
        v73 = Error.rem_errorDescription.getter(v94[100]);
        v94[0] = sub_1A4431120(v73, v74, v95);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v70 + 12) = 2080;
        v94[0] = v82;
        v75 = sub_1A46908E8();
        v94[0] = sub_1A4431120(v75, v76, v95);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v68, v69, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v72, -1, -1);
        MEMORY[0x1A85A0114](v70, -1, -1);
      }
      else
      {

      }
      v80 = (uint64_t)v86;
      swift_willThrow();
      sub_1A44695EC(v80, (unint64_t)v90);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v95, (uint64_t)v94);
      sub_1A459A0BC((uint64_t)v94, 0, 0);
      sub_1A4496084((uint64_t)v94);
      swift_willThrow();
      sub_1A44695EC(v46, v48);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
    }

  }
}

void sub_1A44841AC(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  sub_1A448425C(a1, a2, (void (*)(uint64_t))sub_1A4496650, (uint64_t)&type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation, &qword_1EE71D410, (char *)sub_1A4496070, &qword_1EE71D418, a3, (void (*)(void))sub_1A4496694);
}

void sub_1A4484204(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  sub_1A448425C(a1, a2, (void (*)(uint64_t))sub_1A4496710, (uint64_t)&type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation, &qword_1ED23EFF0, (char *)sub_1A4496070, &qword_1ED243C90, a3, (void (*)(void))sub_1A4496754);
}

void sub_1A448425C(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t *a6@<X5>, char *a7@<X6>, uint64_t *a8@<X7>, uint64_t *a9@<X8>, void (*a10)(void))
{
  void *v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t (*v26)(_QWORD *, _QWORD);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  unint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  int v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  _QWORD *v58;
  id v59;
  uint64_t v60;
  void (*v61)(_QWORD *, _QWORD);
  id v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  uint64_t *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t (*v80)(_QWORD);
  uint64_t *v81;
  uint64_t v82;
  void (*v83)(uint64_t);
  _QWORD *v84;
  void *v85;
  uint64_t v86;
  id v87[6];
  _QWORD v88[4];
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  char v92;

  v76 = a8;
  v78 = a7;
  v81 = a6;
  v80 = a5;
  v84 = (_QWORD *)a4;
  v83 = a3;
  v11 = v10;
  v77 = a1;
  v75 = a9;
  v13 = sub_1A46915B4();
  v82 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = a2;
  v91 = v11;
  sub_1A468FE50();
  swift_allocObject();
  v16 = sub_1A468FE44();
  v17 = v11;
  v18 = MEMORY[0x1E0DEE9D8];
  v19 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v20 = type metadata accessor for REMStoreObjectsContainer();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v17;
  v22 = (uint64_t)v21;
  v21[3] = v19;
  v23 = v21 + 3;
  v21[4] = sub_1A443CEF8(v18);
  if (qword_1ED244118 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED243F48);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 16);
  v25(v15, v24, v13);
  v90 = v20;
  v89 = (_QWORD *)v22;
  v82 = v22;
  swift_retain();
  v26 = (uint64_t (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v89, (uint64_t)v15);
  v27 = v26(v88, 0);
  v83(v27);
  v28 = v85;
  v29 = sub_1A468FE2C();
  v85 = (void *)v30;
  if (v28)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v31 = sub_1A4690318();
    __swift_project_value_buffer(v31, (uint64_t)qword_1EE721AB0);
    v32 = v28;
    v33 = v28;
    v34 = sub_1A469030C();
    v35 = sub_1A4690FF0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = swift_slowAlloc();
      v79 = v16;
      v37 = v36;
      v38 = swift_slowAlloc();
      v89 = (_QWORD *)v38;
      *(_DWORD *)v37 = 136315394;
      swift_getErrorValue();
      v39 = Error.rem_errorDescription.getter((uint64_t)v87[5]);
      v88[0] = sub_1A4431120(v39, v40, (uint64_t *)&v89);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v37 + 12) = 2080;
      v88[0] = v80(0);
      __swift_instantiateConcreteTypeFromMangledName(v81);
      v41 = sub_1A46908E8();
      v88[0] = sub_1A4431120(v41, v42, (uint64_t *)&v89);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v34, v35, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v38, -1, -1);
      MEMORY[0x1A85A0114](v37, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v71 = v24;
    v72 = v25;
    v73 = v20;
    v74 = v13;
    v83 = (void (*)(uint64_t))v15;
    v79 = v16;
    v43 = v29;
    swift_beginAccess();
    v44 = *v23;
    v45 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    v46 = (unint64_t)v85;
    sub_1A44695A8(v43, (unint64_t)v85);
    swift_bridgeObjectRetain();
    v87[0] = objc_msgSend(v45, sel_init);
    v47 = (uint64_t *)v80(0);
    v89 = v47;
    v48 = __swift_instantiateConcreteTypeFromMangledName(v81);
    v49 = sub_1A46908E8();
    v51 = v50;
    v84 = &v71;
    MEMORY[0x1E0C80A78](v49);
    *(&v71 - 6) = (uint64_t)v87;
    *(&v71 - 5) = (uint64_t)&v91;
    *(&v71 - 4) = v77;
    *(&v71 - 3) = v43;
    *(&v71 - 2) = v46;
    *(&v71 - 1) = v44;
    v52 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v49, v51, v52, v78, (uint64_t)(&v71 - 8));
    v80 = (uint64_t (*)(_QWORD))v48;
    v81 = v47;
    sub_1A44695EC(v43, (unint64_t)v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v53 = objc_msgSend(v87[0], sel_resultStorages);
    v54 = sub_1A4690708();

    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v89 = (_QWORD *)v54;
    sub_1A44311F0((uint64_t)&v89, (uint64_t)v88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v84 = (_QWORD *)v43;
      v55 = v86;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);
      v56 = v91;
      v57 = v73;
      v58 = (_QWORD *)swift_allocObject();
      v58[2] = v56;
      v58[3] = v55;
      v59 = v56;
      v58[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v60 = (uint64_t)v83;
      v72((char *)v83, v71, v74);
      v90 = v57;
      v89 = v58;
      swift_retain();
      v61 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v89, v60);
      v61(v88, 0);
      __swift_instantiateConcreteTypeFromMangledName(v76);
      v62 = v87[0];
      v63 = objc_msgSend(v87[0], sel_resultData);
      v64 = sub_1A468FFC4();
      v66 = v65;

      a10();
      sub_1A468FDFC();
      sub_1A44695EC(v64, v66);
      v67 = (uint64_t)v89;
      swift_bridgeObjectRetain();
      v68 = v62;
      v69 = objc_msgSend(v68, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v84, (unint64_t)v85);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v70 = v75;
      *v75 = v67;
      v70[1] = (uint64_t)v69;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v89, (uint64_t)v88);
      sub_1A459A0BC((uint64_t)v88, 0, 0);
      sub_1A4496084((uint64_t)v88);
      swift_willThrow();
      sub_1A44695EC(v43, (unint64_t)v85);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v89);

    }
  }
}

void sub_1A4484D94(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82[6];
  _QWORD v83[4];
  _QWORD *v84;
  char v85;
  uint64_t v86;
  void *v87;
  char v88;

  v4 = v3;
  v77 = a1;
  v76 = a3;
  v5 = a2 & 1;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v80 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = v5;
  v87 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = v4;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v79 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v80;
  v17(v80, v16, v6);
  v86 = v79;
  v84 = (_QWORD *)v14;
  swift_retain();
  v19 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v84, v18);
  v19(v83, 0);
  sub_1A44965C8();
  v20 = v78;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v78 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v84 = (_QWORD *)v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v82[5]);
      v83[0] = sub_1A4431120(v31, v32, (uint64_t *)&v84);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v83[0] = type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3F8);
      v33 = sub_1A46908E8();
      v83[0] = sub_1A4431120(v33, v34, (uint64_t *)&v84);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v71 = v16;
    v72 = v17;
    v73 = v6;
    v74 = v14;
    v78 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v82[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
    v84 = (_QWORD *)v39;
    v40 = v36;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3F8);
    v42 = sub_1A46908E8();
    v44 = v43;
    v75 = &v68;
    MEMORY[0x1E0C80A78](v42);
    v45 = v40;
    *(&v68 - 6) = (uint64_t)v82;
    *(&v68 - 5) = (uint64_t)&v87;
    *(&v68 - 4) = v77;
    *(&v68 - 3) = v46;
    v47 = v46;
    v48 = v45;
    *(&v68 - 2) = v45;
    *(&v68 - 1) = v37;
    v49 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v42, v44, v49, (char *)sub_1A4496070, (uint64_t)(&v68 - 8));
    v70 = v41;
    v77 = v39;
    sub_1A44695EC(v47, v48);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v50 = objc_msgSend(v82[0], sel_resultStorages);
    v51 = sub_1A4690708();

    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v84 = (_QWORD *)v51;
    sub_1A44311F0((uint64_t)&v84, (uint64_t)v83);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v69 = v47;
      v75 = (uint64_t *)v48;
      v52 = v81;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);
      v53 = v87;
      v54 = v79;
      v55 = (_QWORD *)swift_allocObject();
      v55[2] = v53;
      v55[3] = v52;
      v56 = v53;
      v55[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v57 = (uint64_t)v80;
      v72(v80, v71, v73);
      v86 = v54;
      v84 = v55;
      swift_retain();
      v58 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v84, v57);
      v58(v83, 0);
      v59 = v82[0];
      v60 = objc_msgSend(v82[0], sel_resultData);
      v61 = sub_1A468FFC4();
      v63 = v62;

      sub_1A449660C();
      sub_1A468FDFC();
      sub_1A44695EC(v61, v63);
      v64 = (uint64_t)v84;
      LOBYTE(v61) = v85;
      swift_bridgeObjectRetain();
      v65 = v59;
      v66 = objc_msgSend(v65, sel_latestFetchResultToken);
      sub_1A44695EC(v69, (unint64_t)v75);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v67 = v76;
      *v76 = v64;
      *((_BYTE *)v67 + 8) = v61;
      v67[2] = (uint64_t)v66;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v84, (uint64_t)v83);
      sub_1A459A0BC((uint64_t)v83, 0, 0);
      sub_1A4496084((uint64_t)v83);
      swift_willThrow();
      sub_1A44695EC(v47, v48);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v84);

    }
  }
}

void sub_1A4485864(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  void *v5;
  void *v6;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD);
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  char *v57;
  id v58;
  uint64_t v59;
  void (*v60)(_QWORD *, _QWORD);
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  uint64_t *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84[2];
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98[6];
  _QWORD v99[4];
  uint64_t v100[2];
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  void *v105;

  v6 = v5;
  v92 = a1;
  v91 = a5;
  v9 = a4 & 1;
  v10 = sub_1A46915B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v95 = (char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = a2;
  v103 = a3;
  v104 = v9;
  v105 = v6;
  sub_1A468FE50();
  swift_allocObject();
  v13 = sub_1A468FE44();
  v14 = v6;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v94 = type metadata accessor for REMStoreObjectsContainer();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v14;
  v18 = (uint64_t)v17;
  v17[3] = v16;
  v19 = v17 + 3;
  v17[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED243F48);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v22 = (uint64_t)v95;
  v21(v95, v20, v10);
  v101 = v94;
  v100[0] = v18;
  swift_retain();
  v23 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v100, v22);
  v23(v99, 0);
  sub_1A4496584();
  v24 = v93;
  v25 = sub_1A468FE2C();
  if (v24)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v27 = sub_1A4690318();
    __swift_project_value_buffer(v27, (uint64_t)qword_1EE721AB0);
    v28 = v24;
    v29 = v24;
    v30 = sub_1A469030C();
    v31 = sub_1A4690FF0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v93 = (void *)v13;
      v33 = v32;
      v34 = swift_slowAlloc();
      v100[0] = v34;
      *(_DWORD *)v33 = 136315394;
      swift_getErrorValue();
      v35 = Error.rem_errorDescription.getter((uint64_t)v98[5]);
      v99[0] = sub_1A4431120(v35, v36, v100);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v33 + 12) = 2080;
      v99[0] = type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3E8);
      v37 = sub_1A46908E8();
      v99[0] = sub_1A4431120(v37, v38, v100);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v30, v31, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v34, -1, -1);
      MEMORY[0x1A85A0114](v33, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v39 = v25;
    v40 = v26;
    v86 = v20;
    v87 = v21;
    v88 = v10;
    v89 = v18;
    v93 = (void *)v13;
    swift_beginAccess();
    v41 = *v19;
    v42 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v39, v40);
    swift_bridgeObjectRetain();
    v98[0] = objc_msgSend(v42, sel_init);
    v43 = type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation();
    v100[0] = v43;
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3E8);
    v45 = sub_1A46908E8();
    v47 = v46;
    v90 = v84;
    MEMORY[0x1E0C80A78](v45);
    v84[-6] = (uint64_t)v98;
    v84[-5] = (uint64_t)&v105;
    v84[-4] = v92;
    v84[-3] = v48;
    v49 = v48;
    v84[-2] = v40;
    v84[-1] = v41;
    v50 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v45, v47, v50, (char *)sub_1A4496070, (uint64_t)&v84[-8]);
    v92 = 0;
    v84[1] = v44;
    v85 = v43;
    sub_1A44695EC(v49, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v51 = v40;
    sub_1A468FE14();
    v52 = objc_msgSend(v98[0], sel_resultStorages);
    v53 = sub_1A4690708();

    v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v100[0] = v53;
    sub_1A44311F0((uint64_t)v100, (uint64_t)v99);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v84[0] = v49;
      v90 = (uint64_t *)v51;
      v54 = v97;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
      v55 = v105;
      v56 = v94;
      v57 = (char *)swift_allocObject();
      *((_QWORD *)v57 + 2) = v55;
      *((_QWORD *)v57 + 3) = v54;
      v58 = v55;
      *((_QWORD *)v57 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v59 = (uint64_t)v95;
      v87(v95, v86, v88);
      v101 = v56;
      v100[0] = (uint64_t)v57;
      swift_retain();
      v60 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v100, v59);
      v60(v99, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
      v61 = v98[0];
      v62 = objc_msgSend(v98[0], sel_resultData);
      v63 = sub_1A468FFC4();
      v65 = v64;

      sub_1A4474CE4((unint64_t *)&qword_1ED2440C8, &qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable, MEMORY[0x1E0DEB3D8]);
      v66 = (void *)v92;
      sub_1A468FDFC();
      if (!v66)
      {
        sub_1A44695EC(v63, v65);
        v78 = v100[0];
        swift_bridgeObjectRetain();
        v79 = v61;
        v80 = objc_msgSend(v79, sel_latestFetchResultToken);
        sub_1A44695EC(v84[0], (unint64_t)v90);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v81 = v91;
        *v91 = v78;
        v81[1] = (uint64_t)v80;
        return;
      }
      v95 = v57;
      sub_1A44695EC(v63, v65);
      if (qword_1EE71C138 != -1)
        swift_once();
      v67 = sub_1A4690318();
      __swift_project_value_buffer(v67, (uint64_t)qword_1EE721AB0);
      v68 = v66;
      v69 = v66;
      v70 = sub_1A469030C();
      v71 = sub_1A4690FF0();
      if (os_log_type_enabled(v70, v71))
      {
        v72 = swift_slowAlloc();
        v73 = swift_slowAlloc();
        v100[0] = v73;
        *(_DWORD *)v72 = 136315394;
        swift_getErrorValue();
        v74 = Error.rem_errorDescription.getter(v96);
        v99[0] = sub_1A4431120(v74, v75, v100);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v72 + 12) = 2080;
        v99[0] = v85;
        v76 = sub_1A46908E8();
        v99[0] = sub_1A4431120(v76, v77, v100);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v70, v71, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v72, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v73, -1, -1);
        MEMORY[0x1A85A0114](v72, -1, -1);
      }
      else
      {

      }
      v82 = (unint64_t)v90;
      v83 = v84[0];
      swift_willThrow();
      sub_1A44695EC(v83, v82);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v100, (uint64_t)v99);
      sub_1A459A0BC((uint64_t)v99, 0, 0);
      sub_1A4496084((uint64_t)v99);
      swift_willThrow();
      sub_1A44695EC(v49, v51);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
    }

  }
}

void sub_1A448637C(uint64_t a1@<X0>, __int128 *a2@<X1>, _BYTE *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void (*v20)(_QWORD *, _QWORD);
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  int v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void (*v58)(_QWORD *, _QWORD);
  id v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  _BYTE *v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  id v83[6];
  _QWORD v84[4];
  uint64_t v85[3];
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  char v90;
  id v91;

  v4 = v3;
  v78 = a1;
  v77 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v81 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[1];
  v87 = *a2;
  v88 = v9;
  v89 = a2[2];
  v90 = *((_BYTE *)a2 + 48);
  v91 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v10 = sub_1A468FE44();
  v11 = objc_msgSend(v4, sel_store);
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v80 = type metadata accessor for REMStoreObjectsContainer();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v11;
  v15 = (uint64_t)v14;
  v14[3] = v13;
  v16 = v14 + 3;
  v14[4] = sub_1A443CEF8(v12);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19 = (uint64_t)v81;
  v18(v81, v17, v6);
  v86 = v80;
  v85[0] = v15;
  swift_retain();
  v20 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v85, v19);
  v20(v84, 0);
  sub_1A44964FC();
  v21 = v79;
  v22 = sub_1A468FE2C();
  if (v21)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1EE721AB0);
    v25 = v21;
    v26 = v21;
    v27 = sub_1A469030C();
    v28 = sub_1A4690FF0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v79 = (void *)v10;
      v30 = v29;
      v31 = swift_slowAlloc();
      v85[0] = v31;
      *(_DWORD *)v30 = 136315394;
      swift_getErrorValue();
      v32 = Error.rem_errorDescription.getter((uint64_t)v83[5]);
      v84[0] = sub_1A4431120(v32, v33, v85);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v30 + 12) = 2080;
      v84[0] = type metadata accessor for REMSuggestedAttributesFeatureExtractor();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3D0);
      v34 = sub_1A46908E8();
      v84[0] = sub_1A4431120(v34, v35, v85);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v27, v28, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v31, -1, -1);
      MEMORY[0x1A85A0114](v30, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v36 = v22;
    v37 = v23;
    v72 = v17;
    v73 = v18;
    v74 = v6;
    v75 = v15;
    v79 = (void *)v10;
    swift_beginAccess();
    v38 = *v16;
    v39 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v36, v37);
    swift_bridgeObjectRetain();
    v83[0] = objc_msgSend(v39, sel_init);
    v40 = type metadata accessor for REMSuggestedAttributesFeatureExtractor();
    v85[0] = v40;
    v41 = v37;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3D0);
    v43 = sub_1A46908E8();
    v45 = v44;
    v76 = &v69;
    MEMORY[0x1E0C80A78](v43);
    v46 = v41;
    *(&v69 - 6) = (uint64_t)v83;
    *(&v69 - 5) = (uint64_t)&v91;
    *(&v69 - 4) = v78;
    *(&v69 - 3) = v47;
    v48 = v47;
    v49 = v46;
    *(&v69 - 2) = v46;
    *(&v69 - 1) = v38;
    v50 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v43, v45, v50, (char *)sub_1A4496070, (uint64_t)(&v69 - 8));
    v71 = v42;
    v78 = v40;
    sub_1A44695EC(v48, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v51 = objc_msgSend(v83[0], sel_resultStorages);
    v52 = sub_1A4690708();

    v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v85[0] = v52;
    sub_1A44311F0((uint64_t)v85, (uint64_t)v84);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v70 = v48;
      v76 = (uint64_t *)v49;
      v53 = v82;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
      v54 = objc_msgSend(v91, sel_store);
      v55 = v80;
      v56 = (_QWORD *)swift_allocObject();
      v56[2] = v54;
      v56[3] = v53;
      v56[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v57 = (uint64_t)v81;
      v73(v81, v72, v74);
      v86 = v55;
      v85[0] = (uint64_t)v56;
      swift_retain();
      v58 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v85, v57);
      v58(v84, 0);
      v59 = v83[0];
      v60 = objc_msgSend(v83[0], sel_resultData);
      v61 = sub_1A468FFC4();
      v63 = v62;

      sub_1A4496540();
      sub_1A468FDFC();
      sub_1A44695EC(v61, v63);
      LOBYTE(v61) = v85[0];
      v65 = v85[1];
      v64 = v85[2];
      swift_bridgeObjectRetain();
      v66 = v59;
      v67 = objc_msgSend(v66, sel_latestFetchResultToken);
      sub_1A44695EC(v70, (unint64_t)v76);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v68 = v77;
      *v77 = v61;
      v68[1] = v65;
      v68[2] = v64;
      v68[3] = v67;
    }
    else
    {
      sub_1A44311F0((uint64_t)v85, (uint64_t)v84);
      sub_1A459A0BC((uint64_t)v84, 0, 0);
      sub_1A4496084((uint64_t)v84);
      swift_willThrow();
      sub_1A44695EC(v48, v49);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);

    }
  }
}

void sub_1A4486EB0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  void (*v55)(uint64_t *, _QWORD);
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93[3];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  id v104[6];
  uint64_t v105;
  void *v106;

  v91 = a2;
  v89 = a1;
  v88 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v94 = v12;
  v93[0] = v16;
  v90 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v93, (uint64_t)v7);
  v19(&v105, 0);
  type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters(0);
  sub_1A4436344(&qword_1ED241530, type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ListInvocation.Parameters);
  v20 = v92;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v93[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v104[5]);
      v105 = sub_1A4431120(v30, v31, v93);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v105 = type metadata accessor for REMRemindersListDataView.ListInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F960);
      v32 = sub_1A46908E8();
      v105 = sub_1A4431120(v32, v33, v93);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v22;
    v83 = v17;
    v84 = (void (*)(uint64_t, uint64_t, _QWORD *))v18;
    v85 = v12;
    v87 = (_QWORD *)v4;
    v86 = (uint64_t)v7;
    v91 = v8;
    v35 = v21;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v34);
    swift_bridgeObjectRetain();
    v104[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.ListInvocation();
    v93[0] = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F960);
    v40 = sub_1A46908E8();
    v42 = v41;
    v92 = &v77;
    MEMORY[0x1E0C80A78](v40);
    *(&v77 - 6) = (uint64_t)v104;
    *(&v77 - 5) = (uint64_t)&v106;
    *(&v77 - 4) = v89;
    *(&v77 - 3) = v35;
    v44 = v43;
    *(&v77 - 2) = v43;
    *(&v77 - 1) = v36;
    v45 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v45, (char *)sub_1A4496070, (uint64_t)(&v77 - 8));
    v82 = v39;
    v89 = v38;
    sub_1A44695EC(v35, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v46 = sub_1A468FE14();
    v47 = objc_msgSend(v104[0], sel_resultStorages);
    v48 = sub_1A4690708();

    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v93[0] = v48;
    sub_1A44311F0((uint64_t)v93, (uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v81 = v35;
      v92 = (uint64_t *)v44;
      v49 = v103;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
      v50 = v106;
      v51 = v85;
      v52 = (_QWORD *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      v53 = v50;
      v52[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v54 = v86;
      v84(v86, v83, v87);
      v94 = v51;
      v93[0] = (uint64_t)v52;
      swift_retain();
      v55 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v93, v54);
      v55(&v105, 0);
      v56 = v104[0];
      v57 = objc_msgSend(v104[0], sel_resultData);
      v58 = sub_1A468FFC4();
      v60 = v59;

      sub_1A44964B8();
      sub_1A468FDFC();
      v80 = v46;
      sub_1A44695EC(v58, v60);
      v83 = v93[0];
      v89 = v93[1];
      v86 = v93[2];
      LODWORD(v85) = v94;
      LODWORD(v84) = BYTE1(v94);
      v61 = v96;
      v82 = v95;
      v87 = v52;
      v62 = v97;
      v63 = v98;
      v64 = v99;
      v65 = v100;
      v66 = v101;
      v67 = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = v65;
      swift_bridgeObjectRetain();
      v77 = v66;
      swift_bridgeObjectRetain();
      v69 = v67;
      v78 = (uint64_t)v69;
      v70 = v56;
      v79 = objc_msgSend(v70, sel_latestFetchResultToken);
      sub_1A44695EC(v81, (unint64_t)v92);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v71 = v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v72 = v82;
      swift_bridgeObjectRelease();
      v73 = v83;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v74 = v88;
      v75 = v89;
      *v88 = v73;
      v74[1] = v75;
      v74[2] = v86;
      *((_BYTE *)v74 + 24) = v85;
      *((_BYTE *)v74 + 25) = (_BYTE)v84;
      v74[4] = v72;
      v74[5] = v61;
      v74[6] = v62;
      v74[7] = v63;
      v74[8] = v71;
      v74[9] = v68;
      v76 = v78;
      v74[10] = v77;
      v74[11] = v76;
      v74[12] = (uint64_t)v79;
    }
    else
    {
      sub_1A44311F0((uint64_t)v93, (uint64_t)&v105);
      sub_1A459A0BC((uint64_t)&v105, 0, 0);
      sub_1A4496084((uint64_t)&v105);
      swift_willThrow();
      sub_1A44695EC(v35, v44);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);

    }
  }
}

void sub_1A4487B24(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  void (*v57)(uint64_t *, _QWORD);
  id v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  NSObject *v68;
  os_log_type_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t *v105;
  id v106;
  void *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111[3];
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122[6];
  uint64_t v123;
  _QWORD v124[4];

  v4 = v3;
  v106 = a1;
  v105 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v109 = (char *)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124[3] = a2;
  v124[0] = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = v4;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v108 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v109;
  v17(v109, v16, v6);
  v112 = v108;
  v111[0] = v14;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v111, v18);
  v19(&v123, 0);
  sub_1A4496474();
  v20 = v107;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v107 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v111[0] = v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v122[5]);
      v123 = sub_1A4431120(v31, v32, v111);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v123 = type metadata accessor for REMRemindersListDataView.PublicTemplateInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3C0);
      v33 = sub_1A46908E8();
      v123 = sub_1A4431120(v33, v34, v111);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v100 = v16;
    v101 = v17;
    v102 = v6;
    v103 = v14;
    v107 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v122[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMRemindersListDataView.PublicTemplateInvocation();
    v111[0] = v39;
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3C0);
    v41 = sub_1A46908E8();
    v43 = v42;
    v104 = &v93;
    MEMORY[0x1E0C80A78](v41);
    *(&v93 - 6) = (uint64_t)v122;
    *(&v93 - 5) = (uint64_t)v124;
    *(&v93 - 4) = (uint64_t)v106;
    *(&v93 - 3) = v44;
    v45 = v44;
    *(&v93 - 2) = v36;
    *(&v93 - 1) = v37;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (char *)sub_1A4496070, (uint64_t)(&v93 - 8));
    v106 = 0;
    v98 = (id)v40;
    v99 = v39;
    sub_1A44695EC(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v47 = v36;
    v48 = sub_1A468FE14();
    v49 = objc_msgSend(v122[0], sel_resultStorages);
    v50 = sub_1A4690708();

    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v111[0] = v50;
    sub_1A44311F0((uint64_t)v111, (uint64_t)&v123);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v97 = v45;
      v104 = (uint64_t *)v47;
      v51 = v121;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
      v52 = (void *)v124[0];
      v53 = v108;
      v54 = (_QWORD *)swift_allocObject();
      v54[2] = v52;
      v54[3] = v51;
      v55 = v52;
      v54[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v56 = (uint64_t)v109;
      v101(v109, v100, v102);
      v112 = v53;
      v111[0] = (uint64_t)v54;
      swift_retain();
      v57 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v111, v56);
      v57(&v123, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F058);
      v58 = v122[0];
      v59 = objc_msgSend(v122[0], sel_resultData);
      v60 = sub_1A468FFC4();
      v62 = v61;

      sub_1A4497ADC(&qword_1ED23F050, &qword_1ED23F058);
      v63 = v106;
      sub_1A468FDFC();
      v106 = v63;
      v96 = v54;
      if (!v63)
      {
        sub_1A44695EC(v60, v62);
        v99 = v111[0];
        v100 = v48;
        v109 = (char *)v111[1];
        v108 = v111[2];
        LODWORD(v102) = v112;
        LODWORD(v101) = BYTE1(v112);
        v76 = v113;
        v78 = v114;
        v77 = v115;
        v79 = v116;
        v80 = v117;
        v82 = v118;
        v81 = v119;
        v83 = v120;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94 = v77;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v95 = v83;
        swift_bridgeObjectRetain();
        v84 = v58;
        v98 = objc_msgSend(v84, sel_latestFetchResultToken);
        sub_1A44695EC(v97, (unint64_t)v104);
        swift_bridgeObjectRelease();
        v85 = v81;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = (uint64_t)v94;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v87 = v99;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v88 = v105;
        v89 = v109;
        *v105 = v87;
        v88[1] = (uint64_t)v89;
        v88[2] = v108;
        *((_BYTE *)v88 + 24) = v102;
        *((_BYTE *)v88 + 25) = (_BYTE)v101;
        v88[4] = v76;
        v88[5] = v78;
        v88[6] = v86;
        v88[7] = v79;
        v88[8] = v80;
        v88[9] = v82;
        v90 = v95;
        v88[10] = v85;
        v88[11] = v90;
        v88[12] = (uint64_t)v98;
        return;
      }
      sub_1A44695EC(v60, v62);
      if (qword_1EE71C138 != -1)
        swift_once();
      v64 = sub_1A4690318();
      __swift_project_value_buffer(v64, (uint64_t)qword_1EE721AB0);
      v65 = v106;
      v66 = v106;
      v67 = v65;
      v68 = sub_1A469030C();
      v69 = sub_1A4690FF0();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v111[0] = v71;
        *(_DWORD *)v70 = 136315394;
        swift_getErrorValue();
        v72 = Error.rem_errorDescription.getter(v110);
        v123 = sub_1A4431120(v72, v73, v111);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v70 + 12) = 2080;
        v123 = v99;
        v74 = sub_1A46908E8();
        v123 = sub_1A4431120(v74, v75, v111);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v68, v69, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v70, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v71, -1, -1);
        MEMORY[0x1A85A0114](v70, -1, -1);
      }
      else
      {

      }
      v91 = (unint64_t)v104;
      v92 = v97;
      swift_willThrow();
      sub_1A44695EC(v92, v91);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v111, (uint64_t)&v123);
      sub_1A459A0BC((uint64_t)&v123, 0, 0);
      sub_1A4496084((uint64_t)&v123);
      swift_willThrow();
      sub_1A44695EC(v45, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    }

  }
}

void sub_1A44887AC(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  void (*v55)(uint64_t *, _QWORD);
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_QWORD, _QWORD, _QWORD);
  _QWORD *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92[2];
  unsigned __int8 v93;
  unsigned __int8 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  id v104[6];
  uint64_t v105;
  void *v106;

  v90 = a2;
  v88 = a1;
  v87 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v95 = v12;
  v92[0] = v16;
  v89 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v92, (uint64_t)v7);
  v19(&v105, 0);
  type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D3A0, type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.GroupInvocation.Parameters);
  v20 = v91;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v92[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v104[5]);
      v105 = sub_1A4431120(v30, v31, v92);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v105 = type metadata accessor for REMRemindersListDataView.GroupInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3A8);
      v32 = sub_1A46908E8();
      v105 = sub_1A4431120(v32, v33, v92);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v22;
    v82 = v17;
    v83 = (void (*)(char *, uint64_t, _QWORD *))v18;
    v84 = v12;
    v86 = (_QWORD *)v4;
    v85 = v7;
    v90 = v8;
    v35 = v21;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v34);
    swift_bridgeObjectRetain();
    v104[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.GroupInvocation();
    v92[0] = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D3A8);
    v40 = sub_1A46908E8();
    v42 = v41;
    v91 = &v77;
    MEMORY[0x1E0C80A78](v40);
    *(&v77 - 6) = (uint64_t)v104;
    *(&v77 - 5) = (uint64_t)&v106;
    *(&v77 - 4) = v88;
    *(&v77 - 3) = v35;
    v44 = v43;
    *(&v77 - 2) = v43;
    *(&v77 - 1) = v36;
    v45 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v45, (char *)sub_1A4496070, (uint64_t)(&v77 - 8));
    v81 = (id)v39;
    v88 = v38;
    sub_1A44695EC(v35, v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v46 = sub_1A468FE14();
    v47 = objc_msgSend(v104[0], sel_resultStorages);
    v48 = sub_1A4690708();

    v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v92[0] = v48;
    sub_1A44311F0((uint64_t)v92, (uint64_t)&v105);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v80 = v35;
      v91 = (uint64_t *)v44;
      v49 = v103;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
      v50 = v106;
      v51 = v84;
      v52 = (_QWORD *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      v53 = v50;
      v52[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v54 = (uint64_t)v85;
      v83(v85, v82, v86);
      v95 = v51;
      v92[0] = (uint64_t)v52;
      swift_retain();
      v55 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v92, v54);
      v55(&v105, 0);
      v56 = v104[0];
      v57 = objc_msgSend(v104[0], sel_resultData);
      v58 = sub_1A468FFC4();
      v60 = v59;

      sub_1A4496430();
      sub_1A468FDFC();
      v79 = v46;
      sub_1A44695EC(v58, v60);
      v83 = (void (*)(char *, uint64_t, _QWORD *))v92[0];
      v88 = v92[1];
      LODWORD(v85) = v93;
      LODWORD(v84) = v94;
      v61 = v96;
      v82 = v95;
      v86 = v52;
      v62 = v97;
      v63 = v98;
      v64 = v99;
      v65 = v100;
      v66 = v101;
      v67 = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68 = v65;
      swift_bridgeObjectRetain();
      v77 = v66;
      swift_bridgeObjectRetain();
      v69 = v67;
      v78 = v69;
      v70 = v56;
      v81 = objc_msgSend(v70, sel_latestFetchResultToken);
      sub_1A44695EC(v80, (unint64_t)v91);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v71 = v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v72 = v82;
      swift_bridgeObjectRelease();
      v73 = (void (*)(_QWORD, _QWORD, _QWORD))v83;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v74 = v87;
      v75 = v88;
      *v87 = v73;
      v74[1] = v75;
      *((_BYTE *)v74 + 16) = (_BYTE)v85;
      *((_BYTE *)v74 + 17) = v84;
      v74[3] = v72;
      v74[4] = v61;
      v74[5] = v62;
      v74[6] = v63;
      v74[7] = v71;
      v74[8] = v68;
      v76 = v78;
      v74[9] = v77;
      v74[10] = v76;
      v74[11] = v81;
    }
    else
    {
      sub_1A44311F0((uint64_t)v92, (uint64_t)&v105);
      sub_1A459A0BC((uint64_t)&v105, 0, 0);
      sub_1A4496084((uint64_t)&v105);
      swift_willThrow();
      sub_1A44695EC(v35, v44);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);

    }
  }
}

void sub_1A44893F8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  id v106;
  uint64_t v107;
  uint64_t v108[3];
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119[6];
  uint64_t v120;
  void *v121;

  v105 = (uint64_t *)a2;
  v103 = a1;
  v102 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v109 = v12;
  v108[0] = v16;
  v104 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v108, (uint64_t)v7);
  v19(&v120, 0);
  type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters(0);
  sub_1A4436344(&qword_1ED23F028, type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.FlaggedInvocation.Parameters);
  v20 = v106;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v108[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v119[5]);
      v120 = sub_1A4431120(v30, v31, v108);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v120 = type metadata accessor for REMRemindersListDataView.FlaggedInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F030);
      v32 = sub_1A46908E8();
      v120 = sub_1A4431120(v32, v33, v108);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v21;
    v96 = v17;
    v97 = v18;
    v98 = v12;
    v100 = (_QWORD *)v4;
    v99 = (uint64_t)v7;
    v101 = v8;
    v35 = v22;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v34, v35);
    swift_bridgeObjectRetain();
    v119[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.FlaggedInvocation();
    v108[0] = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F030);
    v40 = sub_1A46908E8();
    v42 = v41;
    v105 = &v89;
    MEMORY[0x1E0C80A78](v40);
    *(&v89 - 6) = (uint64_t)v119;
    *(&v89 - 5) = (uint64_t)&v121;
    *(&v89 - 4) = v103;
    *(&v89 - 3) = v34;
    *(&v89 - 2) = v35;
    *(&v89 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v89 - 8));
    v106 = 0;
    v95 = v39;
    v103 = v38;
    v44 = v34;
    sub_1A44695EC(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v45 = sub_1A468FE14();
    v46 = objc_msgSend(v119[0], sel_resultStorages);
    v47 = sub_1A4690708();

    v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v108[0] = v47;
    sub_1A44311F0((uint64_t)v108, (uint64_t)&v120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v94 = v44;
      v105 = (uint64_t *)v35;
      v48 = v118;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
      v49 = v121;
      v50 = v98;
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v49;
      v51[3] = v48;
      v52 = v49;
      v51[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v53 = v99;
      v97((char *)v99, v96, (uint64_t)v100);
      v109 = v50;
      v108[0] = (uint64_t)v51;
      swift_retain();
      v54 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v108, v53);
      v54(&v120, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F068);
      v55 = v119[0];
      v56 = objc_msgSend(v119[0], sel_resultData);
      v57 = sub_1A468FFC4();
      v59 = v58;

      sub_1A4497ADC(&qword_1ED23F060, &qword_1ED23F068);
      v60 = v106;
      sub_1A468FDFC();
      v106 = v60;
      if (!v60)
      {
        sub_1A44695EC(v57, v59);
        v74 = v108[0];
        v103 = v108[1];
        v99 = v108[2];
        LODWORD(v98) = v109;
        LODWORD(v97) = BYTE1(v109);
        v75 = v110;
        v90 = v111;
        v95 = v45;
        v96 = (uint64_t)v112;
        v91 = v113;
        v100 = v51;
        v76 = v114;
        v77 = v115;
        v79 = v116;
        v78 = v117;
        v93 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v80 = v78;
        swift_bridgeObjectRetain();
        v81 = v55;
        v82 = v74;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v83 = v90;
        swift_bridgeObjectRetain();
        v92 = objc_msgSend(v81, sel_latestFetchResultToken);
        sub_1A44695EC(v94, (unint64_t)v105);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = v91;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v85 = v102;
        v86 = v103;
        *v102 = v82;
        v85[1] = v86;
        v85[2] = v99;
        *((_BYTE *)v85 + 24) = v98;
        *((_BYTE *)v85 + 25) = (_BYTE)v97;
        v85[4] = v75;
        v85[5] = v83;
        v85[6] = v96;
        v85[7] = v84;
        v85[8] = v76;
        v85[9] = v77;
        v85[10] = v79;
        v85[11] = v80;
        v85[12] = (uint64_t)v92;
        return;
      }
      sub_1A44695EC(v57, v59);
      if (qword_1EE71C138 != -1)
        swift_once();
      v61 = sub_1A4690318();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EE721AB0);
      v62 = v106;
      v63 = v106;
      v64 = v62;
      v65 = sub_1A469030C();
      v66 = sub_1A4690FF0();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v100 = v51;
        v69 = v68;
        v108[0] = v68;
        *(_DWORD *)v67 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v107);
        v120 = sub_1A4431120(v70, v71, v108);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v67 + 12) = 2080;
        v120 = v103;
        v72 = sub_1A46908E8();
        v120 = sub_1A4431120(v72, v73, v108);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v65, v66, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v67, -1, -1);
      }
      else
      {

      }
      v87 = (unint64_t)v105;
      v88 = v94;
      swift_willThrow();
      sub_1A44695EC(v88, v87);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v108, (uint64_t)&v120);
      sub_1A459A0BC((uint64_t)&v120, 0, 0);
      sub_1A4496084((uint64_t)&v120);
      swift_willThrow();
      sub_1A44695EC(v44, v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v108);
    }

  }
}

void sub_1A448A0CC(char *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  sub_1A448AE30(a1, a2, type metadata accessor for REMRemindersListDataView.AllInvocation.Parameters, &qword_1ED23FBA8, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.AllInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.AllInvocation, &qword_1ED240040, (unint64_t *)sub_1A4496070, a3, &qword_1ED23FBB8, &qword_1ED23FBB0);
}

void sub_1A448A12C(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, _QWORD *);
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  id v105;
  uint64_t v106;
  uint64_t v107[2];
  unsigned __int8 v108;
  unsigned __int8 v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119[6];
  uint64_t v120;
  void *v121;

  v104 = (uint64_t *)a2;
  v102 = a1;
  v101 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v110 = v12;
  v107[0] = v16;
  v103 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v107, (uint64_t)v7);
  v19(&v120, 0);
  type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D380, type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.AssignedInvocation.Parameters);
  v20 = v105;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v107[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v119[5]);
      v120 = sub_1A4431120(v30, v31, v107);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v120 = type metadata accessor for REMRemindersListDataView.AssignedInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D388);
      v32 = sub_1A46908E8();
      v120 = sub_1A4431120(v32, v33, v107);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v21;
    v95 = v17;
    v96 = (void (*)(char *, uint64_t, _QWORD *))v18;
    v97 = v12;
    v99 = (_QWORD *)v4;
    v98 = v7;
    v100 = v8;
    v35 = v22;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v34, v35);
    swift_bridgeObjectRetain();
    v119[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.AssignedInvocation();
    v107[0] = v38;
    v39 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D388);
    v40 = sub_1A46908E8();
    v42 = v41;
    v104 = &v91;
    MEMORY[0x1E0C80A78](v40);
    *(&v91 - 6) = (uint64_t)v119;
    *(&v91 - 5) = (uint64_t)&v121;
    *(&v91 - 4) = v102;
    *(&v91 - 3) = v34;
    *(&v91 - 2) = v35;
    *(&v91 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v91 - 8));
    v105 = 0;
    v94 = v39;
    v102 = v38;
    v44 = v34;
    sub_1A44695EC(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v45 = sub_1A468FE14();
    v46 = objc_msgSend(v119[0], sel_resultStorages);
    v47 = sub_1A4690708();

    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v107[0] = v47;
    sub_1A44311F0((uint64_t)v107, (uint64_t)&v120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v93 = v44;
      v104 = (uint64_t *)v35;
      v48 = v118;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
      v49 = v121;
      v50 = v97;
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v49;
      v51[3] = v48;
      v52 = v49;
      v51[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v53 = (uint64_t)v98;
      v96(v98, v95, v99);
      v110 = v50;
      v107[0] = (uint64_t)v51;
      swift_retain();
      v54 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v107, v53);
      v54(&v120, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D390);
      v55 = v119[0];
      v56 = objc_msgSend(v119[0], sel_resultData);
      v57 = sub_1A468FFC4();
      v59 = v58;

      sub_1A4497ADC(&qword_1EE71D398, &qword_1EE71D390);
      v60 = v105;
      sub_1A468FDFC();
      v105 = v60;
      if (!v60)
      {
        sub_1A44695EC(v57, v59);
        v74 = v107[0];
        v102 = v107[1];
        LODWORD(v98) = v108;
        LODWORD(v97) = v109;
        v75 = v110;
        v76 = v111;
        v96 = (void (*)(char *, uint64_t, _QWORD *))v45;
        v95 = (uint64_t)v112;
        v91 = v113;
        v99 = v51;
        v77 = v114;
        v78 = v115;
        v80 = v116;
        v79 = v117;
        v94 = v112;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81 = v79;
        swift_bridgeObjectRetain();
        v82 = v55;
        v83 = v74;
        swift_bridgeObjectRetain();
        v84 = v75;
        swift_bridgeObjectRetain();
        v85 = v76;
        swift_bridgeObjectRetain();
        v92 = objc_msgSend(v82, sel_latestFetchResultToken);
        sub_1A44695EC(v93, (unint64_t)v104);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v91;
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v87 = v101;
        v88 = v102;
        *v101 = v83;
        v87[1] = v88;
        *((_BYTE *)v87 + 16) = (_BYTE)v98;
        *((_BYTE *)v87 + 17) = v97;
        v87[3] = v84;
        v87[4] = v85;
        v87[5] = v95;
        v87[6] = v86;
        v87[7] = v77;
        v87[8] = v78;
        v87[9] = v80;
        v87[10] = v81;
        v87[11] = (uint64_t)v92;
        return;
      }
      sub_1A44695EC(v57, v59);
      if (qword_1EE71C138 != -1)
        swift_once();
      v61 = sub_1A4690318();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EE721AB0);
      v62 = v105;
      v63 = v105;
      v64 = v62;
      v65 = sub_1A469030C();
      v66 = sub_1A4690FF0();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v99 = v51;
        v69 = v68;
        v107[0] = v68;
        *(_DWORD *)v67 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v106);
        v120 = sub_1A4431120(v70, v71, v107);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v67 + 12) = 2080;
        v120 = v102;
        v72 = sub_1A46908E8();
        v120 = sub_1A4431120(v72, v73, v107);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v65, v66, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v67, -1, -1);
      }
      else
      {

      }
      v89 = (unint64_t)v104;
      v90 = v93;
      swift_willThrow();
      sub_1A44695EC(v90, v89);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v107, (uint64_t)&v120);
      sub_1A459A0BC((uint64_t)&v120, 0, 0);
      sub_1A4496084((uint64_t)&v120);
      swift_willThrow();
      sub_1A44695EC(v44, v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
    }

  }
}

void sub_1A448ADD0(char *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  sub_1A448AE30(a1, a2, type metadata accessor for REMRemindersListDataView.SearchInvocation.Parameters, &qword_1EE71D370, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SearchInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.SearchInvocation, &qword_1EE71D378, (unint64_t *)sub_1A4496070, a3, &qword_1ED23FBB8, &qword_1ED23FBB0);
}

void sub_1A448AE30(char *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t *a7@<X6>, unint64_t *a8@<X7>, char **a9@<X8>, uint64_t *a10, unint64_t *a11)
{
  void *v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char **v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t *, _QWORD);
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  id v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  id v58;
  uint64_t v59;
  void (*v60)(uint64_t *, _QWORD);
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  NSObject *v70;
  os_log_type_t v71;
  BOOL v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char **v88;
  unint64_t *v89;
  char *v90;
  char *v91;
  unint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char **v98;
  char *v99;
  char *v100;
  uint64_t (*v101)(_QWORD);
  uint64_t *v102;
  uint64_t v103;
  unint64_t *v104;
  uint64_t (*v105)(uint64_t);
  uint64_t v106;
  _QWORD *v107;
  void *v108;
  uint64_t v109;
  uint64_t v110[2];
  unsigned __int8 v111;
  unsigned __int8 v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  id v121[6];
  uint64_t v122;
  void *v123;

  v100 = (char *)a8;
  v102 = a7;
  v101 = a6;
  v106 = a5;
  v104 = a4;
  v105 = a3;
  v107 = (_QWORD *)a2;
  v99 = a1;
  v98 = a9;
  v12 = (unint64_t *)sub_1A46915B4();
  v103 = *(v12 - 1);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t (*)(uint64_t))((char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = v11;
  sub_1A468FE50();
  swift_allocObject();
  v15 = sub_1A468FE44();
  v16 = v11;
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v19 = type metadata accessor for REMStoreObjectsContainer();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v16;
  v21 = (uint64_t)v20;
  v20[3] = v18;
  v22 = (char **)(v20 + 3);
  v20[4] = sub_1A443CEF8(v17);
  if (qword_1ED244118 != -1)
    swift_once();
  v23 = __swift_project_value_buffer((uint64_t)v12, (uint64_t)qword_1ED243F48);
  v24 = *(char **)(v103 + 16);
  ((void (*)(uint64_t (*)(uint64_t), uint64_t, unint64_t *))v24)(v14, v23, v12);
  v113 = v19;
  v110[0] = v21;
  v103 = v21;
  swift_retain();
  v25 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v110, (uint64_t)v14);
  v25(&v122, 0);
  v26 = v105;
  v105(0);
  sub_1A4436344(v104, v26, v106);
  v27 = v108;
  v28 = sub_1A468FE2C();
  if (v27)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v30 = sub_1A4690318();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EE721AB0);
    v31 = v27;
    v32 = v27;
    v33 = sub_1A469030C();
    v34 = sub_1A4690FF0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v110[0] = v36;
      *(_DWORD *)v35 = 136315394;
      swift_getErrorValue();
      v37 = Error.rem_errorDescription.getter((uint64_t)v121[5]);
      v122 = sub_1A4431120(v37, v38, v110);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v35 + 12) = 2080;
      v122 = v101(0);
      __swift_instantiateConcreteTypeFromMangledName(v102);
      v39 = sub_1A46908E8();
      v122 = sub_1A4431120(v39, v40, v110);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v33, v34, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v36, -1, -1);
      MEMORY[0x1A85A0114](v35, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v41 = v28;
    v95 = v23;
    v96 = v24;
    v97 = (char *)v19;
    v104 = v12;
    v106 = v15;
    v105 = v14;
    v42 = v29;
    swift_beginAccess();
    v43 = *v22;
    v44 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v41, v42);
    swift_bridgeObjectRetain();
    v121[0] = objc_msgSend(v44, sel_init);
    v45 = (uint64_t *)v101(0);
    v110[0] = (uint64_t)v45;
    v46 = __swift_instantiateConcreteTypeFromMangledName(v102);
    v47 = v41;
    v48 = sub_1A46908E8();
    v50 = v49;
    v107 = &v93;
    MEMORY[0x1E0C80A78](v48);
    *(&v93 - 6) = (char *)v121;
    *(&v93 - 5) = (char *)&v123;
    *(&v93 - 4) = v99;
    *(&v93 - 3) = (char *)v47;
    v108 = (void *)v42;
    *(&v93 - 2) = (char *)v42;
    *(&v93 - 1) = v43;
    v51 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v48, v50, v51, v100, (uint64_t)(&v93 - 8));
    v101 = (uint64_t (*)(_QWORD))v46;
    v102 = v45;
    sub_1A44695EC(v47, (unint64_t)v108);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v52 = objc_msgSend(v121[0], sel_resultStorages);
    v53 = sub_1A4690708();

    v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v110[0] = v53;
    sub_1A44311F0((uint64_t)v110, (uint64_t)&v122);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v107 = (_QWORD *)v47;
      v100 = (char *)a11;
      v54 = v120;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
      v55 = v123;
      v99 = 0;
      v56 = (uint64_t)v97;
      v57 = (uint64_t (*)(uint64_t))swift_allocObject();
      *((_QWORD *)v57 + 2) = v55;
      *((_QWORD *)v57 + 3) = v54;
      v58 = v55;
      *((_QWORD *)v57 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v59 = (uint64_t)v105;
      ((void (*)(uint64_t (*)(uint64_t), uint64_t, unint64_t *))v96)(v105, v95, v104);
      v113 = v56;
      v110[0] = (uint64_t)v57;
      swift_retain();
      v60 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v110, v59);
      v60(&v122, 0);
      __swift_instantiateConcreteTypeFromMangledName(a10);
      v61 = v121[0];
      v62 = objc_msgSend(v121[0], sel_resultData);
      v63 = sub_1A468FFC4();
      v65 = v64;

      sub_1A4497ADC((unint64_t *)v100, a10);
      v66 = v99;
      sub_1A468FDFC();
      if (!v66)
      {
        sub_1A44695EC(v63, v65);
        v100 = (char *)v110[0];
        v104 = (unint64_t *)v110[1];
        LODWORD(v102) = v111;
        LODWORD(v101) = v112;
        v99 = (char *)v113;
        v96 = v114;
        v80 = v116;
        v95 = v115;
        v81 = v117;
        v82 = v118;
        v105 = v119;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v93 = v81;
        swift_bridgeObjectRetain();
        v94 = v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v83 = v61;
        v97 = (char *)objc_msgSend(v83, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v107, (unint64_t)v108);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = (char *)v95;
        swift_bridgeObjectRelease();
        v85 = v96;
        swift_bridgeObjectRelease();
        v86 = v99;
        swift_bridgeObjectRelease();
        v87 = v100;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v88 = v98;
        v89 = v104;
        *v98 = v87;
        v88[1] = (char *)v89;
        *((_BYTE *)v88 + 16) = (_BYTE)v102;
        *((_BYTE *)v88 + 17) = (_BYTE)v101;
        v88[3] = v86;
        v88[4] = v85;
        v88[5] = v84;
        v88[6] = v80;
        v90 = v94;
        v88[7] = v93;
        v88[8] = v90;
        v91 = v97;
        v88[9] = (char *)v105;
        v88[10] = v91;
        return;
      }
      v105 = v57;
      sub_1A44695EC(v63, v65);
      if (qword_1EE71C138 != -1)
        swift_once();
      v67 = sub_1A4690318();
      __swift_project_value_buffer(v67, (uint64_t)qword_1EE721AB0);
      v68 = v66;
      v69 = v66;
      v70 = sub_1A469030C();
      v71 = sub_1A4690FF0();
      v72 = os_log_type_enabled(v70, v71);
      v73 = v102;
      if (v72)
      {
        v74 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v110[0] = v75;
        *(_DWORD *)v74 = 136315394;
        swift_getErrorValue();
        v76 = Error.rem_errorDescription.getter(v109);
        v122 = sub_1A4431120(v76, v77, v110);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v74 + 12) = 2080;
        v122 = (uint64_t)v73;
        v78 = sub_1A46908E8();
        v122 = sub_1A4431120(v78, v79, v110);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v70, v71, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v75, -1, -1);
        MEMORY[0x1A85A0114](v74, -1, -1);
      }
      else
      {

      }
      v92 = (unint64_t)v108;
      swift_willThrow();
      sub_1A44695EC((uint64_t)v107, v92);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v110, (uint64_t)&v122);
      sub_1A459A0BC((uint64_t)&v122, 0, 0);
      sub_1A4496084((uint64_t)&v122);
      swift_willThrow();
      sub_1A44695EC(v47, (unint64_t)v108);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v110);
    }

  }
}

void sub_1A448BB18(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1A448BBA0(a1, a2, type metadata accessor for REMRemindersListDataView.SearchFlatInvocation.Parameters, &qword_1EE71D360, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SearchFlatInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.SearchFlatInvocation, &qword_1EE71D368, (char *)sub_1A4496070, a3);
}

void sub_1A448BB5C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1A448BBA0(a1, a2, type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation.Parameters, &qword_1EE71D350, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.SiriFoundInAppsInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation, &qword_1EE71D358, (char *)sub_1A4496070, a3);
}

void sub_1A448BBA0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t *a7@<X6>, char *a8@<X7>, _QWORD *a9@<X8>)
{
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(uint64_t *, _QWORD);
  uint64_t (*v25)(uint64_t);
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t *v57;
  unint64_t *v58;
  _QWORD *v59;
  id v60;
  uint64_t v61;
  void (*v62)(uint64_t *, _QWORD);
  id v63;
  id v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(_QWORD);
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t (*)(uint64_t));
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t (*)(uint64_t));
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t (*v91)(_QWORD);
  uint64_t *v92;
  uint64_t v93;
  unint64_t *v94;
  uint64_t (*v95)(uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99[3];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  id v109[6];
  uint64_t v110;
  void *v111;

  v90 = a8;
  v92 = a7;
  v91 = a6;
  v96 = (char *)a5;
  v94 = a4;
  v95 = a3;
  v97 = a2;
  v89 = a1;
  v88 = a9;
  v10 = sub_1A46915B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = v9;
  sub_1A468FE50();
  swift_allocObject();
  v14 = sub_1A468FE44();
  v15 = v9;
  v16 = MEMORY[0x1E0DEE9D8];
  v17 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v18 = (unint64_t *)type metadata accessor for REMStoreObjectsContainer();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v15;
  v20 = (uint64_t)v19;
  v19[3] = v17;
  v21 = v19 + 3;
  v19[4] = sub_1A443CEF8(v16);
  if (qword_1ED244118 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v10, (uint64_t)qword_1ED243F48);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23(v13, v22, v10);
  v100 = (uint64_t)v18;
  v99[0] = v20;
  v93 = v20;
  swift_retain();
  v24 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v99, (uint64_t)v13);
  v24(&v110, 0);
  v25 = v95;
  v95(0);
  sub_1A4436344(v94, v25, (uint64_t)v96);
  v26 = v98;
  v27 = sub_1A468FE2C();
  if (v26)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v29 = sub_1A4690318();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE721AB0);
    v30 = v26;
    v31 = v26;
    v32 = sub_1A469030C();
    v33 = sub_1A4690FF0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v99[0] = v35;
      *(_DWORD *)v34 = 136315394;
      swift_getErrorValue();
      v36 = Error.rem_errorDescription.getter((uint64_t)v109[5]);
      v110 = sub_1A4431120(v36, v37, v99);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v34 + 12) = 2080;
      v110 = v91(0);
      __swift_instantiateConcreteTypeFromMangledName(v92);
      v38 = sub_1A46908E8();
      v110 = sub_1A4431120(v38, v39, v99);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v32, v33, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v35, -1, -1);
      MEMORY[0x1A85A0114](v34, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v40 = v27;
    v86 = v22;
    v87 = (void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))v23;
    v94 = v18;
    v95 = (uint64_t (*)(uint64_t))v10;
    v97 = v14;
    v96 = v13;
    v41 = v28;
    swift_beginAccess();
    v42 = *v21;
    v43 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v40, (unint64_t)v41);
    swift_bridgeObjectRetain();
    v109[0] = objc_msgSend(v43, sel_init);
    v91 = (uint64_t (*)(_QWORD))v91(0);
    v99[0] = (uint64_t)v91;
    v44 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName(v92);
    v45 = sub_1A46908E8();
    v47 = v46;
    v98 = &v84;
    MEMORY[0x1E0C80A78](v45);
    *(&v84 - 6) = (uint64_t)v109;
    *(&v84 - 5) = (uint64_t)&v111;
    *(&v84 - 4) = v89;
    *(&v84 - 3) = v48;
    v49 = v48;
    *(&v84 - 2) = (uint64_t)v41;
    *(&v84 - 1) = v42;
    v50 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v45, v47, v50, v90, (uint64_t)(&v84 - 8));
    v92 = v44;
    v51 = v49;
    sub_1A44695EC(v49, (unint64_t)v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v52 = sub_1A468FE14();
    v53 = objc_msgSend(v109[0], sel_resultStorages);
    v54 = sub_1A4690708();

    v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v99[0] = v54;
    sub_1A44311F0((uint64_t)v99, (uint64_t)&v110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v89 = v51;
      v90 = v41;
      v55 = v108;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);
      v56 = v111;
      v57 = (uint64_t *)v52;
      v58 = v94;
      v59 = (_QWORD *)swift_allocObject();
      v59[2] = v56;
      v59[3] = v55;
      v60 = v56;
      v59[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v61 = (uint64_t)v96;
      v87(v96, v86, v95);
      v100 = (uint64_t)v58;
      v99[0] = (uint64_t)v59;
      swift_retain();
      v62 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v99, v61);
      v62(&v110, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F418);
      v98 = v57;
      v63 = v109[0];
      v64 = objc_msgSend(v109[0], sel_resultData);
      v65 = sub_1A468FFC4();
      v67 = v66;

      sub_1A4497ADC(&qword_1ED23F410, &qword_1ED23F418);
      sub_1A468FDFC();
      sub_1A44695EC(v65, v67);
      v91 = (uint64_t (*)(_QWORD))v99[0];
      v96 = (char *)v99[1];
      v95 = (uint64_t (*)(uint64_t))v99[2];
      LODWORD(v94) = v100;
      LODWORD(v92) = BYTE1(v100);
      v68 = v101;
      v86 = v102;
      v69 = v103;
      v70 = v104;
      v72 = v105;
      v71 = v106;
      v73 = v107;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = v71;
      swift_bridgeObjectRetain();
      v85 = v73;
      swift_bridgeObjectRetain();
      v74 = v63;
      v87 = (void (*)(char *, uint64_t, uint64_t (*)(uint64_t)))objc_msgSend(v74, sel_latestFetchResultToken);
      sub_1A44695EC(v89, (unint64_t)v90);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v75 = v70;
      swift_bridgeObjectRelease();
      v76 = v69;
      swift_bridgeObjectRelease();
      v77 = v86;
      swift_bridgeObjectRelease();
      v78 = v68;
      swift_bridgeObjectRelease();
      v79 = v91;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v80 = v88;
      v81 = (uint64_t)v96;
      *v88 = v79;
      v80[1] = v81;
      v80[2] = v95;
      *((_BYTE *)v80 + 24) = (_BYTE)v94;
      *((_BYTE *)v80 + 25) = (_BYTE)v92;
      v80[4] = v78;
      v80[5] = v77;
      v80[6] = v76;
      v80[7] = v75;
      v82 = v84;
      v80[8] = v72;
      v80[9] = v82;
      v83 = v87;
      v80[10] = v85;
      v80[11] = v83;
    }
    else
    {
      sub_1A44311F0((uint64_t)v99, (uint64_t)&v110);
      sub_1A459A0BC((uint64_t)&v110, 0, 0);
      sub_1A4496084((uint64_t)&v110);
      swift_willThrow();
      sub_1A44695EC(v51, (unint64_t)v41);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v99);

    }
  }
}

void sub_1A448C878(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  void (*v17)(__int128 *, _QWORD);
  void *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  _QWORD *v50;
  id v51;
  uint64_t v52;
  void (*v53)(__int128 *, _QWORD);
  id v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void *v59;
  uint64_t v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  id v71;
  id v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  id v113[6];
  void *v114;
  char *v115;

  v88 = a2;
  v87 = a1;
  v85 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v115 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v7 = sub_1A468FE44();
  v8 = v3;
  v9 = MEMORY[0x1E0DEE9D8];
  v10 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v90 = type metadata accessor for REMStoreObjectsContainer();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v8;
  v11[3] = v10;
  v11[4] = sub_1A443CEF8(v9);
  if (qword_1ED244118 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v13 = v4;
  v14 = v12;
  v15 = *(void (**)(char *, uint64_t))(v5 + 16);
  v16 = (uint64_t)v115;
  v86 = v13;
  v15(v115, v12);
  *((_QWORD *)&v103 + 1) = v90;
  *(_QWORD *)&v102 = v11;
  swift_retain();
  v17 = (void (*)(__int128 *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v102, v16);
  v17(&v91, 0);
  type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D330, type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.TaggedInvocation.Parameters);
  v18 = v89;
  v19 = sub_1A468FE2C();
  if (v18)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v21 = sub_1A4690318();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE721AB0);
    v22 = v18;
    v23 = v18;
    v24 = sub_1A469030C();
    v25 = sub_1A4690FF0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v89 = v11;
      v28 = v27;
      *(_QWORD *)&v102 = v27;
      *(_DWORD *)v26 = 136315394;
      swift_getErrorValue();
      v29 = Error.rem_errorDescription.getter((uint64_t)v113[5]);
      *(_QWORD *)&v91 = sub_1A4431120(v29, v30, (uint64_t *)&v102);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v26 + 12) = 2080;
      *(_QWORD *)&v91 = type metadata accessor for REMRemindersListDataView.TaggedInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D338);
      v31 = sub_1A46908E8();
      *(_QWORD *)&v91 = sub_1A4431120(v31, v32, (uint64_t *)&v102);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v24, v25, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v28, -1, -1);
      MEMORY[0x1A85A0114](v26, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v33 = v19;
    v34 = v20;
    v82 = v14;
    v83 = (void (*)(char *, uint64_t, uint64_t))v15;
    v88 = v7;
    v89 = v11;
    swift_beginAccess();
    v35 = v11[3];
    v36 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v33, v34);
    swift_bridgeObjectRetain();
    v113[0] = objc_msgSend(v36, sel_init);
    v81 = type metadata accessor for REMRemindersListDataView.TaggedInvocation();
    *(_QWORD *)&v102 = v81;
    v37 = v33;
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D338);
    v39 = sub_1A46908E8();
    v41 = v40;
    v84 = &v79;
    MEMORY[0x1E0C80A78](v39);
    *(&v79 - 6) = (uint64_t)v113;
    *(&v79 - 5) = (uint64_t)&v114;
    *(&v79 - 4) = v87;
    *(&v79 - 3) = v37;
    *(&v79 - 2) = v34;
    *(&v79 - 1) = v35;
    v87 = v35;
    v42 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v39, v41, v42, (char *)sub_1A4496070, (uint64_t)(&v79 - 8));
    v79 = v38;
    v80 = 0;
    sub_1A44695EC(v37, v34);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v43 = v34;
    v44 = sub_1A468FE14();
    v45 = objc_msgSend(v113[0], sel_resultStorages);
    v46 = sub_1A4690708();

    *((_QWORD *)&v103 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    *(_QWORD *)&v102 = v46;
    sub_1A44311F0((uint64_t)&v102, (uint64_t)&v91);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v84 = (_QWORD *)v37;
      v87 = v43;
      v47 = v112;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
      v48 = v114;
      v49 = v90;
      v50 = (_QWORD *)swift_allocObject();
      v50[2] = v48;
      v50[3] = v47;
      v51 = v48;
      v50[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v52 = (uint64_t)v115;
      v83(v115, v82, v86);
      *((_QWORD *)&v103 + 1) = v49;
      *(_QWORD *)&v102 = v50;
      swift_retain();
      v53 = (void (*)(__int128 *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v102, v52);
      v53(&v91, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D340);
      v54 = v113[0];
      v55 = objc_msgSend(v113[0], sel_resultData);
      v56 = sub_1A468FFC4();
      v58 = v57;

      sub_1A4497ADC(&qword_1EE71D348, &qword_1EE71D340);
      v59 = v80;
      sub_1A468FDFC();
      if (!v59)
      {
        sub_1A44695EC(v56, v58);
        v97 = v108;
        v98 = v109;
        v99 = v110;
        v100 = v111;
        v93 = v104;
        v94 = v105;
        v95 = v106;
        v96 = v107;
        v91 = v102;
        v92 = v103;
        sub_1A4496218((uint64_t)&v91);
        v71 = v54;
        v72 = objc_msgSend(v71, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v84, v87);
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        sub_1A4496328((uint64_t)&v91);

        v73 = v98;
        v74 = v85;
        *(_OWORD *)(v85 + 96) = v97;
        *(_OWORD *)(v74 + 112) = v73;
        *(_OWORD *)(v74 + 128) = v99;
        v75 = v100;
        v76 = v94;
        *(_OWORD *)(v74 + 32) = v93;
        *(_OWORD *)(v74 + 48) = v76;
        v77 = v96;
        *(_OWORD *)(v74 + 64) = v95;
        *(_OWORD *)(v74 + 80) = v77;
        v78 = v92;
        *(_OWORD *)v74 = v91;
        *(_OWORD *)(v74 + 16) = v78;
        *(_QWORD *)(v74 + 144) = v75;
        *(_QWORD *)(v74 + 152) = v72;
        return;
      }
      v90 = (uint64_t)v50;
      v115 = (char *)v44;
      sub_1A44695EC(v56, v58);
      if (qword_1EE71C138 != -1)
        swift_once();
      v60 = sub_1A4690318();
      __swift_project_value_buffer(v60, (uint64_t)qword_1EE721AB0);
      v61 = v59;
      v62 = v59;
      v63 = sub_1A469030C();
      v64 = sub_1A4690FF0();
      if (os_log_type_enabled(v63, v64))
      {
        v65 = swift_slowAlloc();
        v66 = swift_slowAlloc();
        *(_QWORD *)&v102 = v66;
        *(_DWORD *)v65 = 136315394;
        swift_getErrorValue();
        v67 = Error.rem_errorDescription.getter(v101);
        *(_QWORD *)&v91 = sub_1A4431120(v67, v68, (uint64_t *)&v102);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v65 + 12) = 2080;
        *(_QWORD *)&v91 = v81;
        v69 = sub_1A46908E8();
        *(_QWORD *)&v91 = sub_1A4431120(v69, v70, (uint64_t *)&v102);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v63, v64, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v65, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v66, -1, -1);
        MEMORY[0x1A85A0114](v65, -1, -1);
      }
      else
      {

      }
      swift_willThrow();
      sub_1A44695EC((uint64_t)v84, v87);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)&v102, (uint64_t)&v91);
      sub_1A459A0BC((uint64_t)&v91, 0, 0);
      sub_1A4496084((uint64_t)&v91);
      swift_willThrow();
      sub_1A44695EC(v37, v43);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
    }

  }
}

void sub_1A448D308(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A448DEF0(a1, (void (*)(uint64_t))sub_1A44961D4, (uint64_t)&type metadata for REMRemindersListDataView.TodayNotificationInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.TodayNotificationInvocation, &qword_1EE71D328, (char *)sub_1A4496070, a2);
}

void sub_1A448D344(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(uint64_t *, _QWORD);
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  id v54;
  uint64_t v55;
  void (*v56)(uint64_t *, _QWORD);
  id v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83[2];
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  _QWORD *v90;
  uint64_t v91;
  void *v92;
  id v93;
  char *v94;
  uint64_t v95;
  uint64_t v96[3];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101[6];
  uint64_t v102;
  _QWORD v103[4];

  v4 = v3;
  v91 = a1;
  v90 = a3;
  v6 = sub_1A46915B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v94 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103[3] = a2;
  v103[0] = v4;
  sub_1A468FE50();
  swift_allocObject();
  v9 = sub_1A468FE44();
  v10 = v4;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v93 = (id)type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v10;
  v14 = (uint64_t)v13;
  v13[3] = v12;
  v15 = v13 + 3;
  v13[4] = sub_1A443CEF8(v11);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v6, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v18 = (uint64_t)v94;
  v17(v94, v16, v6);
  v97 = (uint64_t)v93;
  v96[0] = v14;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v96, v18);
  v19(&v102, 0);
  sub_1A4496190();
  v20 = v92;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v92 = (void *)v9;
      v29 = v28;
      v30 = swift_slowAlloc();
      v96[0] = v30;
      *(_DWORD *)v29 = 136315394;
      swift_getErrorValue();
      v31 = Error.rem_errorDescription.getter((uint64_t)v101[5]);
      v102 = sub_1A4431120(v31, v32, v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v29 + 12) = 2080;
      v102 = type metadata accessor for REMRemindersListDataView.DEBUG_AssignedCountInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D308);
      v33 = sub_1A46908E8();
      v102 = sub_1A4431120(v33, v34, v96);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v30, -1, -1);
      MEMORY[0x1A85A0114](v29, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v35 = v21;
    v36 = v22;
    v85 = v16;
    v86 = v17;
    v87 = v6;
    v88 = v14;
    v92 = (void *)v9;
    swift_beginAccess();
    v37 = *v15;
    v38 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v35, v36);
    swift_bridgeObjectRetain();
    v101[0] = objc_msgSend(v38, sel_init);
    v39 = type metadata accessor for REMRemindersListDataView.DEBUG_AssignedCountInvocation();
    v96[0] = v39;
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D308);
    v41 = sub_1A46908E8();
    v43 = v42;
    v89 = v83;
    MEMORY[0x1E0C80A78](v41);
    v83[-6] = (uint64_t)v101;
    v83[-5] = (uint64_t)v103;
    v83[-4] = v91;
    v83[-3] = v44;
    v45 = v44;
    v83[-2] = v36;
    v83[-1] = v37;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v41, v43, v46, (char *)sub_1A4496070, (uint64_t)&v83[-8]);
    v91 = 0;
    v83[1] = v40;
    v84 = v39;
    sub_1A44695EC(v45, v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v47 = v36;
    sub_1A468FE14();
    v48 = objc_msgSend(v101[0], sel_resultStorages);
    v49 = sub_1A4690708();

    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v96[0] = v49;
    sub_1A44311F0((uint64_t)v96, (uint64_t)&v102);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v83[0] = v45;
      v89 = (uint64_t *)v47;
      v50 = v100;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
      v51 = (void *)v103[0];
      v52 = (uint64_t)v93;
      v53 = (char *)swift_allocObject();
      *((_QWORD *)v53 + 2) = v51;
      *((_QWORD *)v53 + 3) = v50;
      v54 = v51;
      *((_QWORD *)v53 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v55 = (uint64_t)v94;
      v86(v94, v85, v87);
      v97 = v52;
      v96[0] = (uint64_t)v53;
      swift_retain();
      v56 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v96, v55);
      v56(&v102, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D310);
      v57 = v101[0];
      v58 = objc_msgSend(v101[0], sel_resultData);
      v59 = sub_1A468FFC4();
      v61 = v60;

      sub_1A4497ADC(&qword_1EE71D318, &qword_1EE71D310);
      v62 = (void *)v91;
      sub_1A468FDFC();
      if (!v62)
      {
        sub_1A44695EC(v59, v61);
        v74 = v96[1];
        v94 = (char *)v96[0];
        v75 = v96[2];
        v76 = v97;
        v77 = v98;
        v78 = v99;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v79 = v57;
        v93 = objc_msgSend(v79, sel_latestFetchResultToken);
        sub_1A44695EC(v83[0], (unint64_t)v89);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v80 = v90;
        *v90 = v94;
        v80[1] = v74;
        v80[2] = v75;
        v80[3] = v76;
        v80[4] = v77;
        v80[5] = v78;
        v80[6] = v93;
        return;
      }
      v94 = v53;
      sub_1A44695EC(v59, v61);
      if (qword_1EE71C138 != -1)
        swift_once();
      v63 = sub_1A4690318();
      __swift_project_value_buffer(v63, (uint64_t)qword_1EE721AB0);
      v64 = v62;
      v65 = v62;
      v66 = sub_1A469030C();
      v67 = sub_1A4690FF0();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = swift_slowAlloc();
        v69 = swift_slowAlloc();
        v96[0] = v69;
        *(_DWORD *)v68 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v95);
        v102 = sub_1A4431120(v70, v71, v96);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v68 + 12) = 2080;
        v102 = v84;
        v72 = sub_1A46908E8();
        v102 = sub_1A4431120(v72, v73, v96);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v66, v67, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v68, -1, -1);
      }
      else
      {

      }
      v81 = (unint64_t)v89;
      v82 = v83[0];
      swift_willThrow();
      sub_1A44695EC(v82, v81);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v96, (uint64_t)&v102);
      sub_1A459A0BC((uint64_t)&v102, 0, 0);
      sub_1A4496084((uint64_t)&v102);
      swift_willThrow();
      sub_1A44695EC(v45, v47);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    }

  }
}

void sub_1A448DEB4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1A448DEF0(a1, (void (*)(uint64_t))sub_1A449614C, (uint64_t)&type metadata for REMRemindersListDataView.DEBUG_PhantomRemindersInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.DEBUG_PhantomRemindersInvocation, &qword_1EE71D2F8, (char *)sub_1A4496070, a2);
}

void sub_1A448DEF0(_QWORD *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t *a5@<X4>, char *a6@<X5>, _QWORD *a7@<X8>)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t (*v18)(uint64_t *, _QWORD);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  void (*v52)(uint64_t *, _QWORD);
  id v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(_QWORD, _QWORD, _QWORD);
  _QWORD *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  _QWORD *v75;
  _QWORD *v76;
  char *v77;
  uint64_t (*v78)(_QWORD);
  uint64_t *v79;
  _QWORD *v80;
  void (*v81)(uint64_t);
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[3];
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96[6];
  uint64_t v97;
  void *v98;

  v77 = a6;
  v79 = a5;
  v78 = a4;
  v82 = a3;
  v81 = a2;
  v76 = a1;
  v75 = a7;
  v8 = sub_1A46915B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v7;
  sub_1A468FE50();
  swift_allocObject();
  v85 = sub_1A468FE44();
  v12 = v7;
  v13 = MEMORY[0x1E0DEE9D8];
  v14 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v84 = type metadata accessor for REMStoreObjectsContainer();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  v15[3] = v14;
  v15[4] = sub_1A443CEF8(v13);
  if (qword_1ED244118 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED243F48);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v17(v11, v16, v8);
  v87 = v84;
  v86[0] = (uint64_t)v15;
  swift_retain();
  v18 = (uint64_t (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v86, (uint64_t)v11);
  v19 = v18(&v97, 0);
  v81(v19);
  v20 = v83;
  v21 = sub_1A468FE2C();
  v80 = v15;
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v86[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v96[5]);
      v97 = sub_1A4431120(v30, v31, v86);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v97 = v78(0);
      __swift_instantiateConcreteTypeFromMangledName(v79);
      v32 = sub_1A46908E8();
      v97 = sub_1A4431120(v32, v33, v86);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = (char *)v21;
    v35 = v22;
    v73 = v16;
    v74 = (void (*)(uint64_t, uint64_t, void (*)(_QWORD)))v17;
    v81 = (void (*)(uint64_t))v8;
    v82 = (uint64_t)v11;
    swift_beginAccess();
    v36 = v15[3];
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8((uint64_t)v34, v35);
    swift_bridgeObjectRetain();
    v96[0] = objc_msgSend(v37, sel_init);
    v38 = (uint64_t *)v78(0);
    v86[0] = (uint64_t)v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(v79);
    v40 = sub_1A46908E8();
    v42 = v41;
    v83 = &v71;
    MEMORY[0x1E0C80A78](v40);
    *(&v71 - 6) = (uint64_t)v96;
    *(&v71 - 5) = (uint64_t)&v98;
    *(&v71 - 4) = (uint64_t)v76;
    *(&v71 - 3) = (uint64_t)v34;
    *(&v71 - 2) = v35;
    *(&v71 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, v77, (uint64_t)(&v71 - 8));
    v78 = (uint64_t (*)(_QWORD))v39;
    v79 = v38;
    sub_1A44695EC((uint64_t)v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v44 = objc_msgSend(v96[0], sel_resultStorages);
    v45 = sub_1A4690708();

    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v86[0] = v45;
    sub_1A44311F0((uint64_t)v86, (uint64_t)&v97);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v77 = v34;
      v83 = (uint64_t *)v35;
      v46 = v95;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
      v47 = v98;
      v48 = v84;
      v49 = (_QWORD *)swift_allocObject();
      v49[2] = v47;
      v49[3] = v46;
      v50 = v47;
      v49[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v51 = v82;
      v74(v82, v73, v81);
      v87 = v48;
      v86[0] = (uint64_t)v49;
      swift_retain();
      v52 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v86, v51);
      v52(&v97, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F418);
      v53 = v96[0];
      v54 = objc_msgSend(v96[0], sel_resultData);
      v55 = sub_1A468FFC4();
      v57 = v56;

      sub_1A4497ADC(&qword_1ED23F410, &qword_1ED23F418);
      sub_1A468FDFC();
      v84 = 0;
      sub_1A44695EC(v55, v57);
      v74 = (void (*)(uint64_t, uint64_t, void (*)(_QWORD)))v86[0];
      v82 = v86[1];
      v81 = (void (*)(uint64_t))v86[2];
      LODWORD(v79) = v87;
      LODWORD(v78) = BYTE1(v87);
      v58 = v89;
      v73 = v88;
      v59 = v90;
      v60 = v91;
      v76 = v49;
      v61 = v92;
      v62 = v93;
      v63 = v94;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71 = v63;
      swift_bridgeObjectRetain();
      v64 = v53;
      v72 = objc_msgSend(v64, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v77, (unint64_t)v83);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = v61;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = v73;
      swift_bridgeObjectRelease();
      v67 = (void (*)(_QWORD, _QWORD, _QWORD))v74;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v68 = v75;
      v69 = v82;
      *v75 = v67;
      v68[1] = v69;
      v68[2] = v81;
      *((_BYTE *)v68 + 24) = (_BYTE)v79;
      *((_BYTE *)v68 + 25) = (_BYTE)v78;
      v68[4] = v66;
      v68[5] = v58;
      v68[6] = v59;
      v68[7] = v60;
      v68[8] = v65;
      v68[9] = v62;
      v70 = v72;
      v68[10] = v71;
      v68[11] = v70;
    }
    else
    {
      sub_1A44311F0((uint64_t)v86, (uint64_t)&v97);
      sub_1A459A0BC((uint64_t)&v97, 0, 0);
      sub_1A4496084((uint64_t)&v97);
      swift_willThrow();
      sub_1A44695EC((uint64_t)v34, v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);

    }
  }
}

void sub_1A448EB60(char *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  sub_1A448AE30(a1, a2, type metadata accessor for REMRemindersListDataView.AllSectionsInvocation.Parameters, &qword_1ED23F920, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.AllSectionsInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.AllSectionsInvocation, &qword_1ED23F928, (unint64_t *)sub_1A4496070, a3, &qword_1ED23F938, &qword_1ED23F930);
}

void sub_1A448EBC0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  void (*v96)(char *, id, _QWORD *);
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  id v105;
  uint64_t v106;
  uint64_t v107[2];
  unsigned __int8 v108;
  unsigned __int8 v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119[6];
  uint64_t v120;
  void *v121;

  v104 = (uint64_t *)a2;
  v102 = a1;
  v101 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v110 = v12;
  v107[0] = v16;
  v103 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v107, (uint64_t)v7);
  v19(&v120, 0);
  type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D2D0, type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.GroupSectionsInvocation.Parameters);
  v20 = v105;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v107[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v119[5]);
      v120 = sub_1A4431120(v30, v31, v107);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v120 = type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D2D8);
      v32 = sub_1A46908E8();
      v120 = sub_1A4431120(v32, v33, v107);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v21;
    v95 = (id)v17;
    v96 = (void (*)(char *, id, _QWORD *))v18;
    v97 = v12;
    v99 = (_QWORD *)v4;
    v98 = v7;
    v100 = v8;
    v35 = v22;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v34, v35);
    swift_bridgeObjectRetain();
    v119[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation();
    v107[0] = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D2D8);
    v40 = sub_1A46908E8();
    v42 = v41;
    v104 = &v91;
    MEMORY[0x1E0C80A78](v40);
    *(&v91 - 6) = (uint64_t)v119;
    *(&v91 - 5) = (uint64_t)&v121;
    *(&v91 - 4) = v102;
    *(&v91 - 3) = v34;
    *(&v91 - 2) = v35;
    *(&v91 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v91 - 8));
    v105 = 0;
    v94 = v39;
    v102 = v38;
    v44 = v34;
    sub_1A44695EC(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v45 = sub_1A468FE14();
    v46 = objc_msgSend(v119[0], sel_resultStorages);
    v47 = sub_1A4690708();

    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v107[0] = v47;
    sub_1A44311F0((uint64_t)v107, (uint64_t)&v120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v93 = v44;
      v104 = (uint64_t *)v35;
      v48 = v118;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
      v49 = v121;
      v50 = v97;
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v49;
      v51[3] = v48;
      v52 = v49;
      v51[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v53 = (uint64_t)v98;
      v96(v98, v95, v99);
      v110 = v50;
      v107[0] = (uint64_t)v51;
      swift_retain();
      v54 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v107, v53);
      v54(&v120, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D2E0);
      v55 = v119[0];
      v56 = objc_msgSend(v119[0], sel_resultData);
      v57 = sub_1A468FFC4();
      v59 = v58;

      sub_1A4497ADC(&qword_1EE71D2E8, &qword_1EE71D2E0);
      v60 = v105;
      sub_1A468FDFC();
      v105 = v60;
      if (!v60)
      {
        sub_1A44695EC(v57, v59);
        v74 = v107[0];
        v96 = (void (*)(char *, id, _QWORD *))v45;
        v102 = v107[1];
        LODWORD(v98) = v108;
        LODWORD(v97) = v109;
        v75 = v110;
        v76 = v111;
        v77 = v112;
        v78 = v113;
        v99 = v51;
        v79 = v114;
        v80 = v115;
        v82 = v116;
        v81 = v117;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92 = v77;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94 = v81;
        swift_bridgeObjectRetain();
        v83 = v55;
        v95 = objc_msgSend(v83, sel_latestFetchResultToken);
        sub_1A44695EC(v93, (unint64_t)v104);
        swift_bridgeObjectRelease();
        v84 = v82;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v85 = (uint64_t)v92;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v86 = v101;
        v87 = v102;
        *v101 = v74;
        v86[1] = v87;
        *((_BYTE *)v86 + 16) = (_BYTE)v98;
        *((_BYTE *)v86 + 17) = v97;
        v86[3] = v75;
        v86[4] = v76;
        v86[5] = v85;
        v86[6] = v78;
        v86[7] = v79;
        v86[8] = v80;
        v88 = v94;
        v86[9] = v84;
        v86[10] = v88;
        v86[11] = (uint64_t)v95;
        return;
      }
      sub_1A44695EC(v57, v59);
      if (qword_1EE71C138 != -1)
        swift_once();
      v61 = sub_1A4690318();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EE721AB0);
      v62 = v105;
      v63 = v105;
      v64 = v62;
      v65 = sub_1A469030C();
      v66 = sub_1A4690FF0();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v99 = v51;
        v69 = v68;
        v107[0] = v68;
        *(_DWORD *)v67 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v106);
        v120 = sub_1A4431120(v70, v71, v107);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v67 + 12) = 2080;
        v120 = v102;
        v72 = sub_1A46908E8();
        v120 = sub_1A4431120(v72, v73, v107);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v65, v66, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v67, -1, -1);
      }
      else
      {

      }
      v89 = (unint64_t)v104;
      v90 = v93;
      swift_willThrow();
      sub_1A44695EC(v90, v89);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v107, (uint64_t)&v120);
      sub_1A459A0BC((uint64_t)&v120, 0, 0);
      sub_1A4496084((uint64_t)&v120);
      swift_willThrow();
      sub_1A44695EC(v44, v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v107);
    }

  }
}

void sub_1A448F840(char *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  sub_1A448AE30(a1, a2, type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation.Parameters, &qword_1EE71D2C0, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.AppIntentsSectionsInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation, &qword_1EE71D2C8, (unint64_t *)sub_1A4496070, a3, &qword_1ED23F938, &qword_1ED23F930);
}

void sub_1A448F8A0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, _QWORD *);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  id v115;
  uint64_t v116;
  uint64_t v117[3];
  uint64_t v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129[6];
  uint64_t v130;
  void *v131;

  v114 = (uint64_t *)a2;
  v112 = a1;
  v111 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v118 = v12;
  v117[0] = v16;
  v113 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v117, (uint64_t)v7);
  v19(&v130, 0);
  type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters(0);
  sub_1A4436344(&qword_1ED23F040, type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.TodayGroupInvocation.Parameters);
  v20 = v115;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v117[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v129[5]);
      v130 = sub_1A4431120(v30, v31, v117);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v130 = type metadata accessor for REMRemindersListDataView.TodayGroupInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F048);
      v32 = sub_1A46908E8();
      v130 = sub_1A4431120(v32, v33, v117);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v21;
    v105 = v17;
    v106 = v18;
    v107 = v12;
    v109 = (_QWORD *)v4;
    v108 = (uint64_t)v7;
    v110 = v8;
    v35 = v22;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v34, v35);
    swift_bridgeObjectRetain();
    v129[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.TodayGroupInvocation();
    v117[0] = v38;
    v39 = (void (*)(_QWORD, _QWORD, _QWORD))__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F048);
    v40 = sub_1A46908E8();
    v42 = v41;
    v114 = &v95;
    MEMORY[0x1E0C80A78](v40);
    *(&v95 - 6) = (uint64_t)v129;
    *(&v95 - 5) = (uint64_t)&v131;
    *(&v95 - 4) = v112;
    *(&v95 - 3) = v34;
    *(&v95 - 2) = v35;
    *(&v95 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v95 - 8));
    v115 = 0;
    v104 = (void (*)(uint64_t, uint64_t, _QWORD *))v39;
    v112 = v38;
    v44 = v34;
    sub_1A44695EC(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v45 = sub_1A468FE14();
    v46 = objc_msgSend(v129[0], sel_resultStorages);
    v47 = sub_1A4690708();

    v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v117[0] = v47;
    sub_1A44311F0((uint64_t)v117, (uint64_t)&v130);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v103 = v44;
      v114 = (uint64_t *)v35;
      v48 = v128;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
      v49 = v131;
      v50 = v107;
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v49;
      v51[3] = v48;
      v52 = v49;
      v51[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v53 = v108;
      v106((char *)v108, v105, (uint64_t)v109);
      v118 = v50;
      v117[0] = (uint64_t)v51;
      swift_retain();
      v54 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v117, v53);
      v54(&v130, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F078);
      v55 = v129[0];
      v56 = objc_msgSend(v129[0], sel_resultData);
      v57 = sub_1A468FFC4();
      v59 = v58;

      sub_1A4497ADC(&qword_1ED23F070, &qword_1ED23F078);
      v60 = v115;
      sub_1A468FDFC();
      v115 = v60;
      if (!v60)
      {
        sub_1A44695EC(v57, v59);
        v99 = v117[0];
        v112 = v117[1];
        v108 = v117[2];
        LODWORD(v107) = v118;
        v74 = v119;
        v95 = v120;
        v96 = v121;
        v106 = v122;
        v101 = v123;
        v109 = v51;
        v75 = v125;
        v98 = v124;
        v76 = v126;
        v77 = v127;
        v104 = v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v78 = v75;
        swift_bridgeObjectRetain();
        v79 = v76;
        swift_bridgeObjectRetain();
        v100 = v77;
        swift_bridgeObjectRetain();
        v80 = v55;
        v105 = v45;
        swift_bridgeObjectRetain();
        v81 = (uint64_t)v74;
        v97 = v74;
        v82 = v95;
        swift_bridgeObjectRetain();
        v83 = v96;
        swift_bridgeObjectRetain();
        v102 = objc_msgSend(v80, sel_latestFetchResultToken);
        sub_1A44695EC(v103, (unint64_t)v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = v98;
        swift_bridgeObjectRelease();
        v85 = v101;
        swift_bridgeObjectRelease();

        v86 = v83;
        swift_bridgeObjectRelease();
        v87 = v82;
        swift_bridgeObjectRelease();

        v88 = v99;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v89 = v111;
        v90 = v112;
        *v111 = v88;
        v89[1] = v90;
        v89[2] = v108;
        *((_BYTE *)v89 + 24) = v107;
        v89[4] = v81;
        v89[5] = v87;
        v91 = v106;
        v89[6] = v86;
        v89[7] = (uint64_t)v91;
        v89[8] = v85;
        v89[9] = v84;
        v89[10] = v78;
        v89[11] = v79;
        v92 = (uint64_t)v102;
        v89[12] = v100;
        v89[13] = v92;
        return;
      }
      sub_1A44695EC(v57, v59);
      if (qword_1EE71C138 != -1)
        swift_once();
      v61 = sub_1A4690318();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EE721AB0);
      v62 = v115;
      v63 = v115;
      v64 = v62;
      v65 = sub_1A469030C();
      v66 = sub_1A4690FF0();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v109 = v51;
        v69 = v68;
        v117[0] = v68;
        *(_DWORD *)v67 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v116);
        v130 = sub_1A4431120(v70, v71, v117);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v67 + 12) = 2080;
        v130 = v112;
        v72 = sub_1A46908E8();
        v130 = sub_1A4431120(v72, v73, v117);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v65, v66, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v67, -1, -1);
      }
      else
      {

      }
      v93 = (unint64_t)v114;
      v94 = v103;
      swift_willThrow();
      sub_1A44695EC(v94, v93);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v117, (uint64_t)&v130);
      sub_1A459A0BC((uint64_t)&v130, 0, 0);
      sub_1A4496084((uint64_t)&v130);
      swift_willThrow();
      sub_1A44695EC(v44, v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v117);
    }

  }
}

void sub_1A44905C8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(_QWORD *, _QWORD);
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  void (*v55)(_QWORD *, _QWORD);
  id v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  id v63;
  uint64_t *v64;
  uint64_t v65[2];
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  id v77[6];
  _QWORD v78[4];
  uint64_t v79[3];
  uint64_t v80;
  void *v81;

  v72 = a1;
  v71 = a2;
  v3 = sub_1A46915B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v75 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = v2;
  sub_1A468FE50();
  swift_allocObject();
  v6 = sub_1A468FE44();
  v7 = v2;
  v8 = MEMORY[0x1E0DEE9D8];
  v9 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v74 = type metadata accessor for REMStoreObjectsContainer();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v11 = (uint64_t)v10;
  v10[3] = v9;
  v12 = v10 + 3;
  v10[4] = sub_1A443CEF8(v8);
  if (qword_1ED244118 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED243F48);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v15 = (uint64_t)v75;
  v14(v75, v13, v3);
  v80 = v74;
  v79[0] = v11;
  swift_retain();
  v16 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v79, v15);
  v16(v78, 0);
  sub_1A44960C4();
  v17 = v73;
  v18 = sub_1A468FE2C();
  if (v17)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v20 = sub_1A4690318();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE721AB0);
    v21 = v17;
    v22 = v17;
    v23 = sub_1A469030C();
    v24 = sub_1A4690FF0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v73 = (void *)v6;
      v26 = v25;
      v27 = swift_slowAlloc();
      v79[0] = v27;
      *(_DWORD *)v26 = 136315394;
      swift_getErrorValue();
      v28 = Error.rem_errorDescription.getter((uint64_t)v77[5]);
      v78[0] = sub_1A4431120(v28, v29, v79);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v26 + 12) = 2080;
      v78[0] = type metadata accessor for REMRemindersListDataView.TodaySectionOrderingInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D2B0);
      v30 = sub_1A46908E8();
      v78[0] = sub_1A4431120(v30, v31, v79);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v23, v24, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v27, -1, -1);
      MEMORY[0x1A85A0114](v26, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v32 = v18;
    v33 = v19;
    v66 = v13;
    v67 = v14;
    v68 = v3;
    v69 = v11;
    v73 = (void *)v6;
    swift_beginAccess();
    v34 = *v12;
    v35 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v32, v33);
    swift_bridgeObjectRetain();
    v77[0] = objc_msgSend(v35, sel_init);
    v36 = type metadata accessor for REMRemindersListDataView.TodaySectionOrderingInvocation();
    v79[0] = v36;
    v37 = v33;
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D2B0);
    v39 = sub_1A46908E8();
    v41 = v40;
    v70 = v65;
    MEMORY[0x1E0C80A78](v39);
    v42 = v37;
    v65[-6] = (uint64_t)v77;
    v65[-5] = (uint64_t)&v81;
    v65[-4] = v72;
    v65[-3] = v43;
    v44 = v43;
    v45 = v42;
    v65[-2] = v42;
    v65[-1] = v34;
    v46 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v39, v41, v46, (char *)sub_1A4496070, (uint64_t)&v65[-8]);
    v65[1] = v38;
    v72 = v36;
    sub_1A44695EC(v44, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v47 = objc_msgSend(v77[0], sel_resultStorages);
    v48 = sub_1A4690708();

    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v79[0] = v48;
    sub_1A44311F0((uint64_t)v79, (uint64_t)v78);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v65[0] = v44;
      v70 = (uint64_t *)v45;
      v49 = v76;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
      v50 = v81;
      v51 = v74;
      v52 = (_QWORD *)swift_allocObject();
      v52[2] = v50;
      v52[3] = v49;
      v53 = v50;
      v52[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v54 = (uint64_t)v75;
      v67(v75, v66, v68);
      v80 = v51;
      v79[0] = (uint64_t)v52;
      swift_retain();
      v55 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v79, v54);
      v55(v78, 0);
      v56 = v77[0];
      v57 = objc_msgSend(v77[0], sel_resultData);
      v58 = sub_1A468FFC4();
      v60 = v59;

      sub_1A4496108();
      sub_1A468FDFC();
      sub_1A44695EC(v58, v60);
      v61 = v79[0];
      swift_bridgeObjectRetain();
      v62 = v56;
      v63 = objc_msgSend(v62, sel_latestFetchResultToken);
      sub_1A44695EC(v65[0], (unint64_t)v70);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      v64 = v71;
      *v71 = v61;
      v64[1] = (uint64_t)v63;
    }
    else
    {
      sub_1A44311F0((uint64_t)v79, (uint64_t)v78);
      sub_1A459A0BC((uint64_t)v78, 0, 0);
      sub_1A4496084((uint64_t)v78);
      swift_willThrow();
      sub_1A44695EC(v44, v45);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);

    }
  }
}

void sub_1A449107C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1A448BBA0(a1, a2, type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation.Parameters, &qword_1EE71D298, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledFlatInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation, &qword_1EE71D2A0, (char *)sub_1A4496070, a3);
}

void sub_1A44910C0(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(uint64_t *, _QWORD);
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  uint64_t v53;
  void (*v54)(uint64_t *, _QWORD);
  id v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  id v62;
  id v63;
  id v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  char *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  id v101;
  uint64_t v102;
  uint64_t v103[2];
  unsigned __int8 v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113[6];
  uint64_t v114;
  void *v115;

  v100 = (uint64_t *)a2;
  v98 = a1;
  v97 = a3;
  v4 = sub_1A46915B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v88 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = v3;
  sub_1A468FE50();
  swift_allocObject();
  v8 = sub_1A468FE44();
  v9 = v3;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v12 = type metadata accessor for REMStoreObjectsContainer();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v9;
  v13[3] = v11;
  v14 = v13 + 3;
  v15 = v10;
  v16 = (uint64_t)v13;
  v13[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED243F48);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v18(v7, v17, v4);
  v105 = v12;
  v103[0] = v16;
  v99 = v16;
  swift_retain();
  v19 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v103, (uint64_t)v7);
  v19(&v114, 0);
  type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters(0);
  sub_1A4436344(&qword_1EE71D278, type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters);
  v20 = v101;
  v21 = sub_1A468FE2C();
  if (v20)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v23 = sub_1A4690318();
    __swift_project_value_buffer(v23, (uint64_t)qword_1EE721AB0);
    v24 = v20;
    v25 = v20;
    v26 = sub_1A469030C();
    v27 = sub_1A4690FF0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v103[0] = v29;
      *(_DWORD *)v28 = 136315394;
      swift_getErrorValue();
      v30 = Error.rem_errorDescription.getter((uint64_t)v113[5]);
      v114 = sub_1A4431120(v30, v31, v103);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v28 + 12) = 2080;
      v114 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D280);
      v32 = sub_1A46908E8();
      v114 = sub_1A4431120(v32, v33, v103);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v26, v27, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v28, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v34 = v21;
    v91 = v17;
    v92 = v18;
    v93 = v12;
    v95 = (_QWORD *)v4;
    v94 = v7;
    v96 = v8;
    v35 = v22;
    swift_beginAccess();
    v36 = *v14;
    v37 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v34, v35);
    swift_bridgeObjectRetain();
    v113[0] = objc_msgSend(v37, sel_init);
    v38 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation();
    v103[0] = v38;
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D280);
    v40 = sub_1A46908E8();
    v42 = v41;
    v100 = &v88;
    MEMORY[0x1E0C80A78](v40);
    *(&v88 - 6) = (uint64_t)v113;
    *(&v88 - 5) = (uint64_t)&v115;
    *(&v88 - 4) = v98;
    *(&v88 - 3) = v34;
    *(&v88 - 2) = v35;
    *(&v88 - 1) = v36;
    v43 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v40, v42, v43, (char *)sub_1A4496070, (uint64_t)(&v88 - 8));
    v101 = 0;
    v90 = v39;
    v98 = v38;
    v44 = v34;
    sub_1A44695EC(v34, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v45 = sub_1A468FE14();
    v46 = objc_msgSend(v113[0], sel_resultStorages);
    v47 = sub_1A4690708();

    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v103[0] = v47;
    sub_1A44311F0((uint64_t)v103, (uint64_t)&v114);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v89 = v44;
      v100 = (uint64_t *)v35;
      v48 = v112;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
      v49 = v115;
      v50 = v93;
      v51 = (_QWORD *)swift_allocObject();
      v51[2] = v49;
      v51[3] = v48;
      v52 = v49;
      v51[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v53 = (uint64_t)v94;
      v92(v94, v91, (uint64_t)v95);
      v105 = v50;
      v103[0] = (uint64_t)v51;
      swift_retain();
      v54 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v103, v53);
      v54(&v114, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D288);
      v55 = v113[0];
      v56 = objc_msgSend(v113[0], sel_resultData);
      v57 = sub_1A468FFC4();
      v59 = v58;

      sub_1A4497ADC(&qword_1EE71D290, &qword_1EE71D288);
      v60 = v101;
      sub_1A468FDFC();
      v101 = v60;
      if (!v60)
      {
        sub_1A44695EC(v57, v59);
        v74 = v103[0];
        v93 = v45;
        v98 = v103[1];
        LODWORD(v94) = v104;
        v75 = v105;
        v76 = v106;
        v95 = v51;
        v77 = v107;
        v78 = v108;
        v80 = v109;
        v79 = v110;
        v81 = v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v82 = v55;
        v92 = (void (*)(char *, uint64_t, uint64_t))objc_msgSend(v82, sel_latestFetchResultToken);
        sub_1A44695EC(v89, (unint64_t)v100);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v83 = v97;
        v84 = v98;
        *v97 = v74;
        v83[1] = v84;
        *((_BYTE *)v83 + 16) = (_BYTE)v94;
        v83[3] = v75;
        v83[4] = v76;
        v83[5] = v77;
        v83[6] = v78;
        v83[7] = v80;
        v83[8] = v79;
        v85 = (uint64_t)v92;
        v83[9] = v81;
        v83[10] = v85;
        return;
      }
      sub_1A44695EC(v57, v59);
      if (qword_1EE71C138 != -1)
        swift_once();
      v61 = sub_1A4690318();
      __swift_project_value_buffer(v61, (uint64_t)qword_1EE721AB0);
      v62 = v101;
      v63 = v101;
      v64 = v62;
      v65 = sub_1A469030C();
      v66 = sub_1A4690FF0();
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc();
        v68 = swift_slowAlloc();
        v95 = v51;
        v69 = v68;
        v103[0] = v68;
        *(_DWORD *)v67 = 136315394;
        swift_getErrorValue();
        v70 = Error.rem_errorDescription.getter(v102);
        v114 = sub_1A4431120(v70, v71, v103);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v67 + 12) = 2080;
        v114 = v98;
        v72 = sub_1A46908E8();
        v114 = sub_1A4431120(v72, v73, v103);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v65, v66, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v67, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v69, -1, -1);
        MEMORY[0x1A85A0114](v67, -1, -1);
      }
      else
      {

      }
      v86 = (unint64_t)v100;
      v87 = v89;
      swift_willThrow();
      sub_1A44695EC(v87, v86);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v103, (uint64_t)&v114);
      sub_1A459A0BC((uint64_t)&v114, 0, 0);
      sub_1A4496084((uint64_t)&v114);
      swift_willThrow();
      sub_1A44695EC(v44, v35);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
    }

  }
}

void sub_1A4491CF0(void *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  sub_1A4491DB0(a1, a2, type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation.Parameters, &qword_1ED23F898, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledByDateBucketsInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation, &qword_1ED23F8A0, (unint64_t *)sub_1A4496070, a3, &qword_1ED23F878, &qword_1ED23F870);
}

void sub_1A4491D50(void *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  sub_1A4491DB0(a1, a2, type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation.Parameters, &qword_1EE71D258, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CompletedByDateBucketsInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation, &qword_1EE71D260, (unint64_t *)sub_1A4496070, a3, &qword_1EE71D268, &qword_1EE71D270);
}

void sub_1A4491DB0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD)@<X5>, uint64_t *a7@<X6>, unint64_t *a8@<X7>, char **a9@<X8>, uint64_t *a10, unint64_t *a11)
{
  void *v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(uint64_t *, _QWORD);
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t);
  id v58;
  uint64_t v59;
  void (*v60)(uint64_t *, _QWORD);
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  BOOL v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  id v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char **v88;
  unint64_t *v89;
  char *v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char **v99;
  void *v100;
  char *v101;
  uint64_t (*v102)(_QWORD);
  uint64_t *v103;
  uint64_t v104;
  unint64_t *v105;
  uint64_t (*v106)(uint64_t);
  uint64_t v107;
  uint64_t *v108;
  void *v109;
  uint64_t v110;
  uint64_t v111[3];
  uint64_t v112;
  void *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t (*v119)(uint64_t);
  uint64_t v120;
  id v121[6];
  uint64_t v122;
  void *v123;

  v101 = (char *)a8;
  v103 = a7;
  v102 = a6;
  v107 = a5;
  v105 = a4;
  v106 = a3;
  v108 = (uint64_t *)a2;
  v100 = a1;
  v99 = a9;
  v12 = (unint64_t *)sub_1A46915B4();
  v104 = *(v12 - 1);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t (*)(uint64_t))((char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v123 = v11;
  sub_1A468FE50();
  swift_allocObject();
  v15 = sub_1A468FE44();
  v16 = v11;
  v17 = MEMORY[0x1E0DEE9D8];
  v18 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v19 = type metadata accessor for REMStoreObjectsContainer();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v16;
  v21 = (uint64_t)v20;
  v20[3] = v18;
  v22 = v20 + 3;
  v20[4] = sub_1A443CEF8(v17);
  if (qword_1ED244118 != -1)
    swift_once();
  v23 = __swift_project_value_buffer((uint64_t)v12, (uint64_t)qword_1ED243F48);
  v24 = *(char **)(v104 + 16);
  ((void (*)(uint64_t (*)(uint64_t), uint64_t, unint64_t *))v24)(v14, v23, v12);
  v112 = v19;
  v111[0] = v21;
  v104 = v21;
  swift_retain();
  v25 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)v111, (uint64_t)v14);
  v25(&v122, 0);
  v26 = v106;
  v106(0);
  sub_1A4436344(v105, v26, v107);
  v27 = v109;
  v28 = sub_1A468FE2C();
  if (v27)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v30 = sub_1A4690318();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EE721AB0);
    v31 = v27;
    v32 = v27;
    v33 = sub_1A469030C();
    v34 = sub_1A4690FF0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v111[0] = v36;
      *(_DWORD *)v35 = 136315394;
      swift_getErrorValue();
      v37 = Error.rem_errorDescription.getter((uint64_t)v121[5]);
      v122 = sub_1A4431120(v37, v38, v111);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v35 + 12) = 2080;
      v122 = v102(0);
      __swift_instantiateConcreteTypeFromMangledName(v103);
      v39 = sub_1A46908E8();
      v122 = sub_1A4431120(v39, v40, v111);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v33, v34, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v36, -1, -1);
      MEMORY[0x1A85A0114](v35, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v41 = v28;
    v96 = v23;
    v97 = v24;
    v98 = (char *)v19;
    v105 = v12;
    v107 = v15;
    v106 = v14;
    v42 = v29;
    swift_beginAccess();
    v43 = *v22;
    v44 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v41, v42);
    swift_bridgeObjectRetain();
    v121[0] = objc_msgSend(v44, sel_init);
    v45 = (uint64_t *)v102(0);
    v111[0] = (uint64_t)v45;
    v46 = __swift_instantiateConcreteTypeFromMangledName(v103);
    v47 = v41;
    v48 = sub_1A46908E8();
    v50 = v49;
    v108 = &v93;
    MEMORY[0x1E0C80A78](v48);
    *(&v93 - 6) = (uint64_t)v121;
    *(&v93 - 5) = (uint64_t)&v123;
    *(&v93 - 4) = (uint64_t)v100;
    *(&v93 - 3) = v47;
    v109 = (void *)v42;
    *(&v93 - 2) = v42;
    *(&v93 - 1) = v43;
    v51 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v48, v50, v51, v101, (uint64_t)(&v93 - 8));
    v102 = (uint64_t (*)(_QWORD))v46;
    v103 = v45;
    sub_1A44695EC(v47, (unint64_t)v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v52 = objc_msgSend(v121[0], sel_resultStorages);
    v53 = sub_1A4690708();

    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v111[0] = v53;
    sub_1A44311F0((uint64_t)v111, (uint64_t)&v122);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v108 = (uint64_t *)v47;
      v101 = (char *)a11;
      v54 = v120;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
      v55 = v123;
      v100 = 0;
      v56 = (uint64_t)v98;
      v57 = (uint64_t (*)(uint64_t))swift_allocObject();
      *((_QWORD *)v57 + 2) = v55;
      *((_QWORD *)v57 + 3) = v54;
      v58 = v55;
      *((_QWORD *)v57 + 4) = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v59 = (uint64_t)v106;
      ((void (*)(uint64_t (*)(uint64_t), uint64_t, unint64_t *))v97)(v106, v96, v105);
      v112 = v56;
      v111[0] = (uint64_t)v57;
      swift_retain();
      v60 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)v111, v59);
      v60(&v122, 0);
      __swift_instantiateConcreteTypeFromMangledName(a10);
      v61 = v121[0];
      v62 = objc_msgSend(v121[0], sel_resultData);
      v63 = sub_1A468FFC4();
      v65 = v64;

      sub_1A4497ADC((unint64_t *)v101, a10);
      v66 = v100;
      sub_1A468FDFC();
      if (!v66)
      {
        sub_1A44695EC(v63, v65);
        v101 = (char *)v111[0];
        v105 = (unint64_t *)v111[1];
        v103 = (uint64_t *)v111[2];
        LODWORD(v102) = v112;
        v100 = v113;
        v97 = v114;
        v80 = v116;
        v96 = v115;
        v81 = v117;
        v82 = v118;
        v106 = v119;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94 = v81;
        swift_bridgeObjectRetain();
        v95 = v82;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v83 = v61;
        v98 = (char *)objc_msgSend(v83, sel_latestFetchResultToken);
        sub_1A44695EC((uint64_t)v108, (unint64_t)v109);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v84 = (char *)v96;
        swift_bridgeObjectRelease();
        v85 = v97;
        swift_bridgeObjectRelease();
        v86 = (char *)v100;
        swift_bridgeObjectRelease();
        v87 = v101;
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        v88 = v99;
        v89 = v105;
        *v99 = v87;
        v88[1] = (char *)v89;
        v88[2] = (char *)v103;
        *((_BYTE *)v88 + 24) = (_BYTE)v102;
        v88[4] = v86;
        v88[5] = v85;
        v88[6] = v84;
        v88[7] = v80;
        v90 = v95;
        v88[8] = v94;
        v88[9] = v90;
        v91 = v98;
        v88[10] = (char *)v106;
        v88[11] = v91;
        return;
      }
      v106 = v57;
      sub_1A44695EC(v63, v65);
      if (qword_1EE71C138 != -1)
        swift_once();
      v67 = sub_1A4690318();
      __swift_project_value_buffer(v67, (uint64_t)qword_1EE721AB0);
      v68 = v66;
      v69 = v66;
      v70 = sub_1A469030C();
      v71 = sub_1A4690FF0();
      v72 = os_log_type_enabled(v70, v71);
      v73 = v103;
      if (v72)
      {
        v74 = swift_slowAlloc();
        v75 = swift_slowAlloc();
        v111[0] = v75;
        *(_DWORD *)v74 = 136315394;
        swift_getErrorValue();
        v76 = Error.rem_errorDescription.getter(v110);
        v122 = sub_1A4431120(v76, v77, v111);
        sub_1A46911D0();
        swift_bridgeObjectRelease();

        *(_WORD *)(v74 + 12) = 2080;
        v122 = (uint64_t)v73;
        v78 = sub_1A46908E8();
        v122 = sub_1A4431120(v78, v79, v111);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v70, v71, "Failed to decode the result of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v74, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v75, -1, -1);
        MEMORY[0x1A85A0114](v74, -1, -1);
      }
      else
      {

      }
      v92 = (unint64_t)v109;
      swift_willThrow();
      sub_1A44695EC((uint64_t)v108, v92);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_1A44311F0((uint64_t)v111, (uint64_t)&v122);
      sub_1A459A0BC((uint64_t)&v122, 0, 0);
      sub_1A4496084((uint64_t)&v122);
      swift_willThrow();
      sub_1A44695EC(v47, (unint64_t)v109);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v111);
    }

  }
}

void sub_1A4492A9C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1A448BBA0(a1, a2, type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters, &qword_1ED23F438, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation, &qword_1ED23F440, (char *)sub_1A4496070, a3);
}

void sub_1A4492AE0(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD);
  void *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  _QWORD *v57;
  id v58;
  uint64_t v59;
  void (*v60)(_QWORD *, _QWORD);
  id v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  id v89[6];
  _QWORD v90[4];
  _QWORD *v91;
  uint64_t v92;
  void *v93;
  char v94;

  v4 = v3;
  v84 = a1;
  v81 = a3;
  v82 = type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result();
  v6 = MEMORY[0x1E0C80A78](v82);
  v80 = (uint64_t)&v73 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v73 - v9;
  MEMORY[0x1E0C80A78](v8);
  v79 = (uint64_t)&v73 - v10;
  v11 = sub_1A46915B4();
  v85 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = a2;
  v93 = v4;
  sub_1A468FE50();
  swift_allocObject();
  v13 = sub_1A468FE44();
  v14 = v4;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v17 = type metadata accessor for REMStoreObjectsContainer();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v14;
  v19 = (uint64_t)v18;
  v18[3] = v16;
  v20 = v18 + 3;
  v18[4] = sub_1A443CEF8(v15);
  if (qword_1ED244118 != -1)
    swift_once();
  v21 = __swift_project_value_buffer(v11, (uint64_t)qword_1ED243F48);
  v22 = v11;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v85 + 16);
  v24 = (uint64_t)v87;
  v23(v87, v21, v22);
  v92 = v17;
  v91 = (_QWORD *)v19;
  v85 = v19;
  swift_retain();
  v25 = (void (*)(_QWORD *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v91, v24);
  v25(v90, 0);
  sub_1A449602C();
  v26 = v86;
  v27 = sub_1A468FE2C();
  if (v26)
  {
    if (qword_1EE71C138 != -1)
      swift_once();
    v29 = sub_1A4690318();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE721AB0);
    v30 = v26;
    v31 = v26;
    v32 = sub_1A469030C();
    v33 = sub_1A4690FF0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v91 = (_QWORD *)v35;
      *(_DWORD *)v34 = 136315394;
      swift_getErrorValue();
      v36 = Error.rem_errorDescription.getter((uint64_t)v89[5]);
      v90[0] = sub_1A4431120(v36, v37, (uint64_t *)&v91);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v34 + 12) = 2080;
      v90[0] = type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D240);
      v38 = sub_1A46908E8();
      v90[0] = sub_1A4431120(v38, v39, (uint64_t *)&v91);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v32, v33, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v35, -1, -1);
      MEMORY[0x1A85A0114](v34, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v40 = v27;
    v41 = v28;
    v74 = v21;
    v75 = v22;
    v76 = v23;
    v77 = v17;
    v78 = v13;
    swift_beginAccess();
    v42 = *v20;
    v43 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v40, v41);
    swift_bridgeObjectRetain();
    v89[0] = objc_msgSend(v43, sel_init);
    v44 = type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation();
    v91 = (_QWORD *)v44;
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D240);
    v46 = v40;
    v47 = sub_1A46908E8();
    v49 = v48;
    v86 = &v73;
    MEMORY[0x1E0C80A78](v47);
    *(&v73 - 6) = (uint64_t)v89;
    *(&v73 - 5) = (uint64_t)&v93;
    *(&v73 - 4) = v84;
    *(&v73 - 3) = v46;
    *(&v73 - 2) = v41;
    *(&v73 - 1) = v42;
    v50 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v47, v49, v50, (char *)sub_1A4496070, (uint64_t)(&v73 - 8));
    v73 = v45;
    v84 = v44;
    sub_1A44695EC(v46, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    v51 = v41;
    sub_1A468FE14();
    v52 = objc_msgSend(v89[0], sel_resultStorages);
    v53 = sub_1A4690708();

    v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v91 = (_QWORD *)v53;
    sub_1A44311F0((uint64_t)&v91, (uint64_t)v90);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v86 = (_QWORD *)v46;
      v54 = v88;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
      v55 = v93;
      v56 = v77;
      v57 = (_QWORD *)swift_allocObject();
      v57[2] = v55;
      v57[3] = v54;
      v58 = v55;
      v57[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v59 = (uint64_t)v87;
      v76(v87, v74, v75);
      v92 = v56;
      v91 = v57;
      swift_retain();
      v60 = (void (*)(_QWORD *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v91, v59);
      v60(v90, 0);
      v61 = v89[0];
      v62 = objc_msgSend(v89[0], sel_resultData);
      v63 = sub_1A468FFC4();
      v65 = v64;

      sub_1A4436344(&qword_1EE71D248, (uint64_t (*)(uint64_t))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result, (uint64_t)&protocol conformance descriptor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      v66 = v83;
      sub_1A468FDFC();
      sub_1A44695EC(v63, v65);
      v67 = (uint64_t)v66;
      v68 = v79;
      sub_1A44683E0(v67, v79, (uint64_t (*)(_QWORD))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      v69 = v80;
      sub_1A4497EE8(v68, v80, (uint64_t (*)(_QWORD))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      v70 = v61;
      v71 = objc_msgSend(v70, sel_latestFetchResultToken);
      sub_1A44695EC((uint64_t)v86, v51);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      sub_1A4497F2C(v68, (uint64_t (*)(_QWORD))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      v72 = v81;
      sub_1A44683E0(v69, v81, (uint64_t (*)(_QWORD))type metadata accessor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Result);
      *(_QWORD *)(v72 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D250) + 28)) = v71;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v91, (uint64_t)v90);
      sub_1A459A0BC((uint64_t)v90, 0, 0);
      sub_1A4496084((uint64_t)v90);
      swift_willThrow();
      sub_1A44695EC(v46, v51);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v91);
    }

  }
}

uint64_t static REMRemindersInCalendarDataView.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMRemindersInCalendarDataView.Invocation.Parameters.lastFetchPredicateVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1A4493704()
{
  return 0xD000000000000019;
}

uint64_t sub_1A4493720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4495E98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A4493748()
{
  sub_1A4494694();
  return sub_1A4691DB8();
}

uint64_t sub_1A4493770()
{
  sub_1A4494694();
  return sub_1A4691DC4();
}

uint64_t REMRemindersInCalendarDataView.Invocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4494694();
  sub_1A4691D40();
  sub_1A469183C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4494694();
  sub_1A4691D28();
  if (!v2)
  {
    v9 = sub_1A4691770();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A44939AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersInCalendarDataView.Invocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A44939C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4494694();
  sub_1A4691D40();
  sub_1A469183C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.remindersResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  return sub_1A44945F0(v2, v3, v4, v5);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.predicateVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

__n128 REMRemindersInCalendarDataView.Invocation.Result.init(remindersResult:predicateVersion:)@<Q0>(__n128 *a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  a3[2].n128_u64[0] = a2;
  return result;
}

uint64_t sub_1A4493AF4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x7265646E696D6572;
}

uint64_t sub_1A4493B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4495F1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4493B64()
{
  sub_1A44946D8();
  return sub_1A4691DB8();
}

uint64_t sub_1A4493B8C()
{
  sub_1A44946D8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD v11[2];
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v7 = *((_QWORD *)v1 + 2);
  v8 = *((_BYTE *)v1 + 24);
  v11[1] = *((_QWORD *)v1 + 4);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44946D8();
  sub_1A4691D40();
  v14 = v12;
  v15 = v7;
  v16 = v8;
  v17 = 0;
  sub_1A449471C();
  v9 = v13;
  sub_1A4691890();
  if (!v9)
  {
    LOBYTE(v14) = 1;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMRemindersInCalendarDataView.Invocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  int v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FB40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44946D8();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = 0;
  sub_1A4494760();
  sub_1A46917C4();
  v9 = v17;
  v10 = v18;
  LOBYTE(v17) = 1;
  v16 = v19;
  v21 = v20;
  sub_1A44945F0(v9, v18, v19, v20);
  v11 = sub_1A46917AC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  v12 = v16;
  *(_QWORD *)(a2 + 16) = v16;
  v13 = v21;
  *(_BYTE *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A4494644(v9, v10, v12, v13);
}

uint64_t sub_1A4493EEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersInCalendarDataView.Invocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A4493F00(_QWORD *a1)
{
  return REMRemindersInCalendarDataView.Invocation.Result.encode(to:)(a1);
}

id REMRemindersInCalendarDataView.Invocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMRemindersInCalendarDataView.Invocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMRemindersInCalendarDataView.Invocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMRemindersInCalendarDataView.Invocation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A44940B0()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_name);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

uint64_t REMRemindersInCalendarDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMRemindersInCalendarDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1A449411C(void **a1, void *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1A468FFAC();
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  sub_1A4460634();
  v7 = (void *)sub_1A46906F0();
  v13[0] = 0;
  v8 = objc_msgSend(a2, sel_resultFromPerformingSwiftInvocation_parametersData_storages_error_, a3, v6, v7, v13);

  v9 = v13[0];
  if (v8)
  {
    v10 = *a1;
    *a1 = v8;
    v11 = v9;

  }
  else
  {
    v12 = v13[0];
    sub_1A468FE68();

    swift_willThrow();
  }
}

uint64_t _s19ReminderKitInternal30REMRemindersInCalendarDataViewC09ReminderseF6ResultV0iJ0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  if ((v5 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) == 0)
    {
      sub_1A44945F0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, 0);
      sub_1A44945F0(v3, v2, v4, 0);
      sub_1A4464060(v3, v7);
      v20 = v19;
      sub_1A4494644(v3, v2, v4, 0);
      sub_1A4494644(v7, v6, v8, 0);
      return v20 & 1;
    }
    goto LABEL_8;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) == 0)
  {
LABEL_8:
    sub_1A44945F0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, v9);
    sub_1A44945F0(v3, v2, v4, v5);
    sub_1A4494644(v3, v2, v4, v5);
    v15 = v7;
    v16 = v6;
    v17 = v8;
    v18 = v9;
    goto LABEL_11;
  }
  sub_1A44945F0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, 1);
  sub_1A44945F0(v3, v2, v4, 1);
  sub_1A44945F0(v7, v6, v8, 1);
  sub_1A44945F0(v3, v2, v4, 1);
  sub_1A4464060(v3, v7);
  if ((v10 & 1) != 0)
  {
    sub_1A4464060(v2, v6);
    if ((v11 & 1) != 0)
    {
      sub_1A4464060(v4, v8);
      v13 = v12;
      v14 = 1;
      sub_1A4494644(v3, v2, v4, 1);
      sub_1A4494644(v7, v6, v8, 1);
      sub_1A4494644(v7, v6, v8, 1);
      sub_1A4494644(v3, v2, v4, 1);
      if ((v13 & 1) != 0)
        return v14;
      return 0;
    }
  }
  sub_1A4494644(v3, v2, v4, 1);
  sub_1A4494644(v7, v6, v8, 1);
  sub_1A4494644(v7, v6, v8, 1);
  v15 = v3;
  v16 = v2;
  v17 = v4;
  v18 = 1;
LABEL_11:
  sub_1A4494644(v15, v16, v17, v18);
  return 0;
}

unint64_t sub_1A449449C()
{
  unint64_t result;

  result = qword_1ED2415B0;
  if (!qword_1ED2415B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697860, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415B0);
  }
  return result;
}

unint64_t sub_1A44944E0()
{
  unint64_t result;

  result = qword_1ED2415D8;
  if (!qword_1ED2415D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697810, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415D8);
  }
  return result;
}

unint64_t sub_1A4494524()
{
  unint64_t result;

  result = qword_1ED23FB60;
  if (!qword_1ED23FB60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult);
    atomic_store(result, (unint64_t *)&qword_1ED23FB60);
  }
  return result;
}

unint64_t sub_1A4494568()
{
  unint64_t result;

  result = qword_1ED241840;
  if (!qword_1ED241840)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46977C0, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241840);
  }
  return result;
}

unint64_t sub_1A44945AC()
{
  unint64_t result;

  result = qword_1ED23FAD0;
  if (!qword_1ED23FAD0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult);
    atomic_store(result, (unint64_t *)&qword_1ED23FAD0);
  }
  return result;
}

uint64_t sub_1A44945F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for REMRemindersInCalendarDataView.Invocation()
{
  return objc_opt_self();
}

uint64_t sub_1A4494644(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A4494694()
{
  unint64_t result;

  result = qword_1ED2415F0;
  if (!qword_1ED2415F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697770, &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415F0);
  }
  return result;
}

unint64_t sub_1A44946D8()
{
  unint64_t result;

  result = qword_1ED241608;
  if (!qword_1ED241608)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697720, &type metadata for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241608);
  }
  return result;
}

unint64_t sub_1A449471C()
{
  unint64_t result;

  result = qword_1ED23FB68;
  if (!qword_1ED23FB68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult);
    atomic_store(result, (unint64_t *)&qword_1ED23FB68);
  }
  return result;
}

unint64_t sub_1A4494760()
{
  unint64_t result;

  result = qword_1ED23FAD8;
  if (!qword_1ED23FAD8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult);
    atomic_store(result, (unint64_t *)&qword_1ED23FAD8);
  }
  return result;
}

unint64_t sub_1A44947A8()
{
  unint64_t result;

  result = qword_1EE71D1B0;
  if (!qword_1EE71D1B0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.Invocation.Parameters, &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D1B0);
  }
  return result;
}

unint64_t sub_1A44947F0()
{
  unint64_t result;

  result = qword_1ED23FAE0;
  if (!qword_1ED23FAE0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.Invocation.Parameters, &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1ED23FAE0);
  }
  return result;
}

unint64_t sub_1A4494838()
{
  unint64_t result;

  result = qword_1ED23FAE8;
  if (!qword_1ED23FAE8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.Invocation.Result, &type metadata for REMRemindersInCalendarDataView.Invocation.Result);
    atomic_store(result, (unint64_t *)&qword_1ED23FAE8);
  }
  return result;
}

unint64_t sub_1A4494880()
{
  unint64_t result;

  result = qword_1EE71D1B8;
  if (!qword_1EE71D1B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarDataView.Invocation.Result, &type metadata for REMRemindersInCalendarDataView.Invocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D1B8);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersInCalendarDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMRemindersInCalendarDataView()
{
  return swift_lookUpClassMethod();
}

_QWORD *initializeBufferWithCopyOfBuffer for REMRemindersInCalendarDataView.FetchResultToken(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for REMRemindersInCalendarDataView.FetchResultToken(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  v3 = (void *)a2[1];
  v4 = (void *)a1[1];
  a1[1] = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for REMRemindersInCalendarDataView.FetchResultToken(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;

  v3 = a2[1];
  v4 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v3;

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.FetchResultToken()
{
  return &type metadata for REMRemindersInCalendarDataView.FetchResultToken;
}

void destroy for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1)
{
  sub_1A4494644(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));

}

uint64_t initializeWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  void *v8;
  id v9;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1A44945F0(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  void *v13;
  id v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1A44945F0(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1A4494644(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v12 = *(void **)(a2 + 40);
  v13 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v12;
  v14 = v12;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1A4494644(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;

  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult;
}

uint64_t destroy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1)
{
  return sub_1A4494644(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A44945F0(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A44945F0(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A4494644(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A4494644(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A4494D8C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1A4494D94(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult;
}

uint64_t destroy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19ReminderKitInternal30REMRemindersInCalendarDataViewC25RemindersInCalendarResultV15RemindersResultO17IncrementalResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Parameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Parameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Parameters()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters;
}

uint64_t initializeWithCopy for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1A44945F0(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1A44945F0(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1A4494644(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1A4494644(v6, v7, v8, v9);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Result(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.Invocation.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Result()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys;
}

_BYTE *sub_1A44951EC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys;
}

uint64_t _s19ReminderKitInternal30REMRemindersInCalendarDataViewC10InvocationC10ParametersV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A4495258 + 4 * byte_1A4696E90[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4495278 + 4 * byte_1A4696E95[v4]))();
}

_BYTE *sub_1A4495258(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4495278(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4495280(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4495288(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4495290(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4495298(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4495300 + 4 * byte_1A4696E9F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A4495334 + 4 * byte_1A4696E9A[v4]))();
}

uint64_t sub_1A4495334(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449533C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4495344);
  return result;
}

uint64_t sub_1A4495350(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4495358);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A449535C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4495364(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMSiriSearchDataView.ListsResult_Codable.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19ReminderKitInternal30REMRemindersInCalendarDataViewC10InvocationC6ResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A449545C + 4 * byte_1A4696EA9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4495490 + 4 * byte_1A4696EA4[v4]))();
}

uint64_t sub_1A4495490(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4495498(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44954A0);
  return result;
}

uint64_t sub_1A44954AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44954B4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44954B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44954C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys()
{
  return &type metadata for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys;
}

unint64_t sub_1A44954E0()
{
  unint64_t result;

  result = qword_1EE71D200;
  if (!qword_1EE71D200)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46972A8, &type metadata for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D200);
  }
  return result;
}

unint64_t sub_1A4495528()
{
  unint64_t result;

  result = qword_1EE71D208;
  if (!qword_1EE71D208)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697360, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D208);
  }
  return result;
}

unint64_t sub_1A4495570()
{
  unint64_t result;

  result = qword_1EE71D210;
  if (!qword_1EE71D210)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697418, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D210);
  }
  return result;
}

unint64_t sub_1A44955B8()
{
  unint64_t result;

  result = qword_1EE71D218;
  if (!qword_1EE71D218)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46974D0, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D218);
  }
  return result;
}

unint64_t sub_1A4495600()
{
  unint64_t result;

  result = qword_1EE71D220;
  if (!qword_1EE71D220)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697588, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D220);
  }
  return result;
}

unint64_t sub_1A4495648()
{
  unint64_t result;

  result = qword_1EE71D228;
  if (!qword_1EE71D228)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697640, &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D228);
  }
  return result;
}

unint64_t sub_1A4495690()
{
  unint64_t result;

  result = qword_1EE71D230;
  if (!qword_1EE71D230)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46976F8, &type metadata for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D230);
  }
  return result;
}

unint64_t sub_1A44956D8()
{
  unint64_t result;

  result = qword_1ED241618;
  if (!qword_1ED241618)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697668, &type metadata for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241618);
  }
  return result;
}

unint64_t sub_1A4495720()
{
  unint64_t result;

  result = qword_1ED241610;
  if (!qword_1ED241610)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697690, &type metadata for REMRemindersInCalendarDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241610);
  }
  return result;
}

unint64_t sub_1A4495768()
{
  unint64_t result;

  result = qword_1ED241600;
  if (!qword_1ED241600)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46975B0, &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241600);
  }
  return result;
}

unint64_t sub_1A44957B0()
{
  unint64_t result;

  result = qword_1ED2415F8;
  if (!qword_1ED2415F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46975D8, &type metadata for REMRemindersInCalendarDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415F8);
  }
  return result;
}

unint64_t sub_1A44957F8()
{
  unint64_t result;

  result = qword_1ED2415D0;
  if (!qword_1ED2415D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697440, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415D0);
  }
  return result;
}

unint64_t sub_1A4495840()
{
  unint64_t result;

  result = qword_1ED2415C8;
  if (!qword_1ED2415C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697468, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.ReloadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415C8);
  }
  return result;
}

unint64_t sub_1A4495888()
{
  unint64_t result;

  result = qword_1ED2415E8;
  if (!qword_1ED2415E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697388, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415E8);
  }
  return result;
}

unint64_t sub_1A44958D0()
{
  unint64_t result;

  result = qword_1ED2415E0;
  if (!qword_1ED2415E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46973B0, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415E0);
  }
  return result;
}

unint64_t sub_1A4495918()
{
  unint64_t result;

  result = qword_1ED2415C0;
  if (!qword_1ED2415C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46974F8, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415C0);
  }
  return result;
}

unint64_t sub_1A4495960()
{
  unint64_t result;

  result = qword_1ED2415B8;
  if (!qword_1ED2415B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697520, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415B8);
  }
  return result;
}

unint64_t sub_1A44959A8()
{
  unint64_t result;

  result = qword_1ED2415A8;
  if (!qword_1ED2415A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46972D0, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415A8);
  }
  return result;
}

unint64_t sub_1A44959F0()
{
  unint64_t result;

  result = qword_1ED2415A0;
  if (!qword_1ED2415A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46972F8, &type metadata for REMRemindersInCalendarDataView.RemindersInCalendarResult.RemindersResult.IncrementalResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2415A0);
  }
  return result;
}

unint64_t sub_1A4495A38()
{
  unint64_t result;

  result = qword_1ED23FB08;
  if (!qword_1ED23FB08)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697218, &type metadata for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23FB08);
  }
  return result;
}

unint64_t sub_1A4495A80()
{
  unint64_t result;

  result = qword_1ED23FB00;
  if (!qword_1ED23FB00)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697240, &type metadata for REMRemindersInCalendarDataView.FetchResultToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23FB00);
  }
  return result;
}

uint64_t sub_1A4495AC4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001A46BD910 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6F74 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A4495BA8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A46BD930 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A46BD950 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C64657461647075 && a2 == 0xEE00734449747369)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A4495D14(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64616F6C6572 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656D6572636E69 && a2 == 0xEB000000006C6174)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A4495E14(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A46BD930)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A4495E98(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001A46BD970)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1A4495F1C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265646E696D6572 && a2 == 0xEF746C7573655273;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46BD910)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1A449602C()
{
  unint64_t result;

  result = qword_1EE71D238;
  if (!qword_1EE71D238)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Parameters, &type metadata for REMGroceryDataView.SecondaryGroceryLocaleInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D238);
  }
  return result;
}

void sub_1A4496070()
{
  sub_1A44983E0();
}

uint64_t sub_1A4496084(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A44960C4()
{
  unint64_t result;

  result = qword_1EE71D2A8;
  if (!qword_1EE71D2A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodaySectionOrderingInvocation.Parameters, &type metadata for REMRemindersListDataView.TodaySectionOrderingInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D2A8);
  }
  return result;
}

unint64_t sub_1A4496108()
{
  unint64_t result;

  result = qword_1EE71D2B8;
  if (!qword_1EE71D2B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodaySectionOrderingModel, &type metadata for REMRemindersListDataView.TodaySectionOrderingModel);
    atomic_store(result, (unint64_t *)&qword_1EE71D2B8);
  }
  return result;
}

unint64_t sub_1A449614C()
{
  unint64_t result;

  result = qword_1EE71D2F0;
  if (!qword_1EE71D2F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.DEBUG_PhantomRemindersInvocation.Parameters, &type metadata for REMRemindersListDataView.DEBUG_PhantomRemindersInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D2F0);
  }
  return result;
}

unint64_t sub_1A4496190()
{
  unint64_t result;

  result = qword_1EE71D300;
  if (!qword_1EE71D300)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.DEBUG_AssignedCountInvocation.Parameters, &type metadata for REMRemindersListDataView.DEBUG_AssignedCountInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D300);
  }
  return result;
}

unint64_t sub_1A44961D4()
{
  unint64_t result;

  result = qword_1EE71D320;
  if (!qword_1EE71D320)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodayNotificationInvocation.Parameters, &type metadata for REMRemindersListDataView.TodayNotificationInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D320);
  }
  return result;
}

uint64_t sub_1A4496218(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 80);
  v3 = *(id *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A44962FC(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A44962FC(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A4496328(uint64_t a1)
{
  void *v2;
  void *v4;

  v2 = *(void **)(a1 + 72);
  v4 = *(void **)(a1 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A4496404(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1A4496404(void *result)
{
  if (result)
  {

    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A4496430()
{
  unint64_t result;

  result = qword_1EE71D3B0;
  if (!qword_1EE71D3B0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.GroupInvocation.Result, &type metadata for REMRemindersListDataView.GroupInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D3B0);
  }
  return result;
}

unint64_t sub_1A4496474()
{
  unint64_t result;

  result = qword_1EE71D3B8;
  if (!qword_1EE71D3B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.PublicTemplateInvocation.Parameters, &type metadata for REMRemindersListDataView.PublicTemplateInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D3B8);
  }
  return result;
}

unint64_t sub_1A44964B8()
{
  unint64_t result;

  result = qword_1ED241538;
  if (!qword_1ED241538)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListInvocation.Result, &type metadata for REMRemindersListDataView.ListInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1ED241538);
  }
  return result;
}

unint64_t sub_1A44964FC()
{
  unint64_t result;

  result = qword_1EE71D3C8;
  if (!qword_1EE71D3C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D3C8);
  }
  return result;
}

unint64_t sub_1A4496540()
{
  unint64_t result;

  result = qword_1EE71D3D8;
  if (!qword_1EE71D3D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Result, &type metadata for REMSuggestedAttributesFeatureExtractor.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D3D8);
  }
  return result;
}

unint64_t sub_1A4496584()
{
  unint64_t result;

  result = qword_1EE71D3E0;
  if (!qword_1EE71D3E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters, &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D3E0);
  }
  return result;
}

unint64_t sub_1A44965C8()
{
  unint64_t result;

  result = qword_1EE71D3F0;
  if (!qword_1EE71D3F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle);
    atomic_store(result, (unint64_t *)&qword_1EE71D3F0);
  }
  return result;
}

unint64_t sub_1A449660C()
{
  unint64_t result;

  result = qword_1EE71D400;
  if (!qword_1EE71D400)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result, &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D400);
  }
  return result;
}

unint64_t sub_1A4496650()
{
  unint64_t result;

  result = qword_1EE71D408;
  if (!qword_1EE71D408)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D408);
  }
  return result;
}

unint64_t sub_1A4496694()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D420;
  if (!qword_1EE71D420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D418);
    v2 = sub_1A4436344(&qword_1EE71D428, (uint64_t (*)(uint64_t))type metadata accessor for REMHashtagLabelDetailed_Codable, (uint64_t)&protocol conformance descriptor for REMHashtagLabelDetailed_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D420);
  }
  return result;
}

unint64_t sub_1A4496710()
{
  unint64_t result;

  result = qword_1ED23E580;
  if (!qword_1ED23E580)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1ED23E580);
  }
  return result;
}

unint64_t sub_1A4496754()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2427E0;
  if (!qword_1ED2427E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243C90);
    v2 = sub_1A4436344(&qword_1ED2427B0, (uint64_t (*)(uint64_t))type metadata accessor for REMHashtagLabel_Codable, (uint64_t)&protocol conformance descriptor for REMHashtagLabel_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2427E0);
  }
  return result;
}

unint64_t sub_1A44967D0()
{
  unint64_t result;

  result = qword_1EE71D430;
  if (!qword_1EE71D430)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters, &type metadata for REMSuggestedAttributesTrainer.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D430);
  }
  return result;
}

unint64_t sub_1A4496814()
{
  unint64_t result;

  result = qword_1EE71D440;
  if (!qword_1EE71D440)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result, &type metadata for REMSuggestedAttributesTrainer.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D440);
  }
  return result;
}

uint64_t sub_1A4496858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A449694C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if ((a8 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A4496988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if ((a59 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4496C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if ((a10 & 1) == 0)
    return sub_1A4496C94(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4496C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4496CF0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v16;
  char v17;
  char v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v41 = *(_QWORD *)(a1 + 176);
  v40 = *(_QWORD *)(a1 + 184);
  v39 = *(_QWORD *)(a1 + 192);
  v38 = *(_QWORD *)(a1 + 200);
  v37 = *(_QWORD *)(a1 + 208);
  v36 = *(_QWORD *)(a1 + 216);
  v35 = *(_QWORD *)(a1 + 224);
  v34 = *(unsigned __int8 *)(a1 + 232);
  v62 = *(_QWORD *)(a1 + 248);
  v63 = *(_QWORD *)(a1 + 240);
  v60 = *(_QWORD *)(a1 + 264);
  v61 = *(_QWORD *)(a1 + 256);
  v58 = *(_QWORD *)(a1 + 280);
  v59 = *(_QWORD *)(a1 + 272);
  v55 = *(_OWORD *)(a1 + 320);
  v56 = *(_OWORD *)(a1 + 304);
  v53 = *(_OWORD *)(a1 + 352);
  v54 = *(_OWORD *)(a1 + 336);
  v51 = *(_OWORD *)(a1 + 384);
  v52 = *(_OWORD *)(a1 + 368);
  v49 = *(_OWORD *)(a1 + 416);
  v50 = *(_OWORD *)(a1 + 400);
  v47 = *(_OWORD *)(a1 + 448);
  v48 = *(_OWORD *)(a1 + 432);
  v46 = *(_OWORD *)(a1 + 464);
  v33 = *(_OWORD *)(a1 + 480);
  v29 = *(_OWORD *)(a1 + 512);
  v30 = *(_OWORD *)(a1 + 496);
  v27 = *(_OWORD *)(a1 + 544);
  v28 = *(_OWORD *)(a1 + 528);
  v25 = *(_OWORD *)(a1 + 576);
  v26 = *(_OWORD *)(a1 + 560);
  v23 = *(_OWORD *)(a1 + 608);
  v24 = *(_OWORD *)(a1 + 592);
  v21 = *(_OWORD *)(a1 + 640);
  v22 = *(_OWORD *)(a1 + 624);
  v19 = *(_OWORD *)(a1 + 672);
  v20 = *(_OWORD *)(a1 + 656);
  v31 = *(_BYTE *)(a1 + 777);
  v7 = *(_QWORD *)(a1 + 288);
  v6 = *(_QWORD *)(a1 + 296);
  v8 = *(_QWORD *)(a1 + 688);
  v9 = *(_QWORD *)(a1 + 696);
  v10 = *(_BYTE *)(a1 + 704);
  v11 = *(_QWORD *)(a1 + 712);
  v12 = *(_QWORD *)(a1 + 720);
  v13 = *(_QWORD *)(a1 + 728);
  v32 = *(_QWORD *)(a1 + 736);
  v42 = *(_QWORD *)(a1 + 744);
  v43 = *(_QWORD *)(a1 + 752);
  v44 = *(_QWORD *)(a1 + 760);
  v45 = *(_QWORD *)(a1 + 768);
  v14 = *(_BYTE *)(a1 + 776);
  v17 = *(_BYTE *)(a1 + 168);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    v17);
  a3(v41, v40, v39, v38, v37, v36, v35, v34);
  v18 = v10;
  a4(v63, v62, v61, v60, v59, v58, v7, v6, v56, *((_QWORD *)&v56 + 1), v55, *((_QWORD *)&v55 + 1), v54, *((_QWORD *)&v54 + 1), v53, *((_QWORD *)&v53 + 1), v52, *((_QWORD *)&v52 + 1), v51,
    *((_QWORD *)&v51 + 1),
    v50,
    *((_QWORD *)&v50 + 1),
    v49,
    *((_QWORD *)&v49 + 1),
    v48,
    *((_QWORD *)&v48 + 1),
    v47,
    *((_QWORD *)&v47 + 1),
    v46,
    *((_QWORD *)&v46 + 1),
    v33,
    *((_QWORD *)&v33 + 1),
    v30,
    *((_QWORD *)&v30 + 1),
    v29,
    *((_QWORD *)&v29 + 1),
    v28,
    *((_QWORD *)&v28 + 1),
    v27,
    *((_QWORD *)&v27 + 1),
    v26,
    *((_QWORD *)&v26 + 1),
    v25,
    *((_QWORD *)&v25 + 1),
    v24,
    *((_QWORD *)&v24 + 1),
    v23,
    *((_QWORD *)&v23 + 1),
    v22,
    *((_QWORD *)&v22 + 1),
    v21,
    *((_QWORD *)&v21 + 1),
    v20,
    *((_QWORD *)&v20 + 1),
    v19,
    *((_QWORD *)&v19 + 1),
    v8,
    v9,
    v18);
  BYTE1(v16) = v31;
  LOBYTE(v16) = v14;
  a5(v11, v12, v13, v32, v42, v43, v44, v45, v16);
  return a1;
}

uint64_t sub_1A4496FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  if ((a22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44970E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t result;

  if ((a8 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1A449711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  if ((a59 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44973CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, char a10)
{
  if ((a10 & 1) == 0)
    return sub_1A4497428(a1, a2, a3, a4, a5, a6, a7, a8, a9 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4497428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  if ((a9 & 1) == 0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A4497484()
{
  unint64_t result;

  result = qword_1EE71D448;
  if (!qword_1EE71D448)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters, &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D448);
  }
  return result;
}

unint64_t sub_1A44974C8()
{
  unint64_t result;

  result = qword_1EE71D458;
  if (!qword_1EE71D458)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderDetailDataView.CheckUpdateInvocation.Parameters, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D458);
  }
  return result;
}

unint64_t sub_1A449750C()
{
  unint64_t result;

  result = qword_1EE71D468;
  if (!qword_1EE71D468)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderDetailDataView.CheckUpdateInvocation.Result, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D468);
  }
  return result;
}

unint64_t sub_1A4497550()
{
  unint64_t result;

  result = qword_1ED23F1D0;
  if (!qword_1ED23F1D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.RecordSuggestionRequest, &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest);
    atomic_store(result, (unint64_t *)&qword_1ED23F1D0);
  }
  return result;
}

unint64_t sub_1A4497594()
{
  unint64_t result;

  result = qword_1ED23F1B8;
  if (!qword_1ED23F1B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.BooleanResponse, &type metadata for REMSuggestedAttributesHarvester.BooleanResponse);
    atomic_store(result, (unint64_t *)&qword_1ED23F1B8);
  }
  return result;
}

unint64_t sub_1A44975D8()
{
  unint64_t result;

  result = qword_1ED23F1E8;
  if (!qword_1ED23F1E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest, &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest);
    atomic_store(result, (unint64_t *)&qword_1ED23F1E8);
  }
  return result;
}

unint64_t sub_1A449761C()
{
  unint64_t result;

  result = qword_1ED2427B8;
  if (!qword_1ED2427B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.FeedbackRequest, &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest);
    atomic_store(result, (unint64_t *)&qword_1ED2427B8);
  }
  return result;
}

unint64_t sub_1A4497660()
{
  unint64_t result;

  result = qword_1ED241F80;
  if (!qword_1ED241F80)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.MentionsExtractionResponse, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse);
    atomic_store(result, (unint64_t *)&qword_1ED241F80);
  }
  return result;
}

uint64_t sub_1A44976A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A44976DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A4497714()
{
  unint64_t result;

  result = qword_1ED241F98;
  if (!qword_1ED241F98)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request, &type metadata for REMSuggestedAttributesHarvester.Request);
    atomic_store(result, (unint64_t *)&qword_1ED241F98);
  }
  return result;
}

unint64_t sub_1A4497758()
{
  unint64_t result;

  result = qword_1ED241FA0;
  if (!qword_1ED241FA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Response, &type metadata for REMSuggestedAttributesHarvester.Response);
    atomic_store(result, (unint64_t *)&qword_1ED241FA0);
  }
  return result;
}

uint64_t sub_1A449779C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(unsigned __int8 *)(a1 + 120);
  v19 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 152);
  v18 = *(_QWORD *)(a1 + 144);
  v15 = *(_QWORD *)(a1 + 168);
  v16 = *(_QWORD *)(a1 + 160);
  v14 = *(_QWORD *)(a1 + 176);
  v13 = *(unsigned __int8 *)(a1 + 184);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  a2(v4, v5, v6, v7, v8, v9, v10, v11);
  a2(v20, v19, v18, v17, v16, v15, v14, v13);
  return a1;
}

unint64_t sub_1A4497884()
{
  unint64_t result;

  result = qword_1EE71D470;
  if (!qword_1EE71D470)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Invocation.Parameters, &type metadata for REMListPickerDataView.Invocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D470);
  }
  return result;
}

unint64_t sub_1A44978C8()
{
  unint64_t result;

  result = qword_1EE71D480;
  if (!qword_1EE71D480)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Invocation.Result, &type metadata for REMListPickerDataView.Invocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D480);
  }
  return result;
}

unint64_t sub_1A449790C()
{
  unint64_t result;

  result = qword_1EE71D488;
  if (!qword_1EE71D488)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TemplateSectionsInvocation.Parameters, &type metadata for REMRemindersListDataView.TemplateSectionsInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D488);
  }
  return result;
}

uint64_t sub_1A4497950(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 56);
  v3 = *(id *)a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A44962FC(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A4497A18(uint64_t a1)
{
  void *v2;
  void *v3;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A4496404(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A4497ADC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.DefaultInvocationResult<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4497B1C(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  v3 = *(void **)(a1 + 48);
  v2 = *(void **)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v3;
  sub_1A44962FC(v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A4497BE0(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 56);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A4496404(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A4497CA8()
{
  unint64_t result;

  result = qword_1ED23E568;
  if (!qword_1ED23E568)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMAccountsListDataView.FetchOptions, &type metadata for REMAccountsListDataView.FetchOptions);
    atomic_store(result, (unint64_t *)&qword_1ED23E568);
  }
  return result;
}

unint64_t sub_1A4497CEC()
{
  unint64_t result;

  result = qword_1ED241CF0;
  if (!qword_1ED241CF0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMAccountsListDataView.Invocation.Result, &type metadata for REMAccountsListDataView.Invocation.Result);
    atomic_store(result, (unint64_t *)&qword_1ED241CF0);
  }
  return result;
}

uint64_t sub_1A4497D30(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A4497DEC(uint64_t a1)
{
  void *v3;

  v3 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1A4497EA4()
{
  unint64_t result;

  result = qword_1EE71D4E0;
  if (!qword_1EE71D4E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.ListType, &type metadata for REMRemindersListBatchDeleteInvocation.ListType);
    atomic_store(result, (unint64_t *)&qword_1EE71D4E0);
  }
  return result;
}

uint64_t sub_1A4497EE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A4497F2C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1A4497F68()
{
  unint64_t result;

  result = qword_1EE71D510;
  if (!qword_1EE71D510)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result, &type metadata for REMRemindersListBatchDeleteInvocation.DeleteInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D510);
  }
  return result;
}

unint64_t sub_1A4497FAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE71D530;
  if (!qword_1EE71D530)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D528);
    v2[0] = sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    v2[1] = sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D530);
  }
  return result;
}

unint64_t sub_1A4498048()
{
  unint64_t result;

  result = qword_1EE71D538;
  if (!qword_1EE71D538)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D538);
  }
  return result;
}

unint64_t sub_1A449808C()
{
  unint64_t result;

  result = qword_1EE71D548;
  if (!qword_1EE71D548)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D548);
  }
  return result;
}

unint64_t sub_1A44980D0()
{
  unint64_t result;

  result = qword_1EE71D560;
  if (!qword_1EE71D560)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.CustomSmartListInvocation.Result, &type metadata for REMRemindersListDataView.CustomSmartListInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D560);
  }
  return result;
}

uint64_t sub_1A4498114(uint64_t a1)
{
  void *v2;
  id v3;
  void *v5;

  v2 = *(void **)(a1 + 88);
  v5 = *(void **)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v2;
  sub_1A44962FC(v5);
  return a1;
}

uint64_t sub_1A44981D4(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 96);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A4496404(v2);
  return a1;
}

unint64_t sub_1A4498298()
{
  unint64_t result;

  result = qword_1EE71D568;
  if (!qword_1EE71D568)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters, &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D568);
  }
  return result;
}

unint64_t sub_1A44982DC()
{
  unint64_t result;

  result = qword_1EE71D578;
  if (!qword_1EE71D578)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSiriSearchDataView.ListsResult_Codable, &type metadata for REMSiriSearchDataView.ListsResult_Codable);
    atomic_store(result, (unint64_t *)&qword_1EE71D578);
  }
  return result;
}

unint64_t sub_1A4498320()
{
  unint64_t result;

  result = qword_1EE71D580;
  if (!qword_1EE71D580)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters, &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D580);
  }
  return result;
}

unint64_t sub_1A4498364()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED243180;
  if (!qword_1ED243180)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243E10);
    v2 = sub_1A4436344(&qword_1ED243178, (uint64_t (*)(uint64_t))type metadata accessor for REMReminder_Codable, (uint64_t)&protocol conformance descriptor for REMReminder_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED243180);
  }
  return result;
}

void sub_1A44983E0()
{
  uint64_t v0;

  sub_1A449411C(*(void ***)(v0 + 16), **(void ***)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t REMManualOrderingListType.init(intValue:)(unsigned __int16 a1)
{
  return sub_1A4498520(a1) & 0x1FFFF;
}

unint64_t REMManualOrderingListType.description.getter(unsigned __int16 a1)
{
  int v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0xD000000000000013;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6D536D6F74737563;
      break;
    case 2:
      result = 0x646567676174;
      break;
    case 3:
      result = 0x64656E6E6970;
      break;
    case 4:
      result = 0x6574616C706D6574;
      break;
    case 5:
      result = 0x6D65526465766173;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_1A4498520(unsigned __int16 a1)
{
  int v1;
  int v2;

  v1 = a1;
  v2 = 0;
  switch(a1)
  {
    case 1u:
      return v1 | (v2 << 16);
    case 2u:
      v2 = 0;
      v1 = 2;
      break;
    case 3u:
      v2 = 0;
      v1 = 3;
      break;
    case 4u:
      v2 = 0;
      v1 = 4;
      break;
    case 5u:
      v2 = 0;
      v1 = 5;
      break;
    default:
      v2 = a1 != 6;
      if (a1 == 6)
        v1 = 6;
      else
        v1 = 0;
      break;
  }
  return v1 | (v2 << 16);
}

void ACAccount.rem_childCalDAVAccountEnabledForReminders.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  unsigned __int8 v9;
  uint64_t v10;
  _OWORD v11[2];

  v1 = objc_msgSend(v0, sel_displayAccount);
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_childAccountsWithAccountTypeIdentifier_, *MEMORY[0x1E0C8F058]);
  if (!v3)
  {

    return;
  }
  sub_1A4498778();
  v4 = sub_1A4690BA0();

  if (!(v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_18:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_18;
LABEL_5:
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x1A859ECE0](0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_21;
    }
    v5 = *(id *)(v4 + 32);
  }
  v6 = v5;
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v6, sel_enabledDataclasses);
  if (!v7)
  {
LABEL_21:
    __break(1u);
    return;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, sel_containsObject_, *MEMORY[0x1E0C8F400]);

  if ((v9 & 1) != 0)
  {
    if (objc_msgSend(v6, sel_accountPropertyForKey_, *MEMORY[0x1E0D84770]))
    {
      sub_1A4691278();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v11, 0, sizeof(v11));
    }
    sub_1A4496084((uint64_t)v11);
  }
  else
  {

  }
}

unint64_t sub_1A4498778()
{
  unint64_t result;

  result = qword_1ED2421C8;
  if (!qword_1ED2421C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2421C8);
  }
  return result;
}

uint64_t sub_1A44987B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71D590);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71D590);
  if (qword_1ED23E620 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMSiriSearchDataView.ListsResult.lists.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSiriSearchDataView.ListsResult.smartLists.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMSiriSearchDataView::ListsResult __swiftcall REMSiriSearchDataView.ListsResult.init(lists:smartLists:)(Swift::OpaquePointer lists, Swift::OpaquePointer smartLists)
{
  Swift::OpaquePointer *v2;
  ReminderKitInternal::REMSiriSearchDataView::ListsResult result;

  v2->_rawValue = lists._rawValue;
  v2[1]._rawValue = smartLists._rawValue;
  result.smartLists = smartLists;
  result.lists = lists;
  return result;
}

uint64_t sub_1A449885C()
{
  _BYTE *v0;

  if (*v0)
    return 0x73694C7472616D73;
  else
    return 0x737473696CLL;
}

uint64_t sub_1A4498898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A449DA44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A44988BC()
{
  sub_1A4498A70();
  return sub_1A4691DB8();
}

uint64_t sub_1A44988E4()
{
  sub_1A4498A70();
  return sub_1A4691DC4();
}

uint64_t REMSiriSearchDataView.ListsResult_Codable.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D5A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4498A70();
  sub_1A4691D40();
  v12 = v8;
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D5B8);
  sub_1A4498AB4();
  sub_1A4691890();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D5C8);
    sub_1A4498B30();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A4498A70()
{
  unint64_t result;

  result = qword_1EE71D5B0;
  if (!qword_1EE71D5B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46981A8, &type metadata for REMSiriSearchDataView.ListsResult_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D5B0);
  }
  return result;
}

unint64_t sub_1A4498AB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D5C0;
  if (!qword_1EE71D5C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D5B8);
    v2 = sub_1A4436344(&qword_1ED243DB8, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D5C0);
  }
  return result;
}

unint64_t sub_1A4498B30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D5D0;
  if (!qword_1EE71D5D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D5C8);
    v2 = sub_1A4436344(&qword_1ED242478, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D5D0);
  }
  return result;
}

uint64_t REMSiriSearchDataView.ListsResult_Codable.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D5D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4498A70();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D5B8);
  v13 = 0;
  sub_1A4498D80();
  sub_1A46917C4();
  v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D5C8);
  v13 = 1;
  sub_1A4498DFC();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A4498D80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D5E0;
  if (!qword_1EE71D5E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D5B8);
    v2 = sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D5E0);
  }
  return result;
}

unint64_t sub_1A4498DFC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D5E8;
  if (!qword_1EE71D5E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D5C8);
    v2 = sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D5E8);
  }
  return result;
}

uint64_t sub_1A4498E78@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSiriSearchDataView.ListsResult_Codable.init(from:)(a1, a2);
}

uint64_t sub_1A4498E8C(_QWORD *a1)
{
  return REMSiriSearchDataView.ListsResult_Codable.encode(to:)(a1);
}

uint64_t static REMSiriSearchDataView.fetchReminders(store:criteria:diffingAgainst:)(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13[2];
  __int128 v14;
  char v15;
  uint64_t v16;
  char v17;

  v4 = v3;
  v14 = a2;
  v15 = 0;
  v16 = 51;
  v17 = 0;
  v7 = objc_allocWithZone((Class)type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation());
  swift_bridgeObjectRetain();
  v8 = objc_msgSend(v7, sel_initWithFetchResultTokenToDiffAgainst_, a3);
  v9 = a1;
  sub_1A4476534((uint64_t)v8, &v14, v13);
  swift_bridgeObjectRelease();

  if (!v4)
  {
    v10 = v13[0];
    v11 = (void *)v13[1];
    if ((unint64_t)v13[0] >> 62)
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
      swift_bridgeObjectRetain();
      v9 = sub_1A4691644();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A4691A64();
      sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
      v9 = v10;
    }
    swift_bridgeObjectRelease();

  }
  return v9;
}

uint64_t type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation()
{
  return objc_opt_self();
}

void static REMSiriSearchDataView.fetchLists(store:criteria:diffingAgainst:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];

  v4 = v3;
  v8 = objc_allocWithZone((Class)type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation());
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v8, sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A4477030((uint64_t)v9, a1, v15);
  swift_bridgeObjectRelease();

  if (!v4)
  {
    v10 = v15[0];
    v11 = v15[1];
    v12 = (void *)v15[2];
    if ((unint64_t)v15[0] >> 62)
    {
      sub_1A444AA40(0, &qword_1EE71D5F0);
      swift_bridgeObjectRetain();
      v13 = sub_1A4691644();
      swift_bridgeObjectRelease();
      if (!(v11 >> 62))
        goto LABEL_4;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A4691A64();
      sub_1A444AA40(0, &qword_1EE71D5F0);
      v13 = v10;
      if (!(v11 >> 62))
      {
LABEL_4:
        swift_bridgeObjectRetain();
        sub_1A4691A64();
        sub_1A444AA40(0, &qword_1EE71D5F8);
        v14 = v11;
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        *a3 = v13;
        a3[1] = v14;
        return;
      }
    }
    sub_1A444AA40(0, &qword_1EE71D5F8);
    swift_bridgeObjectRetain();
    v14 = sub_1A4691644();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
}

id REMSiriSearchDataView.ListsByCriteriaInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation()
{
  return objc_opt_self();
}

uint64_t static REMSiriSearchDataView.fetchReminders(store:inCustomSmartList:diffingAgainst:)(uint64_t a1, void *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  os_log_type_t v30;
  NSObject *v31;
  void *v32;
  uint64_t v34;
  NSObject *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  _OWORD v46[8];
  uint64_t v47;
  _OWORD v48[2];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v6 = (int *)type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  v9 = a2;
  v10 = REMSmartList_Codable.init(_:)(v9);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v8[v6[8]] = 51;
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v8 = v10;
  v8[8] = 0x80;
  v8[v6[7]] = 0;
  v8[v6[9]] = 2;
  v8[v6[10]] = 0;
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a3);
  v12 = a1;
  v13 = v45;
  sub_1A4477B08((unint64_t)v11, (uint64_t)v48);
  if (v13)
  {

    sub_1A449C590((uint64_t)v8);
  }
  else
  {
    v41 = 0;

    v46[6] = v53;
    v46[7] = v54;
    v47 = v55;
    v46[0] = v48[0];
    v46[1] = v48[1];
    v46[2] = v49;
    v46[3] = v50;
    v46[4] = v51;
    v46[5] = v52;
    v14 = v49;
    v15 = (void *)*((_QWORD *)&v52 + 1);
    v16 = v53;
    v17 = v54;
    v43 = *(_QWORD *)&v48[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40 = *((_QWORD *)&v14 + 1);
    swift_bridgeObjectRetain();
    v39 = v15;
    v44 = *((_QWORD *)&v17 + 1);
    v45 = (void *)v16;
    sub_1A44962FC((void *)v16);
    v18 = qword_1EE71C000;
    swift_bridgeObjectRetain();
    if (v18 != -1)
      swift_once();
    v19 = sub_1A4690318();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE71D590);
    v20 = v9;
    swift_bridgeObjectRetain_n();
    v21 = v20;
    v22 = sub_1A469030C();
    v23 = sub_1A4691008();
    v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
    v42 = (unint64_t)v14 >> 62;
    if (v24)
    {
      v35 = *((_QWORD *)&v17 + 1);
      v36 = v23;
      v37 = v17;
      v38 = *((_QWORD *)&v16 + 1);
      v25 = swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412546;
      v27 = objc_msgSend(*((id *)&v14 + 1), sel_objectID);
      v56 = (uint64_t)v27;
      v28 = v26;
      sub_1A46911D0();
      *v26 = v27;

      *(_WORD *)(v25 + 12) = 2048;
      if ((unint64_t)v14 >> 62)
      {
        swift_bridgeObjectRetain();
        v29 = sub_1A46916A4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v30 = v36;
      v31 = v35;
      swift_bridgeObjectRelease();
      v56 = v29;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v31, v30, "SIRISEARCH_DATAVIEW RESULT {name: REMRemindersListDataView_CustomSmartListInvocation, smartList.objectID: %@, prefetchedReminders.count: %ld}", (uint8_t *)v25, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v28, -1, -1);
      MEMORY[0x1A85A0114](v25, -1, -1);

      v32 = v45;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v32 = v45;
    }
    if (v42)
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);
      swift_bridgeObjectRetain();
      v12 = sub_1A4691644();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A4691A64();
      sub_1A444AA40(0, (unint64_t *)&qword_1EE71CF80);

      v12 = v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A4496404(v32);
    sub_1A449C5CC((uint64_t)v46);
    swift_bridgeObjectRelease();
    sub_1A449C590((uint64_t)v8);
  }
  return v12;
}

uint64_t static REMSiriSearchDataView.RemindersByCriteriaInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.criteria.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.fetchOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.fetchLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1A4499754()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x66664F6863746566;
  if (*v0 != 1)
    v1 = 0x6D694C6863746566;
  if (*v0)
    return v1;
  else
    return 0x6169726574697263;
}

uint64_t sub_1A44997BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A449DB38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A44997E0()
{
  sub_1A449C69C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4499808()
{
  sub_1A449C69C();
  return sub_1A4691DC4();
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[4];
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D600);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v13 = v1[1];
  v12 = *((unsigned __int8 *)v1 + 16);
  v11 = v1[3];
  v10[3] = *((unsigned __int8 *)v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449C69C();
  sub_1A4691D40();
  v17 = v8;
  v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D610);
  sub_1A449C6E0();
  sub_1A4691890();
  if (!v2)
  {
    v15 = 1;
    sub_1A469183C();
    v14 = 2;
    sub_1A469183C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v17;
  int v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D628);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449C69C();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D610);
  v21 = 0;
  sub_1A449C75C();
  sub_1A46917C4();
  v9 = v22;
  v20 = 1;
  swift_bridgeObjectRetain();
  v10 = sub_1A4691770();
  v18 = v11;
  v19 = 2;
  v13 = sub_1A4691770();
  v14 = v8;
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v18 & 1;
  *(_QWORD *)(a2 + 24) = v13;
  *(_BYTE *)(a2 + 32) = v16 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4499BAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A4499BC0(_QWORD *a1)
{
  return REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMSiriSearchDataView.ListsByCriteriaInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.criteria.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4499C04()
{
  return 0x6169726574697263;
}

uint64_t sub_1A4499C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6169726574697263 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A4499CB0()
{
  sub_1A449C7D8();
  return sub_1A4691DB8();
}

uint64_t sub_1A4499CD8()
{
  sub_1A449C7D8();
  return sub_1A4691DC4();
}

uint64_t REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D640);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449C7D8();
  sub_1A4691D40();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D610);
  sub_1A449C6E0();
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D650);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449C7D8();
  sub_1A4691D28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D610);
    sub_1A449C75C();
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4499F30@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A4499F44(_QWORD *a1)
{
  return REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.encode(to:)(a1);
}

id _s19ReminderKitInternal21REMSiriSearchDataViewC29RemindersByCriteriaInvocationC29fetchResultTokenToDiffAgainstAESo08REMFetchmN0CSg_tcfc_0(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSiriSearchDataView.ListsByCriteriaInvocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id _s19ReminderKitInternal21REMSiriSearchDataViewC29RemindersByCriteriaInvocationC5coderAESgSo7NSCoderC_tcfc_0(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id _s19ReminderKitInternal21REMSiriSearchDataViewC29RemindersByCriteriaInvocationCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMSiriSearchDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMSiriSearchDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A449A120(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A449A15C + 4 * byte_1A4697970[a1]))(0x657079546D657469, 0xE900000000000073);
}

uint64_t sub_1A449A15C()
{
  return 0x44497463656A626FLL;
}

uint64_t sub_1A449A174()
{
  return 0x49746E756F636361;
}

uint64_t sub_1A449A190()
{
  return 0x44497473696CLL;
}

uint64_t sub_1A449A1A4()
{
  return 0x466C617574786574;
}

uint64_t sub_1A449A1C4()
{
  return 0x4E79616C70736964;
}

uint64_t sub_1A449A1E4()
{
  return 0x656C706D6F437369;
}

uint64_t sub_1A449A204()
{
  return 0x6974656C706D6F63;
}

uint64_t sub_1A449A228()
{
  return 0x7461636F4C736168;
}

uint64_t sub_1A449A248()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A449A260()
{
  return 0x65746144657564;
}

uint64_t sub_1A449A278()
{
  return 0x6144657544736168;
}

uint64_t sub_1A449A294()
{
  return 0x6465696669646F6DLL;
}

uint64_t sub_1A449A2C8()
{
  return 0x7272756365527369;
}

uint64_t sub_1A449A2E8()
{
  return 0x656767616C467369;
}

unint64_t sub_1A449A300()
{
  return 0xD000000000000017;
}

unint64_t sub_1A449A31C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1A449A33C()
{
  return 0x657079547473696CLL;
}

uint64_t sub_1A449A354(char *a1, char *a2)
{
  return sub_1A466BEF8(*a1, *a2);
}

uint64_t sub_1A449A360()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A449A3B8()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A449A3E4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A449A438@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A449DCB0();
  *a1 = result;
  return result;
}

void sub_1A449A464(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aBase_10[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1A449A480()
{
  char *v0;

  return *(_QWORD *)&aBase_10[8 * *v0];
}

uint64_t sub_1A449A498@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A449DCB0();
  *a1 = result;
  return result;
}

void sub_1A449A4BC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A449A4C8()
{
  sub_1A449C81C();
  return sub_1A4691DB8();
}

uint64_t sub_1A449A4F0()
{
  sub_1A449C81C();
  return sub_1A4691DC4();
}

uint64_t sub_1A449A518(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1A449A120(*a1);
  v5 = v4;
  if (v3 == sub_1A449A120(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1A449A5A0()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A449A120(v1);
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A449A600()
{
  unsigned __int8 *v0;

  sub_1A449A120(*v0);
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A449A640()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A449A120(v1);
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A449A69C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A449DD3C();
  *a1 = result;
  return result;
}

uint64_t sub_1A449A6C8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A449A120(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A449A6F0()
{
  sub_1A449DCF8();
  return sub_1A4690B70();
}

uint64_t sub_1A449A74C()
{
  sub_1A449DCF8();
  return sub_1A4690B34();
}

uint64_t REMSearchCriterion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[12];
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v36;

  v31[8] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v4 = MEMORY[0x1E0C80A78](v3);
  v31[11] = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v31[6] = (char *)v31 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v31[3] = (char *)v31 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v31[7] = (char *)v31 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v31[10] = (char *)v31 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v31[5] = (char *)v31 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v31[4] = (char *)v31 - v17;
  MEMORY[0x1E0C80A78](v16);
  v31[9] = (char *)v31 - v18;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D658);
  MEMORY[0x1E0C80A78](v32);
  v19 = type metadata accessor for REMSearchCriterion();
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v31 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v31 - v26;
  v28 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1A449C81C();
  v29 = v33;
  sub_1A4691D28();
  if (!v29)
  {
    v31[0] = v22;
    v31[1] = v25;
    v33 = v19;
    v31[2] = v27;
    v36 = 0;
    sub_1A449C860();
    sub_1A46917C4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

void REMSearchCriterion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v2 = v1;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v4 = MEMORY[0x1E0C80A78](v25);
  v24[4] = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v24[5] = (char *)v24 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v24[2] = (char *)v24 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v24[3] = (char *)v24 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v24[0] = (char *)v24 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v24[1] = (char *)v24 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v16);
  v26 = sub_1A46900FC();
  v28 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v27 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for REMSearchCriterion();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D6B0);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v22 = (char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449C81C();
  v30 = v22;
  sub_1A4691D40();
  sub_1A449CB64(v2, (uint64_t)v20);
  v23 = (char *)&loc_1A449B930 + dword_1A449C51C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A449B940()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  *(_BYTE *)(v1 - 112) = 0;
  *(_BYTE *)(v1 - 65) = 0;
  sub_1A449CBA8();
  v3 = *(_QWORD *)(v1 - 160);
  v4 = *(_QWORD *)(v1 - 152);
  v5 = *(_QWORD *)(v1 - 168);
  sub_1A4691890();
  if (!v5)
  {
    *(_QWORD *)(v1 - 112) = v2;
    *(_BYTE *)(v1 - 65) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D698);
    sub_1A449CAB8(&qword_1EE71D6E8, (uint64_t (*)(void))sub_1A449CDB0, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 176) + 8))(v3, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A449C568@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSearchCriterion.init(from:)(a1, a2);
}

void sub_1A449C57C(_QWORD *a1)
{
  REMSearchCriterion.encode(to:)(a1);
}

uint64_t sub_1A449C590(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A449C5CC(uint64_t a1)
{
  void *v2;
  void *v4;

  v2 = *(void **)(a1 + 96);
  v4 = *(void **)(a1 + 128);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A4496404(v2);

  return a1;
}

unint64_t sub_1A449C69C()
{
  unint64_t result;

  result = qword_1EE71D608;
  if (!qword_1EE71D608)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698158, &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D608);
  }
  return result;
}

unint64_t sub_1A449C6E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D618;
  if (!qword_1EE71D618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D610);
    v2 = sub_1A4436344(&qword_1EE71D620, (uint64_t (*)(uint64_t))type metadata accessor for REMSearchCriterion, (uint64_t)&protocol conformance descriptor for REMSearchCriterion);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D618);
  }
  return result;
}

unint64_t sub_1A449C75C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D630;
  if (!qword_1EE71D630)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D610);
    v2 = sub_1A4436344(&qword_1EE71D638, (uint64_t (*)(uint64_t))type metadata accessor for REMSearchCriterion, (uint64_t)&protocol conformance descriptor for REMSearchCriterion);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D630);
  }
  return result;
}

unint64_t sub_1A449C7D8()
{
  unint64_t result;

  result = qword_1EE71D648;
  if (!qword_1EE71D648)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698108, &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D648);
  }
  return result;
}

unint64_t sub_1A449C81C()
{
  unint64_t result;

  result = qword_1EE71D660;
  if (!qword_1EE71D660)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46980B8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D660);
  }
  return result;
}

unint64_t sub_1A449C860()
{
  unint64_t result;

  result = qword_1EE71D668;
  if (!qword_1EE71D668)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698090, &_s4BaseON);
    atomic_store(result, (unint64_t *)&qword_1EE71D668);
  }
  return result;
}

unint64_t sub_1A449C8A4()
{
  unint64_t result;

  result = qword_1EE71D670;
  if (!qword_1EE71D670)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableListType, &type metadata for REMSearchableListType);
    atomic_store(result, (unint64_t *)&qword_1EE71D670);
  }
  return result;
}

uint64_t sub_1A449C8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMSearchCriterion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A449C92C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A449C96C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A449C9B4()
{
  unint64_t result;

  result = qword_1EE71D678;
  if (!qword_1EE71D678)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStringMatchingStyle, &type metadata for REMStringMatchingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE71D678);
  }
  return result;
}

unint64_t sub_1A449C9F8()
{
  unint64_t result;

  result = qword_1EE71D680;
  if (!qword_1EE71D680)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchCriterion.Inclusion, &type metadata for REMSearchCriterion.Inclusion);
    atomic_store(result, (unint64_t *)&qword_1EE71D680);
  }
  return result;
}

unint64_t sub_1A449CA3C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D690;
  if (!qword_1EE71D690)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D688);
    v2 = sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D690);
  }
  return result;
}

uint64_t sub_1A449CAB8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D698);
    v8 = a2();
    result = MEMORY[0x1A85A0000](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A449CB20()
{
  unint64_t result;

  result = qword_1EE71D6A8;
  if (!qword_1EE71D6A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableItemType, &type metadata for REMSearchableItemType);
    atomic_store(result, (unint64_t *)&qword_1EE71D6A8);
  }
  return result;
}

uint64_t sub_1A449CB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMSearchCriterion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A449CBA8()
{
  unint64_t result;

  result = qword_1EE71D6B8;
  if (!qword_1EE71D6B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698068, &_s4BaseON);
    atomic_store(result, (unint64_t *)&qword_1EE71D6B8);
  }
  return result;
}

unint64_t sub_1A449CBEC()
{
  unint64_t result;

  result = qword_1EE71D6C0;
  if (!qword_1EE71D6C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableListType, &type metadata for REMSearchableListType);
    atomic_store(result, (unint64_t *)&qword_1EE71D6C0);
  }
  return result;
}

unint64_t sub_1A449CC30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D6C8;
  if (!qword_1EE71D6C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243190);
    v2 = sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D6C8);
  }
  return result;
}

unint64_t sub_1A449CCAC()
{
  unint64_t result;

  result = qword_1EE71D6D0;
  if (!qword_1EE71D6D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStringMatchingStyle, &type metadata for REMStringMatchingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE71D6D0);
  }
  return result;
}

unint64_t sub_1A449CCF0()
{
  unint64_t result;

  result = qword_1EE71D6D8;
  if (!qword_1EE71D6D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchCriterion.Inclusion, &type metadata for REMSearchCriterion.Inclusion);
    atomic_store(result, (unint64_t *)&qword_1EE71D6D8);
  }
  return result;
}

unint64_t sub_1A449CD34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE71D6E0;
  if (!qword_1EE71D6E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D688);
    v2 = sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE71D6E0);
  }
  return result;
}

unint64_t sub_1A449CDB0()
{
  unint64_t result;

  result = qword_1EE71D6F0;
  if (!qword_1EE71D6F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableItemType, &type metadata for REMSearchableItemType);
    atomic_store(result, (unint64_t *)&qword_1EE71D6F0);
  }
  return result;
}

unint64_t sub_1A449CDF8()
{
  unint64_t result;

  result = qword_1EE71D6F8;
  if (!qword_1EE71D6F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters, &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D6F8);
  }
  return result;
}

unint64_t sub_1A449CE48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED242588;
  if (!qword_1ED242588)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243E10);
    v2 = sub_1A4436344(&qword_1ED242450, (uint64_t (*)(uint64_t))type metadata accessor for REMReminder_Codable, (uint64_t)&protocol conformance descriptor for REMReminder_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED242588);
  }
  return result;
}

unint64_t sub_1A449CEC8()
{
  unint64_t result;

  result = qword_1EE71D740;
  if (!qword_1EE71D740)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters, &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D740);
  }
  return result;
}

unint64_t sub_1A449CF18()
{
  unint64_t result;

  result = qword_1EE71D748;
  if (!qword_1EE71D748)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSiriSearchDataView.ListsResult_Codable, &type metadata for REMSiriSearchDataView.ListsResult_Codable);
    atomic_store(result, (unint64_t *)&qword_1EE71D748);
  }
  return result;
}

uint64_t type metadata accessor for REMSiriSearchDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMSiriSearchDataView()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.Model()
{
  return &type metadata for REMSiriSearchDataView.Model;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsResult()
{
  return &type metadata for REMSiriSearchDataView.ListsResult;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsResult_Codable()
{
  return &type metadata for REMSiriSearchDataView.ListsResult_Codable;
}

uint64_t destroy for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters()
{
  return &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters()
{
  return &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters;
}

_QWORD *_s11CodingErrorOwCP(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11CodingErrorOwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s11CodingErrorOwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s11CodingErrorOwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.CodingError()
{
  return &type metadata for REMSearchCriterion.CodingError;
}

uint64_t _s4BaseOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s4BaseOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1A449D31C + 4 * byte_1A46979AF[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1A449D350 + 4 * byte_1A46979AA[v4]))();
}

uint64_t sub_1A449D350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A449D360);
  return result;
}

uint64_t sub_1A449D36C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A449D374);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1A449D378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4BaseOMa()
{
  return &_s4BaseON;
}

uint64_t _s10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A449D3E8 + 4 * byte_1A46979B9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A449D41C + 4 * byte_1A46979B4[v4]))();
}

uint64_t sub_1A449D41C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A449D42CLL);
  return result;
}

uint64_t sub_1A449D438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A449D440);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A449D444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D44C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

uint64_t storeEnumTagSinglePayload for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A449D4A8 + 4 * byte_1A46979BE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A449D4C8 + 4 * byte_1A46979C3[v4]))();
}

_BYTE *sub_1A449D4A8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A449D4C8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A449D4D0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A449D4D8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A449D4E0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A449D4E8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A449D550 + 4 * byte_1A46979CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A449D584 + 4 * byte_1A46979C8[v4]))();
}

uint64_t sub_1A449D584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D58C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A449D594);
  return result;
}

uint64_t sub_1A449D5A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A449D5A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A449D5AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D5B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSiriSearchDataView.ListsResult_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A449D61C + 4 * byte_1A46979D7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A449D650 + 4 * byte_1A46979D2[v4]))();
}

uint64_t sub_1A449D650(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D658(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A449D660);
  return result;
}

uint64_t sub_1A449D66C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A449D674);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A449D678(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449D680(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSiriSearchDataView.ListsResult_Codable.CodingKeys()
{
  return &type metadata for REMSiriSearchDataView.ListsResult_Codable.CodingKeys;
}

unint64_t sub_1A449D6A0()
{
  unint64_t result;

  result = qword_1EE71D878;
  if (!qword_1EE71D878)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697D40, &type metadata for REMSiriSearchDataView.ListsResult_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D878);
  }
  return result;
}

unint64_t sub_1A449D6E8()
{
  unint64_t result;

  result = qword_1EE71D880;
  if (!qword_1EE71D880)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697DF8, &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D880);
  }
  return result;
}

unint64_t sub_1A449D730()
{
  unint64_t result;

  result = qword_1EE71D888;
  if (!qword_1EE71D888)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697EB0, &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D888);
  }
  return result;
}

unint64_t sub_1A449D778()
{
  unint64_t result;

  result = qword_1EE71D890;
  if (!qword_1EE71D890)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697FA0, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D890);
  }
  return result;
}

unint64_t sub_1A449D7C0()
{
  unint64_t result;

  result = qword_1EE71D898;
  if (!qword_1EE71D898)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698040, &_s4BaseON);
    atomic_store(result, (unint64_t *)&qword_1EE71D898);
  }
  return result;
}

unint64_t sub_1A449D808()
{
  unint64_t result;

  result = qword_1EE71D8A0;
  if (!qword_1EE71D8A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697ED8, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D8A0);
  }
  return result;
}

unint64_t sub_1A449D850()
{
  unint64_t result;

  result = qword_1EE71D8A8;
  if (!qword_1EE71D8A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697F00, &_s10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D8A8);
  }
  return result;
}

unint64_t sub_1A449D898()
{
  unint64_t result;

  result = qword_1EE71D8B0;
  if (!qword_1EE71D8B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697E20, &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D8B0);
  }
  return result;
}

unint64_t sub_1A449D8E0()
{
  unint64_t result;

  result = qword_1EE71D8B8;
  if (!qword_1EE71D8B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697E48, &type metadata for REMSiriSearchDataView.ListsByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D8B8);
  }
  return result;
}

unint64_t sub_1A449D928()
{
  unint64_t result;

  result = qword_1EE71D8C0;
  if (!qword_1EE71D8C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697D68, &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D8C0);
  }
  return result;
}

unint64_t sub_1A449D970()
{
  unint64_t result;

  result = qword_1EE71D8C8;
  if (!qword_1EE71D8C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697D90, &type metadata for REMSiriSearchDataView.RemindersByCriteriaInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D8C8);
  }
  return result;
}

unint64_t sub_1A449D9B8()
{
  unint64_t result;

  result = qword_1EE71D8D0;
  if (!qword_1EE71D8D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697CB0, &type metadata for REMSiriSearchDataView.ListsResult_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D8D0);
  }
  return result;
}

unint64_t sub_1A449DA00()
{
  unint64_t result;

  result = qword_1EE71D8D8;
  if (!qword_1EE71D8D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697CD8, &type metadata for REMSiriSearchDataView.ListsResult_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D8D8);
  }
  return result;
}

uint64_t sub_1A449DA44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737473696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73694C7472616D73 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A449DB38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6169726574697263 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x66664F6863746566 && a2 == 0xEB00000000746573 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D694C6863746566 && a2 == 0xEA00000000007469)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A449DCB0()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A449DCF8()
{
  unint64_t result;

  result = qword_1EE71D8E0;
  if (!qword_1EE71D8E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4697FC8, &_s4BaseON);
    atomic_store(result, (unint64_t *)&qword_1EE71D8E0);
  }
  return result;
}

uint64_t sub_1A449DD3C()
{
  unint64_t v0;

  v0 = sub_1A4691BA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13)
    return 19;
  else
    return v0;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.remObjectID.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  void *ObjCClassFromMetadata;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v22 - v6;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  if (!*v0)
  {
    sub_1A46900C0();
    v15 = sub_1A46900FC();
    v16 = *(_QWORD *)(v15 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15);
    if ((_DWORD)result != 1)
    {
      sub_1A449DFFC();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v14 = (void *)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
      goto LABEL_7;
    }
    goto LABEL_12;
  }
  if (*v0 == 1)
  {
    sub_1A46900C0();
    v10 = sub_1A46900FC();
    v11 = *(_QWORD *)(v10 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10);
    if ((_DWORD)result != 1)
    {
      sub_1A449DFFC();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v14 = (void *)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
LABEL_7:
      v17 = objc_msgSend(ObjCClassFromMetadata, sel_objectIDWithUUID_, v14);
LABEL_10:
      v21 = v17;

      return (uint64_t)v21;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1A46900C0();
  v18 = sub_1A46900FC();
  v19 = *(_QWORD *)(v18 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v4, 1, v18);
  if ((_DWORD)result != 1)
  {
    sub_1A449DFFC();
    v20 = (void *)swift_getObjCClassFromMetadata();
    v14 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v18);
    v17 = objc_msgSend(v20, sel_objectIDWithUUID_, v14);
    goto LABEL_10;
  }
LABEL_13:
  __break(1u);
  return result;
}

unint64_t sub_1A449DFFC()
{
  unint64_t result;

  result = qword_1ED23EC60;
  if (!qword_1ED23EC60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23EC60);
  }
  return result;
}

BOOL static REMSmartListSection.PredefinedSectionType.Today.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t sub_1A449E074()
{
  return 0;
}

uint64_t sub_1A449E080@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A449E0AC()
{
  sub_1A449E5BC();
  return sub_1A4691DB8();
}

uint64_t sub_1A449E0D4()
{
  sub_1A449E5BC();
  return sub_1A4691DC4();
}

uint64_t sub_1A449E0FC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6C417961646F74;
  if (*v0 != 1)
    v1 = 0x6E6F4E7961646F74;
  if (*v0)
    return v1;
  else
    return 0x6F5465726F666562;
}

uint64_t sub_1A449E16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A449EF04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A449E190()
{
  sub_1A449E4F0();
  return sub_1A4691DB8();
}

uint64_t sub_1A449E1B8()
{
  sub_1A449E4F0();
  return sub_1A4691DC4();
}

uint64_t sub_1A449E1E0()
{
  sub_1A449E578();
  return sub_1A4691DB8();
}

uint64_t sub_1A449E208()
{
  sub_1A449E578();
  return sub_1A4691DC4();
}

uint64_t sub_1A449E230()
{
  sub_1A449E534();
  return sub_1A4691DB8();
}

uint64_t sub_1A449E258()
{
  sub_1A449E534();
  return sub_1A4691DC4();
}

void *static REMSmartListSection.PredefinedSectionType.Today.allCases.getter()
{
  return &unk_1E4C0F888;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D8E8);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D8F0);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D8F8);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D900);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449E4F0();
  sub_1A4691D40();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1A449E578();
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1A449E534();
      v16 = v21;
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1A449E5BC();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_1A449E4F0()
{
  unint64_t result;

  result = qword_1EE71D908;
  if (!qword_1EE71D908)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698654, &_s21PredefinedSectionTypeO5TodayO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D908);
  }
  return result;
}

unint64_t sub_1A449E534()
{
  unint64_t result;

  result = qword_1EE71D910;
  if (!qword_1EE71D910)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698604, &_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D910);
  }
  return result;
}

unint64_t sub_1A449E578()
{
  unint64_t result;

  result = qword_1EE71D918;
  if (!qword_1EE71D918)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46985B4, &_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D918);
  }
  return result;
}

unint64_t sub_1A449E5BC()
{
  unint64_t result;

  result = qword_1EE71D920;
  if (!qword_1EE71D920)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698564, &_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D920);
  }
  return result;
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t REMSmartListSection.PredefinedSectionType.Today.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D928);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D930);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D938);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D940);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A449E4F0();
  v13 = v41;
  sub_1A4691D28();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1A46917DC();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1A46914B8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v25 = &type metadata for REMSmartListSection.PredefinedSectionType.Today;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1A449E578();
      v20 = v9;
      sub_1A4691734();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1A449E534();
      v28 = v15;
      sub_1A4691734();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1A449E5BC();
    sub_1A4691734();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

unint64_t sub_1A449EA8C()
{
  unint64_t result;

  result = qword_1EE71D948;
  if (!qword_1EE71D948)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSmartListSection.PredefinedSectionType.Today, &type metadata for REMSmartListSection.PredefinedSectionType.Today);
    atomic_store(result, (unint64_t *)&qword_1EE71D948);
  }
  return result;
}

uint64_t sub_1A449EAD0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMSmartListSection.PredefinedSectionType.Today.init(from:)(a1, a2);
}

uint64_t sub_1A449EAE4(_QWORD *a1)
{
  return REMSmartListSection.PredefinedSectionType.Today.encode(to:)(a1);
}

unint64_t sub_1A449EAFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71D950;
  if (!qword_1EE71D950)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D958);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71D950);
  }
  return result;
}

void sub_1A449EB48(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0F8B0;
}

ValueMetadata *type metadata accessor for REMSmartListSection.PredefinedSectionType()
{
  return &type metadata for REMSmartListSection.PredefinedSectionType;
}

ValueMetadata *type metadata accessor for REMSmartListSection.PredefinedSectionType.Today()
{
  return &type metadata for REMSmartListSection.PredefinedSectionType.Today;
}

uint64_t _s21PredefinedSectionTypeO5TodayOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A449EBCC + 4 * byte_1A4698225[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A449EC00 + 4 * asc_1A4698220[v4]))();
}

uint64_t sub_1A449EC00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449EC08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A449EC10);
  return result;
}

uint64_t sub_1A449EC1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A449EC24);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A449EC28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A449EC30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO10CodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO10CodingKeysON;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysON;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysON;
}

ValueMetadata *_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysOMa()
{
  return &_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysON;
}

unint64_t sub_1A449EC80()
{
  unint64_t result;

  result = qword_1EE71D960;
  if (!qword_1EE71D960)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469853C, &_s21PredefinedSectionTypeO5TodayO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D960);
  }
  return result;
}

unint64_t sub_1A449ECC8()
{
  unint64_t result;

  result = qword_1EE71D968;
  if (!qword_1EE71D968)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469845C, &_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D968);
  }
  return result;
}

unint64_t sub_1A449ED10()
{
  unint64_t result;

  result = qword_1EE71D970;
  if (!qword_1EE71D970)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698484, &_s21PredefinedSectionTypeO5TodayO21BeforeTodayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D970);
  }
  return result;
}

unint64_t sub_1A449ED58()
{
  unint64_t result;

  result = qword_1EE71D978;
  if (!qword_1EE71D978)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469840C, &_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D978);
  }
  return result;
}

unint64_t sub_1A449EDA0()
{
  unint64_t result;

  result = qword_1EE71D980;
  if (!qword_1EE71D980)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698434, &_s21PredefinedSectionTypeO5TodayO21TodayAllDayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D980);
  }
  return result;
}

unint64_t sub_1A449EDE8()
{
  unint64_t result;

  result = qword_1EE71D988;
  if (!qword_1EE71D988)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46983BC, &_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D988);
  }
  return result;
}

unint64_t sub_1A449EE30()
{
  unint64_t result;

  result = qword_1EE71D990;
  if (!qword_1EE71D990)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46983E4, &_s21PredefinedSectionTypeO5TodayO24TodayNonAllDayCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D990);
  }
  return result;
}

unint64_t sub_1A449EE78()
{
  unint64_t result;

  result = qword_1EE71D998;
  if (!qword_1EE71D998)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46984AC, &_s21PredefinedSectionTypeO5TodayO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D998);
  }
  return result;
}

unint64_t sub_1A449EEC0()
{
  unint64_t result;

  result = qword_1EE71D9A0;
  if (!qword_1EE71D9A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46984D4, &_s21PredefinedSectionTypeO5TodayO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE71D9A0);
  }
  return result;
}

uint64_t sub_1A449EF04(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6F5465726F666562 && a2 == 0xEB00000000796164 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C417961646F74 && a2 == 0xEB00000000796144 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F4E7961646F74 && a2 == 0xEE007961446C6C41)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A449F0A4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1A4690E4C();
  if (!v18)
    return sub_1A4690BF4();
  v19 = v18;
  v25 = v15;
  v39 = sub_1A46906CC();
  v32 = sub_1A4691578();
  sub_1A4691530();
  v36 = v17;
  result = sub_1A4690E40();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1A4690EF4();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1A4691560();
      sub_1A4690E7C();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t Diff.patch<A>(from:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int128 *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[8];
  __int128 v13;
  uint64_t v14;

  v14 = 0;
  v13 = *v4;
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = &v14;
  v12[5] = a2;
  v12[6] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = (char *)type metadata accessor for Patch(0, AssociatedTypeWitness, v6, v7);
  v9 = sub_1A443AC04();
  return sub_1A449F0A4((void (*)(char *, char *))sub_1A449F640, (uint64_t)v12, (uint64_t)&type metadata for Diff, v8, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
}

uint64_t sub_1A449F42C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t TupleTypeMetadata3;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)result;
  if (!*(_BYTE *)(result + 16))
  {
    if (!__OFADD__(*a2, 1))
    {
      ++*a2;
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v12 = (uint64_t)a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      *a3 = v4;
      sub_1A45D2598(v12);
      goto LABEL_11;
    }
    goto LABEL_15;
  }
  if (*(_BYTE *)(result + 16) == 1)
  {
    v5 = *a2 - 1;
    if (__OFSUB__(*a2, 1))
    {
      __break(1u);
    }
    else
    {
      *a2 = v5;
      v6 = __OFADD__(v4, v5);
      v7 = v4 + v5;
      if (!v6)
      {
        v6 = __OFADD__(v7, 1);
        v8 = v7 + 1;
        if (!v6)
        {
          *a3 = v8;
          AssociatedTypeWitness = swift_getAssociatedTypeWitness();
LABEL_11:
          type metadata accessor for Patch(0, AssociatedTypeWitness, v9, v10);
          return swift_storeEnumTagMultiPayload();
        }
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (!__OFADD__(v4, *a2))
  {
    v16 = v4 + *a2;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v14 = (uint64_t)a3 + *(int *)(TupleTypeMetadata3 + 64);
    v15 = (uint64_t)a3 + *(int *)(TupleTypeMetadata3 + 48);
    *a3 = v16;
    sub_1A45D2598(v15);
    sub_1A45D2598(v14);
    goto LABEL_11;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1A449F640@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A449F42C(a1, *(uint64_t **)(v2 + 32), a2);
}

uint64_t type metadata accessor for Patch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Patch);
}

uint64_t patch<A>(from:to:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v11;

  Collection<>.diff(_:)(a2, a3, a4, a5, &v11);
  v9 = Diff.patch<A>(from:to:)(a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Patch.debugDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata2;
  uint64_t v14;
  uint64_t TupleTypeMetadata3;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v10 = *(_QWORD *)v7;
      v21 = 10308;
      v22 = 0xE200000000000000;
      v20 = v10;
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      return v21;
    }
    else
    {
      v14 = *(_QWORD *)v7;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      v16 = &v7[*(int *)(TupleTypeMetadata3 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(TupleTypeMetadata3 + 64)], v1);
      v21 = 0;
      v22 = 0xE000000000000000;
      sub_1A4690984();
      v20 = v14;
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      sub_1A4691A10();
      sub_1A4690984();
      v11 = v21;
      v17 = *(void (**)(char *, uint64_t))(v2 + 8);
      v17(v5, v1);
      v17(v16, v1);
    }
  }
  else
  {
    v12 = *(_QWORD *)v7;
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, &v7[*(int *)(TupleTypeMetadata2 + 48)], v1);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_1A4690984();
    v20 = v12;
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691A10();
    sub_1A4690984();
    v11 = v21;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v11;
}

uint64_t sub_1A449F9C4()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  char *v5;
  uint64_t v6;
  char *v7;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v2 = MEMORY[0x1E0DE9D38] + 64;
    swift_getTupleTypeLayout2();
    v5 = &v4;
    v6 = v2;
    swift_getTupleTypeLayout3();
    v7 = &v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1A449FA70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t, uint64_t);

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = ((v7 + 8) & ~v7) + v8;
  if (v9 <= ((v9 + v7) & ~v7) + v8)
    v9 = ((v9 + v6) & ~(unint64_t)v6) + v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = v6 & 0x100000;
  if (v7 > 7 || v11 != 0 || (unint64_t)(v10 + 1) > 0x18)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v15 = *((unsigned __int8 *)a2 + v10);
    if (v15 >= 3)
    {
      if (v10 <= 3)
        v16 = v10;
      else
        v16 = 4;
      __asm { BR              X13 }
    }
    v17 = ~v7;
    if (v15 == 2)
    {
      *a1 = *a2;
      v18 = ((unint64_t)a2 + v7 + 8) & v17;
      v19 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
      v19(((unint64_t)a1 + v7 + 8) & v17, v18, v4);
      v19((v8 + v7 + (((unint64_t)v3 + v7 + 8) & v17)) & v17, (v8 + v7 + v18) & v17, v4);
      *((_BYTE *)v3 + v10) = 2;
    }
    else
    {
      *a1 = *a2;
      if (v15 == 1)
      {
        *((_BYTE *)a1 + v10) = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v7 + 8) & v17, ((unint64_t)a2 + v7 + 8) & v17, v4);
        *((_BYTE *)v3 + v10) = 0;
      }
    }
  }
  return v3;
}

uint64_t sub_1A449FC50(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v4 + 8) & ~v4) + v5;
  if (v6 <= ((v6 + v4) & ~v4) + v5)
    v6 = ((v6 + v4) & ~v4) + v5;
  if (v6 <= 8)
    v6 = 8;
  v7 = *(unsigned __int8 *)(result + v6);
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X14 }
  }
  v9 = ~v4;
  if (v7 == 2)
  {
    v10 = (result + v4 + 8) & v9;
    v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v14(v10, v2);
    v11 = (v5 + v4 + v10) & v9;
    v12 = v2;
    v13 = (uint64_t (*)(uint64_t, uint64_t))v14;
    return v13(v11, v12);
  }
  if (v7 != 1)
  {
    v11 = (result + v4 + 8) & v9;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    v12 = *(_QWORD *)(a2 + 16);
    return v13(v11, v12);
  }
  return result;
}

_QWORD *sub_1A449FDA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  if (v8 <= ((v8 + v6) & ~v6) + v7)
    v8 = ((v8 + v6) & ~v6) + v7;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  v10 = *((unsigned __int8 *)a2 + v9);
  if (v10 >= 3)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X13 }
  }
  v12 = ~v6;
  if (v10 == 2)
  {
    *a1 = *a2;
    v14 = ((unint64_t)a2 + v6 + 8) & v12;
    v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
    v15(((unint64_t)a1 + v6 + 8) & v12, v14, v4);
    v15((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v12)) & v12, (v7 + v6 + v14) & v12, v4);
    v13 = 2;
  }
  else
  {
    *a1 = *a2;
    if (v10 == 1)
    {
      v13 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v6 + 8) & v12, ((unint64_t)a2 + v6 + 8) & v12, v4);
      v13 = 0;
    }
  }
  *((_BYTE *)a1 + v9) = v13;
  return a1;
}

_QWORD *sub_1A449FF44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  unsigned int v16;
  uint64_t v17;
  char v18;
  void (*v19)(unint64_t, unint64_t, uint64_t);

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = ((v7 + 8) & ~v7) + v8;
    if (v9 <= ((v9 + v7) & ~v7) + v8)
      v9 = ((v9 + v7) & ~v7) + v8;
    if (v9 <= 8)
      v10 = 8;
    else
      v10 = v9;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = ~v7;
    if (v11 == 2)
    {
      v14 = ((unint64_t)a1 + v7 + 8) & v13;
      v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v15(v14, *(_QWORD *)(a3 + 16));
      v15((v8 + v7 + v14) & v13, v5);
    }
    else if (v11 != 1)
    {
      (*(void (**)(unint64_t, _QWORD))(v6 + 8))(((unint64_t)a1 + v7 + 8) & v13, *(_QWORD *)(a3 + 16));
    }
    v16 = *((unsigned __int8 *)a2 + v10);
    if (v16 >= 3)
    {
      if (v10 <= 3)
        v17 = v10;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 2)
    {
      *a1 = *a2;
      v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
      v19(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
      v19((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v13)) & v13, (v8 + v7 + (((unint64_t)a2 + v7 + 8) & v13)) & v13, v5);
      v18 = 2;
    }
    else
    {
      *a1 = *a2;
      if (v16 == 1)
      {
        v18 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
        v18 = 0;
      }
    }
    *((_BYTE *)a1 + v10) = v18;
  }
  return a1;
}

_QWORD *sub_1A44A01EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void (*v15)(unint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  if (v8 <= ((v8 + v6) & ~v6) + v7)
    v8 = ((v8 + v6) & ~v6) + v7;
  if (v8 <= 8)
    v9 = 8;
  else
    v9 = v8;
  v10 = *((unsigned __int8 *)a2 + v9);
  if (v10 >= 3)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X13 }
  }
  v12 = ~v6;
  if (v10 == 2)
  {
    *a1 = *a2;
    v14 = ((unint64_t)a2 + v6 + 8) & v12;
    v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
    v15(((unint64_t)a1 + v6 + 8) & v12, v14, v4);
    v15((v7 + v6 + (((unint64_t)a1 + v6 + 8) & v12)) & v12, (v7 + v6 + v14) & v12, v4);
    v13 = 2;
  }
  else
  {
    *a1 = *a2;
    if (v10 == 1)
    {
      v13 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + v6 + 8) & v12, ((unint64_t)a2 + v6 + 8) & v12, v4);
      v13 = 0;
    }
  }
  *((_BYTE *)a1 + v9) = v13;
  return a1;
}

_QWORD *sub_1A44A0388(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  unsigned int v16;
  uint64_t v17;
  char v18;
  void (*v19)(unint64_t, unint64_t, uint64_t);

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned __int8 *)(v6 + 80);
    v8 = *(_QWORD *)(v6 + 64);
    v9 = ((v7 + 8) & ~v7) + v8;
    if (v9 <= ((v9 + v7) & ~v7) + v8)
      v9 = ((v9 + v7) & ~v7) + v8;
    if (v9 <= 8)
      v10 = 8;
    else
      v10 = v9;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3)
    {
      if (v10 <= 3)
        v12 = v10;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = ~v7;
    if (v11 == 2)
    {
      v14 = ((unint64_t)a1 + v7 + 8) & v13;
      v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v15(v14, *(_QWORD *)(a3 + 16));
      v15((v8 + v7 + v14) & v13, v5);
    }
    else if (v11 != 1)
    {
      (*(void (**)(unint64_t, _QWORD))(v6 + 8))(((unint64_t)a1 + v7 + 8) & v13, *(_QWORD *)(a3 + 16));
    }
    v16 = *((unsigned __int8 *)a2 + v10);
    if (v16 >= 3)
    {
      if (v10 <= 3)
        v17 = v10;
      else
        v17 = 4;
      __asm { BR              X12 }
    }
    if (v16 == 2)
    {
      *a1 = *a2;
      v19 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
      v19(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
      v19((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v13)) & v13, (v8 + v7 + (((unint64_t)a2 + v7 + 8) & v13)) & v13, v5);
      v18 = 2;
    }
    else
    {
      *a1 = *a2;
      if (v16 == 1)
      {
        v18 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
        v18 = 0;
      }
    }
    *((_BYTE *)a1 + v10) = v18;
  }
  return a1;
}

uint64_t sub_1A44A0630(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v4 + 8) & ~v4) + v5;
  v7 = ((v6 + v4) & ~v4) + v5;
  if (v6 > v7)
    v7 = v6;
  v8 = 8;
  if (v7 > 8)
    v8 = v7;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_23;
  v9 = v8 + 1;
  v10 = 8 * (v8 + 1);
  if ((v8 + 1) <= 3)
  {
    v13 = ((a2 + ~(-1 << v10) - 253) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v13 < 2)
    {
LABEL_23:
      v15 = *(unsigned __int8 *)(a1 + v8);
      if (v15 >= 3)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_23;
LABEL_16:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return (v14 + 254);
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A44A0718 + 4 * byte_1A46986D8[(v9 - 1)]))();
}

void sub_1A44A0764(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  size_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  v9 = ((v8 + v6) & ~v6) + v7;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v9 = 8;
  v10 = v9 + 1;
  if (a3 < 0xFE)
  {
    v11 = 0u;
  }
  else if (v10 <= 3)
  {
    v13 = ((a3 + ~(-1 << (8 * v10)) - 253) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v11 = 4u;
    }
    else if (v13 >= 0x100)
    {
      v11 = 2;
    }
    else
    {
      v11 = v13 > 1;
    }
  }
  else
  {
    v11 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v12 = a2 - 254;
  if (v10 < 4)
  {
    if ((_DWORD)v9 != -1)
    {
      v14 = v12 & ~(-1 << (8 * v10));
      bzero(a1, v10);
      if ((_DWORD)v10 == 3)
      {
        *a1 = v14;
        *((_BYTE *)a1 + 2) = BYTE2(v14);
      }
      else if ((_DWORD)v10 == 2)
      {
        *a1 = v14;
      }
      else
      {
        *(_BYTE *)a1 = v14;
      }
    }
  }
  else
  {
    bzero(a1, v9 + 1);
    *(_DWORD *)a1 = v12;
  }
  __asm { BR              X10 }
}

uint64_t sub_1A44A0930(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = ((v3 + 8) & ~v3) + v4;
  v6 = ((v5 + v3) & ~v3) + v4;
  if (v5 > v6)
    v6 = v5;
  v7 = 8;
  if (v6 > 8)
    v7 = v6;
  if (*(unsigned __int8 *)(a1 + v7) < 3u)
    return *(unsigned __int8 *)(a1 + v7);
  if (v7 <= 3)
    v8 = v7;
  else
    v8 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1A44A099C + 4 * byte_1A46986E6[v8]))();
}

void sub_1A44A09E4(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = ((v5 + 8) & ~v5) + v6;
  v8 = ((v7 + v5) & ~v5) + v6;
  if (a2 > 2)
  {
    if (v7 > v8)
      v8 = v7;
    if (v8 <= 8)
      v9 = 8;
    else
      v9 = v8;
    v10 = a2 - 3;
    if (v9 < 4)
    {
      v11 = v10 >> (8 * v9);
      v12 = v10 & ~(-1 << (8 * v9));
      a1[v9] = v11 + 3;
      bzero(a1, v9);
      if ((_DWORD)v9 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if ((_DWORD)v9 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
    else
    {
      a1[v9] = 3;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
  else
  {
    if (v7 > v8)
      v8 = v7;
    if (v8 <= 8)
      v8 = 8;
    a1[v8] = a2;
  }
}

void DateComponents.init(testing_parsedFrom:calendar:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void *v42;
  void *v43;
  void *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v58 = a2;
  v59 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  v5 = MEMORY[0x1E0C80A78](v4);
  v50 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v47 - v7;
  v8 = sub_1A46902AC();
  v53 = *(_QWORD *)(v8 - 8);
  v54 = v8;
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1A46902F4();
  v55 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v47 - v16;
  v18 = sub_1A46900B4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v47 - v23;
  v25 = sub_1A468FDE4();
  v56 = *(_QWORD *)(v25 - 8);
  v57 = v25;
  MEMORY[0x1E0C80A78](v25);
  v51 = (char *)&v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a1, v17);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v27(v17, 1, v18) != 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v17, v18);
    v33 = (void *)objc_opt_self();
    v34 = (void *)sub_1A4690030();
    sub_1A46902E8();
    v35 = (id)sub_1A46902D0();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v60);
    v36 = objc_msgSend(v33, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v34, v35, 0);

    v22 = v24;
    v37 = v58;
    v39 = v53;
    v38 = v54;
    v41 = v51;
    v40 = (uint64_t)v52;
LABEL_7:

    sub_1A468FD3C();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    sub_1A444ABF4(v37, v40, &qword_1ED240110);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38) == 1)
    {
      sub_1A445404C(v37, &qword_1ED240110);
      sub_1A445404C(v40, &qword_1ED240110);
    }
    else
    {
      v45 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v49, v40, v38);
      v46 = v50;
      (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v50, v45, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v46, 0, 1, v38);
      sub_1A468FDCC();
      sub_1A445404C(v37, &qword_1ED240110);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v38);
    }
    v30 = v59;
    v32 = v56;
    v31 = v57;
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v59, v41, v57);
    v29 = 0;
    goto LABEL_11;
  }
  v48 = v19;
  v28 = v60;
  sub_1A445404C((uint64_t)v17, &qword_1ED243190);
  Date.init(testing_allDayParsedFrom:)(a1, v15);
  if (v27(v15, 1, v18) == 1)
  {
    sub_1A445404C(v58, &qword_1ED240110);
    sub_1A445404C((uint64_t)v15, &qword_1ED243190);
    v29 = 1;
    v30 = v59;
    v32 = v56;
    v31 = v57;
LABEL_11:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, v29, 1, v31);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v22, v15, v18);
  v42 = (void *)objc_opt_self();
  v43 = (void *)sub_1A4690030();
  sub_1A46902E8();
  v44 = (void *)sub_1A46902D0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v11, v28);
  v35 = objc_msgSend(v42, sel_rem_dateComponentsWithDate_timeZone_isAllDay_, v43, v44, 1);

  if (v35)
  {
    v36 = objc_msgSend(v35, sel_rem_strippingTimeZone);
    v37 = v58;
    v39 = v53;
    v38 = v54;
    v41 = v51;
    v40 = (uint64_t)v52;
    v19 = v48;
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t DateComponents.testing_localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;
  id v42;
  void *v43;
  char *v44;
  char *v45;
  void *v46;
  void *v47;
  unsigned int v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v1 = sub_1A4690210();
  v68 = *(_QWORD *)(v1 - 8);
  v69 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A46900B4();
  v74 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v65 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v65 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  v16 = MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v65 - v18;
  v20 = sub_1A46902F4();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v66 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v67 = (char *)&v65 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v65 - v26;
  v75 = v0;
  sub_1A468FDD8();
  v28 = v21;
  v70 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v29 = v70(v19, 1, v20);
  v73 = v21;
  v30 = v4;
  if (v29 == 1)
  {
    sub_1A46902E8();
    sub_1A445404C((uint64_t)v19, &qword_1ED240118);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v27, v19, v20);
  }
  v31 = v27;
  v32 = (void *)objc_opt_self();
  v33 = (void *)sub_1A468FD30();
  v76 = v31;
  v34 = (void *)sub_1A46902D0();
  v35 = objc_msgSend(v32, sel_rem_dateWithDateComponents_timeZone_, v33, v34);

  if (v35)
  {
    sub_1A4690084();

    v36 = 0;
  }
  else
  {
    v36 = 1;
  }
  v37 = v30;
  v38 = (uint64_t)v14;
  v39 = v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v12, v36, 1, v37);
  sub_1A449C96C((uint64_t)v12, (uint64_t)v14);
  sub_1A444ABF4((uint64_t)v14, (uint64_t)v9, &qword_1ED243190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v9, 1, v37) == 1)
  {
    sub_1A445404C((uint64_t)v9, &qword_1ED243190);
    sub_1A445404C((uint64_t)v14, &qword_1ED243190);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v20);
    return 63;
  }
  else
  {
    v41 = v72;
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v72, v9, v37);
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
    sub_1A469012C();
    v43 = (void *)sub_1A4690150();
    v44 = v3;
    v45 = v41;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v69);
    objc_msgSend(v42, sel_setLocale_, v43);

    v46 = (void *)sub_1A46902D0();
    objc_msgSend(v42, sel_setTimeZone_, v46);

    objc_msgSend(v42, sel_setDateStyle_, 1);
    v47 = (void *)sub_1A468FD30();
    v48 = objc_msgSend(v47, sel_rem_isAllDayDateComponents);

    objc_msgSend(v42, sel_setTimeStyle_, v48 ^ 1);
    v49 = (void *)sub_1A4690030();
    v50 = objc_msgSend(v42, sel_stringFromDate_, v49);

    v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v53 = v52;

    v81 = v51;
    v82 = v53;
    v79 = 11501794;
    v80 = 0xA300000000000000;
    v77 = 32;
    v78 = 0xE100000000000000;
    sub_1A4466118();
    v54 = sub_1A4691224();
    v56 = v55;
    swift_bridgeObjectRelease();
    v81 = v54;
    v82 = v56;
    v57 = (uint64_t)v71;
    sub_1A468FDD8();
    if (v70((char *)v57, 1, v20) == 1)
    {
      sub_1A445404C(v57, &qword_1ED240118);
      sub_1A4690984();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v37);
      sub_1A445404C((uint64_t)v14, &qword_1ED243190);
      (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v20);
    }
    else
    {
      v58 = v73;
      v59 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v73 + 32))(v67, v57, v20);
      v60 = v66;
      sub_1A46902E8();
      sub_1A44A16C0();
      v61 = sub_1A4690864();
      v62 = *(void (**)(char *, uint64_t))(v58 + 8);
      v62(v60, v20);
      if ((v61 & 1) != 0)
      {

      }
      else
      {
        v79 = 10272;
        v80 = 0xE200000000000000;
        sub_1A46902C4();
        sub_1A4690984();
        swift_bridgeObjectRelease();
        sub_1A4690984();
        sub_1A4690984();

        swift_bridgeObjectRelease();
      }
      v63 = v76;
      v64 = v72;
      v62(v59, v20);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v64, v37);
      sub_1A445404C(v38, &qword_1ED243190);
      v62(v63, v20);
    }
    return v81;
  }
}

unint64_t sub_1A44A16C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71D9A8;
  if (!qword_1EE71D9A8)
  {
    v1 = sub_1A46902F4();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB1498], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71D9A8);
  }
  return result;
}

uint64_t DateComponents.nextDate(after:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v45 = a1;
  v46 = a2;
  v44 = sub_1A4690240();
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v38 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A469024C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A4690234();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1A46902AC();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A468FDE4();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v20;
  v21 = *(void (**)(char *, uint64_t))(v20 + 16);
  v43 = v22;
  v21(v19, v2);
  sub_1A468FCD0();
  if ((v23 & 1) == 0)
  {
    sub_1A468FD18();
    if ((v24 & 1) == 0)
    {
      sub_1A468FD00();
      if ((v25 & 1) == 0)
      {
        sub_1A468FCDC();
        sub_1A468FD24();
      }
    }
  }
  v26 = v13;
  sub_1A469027C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CB0F90], v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CB1010], v4);
  v27 = *MEMORY[0x1E0CB0FD8];
  v36 = v9;
  v37 = v8;
  v28 = v4;
  v29 = v42;
  v30 = v38;
  v31 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v38, v27, v44);
  sub_1A4690288();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v28);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v41);
  v32 = sub_1A46900B4();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v16, 1, v32) == 1)
  {
    sub_1A445404C((uint64_t)v16, &qword_1ED243190);
    sub_1A46900A8();
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v43);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v43);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v46, v16, v32);
  }
}

uint64_t DateComponents.fifteenMinuteBin.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t result;
  char v4;
  BOOL v5;

  v0 = sub_1A468FD60();
  if ((v1 & 1) != 0)
    return 0;
  v2 = v0;
  result = sub_1A468FD84();
  if ((v4 & 1) != 0)
    return 0;
  if ((unint64_t)(v2 - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = __OFADD__(result / 15, 4 * v2);
  result = result / 15 + 4 * v2;
  if (v5)
LABEL_8:
    __break(1u);
  return result;
}

uint64_t DateComponents.dayOfWeekWithCurrentCalendar.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1A46902AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A469027C();
  v4 = DateComponents.dayOfWeek(with:)((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t DateComponents.dayOfWeek(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a1;
  v24 = sub_1A4690294();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v23 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A46900B4();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x1E0C80A78](v6);
  v25 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A468FDE4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A46902AC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A468FDA8();
  v18 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v27, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v1, v8);
  if ((v18 & 1) != 0)
  {
    sub_1A4690258();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v5, 1, v29) == 1)
    {
      sub_1A445404C((uint64_t)v5, &qword_1ED243190);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v5, v29);
      v20 = v23;
      v19 = v24;
      (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v23, *MEMORY[0x1E0CB1198], v24);
      v16 = sub_1A46902A0();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v19);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v29);
    }
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v16;
}

uint64_t DateComponents.applying(other:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char v53;
  char v54;
  char *v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  char *v60;
  char v61;
  char v62;
  char v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char v67;
  char *v68;
  char v69;
  char v70;
  char *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char *v85;
  int v87;
  int v88;
  char *v89;
  int v90;
  char *v91;
  int v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;

  v3 = v2;
  v98 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  v6 = MEMORY[0x1E0C80A78](v5);
  v93 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v103 = (char *)&v87 - v8;
  v9 = sub_1A468FDE4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v97 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v96 = (char *)&v87 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v99 = (char *)&v87 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v94 = (char *)&v87 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v101 = (char *)&v87 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v100 = (char *)&v87 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v89 = (char *)&v87 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v91 = (char *)&v87 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v87 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v87 - v30;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  v33 = MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v87 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v87 - v36;
  v102 = a1;
  sub_1A468FDC0();
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v39 = v3;
  v38(v31, v3, v9);
  v40 = sub_1A46902AC();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v35, 1, v40);
  v95 = v37;
  if (v42 == 1)
  {
    sub_1A468FDC0();
    v43 = *(void (**)(char *, uint64_t))(v10 + 8);
    v43(v31, v9);
    sub_1A445404C((uint64_t)v35, &qword_1ED240110);
  }
  else
  {
    v43 = *(void (**)(char *, uint64_t))(v10 + 8);
    v43(v31, v9);
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v37, v35, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v37, 0, 1, v40);
  }
  v44 = (uint64_t)v93;
  sub_1A468FDD8();
  v45 = v39;
  v38(v29, v39, v9);
  v46 = sub_1A46902F4();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v44, 1, v46);
  v49 = v96;
  if (v48 == 1)
  {
    sub_1A468FDD8();
    v43(v29, v9);
    sub_1A445404C(v44, &qword_1ED240118);
  }
  else
  {
    v43(v29, v9);
    v50 = v103;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v103, v44, v46);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v46);
  }
  v51 = v99;
  v52 = sub_1A468FD54();
  v54 = v53;
  v55 = v91;
  v38(v91, v39, v9);
  if ((v54 & 1) != 0)
  {
    v93 = (char *)sub_1A468FD54();
    v92 = v56 & 1;
  }
  else
  {
    v93 = (char *)v52;
    v92 = 0;
  }
  v43(v55, v9);
  v57 = sub_1A468FD6C();
  v59 = v58;
  v60 = v89;
  v38(v89, v39, v9);
  if ((v59 & 1) != 0)
  {
    v91 = (char *)sub_1A468FD6C();
    v90 = v61 & 1;
  }
  else
  {
    v91 = (char *)v57;
    v90 = 0;
  }
  v43(v60, v9);
  v99 = (char *)sub_1A468FD78();
  v63 = v62;
  v64 = v100;
  v38(v100, v39, v9);
  v65 = v49;
  if ((v63 & 1) != 0)
  {
    v66 = sub_1A468FD78();
    v64 = v100;
    v99 = (char *)v66;
    LODWORD(v89) = v67 & 1;
  }
  else
  {
    LODWORD(v89) = 0;
  }
  v68 = v94;
  v43(v64, v9);
  v100 = (char *)sub_1A468FD48();
  v70 = v69;
  v71 = v101;
  v38(v101, v39, v9);
  if ((v70 & 1) != 0)
  {
    v72 = sub_1A468FD48();
    v71 = v101;
    v100 = (char *)v72;
    v88 = v73 & 1;
  }
  else
  {
    v88 = 0;
  }
  v43(v71, v9);
  v74 = sub_1A468FD60();
  v76 = v75;
  v38(v68, v39, v9);
  if ((v76 & 1) != 0)
  {
    v101 = (char *)sub_1A468FD60();
    v87 = v77 & 1;
  }
  else
  {
    v101 = (char *)v74;
    v87 = 0;
  }
  v43(v68, v9);
  sub_1A468FD84();
  v79 = v78;
  v38(v51, v39, v9);
  if ((v79 & 1) != 0)
  {
    sub_1A468FD84();
    LODWORD(v94) = v80 & 1;
  }
  else
  {
    LODWORD(v94) = 0;
  }
  v43(v51, v9);
  sub_1A468FD90();
  v82 = v81;
  v38(v65, v39, v9);
  if ((v82 & 1) != 0)
    sub_1A468FD90();
  v43(v65, v9);
  sub_1A468FCC4();
  v84 = v83;
  v85 = v97;
  v38(v97, v45, v9);
  if ((v84 & 1) != 0)
    sub_1A468FCC4();
  v43(v85, v9);
  return sub_1A468FDB4();
}

uint64_t sub_1A44A24E8(uint64_t a1)
{
  sub_1A4690C78();
  return a1;
}

uint64_t RangeReplaceableCollection.apply(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  char v42;
  uint64_t result;
  char *v44;
  int EnumCaseMultiPayload;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t TupleTypeMetadata3;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t TupleTypeMetadata2;
  char *v89;
  uint64_t AssociatedConformanceWitness;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;

  v93 = a3;
  v7 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v87 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v86 = (char *)&v75 - v11;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v85 = sub_1A4690858();
  v84 = *(_QWORD *)(v85 - 8);
  v12 = MEMORY[0x1E0C80A78](v85);
  v83 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v82 = (char *)&v75 - v15;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v98 = AssociatedTypeWitness;
  v99 = v16;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v75 - v20;
  v94 = v7;
  v22 = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v89 = (char *)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v75 - v26;
  v30 = type metadata accessor for Patch(0, v22, v28, v29);
  v104 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x1E0C80A78](v30);
  v95 = (char *)&v75 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v32;
  MEMORY[0x1E0C80A78](v31);
  v103 = (char *)&v75 - v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v102, a2);
  v34 = swift_bridgeObjectRetain();
  v96 = v30;
  if (!MEMORY[0x1A859E4AC](v34, v30))
    return swift_bridgeObjectRelease();
  v97 = v21;
  v35 = 0;
  v102 = v23;
  v100 = v27;
  v36 = v96;
  v81 = a1;
  v80 = v19;
  v79 = v22;
  v78 = a2;
  v77 = a4;
  while (1)
  {
    v42 = sub_1A4690C0C();
    sub_1A4690BD0();
    if ((v42 & 1) != 0)
    {
      result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v104 + 16))(v103, a1+ ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80))+ *(_QWORD *)(v104 + 72) * v35, v36);
    }
    else
    {
      result = sub_1A469147C();
      if (v76 != 8)
        goto LABEL_19;
      v105 = result;
      (*(void (**)(char *, uint64_t *, uint64_t))(v104 + 16))(v103, &v105, v36);
      result = swift_unknownObjectRelease();
    }
    v44 = v95;
    if (__OFADD__(v35, 1))
      break;
    v101 = v35 + 1;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v95, v103, v36);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_1A4690E40();
        v46 = v97;
        v27 = v100;
        sub_1A4690E58();
        v47 = v98;
        v48 = *(void (**)(char *, uint64_t))(v99 + 8);
        v48(v19, v98);
        sub_1A4690F18();
        (*(void (**)(char *, uint64_t))(v102 + 8))(v27, v22);
        v48(v46, v47);
      }
      else
      {
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        v50 = *(int *)(TupleTypeMetadata3 + 48);
        (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v27, &v44[*(int *)(TupleTypeMetadata3 + 64)], v22);
        sub_1A4690E40();
        v51 = v97;
        sub_1A4690E58();
        v52 = *(void (**)(char *, uint64_t))(v99 + 8);
        v52(v19, v98);
        v53 = v51;
        result = sub_1A469084C();
        if ((result & 1) == 0)
          goto LABEL_18;
        v92 = &v44[v50];
        v54 = TupleTypeMetadata2;
        v55 = v86;
        v56 = &v86[*(int *)(TupleTypeMetadata2 + 48)];
        v57 = v98;
        v58 = v99;
        v59 = *(void (**)(char *, char *, uint64_t))(v99 + 16);
        v59(v86, v53, v98);
        v59(v56, v53, v57);
        v60 = v87;
        v61 = &v87[*(int *)(v54 + 48)];
        v59(v87, v55, v57);
        v59(v61, v56, v57);
        v62 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
        v63 = v83;
        v62(v83, v60, v57);
        v52(v61, v57);
        v91 = v52;
        v64 = &v60[*(int *)(v54 + 48)];
        v62(v60, v55, v57);
        v62(v64, v56, v57);
        v65 = v85;
        v62(&v63[*(int *)(v85 + 36)], v64, v57);
        v52(v60, v57);
        v66 = v84;
        v67 = v82;
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v82, v63, v65);
        v22 = v79;
        sub_1A44A2D8C(v79, v79);
        v68 = v102;
        swift_allocObject();
        v69 = sub_1A4690BC4();
        (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v70, v100, v22);
        v71 = sub_1A4690C78();
        v105 = v69;
        MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v71);
        MEMORY[0x1A85A0000](MEMORY[0x1E0DEA4E8], v65);
        sub_1A4690F30();
        v72 = v67;
        v19 = v80;
        v73 = v65;
        v27 = v100;
        (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v73);
        v91(v97, v57);
        v74 = *(void (**)(char *, uint64_t))(v68 + 8);
        v74(v27, v22);
        v74(v92, v22);
        a1 = v81;
      }
    }
    else
    {
      v37 = swift_getTupleTypeMetadata2();
      (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v27, &v44[*(int *)(v37 + 48)], v22);
      sub_1A4690E40();
      v38 = v97;
      sub_1A4690E58();
      v39 = v98;
      v40 = *(void (**)(char *, uint64_t))(v99 + 8);
      v40(v19, v98);
      (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v89, v100, v22);
      v27 = v100;
      sub_1A4690F0C();
      v40(v38, v39);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v27, v22);
    }
    v36 = v96;
    v41 = MEMORY[0x1A859E4AC](a1, v96);
    ++v35;
    if (v101 == v41)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

{
  uint64_t v4;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char *v35;
  uint64_t v36;
  _QWORD v38[5];
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t TupleTypeMetadata2;
  char *v43;
  uint64_t AssociatedConformanceWitness;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;

  v47 = a3;
  v8 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v41 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)v38 - v12;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v39 = sub_1A4690858();
  v38[4] = *(_QWORD *)(v39 - 8);
  v13 = MEMORY[0x1E0C80A78](v39);
  v38[3] = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v38[2] = (char *)v38 - v16;
  v53 = AssociatedTypeWitness;
  v55 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v43 = (char *)v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v56 = (char *)v38 - v20;
  MEMORY[0x1E0C80A78](v19);
  v61 = (char *)v38 - v21;
  v48 = v8;
  v22 = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v45 = (char *)v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v38 - v25;
  v29 = type metadata accessor for ExtendedPatch(0, v22, v27, v28);
  v60 = *(_QWORD *)(v29 - 8);
  v30 = MEMORY[0x1E0C80A78](v29);
  v49 = (char *)v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = v31;
  MEMORY[0x1E0C80A78](v30);
  v59 = (char *)v38 - v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v4, a2);
  v33 = swift_bridgeObjectRetain();
  if (MEMORY[0x1A859E4AC](v33, v29))
  {
    v50 = v22;
    v51 = a4;
    v52 = a2;
    v54 = v26;
    v46 = v29;
    v38[1] = a1;
    v34 = sub_1A4690C0C();
    sub_1A4690BD0();
    if ((v34 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v60 + 16))(v59, a1 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80)), v29);
    }
    else
    {
      v36 = sub_1A469147C();
      if (v38[0] != 8)
      {
        __break(1u);
        JUMPOUT(0x1A4634814);
      }
      v62 = v36;
      (*(void (**)(char *, uint64_t *, uint64_t))(v60 + 16))(v59, &v62, v29);
      swift_unknownObjectRelease();
    }
    v58 = 1;
    (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v49, v59, v29);
    v35 = (char *)&loc_1A4634298 + dword_1A4634814[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44A2D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  else
    return sub_1A46918E4();
}

uint64_t sub_1A44A2DD8(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(uint64_t *__return_ptr, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a1;
  v32 = a2;
  v5 = sub_1A46900FC();
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v25 - v10;
  v11 = *(_QWORD *)(a3 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v33 = v3;
    v26 = v9;
    v27 = v8;
    v28 = v7;
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    result = sub_1A44A391C(a3);
    v13 = result;
    v15 = v14;
    v17 = v16 & 1;
    v29 = a3 + 56;
    v18 = v26;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(a3 + 32))
    {
      if (((*(_QWORD *)(v29 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a3 + 36) != (_DWORD)v15)
        goto LABEL_14;
      v20 = v27;
      v19 = v28;
      v21 = v30;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v30, *(_QWORD *)(a3 + 48) + *(_QWORD *)(v27 + 72) * v13, v28);
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v18, v21, v19);
      v22 = v33;
      v31(&v34, v18);
      if (v22)
      {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
        return swift_release();
      }
      v33 = 0;
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      sub_1A4691524();
      result = sub_1A44C1224(v13, v15, v17 & 1, a3);
      v13 = result;
      v15 = v23;
      v17 = v24 & 1;
      if (!--v11)
      {
        sub_1A44A39BC(result, v23, v24 & 1);
        return v35;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

void sub_1A44A300C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  _QWORD v32[4];
  int64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v4 = sub_1A46900FC();
  v36 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v35 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v32 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v32 - v10;
  v45 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A46912D8();
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
    sub_1A4460634();
    sub_1A4690DB0();
    a2 = v40;
    v34 = v41;
    v12 = v42;
    v13 = v43;
    v14 = v44;
  }
  else
  {
    v15 = -1 << *(_BYTE *)(a2 + 32);
    v16 = *(_QWORD *)(a2 + 56);
    v34 = a2 + 56;
    v17 = ~v15;
    v18 = -v15;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v14 = v19 & v16;
    swift_bridgeObjectRetain();
    v12 = v17;
    v13 = 0;
  }
  v32[0] = v12;
  v32[3] = a2 & 0x7FFFFFFFFFFFFFFFLL;
  v33 = (unint64_t)(v12 + 64) >> 6;
  v32[2] = MEMORY[0x1E0DEE9B0] + 8;
  v37 = a2;
  if (a2 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v14)
    {
      v20 = (v14 - 1) & v14;
      v21 = __clz(__rbit64(v14)) | (v13 << 6);
      v22 = v13;
      goto LABEL_29;
    }
    v25 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v25 >= v33)
      goto LABEL_32;
    v26 = *(_QWORD *)(v34 + 8 * v25);
    v22 = v13 + 1;
    if (!v26)
    {
      v22 = v13 + 2;
      if (v13 + 2 >= v33)
        goto LABEL_32;
      v26 = *(_QWORD *)(v34 + 8 * v22);
      if (!v26)
      {
        v22 = v13 + 3;
        if (v13 + 3 >= v33)
          goto LABEL_32;
        v26 = *(_QWORD *)(v34 + 8 * v22);
        if (!v26)
        {
          v22 = v13 + 4;
          if (v13 + 4 >= v33)
            goto LABEL_32;
          v26 = *(_QWORD *)(v34 + 8 * v22);
          if (!v26)
          {
            v22 = v13 + 5;
            if (v13 + 5 >= v33)
              goto LABEL_32;
            v26 = *(_QWORD *)(v34 + 8 * v22);
            if (!v26)
            {
              v27 = v13 + 6;
              while (v33 != v27)
              {
                v26 = *(_QWORD *)(v34 + 8 * v27++);
                if (v26)
                {
                  v22 = v27 - 1;
                  a2 = v37;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1A4460EDC();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v20 = (v26 - 1) & v26;
    v21 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_29:
    v24 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    if (!v24)
      goto LABEL_32;
    while (1)
    {
      v28 = objc_msgSend(v24, sel_uuid, v32[0]);
      sub_1A46900F0();

      v30 = v35;
      v29 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v35, v11, v4);
      sub_1A446654C((uint64_t)v9, v30);
      v31 = *(void (**)(char *, uint64_t))(v29 + 8);
      v31(v9, v4);
      v31(v11, v4);

      v13 = v22;
      v14 = v20;
      a2 = v37;
      if ((v37 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v23 = sub_1A4691338();
      if (v23)
      {
        v38 = v23;
        sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v24 = v39;
        swift_unknownObjectRelease();
        v22 = v13;
        v20 = v14;
        if (v24)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t REMChangeItemWithUnsavedMembershipsOfRemindersInSections.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:modifiedOn:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A44A300C(MEMORY[0x1E0DEE9E8], a1);
  v14 = v13;
  if (a2)
  {
    v15 = objc_msgSend(a2, sel_uuid);
    sub_1A46900F0();

    v16 = sub_1A46900FC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 0, 1, v16);
  }
  else
  {
    v17 = sub_1A46900FC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v12, 1, 1, v17);
  }
  REMChangeItemWithUnsavedMembershipsOfRemindersInSections.updateMembershipsOfReminders(withReminderIdentifiers:destinationSectionIdentifier:modifiedOn:)(v14, (uint64_t)v12, a3, a4, a5);
  swift_bridgeObjectRelease();
  return sub_1A4473730((uint64_t)v12);
}

void REMChangeItemWithUnsavedMembershipsOfRemindersInSections.updateMembershipsOfReminders(withReminderIdentifiers:destinationSectionIdentifier:modifiedOn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void (*v12)(id, uint64_t, uint64_t);
  id v13;
  _QWORD v14[4];

  v14[2] = a2;
  v14[3] = a3;
  sub_1A44A2DD8((void (*)(uint64_t *__return_ptr, uint64_t))sub_1A44A37C8, (uint64_t)v14, a1);
  v7 = objc_allocWithZone(MEMORY[0x1E0D845A8]);
  sub_1A444AA40(0, (unint64_t *)&qword_1EE71D9B0);
  v8 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithMemberships_, v8);

  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  if (v10)
  {
    v11 = v10;
    (*(void (**)(id, uint64_t, uint64_t))(a5 + 16))(objc_msgSend(v10, sel_mergingWith_mergePolicy_, v9, 0), a4, a5);

  }
  else
  {
    v12 = *(void (**)(id, uint64_t, uint64_t))(a5 + 16);
    v13 = v9;
    v12(v9, a4, a5);
  }

}

uint64_t sub_1A44A3624@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;

  v21 = a3;
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4474000(a1, (uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v12 = (void *)sub_1A46900D8();
  v13 = sub_1A46900FC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) != 1)
  {
    v15 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  v16 = objc_allocWithZone(MEMORY[0x1E0D845A0]);
  v17 = (void *)sub_1A4690030();
  v18 = objc_msgSend(v16, sel_initWithMemberIdentifier_groupIdentifier_isObsolete_modifiedOn_, v12, v15, 0, v17);

  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *v21 = v18;
  return result;
}

uint64_t sub_1A44A37C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A44A3624(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

id sub_1A44A37E4()
{
  void *v0;

  return objc_msgSend(v0, sel_unsavedMembershipsOfRemindersInSections);
}

void sub_1A44A3808(void *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setUnsavedMembershipsOfRemindersInSections_, a1);

}

void (*sub_1A44A383C(_QWORD *a1))(id *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_unsavedMembershipsOfRemindersInSections);
  return sub_1A44A3884;
}

void sub_1A44A3884(id *a1)
{
  id v1;

  v1 = *a1;
  objc_msgSend(a1[1], sel_setUnsavedMembershipsOfRemindersInSections_);

}

void (*sub_1A44A38B8(_QWORD *a1))(id *)
{
  void *v1;

  a1[1] = v1;
  *a1 = objc_msgSend(v1, sel_unsavedMembershipsOfRemindersInSections);
  return sub_1A44A39D0;
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedMembershipsOfRemindersInSections.unsavedMembershipsOfRemindersInSections.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedMembershipsOfRemindersInSections.unsavedMembershipsOfRemindersInSections.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMChangeItemWithUnsavedMembershipsOfRemindersInSections.unsavedMembershipsOfRemindersInSections.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1A44A391C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A44A39BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t static REMPermanentlyHiddenDataView.fetchReminderAndCheckIfPermanentlyHidden(store:reminderID:)(char a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  char v17;
  _BYTE v19[8];
  id v20;
  objc_super v21;

  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v10 = objc_allocWithZone(v9);
  v11 = a2;
  v12 = objc_msgSend(v11, sel_uuid);
  sub_1A46900F0();

  v13 = (void *)sub_1A46900D8();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v14 = objc_msgSend(v11, sel_entityName);
  if (!v14)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v14 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v21.receiver = v10;
  v21.super_class = v9;
  v15 = objc_msgSendSuper2(&v21, sel_initWithUUID_entityName_, v13, v14);

  type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation();
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v17 = a1;
  sub_1A447854C((uint64_t)v16, (uint64_t)v15, v19);

  if (!v2)
  {
    v17 = v19[0];

  }
  return v17 & 1;
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.init(reminderID:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t static REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.reminderID.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_1A44A3B90()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A44A3BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A44A3C4C()
{
  sub_1A44A44B0();
  return sub_1A4691DB8();
}

uint64_t sub_1A44A3C74()
{
  sub_1A44A44B0();
  return sub_1A4691DC4();
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D9B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44A44B0();
  sub_1A4691D40();
  v9[1] = v7;
  type metadata accessor for REMObjectID_Codable();
  sub_1A44A44F4(&qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D9C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44A44B0();
  sub_1A4691D28();
  if (!v2)
  {
    type metadata accessor for REMObjectID_Codable();
    sub_1A44A44F4(&qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A44A3EE4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A44A3EF8(_QWORD *a1)
{
  return REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.encode(to:)(a1);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.isPermanentlyHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ReminderKitInternal::REMPermanentlyHiddenDataView::PermanentlyHiddenInvocation::Result __swiftcall REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.init(isPermanentlyHidden:)(ReminderKitInternal::REMPermanentlyHiddenDataView::PermanentlyHiddenInvocation::Result isPermanentlyHidden)
{
  ReminderKitInternal::REMPermanentlyHiddenDataView::PermanentlyHiddenInvocation::Result *v1;

  v1->isPermanentlyHidden = isPermanentlyHidden.isPermanentlyHidden;
  return isPermanentlyHidden;
}

unint64_t sub_1A44A3F1C()
{
  return 0xD000000000000013;
}

uint64_t sub_1A44A3F38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44A4A18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A44A3F60()
{
  sub_1A44A4534();
  return sub_1A4691DB8();
}

uint64_t sub_1A44A3F88()
{
  sub_1A44A4534();
  return sub_1A4691DC4();
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D9D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44A4534();
  sub_1A4691D40();
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D9E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44A4534();
  sub_1A4691D28();
  if (!v2)
  {
    v9 = sub_1A4691794();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A44A41A0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A44A41B4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D9D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44A4534();
  sub_1A4691D40();
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMPermanentlyHiddenDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMPermanentlyHiddenDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation()
{
  return objc_opt_self();
}

unint64_t sub_1A44A44B0()
{
  unint64_t result;

  result = qword_1EE71D9C0;
  if (!qword_1EE71D9C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698B60, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D9C0);
  }
  return result;
}

uint64_t sub_1A44A44F4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for REMObjectID_Codable();
    result = MEMORY[0x1A85A0000](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A44A4534()
{
  unint64_t result;

  result = qword_1EE71D9D8;
  if (!qword_1EE71D9D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698B10, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71D9D8);
  }
  return result;
}

unint64_t sub_1A44A457C()
{
  unint64_t result;

  result = qword_1EE71D9E8;
  if (!qword_1EE71D9E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE71D9E8);
  }
  return result;
}

unint64_t sub_1A44A45CC()
{
  unint64_t result;

  result = qword_1EE71D9F0;
  if (!qword_1EE71D9F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE71D9F0);
  }
  return result;
}

uint64_t type metadata accessor for REMPermanentlyHiddenDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMPermanentlyHiddenDataView()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters;
}

uint64_t getEnumTagSinglePayload for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44A4738 + 4 * byte_1A4698845[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44A476C + 4 * asc_1A4698840[v4]))();
}

uint64_t sub_1A44A476C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44A4774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44A477CLL);
  return result;
}

uint64_t sub_1A44A4788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44A4790);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44A4794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44A479C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result;
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys;
}

uint64_t _s19ReminderKitInternal28REMPermanentlyHiddenDataViewC27PermanentlyHiddenInvocationC6ResultV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A44A480C + 4 * byte_1A469884A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A44A482C + 4 * byte_1A469884F[v4]))();
}

_BYTE *sub_1A44A480C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A44A482C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A44A4834(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A44A483C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A44A4844(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A44A484C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys;
}

unint64_t sub_1A44A486C()
{
  unint64_t result;

  result = qword_1EE71DAF8;
  if (!qword_1EE71DAF8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698A30, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DAF8);
  }
  return result;
}

unint64_t sub_1A44A48B4()
{
  unint64_t result;

  result = qword_1EE71DB00;
  if (!qword_1EE71DB00)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698AE8, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DB00);
  }
  return result;
}

unint64_t sub_1A44A48FC()
{
  unint64_t result;

  result = qword_1EE71DB08;
  if (!qword_1EE71DB08)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698A58, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DB08);
  }
  return result;
}

unint64_t sub_1A44A4944()
{
  unint64_t result;

  result = qword_1EE71DB10;
  if (!qword_1EE71DB10)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698A80, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DB10);
  }
  return result;
}

unint64_t sub_1A44A498C()
{
  unint64_t result;

  result = qword_1EE71DB18;
  if (!qword_1EE71DB18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46989A0, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DB18);
  }
  return result;
}

unint64_t sub_1A44A49D4()
{
  unint64_t result;

  result = qword_1EE71DB20;
  if (!qword_1EE71DB20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46989C8, &type metadata for REMPermanentlyHiddenDataView.PermanentlyHiddenInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DB20);
  }
  return result;
}

uint64_t sub_1A44A4A18(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000013 && a2 == 0x80000001A46BDB80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t firstly<A>(closure:)(uint64_t (*a1)(void))
{
  return a1();
}

{
  return a1();
}

_QWORD *firstly<A>(closure:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = (void (*)(void))MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  type metadata accessor for Promise(0, a3, v8, v9);
  v13 = sub_1A44513F8((uint64_t)v7, v10, v11, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v13;
}

uint64_t firstly<A>(on:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44A5610(a1, a2, a3, a4, (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44A5EAC);
}

{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a4;
  v8[3] = a2;
  v8[4] = a3;
  swift_retain();
  type metadata accessor for Promise(0, a4, v9, v10);
  v13[2] = a4;
  v13[3] = a1;
  v13[4] = sub_1A44A5EDC;
  v13[5] = v8;
  v11 = Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44A5EAC, (uint64_t)v13);
  swift_release();
  return v11;
}

uint64_t sub_1A44A4BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v28 = a5;
  v15 = sub_1A46905A0();
  v27 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A46905DC();
  v25 = *(_QWORD *)(v18 - 8);
  v26 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a8;
  v21[3] = a6;
  v21[4] = a7;
  v21[5] = a1;
  v21[6] = a2;
  v21[7] = a3;
  v21[8] = a4;
  aBlock[4] = sub_1A44A6180;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_63;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A46905C4();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v20, v17, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v15);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v26);
  return swift_release();
}

void sub_1A44A4DCC(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void (*v21)(void);
  id v22;

  a1();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a7;
  v12[3] = a3;
  v12[4] = a4;
  v13 = qword_1ED243C50;
  swift_retain();
  if (v13 != -1)
    swift_once();
  v14 = (id)qword_1ED2431A0;
  v15 = sub_1A444B8B0(v14, (uint64_t)sub_1A44A61A4, (uint64_t)v12, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  swift_release();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  v17 = (void *)qword_1ED2431A0;
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16);
  swift_retain();
  v19 = v17;
  os_unfair_lock_lock_with_options();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = 0;
  *(_BYTE *)(v20 + 32) = 1;
  *(_QWORD *)(v20 + 40) = nullsub_1;
  *(_QWORD *)(v20 + 48) = 0;
  *(_QWORD *)(v20 + 56) = sub_1A4452640;
  *(_QWORD *)(v20 + 64) = v16;
  *(_QWORD *)(v20 + 72) = nullsub_1;
  *(_QWORD *)(v20 + 80) = 0;
  v22 = v19;
  swift_retain();
  v21 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v20);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  v21();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A44A4FA4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

_QWORD *sub_1A44A506C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = (void (*)(void))MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  type metadata accessor for Promise(0, a3, v8, v9);
  v13 = sub_1A44513F8((uint64_t)v7, v10, v11, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v13;
}

uint64_t firstly<A, B>(on:disposeOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A44A59CC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44A5F0C);
}

uint64_t sub_1A44A5138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[6];

  v31 = a1;
  v32 = a7;
  v36 = a5;
  v29 = a10;
  v30 = a3;
  v14 = sub_1A46905A0();
  v35 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1A46905DC();
  v33 = *(_QWORD *)(v17 - 8);
  v34 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a6 + 16;
  v21 = swift_allocObject();
  swift_beginAccess();
  MEMORY[0x1A85A01C8](v20);
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  v22 = (_QWORD *)swift_allocObject();
  v23 = v29;
  v22[2] = a9;
  v22[3] = v23;
  v24 = v30;
  v22[4] = v21;
  v22[5] = v24;
  v25 = v32;
  v22[6] = a4;
  v22[7] = v25;
  v26 = v31;
  v22[8] = a8;
  v22[9] = v26;
  v22[10] = a2;
  aBlock[4] = sub_1A44A6044;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_47;
  v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A46905C4();
  v37 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v19, v16, v27);
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v34);
  swift_release();
  return swift_release();
}

void sub_1A44A53A4(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void (*v26)(void);
  void *v27;
  uint64_t v28;

  v15 = a1 + 16;
  swift_beginAccess();
  if (MEMORY[0x1A85A01C8](v15))
  {
    a4();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a8;
    v16[3] = a9;
    v16[4] = a6;
    v16[5] = a7;
    v17 = qword_1ED243C50;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v18 = (id)qword_1ED2431A0;
    v19 = sub_1A444B8B0(v18, (uint64_t)sub_1A44A5FA4, (uint64_t)v16, MEMORY[0x1E0DEE9C0] + 8);
    swift_release();
    swift_release();

    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a2;
    *(_QWORD *)(v20 + 24) = a3;
    v21 = (void *)qword_1ED2431A0;
    v22 = *(_QWORD *)(*(_QWORD *)(v19 + 16) + 16);
    swift_retain();
    v23 = v21;
    os_unfair_lock_lock_with_options();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = 0;
    *(_BYTE *)(v24 + 32) = 1;
    *(_QWORD *)(v24 + 40) = nullsub_1;
    *(_QWORD *)(v24 + 48) = 0;
    *(_QWORD *)(v24 + 56) = sub_1A446A6C0;
    *(_QWORD *)(v24 + 64) = v20;
    *(_QWORD *)(v24 + 72) = nullsub_1;
    *(_QWORD *)(v24 + 80) = 0;
    v25 = v23;
    swift_retain();
    v26 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v24);
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
    v26();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1A4451C3C();
    v27 = (void *)swift_allocError();
    *(_QWORD *)v28 = 0;
    *(_QWORD *)(v28 + 8) = 0;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 1;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_OWORD *)(v28 + 48) = 0u;
    a2();

  }
}

uint64_t firstly<A>(syncOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44A5610(a1, a2, a3, a4, (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44A5F18);
}

uint64_t sub_1A44A5610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *, uint64_t (*)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *))
{
  _QWORD v11[6];

  type metadata accessor for Promise(0, a4, a3, a4);
  v11[2] = a4;
  v11[3] = a1;
  v11[4] = a2;
  v11[5] = a3;
  return Promise.__allocating_init(resolver:)(a5, (uint64_t)v11);
}

uint64_t sub_1A44A567C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  _QWORD v20[6];

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a8;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a1;
  v16[6] = a2;
  v16[7] = a3;
  v16[8] = a4;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A44A5FE4;
  *(_QWORD *)(v17 + 24) = v16;
  v20[4] = sub_1A44A61D0;
  v20[5] = v17;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1A44697A0;
  v20[3] = &block_descriptor_30;
  v18 = _Block_copy(v20);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(a5, v18);
  _Block_release(v18);
  LOBYTE(a5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a5 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1A44A57E8(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  void (*v21)(void);
  id v22;

  a1();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a7;
  v12[3] = a3;
  v12[4] = a4;
  v13 = qword_1ED243C50;
  swift_retain();
  if (v13 != -1)
    swift_once();
  v14 = (id)qword_1ED2431A0;
  v15 = sub_1A444B8B0(v14, (uint64_t)sub_1A44A6204, (uint64_t)v12, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  swift_release();

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a5;
  *(_QWORD *)(v16 + 24) = a6;
  v17 = (void *)qword_1ED2431A0;
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 16) + 16);
  swift_retain();
  v19 = v17;
  os_unfair_lock_lock_with_options();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = 0;
  *(_BYTE *)(v20 + 32) = 1;
  *(_QWORD *)(v20 + 40) = nullsub_1;
  *(_QWORD *)(v20 + 48) = 0;
  *(_QWORD *)(v20 + 56) = sub_1A446A6C0;
  *(_QWORD *)(v20 + 64) = v16;
  *(_QWORD *)(v20 + 72) = nullsub_1;
  *(_QWORD *)(v20 + 80) = 0;
  v22 = v19;
  swift_retain();
  v21 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v20);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  v21();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t firstly<A, B>(syncOn:disposeOn:closure:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1A44A59CC(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A44A5F24);
}

uint64_t sub_1A44A59CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t (*)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *, uint64_t (*)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4), _QWORD *))
{
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[8];

  type metadata accessor for Promise(0, a5, a3, a4);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a1;
  v16[5] = v13;
  v16[6] = a3;
  v16[7] = a4;
  v14 = Promise.__allocating_init(resolver:)(a7, (uint64_t)v16);
  swift_release();
  return v14;
}

uint64_t sub_1A44A5A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD aBlock[6];

  v15 = a6 + 16;
  v16 = swift_allocObject();
  swift_beginAccess();
  MEMORY[0x1A85A01C8](v15);
  swift_unknownObjectWeakInit();
  swift_unknownObjectRelease();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a9;
  v17[3] = a10;
  v17[4] = v16;
  v17[5] = a3;
  v17[6] = a4;
  v17[7] = a7;
  v17[8] = a8;
  v17[9] = a1;
  v17[10] = a2;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1A44A5F64;
  *(_QWORD *)(v18 + 24) = v17;
  aBlock[4] = sub_1A4452D50;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44697A0;
  aBlock[3] = &block_descriptor_1;
  v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(a5, v19);
  _Block_release(v19);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_1A44A5C4C(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  void (*v26)(void);
  void *v27;
  uint64_t v28;

  v15 = a1 + 16;
  swift_beginAccess();
  if (MEMORY[0x1A85A01C8](v15))
  {
    a4();
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = a8;
    v16[3] = a9;
    v16[4] = a6;
    v16[5] = a7;
    v17 = qword_1ED243C50;
    swift_retain();
    if (v17 != -1)
      swift_once();
    v18 = (id)qword_1ED2431A0;
    v19 = sub_1A444B8B0(v18, (uint64_t)sub_1A44A5FA4, (uint64_t)v16, MEMORY[0x1E0DEE9C0] + 8);
    swift_release();
    swift_release();

    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a2;
    *(_QWORD *)(v20 + 24) = a3;
    v21 = (void *)qword_1ED2431A0;
    v22 = *(_QWORD *)(*(_QWORD *)(v19 + 16) + 16);
    swift_retain();
    v23 = v21;
    os_unfair_lock_lock_with_options();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v23;
    *(_QWORD *)(v24 + 24) = 0;
    *(_BYTE *)(v24 + 32) = 1;
    *(_QWORD *)(v24 + 40) = nullsub_1;
    *(_QWORD *)(v24 + 48) = 0;
    *(_QWORD *)(v24 + 56) = sub_1A446A6C0;
    *(_QWORD *)(v24 + 64) = v20;
    *(_QWORD *)(v24 + 72) = nullsub_1;
    *(_QWORD *)(v24 + 80) = 0;
    v25 = v23;
    swift_retain();
    v26 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v24);
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
    v26();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    sub_1A4451C3C();
    v27 = (void *)swift_allocError();
    *(_QWORD *)v28 = 0;
    *(_QWORD *)(v28 + 8) = 0;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 1;
    *(_OWORD *)(v28 + 32) = 0u;
    *(_OWORD *)(v28 + 48) = 0u;
    a2();

  }
}

uint64_t sub_1A44A5EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  return sub_1A44A4BDC(a1, a2, a3, a4, v4[3], v4[4], v4[5], v4[2]);
}

uint64_t sub_1A44A5EB8()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1A44A5EDC()
{
  uint64_t *v0;

  return sub_1A44A506C(v0[3], v0[4], v0[2]);
}

uint64_t sub_1A44A5EE8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A44A5F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44A5F30(a1, a2, a3, a4, sub_1A44A5138);
}

uint64_t sub_1A44A5F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A44A567C(a1, a2, a3, a4, *(NSObject **)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 16));
}

uint64_t sub_1A44A5F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A44A5F30(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44A5A88);
}

uint64_t sub_1A44A5F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v5;

  return a5(a1, a2, a3, a4, v5[4], v5[5], v5[6], v5[7], v5[2], v5[3]);
}

uint64_t sub_1A44A5F64()
{
  return sub_1A44A6050((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44A5C4C);
}

uint64_t sub_1A44A5F70()
{
  return swift_deallocObject();
}

uint64_t sub_1A44A5F80()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44A5FA4()
{
  return sub_1A44A611C();
}

uint64_t sub_1A44A5FB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44A5FE4()
{
  return sub_1A44A618C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44A57E8);
}

uint64_t sub_1A44A5FF0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44A6044()
{
  return sub_1A44A6050((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44A53A4);
}

uint64_t sub_1A44A6050(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[2], v1[3]);
}

unint64_t sub_1A44A6088()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED242FC0;
  if (!qword_1ED242FC0)
  {
    v1 = sub_1A46905A0();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED242FC0);
  }
  return result;
}

unint64_t sub_1A44A60D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED242FE0;
  if (!qword_1ED242FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED242FD0);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED242FE0);
  }
  return result;
}

uint64_t sub_1A44A611C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t objectdestroy_22Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A44A6180()
{
  return sub_1A44A618C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A44A4DCC);
}

uint64_t sub_1A44A618C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[2]);
}

uint64_t sub_1A44A61A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1A44A6204()
{
  return sub_1A44A61A4();
}

uint64_t sub_1A44A6218(unint64_t a1, unint64_t a2)
{
  uint64_t result;
  unint64_t *v5;
  unint64_t v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_1A469162C();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1A4690C00();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unint64_t *)(result + 32);
  if (a2 < 4)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  v7 = vdupq_n_s64(a1);
  v8 = (int64x2_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_1A44A6300(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1A469162C();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v6 = sub_1A4690C00();
      v7 = v6;
      *(_QWORD *)(v6 + 16) = a2;
      *(_QWORD *)(v6 + 32) = a1;
      *(double *)(v6 + 40) = a3;
      if (a2 != 1)
      {
        *(_QWORD *)(v6 + 48) = a1;
        *(double *)(v6 + 56) = a3;
        v8 = a2 - 2;
        if (v8)
        {
          v9 = (double *)(v6 + 72);
          do
          {
            *((_QWORD *)v9 - 1) = a1;
            *v9 = a3;
            v9 += 2;
            swift_bridgeObjectRetain();
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return v7;
  }
  return result;
}

uint64_t sub_1A44A6400(unint64_t a1, double a2)
{
  uint64_t result;
  double *v4;
  unint64_t v5;
  double v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_1A469162C();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1A4690C00();
  *(_QWORD *)(result + 16) = a1;
  v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    v5 = 0;
    v6 = a2;
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 = a2;
  v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = (int64x2_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_1A44A64F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (a2 < 0)
  {
    result = sub_1A469162C();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7C0);
      v4 = (_QWORD *)sub_1A4690C00();
      v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            swift_bridgeObjectRetain();
            --v6;
          }
          while (v6);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x1E0DEE9D8];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1A44A65E0(unint64_t a1, int32x2_t a2)
{
  uint64_t result;
  __int32 *v4;
  unint64_t v5;
  __int32 v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_1A469162C();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x1E0DEE9D8];
  result = sub_1A4690C00();
  *(_QWORD *)(result + 16) = a1;
  v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    v5 = 0;
    v6 = a2.i32[0];
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2.i32[0];
  v7 = vdupq_lane_s32(a2, 0);
  v8 = (int32x4_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_1A44A66D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71DB28);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71DB28);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

ReminderKitInternal::REMTitleEmbeddingMethods_optional __swiftcall REMTitleEmbeddingMethods.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMTitleEmbeddingMethods_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMTitleEmbeddingMethods.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x65636E65746E6553;
}

uint64_t sub_1A44A6820(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466AB3C(*a1, *a2);
}

uint64_t sub_1A44A682C()
{
  return sub_1A4635BEC();
}

uint64_t sub_1A44A6834()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44A68BC()
{
  return sub_1A4637B08();
}

ReminderKitInternal::REMTitleEmbeddingMethods_optional sub_1A44A68C4(Swift::String *a1)
{
  return REMTitleEmbeddingMethods.init(rawValue:)(*a1);
}

void sub_1A44A68D0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC00000063655632;
  v4 = 0x80000001A46BBE50;
  v5 = 0xD000000000000010;
  if (v2 != 1)
  {
    v5 = 0xD000000000000011;
    v4 = 0x80000001A46BBE70;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x65636E65746E6553;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t REMTitleEmbeddingConfig.majorLanguage.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMTitleEmbeddingConfig.revision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t REMTitleEmbeddingConfig.currentMethod.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMTitleEmbeddingConfig.stopWords.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t static REMTitleEmbeddingConfig.configFileName.getter()
{
  return 0xD000000000000018;
}

void __swiftcall REMTitleEmbeddingConfig.init(majorLanguage:revision:currentMethod:stopWords:)(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr, Swift::String majorLanguage, Swift::Int revision, Swift::String currentMethod, Swift::OpaquePointer stopWords)
{
  retstr->majorLanguage = majorLanguage;
  retstr->revision = revision;
  retstr->currentMethod = currentMethod;
  retstr->stopWords = stopWords;
}

uint64_t REMTitleEmbeddingConfig.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;

  v5 = sub_1A468FF7C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FEF8();
  v9 = sub_1A468FF88();
  if (v2)
  {

    v11 = (void *)objc_opt_self();
    *(_QWORD *)&v22 = 0;
    *((_QWORD *)&v22 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v22 = 0xD00000000000002ELL;
    *((_QWORD *)&v22 + 1) = 0x80000001A46BDBC0;
    sub_1A468FE98();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v12 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_internalErrorWithDebugDescription_, v12);

    swift_willThrow();
    v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v15(a1, v5);
    return ((uint64_t (*)(char *, uint64_t))v15)(v8, v5);
  }
  else
  {
    v13 = v9;
    v14 = v10;
    v26 = a1;
    sub_1A468FB74();
    swift_allocObject();
    sub_1A468FB68();
    sub_1A44A6CA0();
    sub_1A468FB5C();
    sub_1A44695EC(v13, v14);
    swift_release();
    v17 = v23;
    v18 = v24;
    v20 = v25;
    v21 = v22;
    v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v19(v26, v5);
    result = ((uint64_t (*)(char *, uint64_t))v19)(v8, v5);
    *(_OWORD *)a2 = v21;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)(a2 + 24) = v18;
    *(_OWORD *)(a2 + 32) = v20;
  }
  return result;
}

unint64_t sub_1A44A6CA0()
{
  unint64_t result;

  result = qword_1EE71DB40;
  if (!qword_1EE71DB40)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTitleEmbeddingConfig, &type metadata for REMTitleEmbeddingConfig);
    atomic_store(result, (unint64_t *)&qword_1EE71DB40);
  }
  return result;
}

uint64_t REMTitleEmbeddingConfig.saveConfig(to:)()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v1 = sub_1A468FF7C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v0;
  v5 = *((_QWORD *)v0 + 2);
  v6 = *((_QWORD *)v0 + 3);
  sub_1A468FEF8();
  sub_1A468FBB0();
  swift_allocObject();
  sub_1A468FBA4();
  v13 = v12;
  v14 = v5;
  v15 = v6;
  v16 = v0[2];
  sub_1A44A70B4();
  v7 = sub_1A468FB98();
  v9 = v8;
  swift_release();
  sub_1A468FFD0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1A44695EC(v7, v9);
  return 1;
}

unint64_t sub_1A44A70B4()
{
  unint64_t result;

  result = qword_1EE71DB48;
  if (!qword_1EE71DB48)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTitleEmbeddingConfig, &type metadata for REMTitleEmbeddingConfig);
    atomic_store(result, (unint64_t *)&qword_1EE71DB48);
  }
  return result;
}

uint64_t sub_1A44A70F8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A44A7134 + 4 * byte_1A4698BB0[*v0]))(0x6E614C726F6A616DLL, 0xED00006567617567);
}

uint64_t sub_1A44A7134()
{
  return 0x6E6F697369766572;
}

uint64_t sub_1A44A714C()
{
  return 0x4D746E6572727563;
}

uint64_t sub_1A44A7170()
{
  return 0x64726F57706F7473;
}

uint64_t sub_1A44A718C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44ACB50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A44A71B0()
{
  sub_1A44AB52C();
  return sub_1A4691DB8();
}

uint64_t sub_1A44A71D8()
{
  sub_1A44AB52C();
  return sub_1A4691DC4();
}

uint64_t REMTitleEmbeddingConfig.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;
  char v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v12[2] = v1[3];
  v12[3] = v7;
  v8 = v1[4];
  v12[0] = v1[5];
  v12[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44AB52C();
  sub_1A4691D40();
  v16 = 0;
  v9 = v12[4];
  sub_1A4691854();
  if (!v9)
  {
    v10 = v12[0];
    v15 = 1;
    sub_1A4691878();
    v14 = 2;
    sub_1A4691854();
    v12[5] = v10;
    v13 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A44351D8(&qword_1ED23EAB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMTitleEmbeddingConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A44AB52C();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_1A4691788();
  v11 = v10;
  v26 = 1;
  swift_bridgeObjectRetain();
  v22 = sub_1A46917AC();
  v25 = 2;
  v19 = sub_1A4691788();
  v14 = v13;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v24 = 3;
  sub_1A44351D8(&qword_1ED23E750, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  v21 = v14;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  v16 = v21;
  v17 = v19;
  a2[2] = v22;
  a2[3] = v17;
  a2[4] = v16;
  a2[5] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A44A7670(_QWORD *a1)
{
  return REMTitleEmbeddingConfig.encode(to:)(a1);
}

uint64_t sub_1A44A7684@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMTitleEmbeddingConfig.init(from:)(a1, a2);
}

_QWORD *static REMTitleEmbedding.detectLanguages(string:threshold:)(double a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CCE148]), sel_init);
  v3 = (void *)sub_1A469087C();
  objc_msgSend(v2, sel_processString_, v3);

  v4 = sub_1A46910C8();
  sub_1A44ABED8(v4, a1);
  swift_bridgeObjectRelease();
  v5 = swift_bridgeObjectRetain();
  v6 = sub_1A4459EC0(v5);
  swift_release();
  v8 = v6;
  sub_1A44AAED0(&v8);
  swift_release();

  return v8;
}

id REMSentence2VecTitleEmbedding.lang.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t REMSentence2VecTitleEmbedding.revision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t REMSentence2VecTitleEmbedding.__allocating_init(lang:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  REMSentence2VecTitleEmbedding.init(lang:)(a1);
  return v2;
}

uint64_t REMSentence2VecTitleEmbedding.init(lang:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;

  v2 = v1;
  *(_QWORD *)(v2 + 16) = a1;
  v4 = (void *)objc_opt_self();
  v5 = a1;
  v6 = objc_msgSend(v4, sel_sentenceEmbeddingForLanguage_, v5);
  if (v6)
  {
    *(_QWORD *)(v2 + 32) = v6;
    v7 = v6;
    v8 = objc_msgSend(v7, sel_revision);

    *(_QWORD *)(v2 + 24) = v8;
  }
  else
  {
    v9 = (void *)objc_opt_self();
    sub_1A4691410();
    sub_1A4690984();
    type metadata accessor for NLLanguage(0);
    sub_1A4691590();
    v10 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_internalErrorWithDebugDescription_, v10);

    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t REMSentence2VecTitleEmbedding.__allocating_init(from:)()
{
  return sub_1A44ACD5C();
}

void *REMSentence2VecTitleEmbedding.__allocating_init(from:)()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  sub_1A4690828();
  swift_bridgeObjectRelease();
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_dominantLanguageForString_, v1);

  if (v2)
  {
    v3 = (void *)swift_allocObject();
    REMSentence2VecTitleEmbedding.init(lang:)(v2);
  }
  else
  {
    v4 = (void *)objc_opt_self();
    v3 = (void *)sub_1A469087C();
    objc_msgSend(v4, sel_internalErrorWithDebugDescription_, v3);

    swift_willThrow();
  }
  return v3;
}

int64_t sub_1A44A7AD8(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t REMSentence2VecTitleEmbedding.vector(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  _QWORD *v21;

  if (!a2)
  {
    v10 = (_QWORD *)sub_1A44A6400((unint64_t)objc_msgSend(*(id *)(v2 + 32), sel_dimension), 0.0);
    swift_bridgeObjectRetain();
    v11 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A4438D64(0, v10[2] + 1, 1, v10);
    v13 = v11[2];
    v12 = v11[3];
    if (v13 >= v12 >> 1)
      v11 = sub_1A4438D64((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
    v11[2] = v13 + 1;
    v14 = &v11[v13];
    goto LABEL_18;
  }
  v3 = *(void **)(v2 + 32);
  v4 = sub_1A4690F84();
  if (!v4)
  {
    v15 = (_QWORD *)sub_1A44A6400((unint64_t)objc_msgSend(v3, sel_dimension), 0.0);
    swift_bridgeObjectRetain();
    v11 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A4438D64(0, v15[2] + 1, 1, v15);
    v16 = v11[2];
    v17 = v11[3];
    v18 = v16 + 1;
    if (v16 >= v17 >> 1)
    {
      v19 = v11;
      v20 = v11[2];
      v21 = sub_1A4438D64((_QWORD *)(v17 > 1), v16 + 1, 1, v19);
      v16 = v20;
      v11 = v21;
    }
    v11[2] = v18;
    v14 = &v11[v16];
LABEL_18:
    v14[4] = 0x3FF0000000000000;
    swift_bridgeObjectRelease();
    type metadata accessor for RDVector();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v11;
    v8 = v11[2];
    goto LABEL_19;
  }
  v5 = (_QWORD *)v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v5 = sub_1A4438D64(0, v5[2] + 1, 1, v5);
  v7 = v5[2];
  v6 = v5[3];
  v8 = v7 + 1;
  if (v7 >= v6 >> 1)
    v5 = sub_1A4438D64((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v8;
  v5[v7 + 4] = 0;
  type metadata accessor for RDVector();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
LABEL_19:
  *(_QWORD *)(result + 24) = v8;
  return result;
}

void __swiftcall REMSentence2VecTitleEmbedding.config()(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr)
{
  sub_1A44A8C78(0x65636E65746E6553, 0xEC00000063655632, &retstr->majorLanguage._countAndFlagsBits);
}

uint64_t REMSentence2VecTitleEmbedding.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMSentence2VecTitleEmbedding.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_1A44A7D84()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1A44A7D90()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_1A44A7D9C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = REMSentence2VecTitleEmbedding.init(lang:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A44A7DF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A44ACD5C();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A44A7E18(uint64_t a1, uint64_t a2)
{
  return REMSentence2VecTitleEmbedding.vector(for:)(a1, a2);
}

uint64_t sub_1A44A7E38@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v5 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = v5;
  strcpy((char *)(a1 + 24), "Sentence2Vec");
  v7 = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(a1 + 37) = 0;
  *(_WORD *)(a1 + 38) = -5120;
  *(_QWORD *)(a1 + 40) = v7;
  return result;
}

uint64_t sub_1A44A7E94(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  void *v5;
  void **v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  void *v28;

  v3 = v2;
  *(_QWORD *)(v2 + 48) = 22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DDD0);
  inited = swift_initStackObject();
  v5 = (void *)*MEMORY[0x1E0CCE050];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CCE050];
  v6 = (void **)MEMORY[0x1E0CCE098];
  *(_OWORD *)(inited + 16) = xmmword_1A4698FB0;
  v7 = *v6;
  v8 = (void *)*MEMORY[0x1E0CCE0F8];
  *(_QWORD *)(inited + 40) = *v6;
  *(_QWORD *)(inited + 48) = v8;
  v9 = (void *)*MEMORY[0x1E0CCE028];
  *(_QWORD *)(inited + 56) = *MEMORY[0x1E0CCE028];
  *(_QWORD *)(inited + 64) = v9;
  v10 = (void *)*MEMORY[0x1E0CCE080];
  v11 = (void *)*MEMORY[0x1E0CCE088];
  *(_QWORD *)(inited + 72) = *MEMORY[0x1E0CCE080];
  *(_QWORD *)(inited + 80) = v11;
  v12 = (void *)*MEMORY[0x1E0CCE060];
  *(_QWORD *)(inited + 88) = *MEMORY[0x1E0CCE060];
  v13 = v9;
  v14 = v5;
  v15 = v7;
  v16 = v8;
  v17 = v10;
  v18 = v11;
  v19 = v12;
  v20 = sub_1A462EF98(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  swift_arrayDestroy();
  *(_QWORD *)(v3 + 56) = v20;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  v21 = (void *)objc_opt_self();
  v22 = a2;
  v23 = a1;
  v24 = objc_msgSend(v21, sel_wordEmbeddingForLanguage_, v23);
  if (v24)
  {
    *(_QWORD *)(v3 + 32) = v24;
    v25 = v24;
    v26 = objc_msgSend(v25, sel_revision);

    *(_QWORD *)(v3 + 24) = v26;
  }
  else
  {
    v27 = (void *)objc_opt_self();
    sub_1A4691410();
    sub_1A4690984();
    type metadata accessor for NLLanguage(0);
    sub_1A4691590();
    sub_1A4690984();
    v28 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_internalErrorWithDebugDescription_, v28);

    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t REMUniversalGrammarTitleEmbedding.__allocating_init(from:)()
{
  return sub_1A44ACEA4();
}

{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  sub_1A4690828();
  swift_bridgeObjectRelease();
  v2 = (void *)objc_opt_self();
  v3 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_dominantLanguageForString_, v3);

  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB68);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1A4696430;
    v6 = (void *)*MEMORY[0x1E0CCE0B0];
    v7 = (void *)*MEMORY[0x1E0CCE0D0];
    *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0CCE0B0];
    *(_QWORD *)(v5 + 40) = v7;
    v8 = objc_allocWithZone(MEMORY[0x1E0CCE168]);
    type metadata accessor for NLTagScheme(0);
    v9 = v6;
    v10 = v7;
    v11 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v8, sel_initWithTagSchemes_, v11);

    v1 = swift_allocObject();
    sub_1A44A7E94(v4, v12);
  }
  else
  {
    v13 = (void *)objc_opt_self();
    v14 = (void *)sub_1A469087C();
    objc_msgSend(v13, sel_internalErrorWithDebugDescription_, v14);

    swift_willThrow();
  }
  return v1;
}

uint64_t REMUniversalGrammarTitleEmbedding.__allocating_init(lang:)(void *a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB68);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A4695C10;
  v3 = (void *)*MEMORY[0x1E0CCE0D0];
  *(_QWORD *)(v2 + 32) = *MEMORY[0x1E0CCE0D0];
  v4 = objc_allocWithZone(MEMORY[0x1E0CCE168]);
  type metadata accessor for NLTagScheme(0);
  v5 = v3;
  v6 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_initWithTagSchemes_, v6);

  v8 = swift_allocObject();
  sub_1A44A7E94(a1, v7);
  return v8;
}

uint64_t _s19ReminderKitInternal29REMSentence2VecTitleEmbeddingC11closestWord3forSSSgAA8RDVectorC_tF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  v5 = sub_1A44A7AD8((int64_t)objc_msgSend(v4, sel_dimension), v3);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  if ((v10 & 1) == 0)
    goto LABEL_2;
  sub_1A4691A70();
  swift_unknownObjectRetain_n();
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_unknownObjectRelease();
    v12 = MEMORY[0x1E0DEE9D8];
  }
  v13 = *(_QWORD *)(v12 + 16);
  swift_release();
  if (__OFSUB__(v11 >> 1, v9))
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v13 != (v11 >> 1) - v9)
  {
LABEL_14:
    swift_unknownObjectRelease();
LABEL_2:
    sub_1A4459FC4(v5, v7, v9, v11);
    goto LABEL_9;
  }
  if (!swift_dynamicCastClass())
    swift_unknownObjectRelease();
LABEL_9:
  swift_unknownObjectRelease();
  v14 = sub_1A4690F9C();
  swift_release();
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = *(_QWORD *)(v14 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = 0;
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t REMUniversalGrammarTitleEmbedding.vector(for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32[3];
  unint64_t v33;

  v3 = v2;
  if (a2)
  {
    v6 = *(void **)(v2 + 40);
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1A469087C();
    objc_msgSend(v6, sel_setString_, v7);

    v33 = MEMORY[0x1E0DEE9D8];
    MEMORY[0x1E0C80A78](v8);
    sub_1A4691110();
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      v14 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if (v14)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      swift_bridgeObjectRelease();
LABEL_16:
      v20 = swift_bridgeObjectRetain();
      v21 = Array<A>.average()(v20);
      swift_bridgeObjectRelease();
      if (v21)
      {
        swift_beginAccess();
        v22 = *(_QWORD **)(v21 + 16);
        swift_bridgeObjectRetain_n();
        v23 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v23 = sub_1A4438D64(0, v22[2] + 1, 1, v22);
        v25 = v23[2];
        v24 = v23[3];
        if (v25 >= v24 >> 1)
          v23 = sub_1A4438D64((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
        v23[2] = v25 + 1;
        v23[v25 + 4] = 0;
        swift_bridgeObjectRelease();
        swift_release();
        type metadata accessor for RDVector();
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = v23;
        v26 = v23[2];
      }
      else
      {
        v27 = (_QWORD *)sub_1A44A6400((unint64_t)objc_msgSend(*(id *)(v3 + 32), sel_dimension), 0.0);
        swift_bridgeObjectRetain();
        v28 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v28 = sub_1A4438D64(0, v27[2] + 1, 1, v27);
        v30 = v28[2];
        v29 = v28[3];
        if (v30 >= v29 >> 1)
          v28 = sub_1A4438D64((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
        v28[2] = v30 + 1;
        v28[v30 + 4] = 0x3FF0000000000000;
        swift_bridgeObjectRelease();
        type metadata accessor for RDVector();
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = v28;
        v26 = v28[2];
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)(v13 + 24) = v26;
      return v13;
    }
    if (qword_1EE71C008 != -1)
      swift_once();
    v15 = sub_1A4690318();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EE71DB28);
    swift_bridgeObjectRetain();
    v16 = sub_1A469030C();
    v17 = sub_1A4690FF0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v32[0] = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A4431120(a1, a2, v32);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v16, v17, "Failed vectorizing title: %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v19, -1, -1);
      MEMORY[0x1A85A0114](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_16;
  }
  v9 = (_QWORD *)sub_1A44A6400((unint64_t)objc_msgSend(*(id *)(v2 + 32), sel_dimension), 0.0);
  swift_bridgeObjectRetain();
  v10 = v9;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_1A4438D64(0, v9[2] + 1, 1, v9);
  v12 = v10[2];
  v11 = v10[3];
  if (v12 >= v11 >> 1)
    v10 = sub_1A4438D64((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
  v10[2] = v12 + 1;
  v10[v12 + 4] = 0x3FF0000000000000;
  swift_bridgeObjectRelease();
  type metadata accessor for RDVector();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v10[2];
  return v13;
}

uint64_t sub_1A44A8B18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (!a1)
    return 0;
  v8 = *(_QWORD *)(a4 + 56);
  v9 = a1;
  if ((sub_1A4462540((uint64_t)v9, v8) & 1) != 0)
  {
    v10 = sub_1A4690A5C();
    MEMORY[0x1A859E164](v10);
    swift_bridgeObjectRelease();
    v11 = sub_1A4690F84();
    swift_bridgeObjectRelease();
    if (v11)
    {
      type metadata accessor for RDVector();
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v11;
      *(_QWORD *)(v12 + 24) = *(_QWORD *)(v11 + 16);
      MEMORY[0x1A859E3E0]();
      if (*(_QWORD *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A4690BDC();
      sub_1A4690C18();
      sub_1A4690BB8();
      v11 = 1;
    }
  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void __swiftcall REMUniversalGrammarTitleEmbedding.config()(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr)
{
  sub_1A44A8C78(0xD000000000000010, 0x80000001A46BBE50, &retstr->majorLanguage._countAndFlagsBits);
}

uint64_t sub_1A44A8C78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v8 = *(_QWORD *)(v3 + 24);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v8;
  a3[3] = a1;
  v10 = MEMORY[0x1E0DEE9D8];
  a3[4] = a2;
  a3[5] = v10;
  return result;
}

id *REMUniversalGrammarTitleEmbedding.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMUniversalGrammarTitleEmbedding.__deallocating_deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44A8D34@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB68);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1A4695C10;
  v6 = (void *)*MEMORY[0x1E0CCE0D0];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0CCE0D0];
  v7 = objc_allocWithZone(MEMORY[0x1E0CCE168]);
  type metadata accessor for NLTagScheme(0);
  v8 = v6;
  v9 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v7, sel_initWithTagSchemes_, v9);

  v11 = swift_allocObject();
  result = sub_1A44A7E94(a1, v10);
  if (!v2)
    *a2 = v11;
  return result;
}

uint64_t sub_1A44A8E30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A44ACEA4();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A44A8E58(uint64_t a1, unint64_t a2)
{
  return REMUniversalGrammarTitleEmbedding.vector(for:)(a1, a2);
}

uint64_t sub_1A44A8E78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  result = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v5 = *(_QWORD *)(v3 + 24);
  *a1 = result;
  a1[1] = v6;
  a1[2] = v5;
  a1[3] = 0xD000000000000010;
  v7 = MEMORY[0x1E0DEE9D8];
  a1[4] = 0x80000001A46BBE50;
  a1[5] = v7;
  return result;
}

uint64_t REMFilteredTitleEmbedding.revision.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

id REMFilteredTitleEmbedding.lang.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t REMFilteredTitleEmbedding.stopWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A44A8EE8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;

  v3 = v2;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CCE180]), sel_initWithUnit_, 0);
  *(_QWORD *)(v3 + 48) = v6;
  *(_QWORD *)(v3 + 24) = a1;
  v7 = a1;
  objc_msgSend(v6, sel_setLanguage_, v7);
  v8 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, v7);
  if (v8)
  {
    *(_QWORD *)(v3 + 32) = v8;
    v9 = v8;
    v10 = objc_msgSend(v9, sel_revision);

    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 40) = a2;
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = (void *)objc_opt_self();
    sub_1A4691410();
    sub_1A4690984();
    type metadata accessor for NLLanguage(0);
    sub_1A4691590();
    v12 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_internalErrorWithDebugDescription_, v12);

    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v3;
}

uint64_t REMFilteredTitleEmbedding.__allocating_init(from:)()
{
  return sub_1A44AD090();
}

uint64_t REMFilteredTitleEmbedding.__allocating_init(lang:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1A44A8EE8(a1, MEMORY[0x1E0DEE9E8]);
  return v2;
}

uint64_t REMFilteredTitleEmbedding.__allocating_init(from:stopWordThresholdByPercent:)(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  REMFilteredTitleEmbedding.init(from:stopWordThresholdByPercent:)(a1, a2);
  return v4;
}

uint64_t REMFilteredTitleEmbedding.init(from:stopWordThresholdByPercent:)(uint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  NSObject *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  uint64_t v55;
  id v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  unint64_t v65;
  NSObject *v66;
  uint64_t *v67;
  void *v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  Class isa;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v99;
  char v100;
  unint64_t v101;
  Class v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  unint64_t v113;
  Class v114;
  _BOOL8 v115;
  uint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  uint64_t *v120;
  Class v121;
  BOOL v122;
  objc_class *v123;
  uint64_t *v124;
  Class v125;
  objc_class *v126;
  double v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t result;
  NSObject *v133;
  id v134;
  uint64_t v135;
  char *v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  _QWORD *v143;
  uint64_t v144[2];
  uint64_t v145;

  v3 = v2;
  v135 = *v3;
  v139 = sub_1A46901F8();
  v6 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v136 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  MEMORY[0x1E0C80A78](v8);
  v142 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = (_QWORD *)sub_1A4690210();
  v141 = *(v143 - 1);
  MEMORY[0x1E0C80A78](v143);
  v140 = (char *)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[6] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CCE180]), sel_initWithUnit_, 0);
  v138 = a1;
  v144[0] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v11 = sub_1A4690828();
  v13 = v12;
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1A469087C();
  v16 = objc_msgSend(v14, sel_dominantLanguageForString_, v15);

  v137 = v3;
  if (v16)
  {
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, v16);
    if (v17)
    {
      v3[4] = (uint64_t)v17;
      v18 = v17;
      v19 = v16;
      v134 = v18;
      v3[2] = (uint64_t)objc_msgSend(v134, sel_revision);
      v3[3] = (uint64_t)v19;
      v20 = (void *)v3[6];
      v21 = v19;
      objc_msgSend(v20, sel_setLanguage_, v21);
      if (qword_1EE71C008 == -1)
        goto LABEL_4;
      goto LABEL_98;
    }
    if (qword_1EE71C008 != -1)
      swift_once();
    v34 = sub_1A4690318();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EE71DB28);
    v35 = v16;
    v36 = sub_1A469030C();
    v37 = sub_1A4690FF0();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v144[0] = v39;
      *(_DWORD *)v38 = 136315138;
      v134 = v38 + 4;
      v40 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v145 = sub_1A4431120(v40, v41, v144);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v36, v37, "failed loading word embedding for detected language %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v39, -1, -1);
      MEMORY[0x1A85A0114](v38, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_1EE71C008 != -1)
      swift_once();
    v29 = sub_1A4690318();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EE71DB28);
    swift_bridgeObjectRetain();
    v30 = sub_1A469030C();
    v31 = sub_1A4690FF0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v144[0] = v33;
      *(_DWORD *)v32 = 136315138;
      swift_bridgeObjectRetain();
      v145 = sub_1A4431120(v11, v13, v144);
      v3 = v137;
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v30, v31, "failed detecting language %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  v42 = (uint64_t)v142;
  v43 = v139;
  v44 = v140;
  v45 = v136;
  sub_1A469018C();
  sub_1A4690204();
  sub_1A46901D4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v45, v43);
  v46 = sub_1A4690144();
  v47 = *(_QWORD *)(v46 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v42, 1, v46) == 1)
  {
    sub_1A44AD20C(v42);
    (*(void (**)(char *, _QWORD *))(v141 + 8))(v44, v143);
    swift_bridgeObjectRelease();
    v48 = (void *)objc_opt_self();
    v49 = (void *)sub_1A469087C();
    objc_msgSend(v48, sel_internalErrorWithDebugDescription_, v49);

    swift_willThrow();
LABEL_25:

    swift_deallocPartialClassInstance();
    return (uint64_t)v3;
  }
  sub_1A4690138();
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v42, v46);
  (*(void (**)(char *, _QWORD *))(v141 + 8))(v44, v143);
  v50 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v51 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, v50);
  if (!v51)
  {
    swift_bridgeObjectRelease();
    v62 = (void *)objc_opt_self();
    v144[0] = 0;
    v144[1] = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    v145 = (uint64_t)v50;
    type metadata accessor for NLLanguage(0);
    sub_1A4691590();
    sub_1A4690984();
    v63 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v62, sel_internalErrorWithDebugDescription_, v63);

    swift_willThrow();
    goto LABEL_25;
  }
  v3[4] = (uint64_t)v51;
  v52 = v51;
  v3[2] = (uint64_t)objc_msgSend(v52, sel_revision);
  v3[3] = (uint64_t)v50;
  v53 = (void *)v3[6];
  v54 = v50;
  objc_msgSend(v53, sel_setLanguage_, v54);
  if (qword_1EE71C008 != -1)
    swift_once();
  v55 = sub_1A4690318();
  __swift_project_value_buffer(v55, (uint64_t)qword_1EE71DB28);
  v56 = v54;
  v21 = sub_1A469030C();
  v57 = sub_1A4691008();
  if (os_log_type_enabled(v21, v57))
  {
    v143 = v52;
    v58 = (uint8_t *)swift_slowAlloc();
    v59 = swift_slowAlloc();
    v144[0] = v59;
    *(_DWORD *)v58 = 136315138;
    v60 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v145 = sub_1A4431120(v60, v61, v144);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v21, v57, "loaded word embedding for local lang %s", v58, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v59, -1, -1);
    MEMORY[0x1A85A0114](v58, -1, -1);

  }
  else
  {

  }
  v23 = 0;
  v134 = 0;
LABEL_28:
  v133 = v23;
  v135 = *(_QWORD *)(v138 + 16);
  if (!v135)
  {
    v127 = 0.0;
LABEL_88:
    v128 = swift_bridgeObjectRelease();
    MEMORY[0x1E0C80A78](v128);
    *(double *)&(&v133)[-2] = v127;
    *(double *)&(&v133)[-1] = a2;
    v129 = swift_bridgeObjectRetain();
    v130 = sub_1A44AD43C(v129, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A44AD24C, (uint64_t)&(&v133)[-4]);
    swift_bridgeObjectRelease();
    v131 = sub_1A446B668(v130);

    v3 = v137;
    v137[5] = v131;
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  v136 = (char *)(v138 + 32);
  v64 = swift_bridgeObjectRetain();
  v65 = 0;
  v66 = MEMORY[0x1E0DEE9E0];
  while (1)
  {
    if (v65 >= *(_QWORD *)(v64 + 16))
    {
LABEL_97:
      __break(1u);
LABEL_98:
      swift_once();
LABEL_4:
      v22 = sub_1A4690318();
      __swift_project_value_buffer(v22, (uint64_t)qword_1EE71DB28);
      v23 = v21;
      v21 = sub_1A469030C();
      v24 = sub_1A4691008();
      if (os_log_type_enabled(v21, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v144[0] = v26;
        *(_DWORD *)v25 = 136315138;
        v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v145 = sub_1A4431120(v27, v28, v144);
        sub_1A46911D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v21, v24, "loaded word embedding for detected language %s", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v26, -1, -1);
        MEMORY[0x1A85A0114](v25, -1, -1);

      }
      else
      {

      }
      goto LABEL_28;
    }
    v67 = v137;
    v139 = v65;
    v68 = (void *)v137[6];
    swift_bridgeObjectRetain();
    v69 = v68;
    v70 = (void *)sub_1A469087C();
    objc_msgSend(v69, sel_setString_, v70, v133);

    v21 = (id)v67[6];
    v71 = sub_1A4690FA8();

    v145 = MEMORY[0x1E0DEE9E8];
    v72 = *(_QWORD *)(v71 + 16);
    if (v72)
    {
      v73 = v66;
      v74 = v71 + 40;
      do
      {
        v75 = sub_1A4690A5C();
        v76 = MEMORY[0x1A859E164](v75);
        v78 = v77;
        swift_bridgeObjectRelease();
        v21 = &v145;
        sub_1A4465F6C(v144, v76, v78);
        swift_bridgeObjectRelease();
        v74 += 16;
        --v72;
      }
      while (v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v79 = (char *)v145;
      v66 = v73;
    }
    else
    {
      v79 = (char *)MEMORY[0x1E0DEE9E8];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v80 = 0;
    ++v139;
    v140 = v79;
    v81 = *((_QWORD *)v79 + 7);
    v142 = v79 + 56;
    v82 = 1 << v79[32];
    v83 = v82 < 64 ? ~(-1 << v82) : -1;
    v84 = v83 & v81;
    v143 = (_QWORD *)((unint64_t)(v82 + 63) >> 6);
    if ((v83 & v81) != 0)
      break;
LABEL_45:
    v87 = v80 + 1;
    if (__OFADD__(v80, 1))
      goto LABEL_91;
    if (v87 < (uint64_t)v143)
    {
      v88 = *(_QWORD *)&v142[8 * v87];
      ++v80;
      if (v88)
        goto LABEL_58;
      v80 = v87 + 1;
      if (v87 + 1 < (uint64_t)v143)
      {
        v88 = *(_QWORD *)&v142[8 * v80];
        if (v88)
          goto LABEL_58;
        v80 = v87 + 2;
        if (v87 + 2 < (uint64_t)v143)
        {
          v88 = *(_QWORD *)&v142[8 * v80];
          if (v88)
            goto LABEL_58;
          v89 = v87 + 3;
          if (v89 < (uint64_t)v143)
          {
            v88 = *(_QWORD *)&v142[8 * v89];
            if (v88)
            {
              v80 = v89;
LABEL_58:
              v84 = (v88 - 1) & v88;
              v86 = __clz(__rbit64(v88)) + (v80 << 6);
              goto LABEL_59;
            }
            while (1)
            {
              v80 = v89 + 1;
              if (__OFADD__(v89, 1))
                goto LABEL_96;
              if (v80 >= (uint64_t)v143)
                break;
              v88 = *(_QWORD *)&v142[8 * v80];
              ++v89;
              if (v88)
                goto LABEL_58;
            }
          }
        }
      }
    }
    swift_release();
    v64 = v138;
    v65 = v139;
    if (v139 == v135)
    {
      swift_bridgeObjectRelease();
      v127 = (double)*(uint64_t *)(v138 + 16);
      goto LABEL_88;
    }
  }
  while (1)
  {
    while (1)
    {
      v85 = __clz(__rbit64(v84));
      v84 &= v84 - 1;
      v86 = v85 | (v80 << 6);
LABEL_59:
      v90 = (uint64_t *)(*((_QWORD *)v79 + 6) + 16 * v86);
      v92 = *v90;
      v91 = v90[1];
      isa = v66[2].isa;
      swift_bridgeObjectRetain();
      if (!isa)
        break;
      v21 = v66;
      v94 = sub_1A443E4C8(v92, v91);
      if ((v95 & 1) == 0)
        break;
      v96 = *((_QWORD *)v66[7].isa + v94);
      v97 = v96 + 1;
      if (__OFADD__(v96, 1))
        goto LABEL_93;
      v141 = v80;
      v21 = v66;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v144[0] = (uint64_t)v21;
      v99 = v92;
      v101 = sub_1A443E4C8(v92, v91);
      v102 = v21[2].isa;
      v103 = (v100 & 1) == 0;
      v104 = (uint64_t)v102 + v103;
      if (__OFADD__(v102, v103))
        goto LABEL_94;
      v105 = v100;
      if ((uint64_t)v21[3].isa >= v104)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v66 = v144[0];
          if ((v100 & 1) == 0)
            goto LABEL_82;
        }
        else
        {
          v21 = v144;
          sub_1A44472A8();
          v66 = v144[0];
          if ((v105 & 1) == 0)
            goto LABEL_82;
        }
      }
      else
      {
        sub_1A4440FA8(v104, isUniquelyReferenced_nonNull_native);
        v21 = v144[0];
        v106 = sub_1A443E4C8(v99, v91);
        if ((v105 & 1) != (v107 & 1))
          goto LABEL_99;
        v101 = v106;
        v66 = v144[0];
        if ((v105 & 1) == 0)
        {
LABEL_82:
          v66[(v101 >> 6) + 8].isa = (Class)((uint64_t)v66[(v101 >> 6) + 8].isa | (1 << v101));
          v124 = (uint64_t *)((char *)v66[6].isa + 16 * v101);
          *v124 = v99;
          v124[1] = v91;
          *((_QWORD *)v66[7].isa + v101) = v97;
          v125 = v66[2].isa;
          v122 = __OFADD__(v125, 1);
          v126 = (Class)((char *)v125 + 1);
          if (v122)
            goto LABEL_95;
          v66[2].isa = v126;
          swift_bridgeObjectRetain();
          goto LABEL_84;
        }
      }
      *((_QWORD *)v66[7].isa + v101) = v97;
LABEL_84:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v79 = v140;
      v80 = v141;
      if (!v84)
        goto LABEL_45;
    }
    v108 = v79;
    v109 = v80;
    v21 = v66;
    v110 = swift_isUniquelyReferenced_nonNull_native();
    v144[0] = (uint64_t)v21;
    v111 = v92;
    v113 = sub_1A443E4C8(v92, v91);
    v114 = v21[2].isa;
    v115 = (v112 & 1) == 0;
    v116 = (uint64_t)v114 + v115;
    if (__OFADD__(v114, v115))
    {
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v117 = v112;
    if ((uint64_t)v21[3].isa < v116)
      break;
    if ((v110 & 1) != 0)
    {
      v66 = v144[0];
      if ((v112 & 1) != 0)
        goto LABEL_42;
    }
    else
    {
      v21 = v144;
      sub_1A44472A8();
      v66 = v144[0];
      if ((v117 & 1) != 0)
      {
LABEL_42:
        *((_QWORD *)v66[7].isa + v113) = 1;
        goto LABEL_43;
      }
    }
LABEL_74:
    v66[(v113 >> 6) + 8].isa = (Class)((uint64_t)v66[(v113 >> 6) + 8].isa | (1 << v113));
    v120 = (uint64_t *)((char *)v66[6].isa + 16 * v113);
    *v120 = v111;
    v120[1] = v91;
    *((_QWORD *)v66[7].isa + v113) = 1;
    v121 = v66[2].isa;
    v122 = __OFADD__(v121, 1);
    v123 = (Class)((char *)v121 + 1);
    if (v122)
      goto LABEL_92;
    v66[2].isa = v123;
    swift_bridgeObjectRetain();
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v80 = v109;
    v79 = v108;
    if (!v84)
      goto LABEL_45;
  }
  sub_1A4440FA8(v116, v110);
  v21 = v144[0];
  v118 = sub_1A443E4C8(v111, v91);
  if ((v117 & 1) == (v119 & 1))
  {
    v113 = v118;
    v66 = v144[0];
    if ((v117 & 1) != 0)
      goto LABEL_42;
    goto LABEL_74;
  }
LABEL_99:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t REMFilteredTitleEmbedding.vector(for:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  BOOL v26;
  unint64_t v27;
  id v28;
  _QWORD *v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  BOOL v72;
  uint64_t v73;
  _QWORD *v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  unint64_t v87;
  uint8_t *v88;
  uint64_t v89;
  _QWORD v90[4];
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[11];
  uint64_t v98;
  unint64_t v99;

  if (!a2)
  {
    v25 = objc_msgSend(*(id *)(v2 + 32), sel_dimension);
    v26 = __OFADD__(v25, 1);
    v27 = (unint64_t)v25 + 1;
    if (v26)
    {
      __break(1u);
LABEL_23:
      swift_bridgeObjectRelease();
LABEL_74:
      swift_bridgeObjectRelease();
      v4 = v92;
      v79 = v94;
      goto LABEL_75;
    }
    goto LABEL_25;
  }
  v4 = a2;
  v6 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    v28 = objc_msgSend(*(id *)(v2 + 32), sel_dimension);
    v26 = __OFADD__(v28, 1);
    v27 = (unint64_t)v28 + 1;
    if (v26)
    {
      __break(1u);
      goto LABEL_93;
    }
LABEL_25:
    v29 = (_QWORD *)sub_1A44A6400(v27, 0.0);
    swift_bridgeObjectRetain();
    v30 = v29;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1A4438D64(0, v29[2] + 1, 1, v29);
    v32 = v30[2];
    v31 = v30[3];
    if (v32 >= v31 >> 1)
      v30 = sub_1A4438D64((_QWORD *)(v31 > 1), v32 + 1, 1, v30);
    v30[2] = v32 + 1;
    v30[v32 + 4] = 0x3FF0000000000000;
    swift_bridgeObjectRelease();
    type metadata accessor for RDVector();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v30;
    *(_QWORD *)(v3 + 24) = v30[2];
    return v3;
  }
  swift_bridgeObjectRetain();
  v93 = a1;
  _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(a1, v4);
  v7 = v2;
  v8 = *(void **)(v2 + 48);
  v9 = (void *)sub_1A469087C();
  objc_msgSend(v8, sel_setString_, v9);

  v10 = sub_1A4690FA8();
  v99 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(v10 + 16);
  v96 = v7;
  if (v11)
  {
    v92 = v4;
    v94 = 0;
    v12 = 0;
    v13 = *(_QWORD *)(v7 + 40);
    v14 = -v11;
    v15 = v10 + 40;
    v16 = v10;
    v95 = v10;
    v91 = v10 + 40;
LABEL_7:
    v17 = v15 + 16 * v12++;
    while (1)
    {
      if ((unint64_t)(v12 - 1) >= *(_QWORD *)(v16 + 16))
      {
        __break(1u);
        goto LABEL_90;
      }
      v18 = sub_1A4690A5C();
      v19 = MEMORY[0x1A859E164](v18);
      v21 = v20;
      swift_bridgeObjectRelease();
      if ((sub_1A4462344(v19, v21, v13) & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v22 = sub_1A4690F84();
        if (v22)
        {
          v23 = v22;
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1A46908F4();
          swift_bridgeObjectRelease();
          v23 = sub_1A4690F84();
          swift_bridgeObjectRelease();
          if (!v23)
          {
            v94 = 1;
            v16 = v95;
            v15 = v91;
            if (v14 + v12)
              goto LABEL_7;
            swift_bridgeObjectRelease();
LABEL_91:
            swift_bridgeObjectRelease();
            v79 = 1;
            v4 = v92;
LABEL_75:
            v80 = Array<A>.average()(v99);
            swift_bridgeObjectRelease();
            if (v80)
            {
              swift_beginAccess();
              v81 = *(_QWORD *)(v80 + 16);
              swift_bridgeObjectRetain();
              swift_release();
            }
            else
            {
              v81 = sub_1A44A6400((unint64_t)objc_msgSend(*(id *)(v96 + 32), sel_dimension), 0.0);
            }
            if ((v79 & 1) != 0)
              v82 = &unk_1E4C0F940;
            else
              v82 = &unk_1E4C0F970;
            v98 = v81;
            sub_1A4458D6C((uint64_t)v82);
            v83 = v98;
            type metadata accessor for RDVector();
            v3 = swift_allocObject();
            *(_QWORD *)(v3 + 16) = v83;
            *(_QWORD *)(v3 + 24) = *(_QWORD *)(v83 + 16);
            if ((sub_1A46134B8() & 1) == 0)
            {
              swift_bridgeObjectRelease();
              return v3;
            }
            if (qword_1EE71C008 == -1)
            {
LABEL_83:
              v84 = sub_1A4690318();
              __swift_project_value_buffer(v84, (uint64_t)qword_1EE71DB28);
              swift_bridgeObjectRetain();
              v85 = sub_1A469030C();
              v86 = sub_1A4691008();
              if (os_log_type_enabled(v85, v86))
              {
                v87 = v4;
                v88 = (uint8_t *)swift_slowAlloc();
                v89 = swift_slowAlloc();
                v98 = v89;
                *(_DWORD *)v88 = 136315138;
                swift_bridgeObjectRetain();
                v97[10] = sub_1A4431120(v93, v87, &v98);
                sub_1A46911D0();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1A442D000, v85, v86, "title %s is mapped to all-zero vector", v88, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1A85A0114](v89, -1, -1);
                MEMORY[0x1A85A0114](v88, -1, -1);

              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              return v3;
            }
LABEL_93:
            swift_once();
            goto LABEL_83;
          }
        }
        type metadata accessor for RDVector();
        v24 = swift_allocObject();
        *(_QWORD *)(v24 + 16) = v23;
        *(_QWORD *)(v24 + 24) = *(_QWORD *)(v23 + 16);
        MEMORY[0x1A859E3E0]();
        if (*(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        sub_1A4690BB8();
        v16 = v95;
      }
      ++v12;
      v17 += 16;
      if (v14 + v12 == 1)
        goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v35 = v34;
  if (v33 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v35 == v36)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v38 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
    {
      v39 = swift_bridgeObjectRetain();
      v40 = v93;
      v41 = v4;
LABEL_46:
      v97[0] = 32;
      v97[1] = 0xE100000000000000;
      MEMORY[0x1E0C80A78](v39);
      v90[2] = v97;
      swift_bridgeObjectRetain();
      v53 = sub_1A44AAF38(0x7FFFFFFFFFFFFFFFLL, 1, sub_1A44AE038, (uint64_t)v90, v40, v41);
      swift_bridgeObjectRelease();
      v54 = *(_QWORD *)(v53 + 16);
      if (!v54)
      {
        swift_bridgeObjectRelease();
        v79 = 0;
        goto LABEL_75;
      }
      v92 = v4;
      v94 = 0;
      v55 = 0;
      v56 = *(_QWORD *)(v96 + 40);
      v95 = v53 + 32;
      v57 = v56 + 56;
      while (1)
      {
        while (1)
        {
          if (v55 >= *(_QWORD *)(v53 + 16))
          {
LABEL_90:
            __break(1u);
            goto LABEL_91;
          }
          v58 = v55++;
          v59 = (uint64_t *)(v95 + 32 * v58);
          v61 = v59[2];
          v60 = v59[3];
          v63 = *v59;
          v62 = v59[1];
          swift_bridgeObjectRetain();
          v64 = MEMORY[0x1A859E164](v63, v62, v61, v60);
          v66 = v65;
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v56 + 16))
          {
            sub_1A4691C8C();
            sub_1A4690948();
            v67 = sub_1A4691CC8();
            v68 = -1 << *(_BYTE *)(v56 + 32);
            v69 = v67 & ~v68;
            if (((*(_QWORD *)(v57 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) != 0)
              break;
          }
LABEL_65:
          v76 = sub_1A4690F84();
          if (v76)
          {
            v77 = v76;
            swift_bridgeObjectRelease();
LABEL_68:
            type metadata accessor for RDVector();
            v78 = swift_allocObject();
            *(_QWORD *)(v78 + 16) = v77;
            *(_QWORD *)(v78 + 24) = *(_QWORD *)(v77 + 16);
            MEMORY[0x1A859E3E0]();
            if (*(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_1A4690BDC();
            sub_1A4690C18();
            sub_1A4690BB8();
            if (v55 == v54)
              goto LABEL_74;
          }
          else
          {
            sub_1A46908F4();
            swift_bridgeObjectRelease();
            v77 = sub_1A4690F84();
            swift_bridgeObjectRelease();
            if (v77)
              goto LABEL_68;
            v94 = 1;
            if (v55 == v54)
              goto LABEL_91;
          }
        }
        v70 = *(_QWORD *)(v56 + 48);
        v71 = (_QWORD *)(v70 + 16 * v69);
        v72 = *v71 == v64 && v71[1] == v66;
        if (!v72 && (sub_1A4691A40() & 1) == 0)
        {
          v73 = ~v68;
          do
          {
            v69 = (v69 + 1) & v73;
            if (((*(_QWORD *)(v57 + ((v69 >> 3) & 0xFFFFFFFFFFFFF8)) >> v69) & 1) == 0)
              goto LABEL_65;
            v74 = (_QWORD *)(v70 + 16 * v69);
            v75 = *v74 == v64 && v74[1] == v66;
          }
          while (!v75 && (sub_1A4691A40() & 1) == 0);
        }
        swift_bridgeObjectRelease();
        if (v55 == v54)
          goto LABEL_74;
      }
    }
  }
  v42 = sub_1A4690954();
  v43 = MEMORY[0x1E0DEE9D8];
  if (!v42)
  {
LABEL_45:
    v97[0] = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4469630();
    v40 = sub_1A4690828();
    v41 = v52;
    v39 = swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  v44 = v42;
  v97[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1A445A8BC(0, v42 & ~(v42 >> 63), 0);
  if ((v44 & 0x8000000000000000) == 0)
  {
    v43 = v97[0];
    do
    {
      v46 = sub_1A4690A38();
      v48 = v47;
      if ((sub_1A46907F8() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v48 = 0xE100000000000000;
        v46 = 32;
      }
      v97[0] = v43;
      v50 = *(_QWORD *)(v43 + 16);
      v49 = *(_QWORD *)(v43 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1A445A8BC(v49 > 1, v50 + 1, 1);
        v43 = v97[0];
      }
      *(_QWORD *)(v43 + 16) = v50 + 1;
      v51 = v43 + 16 * v50;
      *(_QWORD *)(v51 + 32) = v46;
      *(_QWORD *)(v51 + 40) = v48;
      sub_1A4690960();
      --v44;
    }
    while (v44);
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

void __swiftcall REMFilteredTitleEmbedding.config()(ReminderKitInternal::REMTitleEmbeddingConfig *__return_ptr retstr)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  Swift::Int v6;
  uint64_t v7;
  _QWORD *v8;

  v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v5 = v4;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1A4459BD0(v7);
  swift_bridgeObjectRelease();
  retstr->majorLanguage._countAndFlagsBits = v3;
  retstr->majorLanguage._object = v5;
  retstr->revision = v6;
  retstr->currentMethod._countAndFlagsBits = 0xD000000000000011;
  retstr->currentMethod._object = (void *)0x80000001A46BBE70;
  retstr->stopWords._rawValue = v8;
}

id *REMFilteredTitleEmbedding.deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMFilteredTitleEmbedding.__deallocating_deinit()
{
  id *v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id sub_1A44AAD7C()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 24);
}

uint64_t sub_1A44AAD88@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = sub_1A44A8EE8(a1, MEMORY[0x1E0DEE9E8]);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A44AADE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_1A44AD090();
  if (!v1)
    *a1 = result;
  return result;
}

uint64_t sub_1A44AAE0C(uint64_t a1, unint64_t a2)
{
  return REMFilteredTitleEmbedding.vector(for:)(a1, a2);
}

uint64_t sub_1A44AAE2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;

  v3 = *v1;
  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v6 = v5;
  v7 = *(_QWORD *)(v3 + 16);
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1A4459BD0(v8);
  result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = 0xD000000000000011;
  a1[4] = 0x80000001A46BBE70;
  a1[5] = (uint64_t)v9;
  return result;
}

uint64_t sub_1A44AAEB0()
{
  return REMFilteredTitleEmbedding.closestWord(for:)();
}

uint64_t sub_1A44AAED0(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1A462EC40(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1A44AB570(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A44AAF38(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1A44AB3D4(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1A4690A38();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1A4690960();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1A4690960();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1A4690A5C();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1A44393EC(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1A44393EC((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1A4690960();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1A4690A5C();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1A44393EC(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1A44393EC((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1A469162C();
  __break(1u);
LABEL_42:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A44AB3D4(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1A4690A5C();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1A44393EC(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1A44393EC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1A469162C();
  __break(1u);
  return result;
}

unint64_t sub_1A44AB52C()
{
  unint64_t result;

  result = qword_1EE71DB58;
  if (!qword_1EE71DB58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698F54, &type metadata for REMTitleEmbeddingConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DB58);
  }
  return result;
}

uint64_t sub_1A44AB570(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  uint64_t v30;
  double *v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 8;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(double *)(v84 + 16 * i + 8);
        v89 = v86;
        v90 = v85;
        do
        {
          if (*(double *)v90 >= v88)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(_QWORD *)(v90 - 8) = v91;
          *(double *)v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_1A44ABC50((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1A462EBC8((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D0D8);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v16 < v15 == v19 >= *v17)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 16 * v10;
          v21 = 16 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v20;
              v25 = *(_QWORD *)(v11 + v21);
              v26 = *(_QWORD *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (double *)(v11 + 16 * v10);
      do
      {
        v29 = *(double *)(v11 + 16 * v10 + 8);
        v30 = v14;
        v31 = v28;
        do
        {
          if (*(v31 - 1) >= v29)
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *v31;
          *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_1A462E5B0((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v106;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_1A44ABC50((char *)(v11 + 16 * *(_QWORD *)v78), (char *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v106;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A44ABC50(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  char *v24;
  char *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[16 * v13];
      v23 = v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (char *)(a3 - 16);
        do
        {
          v20 = v19 + 16;
          if (*((double *)v6 - 1) >= *((double *)v18 - 1))
          {
            v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 16;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 16;
            if (v21 <= v7)
              break;
          }
          v19 -= 16;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1A462E918(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (*((double *)v15 + 1) >= *((double *)v6 + 1))
        {
          v4 = v15 + 16;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          v16 = v6 + 16;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

unint64_t *sub_1A44ABED8(uint64_t isStackAllocationSafe, double a2)
{
  uint64_t v2;
  unint64_t *v4;
  char v5;
  unint64_t v6;
  size_t v7;
  unint64_t *v8;
  void *v9;
  _QWORD v11[2];

  v4 = (unint64_t *)isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1A44AC03C((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, (uint64_t)v4, a2);
    if (v2)
      swift_willThrow();
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v4 = sub_1A44AC03C((unint64_t *)v9, v6, (uint64_t)v4, a2);
    MEMORY[0x1A85A0114](v9, -1, -1);
  }
  return v4;
}

unint64_t *sub_1A44AC03C(unint64_t *result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v11)
      return (unint64_t *)sub_1A44AC188(result, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        return (unint64_t *)sub_1A44AC188(result, a2, v5, a3);
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          return (unint64_t *)sub_1A44AC188(result, a2, v5, a3);
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    if (*(double *)(*(_QWORD *)(a3 + 56) + 8 * v13) >= a4)
    {
      *(unint64_t *)((char *)result + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v5++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1A44AC188(result, a2, v5, a3);
      }
    }
  }
  v16 = v14 + 3;
  if (v16 >= v11)
    return (unint64_t *)sub_1A44AC188(result, a2, v5, a3);
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return (unint64_t *)sub_1A44AC188(result, a2, v5, a3);
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A44AC188(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v33;
  uint64_t v34;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1EE71DDD8);
  result = sub_1A46916E0();
  v9 = result;
  v33 = a1;
  v34 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v34)
        return v9;
      v16 = v33[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v34)
          return v9;
        v16 = v33[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v34)
            return v9;
          v16 = v33[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v34)
              return v9;
            v16 = v33[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v34)
                  return v9;
                v16 = v33[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(void **)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4691C8C();
    v21 = v19;
    sub_1A4690948();
    v22 = sub_1A4691CC8();
    result = swift_bridgeObjectRelease();
    v23 = -1 << *(_BYTE *)(v9 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v25 == v28;
        if (v25 == v28)
          v25 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v30 == -1);
      v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    v31 = 8 * v26;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v31) = v21;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v31) = v20;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A44AC440(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB90);
  result = sub_1A46916E0();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1A44AC6E4(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1A44AC780(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1A44AC7EC(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1A44AC780(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1A44CC09C(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 < result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1A44AC7EC(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v10 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          v5 = v10;
        }
        return v5 << 16;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 != (a2 & 0xFFFFFFFFFFFFLL))
        {
          do
LABEL_9:
            v7 = *(_BYTE *)(v6 + v5--) & 0xC0;
          while (v7 == 128);
          ++v5;
        }
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1A46914E8();
        v5 = v12;
        if (v12 != v9)
          goto LABEL_9;
      }
      return v5 << 16;
    }
    v8 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v8 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v8)
      return sub_1A46913F8();
  }
  return result;
}

unint64_t sub_1A44AC8EC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  unint64_t result;
  unint64_t v9;
  uint64_t i;
  uint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  unint64_t v22;
  uint64_t v23;

  v7 = sub_1A44AC6E4(a1, a3, a4);
  result = sub_1A44AC6E4(a2, a3, a4);
  v9 = result >> 14;
  if (v7 >> 14 < result >> 14)
  {
    for (i = 0; ; ++i)
    {
      v11 = i + 1;
      if (__OFADD__(i, 1))
        break;
      if ((a4 & 0x1000000000000000) != 0)
      {
        result = sub_1A4690918();
        v7 = result;
      }
      else
      {
        v12 = v7 >> 16;
        if ((a4 & 0x2000000000000000) != 0)
        {
          v22 = a3;
          v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          v13 = *((unsigned __int8 *)&v22 + v12);
        }
        else
        {
          result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            result = sub_1A46914E8();
          v13 = *(unsigned __int8 *)(result + v12);
        }
        v14 = (char)v13;
        v15 = __clz(v13 ^ 0xFF) - 24;
        if (v14 >= 0)
          LOBYTE(v15) = 1;
        v7 = ((v12 + v15) << 16) | 5;
      }
      if (v9 <= v7 >> 14)
        return v11;
    }
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (v9 < v7 >> 14)
  {
    v11 = 0;
    while (!__OFSUB__(v11--, 1))
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        result = sub_1A4690924();
        v7 = result;
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v22 = a3;
          v23 = a4 & 0xFFFFFFFFFFFFFFLL;
          if ((*((_BYTE *)&v22 + (v7 >> 16) - 1) & 0xC0) == 0x80)
          {
            v20 = 0;
            do
              v21 = *((_BYTE *)&v22 + (v7 >> 16) + v20-- - 2) & 0xC0;
            while (v21 == 128);
            v19 = 1 - v20;
          }
          else
          {
            v19 = 1;
          }
        }
        else
        {
          result = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
          if ((a3 & 0x1000000000000000) == 0)
            result = sub_1A46914E8();
          v17 = 0;
          do
            v18 = *(_BYTE *)(result + (v7 >> 16) - 1 + v17--) & 0xC0;
          while (v18 == 128);
          v19 = -v17;
        }
        v7 = (v7 - (v19 << 16)) & 0xFFFFFFFFFFFF0000 | 5;
      }
      if (v9 >= v7 >> 14)
        return v11;
    }
    goto LABEL_36;
  }
  return 0;
}

uint64_t sub_1A44ACAFC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1A4691A40() & 1;
}

uint64_t sub_1A44ACB50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E614C726F6A616DLL && a2 == 0xED00006567617567;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697369766572 && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D746E6572727563 && a2 == 0xED0000646F687465 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64726F57706F7473 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A44ACD5C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1A469087C();
  type metadata accessor for REMSentence2VecTitleEmbedding();
  v2 = swift_allocObject();
  REMSentence2VecTitleEmbedding.init(lang:)(v1);
  if (v0)
  {
    v3 = (void *)objc_opt_self();
    sub_1A4691410();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v4 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_internalErrorWithDebugDescription_, v4, 0xD000000000000023, 0x80000001A46BDC20);

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1A44ACEA4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1A469087C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DB68);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1A4695C10;
  v3 = (void *)*MEMORY[0x1E0CCE0D0];
  *(_QWORD *)(v2 + 32) = *MEMORY[0x1E0CCE0D0];
  v4 = objc_allocWithZone(MEMORY[0x1E0CCE168]);
  type metadata accessor for NLTagScheme(0);
  v5 = v3;
  v6 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_initWithTagSchemes_, v6);

  type metadata accessor for REMUniversalGrammarTitleEmbedding();
  v8 = swift_allocObject();
  sub_1A44A7E94(v1, v7);
  if (v0)
  {
    v9 = (void *)objc_opt_self();
    sub_1A4691410();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_internalErrorWithDebugDescription_, v10, 0xD000000000000023, 0x80000001A46BDC20);

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1A44AD084(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A44A8B18(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD **)(v3 + 40));
}

uint64_t sub_1A44AD090()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A469087C();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1A446C748(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  type metadata accessor for REMFilteredTitleEmbedding();
  v4 = swift_allocObject();
  sub_1A44A8EE8(v1, v3);
  if (v0)
  {
    v5 = (void *)objc_opt_self();
    sub_1A4691410();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_internalErrorWithDebugDescription_, v6, 0xD000000000000023, 0x80000001A46BDC20);

    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A44AD20C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1A44AD24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (double)a3 / *(double *)(v3 + 16) > *(double *)(v3 + 24);
}

uint64_t sub_1A44AD264(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v22 = (unint64_t *)result;
  v6 = 0;
  v24 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v10)
      return sub_1A44AC440(v22, a2, v23, a3);
    v18 = *(_QWORD *)(v24 + 8 * v17);
    ++v6;
    if (!v18)
    {
      v6 = v17 + 1;
      if (v17 + 1 >= v10)
        return sub_1A44AC440(v22, a2, v23, a3);
      v18 = *(_QWORD *)(v24 + 8 * v6);
      if (!v18)
      {
        v6 = v17 + 2;
        if (v17 + 2 >= v10)
          return sub_1A44AC440(v22, a2, v23, a3);
        v18 = *(_QWORD *)(v24 + 8 * v6);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v9 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    LOBYTE(v16) = a4(v14, v15, v16);
    result = swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_1A44AC440(v22, a2, v23, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v10)
    return sub_1A44AC440(v22, a2, v23, a3);
  v18 = *(_QWORD *)(v24 + 8 * v19);
  if (v18)
  {
    v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v6 >= v10)
      return sub_1A44AC440(v22, a2, v23, a3);
    v18 = *(_QWORD *)(v24 + 8 * v6);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1A44AD43C(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1A44AD264((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1A44AD264((uint64_t)v11, v8, v6, a2);
    MEMORY[0x1A85A0114](v11, -1, -1);
  }
  return a3;
}

uint64_t _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  char v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v91;
  void *v92;
  unsigned int v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  char *v99;
  char *v100;
  char *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;

  v97 = sub_1A4691D58();
  v96 = *(_QWORD *)(v97 - 8);
  v4 = MEMORY[0x1E0C80A78](v97);
  v95 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v94 = (char *)&v91 - v6;
  v115 = sub_1A4691D94();
  v7 = *(_QWORD *)(v115 - 8);
  v8 = MEMORY[0x1E0C80A78](v115);
  v10 = (char *)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v111 = (char *)&v91 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v99 = (char *)&v91 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v91 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v101 = (char *)&v91 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v91 - v21;
  v92 = (void *)MEMORY[0x1A859F880](v20);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v23 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v102 = objc_msgSend((id)objc_opt_self(), sel_emojiLocaleDataWithLocaleIdentifier_, v23);

  v24 = sub_1A4690954();
  v25 = MEMORY[0x1E0DEE9D8];
  if (v24)
  {
    v26 = v24;
    v119 = MEMORY[0x1E0DEE9D8];
    sub_1A445A8BC(0, v24 & ~(v24 >> 63), 0);
    if (v26 < 0)
    {
LABEL_75:
      __break(1u);
      JUMPOUT(0x1A44ADFF8);
    }
    v27 = 0;
    v28 = 15;
    v93 = *MEMORY[0x1E0DEE330];
    v103 = a1;
    v104 = a2;
    v112 = v7;
    v105 = v26;
    v106 = v22;
    v100 = v17;
    while (1)
    {
      if (v27 == v26)
      {
        __break(1u);
        goto LABEL_75;
      }
      v108 = v28;
      v109 = v27;
      v29 = sub_1A4690A38();
      v31 = v30;
      swift_bridgeObjectRetain();
      v32 = sub_1A44614BC(v29, v31);
      swift_bridgeObjectRelease();
      v114 = v29;
      v116 = v31;
      if ((v32 & 0x100000000) != 0)
        break;
      v33 = v101;
      sub_1A4691DA0();
      v34 = v22;
      v35 = v33;
      v36 = v22;
      v37 = v115;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v34, v35, v115);
      v113 = v31 & 0x2000000000000000;
      v38 = HIBYTE(v31) & 0xF;
      v39 = v29 & 0xFFFFFFFFFFFFLL;
      v110 = v38;
      if ((v31 & 0x2000000000000000) == 0)
        v38 = v29 & 0xFFFFFFFFFFFFLL;
      v40 = v31 & 0x1000000000000000;
      v107 = v29 & 0x800000000000000;
      v41 = 7;
      if (((v31 >> 60) & ((v29 & 0x800000000000000) == 0)) != 0)
        v41 = 11;
      v42 = sub_1A44AC8EC(0xFuLL, v41 | (v38 << 16), v29, v31);
      v43 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v44 = v100;
      v43(v100, v36, v37);
      if (v42 != 1)
      {
        v51 = *(void (**)(char *, uint64_t))(v7 + 8);
        v51(v44, v37);
        v51(v36, v37);
        v50 = v37;
        v29 = v114;
        v31 = v116;
        v48 = v110;
        v49 = v107;
LABEL_16:
        if (v113)
          v59 = v48;
        else
          v59 = v39;
        if (v49)
          v60 = 1;
        else
          v60 = v40 == 0;
        v61 = 7;
        if (!v60)
          v61 = 11;
        if ((uint64_t)sub_1A44AC8EC(0xFuLL, v61 | (v59 << 16), v29, v31) < 2 || v59 == 0)
        {
          if (v59)
            goto LABEL_30;
        }
        else
        {
          v110 = v31 & 0xFFFFFFFFFFFFFFLL;
          v107 = (v31 & 0xFFFFFFFFFFFFFFFLL) + 32;
          swift_bridgeObjectRetain();
          v69 = 0;
          do
          {
            if (v40)
            {
              sub_1A4691404();
              v71 = v70;
            }
            else
            {
              if (v113)
              {
                v117 = v29;
                v118 = v110;
                if (*((char *)&v117 + v69) < 0)
                  __asm { BR              X9 }
              }
              else
              {
                v72 = v107;
                if ((v29 & 0x1000000000000000) == 0)
                  v72 = sub_1A46914E8();
                if (*(char *)(v72 + v69) < 0)
                  __asm { BR              X9 }
              }
              v71 = 1;
            }
            v73 = v111;
            sub_1A4691DA0();
            v74 = sub_1A4691D64();
            v75 = *(void (**)(char *, uint64_t))(v7 + 8);
            v76 = v115;
            v75(v73, v115);
            if ((v74 & 1) != 0 || (sub_1A4691DA0(), v77 = sub_1A4691D88(), v75(v10, v76), (v77 & 1) != 0))
            {
              swift_bridgeObjectRelease();
              v7 = v112;
              goto LABEL_60;
            }
            v69 += v71;
            v29 = v114;
            v50 = v115;
            v7 = v112;
          }
          while (v69 < v59);
          v31 = v116;
          swift_bridgeObjectRelease();
          if (v59)
          {
LABEL_30:
            v63 = v31 & 0xFFFFFFFFFFFFFFLL;
            v110 = (v31 & 0xFFFFFFFFFFFFFFFLL) + 32;
            swift_bridgeObjectRetain();
            v64 = 0;
            while (1)
            {
              if (v40)
              {
                sub_1A4691404();
                v66 = v65;
              }
              else
              {
                if (v113)
                {
                  v117 = v29;
                  v118 = v63;
                  if (*((char *)&v117 + v64) < 0)
                    __asm { BR              X9 }
                }
                else
                {
                  v67 = v110;
                  if ((v29 & 0x1000000000000000) == 0)
                    v67 = sub_1A46914E8();
                  if (*(char *)(v67 + v64) < 0)
                    __asm { BR              X10 }
                }
                v66 = 1;
              }
              sub_1A4691DA0();
              v68 = sub_1A4691D7C();
              (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v50);
              if ((v68 & 1) == 0)
                break;
              v64 += v66;
              if (v64 >= v59)
              {
                swift_bridgeObjectRelease();
                goto LABEL_60;
              }
            }
            swift_bridgeObjectRelease();
            goto LABEL_63;
          }
        }
        goto LABEL_60;
      }
      v45 = sub_1A4691D7C();
      v46 = v99;
      v43(v99, v44, v37);
      if ((v45 & 1) != 0)
      {
        v47 = *(void (**)(char *, uint64_t))(v7 + 8);
        v47(v46, v37);
        v47(v44, v37);
        v47(v106, v37);
        goto LABEL_60;
      }
      v52 = v94;
      sub_1A4691D70();
      v53 = v96;
      v54 = v95;
      v55 = v97;
      (*(void (**)(char *, _QWORD, uint64_t))(v96 + 104))(v95, v93, v97);
      v98 = sub_1A4691D4C();
      v56 = *(void (**)(char *, uint64_t))(v53 + 8);
      v57 = v54;
      v7 = v112;
      v56(v57, v55);
      v56(v52, v55);
      v58 = *(void (**)(char *, uint64_t))(v7 + 8);
      v58(v46, v37);
      v58(v44, v37);
      v58(v106, v37);
      v50 = v37;
      v29 = v114;
      v31 = v116;
      v48 = v110;
      v49 = v107;
      if ((v98 & 1) == 0)
        goto LABEL_16;
LABEL_60:
      swift_bridgeObjectRetain();
      v78 = v102;
      v79 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v80 = objc_msgSend((id)objc_opt_self(), sel_emojiTokenWithString_localeData_, v79, v78);

      if (v80)
      {
        v81 = objc_msgSend(v80, sel_nameForType_, 2);
        v22 = v106;
        if (v81)
        {
          v82 = v81;
          v114 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v84 = v83;
          swift_bridgeObjectRelease();

          v116 = v84;
        }
        else
        {

        }
        goto LABEL_65;
      }
LABEL_63:
      v22 = v106;
LABEL_65:
      v25 = v119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445A8BC(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v119;
      }
      v86 = *(_QWORD *)(v25 + 16);
      v85 = *(_QWORD *)(v25 + 24);
      if (v86 >= v85 >> 1)
      {
        sub_1A445A8BC(v85 > 1, v86 + 1, 1);
        v25 = v119;
      }
      v27 = v109 + 1;
      *(_QWORD *)(v25 + 16) = v86 + 1;
      v87 = v25 + 16 * v86;
      v88 = v116;
      *(_QWORD *)(v87 + 32) = v114;
      *(_QWORD *)(v87 + 40) = v88;
      v28 = sub_1A4690960();
      v26 = v105;
      if (v27 == v105)
        goto LABEL_73;
    }
    v113 = v31 & 0x2000000000000000;
    v48 = HIBYTE(v31) & 0xF;
    v39 = v29 & 0xFFFFFFFFFFFFLL;
    v40 = v31 & 0x1000000000000000;
    v49 = v29 & 0x800000000000000;
    v50 = v115;
    goto LABEL_16;
  }
LABEL_73:
  v117 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v89 = sub_1A4690828();
  swift_bridgeObjectRelease();

  objc_autoreleasePoolPop(v92);
  return v89;
}

uint64_t sub_1A44AE038(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1A4691A40() & 1;
}

unint64_t sub_1A44AE090()
{
  unint64_t result;

  result = qword_1EE71DB70;
  if (!qword_1EE71DB70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTitleEmbeddingMethods, &type metadata for REMTitleEmbeddingMethods);
    atomic_store(result, (unint64_t *)&qword_1EE71DB70);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMTitleEmbeddingMethods(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A44AE120 + 4 * byte_1A4698BB9[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A44AE154 + 4 * byte_1A4698BB4[v4]))();
}

uint64_t sub_1A44AE154(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44AE15C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44AE164);
  return result;
}

uint64_t sub_1A44AE170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44AE178);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A44AE17C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44AE184(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMTitleEmbeddingMethods()
{
  return &type metadata for REMTitleEmbeddingMethods;
}

uint64_t destroy for REMTitleEmbeddingConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTitleEmbeddingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTitleEmbeddingConfig(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTitleEmbeddingConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTitleEmbeddingConfig(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTitleEmbeddingConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTitleEmbeddingConfig()
{
  return &type metadata for REMTitleEmbeddingConfig;
}

uint64_t dispatch thunk of REMTitleEmbedding.lang.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMTitleEmbedding.revision.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of REMTitleEmbedding.init(lang:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of REMTitleEmbedding.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of REMTitleEmbedding.vector(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of REMTitleEmbedding.config()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of REMTitleEmbedding.closestWord(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t type metadata accessor for REMSentence2VecTitleEmbedding()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMSentence2VecTitleEmbedding()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSentence2VecTitleEmbedding.__allocating_init(lang:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for REMUniversalGrammarTitleEmbedding()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMUniversalGrammarTitleEmbedding()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for REMFilteredTitleEmbedding()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMFilteredTitleEmbedding()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMFilteredTitleEmbedding.__allocating_init(from:stopWordThresholdByPercent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for REMTitleEmbeddingConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A44AE500 + 4 * byte_1A4698BC3[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A44AE534 + 4 * byte_1A4698BBE[v4]))();
}

uint64_t sub_1A44AE534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44AE53C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44AE544);
  return result;
}

uint64_t sub_1A44AE550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44AE558);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A44AE55C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44AE564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMTitleEmbeddingConfig.CodingKeys()
{
  return &type metadata for REMTitleEmbeddingConfig.CodingKeys;
}

unint64_t sub_1A44AE584()
{
  unint64_t result;

  result = qword_1EE71DDB8;
  if (!qword_1EE71DDB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698F2C, &type metadata for REMTitleEmbeddingConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DDB8);
  }
  return result;
}

unint64_t sub_1A44AE5CC()
{
  unint64_t result;

  result = qword_1EE71DDC0;
  if (!qword_1EE71DDC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698E9C, &type metadata for REMTitleEmbeddingConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DDC0);
  }
  return result;
}

unint64_t sub_1A44AE614()
{
  unint64_t result;

  result = qword_1EE71DDC8;
  if (!qword_1EE71DDC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A4698EC4, &type metadata for REMTitleEmbeddingConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE71DDC8);
  }
  return result;
}

uint64_t sub_1A44AE658()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A44AE67C()
{
  return swift_deallocObject();
}

uint64_t sub_1A44AE6A0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

BOOL static REMCache.ExecutionMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMCache.ExecutionMode.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMCache.ExecutionMode.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A44AE75C()
{
  sub_1A4691C8C();
  REMCache.ExecutionMode.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t REMCache.__allocating_init(cacheQueue:countLimit:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  REMCache.init(cacheQueue:countLimit:)(a1, a2, v5, v6);
  return v4;
}

uint64_t *REMCache.init(cacheQueue:countLimit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;

  v5 = v4;
  v7 = *v5;
  v5[2] = a1;
  type metadata accessor for REMCacheContext(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), a4);
  v8 = swift_allocObject();
  sub_1A44AF014(a2);
  v5[3] = v8;
  return v5;
}

uint64_t type metadata accessor for REMCacheContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMCacheContext);
}

uint64_t sub_1A44AE84C(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1A44AF014(a1);
  return v2;
}

uint64_t sub_1A44AE888(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  dispatch_queue_t v22;
  uint64_t v23;
  uint64_t aBlock;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  void *v27;
  uint64_t (*v28)();
  char *v29;

  v4 = v3;
  v8 = *(_QWORD **)v4;
  v9 = (_QWORD *)sub_1A46905A0();
  v21 = *(v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A46905DC();
  v12 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  v22 = *(dispatch_queue_t *)(v4 + 16);
  v15 = swift_allocObject();
  swift_weakInit();
  if ((a1 & 1) != 0)
  {
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = v8[10];
    v9[3] = v8[11];
    v9[4] = v15;
    v9[5] = a2;
    v9[6] = a3;
    v11 = (char *)swift_allocObject();
    *((_QWORD *)v11 + 2) = sub_1A44AEBD0;
    *((_QWORD *)v11 + 3) = v9;
    v28 = sub_1A4452D50;
    v29 = v11;
    aBlock = MEMORY[0x1E0C809B0];
    v25 = 1107296256;
    v26 = sub_1A44697A0;
    v27 = &block_descriptor_2;
    v8 = _Block_copy(&aBlock);
    v15 = (uint64_t)v29;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v22, v8);
    _Block_release(v8);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v8[10];
  *((_QWORD *)v18 + 3) = v8[11];
  *((_QWORD *)v18 + 4) = v15;
  *((_QWORD *)v18 + 5) = a2;
  *((_QWORD *)v18 + 6) = a3;
  v28 = sub_1A44AEBD0;
  v29 = v18;
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1A44AE6A0;
  v27 = &block_descriptor_13;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  sub_1A46905C4();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v14, v11, v19);
  _Block_release(v19);
  (*(void (**)(char *, _QWORD *))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1A44AEBA8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A44AEBD4()
{
  return swift_deallocObject();
}

uint64_t sub_1A44AEBE8()
{
  uint64_t v0;

  return sub_1A44AEE4C(*(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1A44AEC08(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[7];

  v4 = v3;
  v23 = a2;
  v24 = a3;
  v6 = *v4;
  v22 = sub_1A46905DC();
  v7 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A46905A0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  sub_1A4690594();
  v15 = swift_allocObject();
  v16 = swift_weakInit();
  if ((v14 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](v16);
    *((_OWORD *)&v22 - 3) = *(_OWORD *)(v6 + 80);
    v17 = v23;
    *(&v22 - 4) = v15;
    *(&v22 - 3) = v17;
    *(&v22 - 2) = v24;
    sub_1A4691098();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = *(_QWORD *)(v6 + 80);
    v18[3] = *(_QWORD *)(v6 + 88);
    v18[4] = v15;
    v19 = v24;
    v18[5] = v23;
    v18[6] = v19;
    aBlock[4] = sub_1A44AEBD0;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A44AE6A0;
    aBlock[3] = &block_descriptor_21;
    v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1A46905C4();
    MEMORY[0x1A859E8FC](0, v9, v13, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1A44AEE4C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = swift_retain();
    a2(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A44AEEC4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = swift_retain();
    a2(v4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1A44AEF4C()
{
  uint64_t v0;

  return sub_1A44AEEC4(*(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1A44AEF70(char *a1)
{
  char v2;

  v2 = *a1;
  return sub_1A44AEC08(&v2, (uint64_t)sub_1A44AEFA4, 0);
}

id sub_1A44AEFA4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 16), sel_removeAllObjects);
}

Swift::Void __swiftcall REMCacheContext.clearAll()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_removeAllObjects);
}

uint64_t REMCache.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t REMCache.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A44AF014(uint64_t a1)
{
  uint64_t v1;
  id v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E18);
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(_QWORD *)(v1 + 16) = v3;
  objc_msgSend(v3, sel_setCountLimit_, a1);
  return v1;
}

uint64_t REMCacheContext.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMCacheContext.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id REMCacheContext.object(forKey:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_objectForKey_, a1);
}

id REMCacheContext.setObject(_:forKey:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (a1)
    return objc_msgSend(*(id *)(v2 + 16), sel_setObject_forKey_, a1, a2);
  else
    return objc_msgSend(*(id *)(v2 + 16), sel_removeObjectForKey_, a2, a2);
}

uint64_t REMStructWrapper.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 88), a1);
  return v2;
}

uint64_t REMStructWrapper.init(_:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
  return v1;
}

uint64_t REMStructWrapper.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
}

uint64_t REMStructWrapper.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t REMStructWrapper.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return swift_deallocClassInstance();
}

void sub_1A44AF200()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A44AF210(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1A85A0000](&unk_1A4699034);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A44AF23C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for REMCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMCache);
}

uint64_t method lookup function for REMCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMCache.__allocating_init(cacheQueue:countLimit:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of REMCache.performReadOnly(_:operations:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of REMCache.performReadAndWrite(_:operations:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of REMCache.clear(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1A44AF2D0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A44AF31C + 4 * byte_1A4698FC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A44AF350 + 4 * byte_1A4698FC0[v4]))();
}

uint64_t sub_1A44AF350(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44AF358(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A44AF360);
  return result;
}

uint64_t sub_1A44AF36C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A44AF374);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A44AF378(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A44AF380(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t type metadata accessor for REMCache.ExecutionMode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMCache.ExecutionMode);
}

uint64_t sub_1A44AF398()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for REMCacheContext()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A44AF3E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for REMStructWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMStructWrapper);
}

uint64_t method lookup function for REMStructWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMStructWrapper.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

void sub_1A44AF488(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30[3];

  v3 = v2;
  v30[2] = *(id *)MEMORY[0x1E0C80C00];
  v30[0] = 0;
  v6 = objc_msgSend(v3, sel_resultFromPerformingInvocation_error_, a1, v30);
  v7 = v30[0];
  if (v6)
  {
    v8 = v6;
    type metadata accessor for REMComplicationDataView.FetchModelInvocation.Result();
    v9 = swift_dynamicCastClass();
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)(v9 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages);
      v12 = v8;
      v13 = v7;
      v14 = v12;
      v15 = v3;
      swift_bridgeObjectRetain();
      v16 = (void *)MEMORY[0x1E0DEE9E0];
      v17 = sub_1A44B0EB8(MEMORY[0x1E0DEE9E0], v11, (uint64_t)v15);
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(v10 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages);
      v19 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1A44B1148(v16, v18, v17, (uint64_t)v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      v21 = v19;
      swift_bridgeObjectRetain();
      v22 = swift_bridgeObjectRetain();
      v23 = sub_1A44B0D20(v22, (uint64_t)v20, (uint64_t)v21);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      *a2 = v23;
    }
    else
    {
      v25 = (void *)objc_opt_self();
      v30[0] = 0;
      v30[1] = (id)0xE000000000000000;
      v26 = v7;
      sub_1A4691410();
      sub_1A4690984();
      v27 = objc_msgSend(v8, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      sub_1A4690984();
      sub_1A4690984();
      v28 = objc_msgSend(a1, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A4690984();
      swift_bridgeObjectRelease();
      v29 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_internalErrorWithDebugDescription_, v29);

      swift_willThrow();
    }
  }
  else
  {
    v24 = v30[0];
    sub_1A468FE68();

    swift_willThrow();
  }
}

uint64_t sub_1A44AF810()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE71DE00);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE71DE00);
  if (qword_1ED23E620 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMComplicationDataView.__allocating_init(store:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t REMComplicationDataView.init(store:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t REMComplicationDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMComplicationDataView.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

Swift::tuple_ReminderKitInternal_REMComplicationDataView_Model __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMComplicationDataView.fetchModel()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  id v3;
  Swift::tuple_ReminderKitInternal_REMComplicationDataView_Model result;
  uint64_t v5;

  v2 = v0;
  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMComplicationDataView.FetchModelInvocation()), sel_init);
  sub_1A44AF488(v3, &v5);

  if (!v1)
    *v2 = v5;
  return result;
}

uint64_t type metadata accessor for REMComplicationDataView.FetchModelInvocation()
{
  return objc_opt_self();
}

uint64_t REMComplicationDataView.Model.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMComplicationDataView::Model __swiftcall REMComplicationDataView.Model.init(reminders:)(ReminderKitInternal::REMComplicationDataView::Model reminders)
{
  ReminderKitInternal::REMComplicationDataView::Model *v1;

  v1->reminders._rawValue = reminders.reminders._rawValue;
  return reminders;
}

uint64_t static REMComplicationDataView.FetchModelInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMComplicationDataView.FetchModelInvocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMComplicationDataView.FetchModelInvocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_init);

  return v3;
}

id REMComplicationDataView.FetchModelInvocation.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_init);
}

void REMComplicationDataView.FetchModelInvocation.clientResult(from:store:)(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  unint64_t v5;
  id v6;
  char *v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)&a1[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages];
  v6 = a2;
  v7 = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)MEMORY[0x1E0DEE9E0];
  v9 = sub_1A44B0EB8(MEMORY[0x1E0DEE9E0], v5, (uint64_t)v6);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages];
  v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = sub_1A44B1148(v8, v10, v9, (uint64_t)v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  v13 = v11;
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1A44B0D20(v14, (uint64_t)v12, (uint64_t)v13);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  *a3 = v15;
}

void sub_1A44AFC18(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  REMComplicationDataView.FetchModelInvocation.clientResult(from:store:)(a1, a2, a3);
}

id REMComplicationDataView.FetchModelInvocation.Result.__allocating_init(accountStorages:listStorages:reminderStorages:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  char *v7;
  objc_super v9;

  v7 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages] = a1;
  *(_QWORD *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages] = a2;
  *(_QWORD *)&v7[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return objc_msgSendSuper2(&v9, sel_init);
}

id REMComplicationDataView.FetchModelInvocation.Result.init(accountStorages:listStorages:reminderStorages:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  objc_class *ObjectType;
  objc_super v9;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v3[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages] = a1;
  *(_QWORD *)&v3[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages] = a2;
  *(_QWORD *)&v3[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages] = a3;
  v9.receiver = v3;
  v9.super_class = ObjectType;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t static REMComplicationDataView.FetchModelInvocation.Result.supportsSecureCoding.getter()
{
  return 1;
}

id REMComplicationDataView.FetchModelInvocation.Result.init(coder:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  objc_super v19;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = v2;
  v6 = sub_1A44AFEBC();
  if (!v6)
    goto LABEL_7;
  v7 = v6;
  v8 = sub_1A44AFFBC();
  if (!v8)
  {
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:

    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_1A469087C();
    v16 = objc_msgSend(v14, sel_internalErrorWithDebugDescription_, v15);

    v17 = (void *)sub_1A468FE5C();
    objc_msgSend(a1, sel_failWithError_, v17);

    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v9 = v8;
  v10 = sub_1A44B00B8();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v11 = v10;

  v12 = (char *)objc_allocWithZone(ObjectType);
  *(_QWORD *)&v12[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages] = v7;
  *(_QWORD *)&v12[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages] = v9;
  *(_QWORD *)&v12[OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages] = v11;
  v19.receiver = v12;
  v19.super_class = ObjectType;
  v13 = objc_msgSendSuper2(&v19, sel_init);

  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v13;
}

uint64_t sub_1A44AFEBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DF58);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A4696430;
  *(_QWORD *)(v0 + 32) = sub_1A444AA40(0, &qword_1EE71DF60);
  *(_QWORD *)(v0 + 40) = sub_1A444AA40(0, &qword_1ED243E40);
  sub_1A46910F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DE30);
  if (swift_dynamicCast())
    v1 = v3;
  else
    v1 = 0;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A44AFFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DF58);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A4696430;
  *(_QWORD *)(v0 + 32) = sub_1A444AA40(0, &qword_1EE71DF60);
  *(_QWORD *)(v0 + 40) = sub_1A444AA40(0, &qword_1ED243E28);
  sub_1A46910F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DE38);
  if (swift_dynamicCast())
    v1 = v3;
  else
    v1 = 0;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A44B00B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DF58);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A4696430;
  *(_QWORD *)(v0 + 32) = sub_1A444AA40(0, &qword_1EE71DF60);
  *(_QWORD *)(v0 + 40) = sub_1A444AA40(0, &qword_1ED243E48);
  sub_1A46910F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DE40);
  if (swift_dynamicCast())
    v1 = v3;
  else
    v1 = 0;
  swift_bridgeObjectRelease();
  return v1;
}

Swift::Void __swiftcall REMComplicationDataView.FetchModelInvocation.Result.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[3];
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_accountStorages);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DE30);
  v29[0] = v3;
  sub_1A44B1284((uint64_t)v29, (uint64_t)v27);
  v4 = v28;
  if (v28)
  {
    v5 = __swift_project_boxed_opaque_existential_1(v27, v28);
    v6 = *(_QWORD *)(v4 - 8);
    MEMORY[0x1E0C80A78](v5);
    v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v6 + 16))(v8);
    swift_bridgeObjectRetain();
    v9 = sub_1A4691A34();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    v9 = 0;
  }
  v10 = (void *)sub_1A469087C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);
  swift_unknownObjectRelease();

  sub_1A4496084((uint64_t)v29);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_listStorages);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DE38);
  v29[0] = v11;
  sub_1A44B1284((uint64_t)v29, (uint64_t)v27);
  v12 = v28;
  if (v28)
  {
    v13 = __swift_project_boxed_opaque_existential_1(v27, v28);
    v14 = *(_QWORD *)(v12 - 8);
    MEMORY[0x1E0C80A78](v13);
    v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v14 + 16))(v16);
    swift_bridgeObjectRetain();
    v17 = sub_1A4691A34();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    v17 = 0;
  }
  v18 = (void *)sub_1A469087C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v17, v18);
  swift_unknownObjectRelease();

  sub_1A4496084((uint64_t)v29);
  v19 = *(_QWORD *)(v1 + OBJC_IVAR___REMComplicationDataViewFetchModelInvocationResult_reminderStorages);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DE40);
  v29[0] = v19;
  sub_1A44B1284((uint64_t)v29, (uint64_t)v27);
  v20 = v28;
  if (v28)
  {
    v21 = __swift_project_boxed_opaque_existential_1(v27, v28);
    v22 = *(_QWORD *)(v20 - 8);
    MEMORY[0x1E0C80A78](v21);
    v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    swift_bridgeObjectRetain();
    v25 = sub_1A4691A34();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  else
  {
    swift_bridgeObjectRetain();
    v25 = 0;
  }
  v26 = (void *)sub_1A469087C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v25, v26);
  swift_unknownObjectRelease();

  sub_1A4496084((uint64_t)v29);
}

id REMComplicationDataView.FetchModelInvocation.Result.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void REMComplicationDataView.FetchModelInvocation.Result.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1A44B0668(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  id v19;
  id v20;

  v6 = *a2;
  v7 = objc_msgSend(*a2, sel_accountID);
  v8 = sub_1A455F958(v7, a3);

  if (v8)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84520]), sel_initWithStore_account_storage_, a4, v8, v6);
    v10 = objc_msgSend(v9, sel_objectID);
    v11 = v9;
    sub_1A4561744((uint64_t)v11, v10);

  }
  else
  {
    if (qword_1EE71C010 != -1)
      swift_once();
    v12 = sub_1A4690318();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EE71DE00);
    v13 = v7;
    v14 = v6;
    v15 = sub_1A469030C();
    v16 = sub_1A4690FFC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412546;
      v19 = objc_msgSend(v14, sel_objectID);
      sub_1A46911D0();
      *v18 = v19;

      *(_WORD *)(v17 + 12) = 2112;
      v20 = v13;
      sub_1A46911D0();
      v18[1] = v13;

      _os_log_impl(&dword_1A442D000, v15, v16, "Complications Data View fetched a list with an account ID, but no corresponding account was provided. Failed to make list. {list.objectID: %@, accountID: %@)", (uint8_t *)v17, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v18, -1, -1);
      MEMORY[0x1A85A0114](v17, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1A44B090C(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  os_log_type_t type;
  id v32;

  v7 = *a1;
  v8 = objc_msgSend(*a1, sel_listID);
  if (!v8)
  {
    if (qword_1EE71C010 != -1)
      swift_once();
    v14 = sub_1A4690318();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EE71DE00);
    v15 = v7;
    v16 = sub_1A469030C();
    v17 = sub_1A4690FFC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412290;
      v32 = objc_msgSend(v15, sel_objectID);
      sub_1A46911D0();
      *v19 = v32;

      _os_log_impl(&dword_1A442D000, v16, v17, "Complications Data View fetched a reminder with no list ID. Failed to make reminder. {reminder.objectID: %@}", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v19, -1, -1);
      MEMORY[0x1A85A0114](v18, -1, -1);

    }
    else
    {

    }
    goto LABEL_15;
  }
  v9 = v8;
  v10 = v8;
  v11 = sub_1A455F96C(v10, a2);

  if (!v11)
  {
    if (qword_1EE71C010 != -1)
      swift_once();
    v20 = sub_1A4690318();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EE71DE00);
    v21 = v7;
    v22 = v10;
    v23 = v21;
    v24 = v22;
    v25 = sub_1A469030C();
    v26 = sub_1A4690FFC();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v27 = 138412546;
      type = v26;
      v29 = objc_msgSend(v23, sel_objectID);
      sub_1A46911D0();
      *v28 = v29;

      *(_WORD *)(v27 + 12) = 2112;
      v30 = v24;
      sub_1A46911D0();
      v28[1] = v9;

      _os_log_impl(&dword_1A442D000, v25, type, "Complications Data View fetched a reminder with a list ID, but no corresponding list was provided. Failed to make reminder. {reminder.objectID: %@, listID: %@}", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v28, -1, -1);
      MEMORY[0x1A85A0114](v27, -1, -1);

    }
    else
    {

    }
    goto LABEL_15;
  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D845E0]), sel_initWithStore_list_storage_, a3, v11, v7);
  v13 = objc_msgSend(v12, sel_displayDate);

  if (!v13)
  {

LABEL_15:
    v12 = 0;
  }
  *a4 = v12;
}

uint64_t sub_1A44B0D20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v13;
  id v14;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1A46916A4())
  {
    for (i = 4; ; ++i)
    {
      v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A859ECE0](i - 4, a1) : *(id *)(a1 + 8 * i);
      v8 = v7;
      v9 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v14 = v7;
      sub_1A44B090C(&v14, a2, a3, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v13)
      {
        MEMORY[0x1A859E3E0]();
        if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        sub_1A4690BB8();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A44B0EB8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  id v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;

  v3 = a2;
  if (a2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v5 = sub_1A46916A4();
    if (v5)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRelease();
    return a1;
  }
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_31;
LABEL_3:
  v32 = v3;
  v33 = v3 & 0xC000000000000001;
  v6 = 4;
  while (1)
  {
    if (v33)
      v9 = (id)MEMORY[0x1A859ECE0](v6 - 4, v3);
    else
      v9 = *(id *)(v3 + 8 * v6);
    v10 = v9;
    v3 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84440]), sel_initWithStore_storage_, a3, v9);
    v12 = objc_msgSend(v11, sel_objectID);
    if ((a1 & 0xC000000000000001) != 0)
    {
      if (a1 < 0)
        v13 = a1;
      else
        v13 = a1 & 0xFFFFFFFFFFFFFF8;
      v14 = v11;
      v15 = sub_1A4691308();
      if (__OFADD__(v15, 1))
        goto LABEL_28;
      a1 = sub_1A45618A4(v13, v15 + 1);
    }
    else
    {
      v16 = v11;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_1A443E750((uint64_t)v12);
    v20 = *(_QWORD *)(a1 + 16);
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      goto LABEL_27;
    v23 = v18;
    if (*(_QWORD *)(a1 + 24) < v22)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1A4447454();
LABEL_23:
    v26 = 8 * v19;
    if ((v23 & 1) != 0)
    {
      v7 = *(_QWORD *)(a1 + 56);

      *(_QWORD *)(v7 + v26) = v11;
    }
    else
    {
      *(_QWORD *)(a1 + 8 * (v19 >> 6) + 64) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v19) = v12;
      *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v19) = v11;
      v27 = *(_QWORD *)(a1 + 16);
      v28 = __OFADD__(v27, 1);
      v29 = v27 + 1;
      if (v28)
        goto LABEL_29;
      *(_QWORD *)(a1 + 16) = v29;
      v30 = v12;
    }

    swift_bridgeObjectRelease();
    ++v6;
    v8 = v3 == v5;
    v3 = v32;
    if (v8)
      goto LABEL_31;
  }
  sub_1A44412B0(v22, isUniquelyReferenced_nonNull_native);
  v24 = sub_1A443E750((uint64_t)v12);
  if ((v23 & 1) == (v25 & 1))
  {
    v19 = v24;
    goto LABEL_23;
  }
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

void *sub_1A44B1148(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  uint64_t v12;
  id v14;
  void *v15;

  v15 = a1;
  v8 = a1;
  if (a2 >> 62)
    goto LABEL_13;
  v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v9; v9 = sub_1A46916A4())
  {
    for (i = 4; ; ++i)
    {
      v11 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A859ECE0](i - 4, a2) : *(id *)(a2 + 8 * i);
      v8 = v11;
      v12 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v14 = v11;
      sub_1A44B0668((uint64_t)&v15, &v14, a3, a4);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v8;
      }

      if (v12 == v9)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A44B1284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMComplicationDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMComplicationDataView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMComplicationDataView.__allocating_init(store:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for REMComplicationDataView.Model()
{
  return &type metadata for REMComplicationDataView.Model;
}

uint64_t type metadata accessor for REMComplicationDataView.FetchModelInvocation.Result()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMComplicationDataView.FetchModelInvocation.Result()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMComplicationDataView.FetchModelInvocation.Result.__allocating_init(accountStorages:listStorages:reminderStorages:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

id sub_1A44B134C()
{
  qword_1ED23ED20 = *MEMORY[0x1E0CB2AC0];
  return (id)qword_1ED23ED20;
}

uint64_t static NSFileProtectionType.rem_spotlightIndexFileProtection.getter()
{
  uint64_t v0;
  id v1;

  if (qword_1ED23F2A8 != -1)
    swift_once();
  v0 = qword_1ED23ED20;
  v1 = (id)qword_1ED23ED20;
  return v0;
}

uint64_t sub_1A44B13B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t i;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v10 | (v8 << 6); ; i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    v12 = *(_QWORD *)(a1 + 56) + 32 * i;
    if ((*(_BYTE *)(v12 + 24) & 1) != 0)
    {
      if (v5)
        goto LABEL_4;
    }
    else
    {
      v16 = *(_QWORD *)(v12 + 8);
      v17 = *(_QWORD *)(v12 + 16);
      sub_1A44BEF64(v16, v17, 0);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A4438920(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v19 = v9[2];
      v18 = v9[3];
      v20 = v9;
      if (v19 >= v18 >> 1)
      {
        result = (uint64_t)sub_1A4438920((_QWORD *)(v18 > 1), v19 + 1, 1, v9);
        v20 = (_QWORD *)result;
      }
      v20[2] = v19 + 1;
      v9 = v20;
      v21 = &v20[2 * v19];
      v21[4] = v16;
      v21[5] = v17;
      if (v5)
        goto LABEL_4;
    }
LABEL_7:
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6)
      goto LABEL_29;
    v14 = *(_QWORD *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v6)
        goto LABEL_29;
      v14 = *(_QWORD *)(v2 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v6)
          goto LABEL_29;
        v14 = *(_QWORD *)(v2 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v6)
            goto LABEL_29;
          v14 = *(_QWORD *)(v2 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v14 - 1) & v14;
  }
  v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  v14 = *(_QWORD *)(v2 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v14 = *(_QWORD *)(v2 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1A44B15A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED23F1F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23F1F8);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

double static REMAnchoredBubbleModel.defaultDistanceScale.getter()
{
  return 0.2;
}

double static REMAnchoredBubbleModel.distanceScaleAdjustmentStep.getter()
{
  return 0.05;
}

void static REMAnchoredBubbleModel.train(titleList:distanceScale:usePCA:)(uint64_t a1, void *a2, char a3)
{
  char v5;
  void *v6;
  uint64_t v7;

  v5 = a3 & 1;
  v6 = (void *)MEMORY[0x1A859F880]();
  sub_1A44B16D8(a1, a2, v5, &v7);
  objc_autoreleasePoolPop(v6);
}

void sub_1A44B16D8(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E040);
  sub_1A44BFE34();
  sub_1A4466118();
  v7 = sub_1A4690B28();
  v9 = v8;
  swift_bridgeObjectRelease();
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_1A469087C();
  v12 = objc_msgSend(v10, sel_dominantLanguageForString_, v11);

  if (v12)
  {
    swift_bridgeObjectRelease();
    static REMAnchoredBubbleModel.train(titleList:lang:distanceScale:usePCA:)(a1, (unint64_t)v12, a2, a3 & 1, 1);
    v14 = v13;

    if (!v23)
      *a4 = v14;
  }
  else
  {
    if (qword_1ED23F210 != -1)
      swift_once();
    v15 = sub_1A4690318();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED23F1F8);
    swift_bridgeObjectRetain();
    v16 = sub_1A469030C();
    v17 = sub_1A4690FF0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v24 = v19;
      *(_DWORD *)v18 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A4431120(v7, v9, &v24);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v16, v17, "REMAnchoredBubbleModel: Unable to detect language from title string %s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v19, -1, -1);
      MEMORY[0x1A85A0114](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v20 = (void *)objc_opt_self();
    v21 = (void *)sub_1A469087C();
    objc_msgSend(v20, sel_internalErrorWithDebugDescription_, v21);

    swift_willThrow();
  }
}

void static REMAnchoredBubbleModel.train(titleList:lang:distanceScale:usePCA:)(uint64_t a1, unint64_t a2, void *a3, char a4, char a5)
{
  uint64_t v5;
  unint64_t v9;
  id v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _BOOL8 v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  void *v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  unint64_t v77;

  v9 = a2;
  v11 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, a2);
  if (!v11)
  {
    if (qword_1ED23F210 != -1)
LABEL_31:
      swift_once();
    v18 = sub_1A4690318();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED23F1F8);
    v19 = (id)v9;
    v20 = sub_1A469030C();
    v21 = sub_1A4690FF0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v76 = (_QWORD *)v23;
      *(_DWORD *)v22 = 136315138;
      v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v75 = sub_1A4431120(v24, v25, (uint64_t *)&v76);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v20, v21, "REMAnchoredBubbleModel: Missing NLEmbedding for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v23, -1, -1);
      MEMORY[0x1A85A0114](v22, -1, -1);

    }
    else
    {

    }
    v63 = (void *)objc_opt_self();
    v76 = 0;
    v77 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v76 = (_QWORD *)0xD000000000000030;
    v77 = 0x80000001A46BE110;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v64 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v63, sel_internalErrorWithDebugDescription_, v64);

    swift_willThrow();
    return;
  }
  v12 = v11;
  sub_1A44B207C(a1, v9);
  v13 = swift_bridgeObjectRetain();
  v14 = sub_1A445A12C(v13);
  swift_bridgeObjectRelease();
  v76 = v14;
  sub_1A44BB34C((uint64_t *)&v76, (uint64_t (*)(uint64_t))sub_1A462EC54, sub_1A44BC4E8);
  if (v5)
    goto LABEL_33;
  v69 = a4;
  v15 = swift_bridgeObjectRelease();
  v16 = (uint64_t)v76;
  v70 = (uint64_t)a3;
  if ((a5 & 1) != 0)
  {
    v15 = sub_1A44BE81C((uint64_t)v76, v12);
    v17 = v15;
  }
  else
  {
    v17 = 0;
  }
  v26 = MEMORY[0x1E0DEE9E0];
  v76 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v27 = *(_QWORD *)(v16 + 16);
  if (!v27)
  {
    v29 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_26:
    v75 = 0x3FC999999999999ALL;
    v76 = (_QWORD *)v26;
    v53 = (void *)MEMORY[0x1A859F880](v15);
    sub_1A44B2978(v70, v69 & 1, (uint64_t *)&v76, v16, (uint64_t)v12, (uint64_t)v29, v17, (double *)&v75);
    objc_autoreleasePoolPop(v53);
    swift_release();
    swift_release();
    v54 = sub_1A44BDB60((uint64_t)v76);
    v55 = v75;
    type metadata accessor for REMAnchoredBubbleModel();
    v56 = swift_allocObject();
    v57 = v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
    v58 = sub_1A46900FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
    v59 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
    *(_QWORD *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction) = 0;
    *(_QWORD *)(v56 + 16) = v9;
    *(_QWORD *)(v56 + 24) = v54;
    v60 = (_QWORD *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_version);
    *v60 = 3223089;
    v60[1] = 0xE300000000000000;
    *(_QWORD *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = v55;
    *(_QWORD *)(v56 + v59) = v17;
    v61 = (id)v9;
    swift_bridgeObjectRelease();

    swift_release();
    v62 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v62;
    *(_QWORD *)(v56 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels) = 0;
    return;
  }
  v66 = v17;
  v67 = v12;
  v68 = v9;
  swift_retain();
  v65 = v16;
  v28 = (uint64_t *)(v16 + 64);
  v29 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v31 = *(v28 - 3);
    v74 = *(v28 - 4);
    v32 = *(v28 - 2);
    v33 = *(v28 - 1);
    v34 = *v28;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v9 = sub_1A443E4C8(v32, v33);
    v36 = v29[2];
    v37 = (v35 & 1) == 0;
    v38 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    a3 = v35;
    if (v29[3] < v38)
      break;
LABEL_17:
    if ((a3 & 1) != 0)
    {
      v72 = v27;
      v73 = v34;
      swift_bridgeObjectRelease();
      v41 = v29[7];
      v42 = *(_QWORD **)(v41 + 8 * v9);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v71 = v41;
      *(_QWORD *)(v41 + 8 * v9) = v42;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v42 = sub_1A44394F8(0, v42[2] + 1, 1, v42);
        *(_QWORD *)(v41 + 8 * v9) = v42;
      }
      v45 = v42[2];
      v44 = v42[3];
      v46 = v45 + 1;
      v27 = v72;
      if (v45 >= v44 >> 1)
      {
        v47 = sub_1A44394F8((_QWORD *)(v44 > 1), v45 + 1, 1, v42);
        v46 = v45 + 1;
        v42 = v47;
        *(_QWORD *)(v71 + 8 * v9) = v47;
      }
      v42[2] = v46;
      v30 = &v42[5 * v45];
      v30[4] = v74;
      v30[5] = v31;
      v30[6] = v32;
      v30[7] = v33;
      v30[8] = v73;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C878);
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1A4695C10;
      *(_QWORD *)(v48 + 32) = v74;
      *(_QWORD *)(v48 + 40) = v31;
      *(_QWORD *)(v48 + 48) = v32;
      *(_QWORD *)(v48 + 56) = v33;
      *(_QWORD *)(v48 + 64) = v34;
      v29[(v9 >> 6) + 8] |= 1 << v9;
      v49 = (uint64_t *)(v29[6] + 16 * v9);
      *v49 = v32;
      v49[1] = v33;
      *(_QWORD *)(v29[7] + 8 * v9) = v48;
      v50 = v29[2];
      v51 = __OFADD__(v50, 1);
      v52 = v50 + 1;
      if (v51)
        goto LABEL_30;
      v29[2] = v52;
    }
    v28 += 5;
    if (!--v27)
    {
      v16 = v65;
      v15 = swift_release();
      v12 = v67;
      v9 = v68;
      v17 = v66;
      v26 = MEMORY[0x1E0DEE9E0];
      goto LABEL_26;
    }
  }
  sub_1A44415EC(v38, 1);
  v29 = v76;
  v39 = sub_1A443E4C8(v32, v33);
  if ((a3 & 1) == (v40 & 1))
  {
    v9 = v39;
    goto LABEL_17;
  }
  sub_1A4691C08();
  __break(1u);
LABEL_33:
  swift_release();
  __break(1u);
  objc_autoreleasePoolPop(a3);
  __break(1u);
}

uint64_t sub_1A44B207C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  _QWORD *v9;
  unint64_t v10;
  BOOL v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  BOOL v42;
  uint64_t v43;
  _QWORD *v44;
  BOOL v45;
  unint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  unint64_t v54;
  char v55;
  char v56;
  int isUniquelyReferenced_nonNull_native;
  char v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char v73;
  char v74;
  unint64_t v75;
  uint64_t v76;
  _BOOL8 v77;
  uint64_t v78;
  char v79;
  unint64_t v80;
  char v81;
  uint64_t *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t result;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int64_t v95;
  void *v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104[10];
  uint64_t v105;

  v92 = a2;
  v91 = sub_1A468FBEC();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v87 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = MEMORY[0x1E0DEE9E8];
  v4 = *(_QWORD *)(a1 + 64);
  v94 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v95 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  v8 = 0;
  v93 = 0;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v88 = a1;
  while (1)
  {
    if (v7)
    {
      v97 = (v7 - 1) & v7;
      v98 = v8;
      v10 = __clz(__rbit64(v7)) | (v8 << 6);
    }
    else
    {
      v11 = __OFADD__(v8, 1);
      v12 = v8 + 1;
      if (v11)
        goto LABEL_98;
      if (v12 >= v95)
        goto LABEL_91;
      v13 = *(_QWORD *)(v94 + 8 * v12);
      if (!v13)
      {
        v14 = v12 + 1;
        if (v12 + 1 >= v95)
          goto LABEL_91;
        v13 = *(_QWORD *)(v94 + 8 * v14);
        if (!v13)
        {
          v14 = v12 + 2;
          if (v12 + 2 >= v95)
            goto LABEL_91;
          v13 = *(_QWORD *)(v94 + 8 * v14);
          if (!v13)
          {
            v14 = v12 + 3;
            if (v12 + 3 >= v95)
              goto LABEL_91;
            v13 = *(_QWORD *)(v94 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                v12 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_99;
                if (v12 >= v95)
                  break;
                v13 = *(_QWORD *)(v94 + 8 * v12);
                ++v14;
                if (v13)
                  goto LABEL_19;
              }
LABEL_91:
              swift_release();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return (uint64_t)v9;
            }
          }
        }
        v12 = v14;
      }
LABEL_19:
      v97 = (v13 - 1) & v13;
      v98 = v12;
      v10 = __clz(__rbit64(v13)) + (v12 << 6);
    }
    v15 = 16 * v10;
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v15);
    v17 = *v16;
    v18 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v15);
    v20 = v19[1];
    v100 = *v19;
    swift_bridgeObjectRetain();
    v21 = swift_bridgeObjectRetain();
    v96 = (void *)MEMORY[0x1A859F880](v21);
    if (sub_1A4690954() <= 99)
      break;
LABEL_6:
    objc_autoreleasePoolPop(v96);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v97;
    v8 = v98;
  }
  v99 = v18;
  v104[0] = _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(v17, v18);
  v104[1] = v22;
  v23 = v89;
  sub_1A468FBC8();
  sub_1A4466118();
  v24 = sub_1A4691218();
  v26 = v25;
  (*(void (**)(char *, uint64_t))(v90 + 8))(v23, v91);
  v27 = swift_bridgeObjectRelease();
  v28 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0)
    v28 = v24 & 0xFFFFFFFFFFFFLL;
  if (!v28)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v104[0] = MEMORY[0x1E0DEE9D8];
  v29 = (void *)MEMORY[0x1A859F880](v27);
  v30 = v93;
  sub_1A44B9D10();
  v93 = v30;
  objc_autoreleasePoolPop(v29);
  swift_bridgeObjectRelease();
  v31 = v104[0];
  v102 = *(_QWORD *)(v104[0] + 16);
  if (!v102)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    a1 = v88;
    goto LABEL_6;
  }
  v32 = 0;
  v101 = v104[0] + 32;
  v103 = v20;
  while (v32 < *(_QWORD *)(v31 + 16))
  {
    v33 = (uint64_t *)(v101 + 16 * v32);
    v34 = *v33;
    v35 = v33[1];
    v36 = v105;
    if (!*(_QWORD *)(v105 + 16))
    {
      swift_bridgeObjectRetain();
      if (v9[2])
        goto LABEL_47;
      goto LABEL_58;
    }
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    v37 = sub_1A4691CC8();
    v38 = -1 << *(_BYTE *)(v36 + 32);
    v39 = v37 & ~v38;
    if (((*(_QWORD *)(v36 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
      goto LABEL_46;
    v40 = *(_QWORD *)(v36 + 48);
    v41 = (_QWORD *)(v40 + 16 * v39);
    v42 = *v41 == v34 && v41[1] == v35;
    if (!v42 && (sub_1A4691A40() & 1) == 0)
    {
      v43 = ~v38;
      while (1)
      {
        v39 = (v39 + 1) & v43;
        if (((*(_QWORD *)(v36 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
          break;
        v44 = (_QWORD *)(v40 + 16 * v39);
        v45 = *v44 == v34 && v44[1] == v35;
        if (v45 || (sub_1A4691A40() & 1) != 0)
          goto LABEL_26;
      }
LABEL_46:
      swift_bridgeObjectRelease();
      v20 = v103;
      if (v9[2])
      {
LABEL_47:
        swift_bridgeObjectRetain();
        v46 = sub_1A443E4C8(v34, v35);
        if ((v47 & 1) != 0)
        {
          v48 = (uint64_t *)(v9[7] + 24 * v46);
          v50 = *v48;
          v49 = v48[1];
          v51 = v48[2];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v50 == v100 && v49 == v20)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v53 = sub_1A4691A40();
            swift_bridgeObjectRelease();
            if ((v53 & 1) == 0)
            {
              swift_bridgeObjectRetain();
              v54 = sub_1A443E4C8(v34, v35);
              v56 = v55;
              swift_bridgeObjectRelease();
              if ((v56 & 1) != 0)
              {
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v104[0] = (uint64_t)v9;
                if (!isUniquelyReferenced_nonNull_native)
                {
                  sub_1A444746C();
                  v9 = (_QWORD *)v104[0];
                }
                swift_bridgeObjectRelease();
                sub_1A45A8C3C(v54, (uint64_t)v9);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_1A4465F6C(v104, v34, v35);
              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
          }
          v11 = __OFADD__(v51, 1);
          v72 = v51 + 1;
          if (v11)
            goto LABEL_95;
          swift_bridgeObjectRetain();
          v73 = swift_isUniquelyReferenced_nonNull_native();
          v104[0] = (uint64_t)v9;
          v75 = sub_1A443E4C8(v34, v35);
          v76 = v9[2];
          v77 = (v74 & 1) == 0;
          v78 = v76 + v77;
          if (__OFADD__(v76, v77))
            goto LABEL_96;
          v79 = v74;
          if (v9[3] < v78)
          {
            sub_1A44412C8(v78, v73);
            v80 = sub_1A443E4C8(v34, v35);
            if ((v79 & 1) != (v81 & 1))
              goto LABEL_100;
            v75 = v80;
            v9 = (_QWORD *)v104[0];
            if ((v79 & 1) == 0)
              goto LABEL_74;
LABEL_78:
            v85 = (_QWORD *)(v9[7] + 24 * v75);
            swift_bridgeObjectRelease();
            v20 = v103;
            *v85 = v100;
            v85[1] = v20;
            v85[2] = v72;
LABEL_67:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_27;
          }
          if ((v73 & 1) != 0)
          {
            v9 = (_QWORD *)v104[0];
            if ((v74 & 1) != 0)
              goto LABEL_78;
          }
          else
          {
            sub_1A444746C();
            v9 = (_QWORD *)v104[0];
            if ((v79 & 1) != 0)
              goto LABEL_78;
          }
LABEL_74:
          v9[(v75 >> 6) + 8] |= 1 << v75;
          v82 = (uint64_t *)(v9[6] + 16 * v75);
          *v82 = v34;
          v82[1] = v35;
          v83 = (_QWORD *)(v9[7] + 24 * v75);
          v20 = v103;
          *v83 = v100;
          v83[1] = v20;
          v83[2] = v72;
          v84 = v9[2];
          v11 = __OFADD__(v84, 1);
          v70 = v84 + 1;
          if (v11)
            goto LABEL_97;
LABEL_63:
          v9[2] = v70;
          swift_bridgeObjectRetain();
          goto LABEL_67;
        }
        swift_bridgeObjectRelease();
      }
LABEL_58:
      swift_bridgeObjectRetain();
      v58 = swift_isUniquelyReferenced_nonNull_native();
      v104[0] = (uint64_t)v9;
      v60 = sub_1A443E4C8(v34, v35);
      v61 = v9[2];
      v62 = (v59 & 1) == 0;
      v63 = v61 + v62;
      if (__OFADD__(v61, v62))
        goto LABEL_93;
      v64 = v59;
      if (v9[3] >= v63)
      {
        if ((v58 & 1) != 0)
        {
          v9 = (_QWORD *)v104[0];
          if ((v59 & 1) == 0)
            goto LABEL_62;
        }
        else
        {
          sub_1A444746C();
          v9 = (_QWORD *)v104[0];
          if ((v64 & 1) == 0)
            goto LABEL_62;
        }
      }
      else
      {
        sub_1A44412C8(v63, v58);
        v65 = sub_1A443E4C8(v34, v35);
        if ((v64 & 1) != (v66 & 1))
          goto LABEL_100;
        v60 = v65;
        v9 = (_QWORD *)v104[0];
        if ((v64 & 1) == 0)
        {
LABEL_62:
          v9[(v60 >> 6) + 8] |= 1 << v60;
          v67 = (uint64_t *)(v9[6] + 16 * v60);
          *v67 = v34;
          v67[1] = v35;
          v68 = (_QWORD *)(v9[7] + 24 * v60);
          v20 = v103;
          *v68 = v100;
          v68[1] = v20;
          v68[2] = 1;
          v69 = v9[2];
          v11 = __OFADD__(v69, 1);
          v70 = v69 + 1;
          if (v11)
            goto LABEL_94;
          goto LABEL_63;
        }
      }
      v71 = (_QWORD *)(v9[7] + 24 * v60);
      swift_bridgeObjectRelease();
      v20 = v103;
      *v71 = v100;
      v71[1] = v20;
      v71[2] = 1;
      goto LABEL_67;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v103;
LABEL_27:
    if (++v32 == v102)
      goto LABEL_5;
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

void sub_1A44B2978(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double *a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  __n128 v21;
  double *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint8_t *v28;
  char v30;
  double v31;

  v9 = v8;
  if ((a2 & 1) == 0)
  {
    *a3 = sub_1A44B2C68(a4, a5, a6, a7);
    swift_bridgeObjectRelease();
    *(_QWORD *)a8 = a1;
    return;
  }
  v31 = 0.4;
  *a3 = sub_1A44B2C68(a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1A44C0314(v17);
  swift_bridgeObjectRelease();
  v19 = sub_1A44B2EA8(v18, a5, a7, 0.4);
  swift_bridgeObjectRelease();
  v30 = v19 & 1;
  v20 = swift_beginAccess();
  v21.n128_f64[0] = v31;
  if (v31 > 0.01)
  {
    v22 = a8;
    while (v30 == 1)
    {
      v23 = (void *)MEMORY[0x1A859F880](v20, v21);
      sub_1A44B30A4(&v31, a3, a4, a5, a6, a7, &v30);
      if (v9)
        goto LABEL_17;
      v9 = 0;
      objc_autoreleasePoolPop(v23);
      v21.n128_f64[0] = v31;
      if (v31 <= 0.01)
      {
        if ((v30 & 1) != 0)
          goto LABEL_15;
        goto LABEL_9;
      }
    }
    goto LABEL_9;
  }
  v22 = a8;
  if ((v19 & 1) == 0)
  {
LABEL_9:
    if (qword_1ED23F210 != -1)
      swift_once();
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED23F1F8);
    v25 = sub_1A469030C();
    v26 = sub_1A4691008();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v27 = 134217984;
      sub_1A46911D0();
      _os_log_impl(&dword_1A442D000, v25, v26, "REMAnchoredBubbleModel: selected scale %f", v27, 0xCu);
      v28 = v27;
      v22 = a8;
      MEMORY[0x1A85A0114](v28, -1, -1);
    }

    *v22 = v31;
    return;
  }
LABEL_15:
  v23 = (void *)MEMORY[0x1A859F880](v21);
  sub_1A44B339C(a3, a4, a5, a6, a7, v22);
  if (v9)
  {
LABEL_17:
    objc_autoreleasePoolPop(v23);
    __break(1u);
  }
  else
  {
    objc_autoreleasePoolPop(v23);
  }
}

uint64_t sub_1A44B2C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v22;

  v4 = MEMORY[0x1E0DEE9E0];
  v22 = MEMORY[0x1E0DEE9E0];
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v7 = 0;
    v8 = (uint64_t *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      v10 = (void *)*(v8 - 1);
      v9 = *v8;
      ++v7;
      v12 = *(v8 - 3);
      v11 = *(v8 - 2);
      swift_bridgeObjectRetain();
      v13 = swift_bridgeObjectRetain();
      v14 = (void *)MEMORY[0x1A859F880](v13);
      sub_1A44BA200(a2, v12, v11, a3, v10, v9, a4, (double *)&v22);
      objc_autoreleasePoolPop(v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v22;
      if (*(_QWORD *)(v22 + 16) >> 3 >= 0x271uLL)
        break;
      v8 += 5;
      if (v20 == v7)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED23F210 != -1)
      swift_once();
    v15 = sub_1A4690318();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED23F1F8);
    swift_bridgeObjectRetain();
    v16 = sub_1A469030C();
    v17 = sub_1A4690FD8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      *(_DWORD *)v18 = 134218240;
      sub_1A46911D0();
      *(_WORD *)(v18 + 12) = 2048;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v16, v17, "Achieved maxAnchoredBubbleCount. Examined %ld word from total %ld candidates", (uint8_t *)v18, 0x16u);
      MEMORY[0x1A85A0114](v18, -1, -1);

      return v4;
    }

LABEL_11:
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A44B2EA8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v16 = 0;
  v17 = 0;
  v9 = (void *)MEMORY[0x1A859F880]();
  sub_1A44BAA84(a1, a2, a3, &v16, &v17, v4, a4);
  objc_autoreleasePoolPop(v9);
  if (qword_1ED23F210 != -1)
    swift_once();
  v10 = sub_1A4690318();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED23F1F8);
  v11 = sub_1A469030C();
  v12 = sub_1A4691008();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    *(_DWORD *)v13 = 134218240;
    swift_beginAccess();
    sub_1A46911D0();
    *(_WORD *)(v13 + 12) = 2048;
    swift_beginAccess();
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v11, v12, "REMAnchoredBubbleModel: checking singular with %ld vectorizable bubbles and %ld are non-singular", (uint8_t *)v13, 0x16u);
    MEMORY[0x1A85A0114](v13, -1, -1);
  }

  result = swift_beginAccess();
  v15 = 5 * v17;
  if ((unsigned __int128)(v17 * (__int128)5) >> 64 == (5 * v17) >> 63)
  {
    swift_beginAccess();
    return v15 < v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A44B30A4(double *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _BYTE *a7)
{
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _BYTE *v24;

  swift_beginAccess();
  *a1 = *a1 + -0.05;
  if (qword_1ED23F210 != -1)
    swift_once();
  v13 = sub_1A4690318();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED23F1F8);
  v14 = sub_1A469030C();
  v15 = sub_1A4691008();
  if (os_log_type_enabled(v14, v15))
  {
    v24 = a7;
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134217984;
    swift_beginAccess();
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v14, v15, "REMAnchoredBubbleModel: current scale %f", v16, 0xCu);
    v17 = v16;
    a7 = v24;
    MEMORY[0x1A85A0114](v17, -1, -1);
  }

  swift_beginAccess();
  *a2 = sub_1A44B2C68(a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1A44C0314(v18);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v20 = sub_1A44B2EA8(v19, a4, a6, *a1);
  swift_bridgeObjectRelease();
  *a7 = v20 & 1;
  v21 = sub_1A469030C();
  v22 = sub_1A4691008();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v23 = 134217984;
    swift_beginAccess();
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v21, v22, "REMAnchoredBubbleModel: trained for scale %f", v23, 0xCu);
    MEMORY[0x1A85A0114](v23, -1, -1);
  }

}

uint64_t sub_1A44B339C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t result;

  if (qword_1ED23F210 != -1)
    swift_once();
  v11 = sub_1A4690318();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED23F1F8);
  v12 = sub_1A469030C();
  v13 = sub_1A4691008();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v14 = 134217984;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v12, v13, "REMAnchoredBubbleModel: fall back with default %f", v14, 0xCu);
    MEMORY[0x1A85A0114](v14, -1, -1);
  }

  *a1 = sub_1A44B2C68(a2, a3, a4, a5);
  result = swift_bridgeObjectRelease();
  *a6 = 0x3FC999999999999ALL;
  return result;
}

uint64_t sub_1A44B3550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE v24[48];

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v24[-v14];
  result = sub_1A44B9008(a1, a2);
  if (v17)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4B0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4695C10;
    *(_BYTE *)(inited + 32) = 4;
    *(_QWORD *)(inited + 40) = MEMORY[0x1E0DEE9E8];
    sub_1A443D024(inited);
    v20 = v19;
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    sub_1A444ABF4((uint64_t)v15, (uint64_t)v13, &qword_1ED243170);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      sub_1A445404C((uint64_t)v15, &qword_1ED243170);
      sub_1A445404C((uint64_t)v13, &qword_1ED243170);
      v21 = 0xE500000000000000;
      v22 = 0x296C696E28;
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v13, v6);
      v22 = sub_1A46900CC();
      v21 = v23;
      sub_1A445404C((uint64_t)v15, &qword_1ED243170);
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    }
    type metadata accessor for REMSuggestedList();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v22;
    *(_QWORD *)(result + 24) = v21;
    *(_QWORD *)a3 = v20;
    *(_QWORD *)(a3 + 8) = result;
    *(_QWORD *)(a3 + 16) = 0;
    *(_QWORD *)(a3 + 24) = 0;
    *(_BYTE *)(a3 + 32) = 0;
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_BYTE *)(a3 + 32) = -1;
  }
  return result;
}

uint64_t sub_1A44B3774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint8_t *v26;
  uint64_t v27;
  char v29;
  _QWORD v30[2];
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37[7];

  v1 = v0;
  v2 = sub_1A468FF7C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v30 - v7;
  sub_1A468FEF8();
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
  v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v12 = v11;
  v13 = *(_QWORD *)(v0 + 24);
  sub_1A468FBB0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A468FBA4();
  v37[0] = 3223089;
  v37[1] = 0xE300000000000000;
  v37[2] = v9;
  v37[3] = v10;
  v37[4] = v12;
  v37[5] = v13;
  sub_1A44BEDBC();
  v14 = sub_1A468FB98();
  v33 = v2;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v34 = v15;
  v35 = v17;
  sub_1A468FFD0();
  if (qword_1ED23F210 != -1)
    swift_once();
  v18 = sub_1A4690318();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED23F1F8);
  v19 = v33;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v33);
  v20 = sub_1A469030C();
  v21 = sub_1A4691008();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v37[0] = v32;
    v31 = v22;
    *(_DWORD *)v22 = 136315138;
    v30[1] = v22 + 4;
    v23 = sub_1A468FE98();
    v36 = sub_1A4431120(v23, v24, v37);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v6, v19);
    v26 = v31;
    _os_log_impl(&dword_1A442D000, v20, v21, "REMAnchoredBubbleModel: Model info saved to {%s}", v31, 0xCu);
    v27 = v32;
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v27, -1, -1);
    MEMORY[0x1A85A0114](v26, -1, -1);
  }
  else
  {
    v25 = *(void (**)(char *, uint64_t))(v3 + 8);
    v25(v6, v19);
  }

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction))
  {
    swift_retain();
    v29 = sub_1A46581D8();
    sub_1A44695EC(v34, v35);
    swift_release();
    v25(v8, v19);
  }
  else
  {
    v25(v8, v19);
    sub_1A44695EC(v34, v35);
    v29 = 1;
  }
  return v29 & 1;
}

uint64_t sub_1A44B3D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26[6];

  v3 = sub_1A468FF7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
  v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v10 = v9;
  v11 = *(_QWORD *)(v1 + 24);
  sub_1A468FBB0();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A468FBA4();
  v26[0] = 3223089;
  v26[1] = 0xE300000000000000;
  v26[2] = v7;
  v26[3] = v8;
  v26[4] = v10;
  v26[5] = v11;
  sub_1A44BEDBC();
  v13 = sub_1A468FB98();
  v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A468FFD0();
  if (qword_1ED23F210 != -1)
    swift_once();
  v16 = sub_1A4690318();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED23F1F8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v17 = sub_1A469030C();
  v18 = sub_1A4691008();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v26[0] = v20;
    v24 = v15;
    *(_DWORD *)v19 = 136315138;
    v23 = v19 + 4;
    v21 = sub_1A468FE98();
    v25 = sub_1A4431120(v21, v22, v26);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_1A442D000, v17, v18, "REMAnchoredBubbleModel.saveBubblesJson: Model info saved to {%s}", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v20, -1, -1);
    MEMORY[0x1A85A0114](v19, -1, -1);
    sub_1A44695EC(v13, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1A44695EC(v13, v15);
  }

  return 1;
}

uint64_t static REMAnchoredBubbleModel.loadOnDeviceTrainedModel(baseURL:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = sub_1A468FF7C();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v27 - v4;
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v27 - v6;
  sub_1A468FEF8();
  v8 = sub_1A468FF88();
  v10 = v9;
  sub_1A44695A8(v8, v9);
  sub_1A468FF04();
  v11 = sub_1A4659A34();
  v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v5, v0);
  sub_1A468FB74();
  swift_allocObject();
  sub_1A468FB68();
  sub_1A44BEE00();
  sub_1A468FB5C();
  swift_release();
  v29 = v11;
  v30 = v7;
  v13 = v32;
  v28 = v31;
  v14 = v33;
  v15 = v34;
  swift_bridgeObjectRetain();
  v16 = v12;
  v17 = sub_1A469087C();
  type metadata accessor for REMAnchoredBubbleModel();
  v18 = swift_allocObject();
  v19 = v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
  v20 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  *(_QWORD *)(v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction) = 0;
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v15;
  v22 = v16;
  v23 = (_QWORD *)(v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_version);
  *v23 = v28;
  v23[1] = v13;
  *(_QWORD *)(v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = v14;
  *(_QWORD *)(v18 + v21) = v29;
  swift_bridgeObjectRetain();
  swift_release();
  sub_1A44695EC(v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1A44695EC(v8, v10);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v24;
  v25 = v30;
  *(_QWORD *)(v18 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels) = 0;
  v22(v25, v0);
  return v18;
}

uint64_t static REMAnchoredBubbleModel.loadGroceryModel(from:labels:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = sub_1A468FF7C();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1A468FF88();
  v6 = v5;
  sub_1A468FB74();
  swift_allocObject();
  sub_1A468FB68();
  sub_1A44BEE00();
  sub_1A468FB5C();
  swift_release();
  swift_bridgeObjectRetain();
  v8 = sub_1A469087C();
  type metadata accessor for REMAnchoredBubbleModel();
  v9 = swift_allocObject();
  v10 = v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
  v11 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v12 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction) = 0;
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v18;
  v13 = (_QWORD *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_version);
  *v13 = v15;
  v13[1] = v16;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale) = v17;
  *(_QWORD *)(v9 + v12) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A44695EC(v4, v6);
  v14 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v14;
  *(_QWORD *)(v9 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels) = a2;
  return v9;
}

uint64_t sub_1A44B5084()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  v0 = sub_1A4690714();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A44B50E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels))
  {
    v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels);
  }
  else
  {
    v2 = swift_bridgeObjectRetain();
    v3 = sub_1A44B13B4(v2);
    swift_bridgeObjectRelease();
    v4 = sub_1A44BB3C4(v3);
    swift_bridgeObjectRelease();
    v6 = v4;
    swift_bridgeObjectRetain_n();
    sub_1A44BB34C((uint64_t *)&v6, sub_1A462EBDC, sub_1A44BBE00);
    swift_bridgeObjectRelease_n();
    v1 = (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A44B51AC()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
}

double sub_1A44B51B8()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
}

uint64_t sub_1A44B51C8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  char v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, *(_QWORD *)(v0 + 16));
  if (v1)
  {
    v2 = v1;
    v3 = sub_1A44BDD6C(*(_QWORD *)(v0 + 24));
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction);
    v5 = *(double *)(v0 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale);
    swift_retain();
    v6 = sub_1A44B2EA8(v3, (uint64_t)v2, v4, v5);

    swift_release();
    swift_release();
    return v6 & 1;
  }
  else
  {
    if (qword_1ED23F210 != -1)
      swift_once();
    v8 = sub_1A4690318();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED23F1F8);
    swift_retain_n();
    v9 = sub_1A469030C();
    v10 = sub_1A4690FF0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      sub_1A4431120(v13, v14, &v15);
      sub_1A46911D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v9, v10, "REMAnchoredBubbleModel: failed to init wordEmbedding for language code %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v12, -1, -1);
      MEMORY[0x1A85A0114](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return 0;
  }
}

unint64_t sub_1A44B5408()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  _QWORD *v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  NSObject *v60;
  os_log_type_t v61;
  unint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  void *v78;
  void *v79;
  unint64_t v80;
  uint64_t inited;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  unint64_t v87;
  size_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  void *v96;
  _BYTE *v97;
  id v98;
  id v99;
  NSObject *v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  unint64_t v110;
  char *v111;
  size_t v112;
  double v113;
  double v114;
  double v115;
  unint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  char v119;
  NSObject *v120;
  os_log_type_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  _QWORD *v130;
  uint8_t *v131;
  uint8_t *v132;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  uint64_t v135;
  NSObject *v136;
  os_log_type_t v137;
  uint8_t *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  char *v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  int64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int64_t v168[2];
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171[3];
  uint64_t v172;
  unint64_t v173;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_wordEmbeddingForLanguage_, *(_QWORD *)(v0 + 16));
  if (!v2)
  {
    if (qword_1ED23F210 != -1)
      goto LABEL_180;
    goto LABEL_159;
  }
  v3 = v2;
  v172 = 0;
  v173 = MEMORY[0x1E0DEE9E0];
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v4 + 64);
  v143 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & v5;
  v142 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_predefinedLabels;
  v9 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_pcaDimensionReduction;
  v157 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_distanceScale;
  v146 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v10 = 0;
  v144 = (unint64_t)(v6 + 63) >> 6;
  v154 = v0;
  v160 = v3;
  v161 = v9;
  while (2)
  {
    while (2)
    {
      while (2)
      {
        if (v8)
        {
          v11 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          v12 = v11 | (v10 << 6);
        }
        else
        {
          v13 = __OFADD__(v10++, 1);
          if (v13)
            goto LABEL_175;
          if (v10 >= v144)
            goto LABEL_157;
          v14 = *(_QWORD *)(v143 + 8 * v10);
          if (!v14)
          {
            v15 = v10 + 1;
            if (v10 + 1 >= v144)
              goto LABEL_157;
            v14 = *(_QWORD *)(v143 + 8 * v15);
            if (!v14)
            {
              v15 = v10 + 2;
              if (v10 + 2 >= v144)
                goto LABEL_157;
              v14 = *(_QWORD *)(v143 + 8 * v15);
              if (!v14)
              {
                v15 = v10 + 3;
                if (v10 + 3 >= v144)
                  goto LABEL_157;
                v14 = *(_QWORD *)(v143 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    v10 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_179;
                    if (v10 >= v144)
                      break;
                    v14 = *(_QWORD *)(v143 + 8 * v10);
                    ++v15;
                    if (v14)
                      goto LABEL_19;
                  }
LABEL_157:

                  swift_release();
                  swift_beginAccess();
                  return v173;
                }
              }
            }
            v10 = v15;
          }
LABEL_19:
          v8 = (v14 - 1) & v14;
          v12 = __clz(__rbit64(v14)) + (v10 << 6);
        }
        v16 = (uint64_t *)(*(_QWORD *)(v146 + 48) + 16 * v12);
        v18 = *v16;
        v17 = v16[1];
        v19 = *(_QWORD *)(v146 + 56) + 32 * v12;
        v20 = *(double *)v19;
        v21 = *(_QWORD *)(v19 + 8);
        v22 = *(_QWORD *)(v19 + 16);
        v149 = *(_BYTE *)(v19 + 24);
        v153 = v10;
        v150 = v22;
        v156 = v21;
        if ((v149 & 1) == 0)
        {
          sub_1A44BEF64(v21, v22, 0);
          sub_1A44BEF64(v21, v22, 0);
          swift_bridgeObjectRetain();
          v151 = v21;
          v152 = v22;
          goto LABEL_60;
        }
        v165 = *(_QWORD *)(v1 + v142);
        if (v165)
        {
          swift_bridgeObjectRetain();
          v23 = v165;
          v24 = v156;
          if ((v156 & 0x8000000000000000) == 0)
            goto LABEL_58;
          goto LABEL_63;
        }
        v163 = *v16;
        v147 = v8;
        v25 = *(_QWORD *)(v1 + 24);
        v26 = v25 + 64;
        v27 = 1 << *(_BYTE *)(v25 + 32);
        if (v27 < 64)
          v28 = ~(-1 << v27);
        else
          v28 = -1;
        v29 = v28 & *(_QWORD *)(v25 + 64);
        v30 = (unint64_t)(v27 + 63) >> 6;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v31 = 0;
        v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        if (v29)
        {
LABEL_29:
          v33 = __clz(__rbit64(v29));
          v29 &= v29 - 1;
          v34 = v33 | (v31 << 6);
          goto LABEL_30;
        }
        while (1)
        {
          v13 = __OFADD__(v31++, 1);
          if (v13)
          {
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
            goto LABEL_178;
          }
          if (v31 >= v30)
            goto LABEL_57;
          v36 = *(_QWORD *)(v26 + 8 * v31);
          if (!v36)
            break;
LABEL_46:
          v29 = (v36 - 1) & v36;
          v34 = __clz(__rbit64(v36)) + (v31 << 6);
LABEL_30:
          v35 = *(_QWORD *)(v25 + 56) + 32 * v34;
          if ((*(_BYTE *)(v35 + 24) & 1) != 0)
          {
            if (v29)
              goto LABEL_29;
          }
          else
          {
            v39 = *(_QWORD *)(v35 + 8);
            v38 = *(_QWORD *)(v35 + 16);
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v32 = sub_1A4438920(0, v32[2] + 1, 1, v32);
            v41 = v32[2];
            v40 = v32[3];
            v42 = v32;
            if (v41 >= v40 >> 1)
              v42 = sub_1A4438920((_QWORD *)(v40 > 1), v41 + 1, 1, v32);
            v42[2] = v41 + 1;
            v32 = v42;
            v43 = &v42[2 * v41];
            v43[4] = v39;
            v43[5] = v38;
            v9 = v161;
            if (v29)
              goto LABEL_29;
          }
        }
        v37 = v31 + 1;
        if (v31 + 1 >= v30)
          goto LABEL_57;
        v36 = *(_QWORD *)(v26 + 8 * v37);
        if (v36)
          goto LABEL_45;
        v37 = v31 + 2;
        if (v31 + 2 >= v30)
          goto LABEL_57;
        v36 = *(_QWORD *)(v26 + 8 * v37);
        if (v36)
          goto LABEL_45;
        v37 = v31 + 3;
        if (v31 + 3 >= v30)
          goto LABEL_57;
        v36 = *(_QWORD *)(v26 + 8 * v37);
        if (v36)
          goto LABEL_45;
        v37 = v31 + 4;
        if (v31 + 4 >= v30)
          goto LABEL_57;
        v36 = *(_QWORD *)(v26 + 8 * v37);
        if (v36)
        {
LABEL_45:
          v31 = v37;
          goto LABEL_46;
        }
        v37 = v31 + 5;
        if (v31 + 5 < v30)
        {
          v36 = *(_QWORD *)(v26 + 8 * v37);
          if (!v36)
          {
            while (1)
            {
              v31 = v37 + 1;
              if (__OFADD__(v37, 1))
                break;
              if (v31 >= v30)
                goto LABEL_57;
              v36 = *(_QWORD *)(v26 + 8 * v31);
              ++v37;
              if (v36)
                goto LABEL_46;
            }
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            swift_once();
LABEL_159:
            v135 = sub_1A4690318();
            __swift_project_value_buffer(v135, (uint64_t)qword_1ED23F1F8);
            swift_retain_n();
            v136 = sub_1A469030C();
            v137 = sub_1A4690FF0();
            if (os_log_type_enabled(v136, v137))
            {
              v138 = (uint8_t *)swift_slowAlloc();
              v139 = swift_slowAlloc();
              v171[0] = v139;
              *(_DWORD *)v138 = 136315138;
              v140 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
              v169 = (_QWORD *)sub_1A4431120(v140, v141, v171);
              sub_1A46911D0();
              swift_release_n();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A442D000, v136, v137, "REMAnchoredBubbleModel: failed to init wordEmbedding for language code %s", v138, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1A85A0114](v139, -1, -1);
              MEMORY[0x1A85A0114](v138, -1, -1);

            }
            else
            {

              swift_release_n();
            }
            return sub_1A443D124(MEMORY[0x1E0DEE9D8]);
          }
          goto LABEL_45;
        }
LABEL_57:
        v10 = v153;
        v8 = v147;
        v18 = v163;
        swift_release();
        swift_bridgeObjectRelease();
        v44 = sub_1A44BB3C4((uint64_t)v32);
        swift_bridgeObjectRelease();
        v169 = v44;
        swift_bridgeObjectRetain_n();
        sub_1A44BB34C((uint64_t *)&v169, sub_1A462EBDC, sub_1A44BBE00);
        v3 = v160;
        swift_bridgeObjectRelease_n();
        v23 = (uint64_t)v169;
        v1 = v154;
        v22 = v150;
        v24 = v156;
        if (v156 < 0)
          goto LABEL_63;
LABEL_58:
        if (v24 >= *(_QWORD *)(v23 + 16))
        {
LABEL_63:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          sub_1A44BEF10(v24, v22, 1);
          if (qword_1ED23F210 != -1)
            swift_once();
          v51 = sub_1A4690318();
          __swift_project_value_buffer(v51, (uint64_t)qword_1ED23F1F8);
          swift_bridgeObjectRetain();
          v52 = sub_1A469030C();
          v53 = sub_1A4690FF0();
          if (os_log_type_enabled(v52, v53))
          {
            v54 = swift_slowAlloc();
            v55 = swift_slowAlloc();
            v169 = (_QWORD *)v55;
            *(_DWORD *)v54 = 136315138;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v54 + 4) = sub_1A4431120(v18, v17, (uint64_t *)&v169);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1A442D000, v52, v53, "REMAnchoredBubbleModel.triggerWordsByList: category list is nil for %s", (uint8_t *)v54, 0xCu);
            swift_arrayDestroy();
            v56 = v55;
            v1 = v154;
            MEMORY[0x1A85A0114](v56, -1, -1);
            MEMORY[0x1A85A0114](v54, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          continue;
        }
        break;
      }
      v45 = v23 + 16 * v24;
      v46 = *(_QWORD *)(v45 + 40);
      v151 = *(_QWORD *)(v45 + 32);
      swift_bridgeObjectRetain();
      v152 = v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_60:
      swift_beginAccess();
      v47 = v173;
      if (*(_QWORD *)(v173 + 16))
      {
        swift_bridgeObjectRetain();
        v48 = sub_1A443E4C8(v151, v152);
        if ((v49 & 1) != 0)
        {
          v50 = *(_QWORD **)(*(_QWORD *)(v47 + 56) + 8 * v48);
          swift_endAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_69;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      v50 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_69:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v50 = sub_1A4438920(0, v50[2] + 1, 1, v50);
      v58 = v50[2];
      v57 = v50[3];
      if (v58 >= v57 >> 1)
        v50 = sub_1A4438920((_QWORD *)(v57 > 1), v58 + 1, 1, v50);
      v50[2] = v58 + 1;
      v59 = &v50[2 * v58];
      v59[4] = v18;
      v59[5] = v17;
      if (__OFADD__(v172, 1))
        goto LABEL_167;
      ++v172;
      if (qword_1ED23F210 != -1)
        swift_once();
      v155 = sub_1A4690318();
      __swift_project_value_buffer(v155, (uint64_t)qword_1ED23F1F8);
      swift_bridgeObjectRetain_n();
      v60 = sub_1A469030C();
      v61 = sub_1A4691008();
      if (os_log_type_enabled(v60, v61))
      {
        v62 = v8;
        v63 = v50;
        v64 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        v169 = (_QWORD *)v65;
        *(_DWORD *)v64 = 134218242;
        *(_QWORD *)(v64 + 4) = v172;
        *(_WORD *)(v64 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v64 + 14) = sub_1A4431120(v18, v17, (uint64_t *)&v169);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v60, v61, "REMAnchoredBubbleModel: Anchor word no %ld: %s", (uint8_t *)v64, 0x16u);
        swift_arrayDestroy();
        v66 = v65;
        v1 = v154;
        MEMORY[0x1A85A0114](v66, -1, -1);
        v67 = v64;
        v50 = v63;
        v8 = v62;
        v10 = v153;
        MEMORY[0x1A85A0114](v67, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v68 = *(_QWORD *)(v1 + v9);
      swift_retain();
      sub_1A44B6910(v68, &v169);
      swift_release();
      v159 = v170;
      if (!v170)
      {
        swift_bridgeObjectRelease();
        sub_1A44BEF10(v156, v150, v149);
        v128 = sub_1A469030C();
        v129 = sub_1A4691008();
        if (os_log_type_enabled(v128, v129))
        {
          v130 = v50;
          v131 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v131 = 0;
          _os_log_impl(&dword_1A442D000, v128, v129, "REMAnchoredBubbleModel: Anchor word has no embedding", v131, 2u);
          v132 = v131;
          v50 = v130;
          MEMORY[0x1A85A0114](v132, -1, -1);
        }

        swift_beginAccess();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v168[0] = v173;
        v173 = 0x8000000000000000;
        sub_1A445E37C((uint64_t)v50, v151, v152, isUniquelyReferenced_nonNull_native);
        v173 = v168[0];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        continue;
      }
      break;
    }
    v148 = v8;
    v158 = (uint64_t)v169;
    v69 = sub_1A4690F90();
    swift_bridgeObjectRelease();
    v70 = *(_QWORD *)(v69 + 16);
    if (!v70)
    {
LABEL_147:
      swift_bridgeObjectRelease();
      sub_1A44BEF10(v156, v150, v149);
      swift_beginAccess();
      v119 = swift_isUniquelyReferenced_nonNull_native();
      v168[0] = v173;
      v173 = 0x8000000000000000;
      sub_1A445E37C((uint64_t)v50, v151, v152, v119);
      v173 = v168[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v120 = sub_1A469030C();
      v121 = sub_1A4691008();
      if (os_log_type_enabled(v120, v121))
      {
        v122 = swift_slowAlloc();
        v123 = swift_slowAlloc();
        v169 = (_QWORD *)v123;
        *(_DWORD *)v122 = 136315138;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
        v124 = sub_1A4690714();
        v126 = v125;
        v1 = v154;
        swift_bridgeObjectRelease();
        v127 = v124;
        v3 = v160;
        *(_QWORD *)(v122 + 4) = sub_1A4431120(v127, v126, (uint64_t *)&v169);
        v9 = v161;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v120, v121, "REMAnchoredBubbleModel: Trigger words: %s", (uint8_t *)v122, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v123, -1, -1);
        MEMORY[0x1A85A0114](v122, -1, -1);
      }

      swift_release();
      v10 = v153;
      v8 = v148;
      continue;
    }
    break;
  }
  v71 = (uint64_t *)(v69 + 40);
  while (2)
  {
    v72 = *(v71 - 1);
    v73 = *v71;
    v74 = *(_QWORD **)(v1 + v9);
    swift_retain();
    swift_bridgeObjectRetain();
    v166 = v72;
    v75 = sub_1A4690F84();
    if (!v75)
    {
      swift_bridgeObjectRelease();
      goto LABEL_146;
    }
    v76 = v75;
    if (!v74)
    {
      swift_bridgeObjectRelease();
      goto LABEL_83;
    }
    v77 = *(_QWORD *)(v75 + 16);
    if (v77 >> 60)
      goto LABEL_164;
    v164 = v50;
    swift_retain();
    v78 = (void *)swift_slowAlloc();
    v79 = v78;
    v80 = *(_QWORD *)(v76 + 16);
    if (v80)
    {
      if (v77 < v80)
        goto LABEL_166;
      if (v76 + 32 < (unint64_t)v78 + 8 * v80 && (unint64_t)v78 < v76 + 32 + 8 * v80)
        goto LABEL_181;
      memcpy(v78, (const void *)(v76 + 32), 8 * v80);
    }
    swift_bridgeObjectRelease();
    if (v80 != v77)
      goto LABEL_165;
    type metadata accessor for REMLinearAlgebraDataRef();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = v79;
    *(_QWORD *)(inited + 24) = v77;
    v162 = inited;
    if (!v74[6])
    {
      if (qword_1EE71C238 != -1)
        swift_once();
      __swift_project_value_buffer(v155, (uint64_t)qword_1EE724868);
      v93 = sub_1A469030C();
      v94 = sub_1A4690FF0();
      v3 = v160;
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v95 = 0;
        _os_log_impl(&dword_1A442D000, v93, v94, "REMPCASolver project vector: missing PCA projection", v95, 2u);
        MEMORY[0x1A85A0114](v95, -1, -1);
      }
      swift_release_n();

      v83 = v77;
      v92 = v162;
      v50 = v164;
      goto LABEL_134;
    }
    if (v74[5] != v77)
    {
      sub_1A44BEF20();
      v96 = (void *)swift_allocError();
      *v97 = 1;
      swift_willThrow();
      swift_release();
      v98 = v96;
      v99 = v96;
      v100 = sub_1A469030C();
      v101 = sub_1A4690FF0();
      if (os_log_type_enabled(v100, v101))
      {
        v102 = swift_slowAlloc();
        v103 = swift_slowAlloc();
        v169 = (_QWORD *)v103;
        *(_DWORD *)v102 = 136315138;
        swift_getErrorValue();
        v104 = Error.rem_errorDescription.getter(v167);
        *(_QWORD *)(v102 + 4) = sub_1A4431120(v104, v105, (uint64_t *)&v169);
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A442D000, v100, v101, "REMAnchoredBubbleModel: Skipping dimension reduction when predicting from token due to %s", (uint8_t *)v102, 0xCu);
        swift_arrayDestroy();
        v106 = v103;
        v1 = v154;
        MEMORY[0x1A85A0114](v106, -1, -1);
        MEMORY[0x1A85A0114](v102, -1, -1);

        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        swift_release();

        swift_bridgeObjectRelease();
        swift_release();

      }
      v3 = v160;
      v9 = v161;
      v50 = v164;
      goto LABEL_84;
    }
    v83 = v74[4];
    if (v83 && v77)
    {
      if ((v83 & 0x8000000000000000) != 0)
        goto LABEL_182;
      v84 = sub_1A4690C00();
      *(_QWORD *)(v84 + 16) = v83;
      v85 = (char *)(v84 + 32);
      bzero((void *)(v84 + 32), 8 * v83);
      if (v83 >> 60)
        goto LABEL_169;
      v86 = (char *)swift_slowAlloc();
      v87 = *(_QWORD *)(v84 + 16);
      if (v87)
      {
        if (v83 < v87)
          goto LABEL_176;
        v88 = 8 * v87;
        if (v85 < &v86[8 * v87] && v86 < &v85[v88])
          goto LABEL_181;
        v145 = v86;
        memcpy(v86, v85, v88);
        v86 = v145;
      }
      v89 = v86;
      swift_bridgeObjectRelease();
      if (v87 != v83)
        goto LABEL_171;
      v90 = swift_allocObject();
      *(_QWORD *)(v90 + 16) = v89;
      *(_QWORD *)(v90 + 24) = v83;
      if (v83 >> 31)
        goto LABEL_172;
      if (v77 >> 31)
        goto LABEL_174;
      v91 = v90;
      cblas_dgemv_NEWLAPACK();
      swift_release_n();
      swift_release();
      v92 = v91;
      v1 = v154;
      v3 = v160;
      v50 = v164;
LABEL_134:
      v113 = *(double *)(v1 + v157);
      v169 = (_QWORD *)v158;
      v170 = v159;
      v168[0] = v83;
      v168[1] = v92;
      static REMVector.angularCosineDistance(lhs:rhs:)((int64_t *)&v169, v168);
      v9 = v161;
      if (v113 > 0.49)
      {
        v115 = 0.49;
        if (v114 <= 0.25)
          goto LABEL_136;
LABEL_142:
        if (v115 + v115 + v114 * (1.0 - v115) * 4.0 + -1.0 < v20)
          goto LABEL_143;
LABEL_137:
        swift_release();
LABEL_83:
        swift_bridgeObjectRelease();
LABEL_84:
        v71 += 3;
        if (!--v70)
          goto LABEL_147;
        continue;
      }
      if (v113 > 0.2)
        v115 = v113;
      else
        v115 = 0.2;
      if (v114 > 0.25)
        goto LABEL_142;
LABEL_136:
      if (v114 * 4.0 * v115 >= v20)
        goto LABEL_137;
LABEL_143:
      v117 = v50[2];
      v116 = v50[3];
      if (v117 >= v116 >> 1)
        v50 = sub_1A4438920((_QWORD *)(v116 > 1), v117 + 1, 1, v50);
      v50[2] = v117 + 1;
      v118 = &v50[2 * v117];
      v118[4] = v166;
      v118[5] = v73;
LABEL_146:
      swift_release();
      goto LABEL_84;
    }
    break;
  }
  if ((v83 & 0x8000000000000000) != 0)
    goto LABEL_182;
  if (v83)
  {
    v107 = sub_1A4690C00();
    *(_QWORD *)(v107 + 16) = v83;
    bzero((void *)(v107 + 32), 8 * v83);
    if (v83 >> 60)
      goto LABEL_170;
  }
  else
  {
    v107 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
      goto LABEL_168;
  }
  v108 = (char *)swift_slowAlloc();
  v109 = v108;
  v110 = *(_QWORD *)(v107 + 16);
  if (!v110)
  {
LABEL_132:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
    if (v110 != v83)
      goto LABEL_173;
    v92 = swift_allocObject();
    *(_QWORD *)(v92 + 16) = v109;
    *(_QWORD *)(v92 + 24) = v83;
    v50 = v164;
    v3 = v160;
    goto LABEL_134;
  }
  if (v83 < v110)
    goto LABEL_177;
  v111 = (char *)(v107 + 32);
  v112 = 8 * v110;
  if (v107 + 32 >= (unint64_t)&v108[8 * v110] || v108 >= &v111[v112])
  {
    memcpy(v108, v111, v112);
    goto LABEL_132;
  }
LABEL_181:
  sub_1A46916F8();
  __break(1u);
LABEL_182:
  sub_1A469162C();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1A44B6910@<X0>(uint64_t a1@<X3>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8[2];
  unint64_t v9[2];
  unint64_t v10[2];

  result = sub_1A4690F84();
  if (result)
  {
    v5 = result;
    if (a1)
    {
      v6 = *(_QWORD *)(result + 16);
      swift_retain();
      sub_1A44B8000(v5, v6, v9);
      v8[0] = v9[0];
      v8[1] = v9[1];
      sub_1A465869C(v8, v10);
      swift_release();
      result = swift_release();
      v7 = v10[1];
      *a2 = v10[0];
      a2[1] = v7;
      return result;
    }
    result = swift_bridgeObjectRelease();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

_QWORD *sub_1A44B6B7C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD), unint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _BYTE *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  void (*v69)(_BYTE *, uint64_t);
  void *v70;
  _QWORD *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  char v75;
  char v76;
  __int128 v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v90[12];
  int v91;
  void (*v92)(_QWORD, _QWORD, _QWORD, _QWORD);
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  unsigned __int8 v109;
  uint64_t v110;

  v6 = v5;
  v103 = a5;
  v99 = *v6;
  v102 = sub_1A46900FC();
  v105 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v93 = &v90[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71DFA8);
  MEMORY[0x1E0C80A78](v100);
  v101 = &v90[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v14 = MEMORY[0x1E0C80A78](v13);
  v98 = &v90[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v14);
  v94 = &v90[-v17];
  MEMORY[0x1E0C80A78](v16);
  v19 = &v90[-v18];
  v20 = sub_1A468FBEC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = &v90[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a4)
  {
    v95 = a1;
    v96 = a2;
    v97 = v6;
    v104 = v6[2];
    v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v26 = v25;
    v27 = (void *)objc_opt_self();
    v92 = a3;
    v28 = (void *)sub_1A469087C();
    v29 = objc_msgSend(v27, sel_baseLanguageFromLanguage_, v28);

    v30 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v32 = v31;

    if (v24 == v30 && v26 == v32)
    {
      swift_bridgeObjectRelease_n();
      v33 = v96;
      v34 = (uint64_t)v97;
      v35 = v95;
      goto LABEL_6;
    }
    v36 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v96;
    v34 = (uint64_t)v97;
    a3 = v92;
    v35 = v95;
    if ((v36 & 1) != 0)
    {
LABEL_6:
      *(_QWORD *)&v106 = _s19ReminderKitInternal25REMFilteredTitleEmbeddingC17decodeEmojiInText_8languageS2S_So10NLLanguageatFZ_0(v35, v33);
      *((_QWORD *)&v106 + 1) = v37;
      sub_1A468FBC8();
      sub_1A4466118();
      v95 = sub_1A4691218();
      v96 = v38;
      (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v23, v20);
      swift_bridgeObjectRelease();
      v39 = v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictionEditingSessionID;
      swift_beginAccess();
      v40 = v105;
      v41 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v105 + 16);
      v43 = v102;
      v42 = v103;
      v41(v19, v103, v102);
      v92 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v40 + 56);
      v92(v19, 0, 1, v43);
      v44 = v101;
      v45 = (uint64_t)&v101[*(int *)(v100 + 48)];
      sub_1A444ABF4(v39, (uint64_t)v101, &qword_1ED243170);
      sub_1A444ABF4((uint64_t)v19, v45, &qword_1ED243170);
      v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
      if (v46((uint64_t)v44, 1, v43) == 1)
      {
        sub_1A445404C((uint64_t)v19, &qword_1ED243170);
        if (v46(v45, 1, v43) == 1)
        {
          v47 = sub_1A445404C((uint64_t)v44, &qword_1ED243170);
LABEL_26:
          *(_QWORD *)&v106 = MEMORY[0x1E0DEE9D8];
          v70 = (void *)MEMORY[0x1A859F880](v47);
          sub_1A44B9D10();
          objc_autoreleasePoolPop(v70);
          swift_bridgeObjectRelease();
          v71 = (_QWORD *)v106;
          v72 = OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens;
          v73 = *(_QWORD **)(v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens);
          if (v73[2] + 1 == *(_QWORD *)(v106 + 16)
            && (swift_bridgeObjectRetain(),
                swift_bridgeObjectRetain(),
                v74 = (_QWORD *)sub_1A44B7604(1, (uint64_t)v71),
                v75 = sub_1A4464B60(v73, v74),
                swift_bridgeObjectRelease(),
                swift_bridgeObjectRelease(),
                (v75 & 1) != 0)
            && v71[2])
          {
            swift_bridgeObjectRetain();
            sub_1A44B8118(v104, &v106);
            swift_bridgeObjectRelease();
            v76 = v109;
            if (v109 != 255)
            {
              v77 = v106;
              v78 = v34;
              v79 = v107;
              v80 = v108;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C870);
              v81 = swift_allocObject();
              *(_OWORD *)(v81 + 16) = xmmword_1A4695C10;
              *(_OWORD *)(v81 + 32) = v77;
              *(_QWORD *)(v81 + 48) = v79;
              *(_QWORD *)(v81 + 56) = v80;
              *(_BYTE *)(v81 + 64) = v76;
              *(_QWORD *)(v78 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v81;
              sub_1A44BEFBC(v77, *((void **)&v77 + 1), v79, v80, v76);
              swift_bridgeObjectRelease();
              sub_1A44BEFBC(v77, *((void **)&v77 + 1), v79, v80, v76);
              v57 = sub_1A4439618(0, 1, 1, MEMORY[0x1E0DEE9D8]);
              v83 = v57[2];
              v82 = v57[3];
              if (v83 >= v82 >> 1)
                v57 = sub_1A4439618((_QWORD *)(v82 > 1), v83 + 1, 1, v57);
              v57[2] = v83 + 1;
              v84 = &v57[5 * v83];
              *((_OWORD *)v84 + 2) = v77;
              v84[6] = v79;
              v84[7] = v80;
              *((_BYTE *)v84 + 64) = v76;
              sub_1A44BF058(v77, *((void **)&v77 + 1), v79, v80, v76);
              v34 = (uint64_t)v97;
              goto LABEL_37;
            }
          }
          else if ((sub_1A4464B60(*(_QWORD **)(v34 + v72), v71) & 1) == 0)
          {
            v85 = swift_bridgeObjectRetain();
            v86 = sub_1A446C748(v85);
            swift_bridgeObjectRelease();
            v87 = swift_bridgeObjectRetain();
            v88 = sub_1A44BDF5C(v87, v86);
            swift_bridgeObjectRelease();
            swift_retain();
            v57 = (_QWORD *)sub_1A44BE490(v88, v34);
            swift_release();
            swift_release();
            goto LABEL_37;
          }
          v57 = *(_QWORD **)(v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions);
          swift_bridgeObjectRetain();
LABEL_37:
          *(_QWORD *)(v34 + v72) = v71;
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
      }
      else
      {
        v58 = v94;
        sub_1A444ABF4((uint64_t)v44, (uint64_t)v94, &qword_1ED243170);
        if (v46(v45, 1, v43) != 1)
        {
          v100 = (uint64_t)v41;
          v66 = v105;
          v67 = v93;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v105 + 32))(v93, v45, v43);
          sub_1A44BF108();
          v91 = sub_1A4690864();
          v68 = (uint64_t)v44;
          v69 = *(void (**)(_BYTE *, uint64_t))(v66 + 8);
          v41 = (void (*)(_BYTE *, uint64_t, uint64_t))v100;
          v69(v67, v43);
          sub_1A445404C((uint64_t)v19, &qword_1ED243170);
          v69(v58, v43);
          v47 = sub_1A445404C(v68, &qword_1ED243170);
          v60 = v95;
          v59 = v96;
          if ((v91 & 1) != 0)
            goto LABEL_26;
LABEL_21:
          v61 = (uint64_t)v98;
          v41(v98, v42, v43);
          v92(v61, 0, 1, v43);
          swift_beginAccess();
          sub_1A44BEF74(v61, v39);
          v62 = swift_endAccess();
          v63 = HIBYTE(v59) & 0xF;
          if ((v59 & 0x2000000000000000) == 0)
            v63 = v60 & 0xFFFFFFFFFFFFLL;
          if (!v63)
          {
            swift_bridgeObjectRelease();
            v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            *(_QWORD *)(v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRelease();
            *(_QWORD *)(v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v57;
LABEL_39:
            swift_bridgeObjectRelease();
            return v57;
          }
          *(_QWORD *)&v106 = MEMORY[0x1E0DEE9D8];
          v64 = (void *)MEMORY[0x1A859F880](v62);
          sub_1A44B9D10();
          objc_autoreleasePoolPop(v64);
          swift_bridgeObjectRelease();
          *(_QWORD *)(v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestTitleTokens) = v106;
          swift_bridgeObjectRelease();
          swift_retain();
          v65 = swift_bridgeObjectRetain();
          v57 = sub_1A44BE6D0(v65, v34);
          swift_bridgeObjectRelease();
          swift_release();
LABEL_38:
          *(_QWORD *)(v34 + OBJC_IVAR____TtC19ReminderKitInternal22REMAnchoredBubbleModel_latestPredictions) = v57;
          swift_bridgeObjectRetain();
          goto LABEL_39;
        }
        sub_1A445404C((uint64_t)v19, &qword_1ED243170);
        (*(void (**)(_BYTE *, uint64_t))(v105 + 8))(v58, v43);
      }
      sub_1A445404C((uint64_t)v44, &qword_1EE71DFA8);
      v60 = v95;
      v59 = v96;
      goto LABEL_21;
    }
  }
  v48 = (uint64_t)a3;
  if (qword_1ED23F210 != -1)
    swift_once();
  v49 = sub_1A4690318();
  __swift_project_value_buffer(v49, (uint64_t)qword_1ED23F1F8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v50 = sub_1A469030C();
  v51 = sub_1A4691008();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    v53 = swift_slowAlloc();
    *(_QWORD *)&v106 = v53;
    *(_DWORD *)v52 = 136315394;
    if (a4)
    {
      v54 = a4;
    }
    else
    {
      v48 = 0x296C696E28;
      v54 = 0xE500000000000000;
    }
    swift_bridgeObjectRetain();
    v110 = sub_1A4431120(v48, v54, (uint64_t *)&v106);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    v55 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v110 = sub_1A4431120(v55, v56, (uint64_t *)&v106);
    sub_1A46911D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v50, v51, "REMAnchoredBubbleModel: lang %s is not supported by current model (%s)", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v53, -1, -1);
    MEMORY[0x1A85A0114](v52, -1, -1);

  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1A44B7604(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (result < 0)
    goto LABEL_30;
  v2 = a2;
  if (!result)
    return v2;
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    swift_bridgeObjectRelease();
    swift_release();
    return v8;
  }
  v4 = 0;
  v5 = 0;
  v6 = (uint64_t *)(a2 + 40);
  v25 = v3 - 1;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = MEMORY[0x1E0DEE9D8];
  v24 = result;
  do
  {
    v14 = *(v6 - 1);
    v13 = *v6;
    v15 = *(_QWORD *)(v7 + 16);
    if (v15 < result)
    {
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1A445A8BC(0, v15 + 1, 1);
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
        sub_1A445A8BC(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v7 + 16) = v10 + 1;
      v11 = v7 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v14;
      *(_QWORD *)(v11 + 40) = v13;
      result = v24;
      v12 = a2;
LABEL_8:
      if (v25 == v4)
        goto LABEL_25;
      goto LABEL_9;
    }
    if (v5 >= v15)
      goto LABEL_28;
    v23 = *(v6 - 1);
    v16 = v7 + 16 * v5;
    v17 = *(_QWORD *)(v16 + 32);
    v18 = *(_QWORD *)(v16 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1A445A8BC(0, *(_QWORD *)(v8 + 16) + 1, 1);
    v20 = *(_QWORD *)(v8 + 16);
    v19 = *(_QWORD *)(v8 + 24);
    if (v20 >= v19 >> 1)
      sub_1A445A8BC(v19 > 1, v20 + 1, 1);
    *(_QWORD *)(v8 + 16) = v20 + 1;
    v21 = v8 + 16 * v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v18;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1A462EBDC(v7);
      v7 = result;
    }
    v12 = a2;
    if (v5 >= *(_QWORD *)(v7 + 16))
      goto LABEL_29;
    v22 = v7 + 16 * v5;
    swift_bridgeObjectRelease();
    result = v24;
    *(_QWORD *)(v22 + 32) = v23;
    *(_QWORD *)(v22 + 40) = v13;
    if ((uint64_t)++v5 < v24)
      goto LABEL_8;
    if (v25 == v4)
      goto LABEL_25;
    v5 = 0;
LABEL_9:
    ++v4;
    v6 += 2;
  }
  while (v4 < *(_QWORD *)(v12 + 16));
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

