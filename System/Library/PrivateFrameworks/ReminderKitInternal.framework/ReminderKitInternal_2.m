uint64_t REMTestStorePopulator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t REMTestStorePopulator.__deallocating_deinit()
{
  REMTestStorePopulator.deinit();
  return swift_deallocClassInstance();
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildBlock()()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 1;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 80) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 88) = v3;
  *(_QWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  return swift_bridgeObjectRetain();
}

double static REMTestStorePopulator.TestAccountBuilder.buildExpression(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v21;

  v4 = a2;
  v5 = a1;
  v6 = a4;
  v7 = *(_QWORD *)(a3 + 16);
  if (v7)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    v21 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A445AA34(0, v7, 0);
    v10 = v21;
    v11 = (uint64_t *)(a3 + 40);
    do
    {
      v12 = *(v11 - 1);
      v13 = *v11;
      v14 = *(_QWORD *)(v21 + 16);
      v15 = *(_QWORD *)(v21 + 24);
      swift_bridgeObjectRetain();
      if (v14 >= v15 >> 1)
        sub_1A445AA34(v15 > 1, v14 + 1, 1);
      v11 += 2;
      *(_QWORD *)(v21 + 16) = v14 + 1;
      v16 = v21 + 120 * v14;
      *(_QWORD *)(v16 + 32) = v12;
      *(_QWORD *)(v16 + 40) = v13;
      *(_OWORD *)(v16 + 48) = 0u;
      *(_OWORD *)(v16 + 64) = 0u;
      *(_OWORD *)(v16 + 80) = 0u;
      *(_QWORD *)(v16 + 96) = 0;
      *(_QWORD *)(v16 + 104) = 1;
      *(_QWORD *)(v16 + 112) = v9;
      *(_QWORD *)(v16 + 120) = v9;
      *(_QWORD *)(v16 + 136) = 0;
      *(_QWORD *)(v16 + 144) = 0;
      *(_QWORD *)(v16 + 128) = 0;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v4 = a2;
    v6 = a4;
    v5 = a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)v6 = v5;
  *(_QWORD *)(v6 + 8) = v4;
  *(_QWORD *)(v6 + 16) = v10;
  result = 0.0;
  *(_OWORD *)(v6 + 24) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 72) = 0u;
  *(_QWORD *)(v6 + 88) = 0;
  *(_QWORD *)(v6 + 96) = 0x4000000000000000;
  *(_QWORD *)(v6 + 104) = 0;
  *(_QWORD *)(v6 + 112) = 0;
  return result;
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v7 = a1[4];
  v6 = a1[5];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v7;
  a2[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0x4000000000000000;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static REMTestStorePopulator.TestAccountBuilder.buildExpression(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a1[2];
  *(_QWORD *)a2 = *a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0x4000000000000000;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id static REMTestStorePopulator.TestStoreBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v12;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v6 = *(void **)(a1 + 64);
  v12 = *(id *)(a1 + 56);
  v7 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 88) = xmmword_1A469F210;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v5;
  return v12;
}

uint64_t static REMTestStorePopulator.TestAccountBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_QWORD *)(a2 + 32) = v5;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 96) = 0xC000000000000000;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

double REMTestStorePopulator.TestList.init(_:builder:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  double result;
  uint64_t v9;

  v7 = a3();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_QWORD *)(a4 + 64) = 0;
  *(_BYTE *)(a4 + 72) = 1;
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a4 + 80) = v7;
  *(_QWORD *)(a4 + 88) = v9;
  *(_WORD *)(a4 + 96) = 0;
  *(_BYTE *)(a4 + 98) = 0;
  *(_QWORD *)(a4 + 104) = 0;
  *(_QWORD *)(a4 + 112) = 0;
  return result;
}

uint64_t _s19ReminderKitInternal21REMTestStorePopulatorC18TestAccountBuilderV15buildExpressionyAC0gH0V0H5ChildOSSFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 1;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 80) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 88) = v3;
  *(_QWORD *)(a3 + 104) = 0;
  *(_QWORD *)(a3 + 112) = 0;
  *(_QWORD *)(a3 + 96) = 0;
  return swift_bridgeObjectRetain();
}

uint64_t _s19ReminderKitInternal21REMTestStorePopulatorC18TestAccountBuilderV15buildExpressionyAC0gH0V0H5ChildOAC0G4ListVFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v6 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 112);
  v11 = 256;
  if (!*(_BYTE *)(a1 + 97))
    v11 = 0;
  v12 = v11 | *(unsigned __int8 *)(a1 + 96);
  v13 = 0x10000;
  if (!*(_BYTE *)(a1 + 98))
    v13 = 0;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  v14 = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(_QWORD *)(a2 + 72) = v6;
  *(_QWORD *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v7;
  *(_QWORD *)(a2 + 96) = v12 | v13;
  v15 = (void *)v14;
  *(_QWORD *)(a2 + 104) = v10;
  *(_QWORD *)(a2 + 112) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v5;
  v17 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id _s19ReminderKitInternal21REMTestStorePopulatorC18TestAccountBuilderV15buildExpressionyAC0gH0V0H5ChildOAC0G15CustomSmartListVFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v12;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(void **)(a1 + 48);
  v6 = *(void **)(a1 + 64);
  v12 = *(id *)(a1 + 56);
  v7 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = v4;
  *(_QWORD *)(a2 + 48) = v5;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v6;
  *(_QWORD *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_OWORD *)(a2 + 88) = xmmword_1A469F210;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  v9 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v5;
  return v12;
}

uint64_t static REMTestStorePopulator.TestRemindersBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1A453B9D4(a1, a2, MEMORY[0x1E0DEE9D8], a3);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A453B9D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  int *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD *v15;
  uint64_t v16;
  uint64_t result;

  v8 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
  a4[2] = 0;
  a4[3] = 0;
  v9 = (char *)a4 + v8[6];
  v10 = sub_1A468FDE4();
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  *((_BYTE *)a4 + v8[7]) = 0;
  *((_BYTE *)a4 + v8[8]) = 0;
  v12 = (char *)a4 + v8[9];
  v13 = sub_1A46900B4();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14((char *)a4 + v8[10], 1, 1, v13);
  *((_BYTE *)a4 + v8[11]) = 0;
  *(_QWORD *)((char *)a4 + v8[12]) = 0;
  *(_QWORD *)((char *)a4 + v8[13]) = 0;
  v15 = (_OWORD *)((char *)a4 + v8[14]);
  *v15 = 0u;
  v15[1] = 0u;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a4 + v8[15]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a4 + v8[16]) = v16;
  *(_QWORD *)((char *)a4 + v8[17]) = v16;
  *(_QWORD *)((char *)a4 + v8[18]) = v16;
  *(_QWORD *)((char *)a4 + v8[19]) = 0;
  *(_QWORD *)((char *)a4 + v8[20]) = 0;
  *(_QWORD *)((char *)a4 + v8[21]) = 0;
  *(_QWORD *)((char *)a4 + v8[22]) = v16;
  *(_QWORD *)((char *)a4 + v8[23]) = v16;
  result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)((char *)a4 + v8[24], 1, 1, v10);
  *a4 = a1;
  a4[1] = a2;
  *(_QWORD *)((char *)a4 + v8[25]) = a3;
  return result;
}

uint64_t static REMTestStorePopulator.TestRemindersBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4497EE8(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
}

uint64_t static REMTestStorePopulator.TestListBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  sub_1A453B9D4(a1, a2, MEMORY[0x1E0DEE9D8], a3);
  type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t static REMTestStorePopulator.TestListBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A453BBD8(a1, type metadata accessor for REMTestStorePopulator.TestReminder, a2);
}

{
  return sub_1A453BBD8(a1, type metadata accessor for REMTestStorePopulator.TestListSection, a2);
}

uint64_t sub_1A453BBD8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  sub_1A4497EE8(a1, a3, a2);
  type metadata accessor for REMTestStorePopulator.TestList.ListChild(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static REMTestStorePopulator.TestListSectionBuilder.buildExpression(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4497EE8(a1, a2, type metadata accessor for REMTestStorePopulator.TestListSection);
}

uint64_t REMTestStorePopulator.TestAccount.init(_:type:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t result;

  result = a4();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = result;
  a5[4] = 0;
  a5[5] = 0;
  return result;
}

uint64_t REMTestStorePopulator.TestAccount.externalIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = a1;
  a3[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.color(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18;
  id v19;

  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  v7 = *(void **)(v3 + 48);
  v8 = *(_BYTE *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 96);
  v12 = *(_BYTE *)(v3 + 97);
  v13 = *(_BYTE *)(v3 + 98);
  v14 = *(_QWORD *)(v3 + 104);
  v15 = *(_QWORD *)(v3 + 112);
  *(_QWORD *)a3 = *(_QWORD *)v3;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = v6;
  *(_QWORD *)(a3 + 40) = v5;
  *(_QWORD *)(a3 + 48) = v7;
  v16 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(a3 + 56) = v16;
  v17 = (void *)v16;
  *(_BYTE *)(a3 + 72) = v8;
  *(_QWORD *)(a3 + 80) = v9;
  *(_QWORD *)(a3 + 88) = v10;
  *(_BYTE *)(a3 + 96) = v11;
  *(_BYTE *)(a3 + 97) = v12;
  *(_BYTE *)(a3 + 98) = v13;
  *(_QWORD *)(a3 + 104) = v14;
  *(_QWORD *)(a3 + 112) = v15;
  swift_bridgeObjectRetain();
  v18 = v7;
  v19 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.symbolicColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  id v18;
  id v19;

  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(void **)(v3 + 48);
  v8 = *(_BYTE *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 96);
  v12 = *(_BYTE *)(v3 + 97);
  v13 = *(_BYTE *)(v3 + 98);
  v14 = *(_QWORD *)(v3 + 104);
  v15 = *(_QWORD *)(v3 + 112);
  *(_QWORD *)a3 = *(_QWORD *)v3;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 24) = v6;
  *(_QWORD *)(a3 + 32) = a1;
  *(_QWORD *)(a3 + 40) = a2;
  *(_QWORD *)(a3 + 48) = v7;
  v16 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(a3 + 56) = v16;
  v17 = (void *)v16;
  *(_BYTE *)(a3 + 72) = v8;
  *(_QWORD *)(a3 + 80) = v9;
  *(_QWORD *)(a3 + 88) = v10;
  *(_BYTE *)(a3 + 96) = v11;
  *(_BYTE *)(a3 + 97) = v12;
  *(_BYTE *)(a3 + 98) = v13;
  *(_QWORD *)(a3 + 104) = v14;
  *(_QWORD *)(a3 + 112) = v15;
  v18 = v7;
  v19 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void REMTestStorePopulator.TestList.badge(emblem:)(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1[1];
  v4 = v1[3];
  v23 = v1[2];
  v24 = *v1;
  v5 = v1[5];
  v6 = (void *)v1[6];
  v7 = (void *)v1[7];
  v15 = v7;
  v21 = v1[8];
  v22 = v1[4];
  v8 = v1[10];
  v9 = v1[11];
  v19 = *((_BYTE *)v1 + 96);
  v20 = *((_BYTE *)v1 + 72);
  v17 = *((_BYTE *)v1 + 98);
  v18 = *((_BYTE *)v1 + 97);
  v10 = v1[14];
  v16 = v1[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v6;
  v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1A469087C();
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84528]), sel_initWithEmblem_, v13);

  *(_QWORD *)a1 = v24;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v15;
  *(_QWORD *)(a1 + 64) = v21;
  *(_BYTE *)(a1 + 72) = v20;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 96) = v19;
  *(_BYTE *)(a1 + 97) = v18;
  *(_BYTE *)(a1 + 98) = v17;
  *(_QWORD *)(a1 + 104) = v16;
  *(_QWORD *)(a1 + 112) = v10;
}

void REMTestStorePopulator.TestList.badge(emoji:)(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1[1];
  v4 = v1[3];
  v23 = v1[2];
  v24 = *v1;
  v5 = v1[5];
  v7 = (void *)v1[6];
  v6 = (void *)v1[7];
  v21 = v1[8];
  v22 = v1[4];
  v8 = v1[10];
  v9 = v1[11];
  v19 = *((_BYTE *)v1 + 96);
  v20 = *((_BYTE *)v1 + 72);
  v17 = *((_BYTE *)v1 + 98);
  v18 = *((_BYTE *)v1 + 97);
  v15 = v1[14];
  v16 = v1[13];
  v14 = objc_allocWithZone(MEMORY[0x1E0D84528]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v7;
  v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v14, sel_initWithEmoji_, v12);

  *(_QWORD *)a1 = v24;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v22;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v13;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v21;
  *(_BYTE *)(a1 + 72) = v20;
  *(_QWORD *)(a1 + 80) = v8;
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 96) = v19;
  *(_BYTE *)(a1 + 97) = v18;
  *(_BYTE *)(a1 + 98) = v17;
  *(_QWORD *)(a1 + 104) = v16;
  *(_QWORD *)(a1 + 112) = v15;
}

id REMTestStorePopulator.TestList.sortingStyle(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v18;

  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 40);
  v18 = *(id *)(v2 + 48);
  v7 = *(_QWORD *)(v2 + 64);
  v8 = *(_BYTE *)(v2 + 72);
  v9 = *(_QWORD *)(v2 + 80);
  v10 = *(_QWORD *)(v2 + 88);
  v11 = *(_BYTE *)(v2 + 96);
  v12 = *(_BYTE *)(v2 + 97);
  v13 = *(_BYTE *)(v2 + 98);
  v14 = *(_QWORD *)(v2 + 104);
  v15 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v18;
  *(_QWORD *)(a2 + 56) = a1;
  *(_QWORD *)(a2 + 64) = v7;
  *(_BYTE *)(a2 + 72) = v8;
  *(_QWORD *)(a2 + 80) = v9;
  *(_QWORD *)(a2 + 88) = v10;
  *(_BYTE *)(a2 + 96) = v11;
  *(_BYTE *)(a2 + 97) = v12;
  *(_BYTE *)(a2 + 98) = v13;
  *(_QWORD *)(a2 + 104) = v14;
  *(_QWORD *)(a2 + 112) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t REMTestStorePopulator.TestList.sharingStatus(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(void **)(v2 + 48);
  v7 = *(void **)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 88);
  v10 = *(_BYTE *)(v2 + 96);
  v11 = *(_BYTE *)(v2 + 97);
  v12 = *(_BYTE *)(v2 + 98);
  v14 = *(_QWORD *)(v2 + 104);
  v13 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v7;
  *(_QWORD *)(a2 + 64) = a1;
  *(_BYTE *)(a2 + 72) = 0;
  *(_QWORD *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v9;
  *(_BYTE *)(a2 + 96) = v10;
  *(_BYTE *)(a2 + 97) = v11;
  *(_BYTE *)(a2 + 98) = v12;
  *(_QWORD *)(a2 + 104) = v14;
  *(_QWORD *)(a2 + 112) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = v6;
  v16 = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.sharees(builder:)@<X0>(uint64_t (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = v2[1];
  v5 = v2[3];
  v24 = v2[2];
  v25 = *v2;
  v6 = v2[5];
  v7 = (void *)v2[6];
  v8 = (void *)v2[7];
  v22 = v2[8];
  v23 = v2[4];
  v9 = v2[10];
  v20 = *((_BYTE *)v2 + 96);
  v21 = *((_BYTE *)v2 + 72);
  v18 = *((_BYTE *)v2 + 98);
  v19 = *((_BYTE *)v2 + 97);
  v10 = v2[14];
  v17 = v2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  v12 = v8;
  swift_bridgeObjectRetain();
  v13 = swift_bridgeObjectRetain();
  v14 = a1(v13);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v24;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v8;
  *(_QWORD *)(a2 + 64) = v22;
  *(_BYTE *)(a2 + 72) = v21;
  *(_QWORD *)(a2 + 80) = v9;
  *(_QWORD *)(a2 + 88) = v14;
  *(_BYTE *)(a2 + 96) = v20;
  *(_BYTE *)(a2 + 97) = v19;
  *(_BYTE *)(a2 + 98) = v18;
  *(_QWORD *)(a2 + 104) = v17;
  *(_QWORD *)(a2 + 112) = v10;
  return result;
}

uint64_t REMTestStorePopulator.TestList.isPinned(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(void **)(v2 + 48);
  v7 = *(_BYTE *)(v2 + 72);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 88);
  v10 = *(_BYTE *)(v2 + 97);
  v11 = *(_BYTE *)(v2 + 98);
  v13 = *(_QWORD *)(v2 + 104);
  v12 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  v14 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v9;
  *(_BYTE *)(a2 + 97) = v10;
  *(_BYTE *)(a2 + 98) = v11;
  *(_QWORD *)(a2 + 104) = v13;
  *(_QWORD *)(a2 + 112) = v12;
  v15 = (void *)v14;
  *(_BYTE *)(a2 + 96) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v6;
  v17 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.shouldCategorizeGroceryItems(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(void **)(v2 + 48);
  v7 = *(_BYTE *)(v2 + 72);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 88);
  v10 = *(_BYTE *)(v2 + 96);
  v11 = *(_BYTE *)(v2 + 98);
  v13 = *(_QWORD *)(v2 + 104);
  v12 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  v14 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v9;
  *(_BYTE *)(a2 + 96) = v10;
  *(_BYTE *)(a2 + 97) = a1;
  *(_BYTE *)(a2 + 98) = v11;
  v15 = (void *)v14;
  *(_QWORD *)(a2 + 104) = v13;
  *(_QWORD *)(a2 + 112) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v6;
  v17 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.shouldSuggestConversionToGroceryList(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(void **)(v2 + 48);
  v7 = *(_BYTE *)(v2 + 72);
  v8 = *(_QWORD *)(v2 + 80);
  v9 = *(_QWORD *)(v2 + 88);
  v10 = *(_BYTE *)(v2 + 96);
  v11 = *(_BYTE *)(v2 + 97);
  v13 = *(_QWORD *)(v2 + 104);
  v12 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  v14 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(a2 + 56) = v14;
  *(_BYTE *)(a2 + 72) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_QWORD *)(a2 + 88) = v9;
  *(_BYTE *)(a2 + 96) = v10;
  *(_BYTE *)(a2 + 97) = v11;
  *(_BYTE *)(a2 + 98) = a1;
  v15 = (void *)v14;
  *(_QWORD *)(a2 + 104) = v13;
  *(_QWORD *)(a2 + 112) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v6;
  v17 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestList.groceryLocaleID(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  __int128 v14;
  void *v15;
  id v16;
  id v17;

  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 40);
  v7 = *(void **)(v3 + 48);
  v8 = *(_BYTE *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(_QWORD *)(v3 + 88);
  v11 = *(_BYTE *)(v3 + 96);
  v12 = *(_BYTE *)(v3 + 97);
  v13 = *(_BYTE *)(v3 + 98);
  *(_QWORD *)a3 = *(_QWORD *)v3;
  *(_QWORD *)(a3 + 8) = v4;
  *(_QWORD *)(a3 + 16) = v5;
  *(_OWORD *)(a3 + 24) = *(_OWORD *)(v3 + 24);
  *(_QWORD *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v7;
  v14 = *(_OWORD *)(v3 + 56);
  *(_OWORD *)(a3 + 56) = v14;
  v15 = (void *)v14;
  *(_BYTE *)(a3 + 72) = v8;
  *(_QWORD *)(a3 + 80) = v9;
  *(_QWORD *)(a3 + 88) = v10;
  *(_BYTE *)(a3 + 96) = v11;
  *(_BYTE *)(a3 + 97) = v12;
  *(_BYTE *)(a3 + 98) = v13;
  *(_QWORD *)(a3 + 104) = a1;
  *(_QWORD *)(a3 + 112) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v7;
  v17 = v15;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 REMTestStorePopulator.TestSharee.init(firstName:lastName:address:status:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  unsigned __int8 v7;
  __n128 result;

  v7 = a5[1].n128_u8[0];
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  a7[1].n128_u64[0] = a3;
  a7[1].n128_u64[1] = a4;
  result = *a5;
  a7[2] = *a5;
  a7[3].n128_u8[0] = v7;
  a7[3].n128_u64[1] = a6;
  return result;
}

uint64_t REMTestStorePopulator.TestGroup.init(_:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  result = a3();
  *a4 = a1;
  a4[1] = a2;
  a4[2] = result;
  return result;
}

double REMTestStorePopulator.TestCustomSmartList.init(_:builder:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  double result;

  v7 = a3();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  result = 0.0;
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)(a4 + 57) = 0u;
  *(_QWORD *)(a4 + 80) = v7;
  return result;
}

uint64_t REMTestStorePopulator.TestCustomSmartList.init(_:operation:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  objc_class *v15;
  _BYTE *v16;
  char *v17;
  char *v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  objc_super v24;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a3;
  v14 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v12, 1, 1, v14);
  v15 = (objc_class *)type metadata accessor for REMCustomSmartListFilterDescriptor(0);
  v16 = objc_allocWithZone(v15);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_operation] = v13;
  v17 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_hashtags];
  *(_OWORD *)v17 = xmmword_1A4696740;
  v17[16] = 0;
  sub_1A444ABF4((uint64_t)v12, (uint64_t)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date], (uint64_t *)&unk_1EE71ED00);
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_time] = 6;
  *(_QWORD *)&v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities] = 0;
  v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged] = 2;
  v18 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_OWORD *)v18 + 2) = 0u;
  v18[48] = -1;
  v19 = &v16[OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_lists];
  *v19 = 0;
  v19[1] = 0;
  v24.receiver = v16;
  v24.super_class = v15;
  swift_bridgeObjectRetain();
  v20 = objc_msgSendSuper2(&v24, sel_init);
  sub_1A445404C((uint64_t)v12, (uint64_t *)&unk_1EE71ED00);
  v21 = v20;
  v22 = a4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_QWORD *)(a5 + 64) = v20;
  *(_BYTE *)(a5 + 72) = 0;
  *(_QWORD *)(a5 + 80) = v22;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t REMTestStorePopulator.TestCustomSmartList.color(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;

  v4 = *v3;
  v5 = v3[1];
  v7 = v3[4];
  v6 = v3[5];
  v8 = (void *)v3[6];
  v9 = (void *)v3[7];
  v10 = (void *)v3[8];
  v11 = *((_BYTE *)v3 + 72);
  v12 = v3[10];
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  *(_QWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 40) = v6;
  *(_QWORD *)(a3 + 48) = v8;
  *(_QWORD *)(a3 + 56) = v9;
  *(_QWORD *)(a3 + 64) = v10;
  *(_BYTE *)(a3 + 72) = v11;
  *(_QWORD *)(a3 + 80) = v12;
  swift_bridgeObjectRetain();
  v13 = v8;
  v14 = v9;
  v15 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestCustomSmartList.symbolicColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;

  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = (void *)v3[6];
  v9 = (void *)v3[7];
  v10 = (void *)v3[8];
  v11 = *((_BYTE *)v3 + 72);
  v12 = v3[10];
  *(_QWORD *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v5;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 24) = v7;
  *(_QWORD *)(a3 + 32) = a1;
  *(_QWORD *)(a3 + 40) = a2;
  *(_QWORD *)(a3 + 48) = v8;
  *(_QWORD *)(a3 + 56) = v9;
  *(_QWORD *)(a3 + 64) = v10;
  *(_BYTE *)(a3 + 72) = v11;
  *(_QWORD *)(a3 + 80) = v12;
  v13 = v8;
  v14 = v9;
  v15 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void REMTestStorePopulator.TestCustomSmartList.badge(emblem:)(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v1[1];
  v4 = v1[3];
  v17 = v1[2];
  v18 = *v1;
  v5 = v1[5];
  v16 = v1[4];
  v6 = (void *)v1[6];
  v7 = (void *)v1[7];
  v8 = (void *)v1[8];
  v15 = *((_BYTE *)v1 + 72);
  v9 = v1[10];
  v10 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v6;
  v12 = v7;
  v13 = (void *)sub_1A469087C();
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84528]), sel_initWithEmblem_, v13);

  *(_QWORD *)a1 = v18;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v17;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v16;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v14;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = v15;
  *(_QWORD *)(a1 + 80) = v9;
}

void REMTestStorePopulator.TestCustomSmartList.badge(emoji:)(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v1[1];
  v4 = v1[3];
  v20 = v1[2];
  v21 = *v1;
  v5 = v1[5];
  v19 = v1[4];
  v7 = (void *)v1[6];
  v6 = (void *)v1[7];
  v8 = (void *)v1[8];
  v17 = v8;
  v18 = *((_BYTE *)v1 + 72);
  v9 = v1[10];
  v10 = objc_allocWithZone(MEMORY[0x1E0D84528]);
  v11 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = v7;
  v13 = v6;
  v14 = v6;
  v15 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v10, sel_initWithEmoji_, v15);

  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v20;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v19;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v14;
  *(_QWORD *)(a1 + 64) = v17;
  *(_BYTE *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = v9;
}

id REMTestStorePopulator.TestCustomSmartList.sortingStyle(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  id v10;
  id v11;
  id v13;

  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 40);
  v13 = *(id *)(v2 + 48);
  v7 = *(void **)(v2 + 64);
  v8 = *(_BYTE *)(v2 + 72);
  v9 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v6;
  *(_QWORD *)(a2 + 48) = v13;
  *(_QWORD *)(a2 + 56) = a1;
  *(_QWORD *)(a2 + 64) = v7;
  *(_BYTE *)(a2 + 72) = v8;
  *(_QWORD *)(a2 + 80) = v9;
  v10 = v7;
  swift_bridgeObjectRetain();
  v11 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v13;
}

void REMTestStorePopulator.TestCustomSmartList.hashtags(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22[2];
  char v23;

  v4 = *(_QWORD *)a1;
  v21 = *(_QWORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(void **)(v2 + 48);
  v11 = *(void **)(v2 + 56);
  v10 = *(void **)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 72);
  v13 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v6;
  *(_QWORD *)(a2 + 16) = v7;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  *(_QWORD *)(a2 + 56) = v11;
  *(_QWORD *)(a2 + 64) = v10;
  *(_BYTE *)(a2 + 72) = v12;
  *(_QWORD *)(a2 + 80) = v13;
  if (v10)
  {
    v14 = v11;
    v15 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v9;
  }
  else
  {
    v17 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v18 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v9;
    v15 = objc_msgSend(v17, sel_init);
  }
  v22[0] = v4;
  v22[1] = v21;
  v23 = v5;
  sub_1A44F34BC(v4);
  v20 = sub_1A44F3A20((uint64_t)v15, v22);

  *(_QWORD *)(a2 + 64) = v20;
}

void REMTestStorePopulator.TestCustomSmartList.date(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  __int128 v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_QWORD *)(v2 + 40);
  v11 = *(void **)(v2 + 48);
  v13 = *(void **)(v2 + 56);
  v12 = *(void **)(v2 + 64);
  v14 = *(_BYTE *)(v2 + 72);
  v15 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v9;
  v16 = *(_OWORD *)(v2 + 24);
  *(_OWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v11;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v12;
  *(_BYTE *)(a2 + 72) = v14;
  *(_QWORD *)(a2 + 80) = v15;
  if (v12)
  {
    v17 = v13;
    v18 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v11;
  }
  else
  {
    v24 = v16;
    v20 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v21 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v11;
    v18 = objc_msgSend(v20, sel_init);
  }
  sub_1A444ABF4(a1, (uint64_t)v7, (uint64_t *)&unk_1EE71ED00);
  v23 = sub_1A44F3C68((uint64_t)v18, (uint64_t)v7);

  *(_QWORD *)(a2 + 64) = v23;
}

uint64_t REMTestStorePopulator.TestCustomSmartList.dateRange(from:to:)@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *);
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  id v59;
  uint64_t (*v60)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v62;
  char *v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;

  v81 = a1;
  v82 = a2;
  v71 = a3;
  v75 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2422A0);
  v4 = MEMORY[0x1E0C80A78](v75);
  v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v62 - v6;
  v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v72);
  v73 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  v10 = MEMORY[0x1E0C80A78](v9);
  v79 = (uint64_t)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v80 = (uint64_t)&v62 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v62 - v17;
  v19 = sub_1A46900B4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v62 - v24;
  v26 = *v3;
  v74 = v3[1];
  v66 = v3[2];
  v67 = v26;
  v27 = v3[3];
  v65 = v3[4];
  v28 = v3[5];
  v76 = v27;
  v77 = v28;
  v78 = (void *)v3[6];
  v29 = (void *)v3[7];
  v68 = (void *)v3[8];
  v69 = v29;
  v64 = *((unsigned __int8 *)v3 + 72);
  v70 = v3[10];
  swift_bridgeObjectRetain();
  Date.init(testing_allDayParsedFrom:)((uint64_t)v81, v18);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v30(v18, 1, v19) == 1)
    goto LABEL_9;
  v31 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v31(v25, v18, v19);
  swift_bridgeObjectRetain();
  Date.init(testing_allDayParsedFrom:)(v82, v16);
  if (v30(v16, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
    goto LABEL_11;
  }
  v31(v23, v16, v19);
  sub_1A4436344((unint64_t *)&qword_1ED243CF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  if ((sub_1A469084C() & 1) == 0)
  {
    __break(1u);
LABEL_9:
    v16 = v18;
LABEL_11:
    sub_1A445404C((uint64_t)v16, &qword_1ED243190);
    result = sub_1A4691638();
    __break(1u);
    return result;
  }
  v32 = (uint64_t)v25;
  v33 = v75;
  v34 = &v7[*(int *)(v75 + 48)];
  v35 = *(void (**)(char *))(v20 + 16);
  v82 = v32;
  v35(v7);
  ((void (*)(char *, char *, uint64_t))v35)(v34, v23, v19);
  v36 = v63;
  v37 = &v63[*(int *)(v33 + 48)];
  ((void (*)(char *, char *, uint64_t))v35)(v63, v7, v19);
  ((void (*)(char *, char *, uint64_t))v35)(v37, v34, v19);
  v38 = (uint64_t)v73;
  v31(v73, v36, v19);
  v39 = *(void (**)(char *, uint64_t))(v20 + 8);
  v39(v37, v19);
  v40 = &v36[*(int *)(v33 + 48)];
  v31(v36, v7, v19);
  v31(v40, v34, v19);
  v31((char *)(v38 + *(int *)(v72 + 36)), v40, v19);
  v81 = v39;
  v39(v36, v19);
  v41 = v80;
  sub_1A44C6CC8(v38, v80, (uint64_t *)&unk_1ED243DF8);
  v42 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
  v43 = v71;
  v44 = v68;
  v45 = v74;
  *v71 = v67;
  v43[1] = v45;
  v46 = v76;
  v47 = v77;
  v43[2] = v66;
  v43[3] = v46;
  v43[4] = v65;
  v43[5] = v47;
  v48 = v78;
  v49 = v69;
  v50 = v70;
  v43[6] = v78;
  v43[7] = v49;
  v43[8] = v44;
  *((_BYTE *)v43 + 72) = v64;
  v43[10] = v50;
  v75 = (uint64_t)v23;
  if (v44)
  {
    v51 = v49;
    v52 = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v53 = v48;
  }
  else
  {
    v54 = v49;
    v55 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v56 = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57 = v48;
    v52 = objc_msgSend(v55, sel_init);
  }
  v58 = v79;
  sub_1A444ABF4(v41, v79, (uint64_t *)&unk_1EE71ED00);
  v59 = sub_1A44F3C68((uint64_t)v52, v58);

  v43[8] = v59;
  sub_1A445404C(v41, (uint64_t *)&unk_1EE71ED00);
  v60 = (uint64_t (*)(uint64_t, uint64_t))v81;
  v81((char *)v75, v19);
  return v60(v82, v19);
}

void REMTestStorePopulator.TestCustomSmartList.time(_:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unsigned __int8 v20;

  v4 = *a1;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(void **)(v2 + 48);
  v10 = *(void **)(v2 + 56);
  v9 = *(void **)(v2 + 64);
  v11 = *(_BYTE *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v9;
  *(_BYTE *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  if (v9)
  {
    v13 = v10;
    v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v8;
  }
  else
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v8;
    v14 = objc_msgSend(v16, sel_init);
  }
  v20 = v4;
  v19 = sub_1A44F3EE8((uint64_t)v14, &v20);

  *(_QWORD *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.priorities(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(void **)(v2 + 48);
  v10 = *(void **)(v2 + 56);
  v9 = *(void **)(v2 + 64);
  v11 = *(_BYTE *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v9;
  *(_BYTE *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  if (v9)
  {
    v13 = v10;
    v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v8;
  }
  else
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v8;
    v14 = objc_msgSend(v16, sel_init);
  }
  swift_bridgeObjectRetain();
  v19 = sub_1A44F4144((uint64_t)v14, a1);

  *(_QWORD *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.flagged(_:)(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;

  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(void **)(v2 + 48);
  v10 = *(void **)(v2 + 56);
  v9 = *(void **)(v2 + 64);
  v11 = *(_BYTE *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v9;
  *(_BYTE *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  if (v9)
  {
    v13 = v10;
    v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v8;
  }
  else
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v8;
    v14 = objc_msgSend(v16, sel_init);
  }
  v19 = sub_1A44F4390((uint64_t)v14, a1);

  *(_QWORD *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.location(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v24 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)a1;
  v22 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(a1 + 16);
  v20 = *(_QWORD *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 32);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 40);
  v7 = *(void **)(v2 + 48);
  v9 = *(void **)(v2 + 56);
  v10 = *(void **)(v2 + 64);
  v11 = *(_BYTE *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v7;
  *(_QWORD *)(a2 + 56) = v9;
  *(_QWORD *)(a2 + 64) = v10;
  *(_BYTE *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  if (v10)
  {
    v13 = v9;
    v14 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v7;
  }
  else
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v17 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v7;
    v14 = objc_msgSend(v16, sel_init);
  }
  *(_QWORD *)&v26 = v25;
  *((_QWORD *)&v26 + 1) = v24;
  v27 = v23;
  v28 = v22;
  v29 = v21;
  v30 = v20;
  v31 = v4;
  sub_1A44F34CC(v25, v24, v23, v22, v21, v20, v4);
  v19 = sub_1A44F45E8((uint64_t)v14, &v26);

  *(_QWORD *)(a2 + 64) = v19;
}

void REMTestStorePopulator.TestCustomSmartList.operation(_:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  unsigned __int8 v20;

  v4 = *a1;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_QWORD *)(v2 + 40);
  v8 = *(void **)(v2 + 48);
  v10 = *(void **)(v2 + 56);
  v9 = *(void **)(v2 + 64);
  v11 = *(_BYTE *)(v2 + 72);
  v12 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v10;
  *(_QWORD *)(a2 + 64) = v9;
  *(_BYTE *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  if (v9)
  {
    v13 = v10;
    v14 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = v8;
  }
  else
  {
    v16 = objc_allocWithZone((Class)type metadata accessor for REMCustomSmartListFilterDescriptor(0));
    v17 = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v8;
    v14 = objc_msgSend(v16, sel_init);
  }
  v20 = v4;
  v19 = sub_1A44F37B8((uint64_t)v14, &v20);

  *(_QWORD *)(a2 + 64) = v19;
}

id REMTestStorePopulator.TestCustomSmartList.isPinned(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v12;

  v3 = *(_QWORD *)(v2 + 8);
  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 40);
  v6 = *(void **)(v2 + 48);
  v7 = *(void **)(v2 + 64);
  v12 = *(id *)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 80);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(v2 + 24);
  *(_QWORD *)(a2 + 40) = v5;
  *(_QWORD *)(a2 + 48) = v6;
  *(_QWORD *)(a2 + 56) = v12;
  *(_QWORD *)(a2 + 64) = v7;
  *(_QWORD *)(a2 + 80) = v8;
  *(_BYTE *)(a2 + 72) = a1;
  v9 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v6;
  return v12;
}

void __swiftcall REMTestStorePopulator.TestTemplate.init(_:srcListName:)(ReminderKitInternal::REMTestStorePopulator::TestTemplate *__return_ptr retstr, Swift::String _, Swift::String srcListName)
{
  retstr->name = _;
  retstr->srcListName = srcListName;
  retstr->shouldSaveCompleted = 0;
}

void __swiftcall REMTestStorePopulator.TestTemplate.shouldSaveCompleted(_:)(ReminderKitInternal::REMTestStorePopulator::TestTemplate *__return_ptr retstr, Swift::Bool a2)
{
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v3 = (void *)v2[1];
  v4 = v2[2];
  v5 = (void *)v2[3];
  retstr->name._countAndFlagsBits = *v2;
  retstr->name._object = v3;
  retstr->srcListName._countAndFlagsBits = v4;
  retstr->srcListName._object = v5;
  retstr->shouldSaveCompleted = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
}

id REMTestStorePopulator.TestTemplateContents.template.getter()
{
  id *v0;

  return *v0;
}

id REMTestStorePopulator.TestTemplateContents.listRepresentation.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t REMTestStorePopulator.TestTemplateContents.reminderByTitle.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMTestStorePopulator.TestReminder.init(_:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, _QWORD *a4@<X8>)
{
  int *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v8 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
  a4[2] = 0;
  a4[3] = 0;
  v9 = (char *)a4 + v8[6];
  v10 = sub_1A468FDE4();
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  *((_BYTE *)a4 + v8[7]) = 0;
  *((_BYTE *)a4 + v8[8]) = 0;
  v12 = (char *)a4 + v8[9];
  v13 = sub_1A46900B4();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14((char *)a4 + v8[10], 1, 1, v13);
  *((_BYTE *)a4 + v8[11]) = 0;
  *(_QWORD *)((char *)a4 + v8[12]) = 0;
  *(_QWORD *)((char *)a4 + v8[13]) = 0;
  v15 = (_OWORD *)((char *)a4 + v8[14]);
  *v15 = 0u;
  v15[1] = 0u;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a4 + v8[15]) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)((char *)a4 + v8[16]) = v16;
  *(_QWORD *)((char *)a4 + v8[17]) = v16;
  *(_QWORD *)((char *)a4 + v8[18]) = v16;
  *(_QWORD *)((char *)a4 + v8[19]) = 0;
  *(_QWORD *)((char *)a4 + v8[20]) = 0;
  *(_QWORD *)((char *)a4 + v8[21]) = 0;
  *(_QWORD *)((char *)a4 + v8[22]) = v16;
  *(_QWORD *)((char *)a4 + v8[23]) = v16;
  v17 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v11)((char *)a4 + v8[24], 1, 1, v10);
  *a4 = a1;
  a4[1] = a2;
  result = a3(v17);
  *(_QWORD *)((char *)a4 + v8[25]) = result;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.notes(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  sub_1A4497EE8(v3, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.dueDateComponents(_:bypassAddingAlarm:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  sub_1A4497EE8(v3, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
  v7 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  v8 = a3 + *(int *)(v7 + 24);
  sub_1A445404C(v8, &qword_1ED23E4C0);
  v9 = sub_1A468FDE4();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  *(_BYTE *)(a3 + *(int *)(v7 + 28)) = a2;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.dueDate(_:bypassAddingAlarm:)@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A468FDE4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A46902AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v10, 1, 1, v18);
  swift_bridgeObjectRetain();
  DateComponents.init(testing_parsedFrom:calendar:)(a1, (uint64_t)v10, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1A445404C((uint64_t)v13, &qword_1ED23E4C0);
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v22 = 0xD000000000000019;
    v23 = 0x80000001A46BFBC0;
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_1A4497EE8(v4, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
    v19 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
    v20 = a3 + *(int *)(v19 + 24);
    sub_1A445404C(v20, &qword_1ED23E4C0);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v20, v17, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    *(_BYTE *)(a3 + *(int *)(v19 + 28)) = a2 & 1;
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.alarmDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  unint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A468FDE4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A46902AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  swift_bridgeObjectRetain();
  DateComponents.init(testing_parsedFrom:calendar:)(a1, (uint64_t)v7, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A445404C((uint64_t)v10, &qword_1ED23E4C0);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v21 = 0xD00000000000001BLL;
    v22 = 0x80000001A46BFBE0;
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1A4497EE8(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
    v16 = objc_allocWithZone(MEMORY[0x1E0D84470]);
    v17 = (void *)sub_1A468FD30();
    v18 = objc_msgSend(v16, sel_initWithDateComponents_, v17);

    v19 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 84);
    *(_QWORD *)(a2 + v19) = v18;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.recurrenceRule(frequency:interval:end:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v19;
  _QWORD *v20;
  id v21;
  uint64_t result;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v29;

  v12 = v11;
  sub_1A4497EE8(v12, a9, type metadata accessor for REMTestStorePopulator.TestReminder);
  v19 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 88);
  v20 = *(_QWORD **)(a9 + v19);
  swift_bridgeObjectRetain();
  v21 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_1A4439B94(0, v20[2] + 1, 1, v20);
    v20 = (_QWORD *)result;
  }
  v24 = v20[2];
  v23 = v20[3];
  if (v24 >= v23 >> 1)
  {
    result = (uint64_t)sub_1A4439B94((_QWORD *)(v23 > 1), v24 + 1, 1, v20);
    v20 = (_QWORD *)result;
  }
  v20[2] = v24 + 1;
  v25 = &v20[10 * v24];
  v25[4] = a1;
  v25[5] = a2;
  v25[6] = a3;
  v25[7] = a4;
  v25[8] = a5;
  v25[9] = a6;
  v25[10] = a7;
  v25[11] = v29;
  v25[12] = a10;
  v25[13] = a11;
  *(_QWORD *)(a9 + v19) = v20;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.isCompleted(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A4497EE8(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  result = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  *(_BYTE *)(a2 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.completedDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A454033C(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A453E67C, a3);
}

uint64_t sub_1A453E67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED243190);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000015;
    v15 = 0x80000001A46BFE50;
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    v12 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 36);
    sub_1A445404C(v12, &qword_1ED243190);
    v11((char *)v12, v10, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.isCompleted(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A454033C(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A453E868, a3);
}

uint64_t sub_1A453E868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED243190);
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v15 = 0xD000000000000015;
    v16 = 0x80000001A46BFE50;
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    v12 = type metadata accessor for REMTestStorePopulator.TestReminder(0);
    v13 = a1 + *(int *)(v12 + 36);
    sub_1A445404C(v13, &qword_1ED243190);
    v11((char *)v13, v10, v7);
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    *(_BYTE *)(a1 + *(int *)(v12 + 32)) = 1;
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.creationDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A454033C(a1, a2, type metadata accessor for REMTestStorePopulator.TestReminder, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A453EA6C, a3);
}

uint64_t sub_1A453EA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED243190);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000015;
    v15 = 0x80000001A46BFE50;
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    v12 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 40);
    sub_1A445404C(v12, &qword_1ED243190);
    v11((char *)v12, v10, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.isFlagged(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A4497EE8(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  result = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  *(_BYTE *)(a2 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.priority(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A4497EE8(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  result = type metadata accessor for REMTestStorePopulator.TestReminder(0);
  *(_QWORD *)(a2 + *(int *)(result + 48)) = a1;
  return result;
}

void REMTestStorePopulator.TestReminder.contactRepresentation(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;

  sub_1A4497EE8(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  v5 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 52);
  v6 = *(void **)(a2 + v5);
  v7 = a1;

  *(_QWORD *)(a2 + v5) = a1;
}

uint64_t REMTestStorePopulator.TestReminder.assignment(assignee:originator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1A4497EE8(v5, a5, type metadata accessor for REMTestStorePopulator.TestReminder);
  v11 = (uint64_t *)(a5 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 56));
  v12 = *v11;
  v13 = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1A4543CB8(v12, v13);
  *v11 = a1;
  v11[1] = a2;
  v11[2] = a3;
  v11[3] = a4;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.imageAttachment(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  const __CFURL *v14;
  CGImageSource *v15;
  CFDictionaryRef v16;
  CFDictionaryRef v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CGImageSource *v34;
  uint64_t v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v35 = a2;
  v3 = sub_1A468FF7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v30 - v12;
  v14 = (const __CFURL *)sub_1A468FED4();
  v15 = CGImageSourceCreateWithURL(v14, 0);

  if (!v15)
    goto LABEL_27;
  v31 = v4;
  v32 = a1;
  v30[0] = v6;
  v16 = CGImageSourceCopyPropertiesAtIndex(v15, 0, 0);
  if (!v16)
  {

LABEL_22:
    v6 = (char *)v30[0];
    a1 = v32;
LABEL_26:
    v4 = v31;
LABEL_27:
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v39 = 0xD000000000000024;
    v40 = 0x80000001A46BFC00;
    sub_1A4436344(&qword_1EE720000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    result = sub_1A4691638();
    __break(1u);
    return result;
  }
  v17 = v16;
  v18 = (id)*MEMORY[0x1E0CBD048];
  if (-[__CFDictionary __swift_objectForKeyedSubscript:](v17, sel___swift_objectForKeyedSubscript_, v18))
  {
    sub_1A4691278();
    swift_unknownObjectRelease();
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  v33 = v3;
  v34 = v15;
  sub_1A44C6CC8((uint64_t)&v37, (uint64_t)&v39, &qword_1ED243E68);
  if (!v41)
  {

    sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
LABEL_21:
    v3 = v33;
    goto LABEL_22;
  }
  sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_21;
  }
  v19 = v36;

  v20 = (id)*MEMORY[0x1E0CBD040];
  if (-[__CFDictionary __swift_objectForKeyedSubscript:](v17, sel___swift_objectForKeyedSubscript_, v20))
  {
    sub_1A4691278();
    swift_unknownObjectRelease();
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  a1 = v32;
  sub_1A44C6CC8((uint64_t)&v37, (uint64_t)&v39, &qword_1ED243E68);
  if (!v41)
  {

    sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
LABEL_25:
    v3 = v33;
    v6 = (char *)v30[0];
    goto LABEL_26;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_25;
  }
  v21 = v36;

  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v13, a1, v33);
  v22 = objc_msgSend(v19, sel_integerValue);
  v23 = objc_msgSend(v21, sel_integerValue);
  *(_QWORD *)&v13[*(int *)(v7 + 20)] = v22;
  *(_QWORD *)&v13[*(int *)(v7 + 24)] = v23;
  v24 = v35;
  sub_1A4497EE8(v30[1], v35, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A4497EE8((uint64_t)v13, (uint64_t)v11, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
  v25 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 60);
  v26 = *(_QWORD *)(v24 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1A4439CB4(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
  v28 = *(_QWORD *)(v26 + 16);
  v27 = *(_QWORD *)(v26 + 24);
  if (v28 >= v27 >> 1)
    v26 = sub_1A4439CB4(v27 > 1, v28 + 1, 1, v26);
  *(_QWORD *)(v26 + 16) = v28 + 1;
  sub_1A44683E0((uint64_t)v11, v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);

  *(_QWORD *)(v35 + v25) = v26;
  return sub_1A4497F2C((uint64_t)v13, type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment);
}

uint64_t REMTestStorePopulator.TestReminder.unDedupedImageAttachment(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  const __CFURL *v14;
  CGImageSource *v15;
  CFDictionaryRef v16;
  CFDictionaryRef v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  CGImageSource *v34;
  uint64_t v35;
  void *v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v35 = a2;
  v3 = sub_1A468FF7C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v30 - v12;
  v14 = (const __CFURL *)sub_1A468FED4();
  v15 = CGImageSourceCreateWithURL(v14, 0);

  if (!v15)
    goto LABEL_27;
  v31 = v4;
  v32 = a1;
  v30[0] = v6;
  v16 = CGImageSourceCopyPropertiesAtIndex(v15, 0, 0);
  if (!v16)
  {

LABEL_22:
    v6 = (char *)v30[0];
    a1 = v32;
LABEL_26:
    v4 = v31;
LABEL_27:
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v39 = 0xD000000000000024;
    v40 = 0x80000001A46BFC00;
    sub_1A4436344(&qword_1EE720000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    result = sub_1A4691638();
    __break(1u);
    return result;
  }
  v17 = v16;
  v18 = (id)*MEMORY[0x1E0CBD048];
  if (-[__CFDictionary __swift_objectForKeyedSubscript:](v17, sel___swift_objectForKeyedSubscript_, v18))
  {
    sub_1A4691278();
    swift_unknownObjectRelease();
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  v33 = v3;
  v34 = v15;
  sub_1A44C6CC8((uint64_t)&v37, (uint64_t)&v39, &qword_1ED243E68);
  if (!v41)
  {

    sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
LABEL_21:
    v3 = v33;
    goto LABEL_22;
  }
  sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_21;
  }
  v19 = v36;

  v20 = (id)*MEMORY[0x1E0CBD040];
  if (-[__CFDictionary __swift_objectForKeyedSubscript:](v17, sel___swift_objectForKeyedSubscript_, v20))
  {
    sub_1A4691278();
    swift_unknownObjectRelease();
  }
  else
  {
    v37 = 0u;
    v38 = 0u;
  }
  a1 = v32;
  sub_1A44C6CC8((uint64_t)&v37, (uint64_t)&v39, &qword_1ED243E68);
  if (!v41)
  {

    sub_1A445404C((uint64_t)&v39, &qword_1ED243E68);
LABEL_25:
    v3 = v33;
    v6 = (char *)v30[0];
    goto LABEL_26;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_25;
  }
  v21 = v36;

  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v13, a1, v33);
  v22 = objc_msgSend(v19, sel_integerValue);
  v23 = objc_msgSend(v21, sel_integerValue);
  *(_QWORD *)&v13[*(int *)(v7 + 20)] = v22;
  *(_QWORD *)&v13[*(int *)(v7 + 24)] = v23;
  v24 = v35;
  sub_1A4497EE8(v30[1], v35, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A4497EE8((uint64_t)v13, (uint64_t)v11, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
  v25 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 64);
  v26 = *(_QWORD *)(v24 + v25);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v26 = sub_1A4439CC8(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
  v28 = *(_QWORD *)(v26 + 16);
  v27 = *(_QWORD *)(v26 + 24);
  if (v28 >= v27 >> 1)
    v26 = sub_1A4439CC8(v27 > 1, v28 + 1, 1, v26);
  *(_QWORD *)(v26 + 16) = v28 + 1;
  sub_1A44683E0((uint64_t)v11, v26+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v28, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);

  *(_QWORD *)(v35 + v25) = v26;
  return sub_1A4497F2C((uint64_t)v13, type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment);
}

uint64_t REMTestStorePopulator.TestReminder.urlAttachment(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;

  v3 = v2;
  v6 = type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - v11;
  v13 = sub_1A468FF7C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a1, v13);
  sub_1A4497EE8(v3, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A4497EE8((uint64_t)v12, (uint64_t)v10, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
  v14 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 68);
  v15 = *(_QWORD *)(a2 + v14);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v15 = sub_1A4439CDC(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
  v17 = *(_QWORD *)(v15 + 16);
  v16 = *(_QWORD *)(v15 + 24);
  if (v17 >= v16 >> 1)
    v15 = sub_1A4439CDC(v16 > 1, v17 + 1, 1, v15);
  *(_QWORD *)(v15 + 16) = v17 + 1;
  sub_1A44683E0((uint64_t)v10, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v17, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
  *(_QWORD *)(a2 + v14) = v15;
  return sub_1A4497F2C((uint64_t)v12, type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment);
}

uint64_t REMTestStorePopulator.TestReminder.hashtag(_:type:creationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = v5;
  v27 = a4;
  v28 = a1;
  v29 = a3;
  v30 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A46900B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a5;
  sub_1A4497EE8(v6, a5, type metadata accessor for REMTestStorePopulator.TestReminder);
  sub_1A444ABF4(v27, (uint64_t)v10, &qword_1ED243190);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1A46900A8();
    sub_1A445404C((uint64_t)v10, &qword_1ED243190);
    v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v20(v14, v10, v11);
  }
  v21 = v30;
  *(_QWORD *)v18 = v28;
  *((_QWORD *)v18 + 1) = v21;
  *((_QWORD *)v18 + 2) = v29;
  v20(&v18[*(int *)(v15 + 24)], v14, v11);
  v22 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 72);
  v23 = *(_QWORD *)(v19 + v22);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_1A4439CF0(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
  v25 = *(_QWORD *)(v23 + 16);
  v24 = *(_QWORD *)(v23 + 24);
  if (v25 >= v24 >> 1)
    v23 = sub_1A4439CF0(v24 > 1, v25 + 1, 1, v23);
  *(_QWORD *)(v23 + 16) = v25 + 1;
  result = sub_1A44683E0((uint64_t)v18, v23+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v25, type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag);
  *(_QWORD *)(v19 + v22) = v23;
  return result;
}

void REMTestStorePopulator.TestReminder.location(_:proximity:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  id v7;
  uint64_t v8;

  sub_1A4497EE8(v3, a3, type metadata accessor for REMTestStorePopulator.TestReminder);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84478]), sel_initWithStructuredLocation_proximity_, a1, a2);
  v8 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 76);

  *(_QWORD *)(a3 + v8) = v7;
}

void REMTestStorePopulator.TestReminder.location(title:latitude:longitude:radius:proximity:)(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v5;
  uint64_t v6;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;

  v6 = v5;
  sub_1A4497EE8(v6, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  v12 = objc_allocWithZone(MEMORY[0x1E0D846C8]);
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithTitle_, v13);

  objc_msgSend(v14, sel_setLatitude_, a3);
  objc_msgSend(v14, sel_setLongitude_, a4);
  objc_msgSend(v14, sel_setRadius_, a5);
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84478]), sel_initWithStructuredLocation_proximity_, v14, a1);

  v16 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 76);
  *(_QWORD *)(a2 + v16) = v15;
}

void REMTestStorePopulator.TestReminder.vehicle(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  uint64_t v6;

  sub_1A4497EE8(v2, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84488]), sel_initWithEvent_, a1);
  v6 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 80);

  *(_QWORD *)(a2 + v6) = v5;
}

uint64_t REMTestStorePopulator.TestReminder.dueDateDeltaAlert(_:creationDate:acknowledgedDate:minimumSupportedAppVersion:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t result;
  uint64_t v24;

  v6 = v5;
  v12 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert(0);
  v13 = *((_QWORD *)v12 - 1);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1A4497EE8(v6, a5, type metadata accessor for REMTestStorePopulator.TestReminder);
  v16 = (char *)v15 + v12[5];
  v17 = sub_1A46900B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a2, v17);
  sub_1A444ABF4(a3, (uint64_t)v15 + v12[6], &qword_1ED243190);
  *v15 = a1;
  *(_QWORD *)((char *)v15 + v12[7]) = a4;
  v18 = *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 92);
  v19 = *(_QWORD *)(a5 + v18);
  v20 = a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v19 = sub_1A4439D04(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
  v22 = *(_QWORD *)(v19 + 16);
  v21 = *(_QWORD *)(v19 + 24);
  if (v22 >= v21 >> 1)
    v19 = sub_1A4439D04(v21 > 1, v22 + 1, 1, v19);
  *(_QWORD *)(v19 + 16) = v22 + 1;
  result = sub_1A44683E0((uint64_t)v15, v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v22, type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert);
  *(_QWORD *)(a5 + v18) = v19;
  return result;
}

uint64_t REMTestStorePopulator.TestReminder.alternativeDueDate_forCalendar(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A468FDE4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A46902AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  swift_bridgeObjectRetain();
  DateComponents.init(testing_parsedFrom:calendar:)(a1, (uint64_t)v8, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1A445404C((uint64_t)v11, &qword_1ED23E4C0);
    v19[0] = 0;
    v19[1] = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_1A4497EE8(v3, a2, type metadata accessor for REMTestStorePopulator.TestReminder);
    v17 = a2 + *(int *)(type metadata accessor for REMTestStorePopulator.TestReminder(0) + 96);
    sub_1A445404C(v17, &qword_1ED23E4C0);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v17, v15, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;

  v6 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
  a3[2] = 0;
  a3[3] = 0;
  v7 = (char *)a3 + *(int *)(v6 + 24);
  v8 = sub_1A46900B4();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *a3 = a1;
  a3[1] = a2;
  *(_QWORD *)((char *)a3 + *(int *)(v6 + 28)) = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.init(_:builder:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
  a4[2] = 0;
  a4[3] = 0;
  v9 = (char *)a4 + *(int *)(v8 + 24);
  v10 = sub_1A46900B4();
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a4 = a1;
  a4[1] = a2;
  result = a3(v11);
  *(_QWORD *)((char *)a4 + *(int *)(v8 + 28)) = result;
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.canonicalName(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  sub_1A4497EE8(v3, a3, type metadata accessor for REMTestStorePopulator.TestListSection);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  return result;
}

uint64_t REMTestStorePopulator.TestListSection.creationDate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A454033C(a1, a2, type metadata accessor for REMTestStorePopulator.TestListSection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A4540390, a3);
}

uint64_t sub_1A454033C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;

  sub_1A4497EE8(v5, a5, a3);
  return a4(a5, a1, a2);
}

uint64_t sub_1A4540390(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  unint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Date.init(testing_parsedFrom:)(a2, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v6, &qword_1ED243190);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000015;
    v15 = 0x80000001A46BFE50;
    sub_1A4690984();
    result = sub_1A4691638();
    __break(1u);
  }
  else
  {
    v11 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v11(v10, v6, v7);
    v12 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestListSection(0) + 24);
    sub_1A445404C(v12, &qword_1ED243190);
    v11((char *)v12, v10, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
  }
  return result;
}

ReminderKitInternal::REMTestStorePopulator::TestCustomSmartListSection __swiftcall REMTestStorePopulator.TestCustomSmartListSection.init(_:)(ReminderKitInternal::REMTestStorePopulator::TestCustomSmartListSection result)
{
  ReminderKitInternal::REMTestStorePopulator::TestCustomSmartListSection *v1;

  *v1 = result;
  return result;
}

uint64_t sub_1A4540570(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4540714(a1, a2, a3, (SEL *)&selRef_name);
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatAccount(_:)(REMAccount *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  v3 = sub_1A4540714(a1, v1, v2, (SEL *)&selRef_name);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatGroup(_:)(REMList *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  v3 = sub_1A4540714(a1, v1, v2, (SEL *)&selRef_name);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatList(_:)(REMList *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;

  v3 = sub_1A4540714(a1, v1, v2, (SEL *)&selRef_name);
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_1A45405A0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_name);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

Swift::tuple_description_String_shouldDumpContents_Bool __swiftcall REMTestStoreDumpFormatter.formatCustomSmartList(_:)(REMSmartList *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::Bool v7;
  Swift::tuple_description_String_shouldDumpContents_Bool result;

  v1 = -[REMSmartList name](a1, sel_name);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v4 = v3;

  v5 = v2;
  v6 = v4;
  v7 = 1;
  result.description._object = v6;
  result.description._countAndFlagsBits = v5;
  result.shouldDumpContents = v7;
  return result;
}

uint64_t sub_1A4540648(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_titleAsString);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v3;
}

Swift::String __swiftcall REMTestStoreDumpFormatter.formatReminder(_:)(REMReminder *a1)
{
  NSString *v1;
  NSString *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  Swift::String result;

  v1 = -[REMReminder titleAsString](a1, sel_titleAsString);
  if (v1)
  {
    v2 = v1;
    v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0xE000000000000000;
  }
  v6 = v3;
  v7 = (void *)v5;
  result._object = v7;
  result._countAndFlagsBits = v6;
  return result;
}

uint64_t sub_1A4540708(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4540714(a1, a2, a3, (SEL *)&selRef_displayName);
}

uint64_t sub_1A4540714(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  id v4;
  uint64_t v5;

  v4 = objc_msgSend(a1, *a4);
  v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v5;
}

uint64_t REMTestStoreDumpFormatter.formatSection(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4540714(a1, a2, a3, (SEL *)&selRef_displayName);
}

uint64_t sub_1A454076C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v7 = (_QWORD *)(a4 + 16);
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_beginAccess();
  v8 = *(_QWORD **)(a4 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a4 + 16) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1A4438920(0, v8[2] + 1, 1, v8);
    *v7 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1A4438920((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    *v7 = v8;
  }
  v8[2] = v11 + 1;
  v12 = &v8[2 * v11];
  v12[4] = a5;
  v12[5] = a6;
  return swift_endAccess();
}

_QWORD *sub_1A4540860(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36[2];

  v36[1] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CB28);
  v2 = sub_1A46916BC();
  v3 = (_QWORD *)v2;
  v4 = 0;
  v34 = a1;
  v35 = (_QWORD *)v2;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v31 = v6;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v33 = v2 + 64;
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(void **)(*(_QWORD *)(v34 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    v20 = v19;
    v21 = objc_msgSend(v20, sel_store);
    v22 = objc_msgSend(v20, sel_objectID);
    v36[0] = 0;
    v23 = objc_msgSend(v21, sel_fetchAccountWithObjectID_error_, v22, v36);

    if (!v23)
      break;
    v24 = v36[0];

    *(_QWORD *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v3 = v35;
    v25 = (_QWORD *)(v35[6] + 16 * i);
    *v25 = v17;
    v25[1] = v18;
    *(_QWORD *)(v35[7] + 8 * i) = v23;
    v26 = v35[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
    v35[2] = v28;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_26;
    if (v13 >= v32)
      return v3;
    v14 = *(_QWORD *)(v31 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v32)
        return v3;
      v14 = *(_QWORD *)(v31 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v32)
          return v3;
        v14 = *(_QWORD *)(v31 + 8 * v4);
        if (!v14)
        {
          v15 = v13 + 3;
          if (v15 >= v32)
            return v3;
          v14 = *(_QWORD *)(v31 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v4 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_27;
              if (v4 >= v32)
                return v3;
              v14 = *(_QWORD *)(v31 + 8 * v4);
              ++v15;
              if (v14)
                goto LABEL_18;
            }
          }
          v4 = v15;
        }
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v29 = v36[0];
  sub_1A468FE68();

  swift_willThrow();
  swift_bridgeObjectRelease();
  v3 = v35;
  swift_release();
  return v3;
}

void sub_1A4540B40(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7206F0);
  v2 = sub_1A46916BC();
  v3 = (_QWORD *)v2;
  v4 = 0;
  v30 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v27 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v28 = (unint64_t)(v6 + 63) >> 6;
  v29 = v2 + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * i);
    v15 = *v14;
    v16 = v14[1];
    v17 = *(void **)(*(_QWORD *)(v30 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    v18 = v17;
    v19 = objc_msgSend(v18, sel_attachmentContext);
    if (v19)
    {
      v20 = v19;
      v21 = objc_msgSend(v19, sel_attachments);

      sub_1A444AA40(0, &qword_1EE7206F8);
      v22 = sub_1A4690BA0();

      v18 = v21;
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }

    *(_QWORD *)(v29 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v3[6] + 16 * i);
    *v23 = v15;
    v23[1] = v16;
    *(_QWORD *)(v3[7] + 8 * i) = v22;
    v24 = v3[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v3[2] = v26;
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_27;
    if (v11 >= v28)
      return;
    v12 = *(_QWORD *)(v27 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v28)
        return;
      v12 = *(_QWORD *)(v27 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v28)
          return;
        v12 = *(_QWORD *)(v27 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 >= v28)
    return;
  v12 = *(_QWORD *)(v27 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v28)
      return;
    v12 = *(_QWORD *)(v27 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_28:
  __break(1u);
}

void sub_1A4540DB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  unint64_t v15;
  int64_t v16;
  id v17;
  id v18;
  uint64_t v19;

  v19 = a1;
  v6 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v11 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v18 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * i);
    v17 = v18;
    sub_1A4539280(&v19, (uint64_t *)&v18, a3);
    if (v3)
    {
      swift_release();

      swift_bridgeObjectRelease();
      return;
    }

    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v10)
      goto LABEL_26;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    if (!v15)
      break;
LABEL_17:
    v9 = (v15 - 1) & v15;
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v10)
    goto LABEL_26;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 2;
  if (v11 + 2 >= v10)
    goto LABEL_26;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 3;
  if (v11 + 3 >= v10)
    goto LABEL_26;
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
    goto LABEL_16;
  v16 = v11 + 4;
  if (v11 + 4 >= v10)
  {
LABEL_26:
    swift_release();
    return;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
LABEL_16:
    v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v10)
      goto LABEL_26;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
}

void sub_1A4540F64(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23[6];
  id v24;

  v4 = v3;
  v6 = a2;
  v24 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1A46912D8();
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
    sub_1A4460634();
    sub_1A4690DB0();
    v6 = v23[1];
    v22 = v23[2];
    v7 = v23[3];
    v8 = v23[4];
    v9 = v23[5];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a2 + 32);
    v22 = a2 + 56;
    v11 = ~v10;
    v12 = -v10;
    if (v12 < 64)
      v13 = ~(-1 << v12);
    else
      v13 = -1;
    v9 = v13 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v7 = v11;
    v8 = 0;
  }
  v21 = (unint64_t)(v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0)
    goto LABEL_11;
LABEL_8:
  if (!sub_1A4691338())
    goto LABEL_35;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v14 = (id)v23[0];
  swift_unknownObjectRelease();
  v15 = v8;
  v16 = v9;
  if (!v14)
    goto LABEL_35;
  while (1)
  {
    v23[0] = (uint64_t)v14;
    sub_1A45390CC(&v24, v23, a3);
    if (v4)
    {

      swift_bridgeObjectRelease();
      sub_1A4460EDC();
      return;
    }

    v8 = v15;
    v9 = v16;
    if (v6 < 0)
      goto LABEL_8;
LABEL_11:
    if (!v9)
      break;
    v16 = (v9 - 1) & v9;
    v17 = __clz(__rbit64(v9)) | (v8 << 6);
    v15 = v8;
LABEL_24:
    v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v17);
    if (!v14)
      goto LABEL_35;
  }
  v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v21)
    goto LABEL_35;
  v18 = *(_QWORD *)(v22 + 8 * v15);
  if (v18)
  {
LABEL_23:
    v16 = (v18 - 1) & v18;
    v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  v19 = v8 + 2;
  if (v8 + 2 >= v21)
    goto LABEL_35;
  v18 = *(_QWORD *)(v22 + 8 * v19);
  if (v18)
    goto LABEL_22;
  v19 = v8 + 3;
  if (v8 + 3 >= v21)
    goto LABEL_35;
  v18 = *(_QWORD *)(v22 + 8 * v19);
  if (v18)
    goto LABEL_22;
  v19 = v8 + 4;
  if (v8 + 4 >= v21)
    goto LABEL_35;
  v18 = *(_QWORD *)(v22 + 8 * v19);
  if (v18)
  {
LABEL_22:
    v15 = v19;
    goto LABEL_23;
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v21)
    goto LABEL_35;
  v18 = *(_QWORD *)(v22 + 8 * v15);
  if (v18)
    goto LABEL_23;
  v20 = v8 + 6;
  while (v21 != v20)
  {
    v18 = *(_QWORD *)(v22 + 8 * v20++);
    if (v18)
    {
      v15 = v20 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1A4460EDC();
}

void *sub_1A4541280(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  void *v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v5 = a1;
  if (a1 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1A46916A4())
  {
    v19 = v6;
    v22 = v5 & 0xC000000000000001;
    v7 = 4;
    v20 = v5;
    v21 = a3;
    while (1)
    {
      v8 = v22 ? (id)MEMORY[0x1A859ECE0](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = objc_msgSend(v8, sel_firstName);
      if (v11)
      {
        v12 = v11;
        v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v15 = v14;

      }
      else
      {
        v13 = 0;
        v15 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend(v9, sel_lastName);
      if (v16)
      {
        v17 = v16;
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      }
      swift_bridgeObjectRetain();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13 == a2 && v15 == v21)
      {
        swift_bridgeObjectRelease();
LABEL_19:
        swift_bridgeObjectRelease();
        return v9;
      }
      a3 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      v5 = v20;
      if ((a3 & 1) != 0)
        goto LABEL_19;

      ++v7;
      if (v10 == v19)
        goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A45414B8(id *__src, id *a2, unint64_t a3, void **a4, uint64_t a5)
{
  id *v6;
  id *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void **v21;
  id *v22;
  id *v23;
  id *v24;
  id *v25;
  char *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t result;
  id v34;
  id v35;
  id v37;
  unint64_t v39;
  id v40;
  id *v41;
  void **v42;
  char *v43;
  void **v44;
  id *v45;

  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v45 = __src;
  v44 = a4;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15)
      goto LABEL_45;
    if (a4 != a2 || &a2[2 * v13] <= a4)
      memmove(a4, a2, 16 * v13);
    v23 = &a4[2 * v13];
    v43 = (char *)v23;
    v45 = v6;
    if (v7 >= v6 || v11 < 16)
      goto LABEL_44;
    v35 = *(id *)(a5 + 104);
    v24 = (id *)(a3 - 16);
    v25 = v6;
    while (1)
    {
      v39 = (unint64_t)v23;
      v41 = v24 + 2;
      v26 = (char *)(v23 - 2);
      v27 = *(v25 - 2);
      v25 -= 2;
      v28 = *(v23 - 2);
      swift_bridgeObjectRetain();
      v29 = v27;
      swift_bridgeObjectRetain();
      v30 = objc_msgSend(v28, sel_objectID);
      v37 = objc_msgSend(v35, sel_indexOfObject_, v30);

      v31 = objc_msgSend(v29, sel_objectID);
      v32 = objc_msgSend(v35, sel_indexOfObject_, v31);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if ((uint64_t)v37 < (uint64_t)v32)
        break;
      v43 = v26;
      v25 = v6;
      if ((unint64_t)v41 < v39 || (unint64_t)v24 >= v39)
      {
        *(_OWORD *)v24 = *(_OWORD *)v26;
        v23 = (id *)v26;
        goto LABEL_32;
      }
      if (v41 != (id *)v39)
        *(_OWORD *)v24 = *(_OWORD *)v26;
      v23 = (id *)v26;
      if (v6 <= v7)
        goto LABEL_44;
LABEL_33:
      v24 -= 2;
      v6 = v25;
      if (v23 <= a4)
        goto LABEL_44;
    }
    v23 = (id *)v39;
    if (v41 != v6 || v24 >= v6)
      *(_OWORD *)v24 = *(_OWORD *)v25;
    v45 = v25;
LABEL_32:
    if (v25 <= v7)
      goto LABEL_44;
    goto LABEL_33;
  }
  if (v8 >= -15)
  {
    if (a4 != __src || &__src[2 * v10] <= a4)
      memmove(a4, __src, 16 * v10);
    v43 = (char *)&a4[2 * v10];
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v34 = *(id *)(a5 + 104);
      v14 = a4;
      do
      {
        v42 = v7;
        v15 = *v14;
        v16 = *v6;
        swift_bridgeObjectRetain();
        v17 = v15;
        swift_bridgeObjectRetain();
        v18 = objc_msgSend(v16, sel_objectID);
        v40 = objc_msgSend(v34, sel_indexOfObject_, v18);

        v19 = objc_msgSend(v17, sel_objectID);
        v20 = objc_msgSend(v34, sel_indexOfObject_, v19);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        if ((uint64_t)v40 >= (uint64_t)v20)
        {
          v21 = v42;
          v22 = v6;
          if (v42 != v14)
            *(_OWORD *)v42 = *(_OWORD *)v14;
          v14 += 2;
          v44 = v14;
        }
        else
        {
          v21 = v42;
          v22 = v6 + 2;
          if (v42 < v6 || v42 >= v22 || v42 != v6)
            *(_OWORD *)v42 = *(_OWORD *)v6;
        }
        v7 = v21 + 2;
        if (v14 >= &a4[2 * v10])
          break;
        v6 = v22;
      }
      while ((unint64_t)v22 < a3);
      v45 = v7;
    }
LABEL_44:
    sub_1A462E6A8((void **)&v45, (const void **)&v44, &v43);
    return 1;
  }
LABEL_45:
  swift_release();
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

void sub_1A4541900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  if (a3 != a2)
  {
    v17 = *(id *)(a5 + 104);
    v18 = *a4;
    v5 = *a4 + 16 * a3 - 16;
LABEL_5:
    v6 = *(_OWORD *)(v18 + 16 * a3);
    v7 = a1;
    v16 = v5;
    v20 = a3;
    while (1)
    {
      v8 = *(void **)v5;
      v9 = (id)v6;
      swift_bridgeObjectRetain();
      v10 = v8;
      swift_bridgeObjectRetain();
      v11 = objc_msgSend(v9, sel_objectID);
      v19 = objc_msgSend(v17, sel_indexOfObject_, v11);

      v12 = objc_msgSend(v10, sel_objectID);
      v13 = objc_msgSend(v17, sel_indexOfObject_, v12);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      if ((uint64_t)v19 >= (uint64_t)v13)
      {
LABEL_4:
        a3 = v20 + 1;
        v5 = v16 + 16;
        if (v20 + 1 == a2)
          return;
        goto LABEL_5;
      }
      if (!v18)
        break;
      v6 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)(v5 + 16) = *(_OWORD *)v5;
      *(_OWORD *)v5 = v6;
      v5 -= 16;
      if (v20 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1A4541A90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  __int128 *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  id *v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  id *v105;
  id *v106;
  unint64_t v107;
  char *v108;
  unint64_t v109;
  uint64_t result;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  uint64_t v123;
  uint64_t v124;
  void **v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  void *v129;
  id v130;
  id *v131;
  uint64_t v132;
  uint64_t v133;

  v5 = a1[1];
  swift_retain_n();
  v6 = sub_1A46918CC();
  if (v6 >= v5)
  {
    if (v5 < 0)
      goto LABEL_136;
    if (v5)
    {
      swift_retain();
      sub_1A4541900(0, v5, 1, a1, a2);
    }
    swift_release_n();
    return swift_release();
  }
  if (v5 >= 0)
    v7 = v5;
  else
    v7 = v5 + 1;
  if (v5 < -1)
    goto LABEL_144;
  v126 = a2;
  v127 = v2;
  v120 = v5;
  v115 = v6;
  v111 = a1;
  if (v5 < 2)
  {
    v125 = (void **)(MEMORY[0x1E0DEE9D8] + 32);
    v114 = MEMORY[0x1E0DEE9D8];
    if (v5 == 1)
      goto LABEL_13;
    v12 = (char *)MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_99:
    if (v14 >= 2)
    {
      v101 = *v111;
      v132 = *v111;
      do
      {
        v102 = v14 - 2;
        if (v14 < 2)
          goto LABEL_131;
        if (!v101)
          goto LABEL_143;
        v103 = *(_QWORD *)&v12[16 * v102 + 32];
        v104 = *(_QWORD *)&v12[16 * v14 + 24];
        v105 = (id *)(v101 + 16 * v103);
        v106 = (id *)(v101 + 16 * *(_QWORD *)&v12[16 * v14 + 16]);
        v107 = v101 + 16 * v104;
        swift_retain();
        sub_1A45414B8(v105, v106, v107, v125, v126);
        if (v127)
          goto LABEL_111;
        swift_release();
        if (v104 < v103)
          goto LABEL_132;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1A462EBC8((uint64_t)v12);
        if (v102 >= *((_QWORD *)v12 + 2))
          goto LABEL_133;
        v108 = &v12[16 * v102 + 32];
        *(_QWORD *)v108 = v103;
        *((_QWORD *)v108 + 1) = v104;
        v109 = *((_QWORD *)v12 + 2);
        if (v14 > v109)
          goto LABEL_134;
        memmove(&v12[16 * v14 + 16], &v12[16 * v14 + 32], 16 * (v109 - v14));
        *((_QWORD *)v12 + 2) = v109 - 1;
        v14 = v109 - 1;
        v101 = v132;
      }
      while (v109 > 2);
    }
    swift_bridgeObjectRelease();
LABEL_113:
    *(_QWORD *)(v114 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v8 = v7 >> 1;
  v9 = sub_1A4690C00();
  *(_QWORD *)(v9 + 16) = v8;
  v114 = v9;
  v125 = (void **)(v9 + 32);
LABEL_13:
  v10 = 0;
  v11 = *a1;
  v112 = *a1 - 16;
  v113 = *a1 + 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v13 = v120;
  v133 = v11;
  while (1)
  {
    v15 = v10 + 1;
    v16 = v13;
    v121 = v10;
    if (v10 + 1 < v13)
    {
      v17 = *(void **)(v11 + 16 * v15);
      v18 = *(void **)(v11 + 16 * v10);
      v19 = *(void **)(a2 + 104);
      v20 = v17;
      swift_bridgeObjectRetain();
      v21 = v18;
      swift_bridgeObjectRetain();
      v22 = objc_msgSend(v20, sel_objectID);
      v122 = objc_msgSend(v19, sel_indexOfObject_, v22);

      v23 = objc_msgSend(v21, sel_objectID);
      v117 = v19;
      v118 = objc_msgSend(v19, sel_indexOfObject_, v23);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v15 = v10 + 2;
      if (v10 + 2 < v16)
      {
        v24 = v113 + 16 * v10;
        while (1)
        {
          v25 = v15;
          v26 = *(void **)(v24 - 24);
          v27 = *(id *)(v24 - 8);
          swift_bridgeObjectRetain();
          v28 = v26;
          swift_bridgeObjectRetain();
          v29 = objc_msgSend(v27, sel_objectID);
          v128 = objc_msgSend(v117, sel_indexOfObject_, v29);

          v30 = objc_msgSend(v28, sel_objectID);
          v31 = objc_msgSend(v117, sel_indexOfObject_, v30);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          if ((uint64_t)v122 < (uint64_t)v118 == (uint64_t)v128 >= (uint64_t)v31)
            break;
          v15 = v25 + 1;
          v24 += 16;
          v16 = v120;
          if (v120 == v25 + 1)
          {
            v15 = v120;
            a2 = v126;
            goto LABEL_23;
          }
        }
        a2 = v126;
        v16 = v120;
        v15 = v25;
LABEL_23:
        v10 = v121;
      }
      v11 = v133;
      if ((uint64_t)v122 < (uint64_t)v118)
      {
        if (v15 < v10)
          goto LABEL_137;
        if (v10 < v15)
        {
          v32 = (__int128 *)(v112 + 16 * v15);
          v33 = v15;
          v34 = v10;
          v35 = (__int128 *)(v133 + 16 * v10);
          do
          {
            if (v34 != --v33)
            {
              if (!v133)
                goto LABEL_142;
              v36 = *v35;
              *v35 = *v32;
              *v32 = v36;
            }
            ++v34;
            --v32;
            ++v35;
          }
          while (v34 < v33);
        }
      }
    }
    if (v15 < v16)
    {
      if (__OFSUB__(v15, v10))
        goto LABEL_135;
      if (v15 - v10 < v115)
        break;
    }
LABEL_50:
    if (v15 < v10)
      goto LABEL_130;
    v124 = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v48 = *((_QWORD *)v12 + 2);
    v47 = *((_QWORD *)v12 + 3);
    v14 = v48 + 1;
    v11 = v133;
    if (v48 >= v47 >> 1)
    {
      v100 = sub_1A462E5B0((char *)(v47 > 1), v48 + 1, 1, v12);
      v11 = v133;
      v12 = v100;
    }
    *((_QWORD *)v12 + 2) = v14;
    v49 = v12 + 32;
    v50 = &v12[16 * v48 + 32];
    *(_QWORD *)v50 = v10;
    *((_QWORD *)v50 + 1) = v124;
    if (v48)
    {
      while (1)
      {
        v51 = v14 - 1;
        if (v14 >= 4)
        {
          v56 = &v49[16 * v14];
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_119;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_120;
          v63 = v14 - 2;
          v64 = &v49[16 * v14 - 32];
          v66 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_122;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_125;
          if (v68 >= v59)
          {
            v86 = &v49[16 * v51];
            v88 = *(_QWORD *)v86;
            v87 = *((_QWORD *)v86 + 1);
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_129;
            v79 = v54 < v89;
            goto LABEL_87;
          }
        }
        else
        {
          if (v14 != 3)
          {
            v80 = *((_QWORD *)v12 + 4);
            v81 = *((_QWORD *)v12 + 5);
            v62 = __OFSUB__(v81, v80);
            v73 = v81 - v80;
            v74 = v62;
            goto LABEL_81;
          }
          v53 = *((_QWORD *)v12 + 4);
          v52 = *((_QWORD *)v12 + 5);
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_121;
        v63 = v14 - 2;
        v69 = &v49[16 * v14 - 32];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_124;
        v75 = &v49[16 * v51];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_127;
        if (__OFADD__(v73, v78))
          goto LABEL_128;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_87:
          if (v79)
            v51 = v63;
          goto LABEL_89;
        }
LABEL_81:
        if ((v74 & 1) != 0)
          goto LABEL_123;
        v82 = &v49[16 * v51];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_126;
        if (v85 < v73)
          goto LABEL_15;
LABEL_89:
        v90 = v51 - 1;
        if (v51 - 1 >= v14)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_141;
        v91 = &v49[16 * v90];
        v92 = *(_QWORD *)v91;
        v93 = v51;
        v94 = &v49[16 * v51];
        v95 = *((_QWORD *)v94 + 1);
        v96 = (id *)(v11 + 16 * *(_QWORD *)v91);
        v131 = (id *)(v11 + 16 * *(_QWORD *)v94);
        v97 = v11 + 16 * v95;
        a2 = v126;
        swift_retain();
        sub_1A45414B8(v96, v131, v97, v125, v126);
        if (v127)
        {
LABEL_111:
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_113;
        }
        swift_release();
        if (v95 < v92)
          goto LABEL_116;
        if (v93 > *((_QWORD *)v12 + 2))
          goto LABEL_117;
        v98 = v93;
        *(_QWORD *)v91 = v92;
        v49 = v12 + 32;
        *(_QWORD *)&v12[16 * v90 + 40] = v95;
        v99 = *((_QWORD *)v12 + 2);
        if (v98 >= v99)
          goto LABEL_118;
        v14 = v99 - 1;
        memmove(v94, v94 + 16, 16 * (v99 - 1 - v98));
        *((_QWORD *)v12 + 2) = v99 - 1;
        v11 = v133;
        if (v99 <= 2)
          goto LABEL_15;
      }
    }
    v14 = 1;
LABEL_15:
    v13 = v120;
    v10 = v124;
    if (v124 >= v120)
      goto LABEL_99;
  }
  if (__OFADD__(v10, v115))
    goto LABEL_138;
  if (v10 + v115 >= v16)
    v37 = v16;
  else
    v37 = v10 + v115;
  if (v37 >= v10)
  {
    if (v15 != v37)
    {
      v116 = v12;
      v129 = *(void **)(a2 + 104);
      v38 = v112 + 16 * v15;
      v119 = v37;
      do
      {
        v39 = *(_OWORD *)(v11 + 16 * v15);
        v123 = v38;
        while (1)
        {
          v40 = v15;
          v41 = *(void **)v38;
          v42 = (id)v39;
          swift_bridgeObjectRetain();
          v43 = v41;
          swift_bridgeObjectRetain();
          v44 = objc_msgSend(v42, sel_objectID);
          v130 = objc_msgSend(v129, sel_indexOfObject_, v44);

          v45 = objc_msgSend(v43, sel_objectID);
          v46 = objc_msgSend(v129, sel_indexOfObject_, v45);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          if ((uint64_t)v130 >= (uint64_t)v46)
            break;
          v11 = v133;
          if (!v133)
            goto LABEL_140;
          v15 = v40;
          v39 = *(_OWORD *)(v38 + 16);
          *(_OWORD *)(v38 + 16) = *(_OWORD *)v38;
          *(_OWORD *)v38 = v39;
          v38 -= 16;
          if (v40 == ++v10)
            goto LABEL_43;
        }
        v11 = v133;
        v15 = v40;
LABEL_43:
        ++v15;
        v10 = v121;
        v38 = v123 + 16;
      }
      while (v15 != v119);
      v15 = v119;
      a2 = v126;
      v12 = v116;
    }
    goto LABEL_50;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  swift_release_n();
  __break(1u);
LABEL_141:
  swift_release_n();
  __break(1u);
LABEL_142:
  swift_release_n();
  __break(1u);
LABEL_143:
  swift_release_n();
  __break(1u);
LABEL_144:
  swift_release_n();
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A4542484(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_1A462EC68(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_1A4541A90(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t sub_1A4542524(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v4;
  char v5;
  uint64_t *v6;
  uint32_t *p_ivar_base_size;
  uint32_t *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint32_t *v14;
  BOOL v15;
  void *v16;
  unsigned int v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  unint64_t isUniquelyReferenced_nonNull_native;
  id v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t result;
  void *v51;
  unint64_t v52;
  id v53;
  id v54;
  unint64_t v55;
  uint64_t v56;
  _QWORD v57[2];

  v2 = a2;
  v57[1] = *MEMORY[0x1E0C80C00];
  v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84650]), sel_initWithStore_, a2);
  v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E10]), sel_init);
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v51 = v2;
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = (uint64_t *)(a1 + 72);
    p_ivar_base_size = &REMRemindersListDataView_TemplateInvocation__metaData.ivar_base_size;
    v8 = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
    while (1)
    {
      v10 = *(v6 - 3);
      v11 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1A469087C();
      if (v10 == 2 && (v5 & 1) != 0)
        break;
      v14 = p_ivar_base_size;
      v15 = v10 == 2;
      v13 = objc_msgSend(v54, sel___addAccountWithType_name_, v10, v12);

      v5 |= v15;
      p_ivar_base_size = v14;
      v8 = &REMRemindersListDataView_TemplateInvocation__metaData.ivar_base_size;
      if (v11)
        goto LABEL_9;
LABEL_3:
      v6 += 6;
      v9 = objc_msgSend(v13, *((SEL *)p_ivar_base_size + 351));
      objc_msgSend(v53, *((SEL *)v8 + 191), v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if (!--v4)
      {
        swift_bridgeObjectRelease();
        v2 = v51;
        goto LABEL_11;
      }
    }
    v13 = objc_msgSend(v54, sel__addTestOnlyNonPrimaryCKAccountWithName_accountObjectID_, v12, 0);

    v5 = 1;
    if (!v11)
      goto LABEL_3;
LABEL_9:
    v16 = (void *)sub_1A469087C();
    objc_msgSend(v13, sel_setExternalIdentifier_, v16);

    goto LABEL_3;
  }
LABEL_11:
  v57[0] = 0;
  v17 = objc_msgSend(v54, sel_saveSynchronouslyWithError_, v57);
  v18 = (void *)v57[0];
  if (!v17
    || (v57[0] = 0,
        v19 = v18,
        v20 = objc_msgSend(v2, sel_fetchAccountsWithError_, v57),
        v18 = (void *)v57[0],
        !v20))
  {
    v25 = v18;
    sub_1A468FE68();

    swift_willThrow();
    return (uint64_t)v25;
  }
  v21 = v20;
  sub_1A444AA40(0, &qword_1EE71CB20);
  isUniquelyReferenced_nonNull_native = sub_1A4690BA0();
  v23 = v18;

  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_38:
    swift_bridgeObjectRetain_n();
    v24 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v24)
      goto LABEL_15;
    goto LABEL_39;
  }
  v24 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v24)
  {
LABEL_39:
    v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_40:
    swift_bridgeObjectRelease_n();

    return (uint64_t)v25;
  }
LABEL_15:
  v55 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v25 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v26 = 4;
  v52 = isUniquelyReferenced_nonNull_native;
  while (1)
  {
    v29 = v26 - 4;
    if (v55)
    {
      v30 = (id)MEMORY[0x1A859ECE0](v26 - 4, isUniquelyReferenced_nonNull_native);
      v31 = v26 - 3;
      if (__OFADD__(v29, 1))
        goto LABEL_35;
    }
    else
    {
      v30 = *(id *)(isUniquelyReferenced_nonNull_native + 8 * v26);
      v31 = v26 - 3;
      if (__OFADD__(v29, 1))
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
    }
    v56 = v31;
    v32 = v24;
    v33 = v30;
    v34 = objc_msgSend(v30, sel_name);
    v35 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v37 = v36;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v57[0] = v25;
    v39 = sub_1A443E4C8(v35, v37);
    v40 = v25[2];
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      goto LABEL_36;
    v43 = v38;
    if (v25[3] < v42)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v25 = (_QWORD *)v57[0];
      if ((v38 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1A4448910();
      v25 = (_QWORD *)v57[0];
      if ((v43 & 1) != 0)
      {
LABEL_16:
        v27 = v25[7];
        v28 = 8 * v39;

        *(_QWORD *)(v27 + v28) = v33;
        goto LABEL_17;
      }
    }
LABEL_30:
    v25[(v39 >> 6) + 8] |= 1 << v39;
    v46 = (uint64_t *)(v25[6] + 16 * v39);
    *v46 = v35;
    v46[1] = v37;
    *(_QWORD *)(v25[7] + 8 * v39) = v33;
    v47 = v25[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_37;
    v25[2] = v49;
    swift_bridgeObjectRetain();
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v26;
    v24 = v32;
    isUniquelyReferenced_nonNull_native = v52;
    if (v56 == v32)
      goto LABEL_40;
  }
  sub_1A4443154(v42, isUniquelyReferenced_nonNull_native);
  v44 = sub_1A443E4C8(v35, v37);
  if ((v43 & 1) == (v45 & 1))
  {
    v39 = v44;
    v25 = (_QWORD *)v57[0];
    if ((v43 & 1) != 0)
      goto LABEL_16;
    goto LABEL_30;
  }
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

void sub_1A4542A44(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  id *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  _QWORD *v52;
  unint64_t v53;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  void *v58;
  uint64_t *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  _QWORD v68[2];
  uint64_t v69;
  uint64_t v70;
  id v71;
  int v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  _QWORD *v78;

  v74 = a5;
  v68[1] = a3;
  v8 = sub_1A46900B4();
  v69 = *(_QWORD *)(v8 - 8);
  v70 = v8;
  MEMORY[0x1E0C80A78](v8);
  v68[0] = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(_QWORD *)(a2 + 24);
  v71 = *(id *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v76 = *(id *)(a2 + 64);
  v77 = v14;
  v72 = *(unsigned __int8 *)(a2 + 72);
  v73 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  v75 = (uint64_t)a1;
  v16 = objc_msgSend(a1, sel_objectID);
  if (v16)
  {
    v17 = (uint64_t)v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v78 = (_QWORD *)*a4;
    *a4 = 0x8000000000000000;
    sub_1A445E974(v17, v10, v11, isUniquelyReferenced_nonNull_native);
    *a4 = v78;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v74;
    v19 = v75;
    if (v13)
    {
LABEL_3:
      v21 = objc_allocWithZone(MEMORY[0x1E0D844B8]);
      swift_bridgeObjectRetain();
      v22 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v23 = objc_msgSend(v21, sel_initWithCKSymbolicColorName_hexString_, v22, 0);
      goto LABEL_7;
    }
  }
  else
  {
    v24 = (void *)sub_1A445DC80(v10, v11);
    swift_bridgeObjectRelease();

    v20 = v74;
    v19 = v75;
    if (v13)
      goto LABEL_3;
  }
  if (!v12)
    goto LABEL_8;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v25 = objc_allocWithZone(MEMORY[0x1E0D844B8]);
  swift_bridgeObjectRetain();
  v26 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v22 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v25, sel_initWithCKSymbolicColorName_hexString_, v26, v22);

LABEL_7:
  objc_msgSend((id)v19, sel_setColor_, v23);

LABEL_8:
  if (v15)
    objc_msgSend((id)v19, sel_setSortingStyle_, v15);
  v27 = objc_msgSend((id)v19, sel_customContext);
  objc_msgSend(v27, sel_setBadge_, v77);

  v28 = objc_msgSend((id)v19, sel_customContext);
  if (!v28)
  {
    sub_1A454A7A8();
    swift_allocError();
    *v63 = 16;
    swift_willThrow();
    return;
  }
  v29 = v28;
  v30 = v76;
  v31 = v76;
  REMSmartListCustomContextChangeItem.filter.setter(v30);
  v32 = *(_QWORD *)(v73 + 16);
  if (v32)
  {
    v71 = v29;
    v33 = (id *)(swift_bridgeObjectRetain() + 40);
    while (1)
    {
      v35 = (uint64_t)*(v33 - 1);
      v29 = *v33;
      swift_bridgeObjectRetain();
      v36 = objc_msgSend((id)v19, sel_sectionsContextChangeItem);
      if (!v36)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A454A7A8();
        swift_allocError();
        *v64 = 19;
        swift_willThrow();

        return;
      }
      v37 = v36;
      v77 = v32;
      v38 = objc_msgSend((id)v19, sel_saveRequest);
      swift_bridgeObjectRetain();
      v39 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v38, sel_addSmartListSectionWithDisplayName_toSmartListSectionContextChangeItem_, v39, v37);

      v76 = v40;
      v41 = objc_msgSend(v40, sel_objectID);
      if (!v41)
      {
        swift_bridgeObjectRetain();
        v53 = sub_1A443E4C8(v35, (uint64_t)v29);
        v55 = v54;
        swift_bridgeObjectRelease();
        if ((v55 & 1) != 0)
        {
          v56 = swift_isUniquelyReferenced_nonNull_native();
          v57 = *v20;
          v78 = (_QWORD *)*v20;
          *v20 = 0x8000000000000000;
          if ((v56 & 1) == 0)
          {
            sub_1A4448AC4();
            v57 = (uint64_t)v78;
          }
          swift_bridgeObjectRelease();
          v58 = *(void **)(*(_QWORD *)(v57 + 56) + 8 * v53);
          sub_1A45A9340(v53, v57);
          *v20 = v57;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
      v42 = v41;
      v19 = swift_isUniquelyReferenced_nonNull_native();
      v78 = (_QWORD *)*v20;
      v43 = v78;
      *v20 = 0x8000000000000000;
      v45 = sub_1A443E4C8(v35, (uint64_t)v29);
      v46 = v43[2];
      v47 = (v44 & 1) == 0;
      v48 = v46 + v47;
      if (__OFADD__(v46, v47))
      {
        __break(1u);
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      v49 = v44;
      if (v43[3] >= v48)
      {
        if ((v19 & 1) != 0)
        {
          v52 = v78;
          if ((v44 & 1) == 0)
            goto LABEL_29;
        }
        else
        {
          sub_1A4448AC4();
          v52 = v78;
          if ((v49 & 1) == 0)
            goto LABEL_29;
        }
      }
      else
      {
        sub_1A4443434(v48, v19);
        v50 = sub_1A443E4C8(v35, (uint64_t)v29);
        if ((v49 & 1) != (v51 & 1))
        {
          sub_1A4691C08();
          __break(1u);
          return;
        }
        v45 = v50;
        v52 = v78;
        if ((v49 & 1) == 0)
        {
LABEL_29:
          v52[(v45 >> 6) + 8] |= 1 << v45;
          v59 = (uint64_t *)(v52[6] + 16 * v45);
          *v59 = v35;
          v59[1] = (uint64_t)v29;
          *(_QWORD *)(v52[7] + 8 * v45) = v42;
          v60 = v52[2];
          v61 = __OFADD__(v60, 1);
          v62 = v60 + 1;
          if (v61)
            goto LABEL_42;
          v52[2] = v62;
          swift_bridgeObjectRetain();
          goto LABEL_14;
        }
      }
      v34 = v52[7];

      *(_QWORD *)(v34 + 8 * v45) = v42;
LABEL_14:
      v20 = v74;
      *v74 = (uint64_t)v52;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v75;
LABEL_15:
      v33 += 2;
      v32 = v77 - 1;
      if (v77 == 1)
      {
        swift_bridgeObjectRelease();
        v29 = v71;
        break;
      }
    }
  }
  if (v72)
  {
    if (qword_1EE71C100 != -1)
LABEL_43:
      swift_once();
    v65 = v70;
    __swift_project_value_buffer(v70, (uint64_t)qword_1EE71FFD8);
    v66 = v68[0];
    sub_1A4690024();
    v67 = (void *)sub_1A4690030();
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v66, v65);
    objc_msgSend((id)v19, sel_setPinnedDate_, v67);

  }
}

void sub_1A4543140(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  id v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  void *v46;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  v8 = sub_1A46916BC();
  v9 = (_QWORD *)v8;
  v10 = 0;
  v44 = a1;
  v13 = *(_QWORD *)(a1 + 64);
  v12 = a1 + 64;
  v11 = v13;
  v14 = 1 << *(_BYTE *)(v12 - 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v11;
  v41 = v12;
  v42 = (unint64_t)(v14 + 63) >> 6;
  v43 = v8 + 64;
  if ((v15 & v11) == 0)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  v45 = v10;
  for (i = v17 | (v10 << 6); ; i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v44 + 48) + 16 * i);
    v25 = *v23;
    v24 = v23[1];
    v26 = *(void **)(*(_QWORD *)(v44 + 56) + 8 * i);
    if ((a2 & 0xC000000000000001) != 0)
    {
      v27 = v26;
      swift_bridgeObjectRetain();
      if (sub_1A4691614())
      {
        sub_1A444AA40(0, a4);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v28 = v46;
        swift_unknownObjectRelease();

        if (!v46)
          goto LABEL_33;
        goto LABEL_26;
      }

LABEL_33:
      sub_1A454A7A8();
      swift_allocError();
      *v38 = a6;
      swift_willThrow();

      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    v29 = *(_QWORD *)(a2 + 16);
    v30 = v26;
    if (!v29)
    {
      swift_bridgeObjectRetain();
      goto LABEL_33;
    }
    v31 = v30;
    swift_bridgeObjectRetain();
    v32 = sub_1A443E750((uint64_t)v31);
    if ((v33 & 1) == 0)
    {

      goto LABEL_33;
    }
    v28 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v32);

    if (!v28)
      goto LABEL_33;
LABEL_26:

    *(_QWORD *)(v43 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v34 = (_QWORD *)(v9[6] + 16 * i);
    *v34 = v25;
    v34[1] = v24;
    *(_QWORD *)(v9[7] + 8 * i) = v28;
    v35 = v9[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      break;
    v9[2] = v37;
    v10 = v45;
    if (v16)
      goto LABEL_4;
LABEL_5:
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_35;
    if (v19 >= v42)
      return;
    v20 = *(_QWORD *)(v41 + 8 * v19);
    v21 = v10 + 1;
    if (!v20)
    {
      v21 = v10 + 2;
      if (v10 + 2 >= v42)
        return;
      v20 = *(_QWORD *)(v41 + 8 * v21);
      if (!v20)
      {
        v21 = v10 + 3;
        if (v10 + 3 >= v42)
          return;
        v20 = *(_QWORD *)(v41 + 8 * v21);
        if (!v20)
        {
          v22 = v10 + 4;
          if (v10 + 4 >= v42)
            return;
          v20 = *(_QWORD *)(v41 + 8 * v22);
          if (!v20)
          {
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v42)
                return;
              v20 = *(_QWORD *)(v41 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_18;
            }
          }
          v21 = v10 + 4;
        }
      }
    }
LABEL_18:
    v16 = (v20 - 1) & v20;
    v45 = v21;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

_QWORD *sub_1A4543490(uint64_t a1, void *a2)
{
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  void *v30;
  _QWORD *v31;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v38[2];

  v38[1] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720718);
  v3 = sub_1A46916BC();
  v4 = (_QWORD *)v3;
  v5 = 0;
  v36 = a1;
  v8 = *(_QWORD *)(a1 + 64);
  v7 = a1 + 64;
  v6 = v8;
  v9 = 1 << *(_BYTE *)(v7 - 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v6;
  v33 = v7;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v35 = v3 + 64;
  if ((v10 & v6) == 0)
    goto LABEL_5;
LABEL_4:
  v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v12 | (v5 << 6); ; i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v36 + 48) + 16 * i);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(void **)(*(_QWORD *)(v36 + 56) + 8 * i);
    v38[0] = 0;
    swift_bridgeObjectRetain();
    v21 = v20;
    v22 = objc_msgSend(a2, sel_fetchCustomSmartListWithObjectID_error_, v21, v38);
    if (!v22)
      break;
    v23 = v22;
    v24 = v38[0];

    *(_QWORD *)(v35 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v25 = (_QWORD *)(v4[6] + 16 * i);
    *v25 = v19;
    v25[1] = v18;
    *(_QWORD *)(v4[7] + 8 * i) = v23;
    v26 = v4[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
    }
    v4[2] = v28;
    if (v11)
      goto LABEL_4;
LABEL_5:
    v14 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_26;
    if (v14 >= v34)
      return v4;
    v15 = *(_QWORD *)(v33 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v14 + 1;
      if (v14 + 1 >= v34)
        return v4;
      v15 = *(_QWORD *)(v33 + 8 * v5);
      if (!v15)
      {
        v5 = v14 + 2;
        if (v14 + 2 >= v34)
          return v4;
        v15 = *(_QWORD *)(v33 + 8 * v5);
        if (!v15)
        {
          v16 = v14 + 3;
          if (v16 >= v34)
            return v4;
          v15 = *(_QWORD *)(v33 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              v5 = v16 + 1;
              if (__OFADD__(v16, 1))
                goto LABEL_27;
              if (v5 >= v34)
                return v4;
              v15 = *(_QWORD *)(v33 + 8 * v5);
              ++v16;
              if (v15)
                goto LABEL_18;
            }
          }
          v5 = v16;
        }
      }
    }
LABEL_18:
    v11 = (v15 - 1) & v15;
  }
  v29 = v38[0];
  v30 = (void *)sub_1A468FE68();

  swift_willThrow();
  sub_1A454A7A8();
  swift_allocError();
  *v31 = 9;
  swift_willThrow();

  swift_bridgeObjectRelease();
  swift_release();
  return v4;
}

void sub_1A4543768(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  __int128 v34;
  uint64_t v35;
  void *v36;

  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720708);
  v5 = sub_1A46916BC();
  v6 = (_QWORD *)v5;
  v7 = 0;
  v32 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v30 = v9;
  v31 = (unint64_t)(v11 + 63) >> 6;
  v14 = v5 + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * i);
    v21 = *v20;
    v22 = v20[1];
    v36 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * i);
    v23 = v36;
    swift_bridgeObjectRetain();
    v24 = v23;
    sub_1A4538DC0(a2, (uint64_t *)&v36, &v34);

    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return;
    }
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v25 = (_QWORD *)(v6[6] + 16 * i);
    *v25 = v21;
    v25[1] = v22;
    v26 = v6[7] + 24 * i;
    v27 = v35;
    *(_OWORD *)v26 = v34;
    *(_QWORD *)(v26 + 16) = v27;
    v28 = v6[2];
    v17 = __OFADD__(v28, 1);
    v29 = v28 + 1;
    if (v17)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v6[2] = v29;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = __OFADD__(v7++, 1);
    if (v17)
      goto LABEL_27;
    if (v7 >= v31)
      return;
    v18 = *(_QWORD *)(v30 + 8 * v7);
    if (!v18)
      break;
LABEL_15:
    v13 = (v18 - 1) & v18;
  }
  v19 = v7 + 1;
  if (v7 + 1 >= v31)
    return;
  v18 = *(_QWORD *)(v30 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v7 + 2;
  if (v7 + 2 >= v31)
    return;
  v18 = *(_QWORD *)(v30 + 8 * v19);
  if (v18)
    goto LABEL_14;
  v19 = v7 + 3;
  if (v7 + 3 >= v31)
    return;
  v18 = *(_QWORD *)(v30 + 8 * v19);
  if (v18)
  {
LABEL_14:
    v7 = v19;
    goto LABEL_15;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v31)
      return;
    v18 = *(_QWORD *)(v30 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
}

uint64_t sub_1A45439A4(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A4543A28(uint64_t a1)
{
  void *v2;
  void *v4;

  v4 = *(void **)(a1 + 8);
  v2 = *(void **)(a1 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1A4543AEC(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t sub_1A4543B6C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A4543B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1A454076C(a1, a2, a3, v3[2], v3[3], v3[4]);
}

uint64_t sub_1A4543BAC(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 56);
  v5 = *(void **)(a1 + 128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A4496404(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1EE720200);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestList.ListChild(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE720170);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestListSection(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE7202E8);
}

uint64_t sub_1A4543CB8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.ImageAttachment(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE720670);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.UnDedupedImageAttachment(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE7205D8);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.URLAttachment(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE720548);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.Hashtag(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE7204B0);
}

uint64_t type metadata accessor for REMTestStorePopulator.TestReminder.DueDateDeltaAlert(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE720418);
}

uint64_t type metadata accessor for REMTestStorePopulator()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMTestStorePopulator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMTestStorePopulator.__allocating_init(store:accounts:isSingleListMode:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestStoreBuilder()
{
  return &type metadata for REMTestStorePopulator.TestStoreBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestAccountBuilder()
{
  return &type metadata for REMTestStorePopulator.TestAccountBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestSublistsBuilder()
{
  return &type metadata for REMTestStorePopulator.TestSublistsBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestShareesBuilder()
{
  return &type metadata for REMTestStorePopulator.TestShareesBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestRemindersBuilder()
{
  return &type metadata for REMTestStorePopulator.TestRemindersBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestListBuilder()
{
  return &type metadata for REMTestStorePopulator.TestListBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestListSectionBuilder()
{
  return &type metadata for REMTestStorePopulator.TestListSectionBuilder;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestCustomSmartListBuilder()
{
  return &type metadata for REMTestStorePopulator.TestCustomSmartListBuilder;
}

uint64_t destroy for REMTestStorePopulator.TestAccount()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestAccount(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestAccount(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for REMTestStorePopulator.TestAccount(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestAccount()
{
  return &type metadata for REMTestStorePopulator.TestAccount;
}

void sub_1A4543F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __asm { BR              X11 }
}

uint64_t sub_1A4543FDC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, void *a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  id v21;
  id v22;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v20;
  v22 = a8;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t destroy for REMTestStorePopulator.TestAccount.AccountChild(_QWORD *a1, uint64_t a2)
{
  return sub_1A4546464(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45440AC);
}

void sub_1A45440AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4544104()
{
  void *v0;
  void *v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestAccount.AccountChild(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A4546588(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4543F84);
}

uint64_t *assignWithCopy for REMTestStorePopulator.TestAccount.AccountChild(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A454668C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4543F84, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1A45440AC);
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t *assignWithTake for REMTestStorePopulator.TestAccount.AccountChild(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45467B8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1A45440AC);
}

uint64_t sub_1A4544224(uint64_t a1)
{
  return *(_QWORD *)(a1 + 96) >> 62;
}

uint64_t sub_1A4544230(uint64_t result)
{
  *(_QWORD *)(result + 96) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1A4544240(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 96) & 0x10101 | (a2 << 62);
  *(_QWORD *)(result + 72) &= 1uLL;
  *(_QWORD *)(result + 96) = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestAccount.AccountChild()
{
  return &type metadata for REMTestStorePopulator.TestAccount.AccountChild;
}

uint64_t destroy for REMTestStorePopulator.TestList(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v6;
  v12 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestList(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 56);
  v8 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = v8;

  v10 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestList(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestList()
{
  return &type metadata for REMTestStorePopulator.TestList;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.TestList.ListChild(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
      v10 = *(int *)(v9 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1A46900B4();
      v14 = *(_QWORD *)(v13 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15(v12, 1, v13))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v9 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v9 + 28));
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = a2[3];
      a1[2] = a2[2];
      a1[3] = v18;
      v19 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
      v20 = v19[6];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_1A468FDE4();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v61 = v23;
      v59 = v24;
      if (v25(v22, 1, v23))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      *((_BYTE *)a1 + v19[7]) = *((_BYTE *)a2 + v19[7]);
      *((_BYTE *)a1 + v19[8]) = *((_BYTE *)a2 + v19[8]);
      v27 = v19[9];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      v30 = sub_1A46900B4();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      if (v32(v29, 1, v30))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      v34 = v19[10];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      if (v32((char *)a2 + v34, 1, v30))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v35, v36, v30);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v35, 0, 1, v30);
      }
      *((_BYTE *)a1 + v19[11]) = *((_BYTE *)a2 + v19[11]);
      *(_QWORD *)((char *)a1 + v19[12]) = *(_QWORD *)((char *)a2 + v19[12]);
      v38 = v19[13];
      v39 = *(void **)((char *)a2 + v38);
      *(_QWORD *)((char *)a1 + v38) = v39;
      v40 = v19[14];
      v41 = (_QWORD *)((char *)a1 + v40);
      v42 = (_QWORD *)((char *)a2 + v40);
      v43 = *(_QWORD *)((char *)a2 + v40 + 8);
      v44 = v39;
      if (v43)
      {
        *v41 = *v42;
        v41[1] = v43;
        v45 = v42[3];
        v41[2] = v42[2];
        v41[3] = v45;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v46 = *((_OWORD *)v42 + 1);
        *(_OWORD *)v41 = *(_OWORD *)v42;
        *((_OWORD *)v41 + 1) = v46;
      }
      *(_QWORD *)((char *)a1 + v19[15]) = *(_QWORD *)((char *)a2 + v19[15]);
      *(_QWORD *)((char *)a1 + v19[16]) = *(_QWORD *)((char *)a2 + v19[16]);
      *(_QWORD *)((char *)a1 + v19[17]) = *(_QWORD *)((char *)a2 + v19[17]);
      *(_QWORD *)((char *)a1 + v19[18]) = *(_QWORD *)((char *)a2 + v19[18]);
      v47 = v19[19];
      v48 = *(void **)((char *)a2 + v47);
      *(_QWORD *)((char *)a1 + v47) = v48;
      v49 = v19[20];
      v50 = *(void **)((char *)a2 + v49);
      *(_QWORD *)((char *)a1 + v49) = v50;
      v51 = v19[21];
      v52 = *(void **)((char *)a2 + v51);
      *(_QWORD *)((char *)a1 + v51) = v52;
      *(_QWORD *)((char *)a1 + v19[22]) = *(_QWORD *)((char *)a2 + v19[22]);
      *(_QWORD *)((char *)a1 + v19[23]) = *(_QWORD *)((char *)a2 + v19[23]);
      v53 = v19[24];
      __dst = (char *)a1 + v53;
      v60 = (char *)a2 + v53;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54 = v48;
      v55 = v50;
      v56 = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v25(v60, 1, v61))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
        memcpy(__dst, v60, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(__dst, v60, v61);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v61);
      }
      *(_QWORD *)((char *)a1 + v19[25]) = *(_QWORD *)((char *)a2 + v19[25]);
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for REMTestStorePopulator.TestList.ListChild(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for REMTestStorePopulator.TestListSection(0) + 24);
    v4 = sub_1A46900B4();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
    v7 = a1 + v6[6];
    v8 = sub_1A468FDE4();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = a1 + v6[9];
    v12 = sub_1A46900B4();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v14(v11, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    v15 = a1 + v6[10];
    if (!v14(v15, 1, v12))
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);

    if (*(_QWORD *)(a1 + v6[14] + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = a1 + v6[24];
    if (!v10(v16, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestList.ListChild(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  id v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v56;
  char *v57;
  char *__dst;
  uint64_t v59;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
    v8 = *(int *)(v7 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A46900B4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *(_QWORD *)((char *)a1 + *(int *)(v7 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v7 + 28));
  }
  else
  {
    v15 = a2[3];
    a1[2] = a2[2];
    a1[3] = v15;
    v16 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
    v17 = v16[6];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1A468FDE4();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = v20;
    v56 = v21;
    if (v22(v19, 1, v20))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *((_BYTE *)a1 + v16[7]) = *((_BYTE *)a2 + v16[7]);
    *((_BYTE *)a1 + v16[8]) = *((_BYTE *)a2 + v16[8]);
    v24 = v16[9];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_1A46900B4();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    if (v29(v26, 1, v27))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    v31 = v16[10];
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    if (v29((char *)a2 + v31, 1, v27))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v32, v33, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    }
    *((_BYTE *)a1 + v16[11]) = *((_BYTE *)a2 + v16[11]);
    *(_QWORD *)((char *)a1 + v16[12]) = *(_QWORD *)((char *)a2 + v16[12]);
    v35 = v16[13];
    v36 = *(void **)((char *)a2 + v35);
    *(_QWORD *)((char *)a1 + v35) = v36;
    v37 = v16[14];
    v38 = (_QWORD *)((char *)a1 + v37);
    v39 = (_QWORD *)((char *)a2 + v37);
    v40 = *(_QWORD *)((char *)a2 + v37 + 8);
    v41 = v36;
    if (v40)
    {
      *v38 = *v39;
      v38[1] = v40;
      v42 = v39[3];
      v38[2] = v39[2];
      v38[3] = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v43 = *((_OWORD *)v39 + 1);
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v43;
    }
    *(_QWORD *)((char *)a1 + v16[15]) = *(_QWORD *)((char *)a2 + v16[15]);
    *(_QWORD *)((char *)a1 + v16[16]) = *(_QWORD *)((char *)a2 + v16[16]);
    *(_QWORD *)((char *)a1 + v16[17]) = *(_QWORD *)((char *)a2 + v16[17]);
    *(_QWORD *)((char *)a1 + v16[18]) = *(_QWORD *)((char *)a2 + v16[18]);
    v44 = v16[19];
    v45 = *(void **)((char *)a2 + v44);
    *(_QWORD *)((char *)a1 + v44) = v45;
    v46 = v16[20];
    v47 = *(void **)((char *)a2 + v46);
    *(_QWORD *)((char *)a1 + v46) = v47;
    v48 = v16[21];
    v49 = *(void **)((char *)a2 + v48);
    *(_QWORD *)((char *)a1 + v48) = v49;
    *(_QWORD *)((char *)a1 + v16[22]) = *(_QWORD *)((char *)a2 + v16[22]);
    *(_QWORD *)((char *)a1 + v16[23]) = *(_QWORD *)((char *)a2 + v16[23]);
    v50 = v16[24];
    __dst = (char *)a1 + v50;
    v57 = (char *)a2 + v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51 = v45;
    v52 = v47;
    v53 = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22(v57, 1, v59))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
      memcpy(__dst, v57, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 16))(__dst, v57, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v59);
    }
    *(_QWORD *)((char *)a1 + v16[25]) = *(_QWORD *)((char *)a2 + v16[25]);
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestList.ListChild(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  id v38;
  __int128 v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  char *v52;
  char *__dst;
  char *__dsta;
  uint64_t v55;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      v5 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
      v6 = *(int *)(v5 + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A46900B4();
      v10 = *(_QWORD *)(v9 - 8);
      v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11(v8, 1, v9))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v5 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v5 + 28));
    }
    else
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      v13 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
      v14 = v13[6];
      __dst = (char *)a1 + v14;
      v15 = (char *)a2 + v14;
      v16 = sub_1A468FDE4();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = v16;
      if (v18(v15, 1, v16))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
        memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(__dst, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      v20 = v17;
      *((_BYTE *)a1 + v13[7]) = *((_BYTE *)a2 + v13[7]);
      *((_BYTE *)a1 + v13[8]) = *((_BYTE *)a2 + v13[8]);
      v21 = v13[9];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_1A46900B4();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(v23, 1, v24))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      }
      v28 = v13[10];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      if (v26((char *)a2 + v28, 1, v24))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v29, v30, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
      }
      *((_BYTE *)a1 + v13[11]) = *((_BYTE *)a2 + v13[11]);
      *(_QWORD *)((char *)a1 + v13[12]) = *(_QWORD *)((char *)a2 + v13[12]);
      v32 = v13[13];
      v33 = *(void **)((char *)a2 + v32);
      *(_QWORD *)((char *)a1 + v32) = v33;
      v34 = v13[14];
      v35 = (_QWORD *)((char *)a1 + v34);
      v36 = (_QWORD *)((char *)a2 + v34);
      v37 = *(_QWORD *)((char *)a2 + v34 + 8);
      v38 = v33;
      if (v37)
      {
        *v35 = *v36;
        v35[1] = v36[1];
        v35[2] = v36[2];
        v35[3] = v36[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v39 = *((_OWORD *)v36 + 1);
        *(_OWORD *)v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v39;
      }
      *(_QWORD *)((char *)a1 + v13[15]) = *(_QWORD *)((char *)a2 + v13[15]);
      *(_QWORD *)((char *)a1 + v13[16]) = *(_QWORD *)((char *)a2 + v13[16]);
      *(_QWORD *)((char *)a1 + v13[17]) = *(_QWORD *)((char *)a2 + v13[17]);
      *(_QWORD *)((char *)a1 + v13[18]) = *(_QWORD *)((char *)a2 + v13[18]);
      v40 = v13[19];
      v41 = *(void **)((char *)a2 + v40);
      *(_QWORD *)((char *)a1 + v40) = v41;
      v42 = v13[20];
      v43 = *(void **)((char *)a2 + v42);
      *(_QWORD *)((char *)a1 + v42) = v43;
      v44 = v13[21];
      v45 = *(void **)((char *)a2 + v44);
      *(_QWORD *)((char *)a1 + v44) = v45;
      *(_QWORD *)((char *)a1 + v13[22]) = *(_QWORD *)((char *)a2 + v13[22]);
      *(_QWORD *)((char *)a1 + v13[23]) = *(_QWORD *)((char *)a2 + v13[23]);
      v46 = v13[24];
      __dsta = (char *)a1 + v46;
      v52 = (char *)a2 + v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47 = v41;
      v48 = v43;
      v49 = v45;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18(v52, 1, v55))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
        memcpy(__dsta, v52, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dsta, v52, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dsta, 0, 1, v55);
      }
      *(_QWORD *)((char *)a1 + v13[25]) = *(_QWORD *)((char *)a2 + v13[25]);
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for REMTestStorePopulator.TestList.ListChild(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    v5 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
    v6 = *(int *)(v5 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A46900B4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    v19 = (int *)(v5 + 28);
  }
  else
  {
    a1[1] = a2[1];
    v12 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
    v13 = v12[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1A468FDE4();
    v17 = *(_QWORD *)(v16 - 8);
    v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v41 = v17;
    if (v40(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    *((_BYTE *)a1 + v12[7]) = *((_BYTE *)a2 + v12[7]);
    *((_BYTE *)a1 + v12[8]) = *((_BYTE *)a2 + v12[8]);
    v20 = v12[9];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1A46900B4();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v25(v22, 1, v23))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    v27 = v12[10];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    if (v25((char *)a2 + v27, 1, v23))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v29, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
    }
    *((_BYTE *)a1 + v12[11]) = *((_BYTE *)a2 + v12[11]);
    *(_QWORD *)((char *)a1 + v12[12]) = *(_QWORD *)((char *)a2 + v12[12]);
    *(_QWORD *)((char *)a1 + v12[13]) = *(_QWORD *)((char *)a2 + v12[13]);
    v31 = v12[14];
    v32 = (_OWORD *)((char *)a1 + v31);
    v33 = (_OWORD *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    *(_QWORD *)((char *)a1 + v12[15]) = *(_QWORD *)((char *)a2 + v12[15]);
    *(_QWORD *)((char *)a1 + v12[16]) = *(_QWORD *)((char *)a2 + v12[16]);
    *(_QWORD *)((char *)a1 + v12[17]) = *(_QWORD *)((char *)a2 + v12[17]);
    *(_QWORD *)((char *)a1 + v12[18]) = *(_QWORD *)((char *)a2 + v12[18]);
    *(_QWORD *)((char *)a1 + v12[19]) = *(_QWORD *)((char *)a2 + v12[19]);
    *(_QWORD *)((char *)a1 + v12[20]) = *(_QWORD *)((char *)a2 + v12[20]);
    *(_QWORD *)((char *)a1 + v12[21]) = *(_QWORD *)((char *)a2 + v12[21]);
    *(_QWORD *)((char *)a1 + v12[22]) = *(_QWORD *)((char *)a2 + v12[22]);
    *(_QWORD *)((char *)a1 + v12[23]) = *(_QWORD *)((char *)a2 + v12[23]);
    v35 = v12[24];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    if (v40((char *)a2 + v35, 1, v16))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v37, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v16);
    }
    v19 = v12 + 25;
  }
  *(_QWORD *)((char *)a1 + *v19) = *(_QWORD *)((char *)a2 + *v19);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for REMTestStorePopulator.TestList.ListChild(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMTestStorePopulator.TestList.ListChild);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      v5 = type metadata accessor for REMTestStorePopulator.TestListSection(0);
      v6 = *(int *)(v5 + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A46900B4();
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      v19 = (int *)(v5 + 28);
    }
    else
    {
      a1[1] = a2[1];
      v12 = (int *)type metadata accessor for REMTestStorePopulator.TestReminder(0);
      v13 = v12[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_1A468FDE4();
      v17 = *(_QWORD *)(v16 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      v41 = v17;
      if (v40(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      *((_BYTE *)a1 + v12[7]) = *((_BYTE *)a2 + v12[7]);
      *((_BYTE *)a1 + v12[8]) = *((_BYTE *)a2 + v12[8]);
      v20 = v12[9];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_1A46900B4();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      if (v25(v22, 1, v23))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
      v27 = v12[10];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      if (v25((char *)a2 + v27, 1, v23))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v29, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v28, 0, 1, v23);
      }
      *((_BYTE *)a1 + v12[11]) = *((_BYTE *)a2 + v12[11]);
      *(_QWORD *)((char *)a1 + v12[12]) = *(_QWORD *)((char *)a2 + v12[12]);
      *(_QWORD *)((char *)a1 + v12[13]) = *(_QWORD *)((char *)a2 + v12[13]);
      v31 = v12[14];
      v32 = (_OWORD *)((char *)a1 + v31);
      v33 = (_OWORD *)((char *)a2 + v31);
      v34 = v33[1];
      *v32 = *v33;
      v32[1] = v34;
      *(_QWORD *)((char *)a1 + v12[15]) = *(_QWORD *)((char *)a2 + v12[15]);
      *(_QWORD *)((char *)a1 + v12[16]) = *(_QWORD *)((char *)a2 + v12[16]);
      *(_QWORD *)((char *)a1 + v12[17]) = *(_QWORD *)((char *)a2 + v12[17]);
      *(_QWORD *)((char *)a1 + v12[18]) = *(_QWORD *)((char *)a2 + v12[18]);
      *(_QWORD *)((char *)a1 + v12[19]) = *(_QWORD *)((char *)a2 + v12[19]);
      *(_QWORD *)((char *)a1 + v12[20]) = *(_QWORD *)((char *)a2 + v12[20]);
      *(_QWORD *)((char *)a1 + v12[21]) = *(_QWORD *)((char *)a2 + v12[21]);
      *(_QWORD *)((char *)a1 + v12[22]) = *(_QWORD *)((char *)a2 + v12[22]);
      *(_QWORD *)((char *)a1 + v12[23]) = *(_QWORD *)((char *)a2 + v12[23]);
      v35 = v12[24];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      if (v40((char *)a2 + v35, 1, v16))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v36, v37, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v16);
      }
      v19 = v12 + 25;
    }
    *(_QWORD *)((char *)a1 + *v19) = *(_QWORD *)((char *)a2 + *v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A4545EE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for REMTestStorePopulator.TestReminder(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for REMTestStorePopulator.TestListSection(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for REMTestStorePopulator.TestSharee()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1A44D88F8();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestSharee(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A44D88E0();
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestSharee(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  v6 = *(_BYTE *)(a2 + 48);
  sub_1A44D88E0();
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = v6;
  sub_1A44D88F8();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestSharee(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v6;
  sub_1A44D88F8();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestSharee(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestSharee(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestSharee()
{
  return &type metadata for REMTestStorePopulator.TestSharee;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestSharee.Address()
{
  return &type metadata for REMTestStorePopulator.TestSharee.Address;
}

uint64_t destroy for REMTestStorePopulator.TestGroup()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19ReminderKitInternal21REMTestStorePopulatorC9TestGroupVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestGroup(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestGroup()
{
  return &type metadata for REMTestStorePopulator.TestGroup;
}

id sub_1A4546384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  id v14;
  id v15;
  id v17;
  id v18;

  if (a13 < 0)
  {
    v17 = a9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = a7;
    return a8;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = a7;
    v15 = a8;
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t destroy for REMTestStorePopulator.TestGroup.GroupChild(_QWORD *a1, uint64_t a2)
{
  return sub_1A4546464(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45464B0);
}

uint64_t sub_1A4546464(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14]);
}

void sub_1A45464B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a13 < 0)
  {

  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestGroup.GroupChild(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A4546588(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4546384);
}

_QWORD *sub_1A4546588(_QWORD *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  v12 = a2[7];
  v13 = a2[8];
  v15 = a2[9];
  v16 = a2[10];
  v17 = a2[11];
  v18 = a2[12];
  v19 = a2[13];
  v20 = a2[14];
  a4(*a2, v6, v7, v8, v9, v10, v11, v12, v13, v15, v16, v17, v18, v19, v20);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = v13;
  a1[9] = v15;
  a1[10] = v16;
  a1[11] = v17;
  a1[12] = v18;
  a1[13] = v19;
  a1[14] = v20;
  return a1;
}

uint64_t *assignWithCopy for REMTestStorePopulator.TestGroup.GroupChild(uint64_t *a1, _QWORD *a2, uint64_t a3)
{
  return sub_1A454668C(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A4546384, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1A45464B0);
}

uint64_t *sub_1A454668C(uint64_t *a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = a2[3];
  v10 = a2[4];
  v11 = a2[5];
  v12 = a2[6];
  v13 = a2[7];
  v14 = a2[8];
  v28 = a2[9];
  v29 = a2[10];
  v30 = a2[11];
  v31 = a2[12];
  v32 = a2[13];
  v33 = a2[14];
  a4(*a2, v7, v8, v9, v10, v11, v12, v13, v14, v28, v29, v30, v31, v32, v33);
  v15 = *a1;
  v16 = a1[1];
  v17 = a1[2];
  v18 = a1[3];
  v19 = a1[4];
  v20 = a1[5];
  v21 = a1[6];
  v22 = a1[7];
  v23 = *((_OWORD *)a1 + 4);
  v24 = *((_OWORD *)a1 + 5);
  v25 = *((_OWORD *)a1 + 6);
  v26 = a1[14];
  *a1 = v6;
  a1[1] = v7;
  a1[2] = v8;
  a1[3] = v9;
  a1[4] = v10;
  a1[5] = v11;
  a1[6] = v12;
  a1[7] = v13;
  a1[8] = v14;
  a1[9] = v28;
  a1[10] = v29;
  a1[11] = v30;
  a1[12] = v31;
  a1[13] = v32;
  a1[14] = v33;
  a5(v15, v16, v17, v18, v19, v20, v21, v22, v23, *((_QWORD *)&v23 + 1), v24, *((_QWORD *)&v24 + 1), v25, *((_QWORD *)&v25 + 1), v26);
  return a1;
}

uint64_t *assignWithTake for REMTestStorePopulator.TestGroup.GroupChild(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45467B8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1A45464B0);
}

uint64_t *sub_1A45467B8(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v6 = *(_QWORD *)(a2 + 112);
  v7 = *a1;
  v9 = a1[1];
  v8 = a1[2];
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v13 = a1[6];
  v14 = a1[7];
  v15 = *((_OWORD *)a1 + 4);
  v16 = *((_OWORD *)a1 + 5);
  v17 = *((_OWORD *)a1 + 6);
  v18 = a1[14];
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v19;
  v20 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v20;
  v21 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)a1 + 5) = v21;
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  a1[14] = v6;
  a4(v7, v9, v8, v10, v11, v12, v13, v14, v15, *((_QWORD *)&v15 + 1), v16, *((_QWORD *)&v16 + 1), v17, *((_QWORD *)&v17 + 1), v18);
  return a1;
}

uint64_t _s19ReminderKitInternal21REMTestStorePopulatorC9TestGroupV10GroupChildOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 72) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double sub_1A4546890(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_QWORD *)(a1 + 64) = 0;
      *(_QWORD *)(a1 + 72) = 2 * -a2;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_QWORD *)(a1 + 112) = 0;
      return result;
    }
    *(_BYTE *)(a1 + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1A4546904(uint64_t a1)
{
  return *(_QWORD *)(a1 + 96) >> 63;
}

uint64_t sub_1A4546910(uint64_t result)
{
  *(_QWORD *)(result + 96) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_1A4546920(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 96) & 0x10101 | (a2 << 63);
  *(_QWORD *)(result + 72) &= 1uLL;
  *(_QWORD *)(result + 96) = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestGroup.GroupChild()
{
  return &type metadata for REMTestStorePopulator.TestGroup.GroupChild;
}

uint64_t destroy for REMTestStorePopulator.TestCustomSmartList(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v8;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v6;
  v10 = v7;
  v11 = v8;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = v5;

  v7 = *(void **)(a1 + 56);
  v8 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 64);
  v11 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestCustomSmartList(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestCustomSmartList(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestCustomSmartList()
{
  return &type metadata for REMTestStorePopulator.TestCustomSmartList;
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestTemplate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestTemplate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestTemplate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestTemplate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestTemplate()
{
  return &type metadata for REMTestStorePopulator.TestTemplate;
}

uint64_t destroy for REMTestStorePopulator.TestTemplateContents(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s19ReminderKitInternal21REMTestStorePopulatorC20TestTemplateContentsVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  v6 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMTestStorePopulator.TestTemplateContents(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMTestStorePopulator.TestTemplateContents(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestTemplateContents()
{
  return &type metadata for REMTestStorePopulator.TestTemplateContents;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.TestReminder(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v55;
  char *__dst;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1A468FDE4();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v57 = v14;
    v58 = v12;
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[9];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1A46900B4();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
    if (v23(v20, 1, v21))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v25 = a3[10];
    v26 = (char *)v4 + v25;
    v27 = (char *)a2 + v25;
    if (v23((char *)a2 + v25, 1, v21))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v26, v27, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
    }
    v29 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *(_QWORD *)((char *)v4 + v29) = *(_QWORD *)((char *)a2 + v29);
    v30 = a3[13];
    v31 = a3[14];
    v32 = *(void **)((char *)a2 + v30);
    *(_QWORD *)((char *)v4 + v30) = v32;
    v33 = (_QWORD *)((char *)v4 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = *(_QWORD *)((char *)a2 + v31 + 8);
    v36 = v32;
    if (v35)
    {
      *v33 = *v34;
      v33[1] = v35;
      v37 = v34[2];
      v38 = v34[3];
      v33[2] = v37;
      v33[3] = v38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v39 = *((_OWORD *)v34 + 1);
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_OWORD *)v33 + 1) = v39;
    }
    v40 = a3[16];
    *(_QWORD *)((char *)v4 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
    *(_QWORD *)((char *)v4 + v40) = *(_QWORD *)((char *)a2 + v40);
    v41 = a3[18];
    *(_QWORD *)((char *)v4 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
    *(_QWORD *)((char *)v4 + v41) = *(_QWORD *)((char *)a2 + v41);
    v42 = a3[19];
    v43 = a3[20];
    v44 = *(void **)((char *)a2 + v42);
    *(_QWORD *)((char *)v4 + v42) = v44;
    v55 = *(void **)((char *)a2 + v43);
    *(_QWORD *)((char *)v4 + v43) = v55;
    v45 = a3[21];
    v46 = a3[22];
    v47 = *(void **)((char *)a2 + v45);
    *(_QWORD *)((char *)v4 + v45) = v47;
    *(_QWORD *)((char *)v4 + v46) = *(_QWORD *)((char *)a2 + v46);
    v48 = a3[24];
    *(_QWORD *)((char *)v4 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
    __dst = (char *)v4 + v48;
    v49 = (char *)a2 + v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = v44;
    v51 = v55;
    v52 = v47;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v57(v49, 1, v58))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
      memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v49, v58);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v58);
    }
    *(_QWORD *)((char *)v4 + a3[25]) = *(_QWORD *)((char *)a2 + a3[25]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for REMTestStorePopulator.TestReminder(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  v5 = sub_1A468FDE4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[9];
  v9 = sub_1A46900B4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  v12 = a1 + a2[10];
  if (!v11(v12, 1, v9))
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);

  if (*(_QWORD *)(a1 + a2[14] + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = a1 + a2[24];
  if (!v7(v13, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestReminder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  void *v53;
  char *__dst;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A468FDE4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v55 = v13;
  v56 = v11;
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v15) = *((_BYTE *)a2 + v15);
  v16 = a3[9];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1A46900B4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v18, 1, v19))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v23 = a3[10];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  if (v21((char *)a2 + v23, 1, v19))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v25, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
  }
  v27 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  v28 = a3[13];
  v29 = a3[14];
  v30 = *(void **)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v30;
  v31 = (_QWORD *)((char *)a1 + v29);
  v32 = (_QWORD *)((char *)a2 + v29);
  v33 = *(_QWORD *)((char *)a2 + v29 + 8);
  v34 = v30;
  if (v33)
  {
    *v31 = *v32;
    v31[1] = v33;
    v35 = v32[2];
    v36 = v32[3];
    v31[2] = v35;
    v31[3] = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v37 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v37;
  }
  v38 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v38) = *(_QWORD *)((char *)a2 + v38);
  v39 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  v40 = a3[19];
  v41 = a3[20];
  v42 = *(void **)((char *)a2 + v40);
  *(_QWORD *)((char *)a1 + v40) = v42;
  v53 = *(void **)((char *)a2 + v41);
  *(_QWORD *)((char *)a1 + v41) = v53;
  v43 = a3[21];
  v44 = a3[22];
  v45 = *(void **)((char *)a2 + v43);
  *(_QWORD *)((char *)a1 + v43) = v45;
  *(_QWORD *)((char *)a1 + v44) = *(_QWORD *)((char *)a2 + v44);
  v46 = a3[24];
  *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
  __dst = (char *)a1 + v46;
  v47 = (char *)a2 + v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = v42;
  v49 = v53;
  v50 = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v55(v47, 1, v56))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(__dst, v47, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v47, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v56);
  }
  *(_QWORD *)((char *)a1 + a3[25]) = *(_QWORD *)((char *)a2 + a3[25]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestReminder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A468FDE4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v60 = v11;
  v13 = v11(v8, 1, v9);
  v61 = v10;
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1A46900B4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_12:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_13:
  v24 = a3[10];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = v20((char *)a1 + v24, 1, v18);
  v28 = v20(v26, 1, v18);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v25, v26, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
LABEL_18:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v25, v26, v18);
LABEL_19:
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  v30 = a3[13];
  v31 = *(void **)((char *)a1 + v30);
  v32 = *(void **)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v32;
  v33 = v32;

  v34 = a3[14];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  v37 = *(_QWORD *)((char *)a1 + v34 + 8);
  v38 = *(_QWORD *)((char *)a2 + v34 + 8);
  if (v37)
  {
    if (v38)
    {
      *v35 = *v36;
      v35[1] = v36[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35[2] = v36[2];
      v35[3] = v36[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A4547E00((uint64_t)v35);
      v39 = *((_OWORD *)v36 + 1);
      *(_OWORD *)v35 = *(_OWORD *)v36;
      *((_OWORD *)v35 + 1) = v39;
    }
  }
  else if (v38)
  {
    *v35 = *v36;
    v35[1] = v36[1];
    v35[2] = v36[2];
    v35[3] = v36[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v40 = *((_OWORD *)v36 + 1);
    *(_OWORD *)v35 = *(_OWORD *)v36;
    *((_OWORD *)v35 + 1) = v40;
  }
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = a3[19];
  v42 = *(void **)((char *)a1 + v41);
  v43 = *(void **)((char *)a2 + v41);
  *(_QWORD *)((char *)a1 + v41) = v43;
  v44 = v43;

  v45 = a3[20];
  v46 = *(void **)((char *)a1 + v45);
  v47 = *(void **)((char *)a2 + v45);
  *(_QWORD *)((char *)a1 + v45) = v47;
  v48 = v47;

  v49 = a3[21];
  v50 = *(void **)((char *)a1 + v49);
  v51 = *(void **)((char *)a2 + v49);
  *(_QWORD *)((char *)a1 + v49) = v51;
  v52 = v51;

  *(_QWORD *)((char *)a1 + a3[22]) = *(_QWORD *)((char *)a2 + a3[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[24];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = v60((char *)a1 + v53, 1, v9);
  v57 = v60(v55, 1, v9);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v61 + 24))(v54, v55, v9);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v9);
    goto LABEL_34;
  }
  if (v57)
  {
LABEL_34:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v54, v55, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v54, 0, 1, v9);
LABEL_35:
  *(_QWORD *)((char *)a1 + a3[25]) = *(_QWORD *)((char *)a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A4547E00(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for REMTestStorePopulator.TestReminder(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  unsigned int (*v39)(char *, uint64_t, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A468FDE4();
  v11 = *(_QWORD *)(v10 - 8);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v39(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v14 = a3[9];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1A46900B4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = a3[10];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  if (v19((char *)a2 + v21, 1, v17))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v22, v23, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
  }
  v25 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  v26 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  v27 = (_OWORD *)((char *)a1 + v26);
  v28 = (_OWORD *)((char *)a2 + v26);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[16];
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  v31 = a3[18];
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  v32 = a3[20];
  *(_QWORD *)((char *)a1 + a3[19]) = *(_QWORD *)((char *)a2 + a3[19]);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  v33 = a3[22];
  *(_QWORD *)((char *)a1 + a3[21]) = *(_QWORD *)((char *)a2 + a3[21]);
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  v34 = a3[24];
  *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  if (v39((char *)a2 + v34, 1, v10))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v35, v36, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + a3[25]) = *(_QWORD *)((char *)a2 + a3[25]);
  return a1;
}

_QWORD *assignWithTake for REMTestStorePopulator.TestReminder(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A468FDE4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v55 = v13;
  v15 = v13(v10, 1, v11);
  v56 = v12;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
  v18 = a3[9];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_1A46900B4();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
LABEL_13:
  v27 = a3[10];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = v23((char *)a1 + v27, 1, v21);
  v31 = v23(v29, 1, v21);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v29, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v21);
LABEL_18:
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v28, v29, v21);
LABEL_19:
  v33 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  v34 = a3[13];
  v35 = *(void **)((char *)a1 + v34);
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);

  v36 = a3[14];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  if (*(_QWORD *)((char *)a1 + v36 + 8))
  {
    v39 = v38[1];
    if (v39)
    {
      *v37 = *v38;
      v37[1] = v39;
      swift_bridgeObjectRelease();
      v40 = v38[3];
      v37[2] = v38[2];
      v37[3] = v40;
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    sub_1A4547E00((uint64_t)v37);
  }
  v41 = *((_OWORD *)v38 + 1);
  *(_OWORD *)v37 = *(_OWORD *)v38;
  *((_OWORD *)v37 + 1) = v41;
LABEL_24:
  *(_QWORD *)((char *)a1 + a3[15]) = *(_QWORD *)((char *)a2 + a3[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[17]) = *(_QWORD *)((char *)a2 + a3[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  swift_bridgeObjectRelease();
  v42 = a3[19];
  v43 = *(void **)((char *)a1 + v42);
  *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)a2 + v42);

  v44 = a3[20];
  v45 = *(void **)((char *)a1 + v44);
  *(_QWORD *)((char *)a1 + v44) = *(_QWORD *)((char *)a2 + v44);

  v46 = a3[21];
  v47 = *(void **)((char *)a1 + v46);
  *(_QWORD *)((char *)a1 + v46) = *(_QWORD *)((char *)a2 + v46);

  *(_QWORD *)((char *)a1 + a3[22]) = *(_QWORD *)((char *)a2 + a3[22]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[23]) = *(_QWORD *)((char *)a2 + a3[23]);
  swift_bridgeObjectRelease();
  v48 = a3[24];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = v55((char *)a1 + v48, 1, v11);
  v52 = v55(v50, 1, v11);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v49, v50, v11);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v11);
    goto LABEL_29;
  }
  if (v52)
  {
LABEL_29:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v49, v50, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v49, 0, 1, v11);
LABEL_30:
  *(_QWORD *)((char *)a1 + a3[25]) = *(_QWORD *)((char *)a2 + a3[25]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestReminder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45485F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestReminder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45486A8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1A454874C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A44F84E4(319, qword_1EE720210, (void (*)(uint64_t))MEMORY[0x1E0CAEAB0]);
  if (v0 <= 0x3F)
  {
    sub_1A44F84E4(319, (unint64_t *)&qword_1ED243020, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.TestListSection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1A46900B4();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for REMTestStorePopulator.TestListSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestListSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A46900B4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestListSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A46900B4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for REMTestStorePopulator.TestListSection(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A46900B4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *assignWithTake for REMTestStorePopulator.TestListSection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A46900B4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestListSection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4548EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestListSection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4548F2C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1A4548FA4()
{
  unint64_t v0;

  sub_1A44F84E4(319, (unint64_t *)&qword_1ED243020, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestCustomSmartListSection()
{
  return &type metadata for REMTestStorePopulator.TestCustomSmartListSection;
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatAccount(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatGroup(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatList(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatCustomSmartList(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatReminder(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of REMTestStoreDumpFormatter.formatSection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for DefaultDumpFormatter()
{
  return objc_opt_self();
}

uint64_t destroy for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestReminder.RecurrenceRule(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestReminder.RecurrenceRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestReminder.RecurrenceRule()
{
  return &type metadata for REMTestStorePopulator.TestReminder.RecurrenceRule;
}

uint64_t destroy for REMFeatureFlags.ExternalFeatureFlag()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMTestStorePopulator.TestReminder.Assignment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMTestStorePopulator.TestReminder.Assignment(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for REMTestStorePopulator.TestReminder.Assignment(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.TestReminder.Assignment(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.TestReminder.Assignment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.TestReminder.Assignment()
{
  return &type metadata for REMTestStorePopulator.TestReminder.Assignment;
}

void **sub_1A4549590(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1A46900B4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v14 = v4;
    v13(v9, v10, v11);
    v15 = a3[6];
    v16 = (char *)v7 + v15;
    v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v15, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, v17, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    *(void **)((char *)v7 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  }
  return v7;
}

uint64_t sub_1A45496B8(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  void (*v9)(char *, uint64_t);

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  v9(v4, v5);
  v7 = (char *)a1 + *(int *)(a2 + 24);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!(_DWORD)result)
    return ((uint64_t (*)(char *, uint64_t))v9)(v7, v5);
  return result;
}

void **sub_1A4549768(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A46900B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v13 = v6;
  v12(v8, v9, v10);
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  return a1;
}

void **sub_1A4549868(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1A46900B4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(char *, char *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v19 = v18((char *)a1 + v15, 1, v12);
  v20 = v18(v17, 1, v12);
  if (!v19)
  {
    if (!v20)
    {
      v14(v16, v17, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
LABEL_7:
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  return a1;
}

_QWORD *sub_1A45499B4(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  *a1 = *(_QWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1A46900B4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)&a2[a3[7]];
  return a1;
}

void **sub_1A4549AA8(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A46900B4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v17 = v16((char *)a1 + v13, 1, v10);
  v18 = v16(v15, 1, v10);
  if (!v17)
  {
    if (!v18)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
LABEL_7:
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1A4549BF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4549BFC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A46900B4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1A4549CA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1A4549CAC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1A46900B4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1A4549D4C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A46900B4();
  if (v0 <= 0x3F)
  {
    sub_1A44F84E4(319, (unint64_t *)&qword_1ED243020, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_1A4549DFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A46900B4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1A4549EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1A4549EE8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1A46900B4();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_1A4549F60(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A46900B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1A4549FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1A454A048(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1A46900B4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1A454A0BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A454A0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A46900B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1A454A144()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A454A150(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A46900B4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A454A1C4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A454A248()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A454A258()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A454A27C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A454A28C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_1A454A2A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A468FF7C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1A454A330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1A454A394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1A454A3FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1A454A460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A468FF7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1A454A4C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_30Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A454A510()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_31Tm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A468FF7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A454A560()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A468FF7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A454A5D8(uint64_t result)
{
  void *v1;
  id v2;

  if (result)
  {
    v1 = (void *)result;
    swift_bridgeObjectRetain();
    v2 = v1;
    return swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1A454A610(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A454A654()
{
  unint64_t result;

  result = qword_1EE7206B0;
  if (!qword_1EE7206B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469F708, &type metadata for REMTestStorePopulator.DumpError);
    atomic_store(result, (unint64_t *)&qword_1EE7206B0);
  }
  return result;
}

uint64_t sub_1A454A698(uint64_t a1)
{
  void *v2;
  void *v4;

  v2 = *(void **)(a1 + 56);
  v4 = *(void **)(a1 + 128);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A4496404(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

uint64_t objectdestroy_3Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1A454A7A8()
{
  unint64_t result;

  result = qword_1EE7206C0;
  if (!qword_1EE7206C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469F6C8, &type metadata for REMTestStorePopulator.ContentsParseError);
    atomic_store(result, (unint64_t *)&qword_1EE7206C0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMTestStorePopulator.ContentsParseError(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for REMTestStorePopulator.ContentsParseError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for REMTestStorePopulator.ContentsParseError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for REMTestStorePopulator.ContentsParseError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFE9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483626);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 21;
  if (v4 >= 0x17)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.ContentsParseError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFEA)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483626;
    if (a3 >= 0x7FFFFFEA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFEA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 21;
  }
  return result;
}

_QWORD *sub_1A454A9AC(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.ContentsParseError()
{
  return &type metadata for REMTestStorePopulator.ContentsParseError;
}

uint64_t storeEnumTagSinglePayload for REMTestStorePopulator.DumpError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A454AA1C + 4 * byte_1A469F238[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A454AA3C + 4 * byte_1A469F23D[v4]))();
}

_BYTE *sub_1A454AA1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A454AA3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A454AA44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A454AA4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A454AA54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A454AA5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMTestStorePopulator.DumpError()
{
  return &type metadata for REMTestStorePopulator.DumpError;
}

unint64_t sub_1A454AA7C()
{
  unint64_t result;

  result = qword_1EE720730;
  if (!qword_1EE720730)
  {
    result = MEMORY[0x1A85A0000](&unk_1A469F6A0, &type metadata for REMTestStorePopulator.DumpError);
    atomic_store(result, (unint64_t *)&qword_1EE720730);
  }
  return result;
}

uint64_t sub_1A454AAE4()
{
  uint64_t result;

  type metadata accessor for REMAnalyticsManager();
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = MEMORY[0x1E0DEE9D8];
  qword_1ED241920 = result;
  return result;
}

uint64_t static REMAnalyticsManager.shared.getter()
{
  if (qword_1ED241928 != -1)
    swift_once();
  return swift_retain();
}

void REMAnalyticsManager.post(event:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t *v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for REMAnalyticsEvent();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + 16) == 1)
  {
    sub_1A44304C4(a1, (uint64_t)v6);
    v7 = (unint64_t *)(v1 + 24);
    swift_beginAccess();
    v8 = *(_QWORD *)(v1 + 24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 24) = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v8 = sub_1A4439D18(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
      *v7 = v8;
    }
    v11 = *(_QWORD *)(v8 + 16);
    v10 = *(_QWORD *)(v8 + 24);
    if (v11 >= v10 >> 1)
    {
      v8 = sub_1A4439D18(v10 > 1, v11 + 1, 1, v8);
      *v7 = v8;
    }
    *(_QWORD *)(v8 + 16) = v11 + 1;
    sub_1A454ACE4((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v11);
    swift_endAccess();
  }
  else
  {
    _s19ReminderKitInternal9AnalyticsC9postEventyyAA012REMAnalyticsF0OFZ_0();
  }
}

uint64_t REMAnalyticsManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMAnalyticsManager.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A454ACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for REMAnalyticsManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMAnalyticsManager()
{
  return swift_lookUpClassMethod();
}

Swift::UInt64 __swiftcall UInt64.init(nanosecondsFromSeconds:)(Swift::Double nanosecondsFromSeconds)
{
  double v1;
  Swift::UInt64 result;

  v1 = nanosecondsFromSeconds * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
    return (unint64_t)v1;
LABEL_7:
  __break(1u);
  return result;
}

uint64_t DoubleStacksQueue.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A46906CC();
  result = sub_1A46906CC();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t DoubleStacksQueue.isEmpty.getter()
{
  uint64_t v0;
  char v1;

  v0 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v0);
  if ((sub_1A4690EB8() & 1) != 0)
    v1 = sub_1A4690EB8();
  else
    v1 = 0;
  return v1 & 1;
}

uint64_t DoubleStacksQueue.peek.getter()
{
  uint64_t v0;

  v0 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v0);
  if ((sub_1A4690EB8() & 1) != 0)
    return sub_1A4690EAC();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v0);
  return sub_1A4690810();
}

uint64_t DoubleStacksQueue.enqueue(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v2);
  sub_1A4690C78();
  return sub_1A4690C3C();
}

uint64_t DoubleStacksQueue.dequeue()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v2);
  if ((sub_1A4690EB8() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v2);
    v3 = sub_1A4690B10();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 8) = v3;
    sub_1A4690C6C();
  }
  v4 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v2);
  v5 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF58], v2);
  return MEMORY[0x1A859E7A0](v2, v4, v5);
}

Swift::Void __swiftcall DoubleStacksQueue.reset()()
{
  sub_1A4690C78();
  sub_1A4690C6C();
  sub_1A4690C6C();
}

uint64_t type metadata accessor for DoubleStacksQueue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DoubleStacksQueue);
}

uint64_t sub_1A454B0F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE720768);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE720768);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMNavigationSpecifier.init(_:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  _QWORD v55[9];
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68[5];

  v65 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v3);
  v55[8] = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1A46900FC();
  v55[7] = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v55[4] = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A468FF7C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v55[6] = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v55[3] = (char *)v55 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v55[5] = (char *)v55 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v60 = (char *)v55 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v59 = (char *)v55 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v55[2] = (char *)v55 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v58 = (char *)v55 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v57 = (char *)v55 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v55[1] = (char *)v55 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)v55 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)v55 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED240668);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for URLParseResult(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v62 = (char *)v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v39 = (char *)v55 - v38;
  v40 = type metadata accessor for REMNavigationSpecifier(0);
  v63 = *(_QWORD *)(v40 - 8);
  v64 = v40;
  v41 = MEMORY[0x1E0C80A78](v40);
  MEMORY[0x1E0C80A78](v41);
  v61 = (char *)v55 - v42;
  v66 = v7;
  v67 = a1;
  v43 = a1;
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v44(v30, (uint64_t)v43, v6);
  sub_1A454C82C(v30, (uint64_t)v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) != 1)
  {
    sub_1A44683E0((uint64_t)v33, (uint64_t)v39, type metadata accessor for URLParseResult);
    __asm { BR              X10 }
  }
  sub_1A445404C((uint64_t)v33, qword_1ED240668);
  if (qword_1EE71C110 != -1)
    swift_once();
  v45 = sub_1A4690318();
  __swift_project_value_buffer(v45, (uint64_t)qword_1EE720768);
  v46 = v67;
  v44(v28, (uint64_t)v67, v6);
  v47 = sub_1A469030C();
  v48 = sub_1A4690FF0();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v68[0] = v50;
    *(_DWORD *)v49 = 136315138;
    v51 = sub_1A468FE98();
    v68[3] = sub_1A4431120(v51, v52, v68);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    v53 = *(void (**)(char *, uint64_t))(v66 + 8);
    v53(v28, v6);
    _os_log_impl(&dword_1A442D000, v47, v48, "Could not parse url. Failed to create navigation specifier {url: %s}", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v50, -1, -1);
    MEMORY[0x1A85A0114](v49, -1, -1);

  }
  else
  {

    v53 = *(void (**)(char *, uint64_t))(v66 + 8);
    v53(v28, v6);
  }
  v53(v46, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v65, 1, 1, v64);
}

uint64_t type metadata accessor for URLParseResult(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED240658);
}

uint64_t type metadata accessor for REMNavigationSpecifier(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED2403C8);
}

uint64_t sub_1A454C82C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  BOOL v52;
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(_BYTE *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void (*v71)(_BYTE *, uint64_t);
  void (*v72)(_BYTE *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(_BYTE *, uint64_t);
  int v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  BOOL v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  void (*v99)(_BYTE *, uint64_t);
  uint64_t v100;
  void (*v101)(_BYTE *, uint64_t);
  void (*v102)(_BYTE *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  unint64_t *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  BOOL v109;
  char v110;
  char v111;
  unint64_t v112;
  unint64_t v113;
  void (*v114)(_BYTE *, uint64_t);
  uint64_t v115;
  _BOOL8 v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  NSObject *v121;
  os_log_type_t v122;
  uint8_t *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  void (*v127)(_BYTE *, uint64_t);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(_BYTE *, uint64_t);
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _BYTE *v137;
  _BYTE *v138;
  NSObject *v139;
  os_log_type_t v140;
  uint8_t *v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  void (*v145)(_BYTE *, uint64_t);
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  NSObject *v149;
  os_log_type_t v150;
  BOOL v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  void (*v156)(_BOOL8, uint64_t);
  uint64_t v157;
  uint64_t v158;
  void (*v159)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  NSObject *v167;
  os_log_type_t v168;
  uint8_t *v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  void (*v173)(_BYTE *, uint64_t);
  void (*v174)(_BOOL8, uint64_t);
  uint64_t v175;
  void (*v176)(_BYTE *, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(_BYTE *, uint64_t);
  void *ObjCClassFromMetadata;
  id v182;
  id v183;
  _BYTE *v184;
  void *v185;
  void *v186;
  uint64_t v187;
  _BYTE *v188;
  _BYTE *v189;
  uint64_t v190;
  unint64_t *v191;
  char v192;
  uint64_t v193;
  NSObject *v194;
  os_log_type_t v195;
  uint8_t *v196;
  uint64_t v197;
  _BYTE *v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  void (*v202)(_BYTE *, uint64_t);
  uint64_t v203;
  void (*v204)(_BYTE *, uint64_t);
  _BYTE v205[12];
  int v206;
  _BYTE *v207;
  _BYTE *v208;
  _BYTE *v209;
  _BYTE *v210;
  _BYTE *v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  _BYTE *v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227[2];

  v220 = a2;
  v3 = sub_1A46900FC();
  v213 = *(_QWORD *)(v3 - 8);
  v214 = v3;
  MEMORY[0x1E0C80A78](v3);
  v210 = &v205[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v6 = MEMORY[0x1E0C80A78](v5);
  v211 = &v205[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v215 = &v205[-v8];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242E50);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v205[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_1A468FC7C();
  v13 = *(_QWORD *)(v12 - 8);
  v217 = (void *)v12;
  v218 = v13;
  MEMORY[0x1E0C80A78](v12);
  v216 = &v205[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1A468FF7C();
  v221 = *(_QWORD *)(v15 - 8);
  v222 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = &v205[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x1E0C80A78](v16);
  v209 = &v205[-v20];
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = &v205[-v22];
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = &v205[-v25];
  v27 = MEMORY[0x1E0C80A78](v24);
  v207 = &v205[-v28];
  v29 = MEMORY[0x1E0C80A78](v27);
  v208 = &v205[-v30];
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = &v205[-v32];
  v34 = MEMORY[0x1E0C80A78](v31);
  v36 = &v205[-v35];
  MEMORY[0x1E0C80A78](v34);
  v38 = &v205[-v37];
  v224 = type metadata accessor for URLParseResult(0);
  v219 = *(_QWORD *)(v224 - 8);
  MEMORY[0x1E0C80A78](v224);
  v212 = &v205[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1A468FF4C();
  if (!v41)
    goto LABEL_12;
  v42 = v41;
  v223 = a1;
  if (v40 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v42 == v43)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v223;
    goto LABEL_6;
  }
  v44 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v223;
  if ((v44 & 1) == 0)
  {
LABEL_12:
    if (qword_1EE71C110 != -1)
      swift_once();
    v61 = sub_1A4690318();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EE720768);
    v63 = v221;
    v62 = v222;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v18, a1, v222);
    v64 = sub_1A469030C();
    v65 = sub_1A4690FF0();
    v66 = os_log_type_enabled(v64, v65);
    v53 = v224;
    if (v66)
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v227[0] = v68;
      *(_DWORD *)v67 = 136315138;
      v223 = a1;
      v69 = sub_1A468FE98();
      v226 = sub_1A4431120(v69, v70, v227);
      v53 = v224;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v71 = *(void (**)(_BYTE *, uint64_t))(v63 + 8);
      v71(v18, v62);
      _os_log_impl(&dword_1A442D000, v64, v65, "url has unexpected scheme -- failed to parse url {url: %s}", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v68, -1, -1);
      MEMORY[0x1A85A0114](v67, -1, -1);

      v71(v223, v62);
      v60 = 1;
      goto LABEL_18;
    }

    v72 = *(void (**)(_BYTE *, uint64_t))(v63 + 8);
    v72(v18, v62);
    v72(a1, v62);
LABEL_17:
    v60 = 1;
    goto LABEL_18;
  }
LABEL_6:
  sub_1A468FF34();
  if (v45)
  {
    sub_1A46908F4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v46 = sub_1A455A0D0();
    if (v46 == 19)
    {
      swift_bridgeObjectRelease();
      if (qword_1EE71C110 != -1)
        swift_once();
      v47 = sub_1A4690318();
      __swift_project_value_buffer(v47, (uint64_t)qword_1EE720768);
      v48 = v221;
      v49 = v222;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v36, a1, v222);
      v50 = sub_1A469030C();
      v51 = sub_1A4690FF0();
      v52 = os_log_type_enabled(v50, v51);
      v53 = v224;
      if (v52)
      {
        v54 = (uint8_t *)swift_slowAlloc();
        v55 = swift_slowAlloc();
        v227[0] = v55;
        *(_DWORD *)v54 = 136315138;
        v56 = sub_1A468FE98();
        v226 = sub_1A4431120(v56, v57, v227);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        v58 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
        v58(v36, v49);
        _os_log_impl(&dword_1A442D000, v50, v51, "url has unknown host -- failed to parse url {url: %s}", v54, 0xCu);
        swift_arrayDestroy();
        v59 = v55;
        v53 = v224;
        MEMORY[0x1A85A0114](v59, -1, -1);
        MEMORY[0x1A85A0114](v54, -1, -1);

        v58(v223, v49);
        v60 = 1;
LABEL_18:
        v73 = v220;
LABEL_19:
        v74 = v219;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v73, v60, 1, v53);
      }

      v102 = *(void (**)(_BYTE *, uint64_t))(v48 + 8);
      v102(v36, v49);
      v102(a1, v49);
      goto LABEL_17;
    }
    v86 = v46;
    sub_1A468FC58();
    v88 = v217;
    v87 = v218;
    if ((*(unsigned int (**)(_BYTE *, uint64_t, void *))(v218 + 48))(v11, 1, v217) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v11, &qword_1ED242E50);
      if (qword_1EE71C110 != -1)
        swift_once();
      v89 = sub_1A4690318();
      __swift_project_value_buffer(v89, (uint64_t)qword_1EE720768);
      v90 = v221;
      v91 = v222;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v33, a1, v222);
      v92 = sub_1A469030C();
      v93 = sub_1A4690FF0();
      v94 = os_log_type_enabled(v92, v93);
      v53 = v224;
      if (v94)
      {
        v95 = (uint8_t *)swift_slowAlloc();
        v96 = swift_slowAlloc();
        v227[0] = v96;
        *(_DWORD *)v95 = 136315138;
        v97 = sub_1A468FE98();
        v226 = sub_1A4431120(v97, v98, v227);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        v99 = *(void (**)(_BYTE *, uint64_t))(v90 + 8);
        v99(v33, v91);
        _os_log_impl(&dword_1A442D000, v92, v93, "Failed to get url components -- failed to parse url {url: %s}", v95, 0xCu);
        v60 = 1;
        swift_arrayDestroy();
        v100 = v96;
        v53 = v224;
        MEMORY[0x1A85A0114](v100, -1, -1);
        MEMORY[0x1A85A0114](v95, -1, -1);

        v99(v223, v91);
        goto LABEL_18;
      }

      v114 = *(void (**)(_BYTE *, uint64_t))(v90 + 8);
      v114(v33, v91);
      v114(a1, v91);
      goto LABEL_17;
    }
    (*(void (**)(_BYTE *, _BYTE *, id))(v87 + 32))(v216, v11, v88);
    v206 = v86;
    if (v86 - 6 < 0xC)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v213 + 56))(v215, 1, 1, v214);
      v103 = sub_1A468FEA4();
      v88 = 0;
      v104 = *(_QWORD *)(v103 + 16);
      if (v104)
      {
LABEL_35:
        v105 = (unint64_t *)(v103 + 40);
        v106 = (char *)MEMORY[0x1E0DEE9D8];
        while (1)
        {
          v108 = *(v105 - 1);
          v107 = *v105;
          v109 = v108 == 47 && v107 == 0xE100000000000000;
          if (!v109 && (sub_1A4691A40() & 1) == 0)
          {
            sub_1A46908F4();
            swift_bridgeObjectRetain();
            v110 = sub_1A455A120();
            if (v110 == 18)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v116 = (_BOOL8)v209;
              if (qword_1EE71C110 == -1)
                goto LABEL_67;
              goto LABEL_108;
            }
            v111 = v110;
            swift_bridgeObjectRelease();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v106 = sub_1A4439D2C(0, *((_QWORD *)v106 + 2) + 1, 1, v106);
            v113 = *((_QWORD *)v106 + 2);
            v112 = *((_QWORD *)v106 + 3);
            if (v113 >= v112 >> 1)
              v106 = sub_1A4439D2C((char *)(v112 > 1), v113 + 1, 1, v106);
            *((_QWORD *)v106 + 2) = v113 + 1;
            v106[v113 + 32] = v111;
          }
          v105 += 2;
          if (!--v104)
            goto LABEL_90;
        }
      }
LABEL_89:
      v106 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_90:
      swift_bridgeObjectRelease();
      v187 = (uint64_t)v212;
      *v212 = v206;
      v53 = v224;
      v188 = v215;
      sub_1A4474000((uint64_t)v215, v187 + *(int *)(v224 + 24));
      *(_QWORD *)(v187 + *(int *)(v53 + 28)) = v88;
      *(_QWORD *)(v187 + 8) = v106;
      v189 = v216;
      v190 = sub_1A468FC40();
      (*(void (**)(_BYTE *, uint64_t))(v221 + 8))(v223, v222);
      sub_1A445404C((uint64_t)v188, &qword_1ED243170);
      (*(void (**)(_BYTE *, void *))(v218 + 8))(v189, v217);
      *(_QWORD *)(v187 + *(int *)(v53 + 32)) = v190;
      v73 = v220;
      sub_1A44683E0(v187, v220, type metadata accessor for URLParseResult);
      v60 = 0;
      goto LABEL_19;
    }
    v115 = v222;
    v116 = v86 >= 6u;
    v117 = (_QWORD *)sub_1A468FEA4();
    v227[0] = (uint64_t)v117;
    if (v117[2] < 2uLL)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1EE71C110 != -1)
        swift_once();
      v118 = sub_1A4690318();
      __swift_project_value_buffer(v118, (uint64_t)qword_1EE720768);
      v119 = v221;
      v120 = v223;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v23, v223, v115);
      v121 = sub_1A469030C();
      v122 = sub_1A4690FF0();
      if (os_log_type_enabled(v121, v122))
      {
        v123 = (uint8_t *)swift_slowAlloc();
        v124 = swift_slowAlloc();
        v226 = v124;
        *(_DWORD *)v123 = 136315138;
        v125 = sub_1A468FE98();
        v225 = sub_1A4431120(v125, v126, &v226);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        v127 = *(void (**)(_BYTE *, uint64_t))(v119 + 8);
        v128 = v222;
        v127(v23, v222);
        _os_log_impl(&dword_1A442D000, v121, v122, "url path is too short -- failed to parse url {url: %s}", v123, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v124, -1, -1);
        MEMORY[0x1A85A0114](v123, -1, -1);

        v127(v120, v128);
        (*(void (**)(_BYTE *, void *))(v218 + 8))(v216, v217);
      }
      else
      {

        v131 = *(void (**)(_BYTE *, uint64_t))(v119 + 8);
        v131(v23, v115);
        v131(v120, v115);
        (*(void (**)(_BYTE *, id))(v218 + 8))(v216, v88);
      }
      v74 = v219;
      v73 = v220;
      v60 = 1;
      v53 = v224;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v73, v60, 1, v53);
    }
    v129 = v115;
    v108 = v117[4];
    v107 = v117[5];
    swift_bridgeObjectRetain();
    sub_1A44676A4(0, 1);
    if (v108 == 47 && v107 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      v130 = v214;
    }
    else
    {
      v132 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      v130 = v214;
      if ((v132 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (qword_1EE71C110 != -1)
          swift_once();
        v163 = sub_1A4690318();
        __swift_project_value_buffer(v163, (uint64_t)qword_1EE720768);
        v165 = v221;
        v164 = v222;
        v166 = v223;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v26, v223, v222);
        v167 = sub_1A469030C();
        v168 = sub_1A4690FF0();
        if (!os_log_type_enabled(v167, v168))
        {

          v180 = *(void (**)(_BYTE *, uint64_t))(v165 + 8);
          v180(v26, v164);
          v180(v166, v164);
          (*(void (**)(_BYTE *, id))(v218 + 8))(v216, v88);
          goto LABEL_83;
        }
        v169 = (uint8_t *)swift_slowAlloc();
        v170 = swift_slowAlloc();
        v226 = v170;
        *(_DWORD *)v169 = 136315138;
        v171 = sub_1A468FE98();
        v225 = sub_1A4431120(v171, v172, &v226);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        v173 = *(void (**)(_BYTE *, uint64_t))(v165 + 8);
        v173(v26, v164);
        _os_log_impl(&dword_1A442D000, v167, v168, "unexpected path component structure -- failed to parse url {url: %s}", v169, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v170, -1, -1);
        MEMORY[0x1A85A0114](v169, -1, -1);

        v173(v223, v164);
LABEL_78:
        (*(void (**)(_BYTE *, void *))(v218 + 8))(v216, v217);
LABEL_83:
        v74 = v219;
        v73 = v220;
        v53 = v224;
        v60 = 1;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v73, v60, 1, v53);
      }
    }
    if (!*(_QWORD *)(v227[0] + 16))
    {
      __break(1u);
LABEL_108:
      swift_once();
LABEL_67:
      v146 = sub_1A4690318();
      __swift_project_value_buffer(v146, (uint64_t)qword_1EE720768);
      v147 = v221;
      v148 = v223;
      (*(void (**)(_BOOL8, _BYTE *, uint64_t))(v221 + 16))(v116, v223, v222);
      swift_bridgeObjectRetain();
      v149 = sub_1A469030C();
      v150 = sub_1A4690FF0();
      v151 = os_log_type_enabled(v149, v150);
      v53 = v224;
      if (v151)
      {
        v152 = swift_slowAlloc();
        v153 = swift_slowAlloc();
        v227[0] = v153;
        *(_DWORD *)v152 = 136315394;
        swift_bridgeObjectRetain();
        v226 = sub_1A4431120(v108, v107, v227);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v152 + 12) = 2080;
        v154 = sub_1A468FE98();
        v226 = sub_1A4431120(v154, v155, v227);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        v156 = *(void (**)(_BOOL8, uint64_t))(v147 + 8);
        v157 = v222;
        v156(v116, v222);
        _os_log_impl(&dword_1A442D000, v149, v150, "unexpected url path component -- failed to parse url {component: %s, url: %s}", (uint8_t *)v152, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v153, -1, -1);
        v158 = v152;
        v53 = v224;
        MEMORY[0x1A85A0114](v158, -1, -1);

        v156((_BOOL8)v223, v157);
      }
      else
      {

        v174 = *(void (**)(_BOOL8, uint64_t))(v147 + 8);
        v175 = v222;
        v174(v116, v222);
        swift_bridgeObjectRelease_n();

        v174((_BOOL8)v148, v175);
      }
      sub_1A445404C((uint64_t)v215, &qword_1ED243170);
      (*(void (**)(_BYTE *, void *))(v218 + 8))(v216, v217);
      goto LABEL_17;
    }
    swift_bridgeObjectRetain();
    sub_1A44676A4(0, 1);
    v133 = (uint64_t)v211;
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    v134 = v213;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48))(v133, 1, v130) == 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A445404C(v133, &qword_1ED243170);
      if (qword_1EE71C110 != -1)
        swift_once();
      v135 = sub_1A4690318();
      __swift_project_value_buffer(v135, (uint64_t)qword_1EE720768);
      v136 = v221;
      v137 = v208;
      v138 = v223;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v208, v223, v129);
      v139 = sub_1A469030C();
      v140 = sub_1A4690FF0();
      if (os_log_type_enabled(v139, v140))
      {
        v141 = (uint8_t *)swift_slowAlloc();
        v142 = swift_slowAlloc();
        v226 = v142;
        *(_DWORD *)v141 = 136315138;
        v143 = sub_1A468FE98();
        v225 = sub_1A4431120(v143, v144, &v226);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        v145 = *(void (**)(_BYTE *, uint64_t))(v136 + 8);
        v145(v137, v129);
        _os_log_impl(&dword_1A442D000, v139, v140, "failed to get object uuid -- failed to parse url {url: %s}", v141, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v142, -1, -1);
        MEMORY[0x1A85A0114](v141, -1, -1);

        v145(v223, v129);
      }
      else
      {

        v176 = *(void (**)(_BYTE *, uint64_t))(v136 + 8);
        v176(v137, v129);
        v176(v138, v129);
      }
      goto LABEL_78;
    }
    v159 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v134 + 32);
    v160 = v210;
    v159(v210, v133, v130);
    if (v116)
    {
      swift_bridgeObjectRelease();
      v161 = v215;
      v159(v215, (uint64_t)v160, v130);
      v162 = 0;
      v88 = 0;
      goto LABEL_88;
    }
    v177 = sub_1A46908F4();
    v179 = v178;
    swift_bridgeObjectRelease();
    if (v177 == 0x63636164636D6572 && v179 == 0xEC000000746E756FLL
      || (sub_1A4691A40() & 1) != 0
      || v177 == 0x73696C64636D6572 && v179 == 0xE900000000000074
      || (sub_1A4691A40() & 1) != 0
      || v177 == 0x616D7364636D6572 && v179 == 0xEE007473696C7472)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((sub_1A4691A40() & 1) == 0)
      {
        if (v177 == 0x6D657264636D6572 && v179 == 0xED00007265646E69 || (sub_1A4691A40() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          ObjCClassFromMetadata = (void *)objc_opt_self();
        }
        else
        {
          if (v177 == 0xD000000000000010 && v179 == 0x80000001A46BC220 || (sub_1A4691A40() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v191 = &qword_1EE7206D0;
          }
          else
          {
            if (v177 == 0xD000000000000015 && v179 == 0x80000001A46BC240)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v192 = sub_1A4691A40();
              swift_bridgeObjectRelease();
              if ((v192 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                if (qword_1EE71C110 != -1)
                  swift_once();
                v193 = sub_1A4690318();
                __swift_project_value_buffer(v193, (uint64_t)qword_1EE720768);
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v207, v223, v222);
                v194 = sub_1A469030C();
                v195 = sub_1A4690FF0();
                if (os_log_type_enabled(v194, v195))
                {
                  v196 = (uint8_t *)swift_slowAlloc();
                  v197 = swift_slowAlloc();
                  v226 = v197;
                  *(_DWORD *)v196 = 136315138;
                  v198 = v207;
                  v199 = sub_1A468FE98();
                  v225 = sub_1A4431120(v199, v200, &v226);
                  sub_1A46911D0();
                  swift_bridgeObjectRelease();
                  v201 = v222;
                  v202 = *(void (**)(_BYTE *, uint64_t))(v221 + 8);
                  v202(v198, v222);
                  _os_log_impl(&dword_1A442D000, v194, v195, "unexpected entity name in url objectID -- failed to parse url {url: %s}", v196, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1A85A0114](v197, -1, -1);
                  MEMORY[0x1A85A0114](v196, -1, -1);

                  v202(v223, v201);
                }
                else
                {

                  v203 = v222;
                  v204 = *(void (**)(_BYTE *, uint64_t))(v221 + 8);
                  v204(v207, v222);
                  v204(v223, v203);
                }
                (*(void (**)(_BYTE *, uint64_t))(v213 + 8))(v210, v214);
                (*(void (**)(_BYTE *, void *))(v218 + 8))(v216, v217);
                v60 = 1;
                v73 = v220;
                v53 = v224;
                goto LABEL_19;
              }
            }
            v191 = (unint64_t *)&qword_1ED23EC60;
          }
          sub_1A444AA40(0, v191);
          ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        }
        v130 = v214;
        goto LABEL_87;
      }
      swift_bridgeObjectRelease();
      v130 = v214;
    }
    ObjCClassFromMetadata = (void *)objc_opt_self();
LABEL_87:
    v182 = objc_msgSend(ObjCClassFromMetadata, sel_cdEntityName);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    v183 = objc_allocWithZone(MEMORY[0x1E0D845B0]);
    v184 = v210;
    v185 = (void *)sub_1A46900D8();
    v186 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v88 = objc_msgSend(v183, sel_initWithUUID_entityName_, v185, v186);

    v134 = v213;
    (*(void (**)(_BYTE *, uint64_t))(v213 + 8))(v184, v130);
    v162 = 1;
    v161 = v215;
LABEL_88:
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v134 + 56))(v161, v162, 1, v130);
    v103 = v227[0];
    v104 = *(_QWORD *)(v227[0] + 16);
    if (v104)
      goto LABEL_35;
    goto LABEL_89;
  }
  if (qword_1EE71C110 != -1)
    swift_once();
  v76 = sub_1A4690318();
  __swift_project_value_buffer(v76, (uint64_t)qword_1EE720768);
  v78 = v221;
  v77 = v222;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v221 + 16))(v38, a1, v222);
  v79 = sub_1A469030C();
  v80 = sub_1A4690FF0();
  if (os_log_type_enabled(v79, v80))
  {
    v81 = (uint8_t *)swift_slowAlloc();
    v82 = swift_slowAlloc();
    v227[0] = v82;
    *(_DWORD *)v81 = 136315138;
    v83 = sub_1A468FE98();
    v226 = sub_1A4431120(v83, v84, v227);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    v85 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
    v85(v38, v77);
    _os_log_impl(&dword_1A442D000, v79, v80, "url has nil host -- failed to parse url {url: %s}", v81, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v82, -1, -1);
    MEMORY[0x1A85A0114](v81, -1, -1);

    v85(v223, v77);
  }
  else
  {

    v101 = *(void (**)(_BYTE *, uint64_t))(v78 + 8);
    v101(v38, v77);
    v101(a1, v77);
  }
  v60 = 1;
  v74 = v219;
  v73 = v220;
  v53 = v224;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v73, v60, 1, v53);
}

uint64_t sub_1A454E330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = type metadata accessor for ReminderUUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED23FEC8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 8);
  v40 = v11;
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = *(unsigned __int8 *)(v11 + 32);
    swift_bridgeObjectRetain();
    sub_1A446780C(0, 1);
    switch(v12)
    {
      case 1:
        sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        result = swift_bridgeObjectRelease();
        v14 = 1;
        goto LABEL_11;
      case 2:
        if (*(_QWORD *)(v40 + 16))
        {
          v15 = *(unsigned __int8 *)(v40 + 32);
          swift_bridgeObjectRelease();
          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          if (v15 == 5)
          {
            *(_QWORD *)a2 = 1;
            *(_BYTE *)(a2 + 8) = 0;
            return result;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        }
        *(_QWORD *)a2 = 0;
        *(_BYTE *)(a2 + 8) = 0;
        return result;
      case 3:
        sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        result = swift_bridgeObjectRelease();
        v14 = 4;
        goto LABEL_11;
      case 4:
        sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        result = swift_bridgeObjectRelease();
        v14 = 2;
LABEL_11:
        *(_QWORD *)a2 = v14;
        goto LABEL_12;
      case 13:
        swift_bridgeObjectRelease();
        sub_1A454F560((uint64_t)v10);
        v17 = type metadata accessor for ReminderIDQuery(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v10, 1, v17) != 1)
        {
          v33 = (void *)objc_opt_self();
          v34 = (void *)sub_1A46900D8();
          v35 = objc_msgSend(v33, sel_objectIDWithUUID_, v34);

          sub_1A4497F2C((uint64_t)v10, type metadata accessor for ReminderIDQuery);
          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          *(_QWORD *)a2 = v35;
          *(_BYTE *)(a2 + 8) = 1;
          return result;
        }
        sub_1A445404C((uint64_t)v10, qword_1ED23FEC8);
        if (qword_1EE71C110 != -1)
          swift_once();
        v18 = sub_1A4690318();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EE720768);
        v19 = sub_1A469030C();
        v20 = sub_1A4690FF0();
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v21 = 0;
          v22 = "Missing query items for select. Failed to create ListPathSpecifier";
          goto LABEL_34;
        }
        goto LABEL_35;
      case 14:
        sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        result = swift_bridgeObjectRelease();
        *(_QWORD *)a2 = 3;
        *(_BYTE *)(a2 + 8) = 3;
        return result;
      case 17:
        swift_bridgeObjectRelease();
        v23 = sub_1A454F8A0();
        if (v23)
        {
          v24 = v23;
          v25 = v23[2];
          if (v25)
          {
            v38 = a2;
            v39 = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1A469153C();
            v26 = (void *)objc_opt_self();
            v27 = *(unsigned __int8 *)(v5 + 80);
            v37 = v24;
            v28 = (uint64_t)v24 + ((v27 + 32) & ~v27);
            v29 = *(_QWORD *)(v5 + 72);
            do
            {
              sub_1A4497EE8(v28, (uint64_t)v7, type metadata accessor for ReminderUUID);
              v30 = (void *)sub_1A46900D8();
              v31 = objc_msgSend(v26, sel_objectIDWithUUID_, v30, v37);

              sub_1A4497F2C((uint64_t)v7, type metadata accessor for ReminderUUID);
              sub_1A4691518();
              sub_1A4691548();
              sub_1A4691554();
              sub_1A4691524();
              v28 += v29;
              --v25;
            }
            while (v25);
            v32 = v39;
            swift_bridgeObjectRelease_n();
            a2 = v38;
          }
          else
          {
            swift_bridgeObjectRelease();
            v32 = MEMORY[0x1E0DEE9D8];
          }
          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          *(_QWORD *)a2 = v32;
          v16 = 2;
        }
        else
        {
          if (qword_1EE71C110 != -1)
            swift_once();
          v36 = sub_1A4690318();
          __swift_project_value_buffer(v36, (uint64_t)qword_1EE720768);
          v19 = sub_1A469030C();
          v20 = sub_1A4690FF0();
          if (os_log_type_enabled(v19, v20))
          {
            v21 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v21 = 0;
            v22 = "Missing query items for edits. Failed to create ListPathSpecifier";
LABEL_34:
            _os_log_impl(&dword_1A442D000, v19, v20, v22, v21, 2u);
            MEMORY[0x1A85A0114](v21, -1, -1);
          }
LABEL_35:

          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          *(_QWORD *)a2 = 0;
          v16 = -1;
        }
        break;
      default:
        sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        goto LABEL_5;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
LABEL_5:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a2 = 0;
LABEL_12:
    v16 = 3;
  }
  *(_BYTE *)(a2 + 8) = v16;
  return result;
}

uint64_t sub_1A454E8E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int v5;
  __int16 v6;
  uint64_t result;
  char v8;
  __int16 v9;
  __int16 v10;
  int v11;

  v4 = *(_QWORD *)(a1 + 8);
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
LABEL_13:
    result = swift_bridgeObjectRelease();
    v8 = 0;
LABEL_14:
    v10 = 2;
    goto LABEL_15;
  }
  v5 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1A446780C(0, 1);
  if (v5 != 2)
  {
    if (v5 == 11)
    {
      swift_bridgeObjectRelease();
      v6 = sub_1A454FB58();
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v8 = 0;
      if (v6 == 2)
        v9 = 0;
      else
        v9 = v6 & 0x100;
      v10 = v9 & 0xFFFE | v6 & 1;
      goto LABEL_15;
    }
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    goto LABEL_13;
  }
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_17:
    result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    v8 = 1;
    goto LABEL_14;
  }
  v11 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRelease();
  switch(v11)
  {
    case 6:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v10 = 1;
      v8 = 1;
      break;
    case 7:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v10 = 0;
      v8 = 1;
      break;
    case 8:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v8 = 1;
      v10 = 3;
      break;
    case 9:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v8 = 1;
      v10 = 4;
      break;
    case 10:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v8 = 1;
      v10 = 5;
      break;
    case 11:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v8 = 1;
      v10 = 6;
      break;
    case 12:
      result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
      v8 = 1;
      v10 = 7;
      break;
    default:
      goto LABEL_17;
  }
LABEL_15:
  *(_WORD *)a2 = v10;
  *(_BYTE *)(a2 + 2) = v8;
  return result;
}

uint64_t sub_1A454EAF4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t result;
  BOOL v7;

  v4 = *(_QWORD *)(a1 + 8);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = *(unsigned __int8 *)(v4 + 32);
    swift_bridgeObjectRetain();
    sub_1A446780C(0, 1);
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = swift_bridgeObjectRelease();
    v7 = v5 == 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1A454EB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  const char *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = type metadata accessor for ReminderUUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED23FEC8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 8);
  v38 = v11;
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = *(unsigned __int8 *)(v11 + 32);
    swift_bridgeObjectRetain();
    sub_1A446780C(0, 1);
    swift_bridgeObjectRelease();
    switch(v12)
    {
      case 1:
        result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        v14 = 2;
        v15 = 1;
        break;
      case 4:
        result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        v15 = 2;
        v14 = 2;
        break;
      case 13:
        sub_1A454F560((uint64_t)v10);
        v16 = type metadata accessor for ReminderIDQuery(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v10, 1, v16) != 1)
        {
          v31 = (void *)objc_opt_self();
          v32 = (void *)sub_1A46900D8();
          v15 = (uint64_t)objc_msgSend(v31, sel_objectIDWithUUID_, v32);

          sub_1A4497F2C((uint64_t)v10, type metadata accessor for ReminderIDQuery);
          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          v14 = 0;
          break;
        }
        sub_1A445404C((uint64_t)v10, qword_1ED23FEC8);
        if (qword_1EE71C110 != -1)
          swift_once();
        v17 = sub_1A4690318();
        __swift_project_value_buffer(v17, (uint64_t)qword_1EE720768);
        v18 = sub_1A469030C();
        v19 = sub_1A4690FF0();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v20 = 0;
          v21 = "Missing query items for select. Failed to create SmartListPathSpecifier";
          goto LABEL_23;
        }
        goto LABEL_24;
      case 17:
        v22 = sub_1A454F8A0();
        if (v22)
        {
          v23 = v22;
          v24 = v22[2];
          if (v24)
          {
            v35 = a1;
            v36 = a2;
            v37 = MEMORY[0x1E0DEE9D8];
            swift_bridgeObjectRetain();
            sub_1A469153C();
            v25 = (void *)objc_opt_self();
            v26 = *(unsigned __int8 *)(v5 + 80);
            v34[1] = v23;
            v27 = (uint64_t)v23 + ((v26 + 32) & ~v26);
            v28 = *(_QWORD *)(v5 + 72);
            do
            {
              sub_1A4497EE8(v27, (uint64_t)v7, type metadata accessor for ReminderUUID);
              v29 = (void *)sub_1A46900D8();
              v30 = objc_msgSend(v25, sel_objectIDWithUUID_, v29);

              sub_1A4497F2C((uint64_t)v7, type metadata accessor for ReminderUUID);
              sub_1A4691518();
              sub_1A4691548();
              sub_1A4691554();
              sub_1A4691524();
              v27 += v28;
              --v24;
            }
            while (v24);
            v15 = v37;
            swift_bridgeObjectRelease_n();
            a1 = v35;
            a2 = v36;
          }
          else
          {
            swift_bridgeObjectRelease();
            v15 = MEMORY[0x1E0DEE9D8];
          }
          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          v14 = 1;
        }
        else
        {
          if (qword_1EE71C110 != -1)
            swift_once();
          v33 = sub_1A4690318();
          __swift_project_value_buffer(v33, (uint64_t)qword_1EE720768);
          v18 = sub_1A469030C();
          v19 = sub_1A4690FF0();
          if (os_log_type_enabled(v18, v19))
          {
            v20 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v20 = 0;
            v21 = "Missing query items for edits. Failed to create SmartListPathSpecifier";
LABEL_23:
            _os_log_impl(&dword_1A442D000, v18, v19, v21, v20, 2u);
            MEMORY[0x1A85A0114](v20, -1, -1);
          }
LABEL_24:

          result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
          v15 = 0;
          v14 = -1;
        }
        break;
      default:
        result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
        goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = swift_bridgeObjectRelease();
LABEL_6:
    v15 = 0;
    v14 = 2;
  }
  *(_QWORD *)a2 = v15;
  *(_BYTE *)(a2 + 8) = v14;
  return result;
}

double sub_1A454F090@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;

  v4 = *(_QWORD *)(a1 + 8);
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    swift_bridgeObjectRelease();
LABEL_7:
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  v5 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1A446780C(0, 1);
  swift_bridgeObjectRelease();
  if (v5 != 1)
  {
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    goto LABEL_7;
  }
  v6 = sub_1A454FE20();
  if (v7)
  {
    v8 = v6;
    v9 = v7;
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    *a2 = v8;
    a2[1] = v9;
  }
  else
  {
    if (qword_1EE71C110 != -1)
      swift_once();
    v11 = sub_1A4690318();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EE720768);
    v12 = sub_1A469030C();
    v13 = sub_1A4690FF0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A442D000, v12, v13, "Missing query items. Failed to create SearchPathSpecifier", v14, 2u);
      MEMORY[0x1A85A0114](v14, -1, -1);
    }

    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = 0.0;
    *(_OWORD *)a2 = xmmword_1A469B0A0;
  }
  return result;
}

uint64_t sub_1A454F234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain_n();
  v5 = sub_1A4550088();
  v7 = v6;
  v8 = *(_QWORD *)(v4 + 16);
  result = swift_bridgeObjectRelease();
  if (v8)
  {
    if (!*(_QWORD *)(v4 + 16))
    {
      __break(1u);
      return result;
    }
    v10 = *(unsigned __int8 *)(v4 + 32);
    sub_1A446780C(0, 1);
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = swift_bridgeObjectRelease();
    v11 = v10 == 16;
    if (v10 == 15)
      v11 = 2;
  }
  else
  {
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = swift_bridgeObjectRelease();
    v11 = 0;
  }
  if (v7 == 1)
    v12 = 0;
  else
    v12 = v7;
  if (v7 == 1)
    v13 = 0;
  else
    v13 = v5;
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v12;
  *(_BYTE *)(a2 + 16) = v11;
  return result;
}

uint64_t sub_1A454F320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t result;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 8);
  if (!*(_QWORD *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    result = swift_bridgeObjectRelease();
LABEL_11:
    v13 = xmmword_1A4696740;
LABEL_12:
    *(_OWORD *)a2 = v13;
LABEL_13:
    *(_BYTE *)(a2 + 16) = 0;
    return result;
  }
  v5 = *(unsigned __int8 *)(v4 + 32);
  swift_bridgeObjectRetain();
  sub_1A446780C(0, 1);
  swift_bridgeObjectRelease();
  if (v5 != 1)
  {
    result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    goto LABEL_11;
  }
  v6 = sub_1A4550310();
  if (v7 == 1)
  {
LABEL_4:
    if (qword_1EE71C110 != -1)
      swift_once();
    v8 = sub_1A4690318();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EE720768);
    v9 = sub_1A469030C();
    v10 = sub_1A4690FF0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A442D000, v9, v10, "Missing query items. Failed to create TagsPathSpecifier", v11, 2u);
      MEMORY[0x1A85A0114](v11, -1, -1);
    }

    result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    v13 = xmmword_1A46A1040;
    goto LABEL_12;
  }
  v14 = v6;
  v15 = v7;
  if ((v6 & 1) != 0)
  {
    sub_1A455CF84(v6, v7);
    result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    goto LABEL_13;
  }
  if ((v6 & 0x100) != 0)
  {
    sub_1A455CF84(v6, v7);
    result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
    v13 = xmmword_1A4696750;
    goto LABEL_12;
  }
  if (!v7)
  {
    sub_1A455CF84(v6, 0);
    goto LABEL_4;
  }
  v16 = sub_1A446C748(v7);
  sub_1A455CF84(v14, v15);
  result = sub_1A4497F2C(a1, type metadata accessor for URLParseResult);
  v17 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v17;
  *(_BYTE *)(a2 + 16) = 1;
  return result;
}

uint64_t sub_1A454F560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[5];

  v3 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  v4 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v1 + v3))
    v5 = *(_QWORD *)(v1 + v3);
  else
    v5 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for QueryItems();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = type metadata accessor for InternalDecoder();
  v8 = (_QWORD *)swift_allocObject();
  v9 = MEMORY[0x1E0DEE9E0];
  v8[2] = v4;
  v8[3] = v9;
  v8[4] = v6;
  v12[3] = v7;
  v12[4] = sub_1A4436344((unint64_t *)&qword_1EE71E260, (uint64_t (*)(uint64_t))type metadata accessor for InternalDecoder, (uint64_t)&unk_1A4699F18);
  v12[0] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A4554624(v12, a1);
  v10 = type metadata accessor for ReminderIDQuery(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1A454F8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[5];

  v1 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  v2 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v0 + v1))
    v3 = *(_QWORD *)(v0 + v1);
  else
    v3 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for QueryItems();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v5 = type metadata accessor for InternalDecoder();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DEE9E0];
  v6[2] = v2;
  v6[3] = v7;
  v6[4] = v4;
  v9[3] = v5;
  v9[4] = sub_1A4436344((unint64_t *)&qword_1EE71E260, (uint64_t (*)(uint64_t))type metadata accessor for InternalDecoder, (uint64_t)&unk_1A4699F18);
  v9[0] = v6;
  swift_bridgeObjectRetain();
  return sub_1A4559C80(v9);
}

uint64_t sub_1A454FB58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[5];

  v1 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  v2 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v0 + v1))
    v3 = *(_QWORD *)(v0 + v1);
  else
    v3 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for QueryItems();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v5 = type metadata accessor for InternalDecoder();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DEE9E0];
  v6[2] = v2;
  v6[3] = v7;
  v6[4] = v4;
  v9[3] = v5;
  v9[4] = sub_1A4436344((unint64_t *)&qword_1EE71E260, (uint64_t (*)(uint64_t))type metadata accessor for InternalDecoder, (uint64_t)&unk_1A4699F18);
  v9[0] = v6;
  swift_bridgeObjectRetain();
  return sub_1A4559DCC(v9) & 0xFFFFFF01;
}

uint64_t sub_1A454FE20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLParseResult(0) + 32));
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = sub_1A45599F4(v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A4550088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLParseResult(0) + 32));
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = sub_1A4559B38(v2, &qword_1EE720950, &qword_1EE720958, &qword_1EE720960);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1A4550310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD v9[5];

  v1 = *(int *)(type metadata accessor for URLParseResult(0) + 32);
  v2 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v0 + v1))
    v3 = *(_QWORD *)(v0 + v1);
  else
    v3 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for QueryItems();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  v5 = type metadata accessor for InternalDecoder();
  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DEE9E0];
  v6[2] = v2;
  v6[3] = v7;
  v6[4] = v4;
  v9[3] = v5;
  v9[4] = sub_1A4436344((unint64_t *)&qword_1EE71E260, (uint64_t (*)(uint64_t))type metadata accessor for InternalDecoder, (uint64_t)&unk_1A4699F18);
  v9[0] = v6;
  swift_bridgeObjectRetain();
  return (unsigned __int16)sub_1A4559F1C(v9);
}

uint64_t sub_1A45505D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for URLParseResult(0) + 32));
  if (v1)
    v2 = v1;
  else
    v2 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = sub_1A4559B38(v2, &qword_1EE720970, &qword_1EE720978, &qword_1EE720980);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t REMNavigationSpecifier.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;

  v4 = type metadata accessor for REMNavigationSpecifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v10 = v9;
  if (v8 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v10 == v11)
    goto LABEL_13;
  v13 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_14;
  v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v16 = v15;
  if (v14 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v16 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v19 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v19 & 1) != 0)
  {
LABEL_14:

    *(_QWORD *)v7 = 1;
    v7[8] = 2;
    swift_storeEnumTagMultiPayload();
    sub_1A44683E0((uint64_t)v7, a2, type metadata accessor for REMNavigationSpecifier);
    v24 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v24, 1, v4);
  }
  v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v22 = v21;
  if (v20 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v22 == v23)
    goto LABEL_13;
  v26 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_14;
  v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v29 = v28;
  if (v27 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v29 == v30)
    goto LABEL_13;
  v31 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_14;
  v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v34 = v33;
  if (v32 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v34 == v35)
    goto LABEL_13;
  v36 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_14;
  v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v39 = v38;
  if (v37 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v39 == v40)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v41 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_14;
  if (qword_1EE71C110 != -1)
    swift_once();
  v42 = sub_1A4690318();
  __swift_project_value_buffer(v42, (uint64_t)qword_1EE720768);
  v43 = a1;
  v44 = sub_1A469030C();
  v45 = sub_1A4690FFC();
  v46 = v45;
  if (os_log_type_enabled(v44, v45))
  {
    v47 = swift_slowAlloc();
    v54 = v46;
    v48 = (uint8_t *)v47;
    v49 = swift_slowAlloc();
    v55 = (uint64_t)v43;
    v56 = v49;
    *(_DWORD *)v48 = 136315138;
    type metadata accessor for REMSmartListType(0);
    v50 = v43;
    v51 = sub_1A46908E8();
    v55 = sub_1A4431120(v51, v52, &v56);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v44, (os_log_type_t)v54, "Attempt to create URL for smart list type %s", v48, 0xCu);
    v24 = 1;
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v49, -1, -1);
    MEMORY[0x1A85A0114](v48, -1, -1);

  }
  else
  {

    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v24, 1, v4);
}

void REMNavigationSpecifier.url.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(_QWORD);
  char *v83;
  _QWORD v84[32];
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;

  v96 = a1;
  v87 = sub_1A46900FC();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v89 = (char *)v84 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  MEMORY[0x1E0C80A78](v85);
  v88 = (char *)v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ReminderIDQuery(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v92 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v84[29] = (char *)v84 - v7;
  MEMORY[0x1E0C80A78](v6);
  v84[28] = (char *)v84 - v8;
  v91 = sub_1A468FF7C();
  v90 = *(_QWORD *)(v91 - 8);
  v9 = MEMORY[0x1E0C80A78](v91);
  v84[30] = (char *)v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v84[31] = (char *)v84 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v84[12] = (char *)v84 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v84[13] = (char *)v84 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v84[10] = (char *)v84 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v84[11] = (char *)v84 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v84[8] = (char *)v84 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v84[9] = (char *)v84 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v84[6] = (char *)v84 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v84[7] = (char *)v84 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v84[3] = (char *)v84 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v84[5] = (char *)v84 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v84[2] = (char *)v84 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v84[4] = (char *)v84 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v84[0] = (char *)v84 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v84[1] = (char *)v84 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v84[22] = (char *)v84 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v84[23] = (char *)v84 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v84[26] = (char *)v84 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v84[27] = (char *)v84 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v84[16] = (char *)v84 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v84[17] = (char *)v84 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v84[24] = (char *)v84 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v84[25] = (char *)v84 - v56;
  v57 = MEMORY[0x1E0C80A78](v55);
  v84[14] = (char *)v84 - v58;
  v59 = MEMORY[0x1E0C80A78](v57);
  v84[15] = (char *)v84 - v60;
  v61 = MEMORY[0x1E0C80A78](v59);
  v84[20] = (char *)v84 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v84[21] = (char *)v84 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v84[18] = (char *)v84 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v84[19] = (char *)v84 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v70 = MEMORY[0x1E0C80A78](v69);
  v71 = MEMORY[0x1E0C80A78](v70);
  v72 = MEMORY[0x1E0C80A78](v71);
  v73 = MEMORY[0x1E0C80A78](v72);
  v74 = MEMORY[0x1E0C80A78](v73);
  v75 = MEMORY[0x1E0C80A78](v74);
  MEMORY[0x1E0C80A78](v75);
  v76 = type metadata accessor for REMNavigationSpecifier(0);
  v77 = MEMORY[0x1E0C80A78](v76);
  v93 = (char *)v84 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = MEMORY[0x1E0C80A78](v77);
  v95 = (char *)v84 - v80;
  MEMORY[0x1E0C80A78](v79);
  sub_1A4497EE8(v97, (uint64_t)v84 - v81, v82);
  v94 = v76;
  v83 = (char *)&loc_1A45514DC + *((int *)qword_1A4552480 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

void sub_1A45514EC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  int v3;
  int v4;
  uint64_t v5;
  id v6;
  int v7;
  int v8;
  id v9;
  uint64_t v10;
  int v11;
  void *v12;

  v2 = *(void **)v0;
  if (*(_BYTE *)(v0 + 8))
  {
    if (*(_BYTE *)(v0 + 8) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1A4552508();
      v4 = v3;
      v5 = sub_1A455A170((unint64_t)v2);
      sub_1A455A3FC(v2, 1);
      sub_1A4552D10(v4, (uint64_t)&unk_1E4C116F0, v5, *(_QWORD *)(v1 - 216));
      sub_1A455A3FC(v2, 1);
    }
    else
    {
      if (v2)
      {
        sub_1A4552508();
        if (v2 == (void *)1)
          v12 = &unk_1E4C11678;
        else
          v12 = &unk_1E4C116A0;
      }
      else
      {
        sub_1A4552508();
        v12 = (void *)MEMORY[0x1E0DEE9D8];
      }
      sub_1A4552744(v11, (uint64_t)v12, *(_QWORD *)(v1 - 216));
    }
  }
  else
  {
    v6 = v2;
    sub_1A4552508();
    v8 = v7;
    v9 = objc_msgSend(v6, sel_uuid);
    v10 = *(_QWORD *)(v1 - 248);
    sub_1A46900F0();
    sub_1A455A3FC(v2, 0);

    sub_1A45529F0(v8, (uint64_t)&unk_1E4C116C8, v10, *(_QWORD *)(v1 - 216));
    sub_1A455A3FC(v2, 0);
    sub_1A455A3FC(v2, 0);
  }
}

void sub_1A4552508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for REMNavigationSpecifier(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1A4497EE8(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1A4552594 + 4 * byte_1A469F82D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A4552594()
{
  uint64_t v0;

  sub_1A4497F2C(v0, type metadata accessor for REMNavigationSpecifier);
  return 0;
}

uint64_t sub_1A4552744@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  char v23;

  v19 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A468FF7C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v19 - v13;
  v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v21 = v15;
  sub_1A4690984();
  v22 = a1;
  sub_1A4553C00(a1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A468FF58();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v7, &qword_1ED243160);
    v16 = (void *)objc_opt_self();
    v20 = 0;
    v21 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v23 = v22;
    sub_1A4691590();
    v17 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_internalErrorWithDebugDescription_, v17, v19);

    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    sub_1A4555DDC((uint64_t)v12, a2, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
}

uint64_t sub_1A45529F0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  char v29;

  v24 = a2;
  v25 = a3;
  v23 = a4;
  v5 = type metadata accessor for ReminderIDQuery(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A468FF7C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v23 - v16;
  v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v27 = v18;
  sub_1A4690984();
  v28 = a1;
  sub_1A4553C00(a1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A468FF58();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v10, &qword_1ED243160);
    v19 = (void *)objc_opt_self();
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v29 = v28;
    sub_1A4691590();
    v20 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_internalErrorWithDebugDescription_, v20, v23);

    swift_willThrow();
    return sub_1A4497F2C(v25, type metadata accessor for ReminderIDQuery);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    v22 = v25;
    sub_1A4497EE8(v25, (uint64_t)v7, type metadata accessor for ReminderIDQuery);
    sub_1A45572C8((uint64_t)v15, v24, (uint64_t)v7, v23);
    sub_1A4497F2C(v22, type metadata accessor for ReminderIDQuery);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

uint64_t sub_1A4552D10@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;
  char v26;

  v22 = a3;
  v21 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FF7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  v23 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v24 = v16;
  sub_1A4690984();
  v25 = a1;
  sub_1A4553C00(a1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A468FF58();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v8, &qword_1ED243160);
    v17 = (void *)objc_opt_self();
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v26 = v25;
    sub_1A4691590();
    v18 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v18);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1A4556E30((uint64_t)v13, a2, v22, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_1A4552FCC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  char v27;

  v23 = a4;
  v21 = a5;
  v22 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A468FF7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v25 = v17;
  sub_1A4690984();
  v26 = a1;
  sub_1A4553C00(a1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A468FF58();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v9, &qword_1ED243160);
    v18 = (void *)objc_opt_self();
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v27 = v26;
    sub_1A4691590();
    v19 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_internalErrorWithDebugDescription_, v19, v21, v22);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_1A45569D0((uint64_t)v14, a2, v22, v23, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

uint64_t sub_1A4553288@<X0>(int a1@<W0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  void *v18;
  void *v19;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  char v27;

  v23 = a4;
  v22 = a3;
  v21 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A468FF7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v25 = v17;
  sub_1A4690984();
  v26 = a1;
  sub_1A4553C00(a1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A468FF58();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v9, &qword_1ED243160);
    v18 = (void *)objc_opt_self();
    v24 = 0;
    v25 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v27 = v26;
    sub_1A4691590();
    v19 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v18, sel_internalErrorWithDebugDescription_, v19, v21);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_1A4556608(v14, a2, v22, v23, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

uint64_t sub_1A455354C@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unsigned __int8 v27;

  v22 = a3;
  v23 = a2;
  v24 = a4;
  v21 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FF7C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  v25 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v26 = v16;
  sub_1A4690984();
  sub_1A4553C00(a1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A468FF58();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1A445404C((uint64_t)v8, &qword_1ED243160);
    v17 = (void *)objc_opt_self();
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v27 = a1;
    sub_1A4691590();
    v18 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_internalErrorWithDebugDescription_, v18);

    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    sub_1A45561C0((uint64_t)v13, v23, v22, v24, &qword_1EE720900, &qword_1EE720908, &qword_1EE720910, (uint64_t)&type metadata for NewListQuery.CodingKeys, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

uint64_t sub_1A4553820@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a4;
  v22 = a6;
  v11 = sub_1A468FF7C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v21 - v16;
  sub_1A4552744(a1, MEMORY[0x1E0DEE9D8], (uint64_t)&v21 - v16);
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = sub_1A46900FC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a2, v18);
  }
  else
  {
    v21 = a2;
    sub_1A46900CC();
    sub_1A468FEE0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    sub_1A45561C0((uint64_t)v15, a3, v23, a5, &qword_1EE7208D8, &qword_1EE7208E0, &qword_1EE7208E8, (uint64_t)&type metadata for PublicTemplateQuery.CodingKeys, v22);
    v20 = sub_1A46900FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v21, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

uint64_t REMNavigationSpecifier.AccountPathSpecifier.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t static REMNavigationSpecifier.AccountPathSpecifier.== infix(_:_:)()
{
  return 1;
}

void static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 2;
  *(_BYTE *)(a1 + 2) = 0;
}

uint64_t static REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.== infix(_:_:)(__int16 *a1, __int16 *a2)
{
  __int16 v2;
  __int16 v3;

  v2 = *a1;
  v3 = *a2;
  if (*a1 == 2)
    return *a2 == 2;
  if (*a2 == 2 || ((v2 & 1) == 0) == (v3 & 1))
    return 0;
  return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

uint64_t sub_1A4553A74(__int16 *a1, _WORD *a2)
{
  __int16 v2;
  int v3;

  v2 = *a1;
  v3 = (unsigned __int16)*a2;
  if (*a1 == 2)
    return *a2 == 2;
  if (*a2 == 2 || ((((v2 & 1) == 0) ^ v3) & 1) == 0)
    return 0;
  return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
}

uint64_t REMNavigationSpecifier.SectionPathSpecifier.hash(into:)()
{
  return sub_1A4691C98();
}

BOOL static REMNavigationSpecifier.SectionPathSpecifier.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t static REMNavigationSpecifier.RootPathSpecifier.== infix(_:_:)()
{
  return 1;
}

uint64_t REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A4553B5C + 4 * byte_1A469F840[*(unsigned __int8 *)(a1 + 8)]))();
}

void sub_1A4553B5C(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = -1;
}

uint64_t *REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;

  v2 = *result;
  v3 = *((unsigned __int8 *)result + 8);
  if (*((_BYTE *)result + 8) && v3 != 1)
  {
    v3 = 0x202FFu >> (8 * v2);
    v2 = qword_1A46A1020[v2];
  }
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

uint64_t sub_1A4553C00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4553C3C + 4 * byte_1A469F844[a1]))(0x63636164636D6572, 0xEC000000746E756FLL);
}

uint64_t sub_1A4553C3C()
{
  return 0x73696C64636D6572;
}

uint64_t sub_1A4553C5C()
{
  return 0x616D7364636D6572;
}

uint64_t sub_1A4553C80()
{
  return 0x6D657264636D6572;
}

unint64_t sub_1A4553CA4()
{
  return 0xD000000000000010;
}

unint64_t sub_1A4553CC0()
{
  return 0xD000000000000015;
}

uint64_t sub_1A4553CE4()
{
  return 1953460082;
}

uint64_t sub_1A4553CF4()
{
  return 0x7961646F74;
}

uint64_t sub_1A4553D08()
{
  return 0x656C756465686373;
}

uint64_t sub_1A4553DCC()
{
  return 0x7473696C77656ELL;
}

void sub_1A4553DE4()
{
  JUMPOUT(0x1A4553DF8);
}

uint64_t sub_1A4553E04()
{
  return 0x657463696C627570;
}

uint64_t sub_1A4553E28(unsigned __int8 a1)
{
  return ((uint64_t (*)())((char *)sub_1A4553E48 + 4 * byte_1A469F857[a1]))();
}

uint64_t sub_1A4553E48()
{
  return 0x73746E65746E6F63;
}

uint64_t sub_1A4553E60()
{
  return 0x736C6961746564;
}

unint64_t sub_1A4553E78()
{
  return 0xD000000000000010;
}

uint64_t sub_1A4553E94()
{
  return 0x6E696D657277656ELL;
}

uint64_t sub_1A4553EB4()
{
  return 0x6E61726165707061;
}

uint64_t sub_1A4553ED0()
{
  return 0x5F65746164657564;
}

uint64_t sub_1A4553EF0()
{
  return 0x65746164657564;
}

uint64_t sub_1A4553F08()
{
  return 1936154996;
}

uint64_t sub_1A4553F18()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A4553F30()
{
  return 0x6165706572646E65;
}

uint64_t sub_1A4553F4C()
{
  return 0x736B736174627573;
}

uint64_t sub_1A4553F64()
{
  return 0x656D6E6769737361;
}

uint64_t sub_1A4553F84()
{
  return 0x7463656C6573;
}

unint64_t sub_1A4553F98()
{
  return 0xD000000000000013;
}

uint64_t sub_1A4553FB8()
{
  return 0x6D736D6F74737563;
}

uint64_t sub_1A4553FDC()
{
  return 0x6C797265636F7267;
}

uint64_t sub_1A4554000()
{
  return 0x7374696465;
}

uint64_t sub_1A4554014(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45540B4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A4553C00);
}

uint64_t sub_1A4554020(uint64_t a1, uint64_t a2)
{
  return sub_1A455414C(a1, a2, (void (*)(uint64_t))sub_1A4553C00);
}

uint64_t sub_1A455402C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45541BC(a1, a2, a3, (void (*)(_QWORD))sub_1A4553C00);
}

uint64_t sub_1A4554038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4554208(a1, a2, a3, (void (*)(uint64_t))sub_1A4553C00);
}

uint64_t sub_1A4554044@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A455A0D0();
  *a1 = result;
  return result;
}

uint64_t sub_1A4554070@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A4553C00(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A4554098(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FD80;
}

uint64_t sub_1A45540A8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45540B4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1A4553E28);
}

uint64_t sub_1A45540B4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  if (v7 == a5(v6) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1A4554140(uint64_t a1, uint64_t a2)
{
  return sub_1A455414C(a1, a2, (void (*)(uint64_t))sub_1A4553E28);
}

uint64_t sub_1A455414C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;

  v5 = *v3;
  sub_1A4691C8C();
  a3(v5);
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45541B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45541BC(a1, a2, a3, (void (*)(_QWORD))sub_1A4553E28);
}

uint64_t sub_1A45541BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unsigned __int8 *v4;

  a4(*v4);
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45541FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4554208(a1, a2, a3, (void (*)(uint64_t))sub_1A4553E28);
}

uint64_t sub_1A4554208(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;

  v6 = *v4;
  sub_1A4691C8C();
  a4(v6);
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4554268@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A455A120();
  *a1 = result;
  return result;
}

uint64_t sub_1A4554294@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A4553E28(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1A45542BC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FAC0;
}

uint64_t sub_1A45542CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReminderUUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46900C0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A445404C((uint64_t)v4, &qword_1ED243170);
    v13 = 1;
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v8, v4, v5);
    v14(v12, v8, v5);
    sub_1A44683E0((uint64_t)v12, a1, type metadata accessor for ReminderUUID);
    v13 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v13, 1, v9);
}

uint64_t sub_1A4554458@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_1A46900FC();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720830);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReminderUUID(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CCE0();
  sub_1A4691D28();
  if (!v2)
  {
    sub_1A4436344(&qword_1ED243F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_1A44683E0((uint64_t)v11, v15, type metadata accessor for ReminderUUID);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4554624@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for ReminderUUID(0);
  MEMORY[0x1E0C80A78](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720808);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReminderIDQuery(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CC9C();
  sub_1A4691D28();
  if (!v2)
  {
    sub_1A4436344(&qword_1EE720818, type metadata accessor for ReminderUUID, (uint64_t)&unk_1A46A00D8);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_1A44683E0(v15, (uint64_t)v11, type metadata accessor for ReminderUUID);
    sub_1A44683E0((uint64_t)v11, v13, type metadata accessor for ReminderIDQuery);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45547F0()
{
  return 1684632949;
}

uint64_t sub_1A4554800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A4554884()
{
  sub_1A455CCE0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45548AC()
{
  sub_1A455CCE0();
  return sub_1A4691DC4();
}

uint64_t sub_1A45548D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4554458(a1, a2);
}

uint64_t sub_1A45548E8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720840);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CCE0();
  sub_1A4691D40();
  sub_1A46900FC();
  sub_1A4436344(&qword_1ED243D00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A45549FC()
{
  return sub_1A46900CC();
}

uint64_t sub_1A4554A20()
{
  sub_1A455CE78();
  return sub_1A4691DB8();
}

uint64_t sub_1A4554A48()
{
  sub_1A455CE78();
  return sub_1A4691DC4();
}

uint64_t sub_1A4554A70(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A4554A94(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FFC0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CE78();
  sub_1A4691D40();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A4554B58()
{
  return sub_1A4505150();
}

uint64_t sub_1A4554B64()
{
  return sub_1A4690948();
}

uint64_t sub_1A4554B70()
{
  return sub_1A45051D4();
}

uint64_t sub_1A4554B7C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A4554B88(_QWORD *a1@<X8>)
{
  *a1 = 113;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1A4554B98()
{
  return 113;
}

uint64_t sub_1A4554BA4@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A4554BB0()
{
  sub_1A455CDAC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4554BD8()
{
  sub_1A455CDAC();
  return sub_1A4691DC4();
}

uint64_t sub_1A4554C00@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720938);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CDAC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_1A4691788();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A4554D24(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4555964(a1, a2, a3, &qword_1EE7208A8, (void (*)(void))sub_1A455CDAC, (uint64_t)&type metadata for SearchQuery.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED0F0]);
}

uint64_t sub_1A4554D58()
{
  return sub_1A4505150();
}

uint64_t sub_1A4554D70()
{
  return sub_1A4690948();
}

uint64_t sub_1A4554D88()
{
  return sub_1A45051D4();
}

uint64_t sub_1A4554DA0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A4554DAC(_QWORD *a1@<X8>)
{
  *a1 = 0x7265646E696D6572;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1A4554DC8()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A4554DE0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A4554DEC()
{
  sub_1A455CC9C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4554E14()
{
  sub_1A455CC9C();
  return sub_1A4691DC4();
}

uint64_t sub_1A4554E3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A4554624(a1, a2);
}

uint64_t sub_1A4554E50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720820);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CC9C();
  sub_1A4691D40();
  type metadata accessor for ReminderUUID(0);
  sub_1A4436344(&qword_1EE720828, type metadata accessor for ReminderUUID, (uint64_t)&unk_1A46A00B0);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A4554F60(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720868);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CD24();
  sub_1A4691D40();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720880);
  sub_1A455CF00(&qword_1EE720888, &qword_1EE720828, (uint64_t)&unk_1A46A00B0, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A4555084()
{
  return sub_1A4505150();
}

uint64_t sub_1A45550A0()
{
  return sub_1A4690948();
}

uint64_t sub_1A45550BC()
{
  return sub_1A45051D4();
}

uint64_t sub_1A45550D8@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A45550E4(_QWORD *a1@<X8>)
{
  *a1 = 0x7265646E696D6572;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_1A4555104()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A4555120@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A455512C()
{
  sub_1A455CD24();
  return sub_1A4691DB8();
}

uint64_t sub_1A4555154()
{
  sub_1A455CD24();
  return sub_1A4691DC4();
}

_QWORD *sub_1A455517C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1A4559C80(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A45551A4(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A4554F60(a1, *v1);
}

uint64_t sub_1A45551BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7208C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CDF0();
  sub_1A4691D40();
  v14 = 0;
  sub_1A4691824();
  if (!v3)
  {
    v13 = 1;
    sub_1A4691824();
    v11[1] = a3;
    v12 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A44351D8(&qword_1ED23EAB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A455533C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720898);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CD68();
  sub_1A4691D40();
  v8[15] = 0;
  sub_1A4691860();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A4691824();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A4555450()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701736302;
  if (*v0 != 1)
    v1 = 0x736C6562616CLL;
  if (*v0)
    return v1;
  else
    return 7105633;
}

uint64_t sub_1A4555498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A455DDF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45554BC()
{
  sub_1A455CDF0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45554E4()
{
  sub_1A455CDF0();
  return sub_1A4691DC4();
}

uint64_t sub_1A455550C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1A4559F1C(a1);
  if (!v2)
  {
    *(_WORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1A4555540(_QWORD *a1)
{
  unsigned __int16 *v1;

  return sub_1A45551BC(a1, *v1, *((_QWORD *)v1 + 1));
}

uint64_t sub_1A455555C()
{
  return sub_1A4505150();
}

uint64_t sub_1A4555578()
{
  return sub_1A4690948();
}

uint64_t sub_1A4555594()
{
  return sub_1A45051D4();
}

uint64_t sub_1A45555B0@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A45555BC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x80000001A46BC390;
}

unint64_t sub_1A45555DC()
{
  return 0xD000000000000012;
}

uint64_t sub_1A45555F8@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A4555604()
{
  sub_1A455CE34();
  return sub_1A4691DB8();
}

uint64_t sub_1A455562C()
{
  sub_1A455CE34();
  return sub_1A4691DC4();
}

uint64_t sub_1A4555654@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A4555800(a1, &qword_1EE720970, (void (*)(void))sub_1A455CE34, a2);
}

uint64_t sub_1A4555680(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4555964(a1, a2, a3, &qword_1EE7208D8, (void (*)(void))sub_1A455CE34, (uint64_t)&type metadata for PublicTemplateQuery.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED090]);
}

uint64_t sub_1A45556B4()
{
  return sub_1A4505150();
}

uint64_t sub_1A45556D8()
{
  return sub_1A4690948();
}

uint64_t sub_1A45556FC()
{
  return sub_1A45051D4();
}

uint64_t sub_1A4555720@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A455572C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "new_list_name");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1A4555754()
{
  return 0x7473696C5F77656ELL;
}

uint64_t sub_1A4555778@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A4555784()
{
  sub_1A455CEBC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45557AC()
{
  sub_1A455CEBC();
  return sub_1A4691DC4();
}

uint64_t sub_1A45557D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A4555800(a1, &qword_1EE720950, (void (*)(void))sub_1A455CEBC, a2);
}

uint64_t sub_1A4555800@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A4691D28();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v17;
  v11 = v18;
  v12 = sub_1A469174C();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v11);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v12;
  v10[1] = v14;
  return result;
}

uint64_t sub_1A4555930(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4555964(a1, a2, a3, &qword_1EE720900, (void (*)(void))sub_1A455CEBC, (uint64_t)&type metadata for NewListQuery.CodingKeys, (void (*)(uint64_t, uint64_t))MEMORY[0x1E0DED090]);
}

uint64_t sub_1A4555964(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void);
  void (*v18)(uint64_t, uint64_t);

  v18 = a7;
  v17 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v7[1];
  v16 = *v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v17();
  sub_1A4691D40();
  v18(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A4555A60(char *a1, char *a2)
{
  return sub_1A466C374(*a1, *a2);
}

uint64_t sub_1A4555A6C()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4555AF8()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4555B60()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4555BE8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A4555C44(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6574656C706D6F63;
  if (*v1)
    v2 = 0x79616C5F7473696CLL;
  v3 = 0xE900000000000064;
  if (*v1)
    v3 = 0xEB0000000074756FLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A4555C90()
{
  _BYTE *v0;

  if (*v0)
    return 0x79616C5F7473696CLL;
  else
    return 0x6574656C706D6F63;
}

uint64_t sub_1A4555CD8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1A4555D38()
{
  sub_1A455CD68();
  return sub_1A4691DB8();
}

uint64_t sub_1A4555D60()
{
  sub_1A455CD68();
  return sub_1A4691DC4();
}

uint64_t sub_1A4555D88@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A4559DCC(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result);
  }
  return result;
}

uint64_t sub_1A4555DBC(_QWORD *a1)
{
  return sub_1A455533C(a1);
}

uint64_t sub_1A4555DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FFC0);
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A468FF7C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v23 = a1;
  v12(v11, a1, v8);
  if (*(_QWORD *)(a2 + 16))
  {
    v18[1] = "ks";
    v18[2] = "plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = MEMORY[0x1E0DEE9D8];
  v14 = (uint64_t *)(v13 + 16);
  v22 = v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FF58);
  sub_1A443AD20(&qword_1ED23FF50, &qword_1ED23FF58, (uint64_t)&unk_1A469A29C);
  sub_1A46918B4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
  swift_beginAccess();
  v15 = *v14;
  swift_bridgeObjectRetain();
  swift_release();
  sub_1A4557B14(v15, v21);
  swift_bridgeObjectRelease();
  v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v16(v23, v8);
  return ((uint64_t (*)(char *, uint64_t))v16)(v11, v8);
}

uint64_t sub_1A45561C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, unint64_t *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  unint64_t *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v31 = a6;
  v32 = a8;
  v30 = a7;
  v33 = a3;
  v38 = a4;
  v27 = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v35 = *(_QWORD *)(v11 - 8);
  v36 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A468FF7C();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v17;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v40 = a1;
  v18(v16, a1, v14);
  if (*(_QWORD *)(a2 + 16))
  {
    v28 = "ks";
    v29 = "plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = MEMORY[0x1E0DEE9D8];
  v39 = v19;
  swift_retain();
  v20 = v31;
  __swift_instantiateConcreteTypeFromMangledName(v31);
  sub_1A443AD20(v30, v20, (uint64_t)&unk_1A469A29C);
  sub_1A46918B4();
  v21 = v34;
  v22 = v36;
  sub_1A4691818();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v22);
  if (v21)
  {
    swift_release();
  }
  else
  {
    swift_beginAccess();
    v23 = *(_QWORD *)(v19 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A4557B14(v23, v27);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v24 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v24(v40, v14);
  return ((uint64_t (*)(char *, uint64_t))v24)(v16, v14);
}

uint64_t sub_1A4556608@<X0>(char *a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t);
  uint64_t v18[2];
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[5];
  char *v23;

  v21 = a4;
  v19 = a3;
  v18[0] = a5;
  v7 = sub_1A468FF7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23 = a1;
  v11(v10, a1, v7);
  if (*(_QWORD *)(a2 + 16))
  {
    v18[1] = (uint64_t)"plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for InternalEncoder();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = MEMORY[0x1E0DEE9D8];
  v22[3] = v12;
  v22[4] = sub_1A4436344((unint64_t *)&qword_1EE71E4F0, (uint64_t (*)(uint64_t))type metadata accessor for InternalEncoder, (uint64_t)&unk_1A469A1C0);
  v22[0] = v13;
  swift_retain();
  v14 = v20;
  sub_1A45551BC(v22, v19, v21);
  if (v14)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A4557B14(v15, v18[0]);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v16 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  v16(v23, v7);
  return v16(v10, v7);
}

uint64_t sub_1A45569D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v20[4];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v25 = a4;
  v20[3] = a3;
  v20[0] = a5;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7208A8);
  v21 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FF7C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v12;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v27 = a1;
  v13(v11, a1, v9);
  if (*(_QWORD *)(a2 + 16))
  {
    v20[1] = (uint64_t)"ks";
    v20[2] = (uint64_t)"plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9D8];
  v26 = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7208B0);
  sub_1A443AD20(&qword_1EE7208B8, &qword_1EE7208B0, (uint64_t)&unk_1A469A29C);
  sub_1A46918B4();
  v15 = v22;
  v16 = v23;
  sub_1A4691854();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v16);
  if (v15)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    v17 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A4557B14(v17, v20[0]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
  v18(v27, v9);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v9);
}

uint64_t sub_1A4556E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v21 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720868);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FF7C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = v12;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v30 = a1;
  v13(v11, a1, v9);
  if (*(_QWORD *)(a2 + 16))
  {
    v22 = "ks";
    v23 = "plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9D8];
  v29 = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720870);
  sub_1A443AD20(&qword_1EE720878, &qword_1EE720870, (uint64_t)&unk_1A469A29C);
  sub_1A46918B4();
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720880);
  sub_1A455CF00(&qword_1EE720888, &qword_1EE720828, (uint64_t)&unk_1A46A00B0, MEMORY[0x1E0DEAF10]);
  v15 = v26;
  v16 = v24;
  sub_1A4691890();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v15);
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    v17 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A4557B14(v17, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v18 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v18(v30, v9);
  return ((uint64_t (*)(char *, uint64_t))v18)(v11, v9);
}

uint64_t sub_1A45572C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v29 = a3;
  v22 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720820);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A468FF7C();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v12;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v31 = a1;
  v13(v11, a1, v9);
  if (*(_QWORD *)(a2 + 16))
  {
    v23 = "ks";
    v24 = "plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for InternalEncoder();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = MEMORY[0x1E0DEE9D8];
  v30 = v14;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720850);
  sub_1A443AD20(&qword_1EE720858, &qword_1EE720850, (uint64_t)&unk_1A469A29C);
  sub_1A46918B4();
  type metadata accessor for ReminderUUID(0);
  sub_1A4436344(&qword_1EE720828, type metadata accessor for ReminderUUID, (uint64_t)&unk_1A46A00B0);
  v15 = v29;
  v16 = v27;
  v17 = v25;
  sub_1A4691890();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v16);
  if (v17)
  {
    swift_release();
  }
  else
  {
    swift_beginAccess();
    v18 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A4557B14(v18, v22);
    swift_bridgeObjectRelease();
  }
  sub_1A4497F2C(v15, type metadata accessor for ReminderIDQuery);
  v19 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  v19(v31, v9);
  return ((uint64_t (*)(char *, uint64_t))v19)(v11, v9);
}

uint64_t sub_1A4557750@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  _QWORD v22[5];
  char *v23;

  v20 = a3;
  v18 = a4;
  v6 = sub_1A468FF7C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v23 = a1;
  v10(v9, a1, v6);
  if (*(_QWORD *)(a2 + 16))
  {
    v19 = "plate";
    __asm { BR              X8 }
  }
  swift_bridgeObjectRelease();
  v11 = type metadata accessor for InternalEncoder();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  v22[3] = v11;
  v22[4] = sub_1A4436344((unint64_t *)&qword_1EE71E4F0, (uint64_t (*)(uint64_t))type metadata accessor for InternalEncoder, (uint64_t)&unk_1A469A1C0);
  v22[0] = v12;
  swift_retain();
  v13 = v21;
  sub_1A455533C(v22);
  if (v13)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1A4557B14(v14, v18);
    swift_bridgeObjectRelease();
  }
  v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  v15(v23, v6);
  return v15(v9, v6);
}

uint64_t sub_1A4557B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  unint64_t v27;
  unint64_t v28;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242E50);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A468FC7C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    sub_1A468FC58();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_1A445404C((uint64_t)v11, &qword_1ED242E50);
      v16 = (void *)objc_opt_self();
      v27 = 0;
      v28 = 0xE000000000000000;
      sub_1A4691410();
      swift_bridgeObjectRelease();
      v27 = 0xD000000000000028;
      v28 = 0x80000001A46BFF60;
      sub_1A468FF7C();
      sub_1A4436344(&qword_1EE720000, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      v17 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_internalErrorWithDebugDescription_, v17);

      return swift_willThrow();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      v20 = sub_1A468FC40();
      v21 = MEMORY[0x1E0DEE9D8];
      if (v20)
        v21 = v20;
      v27 = v21;
      v22 = swift_bridgeObjectRetain();
      sub_1A4458EBC(v22);
      sub_1A468FC4C();
      sub_1A468FC64();
      v23 = sub_1A468FF7C();
      v24 = *(_QWORD *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v8, 1, v23) == 1)
      {
        sub_1A445404C((uint64_t)v8, &qword_1ED243160);
        v25 = (void *)objc_opt_self();
        v27 = 0;
        v28 = 0xE000000000000000;
        sub_1A4691410();
        swift_bridgeObjectRelease();
        v27 = 0xD000000000000025;
        v28 = 0x80000001A46BFF90;
        sub_1A4436344(&qword_1EE720860, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], MEMORY[0x1E0CAE8A0]);
        sub_1A46918D8();
        sub_1A4690984();
        swift_bridgeObjectRelease();
        v26 = (void *)sub_1A469087C();
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_internalErrorWithDebugDescription_, v26);

        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(a2, v8, v23);
      }
    }
  }
  else
  {
    v19 = sub_1A468FF7C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a2, v3, v19);
  }
}

uint64_t type metadata accessor for ReminderIDQuery(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED23FEB8);
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO010SearchPathE0O2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_1A4691A40();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO010TaggedPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char v8;
  _QWORD v10[2];
  char v11;
  _QWORD v12[2];
  char v13;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if (*(_QWORD *)a1 != 2)
  {
    if (v6 != 2)
    {
      v12[0] = *(_QWORD *)a1;
      v12[1] = v2;
      v13 = v4;
      v10[0] = v6;
      v10[1] = v5;
      v11 = v7;
      sub_1A44F34BC(v6);
      sub_1A44F34BC(v3);
      sub_1A44F34BC(v6);
      sub_1A44F34BC(v3);
      v8 = _s19ReminderKitInternal24REMHashtagLabelSpecifierO2eeoiySbAC_ACtFZ_0((uint64_t)v12, (uint64_t)v10);
      sub_1A455A3EC(v3);
      sub_1A455A3EC(v6);
      sub_1A455A3EC(v6);
      sub_1A455A3EC(v3);
      return v8 & 1;
    }
    goto LABEL_5;
  }
  if (v6 != 2)
  {
LABEL_5:
    sub_1A44F34BC(*(_QWORD *)a2);
    sub_1A44F34BC(v3);
    sub_1A455A3EC(v3);
    sub_1A455A3EC(v6);
    v8 = 0;
    return v8 & 1;
  }
  sub_1A455A3EC(2uLL);
  sub_1A455A3EC(2uLL);
  v8 = 1;
  return v8 & 1;
}

BOOL _s19ReminderKitInternal22REMNavigationSpecifierO011NewListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  char v16;
  char v17;
  char v18;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (*(_BYTE *)(a2 + 16))
      goto LABEL_22;
    if (v3)
    {
      if (v6)
      {
        if (v2 == v5 && v3 == v6)
        {
          sub_1A44FC4AC(*(_QWORD *)a1, v3, 0);
          sub_1A44FC4AC(v2, v3, 0);
          sub_1A44FC4D4(v2, v3, 0);
          v9 = v2;
          v10 = v3;
          v11 = 0;
LABEL_21:
          sub_1A44FC4D4(v9, v10, v11);
          return 1;
        }
        v18 = sub_1A4691A40();
        sub_1A44FC4AC(v5, v6, 0);
        sub_1A44FC4AC(v2, v3, 0);
        sub_1A44FC4D4(v2, v3, 0);
        sub_1A44FC4D4(v5, v6, 0);
        return (v18 & 1) != 0;
      }
      sub_1A44FC4AC(*(_QWORD *)a2, 0, 0);
      sub_1A44FC4AC(v2, v3, 0);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A44FC4AC(v5, v6, 0);
      sub_1A44FC4AC(v2, 0, 0);
      sub_1A44FC4D4(v2, 0, 0);
      sub_1A44FC4D4(v5, v6, 0);
      if (!v6)
        return 1;
    }
    sub_1A44FC4D4(v2, v3, 0);
    v12 = v5;
    v13 = v6;
    v14 = 0;
    goto LABEL_23;
  }
  if (v4 != 1)
  {
    if (v7 != 2)
      goto LABEL_22;
    if (v3)
    {
      if (v6)
      {
        if (v2 == v5 && v3 == v6)
        {
          sub_1A44FC4AC(*(_QWORD *)a1, v3, 2u);
          sub_1A44FC4AC(v2, v3, 2u);
          sub_1A44FC4D4(v2, v3, 2u);
          v9 = v2;
          v10 = v3;
          v11 = 2;
          goto LABEL_21;
        }
        v17 = sub_1A4691A40();
        sub_1A44FC4AC(v5, v6, 2u);
        sub_1A44FC4AC(v2, v3, 2u);
        sub_1A44FC4D4(v2, v3, 2u);
        sub_1A44FC4D4(v5, v6, 2u);
        return (v17 & 1) != 0;
      }
      sub_1A44FC4AC(*(_QWORD *)a2, 0, 2u);
      sub_1A44FC4AC(v2, v3, 2u);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A44FC4AC(v5, v6, 2u);
      sub_1A44FC4AC(v2, 0, 2u);
      sub_1A44FC4D4(v2, 0, 2u);
      sub_1A44FC4D4(v5, v6, 2u);
      if (!v6)
        return 1;
    }
    sub_1A44FC4D4(v2, v3, 2u);
    v12 = v5;
    v13 = v6;
    v14 = 2;
    goto LABEL_23;
  }
  if (v7 != 1)
  {
LABEL_22:
    sub_1A44FC4AC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_1A44FC4AC(v2, v3, v4);
    sub_1A44FC4D4(v2, v3, v4);
    v12 = v5;
    v13 = v6;
    v14 = v7;
LABEL_23:
    sub_1A44FC4D4(v12, v13, v14);
    return 0;
  }
  if (!v3)
  {
    swift_bridgeObjectRetain();
    v8 = 1;
    sub_1A44FC4AC(v5, v6, 1u);
    sub_1A44FC4AC(v2, 0, 1u);
    sub_1A44FC4D4(v2, 0, 1u);
    sub_1A44FC4D4(v5, v6, 1u);
    if (!v6)
      return v8;
    goto LABEL_33;
  }
  if (!v6)
  {
    sub_1A44FC4AC(*(_QWORD *)a2, 0, 1u);
    sub_1A44FC4AC(v2, v3, 1u);
LABEL_33:
    sub_1A44FC4D4(v2, v3, 1u);
    v12 = v5;
    v13 = v6;
    v14 = 1;
    goto LABEL_23;
  }
  if (v2 != v5 || v3 != v6)
  {
    v16 = sub_1A4691A40();
    v8 = 1;
    sub_1A44FC4AC(v5, v6, 1u);
    sub_1A44FC4AC(v2, v3, 1u);
    sub_1A44FC4D4(v2, v3, 1u);
    sub_1A44FC4D4(v5, v6, 1u);
    if ((v16 & 1) != 0)
      return v8;
    return 0;
  }
  v8 = 1;
  sub_1A44FC4AC(*(_QWORD *)a1, v3, 1u);
  sub_1A44FC4AC(v2, v3, 1u);
  sub_1A44FC4D4(v2, v3, 1u);
  sub_1A44FC4D4(v2, v3, 1u);
  return v8;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO013SmartListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;
  id v4;
  int v5;
  int v6;
  void *v7;
  char v8;
  uint64_t v11;

  v2 = *(void **)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(id *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      sub_1A455A978(v4, 0);
      sub_1A455A978(v2, 0);
      v6 = sub_1A4691140();
      sub_1A455A3FC(v2, 0);
      v7 = v4;
      v8 = 0;
      goto LABEL_7;
    }
    goto LABEL_23;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      sub_1A455A978(*(id *)a2, 1);
      sub_1A455A978(v2, 1);
      LOBYTE(v6) = sub_1A4464FD0((uint64_t)v2, (unint64_t)v4);
      sub_1A455A3FC(v2, 1);
      v7 = v4;
      v8 = 1;
LABEL_7:
      sub_1A455A3FC(v7, v8);
      return v6 & 1;
    }
    goto LABEL_23;
  }
  if (!v2)
  {
    if (v5 != 2 || v4 != 0)
      goto LABEL_23;
    sub_1A455A3FC(0, 2);
    v11 = 0;
    goto LABEL_22;
  }
  if (v2 != (void *)1)
  {
    if (v5 != 2 || v4 != (id)2)
      goto LABEL_23;
    sub_1A455A3FC((id)2, 2);
    v11 = 2;
LABEL_22:
    sub_1A455A3FC((id)v11, 2);
    return 1;
  }
  if (v5 != 2 || v4 != (id)1)
  {
LABEL_23:
    sub_1A455A978(*(id *)a2, *(_BYTE *)(a2 + 8));
    sub_1A455A978(v2, v3);
    sub_1A455A3FC(v2, v3);
    sub_1A455A3FC(v4, v5);
    return 0;
  }
  sub_1A455A3FC((id)1, 2);
  sub_1A455A3FC((id)1, 2);
  return (uint64_t)v4;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO014CommonListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  int v3;
  id v4;
  int v5;
  int v6;
  void *v7;
  char v8;

  v2 = *(void **)a1;
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(id *)a2;
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (!*(_BYTE *)(a1 + 8))
  {
    if (!*(_BYTE *)(a2 + 8))
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      sub_1A455A978(v4, 0);
      sub_1A455A978(v2, 0);
      v6 = sub_1A4691140();
      sub_1A455A3FC(v2, 0);
      v7 = v4;
      v8 = 0;
      goto LABEL_9;
    }
LABEL_6:
    sub_1A455A978(*(id *)a2, *(_BYTE *)(a2 + 8));
    sub_1A455A978(v2, v3);
    sub_1A455A3FC(v2, v3);
    sub_1A455A3FC(v4, v5);
    return 0;
  }
  if (v3 != 1)
    __asm { BR              X9 }
  if (v5 != 1)
    goto LABEL_6;
  sub_1A455A978(*(id *)a2, 1);
  sub_1A455A978(v2, 1);
  LOBYTE(v6) = sub_1A4464FD0((uint64_t)v2, (unint64_t)v4);
  sub_1A455A3FC(v2, 1);
  v7 = v4;
  v8 = 1;
LABEL_9:
  sub_1A455A3FC(v7, v8);
  return v6 & 1;
}

void _s19ReminderKitInternal22REMNavigationSpecifierO08ListPathE0O2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

BOOL sub_1A455892C()
{
  void *v0;
  char v1;
  void *v2;
  int v3;

  if (v3)
  {
    sub_1A455A418(v0, v3);
    sub_1A455A438(v2, v1);
    sub_1A455A438(v0, v3);
    return 0;
  }
  else
  {
    sub_1A455A438(v2, 0);
    sub_1A455A438(v0, 0);
    return ((v0 ^ v2) & 1) == 0;
  }
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO0a4PathE0O13DetailSectionO2eeoiySbAG_AGtFZ_0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2)
        goto LABEL_15;
      goto LABEL_13;
    case 3:
      if (v2 != 3)
        goto LABEL_15;
      goto LABEL_13;
    case 4:
      if (v2 != 4)
        goto LABEL_15;
      goto LABEL_13;
    case 5:
      if (v2 != 5)
        goto LABEL_15;
      goto LABEL_13;
    case 6:
      if (v2 != 6)
        goto LABEL_15;
      goto LABEL_13;
    case 7:
      if (v2 != 7)
        goto LABEL_15;
LABEL_13:
      result = 1;
      break;
    default:
      if ((v2 - 2) >= 6)
        result = (((*a1 & 1) == 0) ^ v2) & 1;
      else
LABEL_15:
        result = 0;
      break;
  }
  return result;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO0a4PathE0O2eeoiySbAE_AEtFZ_0(__int16 *a1, unsigned __int16 *a2)
{
  __int16 v2;
  int v3;
  uint64_t result;
  int v5;

  v2 = *a1;
  v3 = *a2;
  if (*((_BYTE *)a1 + 2) != 1)
  {
    if ((a2[1] & 1) == 0)
    {
      v5 = *a2;
      if (*a1 == 2)
      {
        if (v5 == 2)
          return 1;
      }
      else if (v5 != 2
             && ((v2 & 1) == 0) != (v3 & 1)
             && ((((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8)) & 1) != 0)
      {
        return 1;
      }
    }
    return 0;
  }
  if ((a2[1] & 1) == 0)
    return 0;
  switch(*a1)
  {
    case 2u:
      if (*a2 != 2)
        return 0;
      result = 1;
      break;
    case 3u:
      if (*a2 != 3)
        return 0;
      result = 1;
      break;
    case 4u:
      if (*a2 != 4)
        return 0;
      result = 1;
      break;
    case 5u:
      if (*a2 != 5)
        return 0;
      result = 1;
      break;
    case 6u:
      if (*a2 != 6)
        return 0;
      result = 1;
      break;
    case 7u:
      if (*a2 != 7)
        return 0;
      result = 1;
      break;
    default:
      if ((v3 - 2) < 6u || ((((v2 & 1) == 0) ^ v3) & 1) == 0)
        return 0;
      result = 1;
      break;
  }
  return result;
}

void _s19ReminderKitInternal22REMNavigationSpecifierO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[12];
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v37 = a1;
  v38 = (char *)a2;
  v35[0] = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
  MEMORY[0x1E0C80A78](v35[0]);
  v35[1] = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = type metadata accessor for REMNavigationSpecifier(0);
  v3 = MEMORY[0x1E0C80A78](v36);
  v35[11] = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v35[10] = (char *)v35 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v35[9] = (char *)v35 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v35[8] = (char *)v35 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v35[7] = (char *)v35 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v35[6] = (char *)v35 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v35[5] = (char *)v35 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v35[4] = (char *)v35 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v35[3] = (char *)v35 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v35[2] = (char *)v35 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v24 = MEMORY[0x1E0C80A78](v23);
  v25 = MEMORY[0x1E0C80A78](v24);
  v26 = MEMORY[0x1E0C80A78](v25);
  v27 = MEMORY[0x1E0C80A78](v26);
  v28 = MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720848);
  v30 = MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v35 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = (uint64_t)&v32[*(int *)(v30 + 48)];
  sub_1A4497EE8(v37, (uint64_t)v32, type metadata accessor for REMNavigationSpecifier);
  v37 = v33;
  sub_1A4497EE8((uint64_t)v38, v33, type metadata accessor for REMNavigationSpecifier);
  v38 = v32;
  v34 = (char *)sub_1A4559030 + 4 * word_1A469F900[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A4559030()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void **v4;
  void *v5;
  char v6;

  v2 = *(_QWORD *)(v1 - 144);
  sub_1A4497EE8(v2, (uint64_t)v0, type metadata accessor for REMNavigationSpecifier);
  v3 = *v0;
  v4 = *(void ***)(v1 - 152);
  if (swift_getEnumCaseMultiPayload())
  {

    sub_1A445404C(v2, &qword_1EE720848);
    v6 = 0;
  }
  else
  {
    v5 = *v4;
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
    v6 = sub_1A4691140();

    sub_1A4497F2C(v2, type metadata accessor for REMNavigationSpecifier);
  }
  return v6 & 1;
}

void sub_1A45595D4()
{
  uint64_t v0;

  sub_1A4497EE8(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 216), type metadata accessor for REMNavigationSpecifier);
  if (swift_getEnumCaseMultiPayload() == 11)
    JUMPOUT(0x1A4559488);
  JUMPOUT(0x1A4559590);
}

void sub_1A4559614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char v7;

  v1 = *(_QWORD *)(v0 - 144);
  v2 = *(uint64_t **)(v0 - 208);
  sub_1A4497EE8(v1, (uint64_t)v2, type metadata accessor for REMNavigationSpecifier);
  v4 = *v2;
  v3 = v2[1];
  v5 = *(_QWORD **)(v0 - 152);
  if (swift_getEnumCaseMultiPayload() != 12)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x1A455959CLL);
  }
  v6 = v5[1];
  if (v3)
  {
    if (v6)
    {
      if (v4 == *v5 && v3 == v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_7:
        sub_1A4497F2C(v1, type metadata accessor for REMNavigationSpecifier);
        JUMPOUT(0x1A45595B0);
      }
      v7 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        goto LABEL_7;
LABEL_14:
      sub_1A4497F2C(v1, type metadata accessor for REMNavigationSpecifier);
      JUMPOUT(0x1A45595ACLL);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (!v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  goto LABEL_14;
}

void sub_1A4559680()
{
  uint64_t v0;

  sub_1A4497EE8(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 200), type metadata accessor for REMNavigationSpecifier);
  if (swift_getEnumCaseMultiPayload() == 13)
    JUMPOUT(0x1A4559488);
  JUMPOUT(0x1A4559590);
}

void sub_1A45596C0()
{
  uint64_t v0;

  sub_1A4497EE8(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 192), type metadata accessor for REMNavigationSpecifier);
  if (swift_getEnumCaseMultiPayload() == 14)
    JUMPOUT(0x1A4559488);
  JUMPOUT(0x1A4559590);
}

void sub_1A4559700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;

  v1 = *(_QWORD *)(v0 - 184);
  sub_1A4497EE8(*(_QWORD *)(v0 - 144), v1, type metadata accessor for REMNavigationSpecifier);
  v3 = *(_QWORD *)v1;
  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  v5 = *(_QWORD *)(v0 - 152);
  if (swift_getEnumCaseMultiPayload() == 15)
  {
    v6 = *(_QWORD *)v5;
    v7 = *(_QWORD *)(v5 + 8);
    v8 = *(_BYTE *)(v5 + 16);
    *(_QWORD *)(v0 - 112) = v3;
    *(_QWORD *)(v0 - 104) = v2;
    *(_BYTE *)(v0 - 96) = v4;
    *(_QWORD *)(v0 - 136) = v6;
    *(_QWORD *)(v0 - 128) = v7;
    *(_BYTE *)(v0 - 120) = v8;
    _s19ReminderKitInternal22REMNavigationSpecifierO010TaggedPathE0O2eeoiySbAE_AEtFZ_0(v0 - 112, v0 - 136);
    sub_1A455A3EC(v6);
    sub_1A455A3EC(v3);
    JUMPOUT(0x1A45594C8);
  }
  sub_1A455A3EC(v3);
  JUMPOUT(0x1A455959CLL);
}

void sub_1A4559788()
{
  uint64_t v0;

  sub_1A4497EE8(*(_QWORD *)(v0 - 144), *(_QWORD *)(v0 - 176), type metadata accessor for REMNavigationSpecifier);
  if (swift_getEnumCaseMultiPayload() == 16)
    JUMPOUT(0x1A4559488);
  JUMPOUT(0x1A4559590);
}

void sub_1A45597C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 - 144);
  v2 = *(_QWORD *)(v0 - 168);
  sub_1A4497EE8(v1, v2, type metadata accessor for REMNavigationSpecifier);
  v3 = *(_QWORD *)(v0 - 152);
  if (swift_getEnumCaseMultiPayload() != 17)
  {
    sub_1A4497F2C(v2, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
    JUMPOUT(0x1A455959CLL);
  }
  v4 = *(_QWORD *)(v0 - 248);
  sub_1A44683E0(v3, v4, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  if ((sub_1A46900E4() & 1) != 0)
  {
    v5 = *(int *)(*(_QWORD *)(v0 - 256) + 20);
    v6 = (_QWORD *)(v2 + v5);
    v7 = *(_QWORD *)(v2 + v5 + 8);
    v8 = (_QWORD *)(v4 + v5);
    v9 = v8[1];
    if (v7)
    {
      if (v9 && (*v6 == *v8 && v7 == v9 || (sub_1A4691A40() & 1) != 0))
      {
LABEL_8:
        sub_1A4497F2C(v4, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
        sub_1A4497F2C(v2, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
        sub_1A4497F2C(v1, type metadata accessor for REMNavigationSpecifier);
        JUMPOUT(0x1A45595B0);
      }
    }
    else if (!v9)
    {
      goto LABEL_8;
    }
  }
  sub_1A4497F2C(v4, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  sub_1A4497F2C(v2, type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate);
  JUMPOUT(0x1A45599E0);
}

void sub_1A455988C()
{
  if (swift_getEnumCaseMultiPayload() == 18)
    JUMPOUT(0x1A45598A4);
  JUMPOUT(0x1A455959CLL);
}

uint64_t sub_1A45599F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720938);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryItems();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v9[1] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720940);
  sub_1A443AD20(&qword_1EE720948, &qword_1EE720940, (uint64_t)&unk_1A4699FBC);
  sub_1A46917F4();
  v7 = sub_1A4691788();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1A4559B38(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];

  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for QueryItems();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  v14[1] = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_1A443AD20(a4, a3, (uint64_t)&unk_1A4699FBC);
  sub_1A46917F4();
  v12 = sub_1A469174C();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

_QWORD *sub_1A4559C80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720920);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CD24();
  sub_1A4691D28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720880);
    sub_1A455CF00(&qword_1EE720928, &qword_1EE720818, (uint64_t)&unk_1A46A00D8, MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1A4559DCC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  int v8;
  _BYTE v10[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720930);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A455CD68();
  sub_1A4691D28();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10[15] = 0;
  v7 = sub_1A4691794();
  v10[14] = 1;
  v8 = sub_1A4691758();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 & 1 | (v8 << 8);
}

uint64_t sub_1A4559F1C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  unsigned __int8 v8;
  int v10;
  _BYTE v11[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720968);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A455CDF0();
  sub_1A4691D28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11[31] = 0;
    v8 = sub_1A4691758();
    v11[30] = 1;
    v10 = sub_1A4691758();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    v11[15] = 2;
    sub_1A44351D8(&qword_1ED23E750, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1A469177C();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v8 | (v10 << 8);
  }
  return v7;
}

uint64_t sub_1A455A0D0()
{
  unint64_t v0;

  v0 = sub_1A4691BA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x13)
    return 19;
  else
    return v0;
}

uint64_t sub_1A455A120()
{
  unint64_t v0;

  v0 = sub_1A4691BA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x12)
    return 18;
  else
    return v0;
}

uint64_t sub_1A455A170(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = type metadata accessor for ReminderUUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    v6 = sub_1A46916A4();
  else
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1A445AA50(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    v7 = v16;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1A859ECE0](v9, a1);
      else
        v10 = *(id *)(a1 + 8 * v9 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_uuid);
      sub_1A46900F0();

      v16 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1A445AA50(v13 > 1, v14 + 1, 1);
        v7 = v16;
      }
      ++v9;
      *(_QWORD *)(v7 + 16) = v14 + 1;
      sub_1A44683E0((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v14, type metadata accessor for ReminderUUID);
    }
    while (v6 != v9);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A455A30C(unint64_t *a1)
{
  unint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v8;

  v1 = *a1;
  if (*a1)
  {
    if (v1 == 1)
    {
      v2 = 1;
      v3 = 2;
    }
    else
    {
      swift_bridgeObjectRetain();
      v4 = swift_bridgeObjectRetain();
      sub_1A4505E20(v4, v1);
      v5 = swift_bridgeObjectRetain();
      v6 = sub_1A4459BD0(v5);
      swift_bridgeObjectRelease();
      v8 = v6;
      sub_1A44D543C((uint64_t *)&v8);
      sub_1A44D6ED4(v1);
      swift_bridgeObjectRelease();
      v3 = 2;
      v2 = 2;
    }
  }
  else
  {
    v2 = 2;
    v3 = 1;
  }
  return v3 | (v2 << 8);
}

unint64_t sub_1A455A3EC(unint64_t result)
{
  if (result != 2)
    return sub_1A44D6ED4(result);
  return result;
}

void sub_1A455A3FC(id a1, char a2)
{
  if (a2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!a2)
  {

  }
}

id sub_1A455A418(id result, char a2)
{
  if (a2 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a2 == 1)
    return result;
  return result;
}

void sub_1A455A438(id a1, char a2)
{
  if (a2 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a2 == 1)
  {

  }
}

unint64_t sub_1A455A45C()
{
  unint64_t result;

  result = qword_1EE720780;
  if (!qword_1EE720780)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMNavigationSpecifier.AccountPathSpecifier, &type metadata for REMNavigationSpecifier.AccountPathSpecifier);
    atomic_store(result, (unint64_t *)&qword_1EE720780);
  }
  return result;
}

unint64_t sub_1A455A4A4()
{
  unint64_t result;

  result = qword_1EE720788;
  if (!qword_1EE720788)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMNavigationSpecifier.ListPathSpecifier.DetailSection, &type metadata for REMNavigationSpecifier.ListPathSpecifier.DetailSection);
    atomic_store(result, (unint64_t *)&qword_1EE720788);
  }
  return result;
}

unint64_t sub_1A455A4EC()
{
  unint64_t result;

  result = qword_1EE720790;
  if (!qword_1EE720790)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMNavigationSpecifier.SectionPathSpecifier, &type metadata for REMNavigationSpecifier.SectionPathSpecifier);
    atomic_store(result, (unint64_t *)&qword_1EE720790);
  }
  return result;
}

unint64_t sub_1A455A534()
{
  unint64_t result;

  result = qword_1EE720798[0];
  if (!qword_1EE720798[0])
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMNavigationSpecifier.RootPathSpecifier, &type metadata for REMNavigationSpecifier.RootPathSpecifier);
    atomic_store(result, qword_1EE720798);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMNavigationSpecifier(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  void *v7;
  id v8;
  char *v9;
  void *v11;
  void *v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(char **)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)&v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
      case 2u:
        v11 = *(void **)a2;
        v12 = (void *)*((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        v13 = a2[16];
        v14 = v11;
        sub_1A455A418(v12, v13);
        a1[1] = (uint64_t)v12;
        *((_BYTE *)a1 + 16) = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v15 = *(_QWORD *)a2;
        v16 = *((_QWORD *)a2 + 1);
        v17 = a2[16];
        sub_1A44FC4AC(v15, v16, v17);
        *a1 = v15;
        a1[1] = v16;
        *((_BYTE *)a1 + 16) = v17;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v18 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        *((_BYTE *)a1 + 10) = a2[10];
        v19 = v18;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
      case 6u:
        v20 = *(void **)a2;
        *a1 = *(_QWORD *)a2;
        *((_BYTE *)a1 + 8) = a2[8];
        v21 = v20;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0x10u:
        v23 = *(void **)a2;
        v24 = a2[8];
        sub_1A455A978(v23, v24);
        *a1 = (uint64_t)v23;
        *((_BYTE *)a1 + 8) = v24;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v22 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v22;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        if (*(_QWORD *)a2 <= 2uLL)
        {
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((_BYTE *)a1 + 16) = a2[16];
        }
        else
        {
          v30 = *((_QWORD *)a2 + 1);
          *a1 = *(_QWORD *)a2;
          a1[1] = v30;
          *((_BYTE *)a1 + 16) = a2[16];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        v25 = sub_1A46900FC();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        v26 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
        v27 = (uint64_t *)((char *)a1 + v26);
        v28 = &a2[v26];
        v29 = *((_QWORD *)v28 + 1);
        *v27 = *(_QWORD *)v28;
        v27[1] = v29;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

id sub_1A455A978(id result, char a2)
{
  if (a2 == 1)
    return (id)swift_bridgeObjectRetain();
  if (!a2)
    return result;
  return result;
}

void destroy for REMNavigationSpecifier(uint64_t a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
    case 5u:
    case 6u:

      return;
    case 1u:
    case 2u:

      sub_1A455A438(*(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
      return;
    case 3u:
      sub_1A44FC4D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      return;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0x10u:
      sub_1A455A3FC(*(id *)a1, *(_BYTE *)(a1 + 8));
      return;
    case 0xCu:
      goto LABEL_10;
    case 0xFu:
      if (*(_QWORD *)a1 < 3uLL)
        return;
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return;
    case 0x11u:
      v2 = sub_1A46900FC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
      goto LABEL_10;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for REMNavigationSpecifier(uint64_t *a1, char *a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *(void **)a2;
      *a1 = *(_QWORD *)a2;
      v7 = v6;
      goto LABEL_14;
    case 1u:
    case 2u:
      v8 = *(void **)a2;
      v9 = (void *)*((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      v10 = a2[16];
      v11 = v8;
      sub_1A455A418(v9, v10);
      a1[1] = (uint64_t)v9;
      *((_BYTE *)a1 + 16) = v10;
      goto LABEL_14;
    case 3u:
      v12 = *(_QWORD *)a2;
      v13 = *((_QWORD *)a2 + 1);
      v14 = a2[16];
      sub_1A44FC4AC(v12, v13, v14);
      *a1 = v12;
      a1[1] = v13;
      *((_BYTE *)a1 + 16) = v14;
      goto LABEL_14;
    case 4u:
      v15 = *(void **)a2;
      *a1 = *(_QWORD *)a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      *((_BYTE *)a1 + 10) = a2[10];
      v16 = v15;
      goto LABEL_14;
    case 5u:
    case 6u:
      v17 = *(void **)a2;
      *a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + 8) = a2[8];
      v18 = v17;
      goto LABEL_14;
    case 8u:
    case 9u:
    case 0xAu:
    case 0xBu:
    case 0xDu:
    case 0xEu:
    case 0x10u:
      v20 = *(void **)a2;
      v21 = a2[8];
      sub_1A455A978(v20, v21);
      *a1 = (uint64_t)v20;
      *((_BYTE *)a1 + 8) = v21;
      goto LABEL_14;
    case 0xCu:
      v19 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      goto LABEL_14;
    case 0xFu:
      if (*(_QWORD *)a2 <= 2uLL)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_BYTE *)a1 + 16) = a2[16];
      }
      else
      {
        v27 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v27;
        *((_BYTE *)a1 + 16) = a2[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_14;
    case 0x11u:
      v22 = sub_1A46900FC();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      v23 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
      v24 = (uint64_t *)((char *)a1 + v23);
      v25 = &a2[v23];
      v26 = *((_QWORD *)v25 + 1);
      *v24 = *(_QWORD *)v25;
      v24[1] = v26;
      swift_bridgeObjectRetain();
LABEL_14:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for REMNavigationSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  void *v15;
  __int16 v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char *v26;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMNavigationSpecifier);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = (void *)*a2;
        *a1 = *a2;
        v7 = v6;
        goto LABEL_15;
      case 1u:
      case 2u:
        v8 = (void *)*a2;
        *a1 = *a2;
        v9 = (void *)a2[1];
        v10 = *((_BYTE *)a2 + 16);
        v11 = v8;
        sub_1A455A418(v9, v10);
        a1[1] = (uint64_t)v9;
        *((_BYTE *)a1 + 16) = v10;
        goto LABEL_15;
      case 3u:
        v12 = *a2;
        v13 = a2[1];
        v14 = *((_BYTE *)a2 + 16);
        sub_1A44FC4AC(v12, v13, v14);
        *a1 = v12;
        a1[1] = v13;
        *((_BYTE *)a1 + 16) = v14;
        goto LABEL_15;
      case 4u:
        v15 = (void *)*a2;
        *a1 = *a2;
        v16 = *((_WORD *)a2 + 4);
        *((_BYTE *)a1 + 10) = *((_BYTE *)a2 + 10);
        *((_WORD *)a1 + 4) = v16;
        v17 = v15;
        goto LABEL_15;
      case 5u:
      case 6u:
        v18 = (void *)*a2;
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v19 = v18;
        goto LABEL_15;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xDu:
      case 0xEu:
      case 0x10u:
        v20 = (void *)*a2;
        v21 = *((_BYTE *)a2 + 8);
        sub_1A455A978(v20, v21);
        *a1 = (uint64_t)v20;
        *((_BYTE *)a1 + 8) = v21;
        goto LABEL_15;
      case 0xCu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_15;
      case 0xFu:
        if ((unint64_t)*a2 <= 2)
        {
          v22 = *(_OWORD *)a2;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *(_OWORD *)a1 = v22;
        }
        else
        {
          *a1 = *a2;
          a1[1] = a2[1];
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        goto LABEL_15;
      case 0x11u:
        v23 = sub_1A46900FC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        v24 = *(int *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0) + 20);
        v25 = (uint64_t *)((char *)a1 + v24);
        v26 = (char *)a2 + v24;
        *v25 = *(_QWORD *)v26;
        v25[1] = *((_QWORD *)v26 + 1);
        swift_bridgeObjectRetain();
LABEL_15:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMNavigationSpecifier(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 17)
  {
    v6 = sub_1A46900FC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for REMNavigationSpecifier(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMNavigationSpecifier);
    if (swift_getEnumCaseMultiPayload() == 17)
    {
      v6 = sub_1A46900FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(0);
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1A455B33C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.AccountPathSpecifier;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.NewListPathSpecifier;
}

uint64_t initializeBufferWithCopyOfBuffer for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A455A418(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1)
{
  sub_1A455A438(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t *assignWithCopy for REMNavigationSpecifier.ListPathSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A455BB4C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1A455A418, (void (*)(uint64_t, uint64_t))sub_1A455A438);
}

uint64_t assignWithTake for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A455A438(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ListPathSpecifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ListPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A455B564(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1A455B57C(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.ListPathSpecifier;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection()
{
  return &type metadata for REMNavigationSpecifier.ListPathSpecifier.DetailSection;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *((unsigned __int8 *)a1 + 2);
  if (v4 <= 1)
    v5 = -1;
  else
    v5 = v4 ^ 0xFF;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 2) = -(char)a2;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

uint64_t sub_1A455B6CC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 2);
}

uint64_t sub_1A455B6D4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 2) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.ReminderPathSpecifier;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A455B74C + 4 * byte_1A469F96E[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A455B808 + 4 * byte_1A469F978[v5]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1A455B83C + 4 * byte_1A469F973[v5]))();
}

uint64_t sub_1A455B83C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A455B844(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A455B84CLL);
  return result;
}

uint64_t sub_1A455B858(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A455B860);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A455B864(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A455B86C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A455B878(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_WORD *sub_1A455B894(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 5;
      if (v7 > 5)
        return result;
    }
    return 0;
  }
  v2 = a2 + 7;
  if (a2 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1A455B918 + 4 * byte_1A469F97D[v4]))();
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF9)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A455B9C4 + 4 * byte_1A469F987[v5]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A455B9F8 + 4 * byte_1A469F982[v5]))();
}

uint64_t sub_1A455B9F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455BA00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A455BA08);
  return result;
}

uint64_t sub_1A455BA14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A455BA1CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A455BA20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455BA28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1A455BA34(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection()
{
  return &type metadata for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.SectionPathSpecifier;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.RootPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.RootPathSpecifier;
}

uint64_t initializeBufferWithCopyOfBuffer for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1A455A978(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t a1)
{
  sub_1A455A3FC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t *assignWithCopy for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A455BB4C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1A455A978, (void (*)(uint64_t, uint64_t))sub_1A455A3FC);
}

uint64_t assignWithTake for REMNavigationSpecifier.SmartListPathSpecifier(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1A455A3FC(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.SmartListPathSpecifier;
}

uint64_t *assignWithCopy for REMNavigationSpecifier.CommonListPathSpecifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1A455BB4C(a1, a2, a3, (void (*)(_QWORD, _QWORD))sub_1A455DF48, (void (*)(uint64_t, uint64_t))sub_1A455DF4C);
}

uint64_t *sub_1A455BB4C(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;

  v7 = *a2;
  v8 = *((_BYTE *)a2 + 8);
  a4(*a2, v8);
  v9 = *a1;
  *a1 = v7;
  v10 = *((unsigned __int8 *)a1 + 8);
  *((_BYTE *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.CommonListPathSpecifier;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.SearchPathSpecifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.SearchPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_1A455BC58(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1A455BC70(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.SearchPathSpecifier;
}

uint64_t sub_1A455BCA4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  LODWORD(v3) = -1;
  if (*a2 < 0xFFFFFFFF)
    v3 = *a2;
  if ((v3 + 1) <= 2 && (_DWORD)v3 == -1)
  {
    v4 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  }
  return a1;
}

unint64_t *assignWithCopy for REMNavigationSpecifier.TaggedPathSpecifier(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  __int128 v9;

  if (*a1 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  else
    v4 = *a1;
  v5 = v4 + 1;
  v6 = *a2;
  if (*a2 >= 0xFFFFFFFF)
    LODWORD(v7) = -1;
  else
    v7 = *a2;
  v8 = v7 + 1;
  if (v5 > 2)
  {
    if (v8 <= 2 && (_DWORD)v7 == -1)
      goto LABEL_14;
LABEL_19:
    v9 = *(_OWORD *)a2;
    *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v9;
    return a1;
  }
  if (v8 > 2)
  {
    if (v5)
      goto LABEL_19;
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (!v5)
  {
    if ((_DWORD)v7 == -1)
    {
      *a1 = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      return a1;
    }
    goto LABEL_18;
  }
  if ((_DWORD)v7 != -1)
    goto LABEL_19;
LABEL_14:
  *a1 = v6;
  a1[1] = a2[1];
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for REMNavigationSpecifier.TaggedPathSpecifier(uint64_t a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  int v6;
  unsigned int v7;

  v4 = *(_QWORD *)a1;
  LODWORD(v5) = -1;
  if (v4 >= 0xFFFFFFFF)
    v6 = -1;
  else
    v6 = v4;
  if (*a2 < 0xFFFFFFFF)
    v5 = *a2;
  if ((v6 + 1) > 2)
    goto LABEL_13;
  v7 = v5 + 1;
  if (v7 > 2)
  {
    if (v6 == -1)
      goto LABEL_12;
LABEL_13:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_14;
  }
  if (v6 != -1)
    goto LABEL_13;
  if (v7)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRelease();
LABEL_14:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMNavigationSpecifier.TaggedPathSpecifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 17))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 < 3)
    v5 = 0;
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMNavigationSpecifier.TaggedPathSpecifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_1A455BF70(uint64_t *a1)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 + 1;
  v3 = v1 - 1;
  if (v2 >= 3)
    return v3;
  else
    return 0;
}

uint64_t sub_1A455BF94(uint64_t result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0;
    *(_DWORD *)result = a2 - 2147483646;
  }
  else if (a2)
  {
    *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier()
{
  return &type metadata for REMNavigationSpecifier.TaggedPathSpecifier;
}

uint64_t getEnumTagSinglePayload for ParsedPathComponent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEF)
    goto LABEL_17;
  if (a2 + 17 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 17) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 17;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 17;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 17;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x12;
  v8 = v6 - 18;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ParsedPathComponent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 17 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 17) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEE)
    return ((uint64_t (*)(void))((char *)&loc_1A455C0BC + 4 * byte_1A469F991[v4]))();
  *a1 = a2 + 17;
  return ((uint64_t (*)(void))((char *)sub_1A455C0F0 + 4 * byte_1A469F98C[v4]))();
}

uint64_t sub_1A455C0F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455C0F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A455C100);
  return result;
}

uint64_t sub_1A455C10C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A455C114);
  *(_BYTE *)result = a2 + 17;
  return result;
}

uint64_t sub_1A455C118(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455C120(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ParsedPathComponent()
{
  return &type metadata for ParsedPathComponent;
}

uint64_t sub_1A455C154()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A455C160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_1(a1, a2, a3, type metadata accessor for ReminderUUID);
}

uint64_t type metadata accessor for ReminderUUID(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1ED23FEA8);
}

uint64_t sub_1A455C180()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A455C18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_1(a1, a2, a3, a4, type metadata accessor for ReminderUUID);
}

uint64_t sub_1A455C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A46900FC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1A455C1D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A46900FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1A455C20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A455C250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A455C294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A455C2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A455C31C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A455C328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm_1(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  v6 = a4(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a2, v6);
}

uint64_t sub_1A455C370()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A455C37C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_1(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t __swift_store_extra_inhabitant_indexTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v7;

  v7 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, a2, a2, v7);
}

uint64_t sub_1A455C3C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A455C430(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    a1[1] = a2[1];
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A46900FC();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[7];
    v16 = a3[8];
    v17 = *(void **)((char *)a2 + v15);
    *(uint64_t *)((char *)v4 + v15) = (uint64_t)v17;
    *(uint64_t *)((char *)v4 + v16) = *(uint64_t *)((char *)a2 + v16);
    v18 = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A455C560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A455C5EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  v14 = a3[8];
  v15 = *(void **)(a2 + v13);
  *(_QWORD *)(a1 + v13) = v15;
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  v16 = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A455C6F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = *(void **)(a1 + v15);
  v17 = *(void **)(a2 + v15);
  *(_QWORD *)(a1 + v15) = v17;
  v18 = v17;

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A455C854(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  return a1;
}

uint64_t sub_1A455C93C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  v16 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);

  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A455CA8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A455CA98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1A455CB18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A455CB24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1A455CB9C()
{
  unint64_t v0;

  sub_1A44BF2AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A455CC28()
{
  return sub_1A443AD20(&qword_1EE7207F0, &qword_1EE7207F8, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1A455CC58()
{
  unint64_t result;

  result = qword_1EE720800;
  if (!qword_1EE720800)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0200, &type metadata for ParsedPathComponent);
    atomic_store(result, (unint64_t *)&qword_1EE720800);
  }
  return result;
}

unint64_t sub_1A455CC9C()
{
  unint64_t result;

  result = qword_1EE720810;
  if (!qword_1EE720810)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0FA0, &type metadata for ReminderIDQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720810);
  }
  return result;
}

unint64_t sub_1A455CCE0()
{
  unint64_t result;

  result = qword_1EE720838;
  if (!qword_1EE720838)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0F50, &type metadata for ReminderUUID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720838);
  }
  return result;
}

unint64_t sub_1A455CD24()
{
  unint64_t result;

  result = qword_1EE720890;
  if (!qword_1EE720890)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0F00, &type metadata for ReminderIDsQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720890);
  }
  return result;
}

unint64_t sub_1A455CD68()
{
  unint64_t result;

  result = qword_1EE7208A0;
  if (!qword_1EE7208A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0EB0, &type metadata for SubtaskQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7208A0);
  }
  return result;
}

unint64_t sub_1A455CDAC()
{
  unint64_t result;

  result = qword_1EE7208C0;
  if (!qword_1EE7208C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0E60, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7208C0);
  }
  return result;
}

unint64_t sub_1A455CDF0()
{
  unint64_t result;

  result = qword_1EE7208D0;
  if (!qword_1EE7208D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0E10, &type metadata for HashtagSpecifierQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7208D0);
  }
  return result;
}

unint64_t sub_1A455CE34()
{
  unint64_t result;

  result = qword_1EE7208F0;
  if (!qword_1EE7208F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0DC0, &type metadata for PublicTemplateQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7208F0);
  }
  return result;
}

unint64_t sub_1A455CE78()
{
  unint64_t result;

  result = qword_1EE7208F8;
  if (!qword_1EE7208F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0D70, &type metadata for EmptyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7208F8);
  }
  return result;
}

unint64_t sub_1A455CEBC()
{
  unint64_t result;

  result = qword_1EE720918;
  if (!qword_1EE720918)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0D20, &type metadata for NewListQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720918);
  }
  return result;
}

uint64_t sub_1A455CF00(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE720880);
    v10 = sub_1A4436344(a2, type metadata accessor for ReminderUUID, a3);
    result = MEMORY[0x1A85A0000](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A455CF84(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

ValueMetadata *type metadata accessor for NewListQuery()
{
  return &type metadata for NewListQuery;
}

ValueMetadata *type metadata accessor for NewListQuery.CodingKeys()
{
  return &type metadata for NewListQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for EmptyQuery()
{
  return &type metadata for EmptyQuery;
}

ValueMetadata *type metadata accessor for EmptyQuery.CodingKeys()
{
  return &type metadata for EmptyQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for PublicTemplateQuery()
{
  return &type metadata for PublicTemplateQuery;
}

ValueMetadata *type metadata accessor for PublicTemplateQuery.CodingKeys()
{
  return &type metadata for PublicTemplateQuery.CodingKeys;
}

uint64_t sub_1A455D004(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HashtagSpecifierQuery(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for HashtagSpecifierQuery(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMReminderDetailDataView.CheckUpdateResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HashtagSpecifierQuery()
{
  return &type metadata for HashtagSpecifierQuery;
}

uint64_t storeEnumTagSinglePayload for HashtagSpecifierQuery.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A455D1C0 + 4 * byte_1A469F99B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A455D1F4 + 4 * byte_1A469F996[v4]))();
}

uint64_t sub_1A455D1F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455D1FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A455D204);
  return result;
}

uint64_t sub_1A455D210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A455D218);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A455D21C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455D224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HashtagSpecifierQuery.CodingKeys()
{
  return &type metadata for HashtagSpecifierQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for SearchQuery()
{
  return &type metadata for SearchQuery;
}

ValueMetadata *type metadata accessor for SearchQuery.CodingKeys()
{
  return &type metadata for SearchQuery.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SubtaskQuery(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SubtaskQuery(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A455D350 + 4 * byte_1A469F9A5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1A455D384 + 4 * byte_1A469F9A0[v4]))();
}

uint64_t sub_1A455D384(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A455D38C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A455D394);
  return result;
}

uint64_t sub_1A455D3A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A455D3A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A455D3AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A455D3B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubtaskQuery()
{
  return &type metadata for SubtaskQuery;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO17ListPathSpecifierO13DetailSectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A455D41C + 4 * byte_1A469F9AF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A455D450 + 4 * byte_1A469F9AA[v4]))();
}

uint64_t sub_1A455D450(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455D458(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A455D460);
  return result;
}

uint64_t sub_1A455D46C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A455D474);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A455D478(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455D480(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubtaskQuery.CodingKeys()
{
  return &type metadata for SubtaskQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ReminderIDsQuery()
{
  return &type metadata for ReminderIDsQuery;
}

ValueMetadata *type metadata accessor for ReminderIDsQuery.CodingKeys()
{
  return &type metadata for ReminderIDsQuery.CodingKeys;
}

ValueMetadata *type metadata accessor for ReminderUUID.CodingKeys()
{
  return &type metadata for ReminderUUID.CodingKeys;
}

uint64_t _s19ReminderKitInternal22REMNavigationSpecifierO20AccountPathSpecifierOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A455D50C + 4 * byte_1A469F9B4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A455D52C + 4 * byte_1A469F9B9[v4]))();
}

_BYTE *sub_1A455D50C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A455D52C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A455D534(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A455D53C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A455D544(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A455D54C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReminderIDQuery.CodingKeys()
{
  return &type metadata for ReminderIDQuery.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Host(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1A455D5B4 + 4 * byte_1A469F9C3[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1A455D5E8 + 4 * byte_1A469F9BE[v4]))();
}

uint64_t sub_1A455D5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455D5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A455D5F8);
  return result;
}

uint64_t sub_1A455D604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A455D60CLL);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1A455D610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A455D618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Host()
{
  return &type metadata for Host;
}

uint64_t sub_1A455D634()
{
  return sub_1A443AD20(&qword_1EE720988, &qword_1EE720990, MEMORY[0x1E0DEAF50]);
}

unint64_t sub_1A455D664()
{
  unint64_t result;

  result = qword_1EE720998;
  if (!qword_1EE720998)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0368, &type metadata for Host);
    atomic_store(result, (unint64_t *)&qword_1EE720998);
  }
  return result;
}

unint64_t sub_1A455D6AC()
{
  unint64_t result;

  result = qword_1EE7209A0;
  if (!qword_1EE7209A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0458, &type metadata for ReminderIDQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209A0);
  }
  return result;
}

unint64_t sub_1A455D6F4()
{
  unint64_t result;

  result = qword_1EE7209A8;
  if (!qword_1EE7209A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0510, &type metadata for ReminderUUID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209A8);
  }
  return result;
}

unint64_t sub_1A455D73C()
{
  unint64_t result;

  result = qword_1EE7209B0;
  if (!qword_1EE7209B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0600, &type metadata for ReminderIDsQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209B0);
  }
  return result;
}

unint64_t sub_1A455D784()
{
  unint64_t result;

  result = qword_1EE7209B8;
  if (!qword_1EE7209B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0740, &type metadata for SubtaskQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209B8);
  }
  return result;
}

unint64_t sub_1A455D7CC()
{
  unint64_t result;

  result = qword_1EE7209C0;
  if (!qword_1EE7209C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0880, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209C0);
  }
  return result;
}

unint64_t sub_1A455D814()
{
  unint64_t result;

  result = qword_1EE7209C8;
  if (!qword_1EE7209C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0988, &type metadata for HashtagSpecifierQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209C8);
  }
  return result;
}

unint64_t sub_1A455D85C()
{
  unint64_t result;

  result = qword_1EE7209D0;
  if (!qword_1EE7209D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0AC8, &type metadata for PublicTemplateQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209D0);
  }
  return result;
}

unint64_t sub_1A455D8A4()
{
  unint64_t result;

  result = qword_1EE7209D8;
  if (!qword_1EE7209D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0CA8, &type metadata for NewListQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209D8);
  }
  return result;
}

unint64_t sub_1A455D8EC()
{
  unint64_t result;

  result = qword_1EE7209E0;
  if (!qword_1EE7209E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0BE0, &type metadata for NewListQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209E0);
  }
  return result;
}

unint64_t sub_1A455D934()
{
  unint64_t result;

  result = qword_1EE7209E8;
  if (!qword_1EE7209E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0C08, &type metadata for NewListQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209E8);
  }
  return result;
}

unint64_t sub_1A455D97C()
{
  unint64_t result;

  result = qword_1ED23FF68;
  if (!qword_1ED23FF68)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0B40, &type metadata for EmptyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23FF68);
  }
  return result;
}

unint64_t sub_1A455D9C4()
{
  unint64_t result;

  result = qword_1ED23FF60;
  if (!qword_1ED23FF60)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0B68, &type metadata for EmptyQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23FF60);
  }
  return result;
}

unint64_t sub_1A455DA0C()
{
  unint64_t result;

  result = qword_1EE7209F0;
  if (!qword_1EE7209F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0A00, &type metadata for PublicTemplateQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209F0);
  }
  return result;
}

unint64_t sub_1A455DA54()
{
  unint64_t result;

  result = qword_1EE7209F8;
  if (!qword_1EE7209F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0A28, &type metadata for PublicTemplateQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7209F8);
  }
  return result;
}

unint64_t sub_1A455DA9C()
{
  unint64_t result;

  result = qword_1EE720A00;
  if (!qword_1EE720A00)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A08F8, &type metadata for HashtagSpecifierQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A00);
  }
  return result;
}

unint64_t sub_1A455DAE4()
{
  unint64_t result;

  result = qword_1EE720A08;
  if (!qword_1EE720A08)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0920, &type metadata for HashtagSpecifierQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A08);
  }
  return result;
}

unint64_t sub_1A455DB2C()
{
  unint64_t result;

  result = qword_1EE720A10;
  if (!qword_1EE720A10)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A07B8, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A10);
  }
  return result;
}

unint64_t sub_1A455DB74()
{
  unint64_t result;

  result = qword_1EE720A18;
  if (!qword_1EE720A18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A07E0, &type metadata for SearchQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A18);
  }
  return result;
}

unint64_t sub_1A455DBBC()
{
  unint64_t result;

  result = qword_1EE720A20;
  if (!qword_1EE720A20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0678, &type metadata for SubtaskQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A20);
  }
  return result;
}

unint64_t sub_1A455DC04()
{
  unint64_t result;

  result = qword_1EE720A28;
  if (!qword_1EE720A28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A06A0, &type metadata for SubtaskQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A28);
  }
  return result;
}

unint64_t sub_1A455DC4C()
{
  unint64_t result;

  result = qword_1EE720A30;
  if (!qword_1EE720A30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0538, &type metadata for ReminderIDsQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A30);
  }
  return result;
}

unint64_t sub_1A455DC94()
{
  unint64_t result;

  result = qword_1EE720A38;
  if (!qword_1EE720A38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0560, &type metadata for ReminderIDsQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A38);
  }
  return result;
}

unint64_t sub_1A455DCDC()
{
  unint64_t result;

  result = qword_1EE720A40;
  if (!qword_1EE720A40)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0480, &type metadata for ReminderUUID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A40);
  }
  return result;
}

unint64_t sub_1A455DD24()
{
  unint64_t result;

  result = qword_1EE720A48;
  if (!qword_1EE720A48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A04A8, &type metadata for ReminderUUID.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A48);
  }
  return result;
}

unint64_t sub_1A455DD6C()
{
  unint64_t result;

  result = qword_1EE720A50;
  if (!qword_1EE720A50)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A0390, &type metadata for ReminderIDQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A50);
  }
  return result;
}

unint64_t sub_1A455DDB4()
{
  unint64_t result;

  result = qword_1EE720A58;
  if (!qword_1EE720A58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A03B8, &type metadata for ReminderIDQuery.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720A58);
  }
  return result;
}

uint64_t sub_1A455DDF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t REMRegExTextClassifier.labels.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *REMRegExTextClassifier.__allocating_init(modelURL:numOfClasses:labels:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *result;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = sub_1A468FF88();
  if (v3)
  {
    v9 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    v11 = v7;
    v12 = v8;
    sub_1A468FB74();
    swift_allocObject();
    sub_1A468FB68();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720A60);
    sub_1A455E0D4();
    sub_1A468FB5C();
    swift_release();
    sub_1A44695EC(v11, v12);
    v13 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
    result = (_QWORD *)swift_allocObject();
    result[3] = v14;
    result[4] = a2;
    result[2] = a3;
  }
  return result;
}

unint64_t sub_1A455E0D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EE720A68;
  if (!qword_1EE720A68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE720A60);
    v2[0] = MEMORY[0x1E0DEA9A0];
    v2[1] = MEMORY[0x1E0DEB448];
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0D8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE720A68);
  }
  return result;
}

_QWORD *REMRegExTextClassifier.predict(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *result;
  uint64_t v5;
  _QWORD *v6;

  result = REMRegExTextClassifier.predictIndices(_:)(a1, a2);
  if (!v3)
  {
    v5 = (uint64_t)result;
    swift_retain();
    v6 = sub_1A455E4E8(v5, v2);
    swift_bridgeObjectRelease();
    swift_release();
    return v6;
  }
  return result;
}

_QWORD *REMRegExTextClassifier.predictIndices(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *result;
  int64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v40 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v2 + 24);
  v8 = *(_QWORD *)(v7 + 64);
  v32 = v2;
  v33 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v34 = (unint64_t)(v9 + 63) >> 6;
  result = (_QWORD *)swift_bridgeObjectRetain();
  v13 = 0;
  v35 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v31 = a2;
  while (v11)
  {
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v16 = v15 | (v13 << 6);
LABEL_22:
    v20 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v16);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v16);
    v24 = swift_bridgeObjectRetain();
    v25 = (void *)MEMORY[0x1A859F880](v24);
    v38 = v40;
    v39 = a2;
    v36 = v22;
    v37 = v21;
    v26 = sub_1A4690210();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v6, 1, 1, v26);
    sub_1A4466118();
    sub_1A4691254();
    LOBYTE(v22) = v27;
    sub_1A446615C((uint64_t)v6);
    if ((v22 & 1) == 0 && (v23 & 0x8000000000000000) == 0 && v23 < *(_QWORD *)(*(_QWORD *)(v32 + 16) + 16))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = sub_1A4438B4C(0, v35[2] + 1, 1, v35);
      v29 = v35[2];
      v28 = v35[3];
      if (v29 >= v28 >> 1)
        v35 = sub_1A4438B4C((_QWORD *)(v28 > 1), v29 + 1, 1, v35);
      v14 = v35;
      v35[2] = v29 + 1;
      v14[v29 + 4] = v23;
      a2 = v31;
    }
    objc_autoreleasePoolPop(v25);
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  v17 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v17 >= v34)
    goto LABEL_29;
  v18 = *(_QWORD *)(v33 + 8 * v17);
  ++v13;
  if (v18)
    goto LABEL_21;
  v13 = v17 + 1;
  if (v17 + 1 >= v34)
    goto LABEL_29;
  v18 = *(_QWORD *)(v33 + 8 * v13);
  if (v18)
    goto LABEL_21;
  v13 = v17 + 2;
  if (v17 + 2 >= v34)
    goto LABEL_29;
  v18 = *(_QWORD *)(v33 + 8 * v13);
  if (v18)
  {
LABEL_21:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
    goto LABEL_22;
  }
  v19 = v17 + 3;
  if (v19 >= v34)
  {
LABEL_29:
    swift_release();
    return v35;
  }
  v18 = *(_QWORD *)(v33 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_21;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v34)
      goto LABEL_29;
    v18 = *(_QWORD *)(v33 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t REMRegExTextClassifier.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMRegExTextClassifier.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1A455E4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v8 = *(_QWORD *)(a1 + 8 * v5 + 32);
    if ((v8 & 0x8000000000000000) == 0 && v8 < *(_QWORD *)(v4 + 16))
    {
      v9 = (uint64_t *)(v4 + 32 + 16 * v8);
      v10 = *v9;
      v11 = v9[1];
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1A4438920(0, v6[2] + 1, 1, v6);
      v13 = v6[2];
      v12 = v6[3];
      if (v13 >= v12 >> 1)
        v6 = sub_1A4438920((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
      v6[2] = v13 + 1;
      v7 = &v6[2 * v13];
      v7[4] = v10;
      v7[5] = v11;
    }
    ++v5;
  }
  while (v2 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t type metadata accessor for REMRegExTextClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMRegExTextClassifier()
{
  return swift_lookUpClassMethod();
}

Swift::Void __swiftcall ReminderKitInternalVerify()()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242618);
  v0 = swift_allocObject();
  v1 = MEMORY[0x1E0DEA968];
  *(_OWORD *)(v0 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 32) = 0x736B726F77;
  *(_QWORD *)(v0 + 40) = 0xE500000000000000;
  sub_1A4691C74();
  swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CLCircularRegion.overlaps(_:)(CLCircularRegion a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  objc_msgSend(v1, sel_center);
  v4 = v3;
  objc_msgSend(v1, sel_center);
  v6 = v5;
  -[objc_class center](a1.super.super.isa, sel_center);
  v8 = v7;
  -[objc_class center](a1.super.super.isa, sel_center);
  v10 = v9;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v4, v6);
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v8, v10);
  objc_msgSend(v11, sel_distanceFromLocation_, v12);
  v14 = v13;
  objc_msgSend(v1, sel_radius);
  v16 = v15;
  -[objc_class radius](a1.super.super.isa, sel_radius);
  v18 = v17;

  return v14 < v16 + v18;
}

uint64_t String.firstMatch(regularExpressionPattern:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char v12;

  objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  swift_bridgeObjectRetain();
  v6 = sub_1A455EDCC(a1, a2, 0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B20);
  sub_1A455EEA4();
  sub_1A4466118();
  v7 = sub_1A469117C();
  v9 = v8;
  v10 = (void *)sub_1A469087C();
  v11 = objc_msgSend(v6, sel_firstMatchInString_options_range_, v10, 0, v7, v9);

  if (v11)
  {
    objc_msgSend(v11, sel_range);
    sub_1A4690F60();
    if ((v12 & 1) == 0)
    {
      v4 = sub_1A4690A5C();

      return v4;
    }

  }
  else
  {

  }
  return 0;
}

uint64_t static String.hashtagTokenDefaultPrefix.getter()
{
  return 35;
}

Swift::String __swiftcall String.addingHashtagPrefix()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  sub_1A4690984();
  v0 = 35;
  v1 = (void *)0xE100000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall String.hashtaggedDirectionLocalized(inCurrentContext:)(Swift::Bool inCurrentContext)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void *v24;
  Swift::String result;
  uint64_t v26;
  _BOOL4 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;

  v3 = v2;
  v4 = v1;
  v27 = inCurrentContext;
  v26 = sub_1A4690210();
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A46901F8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v26 - v13;
  v15 = (void *)objc_opt_self();
  v28 = v4;
  v29 = v3;
  v16 = (void *)sub_1A469087C();
  v17 = objc_msgSend(v15, sel_dominantLanguageForString_, v16);

  v18 = v17;
  if (!v17)
    v18 = (id)*MEMORY[0x1E0CCDEF8];
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v19 = v17;

  sub_1A46901C8();
  v20 = sub_1A46901E0();
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v14, v8);
  if (v27
    && (sub_1A469018C(),
        sub_1A4690204(),
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26),
        v22 = sub_1A46901E0(),
        v21(v12, v8),
        v22 == v20)
    || v20 != 2)
  {
    v30 = 35;
    v31 = 0xE100000000000000;
  }
  else
  {
    v30 = v28;
    v31 = v29;
    swift_bridgeObjectRetain();
  }
  sub_1A4690984();

  v23 = v30;
  v24 = (void *)v31;
  result._object = v24;
  result._countAndFlagsBits = v23;
  return result;
}

uint64_t String.asREMObjectIDProvidingModelClass()()
{
  NSString *v0;
  uint64_t ObjCClassMetadata;
  void *v2;
  _QWORD *v3;
  void *v4;
  unsigned int v5;
  id v6;
  void *v7;
  id aBlock[7];

  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (NSString *)sub_1A469087C();
  ObjCClassMetadata = (uint64_t)NSClassFromString(v0);

  if (!ObjCClassMetadata)
  {
    sub_1A455EEF0();
    swift_allocError();
    goto LABEL_5;
  }
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v2 = (void *)objc_opt_self();
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = ObjCClassMetadata;
  aBlock[4] = sub_1A455EF44;
  aBlock[5] = v3;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_6;
  v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  v5 = objc_msgSend(v2, sel_catchObjCException_error_, v4, aBlock);
  _Block_release(v4);
  v6 = aBlock[0];
  if (!v5)
  {
    v7 = v6;
    sub_1A468FE68();

LABEL_5:
    swift_willThrow();
  }
  return ObjCClassMetadata;
}

uint64_t String.urlFragmentRepresentation.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_1A469087C();
  v1 = objc_msgSend(v0, sel_CKMangledDocumentNameForURLFragment);

  if (!v1)
    return 0;
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

id sub_1A455EDCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1A455EEA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE720B28;
  if (!qword_1EE720B28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE720B20);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE720B28);
  }
  return result;
}

unint64_t sub_1A455EEF0()
{
  unint64_t result;

  result = qword_1EE720B30;
  if (!qword_1EE720B30)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for String.ClassNotFoundError, &type metadata for String.ClassNotFoundError);
    atomic_store(result, (unint64_t *)&qword_1EE720B30);
  }
  return result;
}

uint64_t sub_1A455EF34()
{
  return swift_deallocObject();
}

void sub_1A455EF44()
{

}

ValueMetadata *type metadata accessor for String.ClassNotFoundError()
{
  return &type metadata for String.ClassNotFoundError;
}

uint64_t StringProtocol.foldedStringForWriting(locale:)()
{
  return sub_1A455EF88();
}

uint64_t StringProtocol.foldedStringForSearching(locale:)()
{
  return sub_1A455EF88();
}

uint64_t sub_1A455EF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v0 = sub_1A468FBEC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = sub_1A4691260();
  v7[1] = v4;
  sub_1A468FBC8();
  sub_1A4466118();
  v5 = sub_1A4691218();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t StringProtocol.trimmingUnicodeScalars(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t AssociatedConformanceWitness;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v44 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 8) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = sub_1A4691698();
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)v34 - v8;
  v40 = MEMORY[0x1A85A0000](MEMORY[0x1E0DECD08], v7);
  v9 = sub_1A4691C68();
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)v34 - v10;
  v45 = MEMORY[0x1A85A0000](MEMORY[0x1E0DECCF0], v7);
  v34[1] = MEMORY[0x1A85A0000](MEMORY[0x1E0DEDE28], v9, &v45);
  v39 = sub_1A4691698();
  v37 = *(_QWORD *)(v39 - 8);
  v11 = MEMORY[0x1E0C80A78](v39);
  v35 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v36 = (char *)v34 - v14;
  v15 = *(_QWORD *)(a2 - 8);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[0] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v34 - v22;
  v43 = v5;
  if ((sub_1A4690E70() & 1) != 0)
    return 0;
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v3, a2);
  MEMORY[0x1E0C80A78](v25);
  v26 = AssociatedTypeWitness;
  v27 = v44;
  v34[-2] = v44;
  sub_1A4690E94();
  v28 = v34[0];
  (*(void (**)(char *, char *, uint64_t))(v34[0] + 16))(v21, v23, v26);
  v29 = sub_1A469081C();
  MEMORY[0x1E0C80A78](v29);
  v34[-2] = v27;
  sub_1A4690E94();
  v30 = v36;
  sub_1A469081C();
  v31 = v37;
  v32 = v39;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v35, v30, v39);
  MEMORY[0x1A85A0000](MEMORY[0x1E0DECCF8], v32);
  v24 = sub_1A4690A44();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v26);
  return v24;
}

uint64_t sub_1A455F420(uint64_t *a1, uint64_t a2, uint64_t (*a3)(_QWORD *))
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v7[4];

  v4 = *a1;
  v5 = a1[1];
  v7[2] = a2;
  swift_bridgeObjectRetain();
  LOBYTE(a3) = sub_1A4572488(a3, (uint64_t)v7, v4, v5);
  swift_bridgeObjectRelease();
  return a3 & 1;
}

uint64_t sub_1A455F488(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A455F420(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD *))sub_1A455F500) & 1;
}

uint64_t sub_1A455F4AC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A455F420(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(_QWORD *))sub_1A455F4D0) & 1;
}

uint64_t sub_1A455F4D0()
{
  return sub_1A468FBE0() & 1;
}

uint64_t sub_1A455F500()
{
  return sub_1A455F4D0() & 1;
}

uint64_t Array<A>.sorted(byFirstObjectIDs:)(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  type metadata accessor for MutableOrderedSet(0, a3, a4, a4);
  swift_bridgeObjectRetain();
  v6 = (uint64_t *)MutableOrderedSet.__allocating_init(_:)();
  v15 = a2;
  sub_1A44C178C();
  swift_getTupleTypeMetadata2();
  sub_1A4690BF4();
  sub_1A4460634();
  sub_1A4690738();
  v7 = sub_1A4690C78();
  sub_1A469078C();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v7);
  sub_1A4690AD4();
  v8 = v16;
  v16 = sub_1A46906CC();
  if (!(a1 >> 62))
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRetain();
    MutableOrderedSet.array.getter();
    v14 = sub_1A4690BE8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release();
    return v14;
  }
  swift_bridgeObjectRetain();
  result = sub_1A46916A4();
  v9 = result;
  if (!result)
    goto LABEL_11;
LABEL_3:
  if (v9 >= 1)
  {
    v11 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1A859ECE0](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      ++v11;
      v15 = v12;
      sub_1A455F81C(&v15, v8, (uint64_t)&v16, v6);

    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A455F774(uint64_t a1, id *a2)
{
  objc_msgSend(*a2, sel_remObjectID);
  sub_1A44C178C();
  sub_1A4460634();
  sub_1A469078C();
  swift_unknownObjectRetain();
  return sub_1A46907BC();
}

void sub_1A455F81C(id *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v5 = *a4;
  v11 = *a1;
  v6 = sub_1A44C178C();
  v7 = *(_QWORD *)(v5 + 80);
  v8 = sub_1A4460634();
  v9 = v11;
  MEMORY[0x1A859E008](&v12, &v11, a2, v6, v7, v8);

  v10 = v12;
  if (v12)
  {
    sub_1A4690C78();
    swift_unknownObjectRetain();
    sub_1A4690C3C();
    v12 = v10;
    MutableOrderedSet.remove(_:)((uint64_t)&v12);
    swift_unknownObjectRelease();
  }
}

uint64_t Array<A>.sort(byFirstObjectIDs:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  uint64_t v4;
  uint64_t result;

  v4 = Array<A>.sorted(byFirstObjectIDs:)(a1, *v3, *(_QWORD *)(a2 + 16), a3);
  result = swift_bridgeObjectRelease();
  *v3 = (void *)v4;
  return result;
}

uint64_t sub_1A455F940(uint64_t a1, id *a2)
{
  return sub_1A455F774(a1, a2);
}

void *sub_1A455F958(void *a1, uint64_t a2)
{
  return sub_1A455F980(a1, a2, &qword_1EE71CB20);
}

void *sub_1A455F96C(void *a1, uint64_t a2)
{
  return sub_1A455F980(a1, a2, &qword_1EE71D5F0);
}

void *sub_1A455F980(void *a1, uint64_t a2, unint64_t *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  char v9;
  id v10;
  void *v12;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v8 = sub_1A443E750((uint64_t)a1);
      if ((v9 & 1) != 0)
      {
        v7 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v8);
        v10 = v7;
        return v7;
      }
    }
    return 0;
  }
  v5 = a1;
  v6 = sub_1A4691614();

  if (!v6)
    return 0;
  sub_1A444AA40(0, a3);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v7 = v12;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_1A455FA60(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v9;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1A443E750((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v6);
        swift_retain();
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_1A4691614();

  if (!v4)
    return 0;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B48);
  swift_dynamicCast();
  v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1A455FB28(_QWORD *a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  id v31;
  uint64_t result;
  int64_t v33;
  unint64_t v34;
  unint64_t i;
  _QWORD *v37;

  if ((a2 & 0xC000000000000001) != 0)
  {
    v34 = 0;
    v2 = 0;
    v3 = 0;
    v4 = sub_1A46915FC() | 0x8000000000000000;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a2 + 32);
    v2 = ~v5;
    v34 = a2 + 64;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v3 = v7 & *(_QWORD *)(a2 + 64);
    v4 = a2;
  }
  swift_bridgeObjectRetain();
  v8 = 0;
  v33 = (unint64_t)(v2 + 64) >> 6;
  for (i = v4; ; v4 = i)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      if (!sub_1A4691620())
        goto LABEL_42;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v13 = v37;
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B48);
      swift_dynamicCast();
      swift_unknownObjectRelease();
      v12 = v8;
      v10 = v3;
      if (!v37)
        goto LABEL_42;
    }
    else
    {
      if (v3)
      {
        v10 = (v3 - 1) & v3;
        v11 = __clz(__rbit64(v3)) | (v8 << 6);
        v12 = v8;
      }
      else
      {
        v14 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_45;
        if (v14 >= v33)
          goto LABEL_42;
        v15 = *(_QWORD *)(v34 + 8 * v14);
        v12 = v8 + 1;
        if (!v15)
        {
          v12 = v8 + 2;
          if (v8 + 2 >= v33)
            goto LABEL_42;
          v15 = *(_QWORD *)(v34 + 8 * v12);
          if (!v15)
          {
            v12 = v8 + 3;
            if (v8 + 3 >= v33)
              goto LABEL_42;
            v15 = *(_QWORD *)(v34 + 8 * v12);
            if (!v15)
            {
              v12 = v8 + 4;
              if (v8 + 4 >= v33)
                goto LABEL_42;
              v15 = *(_QWORD *)(v34 + 8 * v12);
              if (!v15)
              {
                v12 = v8 + 5;
                if (v8 + 5 >= v33)
                  goto LABEL_42;
                v15 = *(_QWORD *)(v34 + 8 * v12);
                if (!v15)
                {
                  v16 = v8 + 6;
                  while (v33 != v16)
                  {
                    v15 = *(_QWORD *)(v34 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_31;
                    }
                  }
LABEL_42:
                  sub_1A4460EDC();
                  return (uint64_t)a1;
                }
              }
            }
          }
        }
LABEL_31:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v11);
      swift_retain();
      if (!v13)
        goto LABEL_42;
    }
    v17 = v13;
    swift_retain();
    v18 = sub_1A4560744();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = a1;
    v21 = sub_1A443E750((uint64_t)v17);
    v22 = a1[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (a1[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1A4448FE8();
    }
    else
    {
      sub_1A4444040(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_1A443E750((uint64_t)v17);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_46;
      v21 = v26;
    }
    if ((v25 & 1) != 0)
    {
      v9 = a1[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v9 + 8 * v21) = v18;
    }
    else
    {
      a1[(v21 >> 6) + 8] |= 1 << v21;
      *(_QWORD *)(a1[6] + 8 * v21) = v17;
      *(_QWORD *)(a1[7] + 8 * v21) = v18;
      v28 = a1[2];
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
        goto LABEL_44;
      a1[2] = v30;
      v31 = v17;
    }
    swift_release_n();

    swift_bridgeObjectRelease();
    v8 = v12;
    v3 = v10;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A455FF60(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1A445A92C(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1A859ECE0](i, a1);
        sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A445A92C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1A445A92C(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1A444A940(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A445A92C(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1A445A92C(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1A444A940(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45601C0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A445AABC(0, v1, 0);
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C38);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445AABC(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A445AABC(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1A4560304(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A445AB18(0, v1, 0);
    v2 = v11;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
      swift_dynamicCast();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445AB18(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v11;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1A445AB18(v5 > 1, v6 + 1, 1);
        v2 = v11;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      v7 = v2 + 16 * v6;
      *(_QWORD *)(v7 + 32) = v9;
      *(_QWORD *)(v7 + 40) = v10;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t REMMutableManualOrdering.__allocating_init(immutableManualOrdering:)(void *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  REMMutableManualOrdering.init(immutableManualOrdering:)(a1);
  return v2;
}

Swift::Void __swiftcall REMMutableManualOrdering.append(topLevelElementID:)(REMObjectID topLevelElementID)
{
  uint64_t v1;

  objc_msgSend(*(id *)(*(_QWORD *)(v1+ OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs)+ 16), sel_addObject_, topLevelElementID.super.isa);
}

uint64_t REMMutableManualOrdering.topLevelElementIDs.getter()
{
  uint64_t v0;

  swift_retain();
  v0 = sub_1A4560744();
  swift_release();
  return v0;
}

id REMMutableManualOrdering.immutableCopy()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  unint64_t *v6;
  unint64_t v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v21;
  unsigned int v22;

  v1 = sub_1A46900B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + 16);
  v22 = *(__int16 *)(v0 + 24);
  v21 = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A4560744();
  swift_release();
  v6 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  v7 = *v6;
  swift_bridgeObjectRetain();
  v8 = (_QWORD *)sub_1A443D728(MEMORY[0x1E0DEE9D8]);
  sub_1A455FB28(v8, v7);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = *(void **)(v0 + 48);
  v10 = v0 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10, v1);
  v11 = objc_allocWithZone(MEMORY[0x1E0D84598]);
  v12 = v9;
  v13 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v14 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D048);
  sub_1A4460634();
  v15 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1A4690030();
  v17 = v11;
  v18 = v21;
  v19 = objc_msgSend(v17, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v21, v22, v13, v14, v15, v12, v16);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v19;
}

uint64_t sub_1A4560744()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[5];
  _BYTE v10[32];
  uint64_t v11;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_array);
  v2 = sub_1A4690BA0();

  v3 = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1A44311F0(v5, (uint64_t)v10);
      sub_1A44311F0((uint64_t)v10, (uint64_t)v9);
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v6 = v9[4];
        v7 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
        if (v6)
        {
          MEMORY[0x1A859E3E0](v7);
          if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A4690BDC();
          sub_1A4690C18();
          sub_1A4690BB8();
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      }
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v3 = v11;
  }
  swift_bridgeObjectRelease();
  return v3;
}

id REMMutableManualOrdering.objectID.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t REMMutableManualOrdering.listType.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 24);
}

uint64_t REMMutableManualOrdering.listID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMMutableManualOrdering.uncommitedElementsAccountID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

void REMMutableManualOrdering.uncommitedElementsAccountID.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 48);
  *(_QWORD *)(v1 + 48) = a1;

}

uint64_t (*REMMutableManualOrdering.uncommitedElementsAccountID.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t REMMutableManualOrdering.modifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  swift_beginAccess();
  v4 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t REMMutableManualOrdering.modifiedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  swift_beginAccess();
  v4 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*REMMutableManualOrdering.modifiedDate.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t REMMutableManualOrdering.init(immutableManualOrdering:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  char isUniquelyReferenced_nonNull_native;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  char *v56;
  uint64_t result;
  _QWORD v58[3];
  char *v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;

  v62 = sub_1A46900B4();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v59 = (char *)v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 48) = 0;
  v58[2] = v1 + 48;
  *(_QWORD *)(v1 + 16) = objc_msgSend(a1, sel_objectID);
  *(_WORD *)(v1 + 24) = (unsigned __int16)objc_msgSend(a1, sel_listType);
  v4 = objc_msgSend(a1, sel_listID);
  v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v7 = v6;

  *(_QWORD *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 40) = v7;
  v8 = objc_msgSend(a1, sel_topLevelElementIDs);
  v9 = sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v10 = sub_1A4690BA0();

  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B48);
  v11 = swift_allocObject();
  sub_1A455FF60(v10);
  swift_bridgeObjectRelease();
  v12 = objc_allocWithZone(MEMORY[0x1E0C99E10]);
  v13 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithArray_, v13);

  *(_QWORD *)(v11 + 16) = v14;
  v63 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs) = v11;
  v61 = a1;
  v15 = objc_msgSend(a1, sel_secondaryLevelElementIDsByTopLevelElementID);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D048);
  sub_1A4460634();
  v58[1] = v9;
  v16 = sub_1A4690708();

  v17 = sub_1A443D830(MEMORY[0x1E0DEE9D8]);
  v18 = *(_QWORD *)(v16 + 64);
  v64 = v16 + 64;
  v19 = 1 << *(_BYTE *)(v16 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v65 = (unint64_t)(v19 + 63) >> 6;
  swift_bridgeObjectRetain();
  v22 = 0;
  while (1)
  {
    if (v21)
    {
      v24 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v25 = v24 | (v22 << 6);
    }
    else
    {
      v26 = v22 + 1;
      if (__OFADD__(v22, 1))
        goto LABEL_46;
      if (v26 >= v65)
      {
LABEL_42:
        swift_release();
        swift_bridgeObjectRelease();
        v51 = v63;
        *(_QWORD *)(v63
                  + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID) = v17;
        v52 = v61;
        v53 = objc_msgSend(v61, sel_uncommitedElementsAccountID);
        swift_beginAccess();
        v54 = *(void **)(v51 + 48);
        *(_QWORD *)(v51 + 48) = v53;

        v55 = objc_msgSend(v52, sel_modifiedDate);
        v56 = v59;
        sub_1A4690084();

        (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v51 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate, v56, v62);
        return v51;
      }
      v27 = *(_QWORD *)(v64 + 8 * v26);
      ++v22;
      if (!v27)
      {
        v22 = v26 + 1;
        if (v26 + 1 >= v65)
          goto LABEL_42;
        v27 = *(_QWORD *)(v64 + 8 * v22);
        if (!v27)
        {
          v22 = v26 + 2;
          if (v26 + 2 >= v65)
            goto LABEL_42;
          v27 = *(_QWORD *)(v64 + 8 * v22);
          if (!v27)
          {
            v22 = v26 + 3;
            if (v26 + 3 >= v65)
              goto LABEL_42;
            v27 = *(_QWORD *)(v64 + 8 * v22);
            if (!v27)
            {
              v22 = v26 + 4;
              if (v26 + 4 >= v65)
                goto LABEL_42;
              v27 = *(_QWORD *)(v64 + 8 * v22);
              if (!v27)
              {
                v28 = v26 + 5;
                if (v28 >= v65)
                  goto LABEL_42;
                v27 = *(_QWORD *)(v64 + 8 * v28);
                if (!v27)
                {
                  while (1)
                  {
                    v22 = v28 + 1;
                    if (__OFADD__(v28, 1))
                      goto LABEL_47;
                    if (v22 >= v65)
                      goto LABEL_42;
                    v27 = *(_QWORD *)(v64 + 8 * v22);
                    ++v28;
                    if (v27)
                      goto LABEL_25;
                  }
                }
                v22 = v28;
              }
            }
          }
        }
      }
LABEL_25:
      v21 = (v27 - 1) & v27;
      v25 = __clz(__rbit64(v27)) + (v22 << 6);
    }
    v29 = *(void **)(*(_QWORD *)(v16 + 48) + 8 * v25);
    v30 = swift_allocObject();
    v31 = v29;
    v32 = swift_bridgeObjectRetain();
    sub_1A455FF60(v32);
    v33 = objc_allocWithZone(MEMORY[0x1E0C99E10]);
    v34 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v33, sel_initWithArray_, v34);

    *(_QWORD *)(v30 + 16) = v35;
    if ((v17 & 0xC000000000000001) != 0)
    {
      if (v17 >= 0)
        v17 &= 0xFFFFFFFFFFFFFF8uLL;
      v36 = sub_1A4691308();
      if (__OFADD__(v36, 1))
        goto LABEL_44;
      v17 = sub_1A4561B14(v17, v36 + 1);
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v67 = v17;
    v39 = sub_1A443E750((uint64_t)v31);
    v40 = *(_QWORD *)(v17 + 16);
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
      break;
    v43 = v38;
    if (*(_QWORD *)(v17 + 24) >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v17 = v67;
        if ((v38 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1A444891C();
        v17 = v67;
        if ((v43 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1A4443160(v42, isUniquelyReferenced_nonNull_native);
      v44 = sub_1A443E750((uint64_t)v31);
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_48;
      v39 = v44;
      v17 = v67;
      if ((v43 & 1) != 0)
      {
LABEL_4:
        v23 = *(_QWORD *)(v17 + 56);
        swift_release();
        *(_QWORD *)(v23 + 8 * v39) = v30;
        goto LABEL_5;
      }
    }
    *(_QWORD *)(v17 + 8 * (v39 >> 6) + 64) |= 1 << v39;
    v46 = 8 * v39;
    *(_QWORD *)(*(_QWORD *)(v17 + 48) + v46) = v31;
    *(_QWORD *)(*(_QWORD *)(v17 + 56) + v46) = v30;
    v47 = *(_QWORD *)(v17 + 16);
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_45;
    *(_QWORD *)(v17 + 16) = v49;
    v50 = v31;
LABEL_5:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t REMMutableManualOrdering.__allocating_init(objectID:listType:listID:)(void *a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  HIDWORD(v15) = a2;
  v16 = sub_1A46900B4();
  v3 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1;
  sub_1A443D728(MEMORY[0x1E0DEE9D8]);
  sub_1A46900A8();
  v7 = objc_allocWithZone(MEMORY[0x1E0D84598]);
  v8 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  v9 = (void *)sub_1A4690B94();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D048);
  sub_1A4460634();
  v10 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1A4690030();
  v12 = objc_msgSend(v7, sel_initWithObjectID_listType_listID_topLevelElementIDs_secondaryLevelElementIDsByTopLevelElementID_uncommitedElementsAccountID_modifiedDate_, v6, SWORD2(v15), v8, v9, v10, 0, v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  v13 = swift_allocObject();
  REMMutableManualOrdering.init(immutableManualOrdering:)(v12);

  return v13;
}

uint64_t REMMutableManualOrdering.secondaryLevelElementIDsByTopLevelElementID.getter()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = (unint64_t *)(v0
                          + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_1A443D728(MEMORY[0x1E0DEE9D8]);
  v4 = sub_1A455FB28(v3, v2);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::Void __swiftcall REMMutableManualOrdering.remove(topLevelElementID:)(REMObjectID topLevelElementID)
{
  uint64_t v1;
  Class isa;
  objc_class *v3;

  isa = topLevelElementID.super.isa;
  objc_msgSend(*(id *)(*(_QWORD *)(v1+ OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfTopLevelElementIDs)+ 16), sel_removeObject_, topLevelElementID.super.isa);
  swift_beginAccess();
  v3 = isa;
  sub_1A445DB34((unint64_t)v3);
  swift_endAccess();

  swift_release();
}

Swift::Void __swiftcall REMMutableManualOrdering.append(secondaryLevelElementID:forTopLevelElementID:)(REMObjectID secondaryLevelElementID, REMObjectID forTopLevelElementID)
{
  uint64_t v2;
  NSUUID *uuid;
  Class isa;
  uint64_t *v5;
  uint64_t v6;
  NSUUID *v7;
  uint64_t v8;
  uint64_t v9;
  NSUUID *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  NSUUID *v15;
  uint64_t v16;

  uuid = secondaryLevelElementID._uuid;
  isa = secondaryLevelElementID.super.isa;
  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  v6 = *v5;
  v7 = uuid;
  v8 = sub_1A455FA60(v7, v6);
  swift_endAccess();

  swift_release();
  if (!v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B48);
    v9 = swift_allocObject();
    v10 = v7;
    sub_1A455FF60(MEMORY[0x1E0DEE9D8]);
    v11 = objc_allocWithZone(MEMORY[0x1E0C99E10]);
    v12 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend(v11, sel_initWithArray_, v12);

    *(_QWORD *)(v9 + 16) = v13;
    swift_beginAccess();
    sub_1A4561804(v9, v10);
    swift_endAccess();

  }
  swift_beginAccess();
  v14 = *v5;
  v15 = v7;
  v16 = sub_1A455FA60(v15, v14);

  swift_endAccess();
  if (v16)
  {
    objc_msgSend(*(id *)(v16 + 16), sel_addObject_, isa);
    swift_release();
  }
}

Swift::Void __swiftcall REMMutableManualOrdering.remove(secondaryLevelElementID:forTopLevelElementID:)(REMObjectID secondaryLevelElementID, REMObjectID forTopLevelElementID)
{
  uint64_t v2;
  NSUUID *uuid;
  Class isa;
  uint64_t *v5;
  uint64_t v6;
  NSUUID *v7;
  uint64_t v8;
  uint64_t v9;
  NSUUID *v10;
  uint64_t v11;

  uuid = secondaryLevelElementID._uuid;
  isa = secondaryLevelElementID.super.isa;
  v5 = (uint64_t *)(v2
                 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_orderedSetOfSecondaryLevelElementIDsByTopLevelElementID);
  swift_beginAccess();
  v6 = *v5;
  v7 = uuid;
  v8 = sub_1A455FA60(v7, v6);
  swift_endAccess();

  swift_release();
  if (v8)
  {
    swift_beginAccess();
    v9 = *v5;
    v10 = v7;
    v11 = sub_1A455FA60(v10, v9);

    swift_endAccess();
    if (v11)
    {
      objc_msgSend(*(id *)(v11 + 16), sel_removeObject_, isa);
      swift_release();
    }
  }
}

uint64_t REMMutableManualOrdering.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMMutableManualOrdering.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC19ReminderKitInternal24REMMutableManualOrdering_modifiedDate;
  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A4561744(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_1A4691308();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_1A45618C8(v7, result + 1, &qword_1EE71CBB8, &qword_1EE71D5F0, 0x1E0D84520, (void (*)(unint64_t, uint64_t))sub_1A44412BC);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A445E250(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4561804(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_1A4691308();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_1A4561B14(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A445E848(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45618A4(uint64_t a1, uint64_t a2)
{
  return sub_1A45618C8(a1, a2, &qword_1EE71CBC0, &qword_1EE71CB20, 0x1E0D84440, (void (*)(unint64_t, uint64_t))sub_1A44412B0);
}

uint64_t sub_1A45618C8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v7 = sub_1A46916D4();
    v24 = v7;
    sub_1A46915FC();
    v8 = sub_1A4691620();
    if (v8)
    {
      v9 = v8;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      do
      {
        swift_dynamicCast();
        sub_1A444AA40(0, a4);
        swift_dynamicCast();
        v7 = v24;
        v17 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v17)
        {
          a6(v17 + 1, 1);
          v7 = v24;
        }
        result = sub_1A4691134();
        v11 = v7 + 64;
        v12 = -1 << *(_BYTE *)(v7 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v7 + 64 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v7 + 64 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v14 == v19;
            if (v14 == v19)
              v14 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v21 == -1);
          v15 = __clz(__rbit64(~v21)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        v16 = 8 * v15;
        *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
        *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v9;
        ++*(_QWORD *)(v7 + 16);
        v9 = sub_1A4691620();
      }
      while (v9);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v7;
}

uint64_t sub_1A4561B14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71CAE0);
    v2 = sub_1A46916D4();
    v18 = v2;
    sub_1A46915FC();
    v3 = sub_1A4691620();
    if (v3)
    {
      v4 = v3;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B48);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1A4443160(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1A4691134();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1A4691620();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1A4561D54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CB18);
    v2 = sub_1A46916D4();
    v18 = v2;
    sub_1A46915FC();
    v3 = sub_1A4691620();
    if (v3)
    {
      v4 = v3;
      sub_1A444AA40(0, &qword_1EE71CB20);
      do
      {
        swift_dynamicCast();
        sub_1A444AA40(0, &qword_1EE7206C8);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1A4443440(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1A4691134();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1A4691620();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1A4561FA4(uint64_t a1, uint64_t a2)
{
  return sub_1A45618C8(a1, a2, &qword_1EE71CAF8, (unint64_t *)&qword_1EE71CF80, 0x1E0D845E0, (void (*)(unint64_t, uint64_t))sub_1A444344C);
}

uint64_t sub_1A4561FC8()
{
  return type metadata accessor for REMMutableManualOrdering();
}

uint64_t type metadata accessor for REMMutableManualOrdering()
{
  uint64_t result;

  result = qword_1EE720B78;
  if (!qword_1EE720B78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A456200C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for REMMutableManualOrdering()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMMutableManualOrdering.__allocating_init(immutableManualOrdering:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t sub_1A45620D8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1A445AA7C(0, v1, 0);
  v2 = v29;
  result = sub_1A45156A8(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v23 = v3 + 80;
  v24 = v1;
  v25 = v5;
  v26 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
    v13 = v12[1];
    v27 = *v12;
    v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6) + 16);
    v14 = v3;
    v15 = *(_QWORD *)(v29 + 16);
    v16 = *(_QWORD *)(v29 + 24);
    result = swift_bridgeObjectRetain();
    if (v15 >= v16 >> 1)
      result = sub_1A445AA7C(v16 > 1, v15 + 1, 1);
    *(_QWORD *)(v29 + 16) = v15 + 1;
    v17 = (_QWORD *)(v29 + 24 * v15);
    v17[4] = v27;
    v17[5] = v13;
    v17[6] = v28;
    v9 = 1 << *(_BYTE *)(v14 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v26;
    v18 = *(_QWORD *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v14;
    v5 = v25;
    if (*(_DWORD *)(v14 + 36) != v25)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(v23 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A45622FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE720C40);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE720C40);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t static REMkNNByTitleEmbedding.modelFileName.getter()
{
  return 0xD000000000000012;
}

uint64_t sub_1A45623A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1A4691410();
  swift_bridgeObjectRelease();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1A859E404](v0, MEMORY[0x1E0DEA968]);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  v1 = type metadata accessor for RDVector();
  v2 = swift_bridgeObjectRetain();
  MEMORY[0x1A859E404](v2, v1);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return 0x3A736C6562616C7BLL;
}

uint64_t sub_1A4562508(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v14 = a3;
  v15 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C88);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45662DC();
  sub_1A4691D40();
  v17 = a2;
  v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A44351D8(&qword_1ED23EAB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v5)
  {
    v17 = v14;
    v16 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C78);
    sub_1A4566320(&qword_1EE720C90, &qword_1EE71F828, (uint64_t)&protocol conformance descriptor for RDVector, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
    LOBYTE(v17) = 2;
    sub_1A4691854();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A45626D4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x73726F74636576;
  if (*v0 != 1)
    v1 = 0x6E6F6973726576;
  if (*v0)
    return v1;
  else
    return 0x736C6562616CLL;
}

uint64_t sub_1A456272C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4565C50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4562750()
{
  sub_1A45662DC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4562778()
{
  sub_1A45662DC();
  return sub_1A4691DC4();
}

uint64_t sub_1A45627A0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1A45659AC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A45627CC(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A4562508(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t REMkNNByTitleEmbedding.__allocating_init(from:with:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  REMkNNByTitleEmbedding.init(from:with:)(a1);
  return v2;
}

_QWORD *REMkNNByTitleEmbedding.init(from:with:)(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v3 = v1;
  v20[1] = *v1;
  v5 = sub_1A468FF7C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1;
  sub_1A468FEF8();
  swift_bridgeObjectRelease();
  v9 = sub_1A468FF88();
  if (v2)
  {

    v11 = (void *)objc_opt_self();
    *(_QWORD *)&v22 = 0;
    *((_QWORD *)&v22 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v22 = 0xD000000000000023;
    *((_QWORD *)&v22 + 1) = 0x80000001A46C0310;
    sub_1A468FE98();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v12 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_internalErrorWithDebugDescription_, v12);

    swift_willThrow();
    v15 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v15(v21, v5);
    v15((uint64_t)v8, v5);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = v9;
    v14 = v10;
    sub_1A468FB74();
    swift_allocObject();
    sub_1A468FB68();
    sub_1A4562BD0();
    sub_1A468FB5C();
    swift_release();
    sub_1A44695EC(v13, v14);
    v17 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v17(v21, v5);
    v17((uint64_t)v8, v5);
    v18 = v23;
    v19 = v24;
    *((_OWORD *)v3 + 1) = v22;
    v3[4] = v18;
    v3[5] = v19;
  }
  return v3;
}

unint64_t sub_1A4562BD0()
{
  unint64_t result;

  result = qword_1EE720C58;
  if (!qword_1EE720C58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A124C, &type metadata for REMkNNByTitleEmbedding.ModelData);
    atomic_store(result, (unint64_t *)&qword_1EE720C58);
  }
  return result;
}

uint64_t REMkNNByTitleEmbedding.__allocating_init(vectors:labels:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  REMkNNByTitleEmbedding.init(vectors:labels:)(a1, a2);
  return v4;
}

uint64_t REMkNNByTitleEmbedding.init(vectors:labels:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t result;
  _QWORD v52[2];
  id v53;
  _QWORD *v54;
  __int128 v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;

  v3 = v2;
  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3[2] = a2;
  v3[3] = a1;
  v10 = objc_allocWithZone(MEMORY[0x1E0CB3578]);
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v10, sel_init);
  v12 = (void *)sub_1A469087C();
  objc_msgSend(v11, sel_setDateFormat_, v12);

  sub_1A46900A8();
  v13 = (void *)sub_1A4690030();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v53 = v11;
  v14 = objc_msgSend(v11, sel_stringFromDate_, v13);

  v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v17 = v16;

  v57 = (_QWORD *)v15;
  v58 = v17;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  v18 = v58;
  v3[4] = v57;
  v3[5] = v18;
  v54 = v3;
  v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v57 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v20 = *(_QWORD *)(a2 + 16);
  v52[1] = a2;
  if (v20)
  {
    v21 = (uint64_t *)(a2 + 40);
    v55 = xmmword_1A4695C10;
    do
    {
      v24 = *(v21 - 1);
      v23 = *v21;
      swift_bridgeObjectRetain_n();
      v26 = sub_1A443E4C8(v24, v23);
      v27 = v19[2];
      v28 = (v25 & 1) == 0;
      v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
      v30 = v25;
      if (v19[3] < v29)
      {
        sub_1A44415F8(v29, 1);
        v19 = v57;
        v31 = sub_1A443E4C8(v24, v23);
        if ((v30 & 1) != (v32 & 1))
        {
          result = sub_1A4691C08();
          __break(1u);
          return result;
        }
        v26 = v31;
      }
      if ((v30 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v3 = (_QWORD *)v19[7];
        v33 = (_QWORD *)v3[v26];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v3[v26] = v33;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v33 = sub_1A4438920(0, v33[2] + 1, 1, v33);
          v3[v26] = v33;
        }
        v36 = v33[2];
        v35 = v33[3];
        if (v36 >= v35 >> 1)
        {
          v33 = sub_1A4438920((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
          v3[v26] = v33;
        }
        v33[2] = v36 + 1;
        v22 = &v33[2 * v36];
        v22[4] = v24;
        v22[5] = v23;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
        v37 = swift_allocObject();
        *(_OWORD *)(v37 + 16) = v55;
        *(_QWORD *)(v37 + 32) = v24;
        *(_QWORD *)(v37 + 40) = v23;
        v19[(v26 >> 6) + 8] |= 1 << v26;
        v38 = (uint64_t *)(v19[6] + 16 * v26);
        *v38 = v24;
        v38[1] = v23;
        *(_QWORD *)(v19[7] + 8 * v26) = v37;
        v39 = v19[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_22;
        v19[2] = v41;
      }
      v21 += 2;
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease();
  v3 = (_QWORD *)sub_1A45620D8((uint64_t)v19);
  swift_release();
  if (qword_1EE71C118 != -1)
LABEL_23:
    swift_once();
  v42 = sub_1A4690318();
  __swift_project_value_buffer(v42, (uint64_t)qword_1EE720C40);
  swift_bridgeObjectRetain();
  v43 = sub_1A469030C();
  v44 = sub_1A4691008();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v57 = (_QWORD *)v46;
    *(_DWORD *)v45 = 136446210;
    swift_bridgeObjectRetain();
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D020);
    v48 = MEMORY[0x1A859E404](v3, v47);
    v50 = v49;
    swift_bridgeObjectRelease();
    v56 = sub_1A4431120(v48, v50, (uint64_t *)&v57);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v43, v44, "kNN Model Statistics: %{public}s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v46, -1, -1);
    MEMORY[0x1A85A0114](v45, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (uint64_t)v54;
}

uint64_t REMkNNByTitleEmbedding.save(to:with:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_1A468FF7C();
  v13 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[2];
  v5 = v0[3];
  v7 = v0[4];
  v6 = v0[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A468FEF8();
  swift_bridgeObjectRelease();
  sub_1A468FBB0();
  swift_allocObject();
  sub_1A468FBA4();
  v14 = v4;
  v15 = v5;
  v16 = v7;
  v17 = v6;
  sub_1A456434C();
  v8 = sub_1A468FB98();
  v10 = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1A468FFD0();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v1);
  sub_1A44695EC(v8, v10);
  return 1;
}

uint64_t REMkNNByTitleEmbedding.neighbors(of:neighborCount:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  double v13;
  unint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  float64x2_t *v35;
  float64x2_t *v36;
  float64x2_t v37;
  float64x2_t v38;
  float64x2_t v39;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;

  v4 = *(_QWORD *)(v2 + 24);
  v67 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1A445AA98(0, 0, 0);
  v5 = v67;
  if (v4 >> 62)
  {
LABEL_72:
    swift_bridgeObjectRetain();
    v6 = sub_1A46916A4();
    v64 = v4;
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v64 = v4;
    if (v6)
    {
LABEL_3:
      v7 = 0;
      a1 += 2;
      v65 = v6;
      while (1)
      {
        if ((v64 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1A859ECE0](v7, v64);
          v8 = v7 + 1;
          if (__OFADD__(v7, 1))
            goto LABEL_68;
        }
        else
        {
          if (v7 >= *(_QWORD *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_71;
          v5 = *(_QWORD *)(v64 + 32 + 8 * v7);
          swift_retain();
          v8 = v7 + 1;
          if (__OFADD__(v7, 1))
            goto LABEL_68;
        }
        v66 = v8;
        swift_beginAccess();
        v9 = *(_QWORD *)(v5 + 24);
        if ((v9 & 0x8000000000000000) != 0)
          goto LABEL_69;
        if (v9)
        {
          v10 = v5 + 16;
          swift_beginAccess();
          swift_beginAccess();
          v6 = 0;
          v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          while (v6 < *(_QWORD *)(*(_QWORD *)v10 + 16))
          {
            if (v6 >= *(_QWORD *)(*a1 + 16))
              goto LABEL_65;
            v12 = *(double *)(*(_QWORD *)v10 + 8 * v6 + 32);
            v13 = *(double *)(*a1 + 8 * v6 + 32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v11 = sub_1A4438D64(0, v11[2] + 1, 1, v11);
            v4 = v11[2];
            v14 = v11[3];
            if (v4 >= v14 >> 1)
              v11 = sub_1A4438D64((_QWORD *)(v14 > 1), v4 + 1, 1, v11);
            ++v6;
            v11[2] = v4 + 1;
            *(double *)&v11[v4 + 4] = v12 - v13;
            if (v9 == v6)
              goto LABEL_22;
          }
          __break(1u);
LABEL_65:
          __break(1u);
          goto LABEL_66;
        }
        v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
        type metadata accessor for RDVector();
        inited = swift_initStackObject();
        *(_QWORD *)(inited + 16) = v11;
        v16 = v11[2];
        *(_QWORD *)(inited + 24) = v16;
        if (!v16)
          goto LABEL_48;
        v17 = v11[4];
        if ((v17 & 0x7FF0000000000000) == 0 && (v17 & 0xFFFFFFFFFFFFFLL) == 0)
        {
          if (v16 == 1)
            goto LABEL_48;
          v52 = v11[5];
          if ((v52 & 0x7FF0000000000000) == 0 && (v52 & 0xFFFFFFFFFFFFFLL) == 0)
            break;
        }
LABEL_25:
        swift_release();
        v18 = *(_QWORD *)(v5 + 24);
        if (v18 < 0)
          goto LABEL_70;
        if (v18)
        {
          swift_beginAccess();
          swift_beginAccess();
          v19 = *(_QWORD *)(v5 + 16);
          v20 = *(_QWORD *)(v19 + 16);
          if (!v20)
            goto LABEL_66;
          v21 = *a1;
          v22 = *(_QWORD *)(*a1 + 16);
          if (!v22)
            goto LABEL_67;
          v23 = v19 + 32;
          v24 = v21 + 32;
          v25 = *(double *)(v21 + 32);
          v26 = *(double *)(v19 + 32);
          v27 = v26 * v26;
          v28 = v25 * v25;
          v29 = v26 * v25 + 0.0;
          if (v18 != 1)
          {
            v30 = v22 - 1;
            if (v22 - 1 >= v20 - 1)
              v30 = v20 - 1;
            if (v30 >= v18 - 2)
              v30 = v18 - 2;
            v31 = v30 + 1;
            if (v31 > 4)
            {
              v33 = v31 & 3;
              if ((v31 & 3) == 0)
                v33 = 4;
              v34 = v31 - v33;
              v32 = v34 + 1;
              v35 = (float64x2_t *)(v19 + 56);
              v36 = (float64x2_t *)(v21 + 56);
              do
              {
                v37 = v35[-1];
                v38 = v36[-1];
                v39 = vmulq_f64(v37, v37);
                v40 = vmulq_f64(*v35, *v35);
                v41 = vmulq_f64(v38, v38);
                v42 = vmulq_f64(*v36, *v36);
                v43 = vmulq_f64(v37, v38);
                v44 = vmulq_f64(*v35, *v36);
                v29 = v29 + v43.f64[0] + v43.f64[1] + v44.f64[0] + v44.f64[1];
                v27 = v27 + v39.f64[0] + v39.f64[1] + v40.f64[0] + v40.f64[1];
                v28 = v28 + v41.f64[0] + v41.f64[1] + v42.f64[0] + v42.f64[1];
                v35 += 2;
                v36 += 2;
                v34 -= 4;
              }
              while (v34);
            }
            else
            {
              v32 = 1;
            }
            while (v20 != v32)
            {
              if (v32 >= v22)
                goto LABEL_67;
              v45 = *(double *)(v23 + 8 * v32);
              v46 = *(double *)(v24 + 8 * v32);
              v27 = v27 + v45 * v45;
              v28 = v28 + v46 * v46;
              v29 = v29 + v45 * v46;
              if (v18 == ++v32)
                goto LABEL_44;
            }
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            goto LABEL_72;
          }
        }
        else
        {
          v29 = 0.0;
          v27 = 0.0;
          v28 = 0.0;
        }
LABEL_44:
        swift_release();
        v47 = sqrt(v27) * sqrt(v28);
        v48 = 1.0 - v29 / v47;
        if ((*(_QWORD *)&v47 & 0x7FFFFFFFFFFFFFFFLL) == 0)
          v48 = 1.0;
        v49 = sqrt(fabs(v48));
LABEL_49:
        v5 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1A445AA98(0, *(_QWORD *)(v67 + 16) + 1, 1);
          v5 = v67;
        }
        v4 = *(_QWORD *)(v5 + 16);
        v50 = *(_QWORD *)(v5 + 24);
        if (v4 >= v50 >> 1)
        {
          sub_1A445AA98(v50 > 1, v4 + 1, 1);
          v5 = v67;
        }
        *(_QWORD *)(v5 + 16) = v4 + 1;
        v51 = v5 + 16 * v4;
        *(_QWORD *)(v51 + 32) = v7;
        *(double *)(v51 + 40) = v49;
        v7 = v66;
        v6 = v65;
        if (v66 == v65)
          goto LABEL_73;
      }
      if (v16 != 2)
      {
        v53 = 6;
        while (1)
        {
          v54 = v53 - 3;
          if (__OFADD__(v53 - 4, 1))
            break;
          v55 = v11[v53];
          if ((v55 & 0x7FF0000000000000) != 0 || (v55 & 0xFFFFFFFFFFFFFLL) != 0)
            goto LABEL_25;
          ++v53;
          if (v54 == v16)
            goto LABEL_48;
        }
        __break(1u);
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
LABEL_48:
      swift_release();
      swift_release();
      v49 = 0.0;
      goto LABEL_49;
    }
  }
LABEL_73:
  swift_bridgeObjectRelease_n();
  v67 = v5;
  swift_retain();
  sub_1A44BB34C(&v67, sub_1A462EC7C, sub_1A4564390);
  swift_release();
  v4 = sub_1A44A7AD4(a2, v67);
  v5 = v56;
  v6 = v57;
  v9 = v58;
  if ((v58 & 1) == 0)
    goto LABEL_74;
  sub_1A4691A70();
  swift_unknownObjectRetain_n();
  v60 = swift_dynamicCastClass();
  if (!v60)
  {
    swift_unknownObjectRelease();
    v60 = MEMORY[0x1E0DEE9D8];
  }
  v61 = *(_QWORD *)(v60 + 16);
  swift_release();
  if (__OFSUB__(v9 >> 1, v6))
    goto LABEL_83;
  if (v61 != (v9 >> 1) - v6)
  {
LABEL_84:
    swift_unknownObjectRelease();
LABEL_74:
    v59 = sub_1A445A3D8(v4, v5, v6, v9);
    goto LABEL_81;
  }
  v59 = swift_dynamicCastClass();
  if (!v59)
  {
    swift_unknownObjectRelease();
    v59 = MEMORY[0x1E0DEE9D8];
  }
LABEL_81:
  swift_unknownObjectRelease();
  return v59;
}

uint64_t REMkNNByTitleEmbedding.predict(for:neighborCountToConsider:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v42;

  v3 = v2;
  if (qword_1EE71C118 != -1)
    swift_once();
  v6 = sub_1A4690318();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EE720C40);
  v7 = sub_1A469030C();
  v8 = sub_1A4690FD8();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    v42 = a2;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v7, v8, "kNN with k = %ld", v9, 0xCu);
    MEMORY[0x1A85A0114](v9, -1, -1);
  }

  v10 = REMkNNByTitleEmbedding.neighbors(of:neighborCount:)(a1, a2);
  swift_bridgeObjectRetain_n();
  v11 = sub_1A469030C();
  v12 = sub_1A4690FD8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v42 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C30);
    v16 = MEMORY[0x1A859E404](v10, v15);
    v18 = v17;
    swift_bridgeObjectRelease();
    sub_1A4431120(v16, v18, &v42);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v11, v12, "kNN neighbor distances: %s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v14, -1, -1);
    MEMORY[0x1A85A0114](v13, -1, -1);

    v19 = *(_QWORD *)(v10 + 16);
    if (v19)
      goto LABEL_7;
LABEL_17:
    v21 = MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }

  swift_bridgeObjectRelease_n();
  v19 = *(_QWORD *)(v10 + 16);
  if (!v19)
    goto LABEL_17;
LABEL_7:
  swift_bridgeObjectRetain();
  v20 = (double *)(v10 + 40);
  v21 = MEMORY[0x1E0DEE9D8];
  do
  {
    v25 = *v20;
    if (*v20 < 0.9)
    {
      v26 = *((_QWORD *)v20 - 1);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A445AA98(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v42;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1A445AA98(v22 > 1, v23 + 1, 1);
        v21 = v42;
      }
      *(_QWORD *)(v21 + 16) = v23 + 1;
      v24 = v21 + 16 * v23;
      *(_QWORD *)(v24 + 32) = v26;
      *(double *)(v24 + 40) = v25;
    }
    v20 += 2;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
LABEL_18:
  v28 = *(_QWORD *)(v21 + 16);
  swift_release();
  if (v28 >= a2)
  {
    v33 = (_QWORD *)sub_1A45601C0(v10);
    swift_bridgeObjectRelease();
    swift_retain();
    v34 = sub_1A4565D9C(v33, v3);
    v36 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    if (v36)
    {
      swift_bridgeObjectRetain_n();
      v37 = sub_1A469030C();
      v38 = sub_1A4690FD8();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        v40 = swift_slowAlloc();
        v42 = v40;
        *(_DWORD *)v39 = 136315138;
        swift_bridgeObjectRetain();
        sub_1A4431120(v34, v36, &v42);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v37, v38, "kNN model suggesting %s", v39, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v40, -1, -1);
        MEMORY[0x1A85A0114](v39, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v29 = sub_1A469030C();
    v30 = sub_1A4690FD8();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v31 = 134217984;
      v32 = *(_QWORD *)(v10 + 16);
      swift_bridgeObjectRelease();
      v42 = v32;
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v29, v30, "Embedding.neighbors returned less than k neighbors {neighbor count: %ld} within distance of 0.9", v31, 0xCu);
      MEMORY[0x1A85A0114](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  return v34;
}

uint64_t REMkNNByTitleEmbedding.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMkNNByTitleEmbedding.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1A456434C()
{
  unint64_t result;

  result = qword_1EE720C60;
  if (!qword_1EE720C60)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A1224, &type metadata for REMkNNByTitleEmbedding.ModelData);
    atomic_store(result, (unint64_t *)&qword_1EE720C60);
  }
  return result;
}

uint64_t sub_1A4564390(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  uint64_t v30;
  double *v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 8;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(double *)(v84 + 16 * i + 8);
        v89 = v86;
        v90 = v85;
        do
        {
          if (v88 >= *(double *)v90)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(_QWORD *)(v90 - 8) = v91;
          *(double *)v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_1A4565180((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1A462EBC8((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C30);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 16 * v10;
          v21 = 16 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v20;
              v25 = *(_QWORD *)(v11 + v21);
              v26 = *(_QWORD *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (double *)(v11 + 16 * v10);
      do
      {
        v29 = *(double *)(v11 + 16 * v10 + 8);
        v30 = v14;
        v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *v31;
          *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_1A462E5B0((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v106;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_1A4565180((char *)(v11 + 16 * *(_QWORD *)v78), (char *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v106;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A4564A70(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v88 = 0;
      v89 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v91 = *(_QWORD *)(v89 + 24 * i + 16);
        v92 = v88;
        do
        {
          v93 = v89 + v92;
          if (*(_QWORD *)(v89 + v92 + 16) >= v91)
            break;
          if (!v89)
            goto LABEL_140;
          v94 = *(_QWORD *)(v93 + 24);
          v95 = (_QWORD *)(v89 + v92);
          v96 = *(_QWORD *)(v89 + v92 + 32);
          *(_OWORD *)(v93 + 24) = *(_OWORD *)v93;
          result = *(_QWORD *)(v93 + 16);
          *(_QWORD *)(v93 + 40) = result;
          *v95 = v94;
          v95[1] = v96;
          *(_QWORD *)(v93 + 16) = v91;
          v92 -= 24;
        }
        while (v92 != -24);
        v88 += 24;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v105 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v97 = v12;
      v107 = v9;
      if (v13 >= 2)
      {
        v98 = *v105;
        do
        {
          v99 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v98)
            goto LABEL_144;
          v100 = v97;
          v101 = *(_QWORD *)&v97[16 * v99 + 32];
          v102 = *(_QWORD *)&v97[16 * v13 + 24];
          sub_1A4565408((char *)(v98 + 24 * v101), (char *)(v98 + 24 * *(_QWORD *)&v97[16 * v13 + 16]), v98 + 24 * v102, __dst);
          if (v1)
            break;
          if (v102 < v101)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v100 = sub_1A462EBC8((uint64_t)v100);
          if (v99 >= *((_QWORD *)v100 + 2))
            goto LABEL_133;
          v103 = &v100[16 * v99 + 32];
          *(_QWORD *)v103 = v101;
          *((_QWORD *)v103 + 1) = v102;
          v104 = *((_QWORD *)v100 + 2);
          if (v13 > v104)
            goto LABEL_134;
          memmove(&v100[16 * v13 + 16], &v100[16 * v13 + 32], 16 * (v104 - v13));
          v97 = v100;
          *((_QWORD *)v100 + 2) = v104 - 1;
          v13 = v104 - 1;
        }
        while (v104 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v107 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v107 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D020);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v107 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v106 = *a1 + 64;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v108 = v6;
  v109 = v3;
  v110 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 24 * v10 + 16);
      v16 = *(_QWORD *)(v11 + 24 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v106 + 24 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 3;
          v19 = v20;
          if (v16 < v15 == v18 >= v20)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = 24 * v10;
          v22 = 24 * v14;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = v11 + v22;
              v26 = v11 + v21;
              v27 = *(_OWORD *)(v11 + v22);
              v28 = *(_QWORD *)(v11 + v22 + 16);
              v29 = *(_QWORD *)(v11 + v21 - 8);
              *(_OWORD *)v25 = *(_OWORD *)(v11 + v21 - 24);
              *(_QWORD *)(v25 + 16) = v29;
              *(_OWORD *)(v26 - 24) = v27;
              *(_QWORD *)(v26 - 8) = v28;
            }
            ++v24;
            v21 -= 24;
            v22 += 24;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v30 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v30 >= v3)
      v30 = v3;
    if (v30 < v14)
      break;
    if (v10 != v30)
    {
      v31 = (uint64_t *)(v11 + 24 * v10);
      do
      {
        v32 = *(_QWORD *)(v11 + 24 * v10 + 16);
        v33 = v14;
        v34 = v31;
        do
        {
          if (*(v34 - 1) >= v32)
            break;
          if (!v11)
            goto LABEL_141;
          v35 = *v34;
          v36 = v34[1];
          *(_OWORD *)v34 = *(_OWORD *)(v34 - 3);
          v34[2] = *(v34 - 1);
          *(v34 - 2) = v36;
          *(v34 - 1) = v32;
          *(v34 - 3) = v35;
          v34 -= 3;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v31 += 3;
      }
      while (v10 != v30);
      v10 = v30;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v38 = *((_QWORD *)v12 + 2);
    v37 = *((_QWORD *)v12 + 3);
    v13 = v38 + 1;
    v11 = v110;
    if (v38 >= v37 >> 1)
    {
      v87 = sub_1A462E5B0((char *)(v37 > 1), v38 + 1, 1, v12);
      v11 = v110;
      v12 = v87;
    }
    *((_QWORD *)v12 + 2) = v13;
    v39 = v12 + 32;
    v40 = &v12[16 * v38 + 32];
    *(_QWORD *)v40 = v14;
    *((_QWORD *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        v41 = v13 - 1;
        if (v13 >= 4)
        {
          v46 = &v39[16 * v13];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_119;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_120;
          v53 = v13 - 2;
          v54 = &v39[16 * v13 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_122;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_125;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_129;
            v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v70 = *((_QWORD *)v12 + 4);
            v71 = *((_QWORD *)v12 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_77;
          }
          v43 = *((_QWORD *)v12 + 4);
          v42 = *((_QWORD *)v12 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_121;
        v53 = v13 - 2;
        v59 = &v39[16 * v13 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_124;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_127;
        if (__OFADD__(v63, v68))
          goto LABEL_128;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_83:
          if (v69)
            v41 = v53;
          goto LABEL_85;
        }
LABEL_77:
        if ((v64 & 1) != 0)
          goto LABEL_123;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_126;
        if (v75 < v63)
          goto LABEL_15;
LABEL_85:
        v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v81 = v12;
        v82 = &v39[16 * v80];
        v83 = *(_QWORD *)v82;
        v84 = &v39[16 * v41];
        v85 = *((_QWORD *)v84 + 1);
        sub_1A4565408((char *)(v11 + 24 * *(_QWORD *)v82), (char *)(v11 + 24 * *(_QWORD *)v84), v11 + 24 * v85, __dst);
        if (v1)
          goto LABEL_93;
        if (v85 < v83)
          goto LABEL_116;
        if (v41 > *((_QWORD *)v81 + 2))
          goto LABEL_117;
        *(_QWORD *)v82 = v83;
        *(_QWORD *)&v39[16 * v80 + 8] = v85;
        v86 = *((_QWORD *)v81 + 2);
        if (v41 >= v86)
          goto LABEL_118;
        v12 = v81;
        v13 = v86 - 1;
        memmove(&v39[16 * v41], v84 + 16, 16 * (v86 - 1 - v41));
        *((_QWORD *)v81 + 2) = v86 - 1;
        v11 = v110;
        if (v86 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v108;
    v3 = v109;
    if (v10 >= v109)
    {
      v9 = v107;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A4565180(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t result;
  char *v23;
  char *v24;
  char *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[16 * v13];
      v23 = v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (char *)(a3 - 16);
        do
        {
          v20 = v19 + 16;
          if (*((double *)v18 - 1) >= *((double *)v6 - 1))
          {
            v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 16;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 16;
            if (v21 <= v7)
              break;
          }
          v19 -= 16;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_1A462E918(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (*((double *)v6 + 1) >= *((double *)v15 + 1))
        {
          v4 = v15 + 16;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          v16 = v6 + 16;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A4565408(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  char *v24;
  const void *v25;
  char *v26;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v26 = __src;
  v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v17 = &v4[24 * v11];
      v24 = v17;
      v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v18 = a3 - 24;
        do
        {
          v19 = (char *)(v18 + 24);
          if (*((_QWORD *)v6 - 1) >= *((_QWORD *)v17 - 1))
          {
            v24 = v17 - 24;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              v22 = *(_OWORD *)(v17 - 24);
              *(_QWORD *)(v18 + 16) = *((_QWORD *)v17 - 1);
              *(_OWORD *)v18 = v22;
            }
            v20 = v6;
            v17 -= 24;
            if (v6 <= v7)
              break;
          }
          else
          {
            v20 = v6 - 24;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              v21 = *(_OWORD *)v20;
              *(_QWORD *)(v18 + 16) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v18 = v21;
            }
            v26 = v6 - 24;
            if (v20 <= v7)
              break;
          }
          v18 -= 24;
          v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_1A462E750((void **)&v26, &v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[24 * v9];
    v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      v13 = v4;
      while (1)
      {
        if (*((_QWORD *)v13 + 2) >= *((_QWORD *)v6 + 2))
        {
          v4 = v13 + 24;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          v14 = v6 + 24;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v15 + 2);
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v25 = v4;
        v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

unint64_t sub_1A45656C4(unint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  if ((a3 & 1) != 0)
    return 0;
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(a4 + 16);
    if (*(_QWORD *)(v4 + 16) > result)
    {
      v5 = *(_QWORD *)(v4 + 16 * result + 32);
      swift_bridgeObjectRetain();
      return v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4565720(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v34 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = *(_QWORD *)(a2 + 16);
    v33 = v4 + 32;
    swift_retain();
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v6 = (uint64_t *)(a1 + 40);
    v32 = v4;
    while (1)
    {
      v8 = *(v6 - 1);
      if ((v8 & 0x8000000000000000) != 0)
        break;
      if (v8 >= *(_QWORD *)(v4 + 16))
        goto LABEL_21;
      v9 = *v6;
      v10 = (uint64_t *)(v33 + 16 * v8);
      v12 = *v10;
      v11 = v10[1];
      swift_bridgeObjectRetain();
      v14 = sub_1A443E4C8(v12, v11);
      v15 = v5[2];
      v16 = (v13 & 1) == 0;
      v17 = v15 + v16;
      if (__OFADD__(v15, v16))
        goto LABEL_22;
      v18 = v13;
      if (v5[3] < v17)
      {
        sub_1A4444314(v17, 1);
        v5 = v34;
        v19 = sub_1A443E4C8(v12, v11);
        if ((v18 & 1) != (v20 & 1))
          goto LABEL_24;
        v14 = v19;
      }
      if ((v18 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v21 = v5[7];
        v22 = *(_QWORD **)(v21 + 8 * v14);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v21 + 8 * v14) = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v22 = sub_1A4439E24(0, v22[2] + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v14) = v22;
        }
        v25 = v22[2];
        v24 = v22[3];
        if (v25 >= v24 >> 1)
        {
          v22 = sub_1A4439E24((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
          *(_QWORD *)(v21 + 8 * v14) = v22;
        }
        v22[2] = v25 + 1;
        v7 = &v22[2 * v25];
        v7[4] = v8;
        v7[5] = v9;
        v4 = v32;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C808);
        v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_1A4695C10;
        *(_QWORD *)(v26 + 32) = v8;
        *(_QWORD *)(v26 + 40) = v9;
        v5[(v14 >> 6) + 8] |= 1 << v14;
        v27 = (uint64_t *)(v5[6] + 16 * v14);
        *v27 = v12;
        v27[1] = v11;
        *(_QWORD *)(v5[7] + 8 * v14) = v26;
        v28 = v5[2];
        v29 = __OFADD__(v28, 1);
        v30 = v28 + 1;
        if (v29)
          goto LABEL_23;
        v5[2] = v30;
      }
      v6 += 2;
      if (!--v2)
        goto LABEL_19;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_release_n();
    result = sub_1A4691C08();
    __break(1u);
  }
  else
  {
    swift_retain();
    v5 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1A45659AC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A45662DC();
  sub_1A4691D28();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    v10 = 0;
    sub_1A44351D8(&qword_1ED23E750, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720C78);
    v10 = 1;
    sub_1A4566320(&qword_1EE720C80, &qword_1EE71F818, (uint64_t)&protocol conformance descriptor for RDVector, MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    LOBYTE(v11) = 2;
    swift_bridgeObjectRetain();
    v9 = 0;
    sub_1A4691788();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A4565C50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736C6562616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F74636576 && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A4565D9C(_QWORD *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  _QWORD *v24;

  v3 = a1[2];
  if (v3 < 2)
  {
    if (v3)
    {
      v16 = a1[4];
      v17 = a1[5];
    }
    else
    {
      v16 = 0;
      v17 = 0;
    }
    v22 = v3 == 0;
    swift_retain_n();
    v19 = sub_1A45656C4(v16, v17, v22, a2);
    swift_release_n();
    return v19;
  }
  swift_retain_n();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1A4565720(v4, a2);
  v6 = sub_1A45620D8(v5);
  swift_bridgeObjectRelease();
  v24 = (_QWORD *)v6;
  swift_bridgeObjectRetain();
  sub_1A44BB34C((uint64_t *)&v24, (uint64_t (*)(uint64_t))sub_1A462EC90, sub_1A4564A70);
  swift_bridgeObjectRelease();
  v7 = v24;
  if (qword_1EE71C118 != -1)
    swift_once();
  v8 = sub_1A4690318();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE720C40);
  swift_retain();
  v9 = sub_1A469030C();
  v10 = sub_1A4691008();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v24 = (_QWORD *)v12;
    *(_DWORD *)v11 = 136446210;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D020);
    v14 = MEMORY[0x1A859E404](v7, v13);
    sub_1A4431120(v14, v15, (uint64_t *)&v24);
    sub_1A46911D0();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v9, v10, "kNN list index and neighbor counts: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v12, -1, -1);
    MEMORY[0x1A85A0114](v11, -1, -1);

  }
  else
  {

    swift_release();
  }
  v18 = v7[2];
  if (v18 == 1)
  {
    v19 = v7[4];
    swift_bridgeObjectRetain();
    swift_release_n();
    swift_release();
    return v19;
  }
  if (v18)
  {
    v19 = v7[4];
    v20 = v7[6];
    v21 = v7[9];
    swift_bridgeObjectRetain();
    swift_release();
    swift_release_n();
    if (v21 >= v20)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return v19;
  }
  __break(1u);
  swift_release_n();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for REMkNNByTitleEmbedding()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMkNNByTitleEmbedding()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMkNNByTitleEmbedding.__allocating_init(from:with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of REMkNNByTitleEmbedding.__allocating_init(vectors:labels:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t destroy for REMkNNByTitleEmbedding.ModelData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMkNNByTitleEmbedding.ModelData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMkNNByTitleEmbedding.ModelData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMkNNByTitleEmbedding.ModelData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMkNNByTitleEmbedding.ModelData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMkNNByTitleEmbedding.ModelData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMkNNByTitleEmbedding.ModelData()
{
  return &type metadata for REMkNNByTitleEmbedding.ModelData;
}

unint64_t sub_1A45662DC()
{
  unint64_t result;

  result = qword_1EE720C70;
  if (!qword_1EE720C70)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A1338, &type metadata for REMkNNByTitleEmbedding.ModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720C70);
  }
  return result;
}

uint64_t sub_1A4566320(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE720C78);
    v10 = sub_1A451D170(a2, a3);
    result = MEMORY[0x1A85A0000](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMkNNByTitleEmbedding.ModelData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A45663E8 + 4 * byte_1A46A11C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A456641C + 4 * byte_1A46A11C0[v4]))();
}

uint64_t sub_1A456641C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4566424(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A456642CLL);
  return result;
}

uint64_t sub_1A4566438(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4566440);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A4566444(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A456644C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMkNNByTitleEmbedding.ModelData.CodingKeys()
{
  return &type metadata for REMkNNByTitleEmbedding.ModelData.CodingKeys;
}

unint64_t sub_1A456646C()
{
  unint64_t result;

  result = qword_1EE720C98;
  if (!qword_1EE720C98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A1310, &type metadata for REMkNNByTitleEmbedding.ModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720C98);
  }
  return result;
}

unint64_t sub_1A45664B4()
{
  unint64_t result;

  result = qword_1EE720CA0;
  if (!qword_1EE720CA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A1280, &type metadata for REMkNNByTitleEmbedding.ModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720CA0);
  }
  return result;
}

unint64_t sub_1A45664FC()
{
  unint64_t result;

  result = qword_1EE720CA8;
  if (!qword_1EE720CA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A12A8, &type metadata for REMkNNByTitleEmbedding.ModelData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720CA8);
  }
  return result;
}

uint64_t Date.startOfDay.getter()
{
  return sub_1A4566814((void (*)(uint64_t))MEMORY[0x1E0CB0F38]);
}

uint64_t Date.init(testing_parsedFrom:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1A4566584(a1, 0xD000000000000012, 0x80000001A46C03C0, a2);
}

uint64_t Date.init(testing_allDayParsedFrom:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1A4566584(a1, 0x79792F64642F4D4DLL, 0xEA00000000007979, a2);
}

uint64_t sub_1A4566584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;

  v27 = a2;
  v28 = a3;
  v29 = a1;
  v30 = a4;
  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A4690210();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_allocWithZone(MEMORY[0x1E0CB3578]);
  v16 = objc_msgSend(v15, sel_init, v27, v28, v29);
  sub_1A469012C();
  v17 = (void *)sub_1A4690150();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  objc_msgSend(v16, sel_setLocale_, v17);

  v18 = (void *)sub_1A469087C();
  objc_msgSend(v16, sel_setDateFormat_, v18);

  objc_msgSend(v16, sel_setLenient_, 1);
  v19 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v16, sel_dateFromString_, v19);

  if (!v20)
  {

    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v22(v10, 1, 1, v4);
    goto LABEL_5;
  }
  sub_1A4690084();

  v21 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v21(v10, v7, v4);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v22(v10, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
LABEL_5:
    sub_1A449C92C((uint64_t)v10);
    v24 = v30;
    v25 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v22)(v24, v25, 1, v4);
  }
  v23 = v30;
  v21(v30, v10, v4);
  v24 = v23;
  v25 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v22)(v24, v25, 1, v4);
}

uint64_t Date.endOfDay.getter()
{
  return sub_1A4566814((void (*)(uint64_t))Calendar.endOfDay(for:));
}

uint64_t sub_1A4566814(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_1A46902AC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A469027C();
  a1(v1);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Date.init(fussyParsedFrom:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  char *v27;
  id v29;
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  id v35[3];

  v32 = a3;
  v35[2] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v12 = a1;
  v13 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v13 = 11;
  v35[0] = (id)15;
  v35[1] = (id)(v13 | (v12 << 16));
  v33 = a1;
  v34 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720B20);
  sub_1A455EEA4();
  sub_1A4466118();
  v14 = sub_1A469117C();
  v16 = v15;
  v17 = objc_allocWithZone(MEMORY[0x1E0CB3560]);
  v35[0] = 0;
  v18 = objc_msgSend(v17, sel_initWithTypes_error_, 8, v35);
  if (v18)
  {
    v19 = v18;
    v20 = v35[0];
    v21 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v19, sel_firstMatchInString_options_range_, v21, 0, v14, v16);

    if (v22)
    {
      v23 = objc_msgSend(v22, sel_date);
      if (v23)
      {
        v24 = v23;
        sub_1A4690084();

        v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
        v25(v11, v8, v5);
        v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56);
        v26(v11, 0, 1, v5);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
        {
          v27 = v32;
          v25(v32, v11, v5);
          return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v26)(v27, 0, 1, v5);
        }
      }
      else
      {

        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
      }
      sub_1A449C92C((uint64_t)v11);
    }
    else
    {

    }
  }
  else
  {
    v29 = v35[0];
    v30 = (void *)sub_1A468FE68();

    swift_willThrow();
    swift_bridgeObjectRelease();

  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v32, 1, 1, v5);
}

uint64_t Date.testing_localizedString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];

  v0 = sub_1A4690210();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1A469012C();
  v5 = (void *)sub_1A4690150();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  objc_msgSend(v4, sel_setDateStyle_, 1);
  objc_msgSend(v4, sel_setTimeStyle_, 1);
  v6 = (void *)sub_1A4690030();
  v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v10 = v9;

  v13[4] = v8;
  v13[5] = v10;
  v13[2] = 11501794;
  v13[3] = 0xA300000000000000;
  v13[0] = 32;
  v13[1] = 0xE100000000000000;
  sub_1A4466118();
  v11 = sub_1A4691224();

  swift_bridgeObjectRelease();
  return v11;
}

BOOL Date.isInThePast.getter()
{
  double v0;

  sub_1A4690054();
  return v0 < 0.0;
}

BOOL Date.isAlmostEqual(to:absoluteTolerance:)(double a1)
{
  double v2;

  sub_1A469009C();
  return fabs(v2) < a1;
}

uint64_t static Date.eveningStartHour.getter()
{
  return 18;
}

uint64_t Optional<A>.orDistantPast.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4566DD8((void (*)(void))MEMORY[0x1E0CB0588], a1);
}

uint64_t Optional<A>.orDistantFuture.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4566DD8((void (*)(void))MEMORY[0x1E0CB05A8], a1);
}

uint64_t sub_1A4566DD8@<X0>(void (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A452A364(v4, (uint64_t)v8);
  v9 = sub_1A46900B4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v8, v9);
  a1();
  return sub_1A449C92C((uint64_t)v8);
}

uint64_t Array<A>.removeDuplicates()(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;

  v3 = Array<A>.removingDuplicates()(*v2, *(_QWORD *)(a1 + 16), a2);
  result = swift_bridgeObjectRelease();
  *v2 = v3;
  return result;
}

uint64_t Array<A>.removingDuplicates()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  _QWORD v36[2];
  uint64_t v37;

  v5 = a1;
  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v31 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  v31 = v14;
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v31 - v15;
  v37 = sub_1A46906CC();
  v17 = sub_1A4690BF4();
  if (MEMORY[0x1A859E4B8](v17, a2))
    v18 = sub_1A4567200(v17, a2, a3);
  else
    v18 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v36[1] = v18;
  v19 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1A859E4AC](v19, a2))
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v37;
  }
  v20 = 0;
  v32 = v5;
  v35 = v16;
  while (1)
  {
    v23 = sub_1A4690C0C();
    sub_1A4690BD0();
    if ((v23 & 1) != 0)
    {
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      v24(v16, v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v20, a2);
      v25 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_15;
      goto LABEL_10;
    }
    result = sub_1A469147C();
    if (v31 != 8)
      break;
    v36[0] = result;
    v24 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    v24(v16, (unint64_t)v36, a2);
    swift_unknownObjectRelease();
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
LABEL_10:
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v13, v16, a2);
    swift_bridgeObjectRetain();
    v26 = a3;
    v27 = sub_1A4690DBC();
    swift_bridgeObjectRelease();
    if ((v27 & 1) != 0)
    {
      v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    }
    else
    {
      v28 = v33;
      v24(v33, (unint64_t)v13, a2);
      sub_1A4690C78();
      sub_1A4690C3C();
      v24(v34, (unint64_t)v13, a2);
      sub_1A4690DC8();
      sub_1A4690DA4();
      v21 = *(void (**)(char *, uint64_t))(v6 + 8);
      v29 = v28;
      v5 = v32;
      v21(v29, a2);
    }
    a3 = v26;
    v21(v13, a2);
    v22 = MEMORY[0x1A859E4AC](v5, a2);
    ++v20;
    v16 = v35;
    if (v25 == v22)
      goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4567200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1A859E47C](v12))
  {
    sub_1A46913E0();
    v15 = sub_1A46913D4();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1A859E4B8](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1A4690C0C();
    sub_1A4690BD0();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1A469147C();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1A46907E0();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1A4690864();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1A4567508()
{
  uint64_t v0;
  uint64_t v1;
  const os_unfair_lock *v2;
  uint64_t (*v3)();
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v3 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    v4 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = 0;
    v5 = *(_BYTE *)(v0 + 48);
    *(_BYTE *)(v0 + 48) = 0;
    sub_1A456F528(v4, v5);
    swift_beginAccess();
    v6 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
    v11 = 0;
    v12 = 0;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v1;
    *(_QWORD *)(v7 + 24) = v6;
    sub_1A44C6CC8((uint64_t)&v11, v7 + 32, &qword_1ED23EC90);
    swift_retain();
    v3 = sub_1A456F548;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t))v3)(v8, v9);
  return swift_release();
}

uint64_t sub_1A4567614(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const os_unfair_lock *v4;
  uint64_t (*v5)();
  id v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  char v16;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v5 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v1 + 24) = 1;
    v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    v7 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = a1;
    v8 = *(_BYTE *)(v1 + 48);
    *(_BYTE *)(v1 + 48) = 0;
    v9 = v6;
    sub_1A456F574(v7, v8);
    swift_beginAccess();
    v10 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
    v15 = a1;
    v16 = 0;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v10;
    sub_1A44C6CC8((uint64_t)&v15, v11 + 32, &qword_1ED23EC88);
    swift_retain();
    v5 = sub_1A456F594;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A4567740(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  const os_unfair_lock *v6;
  uint64_t (*v7)();
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  char v17;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(const os_unfair_lock **)(v5 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
  {
    v7 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v2 + 24) = 1;
    swift_bridgeObjectRetain();
    os_unfair_lock_assert_owner(v6);
    swift_beginAccess();
    v8 = *(void **)(v2 + 40);
    v9 = *(void **)(v2 + 48);
    *(_QWORD *)(v2 + 40) = a1;
    *(_QWORD *)(v2 + 48) = a2;
    v10 = *(_BYTE *)(v2 + 56);
    *(_BYTE *)(v2 + 56) = 0;
    swift_bridgeObjectRetain();
    sub_1A456F378(v8, v9, v10);
    swift_beginAccess();
    v11 = *(_QWORD *)(v2 + 32);
    *(_QWORD *)(v2 + 32) = MEMORY[0x1E0DEE9D8];
    v16[0] = a1;
    v16[1] = a2;
    v17 = 0;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v5;
    *(_QWORD *)(v12 + 24) = v11;
    sub_1A44C6CC8((uint64_t)v16, v12 + 32, &qword_1EE71F6F0);
    swift_retain();
    v7 = sub_1A456F390;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  ((void (*)(uint64_t, uint64_t))v7)(v13, v14);
  return swift_release();
}

uint64_t sub_1A4567880(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const os_unfair_lock *v4;
  uint64_t (*v5)();
  id v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  char v16;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v5 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v1 + 24) = 1;
    v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    v7 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = a1;
    v8 = *(_BYTE *)(v1 + 48);
    *(_BYTE *)(v1 + 48) = 0;
    v9 = v6;
    sub_1A456F574(v7, v8);
    swift_beginAccess();
    v10 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
    v15 = a1;
    v16 = 0;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v10;
    sub_1A44C6CC8((uint64_t)&v15, v11 + 32, (uint64_t *)&unk_1EE720D80);
    swift_retain();
    v5 = sub_1A456F594;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A45679AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  const os_unfair_lock *v8;
  uint64_t (*v9)();
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[3];
  char v22;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(const os_unfair_lock **)(v7 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v3 + 24) & 1) != 0)
  {
    v9 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v3 + 24) = 1;
    v10 = a1;
    swift_bridgeObjectRetain();
    os_unfair_lock_assert_owner(v8);
    swift_beginAccess();
    v11 = *(void **)(v3 + 40);
    v12 = *(_QWORD *)(v3 + 48);
    v13 = *(_QWORD *)(v3 + 56);
    *(_QWORD *)(v3 + 40) = a1;
    *(_QWORD *)(v3 + 48) = a2;
    *(_QWORD *)(v3 + 56) = a3;
    v14 = *(_BYTE *)(v3 + 64);
    *(_BYTE *)(v3 + 64) = 0;
    v15 = v10;
    swift_bridgeObjectRetain();
    sub_1A456F160(v11, v12, v13, v14);
    swift_beginAccess();
    v16 = *(_QWORD *)(v3 + 32);
    *(_QWORD *)(v3 + 32) = MEMORY[0x1E0DEE9D8];
    v21[0] = a1;
    v21[1] = a2;
    v21[2] = a3;
    v22 = 0;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v7;
    *(_QWORD *)(v17 + 24) = v16;
    sub_1A44C6CC8((uint64_t)v21, v17 + 32, &qword_1EE720D20);
    swift_retain();
    v9 = sub_1A456F178;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  ((void (*)(uint64_t, uint64_t))v9)(v18, v19);
  return swift_release();
}

uint64_t sub_1A4567B14(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const os_unfair_lock *v4;
  uint64_t (*v5)();
  id v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  char v16;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v5 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v1 + 24) = 1;
    v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    v7 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = a1;
    v8 = *(_BYTE *)(v1 + 48);
    *(_BYTE *)(v1 + 48) = 1;
    v9 = a1;
    sub_1A456F528(v7, v8);
    swift_beginAccess();
    v10 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
    v15 = a1;
    v16 = 1;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v10;
    sub_1A44C6CC8((uint64_t)&v15, v11 + 32, &qword_1ED23EC90);
    swift_retain();
    v5 = sub_1A456F548;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A4567C44(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const os_unfair_lock *v4;
  uint64_t (*v5)();
  id v6;
  void *v7;
  unsigned __int8 v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v15;
  char v16;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v5 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v1 + 24) = 1;
    v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    v7 = *(void **)(v1 + 40);
    *(_QWORD *)(v1 + 40) = a1;
    v8 = *(_BYTE *)(v1 + 48);
    *(_BYTE *)(v1 + 48) = 1;
    v9 = a1;
    sub_1A456F574(v7, v8);
    swift_beginAccess();
    v10 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
    v15 = a1;
    v16 = 1;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v10;
    sub_1A44C6CC8((uint64_t)&v15, v11 + 32, &qword_1ED23EC88);
    swift_retain();
    v5 = sub_1A456F594;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v12, v13);
  return swift_release();
}

uint64_t sub_1A4567D74(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const os_unfair_lock *v4;
  uint64_t (*v5)();
  id v6;
  void *v7;
  void *v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  char v17;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v5 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v1 + 24) = 1;
    v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    v7 = *(void **)(v1 + 40);
    v8 = *(void **)(v1 + 48);
    *(_QWORD *)(v1 + 40) = a1;
    *(_QWORD *)(v1 + 48) = 0;
    v9 = *(_BYTE *)(v1 + 56);
    *(_BYTE *)(v1 + 56) = 1;
    v10 = a1;
    sub_1A456F378(v7, v8, v9);
    swift_beginAccess();
    v11 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
    v16[0] = a1;
    v16[1] = 0;
    v17 = 1;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v3;
    *(_QWORD *)(v12 + 24) = v11;
    sub_1A44C6CC8((uint64_t)v16, v12 + 32, &qword_1EE71F6F0);
    swift_retain();
    v5 = sub_1A456F390;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v13, v14);
  return swift_release();
}

uint64_t sub_1A4567EB0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  const os_unfair_lock *v4;
  uint64_t (*v5)();
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[3];
  char v18;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(const os_unfair_lock **)(v3 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v5 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v1 + 24) = 1;
    v6 = a1;
    os_unfair_lock_assert_owner(v4);
    swift_beginAccess();
    v7 = *(void **)(v1 + 40);
    v8 = *(_QWORD *)(v1 + 48);
    v9 = *(_QWORD *)(v1 + 56);
    *(_QWORD *)(v1 + 48) = 0;
    *(_QWORD *)(v1 + 56) = 0;
    *(_QWORD *)(v1 + 40) = a1;
    v10 = *(_BYTE *)(v1 + 64);
    *(_BYTE *)(v1 + 64) = 1;
    v11 = a1;
    sub_1A456F160(v7, v8, v9, v10);
    swift_beginAccess();
    v12 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v1 + 32) = MEMORY[0x1E0DEE9D8];
    v17[1] = 0;
    v17[2] = 0;
    v17[0] = a1;
    v18 = 1;
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v3;
    *(_QWORD *)(v13 + 24) = v12;
    sub_1A44C6CC8((uint64_t)v17, v13 + 32, &qword_1EE720D20);
    swift_retain();
    v5 = sub_1A456F178;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  ((void (*)(uint64_t, uint64_t))v5)(v14, v15);
  return swift_release();
}

uint64_t sub_1A4567FFC()
{
  uint64_t v0;
  uint64_t v1;
  const os_unfair_lock *v2;
  uint64_t (*v3)();
  void *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  char v12;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v3 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    v4 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = 0;
    v5 = *(_BYTE *)(v0 + 48);
    *(_BYTE *)(v0 + 48) = 2;
    sub_1A456F528(v4, v5);
    swift_beginAccess();
    v6 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
    v11 = 0;
    v12 = 2;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v1;
    *(_QWORD *)(v7 + 24) = v6;
    sub_1A44C6CC8((uint64_t)&v11, v7 + 32, &qword_1ED23EC90);
    swift_retain();
    v3 = sub_1A456F548;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t))v3)(v8, v9);
  return swift_release();
}

uint64_t sub_1A456810C()
{
  uint64_t v0;
  uint64_t v1;
  const os_unfair_lock *v2;
  uint64_t (*v3)();
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v3 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    v4 = *(void **)(v0 + 40);
    v5 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 40) = 0;
    *(_QWORD *)(v0 + 48) = 0;
    v6 = *(_BYTE *)(v0 + 56);
    *(_BYTE *)(v0 + 56) = 2;
    sub_1A456F378(v4, v5, v6);
    swift_beginAccess();
    v7 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
    v12[0] = 0;
    v12[1] = 0;
    v13 = 2;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v1;
    *(_QWORD *)(v8 + 24) = v7;
    sub_1A44C6CC8((uint64_t)v12, v8 + 32, &qword_1EE71F6F0);
    swift_retain();
    v3 = sub_1A456F390;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t))v3)(v9, v10);
  return swift_release();
}

uint64_t sub_1A456821C()
{
  uint64_t v0;
  uint64_t v1;
  const os_unfair_lock *v2;
  uint64_t (*v3)();
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(const os_unfair_lock **)(v1 + 16);
  os_unfair_lock_lock_with_options();
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v3 = (uint64_t (*)())nullsub_1;
  }
  else
  {
    *(_BYTE *)(v0 + 24) = 1;
    os_unfair_lock_assert_owner(v2);
    swift_beginAccess();
    v4 = *(void **)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    *(_QWORD *)(v0 + 48) = 0;
    *(_QWORD *)(v0 + 56) = 0;
    *(_QWORD *)(v0 + 40) = 0;
    v7 = *(_BYTE *)(v0 + 64);
    *(_BYTE *)(v0 + 64) = 2;
    sub_1A456F160(v4, v5, v6, v7);
    swift_beginAccess();
    v8 = *(_QWORD *)(v0 + 32);
    *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
    memset(v13, 0, sizeof(v13));
    v14 = 2;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v1;
    *(_QWORD *)(v9 + 24) = v8;
    sub_1A44C6CC8((uint64_t)v13, v9 + 32, &qword_1EE720D20);
    swift_retain();
    v3 = sub_1A456F178;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  ((void (*)(uint64_t, uint64_t))v3)(v10, v11);
  return swift_release();
}

uint64_t sub_1A4568338(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(void);
  uint64_t result;
  uint64_t v16;

  v7 = *(_QWORD *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23ED58);
  swift_allocObject();
  v8 = swift_retain();
  v9 = sub_1A45699B0(v8);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = v9;
  v11 = *(_QWORD *)(v7 + 16);
  swift_retain_n();
  swift_retain();
  os_unfair_lock_lock_with_options();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 40) = sub_1A456F4D8;
  *(_QWORD *)(v12 + 48) = v10;
  *(_QWORD *)(v12 + 56) = sub_1A456F488;
  *(_QWORD *)(v12 + 64) = v9;
  *(_QWORD *)(v12 + 72) = sub_1A456F468;
  *(_QWORD *)(v12 + 80) = v9;
  v13 = a1;
  swift_retain();
  swift_retain_n();
  v14 = (void (*)(void))sub_1A4512F00((uint64_t)sub_1A456F4EC, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();
  swift_release_n();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v16 = *(_QWORD *)(v9 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A45684DC(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;

  if (*(_QWORD *)(v1 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    v3 = swift_release();
    a1(v3);
    swift_release();
    swift_release();
  }
  *(_QWORD *)(v1 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A4568560(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2;
  if (*(_QWORD *)(v2 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    a2(a1);
    swift_release();
    swift_release();
  }
  *(_QWORD *)(v3 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A45685EC(uint64_t a1, void (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  a2(&v3);
  return sub_1A45686C8();
}

uint64_t sub_1A45686C8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    sub_1A4567508();
    swift_release();
    swift_release();
  }
  *(_QWORD *)(v0 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A4568740(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void (*v16)(void);
  uint64_t result;
  uint64_t v18;

  v8 = *(_QWORD *)(v4 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23ED58);
  swift_allocObject();
  v9 = swift_retain();
  v10 = sub_1A45699B0(v9);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v11;
  v12[3] = v10;
  v12[4] = a3;
  v12[5] = a4;
  v13 = *(_QWORD *)(v8 + 16);
  swift_retain_n();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock_with_options();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = 0;
  *(_BYTE *)(v14 + 32) = 1;
  *(_QWORD *)(v14 + 40) = sub_1A456F760;
  *(_QWORD *)(v14 + 48) = v12;
  *(_QWORD *)(v14 + 56) = sub_1A456F488;
  *(_QWORD *)(v14 + 64) = v10;
  *(_QWORD *)(v14 + 72) = sub_1A456F468;
  *(_QWORD *)(v14 + 80) = v10;
  v15 = a1;
  swift_retain();
  swift_retain_n();
  v16 = (void (*)(void))sub_1A4512F00((uint64_t)sub_1A456F4EC, v14);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  v16();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v18 = *(_QWORD *)(v10 + 16);
  if (v18)
  {
    swift_retain();
    swift_release();
    return v18;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A4568924(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t))
{
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v8 = a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    a4(&v8, Strong);
    sub_1A45686C8();
    swift_release();
  }
  else
  {
    sub_1A4451C3C();
    v6 = (void *)swift_allocError();
    *(_QWORD *)v7 = 0;
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 1;
    *(_OWORD *)(v7 + 32) = 0u;
    *(_OWORD *)(v7 + 48) = 0u;
    sub_1A4568560((uint64_t)v6, (void (*)(uint64_t))sub_1A4567B14);

  }
}

uint64_t sub_1A4568A98(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(void);
  uint64_t result;
  uint64_t v16;

  v7 = *(_QWORD *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE720D50);
  swift_allocObject();
  v8 = swift_retain();
  v9 = sub_1A4569AEC(v8);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = v9;
  v11 = *(_QWORD *)(v7 + 16);
  swift_retain_n();
  swift_retain();
  os_unfair_lock_lock_with_options();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 40) = sub_1A456F2A8;
  *(_QWORD *)(v12 + 48) = v10;
  *(_QWORD *)(v12 + 56) = sub_1A456F284;
  *(_QWORD *)(v12 + 64) = v9;
  *(_QWORD *)(v12 + 72) = sub_1A456F264;
  *(_QWORD *)(v12 + 80) = v9;
  v13 = a1;
  swift_retain();
  swift_retain_n();
  v14 = (void (*)(void))sub_1A45130B0((uint64_t)sub_1A456F044, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();
  swift_release_n();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v16 = *(_QWORD *)(v9 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4568C3C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(void);
  uint64_t result;
  uint64_t v16;

  v7 = *(_QWORD *)(v3 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D08);
  swift_allocObject();
  v8 = swift_retain();
  v9 = sub_1A4569C2C(v8);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = v9;
  v11 = *(_QWORD *)(v7 + 16);
  swift_retain_n();
  swift_retain();
  os_unfair_lock_lock_with_options();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 40) = sub_1A456F030;
  *(_QWORD *)(v12 + 48) = v10;
  *(_QWORD *)(v12 + 56) = sub_1A456F00C;
  *(_QWORD *)(v12 + 64) = v9;
  *(_QWORD *)(v12 + 72) = sub_1A456EFEC;
  *(_QWORD *)(v12 + 80) = v9;
  v13 = a1;
  swift_retain();
  swift_retain_n();
  v14 = (void (*)(void))sub_1A45130B0((uint64_t)sub_1A456F044, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v14();
  swift_release_n();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  v16 = *(_QWORD *)(v9 + 16);
  if (v16)
  {
    swift_retain();
    swift_release();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4568DE0(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t (*v11)();
  uint64_t v13;

  v13 = a1;
  v5 = *(_QWORD *)(a2(&v13) + 16);
  v6 = qword_1ED243C50;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1ED2431A0;
  v8 = *(_QWORD *)(v5 + 16);
  swift_retain_n();
  os_unfair_lock_lock_with_options();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 40) = sub_1A456F2BC;
  *(_QWORD *)(v9 + 48) = a4;
  *(_QWORD *)(v9 + 56) = sub_1A456F284;
  *(_QWORD *)(v9 + 64) = a4;
  *(_QWORD *)(v9 + 72) = sub_1A456F264;
  *(_QWORD *)(v9 + 80) = a4;
  v10 = v7;
  swift_retain_n();
  v11 = sub_1A4513260((uint64_t)sub_1A456F2D0, v9);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  v11();
  swift_release();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1A4568FE8(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t (*v11)();
  uint64_t v13;

  v13 = a1;
  v5 = *(_QWORD *)(a2(&v13) + 16);
  v6 = qword_1ED243C50;
  swift_retain();
  if (v6 != -1)
    swift_once();
  v7 = (void *)qword_1ED2431A0;
  v8 = *(_QWORD *)(v5 + 16);
  swift_retain_n();
  os_unfair_lock_lock_with_options();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v9 + 40) = sub_1A456F08C;
  *(_QWORD *)(v9 + 48) = a4;
  *(_QWORD *)(v9 + 56) = sub_1A456F00C;
  *(_QWORD *)(v9 + 64) = a4;
  *(_QWORD *)(v9 + 72) = sub_1A456EFEC;
  *(_QWORD *)(v9 + 80) = a4;
  v10 = v7;
  swift_retain_n();
  v11 = sub_1A4513418((uint64_t)sub_1A456F0A4, v9);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  v11();
  swift_release();
  swift_release();
  swift_release_n();
  return swift_release();
}

uint64_t sub_1A45691F0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  if (*(_QWORD *)(a1 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    v4 = swift_release();
    a2(v4);
    swift_release();
    swift_release();
  }
  *(_QWORD *)(a1 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A4569274(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (*(_QWORD *)(a2 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    a3(a1);
    swift_release();
    swift_release();
  }
  *(_QWORD *)(a2 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A4569300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_QWORD *)(a3 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    sub_1A4567740(a1, a2);
    swift_release();
    swift_release();
  }
  *(_QWORD *)(a3 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A4569390(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(_QWORD *)(a4 + 24) && swift_weakLoadStrong())
  {
    swift_retain();
    swift_retain();
    swift_release();
    sub_1A45679AC(a1, a2, a3);
    swift_release();
    swift_release();
  }
  *(_QWORD *)(a4 + 24) = 0;
  return swift_release();
}

uint64_t sub_1A4569430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v24 = a5;
  v13 = sub_1A46905A0();
  v23 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1A46905DC();
  v16 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a6;
  v19[3] = a7;
  v19[4] = a1;
  v19[5] = a2;
  v19[6] = a3;
  v19[7] = a4;
  aBlock[4] = sub_1A456F8A4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_152;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1A46905C4();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v18, v15, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v22);
  return swift_release();
}

void sub_1A4569618(void (*a1)(void), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void (*v19)(void);
  id v20;

  a1();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  v11 = qword_1ED243C50;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = (id)qword_1ED2431A0;
  v13 = sub_1A4568338(v12, (uint64_t)sub_1A456F8B4, v10);
  swift_release();
  swift_release();

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a5;
  *(_QWORD *)(v14 + 24) = a6;
  v15 = (void *)qword_1ED2431A0;
  v16 = *(_QWORD *)(*(_QWORD *)(v13 + 16) + 16);
  swift_retain();
  v17 = v15;
  os_unfair_lock_lock_with_options();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = 0;
  *(_BYTE *)(v18 + 32) = 1;
  *(_QWORD *)(v18 + 40) = nullsub_1;
  *(_QWORD *)(v18 + 48) = 0;
  *(_QWORD *)(v18 + 56) = sub_1A456F8F0;
  *(_QWORD *)(v18 + 64) = v14;
  *(_QWORD *)(v18 + 72) = nullsub_1;
  *(_QWORD *)(v18 + 80) = 0;
  v20 = v17;
  swift_retain();
  v19 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v18);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  v19();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A45697DC(void (*a1)(void **__return_ptr))
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unsigned __int8 v9;
  void *v11;

  a1(&v11);
  v1 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242178);
  v2 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = v1;
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = 0;
  *(_DWORD *)(v3 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2420E0);
  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 40) = 0;
  *(_QWORD *)(v6 + 32) = v7;
  *(_BYTE *)(v6 + 48) = -1;
  *(_QWORD *)(v6 + 16) = v3;
  *(_BYTE *)(v6 + 24) = 1;
  swift_beginAccess();
  v8 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v4;
  v9 = *(_BYTE *)(v6 + 48);
  *(_BYTE *)(v6 + 48) = 0;
  sub_1A456F574(v8, v9);
  *(_QWORD *)(v2 + 16) = v6;

  return v2;
}

uint64_t sub_1A45699B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242180);
  v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED2420F0);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 40) = 0;
  *(_BYTE *)(v4 + 48) = -1;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 0;
  *(_QWORD *)(v3 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED68);
  v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_unownedRetainStrong();
  *(_QWORD *)(v1 + 24) = v5;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  swift_release();
  return v1;
}

uint64_t sub_1A4569AEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D60);
  v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D68);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 56) = -1;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 0;
  *(_QWORD *)(v3 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE720D70);
  v6 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_unownedRetainStrong();
  *(_QWORD *)(v1 + 24) = v6;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  swift_release();
  return v1;
}

uint64_t sub_1A4569C2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = 0;
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D28);
  v3 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D30);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 40) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 56) = 0;
  *(_BYTE *)(v4 + 64) = -1;
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = 0;
  *(_QWORD *)(v3 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D38);
  v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_unownedRetainStrong();
  *(_QWORD *)(v1 + 24) = v5;
  swift_retain();
  swift_release();
  swift_release();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = v3;
  swift_release();
  return v1;
}

uint64_t sub_1A4569D6C(void *a1, char a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  char v17;
  uint64_t v18;

  if (!a2)
  {
    v17 = a5 & 1;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a6;
    *(_QWORD *)(v18 + 24) = a7;
    swift_retain();
    sub_1A44DA18C((uint64_t)a3, a4, v17, sub_1A4452640, v18);
    return swift_release();
  }
  if (a2 == 1)
  {
    swift_retain();
    sub_1A4514078(a1, 1);
    sub_1A44DBD30(a3, 0, 1, a8, a9, a1);
    sub_1A4514000(a1, 1);
    return swift_release();
  }
  return sub_1A44DA18C((uint64_t)a3, 0, 1, a10, a11);
}

void sub_1A4569E70(void *a1, char a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  char v17;
  _QWORD *v18;

  if (a2)
  {
    if (a2 == 1)
    {
      sub_1A4513CD8(a1, 1u);
      swift_retain();
      sub_1A44DBD30(a3, 0, 1, a8, a9, a1);
      sub_1A4513CA4(a1, 1u);
      swift_release();
    }
    else
    {
      sub_1A44DA18C((uint64_t)a3, 0, 1, a10, a11);
    }
  }
  else
  {
    v17 = a5 & 1;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a6;
    v18[3] = a7;
    v18[4] = a1;
    sub_1A4513CD8(a1, 0);
    sub_1A4513CD8(a1, 0);
    swift_retain();
    sub_1A44DA18C((uint64_t)a3, a4, v17, sub_1A456F054, (uint64_t)v18);
    swift_release();
    sub_1A4513CA4(a1, 0);
  }
}

void sub_1A4569FBC(void *a1, char a2, void *a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void (*a8)(void *), uint64_t a9, uint64_t (*a10)(void), uint64_t a11)
{
  char v17;
  uint64_t v18;
  void *v19;

  if (a2)
  {
    if (a2 == 1)
    {
      sub_1A4513CD8(a1, 1u);
      swift_retain();
      sub_1A44DBD30(a3, 0, 1, a8, a9, a1);
      sub_1A4513CA4(a1, 1u);
      swift_release();
    }
    else
    {
      sub_1A44DA18C((uint64_t)a3, 0, 1, a10, a11);
    }
  }
  else
  {
    v17 = a5 & 1;
    v19 = a1;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a6;
    *(_QWORD *)(v18 + 24) = a7;
    sub_1A44C6CC8((uint64_t)&v19, v18 + 32, (uint64_t *)&unk_1EE720D10);
    sub_1A4513CD8(a1, 0);
    sub_1A4513CD8(a1, 0);
    swift_retain();
    sub_1A44DA18C((uint64_t)a3, a4, v17, sub_1A456F054, v18);
    swift_release();
    sub_1A4513CA4(a1, 0);
  }
}

void sub_1A456A130(void *a1, id a2, char a3, void *a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, void (*a9)(void *), uint64_t a10, uint64_t (*a11)(void), uint64_t a12)
{
  char v18;
  _QWORD *v19;

  if (a3)
  {
    if (a3 == 1)
    {
      sub_1A4513F48(a1, a2, 1);
      swift_retain();
      sub_1A44DBD30(a4, 0, 1, a9, a10, a1);
      sub_1A4513EC0(a1, a2, 1);
      swift_release();
    }
    else
    {
      sub_1A44DA18C((uint64_t)a4, 0, 1, a11, a12);
    }
  }
  else
  {
    v18 = a6 & 1;
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a7;
    v19[3] = a8;
    v19[4] = a1;
    v19[5] = a2;
    sub_1A4513F48(a1, a2, 0);
    sub_1A4513F48(a1, a2, 0);
    swift_retain();
    sub_1A44DA18C((uint64_t)a4, a5, v18, sub_1A456F340, (uint64_t)v19);
    swift_release();
    sub_1A4513EC0(a1, a2, 0);
  }
}

void sub_1A456A290(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, void (*a10)(void *), uint64_t a11, uint64_t (*a12)(void), uint64_t a13)
{
  char v19;
  _QWORD *v20;

  if (a4)
  {
    if (a4 == 1)
    {
      sub_1A4513E08(a1, a2, a3, 1);
      swift_retain();
      sub_1A44DBD30(a5, 0, 1, a10, a11, a1);
      sub_1A4513D58(a1, a2, a3, 1);
      swift_release();
    }
    else
    {
      sub_1A44DA18C((uint64_t)a5, 0, 1, a12, a13);
    }
  }
  else
  {
    v19 = a7 & 1;
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = a8;
    v20[3] = a9;
    v20[4] = a1;
    v20[5] = a2;
    v20[6] = a3;
    sub_1A4513E08(a1, a2, a3, 0);
    sub_1A4513E08(a1, a2, a3, 0);
    swift_retain();
    sub_1A44DA18C((uint64_t)a5, a6, v19, sub_1A456F120, (uint64_t)v20);
    swift_release();
    sub_1A4513D58(a1, a2, a3, 0);
  }
}

void sub_1A456A41C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *);
  uint64_t v10;
  char v11;

  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = a2 + 40;
    do
    {
      v9 = *(void (**)(uint64_t *))(v8 - 8);
      v10 = a3;
      v11 = a4;
      swift_retain();
      v9(&v10);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
}

void sub_1A456A4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *);
  _QWORD v9[2];
  char v10;

  v9[0] = a3;
  v9[1] = a4;
  v10 = a5;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = a2 + 40;
    do
    {
      v8 = *(void (**)(_QWORD *))(v7 - 8);
      swift_retain();
      v8(v9);
      swift_release();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
}

void sub_1A456A568(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t *);
  uint64_t v8;
  char v9;

  v8 = a3;
  v9 = a4;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = a2 + 40;
    do
    {
      v7 = *(void (**)(uint64_t *))(v6 - 8);
      swift_retain();
      v7(&v8);
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
}

void sub_1A456A604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *);
  _QWORD v10[3];
  char v11;

  v10[0] = a3;
  v10[1] = a4;
  v10[2] = a5;
  v11 = a6;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(a1 + 16));
  v7 = *(_QWORD *)(a2 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = a2 + 40;
    do
    {
      v9 = *(void (**)(_QWORD *))(v8 - 8);
      swift_retain();
      v9(v10);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
}

uint64_t REMContactAndName.init(contact:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

id REMContactAndName.contact.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t REMContactAndName.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *REMContactsProvider.__allocating_init(contactStoreCreator:queue:backgroundQueue:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  id v15;
  _DWORD *v16;
  uint64_t v17;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = 0;
  v8[5] = a3;
  v8[6] = a4;
  v8[7] = 0;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1A456AB34;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = sub_1A456AB40;
  v11[5] = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FB0);
  v12 = (_QWORD *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v13 = swift_allocObject();
  v14 = a3;
  swift_retain();
  v15 = a4;
  swift_retain();
  swift_retain();
  v16 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v13 + 16) = v16;
  *v16 = 0;
  v17 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v13 + 24) = 0;
  v12[9] = v13;
  v12[10] = v17;
  v12[2] = v14;
  v12[3] = sub_1A456E18C;
  v12[7] = sub_1A456AB40;
  v12[8] = v10;
  v12[5] = 0;
  v12[6] = 0;
  v12[4] = v11;
  swift_release();
  swift_release();
  v8[7] = v12;
  swift_release();
  return v8;
}

_QWORD *REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  id v13;
  _DWORD *v14;
  uint64_t v15;

  v4[2] = a1;
  v4[3] = a2;
  v4[4] = 0;
  v4[5] = a3;
  v4[6] = a4;
  v4[7] = 0;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1A456FACC;
  *(_QWORD *)(v8 + 24) = v7;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = sub_1A456AB40;
  v9[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FB0);
  v10 = (_QWORD *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v11 = swift_allocObject();
  v12 = a3;
  swift_retain();
  v13 = a4;
  swift_retain();
  swift_retain();
  v14 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v11 + 16) = v14;
  *v14 = 0;
  v15 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v11 + 24) = 0;
  v10[9] = v11;
  v10[10] = v15;
  v10[2] = v12;
  v10[3] = sub_1A456E18C;
  v10[7] = sub_1A456AB40;
  v10[8] = v8;
  v10[5] = 0;
  v10[6] = 0;
  v10[4] = v9;
  swift_release();
  swift_release();
  v4[7] = v10;
  swift_release();
  return v4;
}

uint64_t sub_1A456AA08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1A456AA2C(void *a1, uint64_t a2, char a3)
{
  uint64_t v5;
  id v6;
  uint64_t v7;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if ((a3 & 1) != 0)
    {
      v6 = a1;
      v7 = (uint64_t)sub_1A456C2D4(v6);

    }
    else
    {
      v7 = (uint64_t)sub_1A456C1EC();
    }
    swift_release();
  }
  else
  {
    sub_1A4451C3C();
    v7 = swift_allocError();
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = 0;
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 1;
    *(_OWORD *)(v5 + 32) = 0u;
    *(_OWORD *)(v5 + 48) = 0u;
  }
  return v7;
}

uint64_t sub_1A456AB34(void *a1, uint64_t a2, char a3)
{
  return sub_1A456AA2C(a1, a2, a3 & 1);
}

uint64_t REMContactsProvider.meCard(keys:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t result;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  char v14;

  v3 = sub_1A469060C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (void **)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + 40);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    if (*(_QWORD *)(v1 + 56))
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A456AC64(a1, 0, 0, (uint64_t *)&v13);
      swift_bridgeObjectRelease();
      swift_release();
      v10 = v13;
      v11 = v14;
      v12 = sub_1A456AD80(v13, v14);
      sub_1A456E240(v10, v11);
      return (uint64_t)v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A456AC64@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  os_unfair_lock_s *v16;
  uint64_t v17;

  v9 = sub_1A469060C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v4 + 16);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v14 = v13;
  LOBYTE(v13) = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    v16 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 72) + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    sub_1A456D434(v4, a1, a2, a3 & 1, a4);
    os_unfair_lock_unlock(v16);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1A456AD80(void *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;
  id v12;
  _DWORD *v13;
  uint64_t v14;

  if (a2)
  {
    if (a2 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242178);
      v3 = swift_allocObject();
      type metadata accessor for UnfairLock();
      v4 = swift_allocObject();
      v5 = a1;
      v6 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)(v4 + 16) = v6;
      *v6 = 0;
      *(_DWORD *)(v4 + 24) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2420E0);
      v7 = swift_allocObject();
      v8 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v7 + 40) = 0;
      *(_QWORD *)(v7 + 32) = v8;
      *(_BYTE *)(v7 + 48) = -1;
      *(_QWORD *)(v7 + 16) = v4;
      *(_BYTE *)(v7 + 24) = 1;
      swift_beginAccess();
      v9 = *(void **)(v7 + 40);
      *(_QWORD *)(v7 + 40) = a1;
      v10 = *(_BYTE *)(v7 + 48);
      *(_BYTE *)(v7 + 48) = 0;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242178);
      v3 = swift_allocObject();
      type metadata accessor for UnfairLock();
      v11 = swift_allocObject();
      v12 = a1;
      v13 = (_DWORD *)swift_slowAlloc();
      *(_QWORD *)(v11 + 16) = v13;
      *v13 = 0;
      *(_DWORD *)(v11 + 24) = 0;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2420E0);
      v7 = swift_allocObject();
      v14 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v7 + 40) = 0;
      *(_QWORD *)(v7 + 32) = v14;
      *(_BYTE *)(v7 + 48) = -1;
      *(_QWORD *)(v7 + 16) = v11;
      *(_BYTE *)(v7 + 24) = 1;
      swift_beginAccess();
      v9 = *(void **)(v7 + 40);
      *(_QWORD *)(v7 + 40) = a1;
      v10 = *(_BYTE *)(v7 + 48);
      *(_BYTE *)(v7 + 48) = 1;
    }
    sub_1A456F574(v9, v10);
    *(_QWORD *)(v3 + 16) = v7;
    return (void *)v3;
  }
  else
  {
    swift_retain();
  }
  return a1;
}

uint64_t REMContactsProvider.name(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t);
  id v11;
  void (*v12)(_QWORD *, uint64_t);
  uint64_t v13;
  id v14;
  char v15;
  uint64_t result;
  id v17;
  void *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t v27;
  void *v28;
  char v29;

  v2 = v1;
  v4 = sub_1A469060C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (void **)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)(v2 + 40);
  *v7 = v8;
  v9 = *MEMORY[0x1E0DEF740];
  v10 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v10(v7, v9, v4);
  v11 = v8;
  LOBYTE(v8) = sub_1A4690624();
  v12 = *(void (**)(_QWORD *, uint64_t))(v5 + 8);
  v12(v7, v4);
  if ((v8 & 1) != 0)
  {
    if (qword_1EE71C128 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v13 = qword_1EE720CB8;
  *v7 = v11;
  v10(v7, v9, v4);
  v14 = v11;
  v15 = sub_1A4690624();
  result = ((uint64_t (*)(_QWORD *, uint64_t))v12)(v7, v4);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(v2 + 56))
  {
    swift_bridgeObjectRetain();
    v17 = a1;
    swift_retain();
    sub_1A456AC64(a1, v13, 1, (uint64_t *)&v28);
    swift_bridgeObjectRelease();

    swift_release();
    v18 = v28;
    v19 = v29;
    sub_1A456AD80(v28, v29);
    sub_1A456E240(v18, v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CC8);
    v20 = swift_allocObject();
    type metadata accessor for UnfairLock();
    v21 = swift_allocObject();
    v22 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v21 + 16) = v22;
    *v22 = 0;
    *(_DWORD *)(v21 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CD0);
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v23 + 40) = 0;
    *(_BYTE *)(v23 + 48) = -1;
    *(_QWORD *)(v23 + 16) = v21;
    *(_BYTE *)(v23 + 24) = 0;
    *(_QWORD *)(v20 + 16) = v23;
    swift_retain();
    sub_1A456E5A0((uint64_t)sub_1A456E454, v20);
    swift_release();
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v2;
    *(_QWORD *)(v13 + 24) = v17;
    v24 = qword_1ED243C50;
    v25 = v17;
    swift_retain();
    if (v24 == -1)
    {
LABEL_6:
      v26 = (id)qword_1ED2431A0;
      v27 = sub_1A4568A98(v26, (uint64_t)sub_1A456E750, v13);
      swift_release();
      swift_release();
      swift_release();

      return v27;
    }
LABEL_10:
    swift_once();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t REMContactsProvider.contact(matching:keys:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  id v14;
  uint64_t v15;

  v7 = sub_1A469060C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + 40);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) != 0)
  {
    if (*(_QWORD *)(v3 + 56))
    {
      swift_bridgeObjectRetain();
      v14 = a1;
      swift_retain();
      sub_1A456AC64(a1, a2, 1, a3);
      swift_bridgeObjectRelease();

      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A456B34C(void **a1, int a2, id a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;

  v3 = sub_1A456E768(a3, *a1);
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D60);
  v6 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v7 = swift_allocObject();
  v8 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v7 + 16) = v8;
  *v8 = 0;
  *(_DWORD *)(v7 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D68);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 48) = 0;
  *(_BYTE *)(v9 + 56) = -1;
  *(_QWORD *)(v9 + 16) = v7;
  *(_BYTE *)(v9 + 24) = 1;
  swift_beginAccess();
  v10 = *(void **)(v9 + 40);
  v11 = *(void **)(v9 + 48);
  *(_QWORD *)(v9 + 40) = v3;
  *(_QWORD *)(v9 + 48) = v5;
  v12 = *(_BYTE *)(v9 + 56);
  *(_BYTE *)(v9 + 56) = 0;
  sub_1A456F378(v10, v11, v12);
  *(_QWORD *)(v6 + 16) = v9;
  return v6;
}

void *REMContactsProvider.syncContact(matching:keys:)(void *result, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;

  if (*(_QWORD *)(v2 + 56))
  {
    v4 = result;
    swift_bridgeObjectRetain();
    v5 = v4;
    swift_retain();
    v6 = sub_1A456B4F4(v4, a2, 1);
    swift_bridgeObjectRelease();

    swift_release();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1A456B4F4(void *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  __int16 v14;
  __int16 v15;
  int v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD aBlock[6];
  void *v31;
  BOOL v32;
  __int128 v33;
  BOOL v34;

  v6 = a3 & 1;
  v7 = sub_1A46905A0();
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A46905DC();
  v24 = *(_QWORD *)(v10 - 8);
  v25 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(os_unfair_lock_s **)(v3[9] + 16);
  swift_retain();
  os_unfair_lock_lock_with_options();
  v28 = sub_1A456D900((uint64_t)v3, a1, a2, v6);
  v15 = v14;
  v16 = v14 & 1;
  os_unfair_lock_unlock(v13);
  swift_release();
  if ((v15 & 0x100) != 0 && v3[5])
  {
    v23 = v3[2];
    v17 = swift_allocObject();
    swift_weakInit();
    *(_QWORD *)&v33 = a1;
    *((_QWORD *)&v33 + 1) = a2;
    v34 = v6 != 0;
    v18 = v28;
    v31 = v28;
    v32 = v16 != 0;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v17;
    sub_1A456F21C(&v33, v19 + 24);
    sub_1A44C6CC8((uint64_t)&v31, v19 + 48, (uint64_t *)&unk_1EE720D40);
    aBlock[4] = sub_1A456F234;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A44AE6A0;
    aBlock[3] = &block_descriptor_7;
    v20 = _Block_copy(aBlock);
    sub_1A444A990(a1, a2, v6);
    sub_1A444AA0C(v18);
    swift_retain();
    sub_1A46905C4();
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1A44A6088();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
    sub_1A44A60D0();
    v21 = v27;
    sub_1A46912A8();
    MEMORY[0x1A859E8FC](0, v12, v9, v20);
    _Block_release(v20);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v21);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v25);
    swift_release();
    swift_release();
  }
  return v28;
}

void REMContactsProvider.contactAndName(matching:keys:)(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  char v15;
  void (*v16)(_QWORD *, uint64_t);
  id v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  void *v38;
  char v39;

  v4 = v3;
  v37 = a3;
  v7 = sub_1A469060C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v4 + 40);
  *v10 = v11;
  v12 = *MEMORY[0x1E0DEF740];
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  v14 = v11;
  v15 = sub_1A4690624();
  v16 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
  v16(v10, v7);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  *v10 = v14;
  v13(v10, v12, v7);
  v17 = v14;
  v18 = sub_1A4690624();
  v16(v10, v7);
  if ((v18 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (!*(_QWORD *)(v4 + 56))
  {
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  v19 = a1;
  swift_retain();
  sub_1A456AC64(a1, (uint64_t)a2, 1, (uint64_t *)&v38);
  swift_bridgeObjectRelease();

  swift_release();
  a2 = v38;
  if (!v39)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CC8);
    v24 = swift_allocObject();
    type metadata accessor for UnfairLock();
    v25 = swift_allocObject();
    v26 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v25 + 16) = v26;
    *v26 = 0;
    *(_DWORD *)(v25 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CD0);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v27 + 40) = 0;
    *(_BYTE *)(v27 + 48) = -1;
    *(_QWORD *)(v27 + 16) = v25;
    *(_BYTE *)(v27 + 24) = 0;
    *(_QWORD *)(v24 + 16) = v27;
    swift_retain();
    sub_1A456E5A0((uint64_t)sub_1A456FAC4, v24);
    swift_release();
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v4;
    v10[3] = v19;
    v28 = qword_1ED243C50;
    v29 = v19;
    swift_retain();
    if (v28 == -1)
    {
LABEL_8:
      v30 = (id)qword_1ED2431A0;
      v31 = sub_1A4568C3C(v30, (uint64_t)sub_1A456E9B4, (uint64_t)v10);
      sub_1A456E240(a2, 0);
      swift_release();
      swift_release();

      v32 = v37;
      v37[1] = 0;
      v32[2] = 0;
      *v32 = v31;
      *((_BYTE *)v32 + 24) = 0;
      return;
    }
LABEL_12:
    swift_once();
    goto LABEL_8;
  }
  if (v39 == 1)
  {
    sub_1A456E95C(v38, 1);
    v20 = sub_1A456E768(v19, a2);
    v22 = v21;
    sub_1A456E240(a2, 1);
    v23 = v37;
    *v37 = (uint64_t)a2;
    v23[1] = v20;
    v23[2] = v22;
    *((_BYTE *)v23 + 24) = 1;
  }
  else
  {
    sub_1A456E240(v38, 2);
    v33 = sub_1A456E768(v19, 0);
    v34 = v37;
    *v37 = 0;
    v34[1] = v33;
    v34[2] = v35;
    *((_BYTE *)v34 + 24) = 1;
  }
}

uint64_t sub_1A456BAF4(void **a1, int a2, id a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  _DWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v3 = *a1;
  v4 = sub_1A456E768(a3, *a1);
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D28);
  v7 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = v3;
  v10 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v8 + 16) = v10;
  *v10 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720D30);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = 0;
  *(_BYTE *)(v11 + 64) = -1;
  *(_QWORD *)(v11 + 16) = v8;
  *(_BYTE *)(v11 + 24) = 1;
  swift_beginAccess();
  v12 = *(void **)(v11 + 40);
  v13 = *(_QWORD *)(v11 + 48);
  v14 = *(_QWORD *)(v11 + 56);
  *(_QWORD *)(v11 + 40) = v3;
  *(_QWORD *)(v11 + 48) = v4;
  *(_QWORD *)(v11 + 56) = v6;
  v15 = *(_BYTE *)(v11 + 64);
  *(_BYTE *)(v11 + 64) = 0;
  sub_1A456F160(v12, v13, v14, v15);
  *(_QWORD *)(v7 + 16) = v11;
  return v7;
}

id sub_1A456BC1C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A4696C10;
  v1 = (void *)*MEMORY[0x1E0C967F0];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C967F0];
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_descriptorForRequiredKeysForStyle_, 0);
  v7 = (void *)*MEMORY[0x1E0C96898];
  v5 = *MEMORY[0x1E0C96898];
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v5;
  sub_1A4690BB8();
  qword_1ED241970 = v0;
  return v7;
}

uint64_t static REMContactsProvider.contactKeysForDisplayString.getter()
{
  return sub_1A44F16E4(&qword_1ED242670);
}

uint64_t sub_1A456BCF0()
{
  uint64_t result;

  result = sub_1A456BD0C();
  qword_1EE720CB8 = result;
  return result;
}

uint64_t sub_1A456BD0C()
{
  id v0;
  uint64_t v1;
  uint64_t v3;

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v3 = MEMORY[0x1E0DEE9D8];
  sub_1A469153C();
  swift_bridgeObjectRetain();
  sub_1A469087C();
  swift_bridgeObjectRelease();
  sub_1A4691518();
  sub_1A4691548();
  sub_1A4691554();
  sub_1A4691524();
  swift_bridgeObjectRetain();
  sub_1A469087C();
  swift_bridgeObjectRelease();
  sub_1A4691518();
  sub_1A4691548();
  sub_1A4691554();
  sub_1A4691524();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = objc_msgSend((id)objc_opt_self(), sel_descriptorForRequiredKeysForStyle_, 0);
  swift_retain();
  v1 = swift_unknownObjectRetain();
  MEMORY[0x1A859E3E0](v1);
  if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A4690BDC();
  sub_1A4690C18();
  sub_1A4690BB8();
  swift_release();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t static REMContactsProvider.defaultContactsKeys.getter()
{
  return sub_1A44F16E4(&qword_1EE71C128);
}

id sub_1A456BF00()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v1 = *(void **)(v0 + 32);
  if (v1)
  {
    v2 = *(id *)(v0 + 32);
  }
  else
  {
    v3 = v0;
    v4 = (void *)(*(uint64_t (**)(void))(v0 + 16))();
    v5 = *(void **)(v0 + 32);
    *(_QWORD *)(v3 + 32) = v4;
    v2 = v4;

    v1 = 0;
  }
  v6 = v1;
  return v2;
}

uint64_t sub_1A456BF54(void *a1, uint64_t a2, char a3)
{
  void *v5;
  id v6;

  sub_1A4691C8C();
  sub_1A4691C98();
  if ((a3 & 1) != 0)
  {
    v6 = a1;
    sub_1A469114C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v5 = (void *)sub_1A4690B94();
    sub_1A469114C();

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v5 = (void *)sub_1A4690B94();
    sub_1A469114C();
  }

  return sub_1A4691CC8();
}

uint64_t sub_1A456C020()
{
  uint64_t v0;

  return sub_1A456BF54(*(void **)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void sub_1A456C02C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)v0;
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1A4691C98();
    v2 = v1;
    sub_1A469114C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v3 = (id)sub_1A4690B94();
    sub_1A469114C();

  }
  else
  {
    sub_1A4691C98();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v3 = (id)sub_1A4690B94();
    sub_1A469114C();
  }

}

uint64_t sub_1A456C0F8()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  void *v4;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 16);
  sub_1A4691C8C();
  sub_1A4691C98();
  if ((v2 & 1) != 0)
  {
    v3 = v1;
    sub_1A469114C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v4 = (void *)sub_1A4690B94();
    sub_1A469114C();

  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v4 = (void *)sub_1A4690B94();
    sub_1A469114C();
  }

  return sub_1A4691CC8();
}

uint64_t sub_1A456C1BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  char v4;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1A444A990(v2, v3, v4);
}

uint64_t sub_1A456C1D0(uint64_t a1, uint64_t a2)
{
  return sub_1A456E478(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(void **)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

id sub_1A456C1EC()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1A456BF00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v1 = (void *)sub_1A4690B94();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel__crossPlatformUnifiedMeContactWithKeysToFetch_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v2;
}

id sub_1A456C2D4(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v29;
  id v30;
  id v31[2];

  v1 = a1;
  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(a1, sel_emails);
  v3 = sub_1A4690BA0();

  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v16 = objc_msgSend(v1, sel_phones);
    v17 = sub_1A4690BA0();

    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v30 = (id)objc_opt_self();
      v19 = v17 + 40;
      do
      {
        v20 = objc_allocWithZone(MEMORY[0x1E0C97398]);
        swift_bridgeObjectRetain();
        v21 = (void *)sub_1A469087C();
        swift_bridgeObjectRelease();
        v13 = (unint64_t)objc_msgSend(v20, sel_initWithStringValue_, v21);

        v6 = (char *)objc_msgSend(v30, sel_predicateForContactsMatchingPhoneNumber_, v13);
        v22 = sub_1A456BF00();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
        v23 = (void *)sub_1A4690B94();
        v31[0] = 0;
        v24 = objc_msgSend(v22, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v6, v23, v31);

        v16 = v31[0];
        if (!v24)
        {
          v27 = v31[0];
          swift_bridgeObjectRelease();
          sub_1A468FE68();

          swift_willThrow();
          return v16;
        }
        sub_1A444AA40(0, &qword_1EE720DA0);
        v15 = sub_1A4690BA0();
        v25 = v16;

        if (v15 >> 62)
        {
          swift_bridgeObjectRetain();
          v16 = (id)sub_1A46916A4();
          swift_bridgeObjectRelease();
          if (v16)
          {
LABEL_23:
            if ((v15 & 0xC000000000000001) != 0)
              goto LABEL_32;
            if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
              __break(1u);
            v26 = *(id *)(v15 + 32);
            goto LABEL_26;
          }
        }
        else
        {
          v16 = *(id *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v16)
            goto LABEL_23;
        }
        v19 += 16;
        swift_bridgeObjectRelease();

        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
    sub_1A456F8FC();
    swift_allocError();
    swift_willThrow();
    return v16;
  }
  v29 = v1;
  v5 = (void *)objc_opt_self();
  v6 = (char *)(v3 + 40);
  while (1)
  {
    swift_bridgeObjectRetain();
    v7 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v5, sel_predicateForContactsMatchingEmailAddress_, v7);

    v9 = sub_1A456BF00();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
    v10 = (void *)sub_1A4690B94();
    v31[0] = 0;
    v11 = objc_msgSend(v9, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v8, v10, v31);

    v12 = v31[0];
    if (!v11)
    {
      v16 = v31[0];
      swift_bridgeObjectRelease();
      sub_1A468FE68();

      swift_willThrow();
      return v16;
    }
    sub_1A444AA40(0, &qword_1EE720DA0);
    v13 = sub_1A4690BA0();
    v14 = v12;

    if (v13 >> 62)
      break;
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_9;
LABEL_6:
    v6 += 16;
    swift_bridgeObjectRelease();

    if (!--v4)
    {
      swift_bridgeObjectRelease();
      v1 = v29;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRetain();
  v15 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_6;
LABEL_9:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v16 = (id)MEMORY[0x1A859ECE0](0, v13);
    goto LABEL_12;
  }
  if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v13 + 32);
LABEL_12:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return v16;
  }
  __break(1u);
LABEL_32:
  v26 = (id)MEMORY[0x1A859ECE0](0, v15);
LABEL_26:
  v16 = v26;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

id *REMContactsProvider.deinit()
{
  id *v0;

  swift_release();

  swift_release();
  return v0;
}

uint64_t REMContactsProvider.__deallocating_deinit()
{
  id *v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A456C864(void *a1)
{
  return REMContactsProvider.meCard(keys:)(a1);
}

uint64_t sub_1A456C884@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return REMContactsProvider.contact(matching:keys:)(a1, a2, a3);
}

void *sub_1A456C8A4(void *result, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;

  if (*(_QWORD *)(*(_QWORD *)v2 + 56))
  {
    v4 = result;
    swift_bridgeObjectRetain();
    v5 = v4;
    swift_retain();
    v6 = sub_1A456B4F4(v4, a2, 1);
    swift_bridgeObjectRelease();

    swift_release();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1A456C930(void *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  REMContactsProvider.contactAndName(matching:keys:)(a1, a2, a3);
}

uint64_t sub_1A456C950(void *a1)
{
  return REMContactsProvider.name(for:)(a1);
}

ReminderKitInternal::REMMeCardAddressType __swiftcall REMMeCardAddressType.init(label:)(Swift::String_optional label)
{
  char *v1;
  char *v2;
  void *object;
  uint64_t countAndFlagsBits;
  void *v5;
  char v7;
  char v8;
  void *v9;
  char v11;
  void *v12;
  char v14;
  void *v15;

  v2 = v1;
  if (!label.value._object)
    goto LABEL_30;
  object = label.value._object;
  countAndFlagsBits = label.value._countAndFlagsBits;
  if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() != label.value._countAndFlagsBits
    || v5 != object)
  {
    v7 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      goto LABEL_9;
    if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v9 == object)
    {
      swift_bridgeObjectRelease();
LABEL_17:
      LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
      v8 = 1;
      goto LABEL_31;
    }
    v11 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v11 & 1) != 0)
      goto LABEL_17;
    if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == countAndFlagsBits && v12 == object)
    {
      swift_bridgeObjectRelease();
LABEL_25:
      LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
      v8 = 2;
      goto LABEL_31;
    }
    v14 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
      goto LABEL_25;
    if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() != countAndFlagsBits || v15 != object)
      sub_1A4691A40();
    swift_bridgeObjectRelease();
    LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
LABEL_30:
    v8 = 3;
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
LABEL_9:
  LOBYTE(label.value._countAndFlagsBits) = swift_bridgeObjectRelease();
  v8 = 0;
LABEL_31:
  *v2 = v8;
  return label.value._countAndFlagsBits;
}

void REMMeCardAddressType.cnLabel.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1A456CB50()
{
  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

BOOL static REMMeCardAddressType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMMeCardAddressType.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMMeCardAddressType.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t CNContact.addressByType.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  unsigned __int8 v17;
  uint64_t v18;
  char v19;
  char v20;
  id v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;

  v1 = objc_msgSend(v0, sel_postalAddresses);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CD8);
  v2 = sub_1A4690BA0();

  if (v2 >> 62)
  {
LABEL_54:
    swift_bridgeObjectRetain_n();
    v3 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (v3)
      goto LABEL_3;
LABEL_55:
    v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_56:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v4;
  }
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
    goto LABEL_55;
LABEL_3:
  v4 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v39 = v3;
  for (i = 0; ; i = v8)
  {
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x1A859ECE0](i, v2);
      else
        v6 = *(id *)(v2 + 8 * i + 32);
      v7 = v6;
      v8 = i + 1;
      if (__OFADD__(i, 1))
      {
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v9 = objc_msgSend(v6, sel_label);
      if (!v9)
        break;
      v10 = v9;
      v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v13 = v12;

      if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v14 == v13)
      {
        v17 = 0;
      }
      else
      {
        v16 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
        {
          v17 = 0;
LABEL_15:
          v3 = v39;
          goto LABEL_24;
        }
        if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v18 == v13)
        {
          v17 = 1;
        }
        else
        {
          v20 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          if ((v20 & 1) != 0)
          {
            v17 = 1;
            goto LABEL_15;
          }
          if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v34 == v13)
          {
            v17 = 2;
          }
          else
          {
            v36 = sub_1A4691A40();
            swift_bridgeObjectRelease();
            if ((v36 & 1) != 0)
            {
              v17 = 2;
              goto LABEL_15;
            }
            if (_sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() == v11 && v37 == v13)
            {
              v17 = 3;
            }
            else
            {
              sub_1A4691A40();
              v17 = 3;
            }
          }
        }
        v3 = v39;
      }
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      if (!v4[2])
        goto LABEL_30;
LABEL_25:
      sub_1A443EA10(v17);
      if ((v19 & 1) == 0)
        goto LABEL_30;

      ++i;
      if (v8 == v3)
        goto LABEL_56;
    }
    v17 = 3;
    if (v4[2])
      goto LABEL_25;
LABEL_30:
    v21 = objc_msgSend(v7, sel_value);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = sub_1A443EA10(v17);
    v25 = v4[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
      goto LABEL_53;
    v28 = v23;
    if (v4[3] < v27)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if ((v23 & 1) == 0)
        goto LABEL_34;
    }
    else
    {
      sub_1A444939C();
      if ((v28 & 1) == 0)
        goto LABEL_34;
    }
LABEL_41:
    v35 = v4[7];

    *(_QWORD *)(v35 + 8 * v24) = v21;
LABEL_42:

    swift_bridgeObjectRelease();
    v3 = v39;
    if (v8 == v39)
      goto LABEL_56;
  }
  sub_1A4444A3C(v27, isUniquelyReferenced_nonNull_native);
  v29 = sub_1A443EA10(v17);
  if ((v28 & 1) != (v30 & 1))
    goto LABEL_58;
  v24 = v29;
  if ((v28 & 1) != 0)
    goto LABEL_41;
LABEL_34:
  v4[(v24 >> 6) + 8] |= 1 << v24;
  *(_BYTE *)(v4[6] + v24) = v17;
  *(_QWORD *)(v4[7] + 8 * v24) = v21;
  v31 = v4[2];
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (!v32)
  {
    v4[2] = v33;
    goto LABEL_42;
  }
  __break(1u);
LABEL_58:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A456D05C()
{
  void *v0;

  sub_1A4691C8C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v0 = (void *)sub_1A4690B94();
  sub_1A469114C();

  return sub_1A4691CC8();
}

void sub_1A456D0BC()
{
  id v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v0 = (id)sub_1A4690B94();
  sub_1A469114C();

}

uint64_t sub_1A456D114()
{
  void *v0;

  sub_1A4691C8C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v0 = (void *)sub_1A4690B94();
  sub_1A469114C();

  return sub_1A4691CC8();
}

uint64_t sub_1A456D170()
{
  void *v0;
  void *v1;
  char v2;

  sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v0 = (void *)sub_1A4690B94();
  v1 = (void *)sub_1A4690B94();
  v2 = sub_1A4691140();

  return v2 & 1;
}

uint64_t sub_1A456D204(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _DWORD *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  char v29;

  v14 = sub_1A469060C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = a4;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v18 = a4;
  LOBYTE(a4) = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((a4 & 1) != 0)
  {
    *(_QWORD *)&v28 = a1;
    *((_QWORD *)&v28 + 1) = a2;
    v20 = a3 & 1;
    v29 = a3 & 1;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a6;
    *(_QWORD *)(v21 + 24) = a7;
    sub_1A456F21C(&v28, v21 + 32);
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_1A456F84C;
    *(_QWORD *)(v22 + 24) = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242178);
    v23 = swift_allocObject();
    type metadata accessor for UnfairLock();
    v24 = swift_allocObject();
    swift_retain();
    sub_1A444A990(a1, a2, v20);
    swift_retain();
    v25 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v24 + 16) = v25;
    *v25 = 0;
    *(_DWORD *)(v24 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2420E0);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v26 + 40) = 0;
    *(_BYTE *)(v26 + 48) = -1;
    *(_QWORD *)(v26 + 16) = v24;
    *(_BYTE *)(v26 + 24) = 0;
    *(_QWORD *)(v23 + 16) = v26;
    swift_retain_n();
    sub_1A4569430((uint64_t)sub_1A456FAC8, v23, (uint64_t)sub_1A456FAFC, v23, a5, (uint64_t)sub_1A456F868, v22);
    swift_release();
    swift_release();
    swift_release_n();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A456D434@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19;
  char v20;
  void *v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v29;
  uint64_t *v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v30 = a5;
  v8 = a4 & 1;
  v9 = sub_1A469060C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t **)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (uint64_t *)(a1 + 80);
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 80);
  v15 = *(_QWORD *)(v14 + 16);
  sub_1A444A990(a2, a3, v8);
  if (v15)
  {
    v16 = sub_1A443E924(a2, a3, v8);
    if ((v17 & 1) != 0)
    {
      sub_1A44C6CC8(*(_QWORD *)(v14 + 56) + 40 * v16, (uint64_t)&v35, &qword_1ED241EB8);
      swift_endAccess();
      sub_1A456F684((uint64_t)&v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A444A9B8);
      sub_1A444AA18(a2, a3, v8);
      sub_1A456D7E4((uint64_t)&v33);
      result = sub_1A456F684((uint64_t)&v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A456F648);
      v19 = v33;
      v20 = v34;
LABEL_9:
      v29 = v30;
      *v30 = v19;
      *((_BYTE *)v29 + 8) = v20;
      return result;
    }
  }
  swift_endAccess();
  sub_1A444AA18(a2, a3, v8);
  v21 = *(void **)(a1 + 16);
  *v12 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v22 = v21;
  v23 = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v23 & 1) != 0)
  {
    type metadata accessor for PromiseDisposableToken();
    v24 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242178);
    v19 = swift_allocObject();
    type metadata accessor for UnfairLock();
    v25 = swift_allocObject();
    v26 = (_DWORD *)swift_slowAlloc();
    *(_QWORD *)(v25 + 16) = v26;
    *v26 = 0;
    *(_DWORD *)(v25 + 24) = 0;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2420E0);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v27 + 40) = 0;
    *(_BYTE *)(v27 + 48) = -1;
    *(_QWORD *)(v27 + 16) = v25;
    *(_BYTE *)(v27 + 24) = 0;
    *(_QWORD *)(v19 + 16) = v27;
    swift_retain_n();
    sub_1A456DC74((uint64_t)sub_1A456F5B8, v19, (uint64_t)sub_1A456F5DC, v19, a1, (uint64_t)a2, a3, v8, v24);
    swift_release_n();
    v32 = 0;
    swift_beginAccess();
    if (v32 == 255)
    {
      sub_1A444A990(a2, a3, v8);
      swift_retain();
      swift_retain();
      sub_1A445DD4C(a2, a3, v8, (uint64_t)&v35);
      sub_1A444AA18(a2, a3, v8);
      sub_1A456F5FC((uint64_t)&v35);
    }
    else
    {
      v35 = xmmword_1A46A1390;
      v36 = v19;
      v37 = v24;
      v38 = v32 & 1;
      sub_1A444A990(a2, a3, v8);
      swift_retain();
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v31 = *v13;
      *v13 = 0x8000000000000000;
      sub_1A445ED50((uint64_t)&v35, a2, a3, v8, isUniquelyReferenced_nonNull_native);
      *v13 = v31;
      swift_bridgeObjectRelease();
      sub_1A444AA18(a2, a3, v8);
    }
    swift_endAccess();
    result = swift_release();
    v20 = 0;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

id sub_1A456D7E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  unsigned __int8 v5;
  char v6;
  id result;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _BYTE v17[40];
  _BYTE v18[16];

  v2 = v1;
  sub_1A44C6CC8(v1, (uint64_t)&v15, &qword_1ED241EB8);
  v4 = v15;
  v5 = v16;
  sub_1A44C6CC8(v2, (uint64_t)&v12, &qword_1ED241EB8);
  sub_1A44C6CC8(v2, (uint64_t)v17, &qword_1ED241EB8);
  if ((v17[32] & 1) != 0)
  {
    sub_1A44C6CC8((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_1EE720D40);
    if ((v5 & 1) != 0)
      v6 = 2;
    else
      v6 = 1;
    *(_QWORD *)a1 = v4;
    *(_BYTE *)(a1 + 8) = v6;
    return sub_1A444AA0C(v4);
  }
  else
  {
    v8 = v14;
    swift_retain();
    swift_retain();
    sub_1A444A9F4(v4, v5);
    result = (id)swift_release();
    v9 = v13;
    if (v13 == 255)
    {
      *(_QWORD *)a1 = v8;
      *(_BYTE *)(a1 + 8) = 0;
    }
    else
    {
      v10 = v12;
      result = (id)swift_release();
      if ((v9 & 1) != 0)
        v11 = 2;
      else
        v11 = 1;
      *(_QWORD *)a1 = v10;
      *(_BYTE *)(a1 + 8) = v11;
    }
  }
  return result;
}

void *sub_1A456D900(uint64_t a1, void *a2, uint64_t a3, char a4)
{
  int v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char isUniquelyReferenced_nonNull_native;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  BOOL v25;
  void *v26;
  unsigned __int8 v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v7 = a4 & 1;
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v8 + 16))
  {
    swift_endAccess();
LABEL_7:
    v23 = a2;
    v24 = a3;
    v25 = v7 != 0;
    (*(void (**)(void **__return_ptr, void **))(a1 + 56))(&v26, &v23);
    v12 = v26;
    v28 = v26;
    v29 = v27;
    v30 = 0;
    v31 = 0;
    v32 = 1;
    swift_beginAccess();
    sub_1A444A990(a2, a3, v7);
    sub_1A444AA0C(v12);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 80) = 0x8000000000000000;
    sub_1A445ED50((uint64_t)&v28, a2, a3, v7, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(a1 + 80) = v21;
    swift_bridgeObjectRelease();
    sub_1A444AA18(a2, a3, v7);
    swift_endAccess();
    return v12;
  }
  sub_1A444A990(a2, a3, v7);
  v9 = sub_1A443E924(a2, a3, v7);
  if ((v10 & 1) == 0)
  {
    swift_endAccess();
    sub_1A444AA18(a2, a3, v7);
    goto LABEL_7;
  }
  v11 = *(_QWORD *)(v8 + 56) + 40 * v9;
  v12 = *(void **)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v15 = *(_QWORD *)(v11 + 16);
  v14 = *(_QWORD *)(v11 + 24);
  v16 = *(unsigned __int8 *)(v11 + 32);
  swift_endAccess();
  sub_1A444A9B8(v12, v13, v15, v14, v16);
  sub_1A444AA18(a2, a3, v7);
  if (v16 != 1)
  {
    swift_release();
    swift_release();
    v23 = a2;
    v24 = a3;
    v25 = v7 != 0;
    (*(void (**)(void **__return_ptr, void **))(a1 + 56))(&v26, &v23);
    v19 = v26;
    v28 = v26;
    v29 = v27;
    v30 = 0;
    v31 = 0;
    v32 = 1;
    swift_beginAccess();
    sub_1A444A990(a2, a3, v7);
    sub_1A444AA0C(v19);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 80) = 0x8000000000000000;
    sub_1A445ED50((uint64_t)&v28, a2, a3, v7, v20);
    *(_QWORD *)(a1 + 80) = v22;
    swift_bridgeObjectRelease();
    sub_1A444AA18(a2, a3, v7);
    swift_endAccess();
    sub_1A456F24C(v12, v13);
    return v19;
  }
  return v12;
}

uint64_t sub_1A456DBD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t result;
  void (*v7)(_QWORD *, uint64_t *);
  uint64_t v8;
  char v9;
  _QWORD v10[2];
  char v11;

  v10[0] = a2;
  v10[1] = a3;
  v11 = a4 & 1;
  v8 = a5;
  v9 = a6 & 1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = *(void (**)(_QWORD *, uint64_t *))(result + 40);
    sub_1A44FC184((uint64_t)v7);
    result = swift_release();
    if (v7)
    {
      v7(v10, &v8);
      return sub_1A443A6F8((uint64_t)v7);
    }
  }
  return result;
}

uint64_t sub_1A456DC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  void *v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  __int128 v22;
  char v23;
  __int128 v24;
  char v25;

  *(_QWORD *)&v24 = a6;
  *((_QWORD *)&v24 + 1) = a7;
  v25 = a8 & 1;
  (*(void (**)(__int128 *))(a5 + 24))(&v24);
  v11 = *(void **)(a5 + 16);
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = v24;
  v14 = v25;
  v22 = v24;
  v23 = v25;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v12;
  sub_1A456F21C(&v22, (uint64_t)(v15 + 3));
  v15[6] = a1;
  v15[7] = a2;
  sub_1A444A990((void *)v13, *((uint64_t *)&v13 + 1), v14);
  swift_retain();
  sub_1A4568740(v11, a9, (uint64_t)sub_1A456F6C0, (uint64_t)v15);
  swift_release();
  swift_release();
  v16 = swift_allocObject();
  swift_weakInit();
  v22 = v13;
  v23 = v14;
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  sub_1A456F21C(&v22, (uint64_t)(v17 + 3));
  v17[6] = a3;
  v17[7] = a4;
  sub_1A444A990((void *)v13, *((uint64_t *)&v13 + 1), v14);
  swift_retain();
  sub_1A4656560(v11, a9, (uint64_t)sub_1A456F71C, (uint64_t)v17);
  swift_release();
  return swift_release();
}

uint64_t sub_1A456DE30(void *a1, uint64_t a2, char a3, void *a4, char a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  id v16;
  uint64_t result;
  os_unfair_lock_s *v18;
  char v19;
  uint64_t (*v20)(void **, void **);
  uint64_t v21;
  void *v22;
  char v23;
  void *v24;
  uint64_t v25;
  char v26;

  v11 = sub_1A469060C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = a1;
  v25 = a2;
  v26 = a3 & 1;
  v22 = a4;
  v23 = a5 & 1;
  v15 = (void *)v5[2];
  *v14 = v15;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0DEF740], v11);
  v16 = v15;
  LOBYTE(v15) = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) != 0)
  {
    v18 = *(os_unfair_lock_s **)(v5[9] + 16);
    swift_retain();
    os_unfair_lock_lock_with_options();
    v19 = sub_1A456DF88((uint64_t)v5, v24, v25, v26, v22, v23);
    os_unfair_lock_unlock(v18);
    result = swift_release();
    if ((v19 & 1) != 0)
    {
      v20 = (uint64_t (*)(void **, void **))v5[5];
      if (v20)
        return v20(&v24, &v22);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A456DF88(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5, char a6)
{
  char v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  char v25;
  uint64_t v26;
  _QWORD v27[4];
  char v28;

  v11 = a4 & 1;
  v12 = (uint64_t *)(a1 + 80);
  swift_beginAccess();
  v13 = *(_QWORD *)(a1 + 80);
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_endAccess();
LABEL_8:
    v27[0] = a5;
    v27[1] = a6 & 1;
    v27[2] = 0;
    v27[3] = 0;
    v22 = 1;
    v28 = 1;
    swift_beginAccess();
    sub_1A444A990(a2, a3, v11);
    sub_1A444AA0C(a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *v12;
    *v12 = 0x8000000000000000;
    sub_1A445ED50((uint64_t)v27, a2, a3, v11, isUniquelyReferenced_nonNull_native);
    *v12 = v26;
    swift_bridgeObjectRelease();
    sub_1A444AA18(a2, a3, v11);
    swift_endAccess();
    return v22;
  }
  sub_1A444A990(a2, a3, v11);
  v14 = sub_1A443E924(a2, a3, v11);
  if ((v15 & 1) == 0)
  {
    swift_endAccess();
    sub_1A444AA18(a2, a3, v11);
    goto LABEL_8;
  }
  v25 = a6;
  v16 = *(_QWORD *)(v13 + 56) + 40 * v14;
  v17 = *(void **)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v20 = *(_QWORD *)(v16 + 16);
  v19 = *(_QWORD *)(v16 + 24);
  v21 = *(unsigned __int8 *)(v16 + 32);
  swift_endAccess();
  sub_1A444A9B8(v17, v18, v20, v19, v21);
  sub_1A444AA18(a2, a3, v11);
  if (v21 != 1)
  {
    swift_release();
    swift_release();
    sub_1A456F24C(v17, v18);
    a6 = v25;
    goto LABEL_8;
  }
  sub_1A456F648(v17, v18, v20, v19, 1);
  return 0;
}

uint64_t sub_1A456E190()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A456E1B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v5;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v5 & 1;
  return result;
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A456E228(uint64_t a1)
{
  uint64_t v1;

  return sub_1A456D204(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1A456E240(void *a1, char a2)
{
  if (a2 == 2 || a2 == 1)
  {

  }
  else if (!a2)
  {
    swift_release();
  }
}

_QWORD *sub_1A456E268@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr, __int128 *)@<X0>, __int128 *a2@<X2>, _QWORD *a3@<X8>)
{
  char v4;
  _QWORD *result;
  uint64_t v6;
  char v7;
  __int128 v8;
  char v9;

  v4 = *((_BYTE *)a2 + 16);
  v8 = *a2;
  v9 = v4;
  result = a1(&v6, &v8);
  if ((v7 & 1) != 0)
    return (_QWORD *)swift_willThrow();
  *a3 = v6;
  return result;
}

uint64_t sub_1A456E2E0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v12;

  v6 = *a1;
  v7 = *(void **)a4;
  v8 = *(_QWORD *)(a4 + 8);
  v9 = *(_BYTE *)(a4 + 16);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = v6;
    sub_1A456DE30(v7, v8, v9, v6, 0);

    swift_release();
  }
  return a5(&v12);
}

uint64_t sub_1A456E3A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void *))
{
  void *v7;
  uint64_t v8;
  char v9;
  id v10;

  v7 = *(void **)a4;
  v8 = *(_QWORD *)(a4 + 8);
  v9 = *(_BYTE *)(a4 + 16);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v10 = a1;
    sub_1A456DE30(v7, v8, v9, a1, 1);
    swift_release();

  }
  return a5(a1);
}

uint64_t sub_1A456E454(void **a1)
{
  return sub_1A4567880(*a1);
}

uint64_t sub_1A456E478(void *a1, uint64_t a2, char a3, void *a4, uint64_t a5, char a6)
{
  void *v8;
  id v9;
  id v10;
  char v11;
  void *v12;
  char v13;

  if ((a3 & 1) != 0)
  {
    if ((a6 & 1) != 0)
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      v9 = a1;
      v10 = a4;
      v11 = sub_1A4691140();

      if ((v11 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
        v8 = (void *)sub_1A4690B94();
        goto LABEL_7;
      }
    }
LABEL_8:
    v13 = 0;
    return v13 & 1;
  }
  if ((a6 & 1) != 0)
    goto LABEL_8;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v8 = (void *)sub_1A4690B94();
LABEL_7:
  v12 = (void *)sub_1A4690B94();
  v13 = sub_1A4691140();

  return v13 & 1;
}

void sub_1A456E5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void (*v13)(void);
  id v14;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = qword_1ED243C50;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = (id)qword_1ED2431A0;
  v7 = sub_1A4568338(v6, (uint64_t)sub_1A456F3E4, v4);
  swift_release();

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (void *)qword_1ED2431A0;
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 16) + 16);
  swift_retain();
  v11 = v9;
  os_unfair_lock_lock_with_options();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = 0;
  *(_BYTE *)(v12 + 32) = 1;
  *(_QWORD *)(v12 + 40) = nullsub_1;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = sub_1A456F434;
  *(_QWORD *)(v12 + 64) = v8;
  *(_QWORD *)(v12 + 72) = nullsub_1;
  *(_QWORD *)(v12 + 80) = 0;
  v14 = v11;
  swift_retain();
  v13 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v12);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  v13();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1A456E750(void **a1)
{
  uint64_t v1;

  return sub_1A456B34C(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_1A456E768(id a1, void *a2)
{
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;

  if (a2)
  {
    v4 = (void *)objc_opt_self();
    v5 = a2;
    v6 = objc_msgSend(v4, sel_stringFromContact_style_, v5, 0);
    if (v6)
    {
      v7 = v6;
      v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

LABEL_11:
      return v8;
    }

  }
  v9 = objc_msgSend(a1, sel_phones);
  v10 = sub_1A4690BA0();

  if (*(_QWORD *)(v10 + 16))
  {
    v8 = *(_QWORD *)(v10 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v11 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v11, sel_initWithStringValue_, v12);

    v13 = objc_msgSend(v5, sel_formattedStringValue);
    if (!v13)
      goto LABEL_11;
    v14 = v13;
    v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = objc_msgSend(a1, sel_emails);
    v16 = sub_1A4690BA0();

    if (!*(_QWORD *)(v16 + 16))
    {
      swift_bridgeObjectRelease();
      v5 = (id)_REMGetLocalizedString();
      v8 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      goto LABEL_11;
    }
    v8 = *(_QWORD *)(v16 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return v8;
}

id sub_1A456E95C(id result, char a2)
{
  if (a2 == 2 || a2 == 1)
    return result;
  if (!a2)
    return (id)swift_retain();
  return result;
}

uint64_t objectdestroy_18Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A456E9B4(void **a1)
{
  uint64_t v1;

  return sub_1A456BAF4(a1, *(_QWORD *)(v1 + 16), *(id *)(v1 + 24));
}

unint64_t sub_1A456E9D0()
{
  unint64_t result;

  result = qword_1EE720CE0;
  if (!qword_1EE720CE0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMMeCardAddressType, &type metadata for REMMeCardAddressType);
    atomic_store(result, (unint64_t *)&qword_1EE720CE0);
  }
  return result;
}

uint64_t dispatch thunk of REMContactsProviderType.meCard(keys:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of REMContactsProviderType.contact(matching:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of REMContactsProviderType.syncContact(matching:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of REMContactsProviderType.contactAndName(matching:keys:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of REMContactsProviderType.name(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t destroy for REMContactAndName(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s19ReminderKitInternal17REMContactAndNameVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMContactAndName(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMContactAndName(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMMatrix(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMMatrix(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMContactAndName()
{
  return &type metadata for REMContactAndName;
}

uint64_t sub_1A456EBFC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  id v4;

  if ((a4 & 1) == 0)
    return swift_retain();
  v4 = a1;
  return swift_bridgeObjectRetain();
}

void destroy for REMContactAndNameFetchResult(uint64_t a1)
{
  sub_1A456EC3C(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

void sub_1A456EC3C(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) != 0)
  {
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for REMContactAndNameFetchResult(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A456EBFC(*(void **)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for REMContactAndNameFetchResult(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1A456EBFC(*(void **)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1A456EC3C(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for REMContactAndNameFetchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1A456EC3C(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for REMContactAndNameFetchResult()
{
  return &type metadata for REMContactAndNameFetchResult;
}

uint64_t type metadata accessor for REMContactsProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMContactsProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMContactsProvider.__allocating_init(contactStoreCreator:queue:backgroundQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for REMMeCardAddressType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A456EE10 + 4 * byte_1A46A13A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A456EE44 + 4 * byte_1A46A13A4[v4]))();
}

uint64_t sub_1A456EE44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A456EE4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A456EE54);
  return result;
}

uint64_t sub_1A456EE60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A456EE68);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A456EE6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A456EE74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMMeCardAddressType()
{
  return &type metadata for REMMeCardAddressType;
}

uint64_t destroy for REMContactsProvider.OperationParams(uint64_t a1)
{
  return sub_1A444AA18(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal19REMContactsProviderC15OperationParamsOwCP_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A444A990(*(void **)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMContactsProvider.OperationParams(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  char v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A444A990(*(void **)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A444AA18(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMContactsProvider.OperationParams(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A444AA18(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for REMContactsProvider.OperationParams()
{
  return &type metadata for REMContactsProvider.OperationParams;
}

uint64_t sub_1A456EF94()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1A456EFA8()
{
  unint64_t result;

  result = qword_1ED241BB8;
  if (!qword_1ED241BB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A1538, &type metadata for REMContactsProvider.OperationParams);
    atomic_store(result, (unint64_t *)&qword_1ED241BB8);
  }
  return result;
}

uint64_t sub_1A456EFEC()
{
  uint64_t v0;

  return sub_1A45691F0(v0, (void (*)(uint64_t))sub_1A456821C);
}

uint64_t sub_1A456F00C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4569274(a1, v1, (void (*)(uint64_t))sub_1A4567EB0);
}

uint64_t sub_1A456F030(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A4568FE8(*a1, *(uint64_t (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A456F044(uint64_t a1)
{
  return sub_1A456F774(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A4569FBC);
}

uint64_t sub_1A456F054()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t *);
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t *))(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  return v1(&v3);
}

uint64_t sub_1A456F08C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4569390(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v1);
}

void sub_1A456F0A4(uint64_t a1)
{
  uint64_t v1;

  sub_1A456A290(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(void *))(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_1A456F0EC()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A456F120()
{
  uint64_t v0;
  uint64_t (*v1)(__int128 *);
  uint64_t v2;
  __int128 v4;
  uint64_t v5;

  v1 = *(uint64_t (**)(__int128 *))(v0 + 16);
  v2 = *(_QWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 32);
  v5 = v2;
  return v1(&v4);
}

void sub_1A456F160(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1)
    sub_1A4513D58(a1, a2, a3, a4);
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1A4513D58(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

void sub_1A456F1C0()
{
  uint64_t v0;

  sub_1A456A604(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_1A456F1D4()
{
  uint64_t v0;

  swift_release();
  sub_1A444AA18(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1A456F210(*(id *)(v0 + 48));
  return swift_deallocObject();
}

void sub_1A456F210(id a1)
{

}

uint64_t sub_1A456F21C(__int128 *a1, uint64_t a2)
{
  __int128 v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 16) = *((_BYTE *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1A456F234()
{
  uint64_t v0;

  return sub_1A456DBD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

void sub_1A456F24C(id a1, unsigned __int8 a2)
{
  if (a2 != 255)
    sub_1A456F210(a1);
}

uint64_t sub_1A456F264()
{
  uint64_t v0;

  return sub_1A45691F0(v0, (void (*)(uint64_t))sub_1A456810C);
}

uint64_t sub_1A456F284(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4569274(a1, v1, (void (*)(uint64_t))sub_1A4567D74);
}

uint64_t sub_1A456F2A8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A4568DE0(*a1, *(uint64_t (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1A456F2BC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A4569300(*a1, a1[1], v1);
}

void sub_1A456F2D0(uint64_t a1)
{
  uint64_t v1;

  sub_1A456A130(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16), *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(void *))(v1 + 56), *(_QWORD *)(v1 + 64), *(uint64_t (**)(void))(v1 + 72), *(_QWORD *)(v1 + 80));
}

uint64_t sub_1A456F314()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A456F340()
{
  _QWORD *v0;
  uint64_t (*v1)(_QWORD *);
  uint64_t v2;
  _QWORD v4[2];

  v1 = (uint64_t (*)(_QWORD *))v0[2];
  v2 = v0[5];
  v4[0] = v0[4];
  v4[1] = v2;
  return v1(v4);
}

void sub_1A456F378(void *a1, id a2, char a3)
{
  if (a3 != -1)
    sub_1A4513EC0(a1, a2, a3);
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1A4513EC0(*(void **)(v0 + 32), *(id *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

void sub_1A456F3D4()
{
  uint64_t v0;

  sub_1A456A4CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

void sub_1A456F3E4(id *a1)
{
  uint64_t v1;
  void (*v2)(id *);
  id v3;
  id v4;

  v2 = *(void (**)(id *))(v1 + 16);
  v4 = *a1;
  v3 = v4;
  v2(&v4);

}

uint64_t sub_1A456F434()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t *);
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t *))(v0 + 16);
  v3 = 0;
  return v1(&v3);
}

uint64_t sub_1A456F468()
{
  uint64_t v0;

  return sub_1A45691F0(v0, (void (*)(uint64_t))sub_1A4567FFC);
}

uint64_t sub_1A456F488(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4569274(a1, v1, (void (*)(uint64_t))sub_1A4567B14);
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A456F4D8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A45685EC(*a1, *(void (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1A456F4EC(uint64_t a1)
{
  return sub_1A456F774(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A4569E70);
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1A456F528(id a1, char a2)
{
  if (a2 != -1)
    sub_1A4514000(a1, a2);
}

uint64_t sub_1A456F53C()
{
  return objectdestroy_101Tm((void (*)(_QWORD, _QWORD))sub_1A4514000);
}

uint64_t sub_1A456F54C()
{
  return objectdestroy_101Tm((void (*)(_QWORD, _QWORD))sub_1A4514000);
}

void sub_1A456F558()
{
  uint64_t v0;

  sub_1A456A41C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1A456F568()
{
  return objectdestroy_101Tm((void (*)(_QWORD, _QWORD))sub_1A4514000);
}

void sub_1A456F574(id a1, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    sub_1A4513CA4(a1, a2);
}

uint64_t sub_1A456F588()
{
  return objectdestroy_101Tm((void (*)(_QWORD, _QWORD))sub_1A4513CA4);
}

void sub_1A456F598()
{
  uint64_t v0;

  sub_1A456A568(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1A456F5B8(void **a1)
{
  return sub_1A4567614(*a1);
}

uint64_t sub_1A456F5DC(void *a1)
{
  return sub_1A4567C44(a1);
}

uint64_t sub_1A456F5FC(uint64_t a1)
{
  sub_1A456F630(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  return a1;
}

void sub_1A456F630(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    sub_1A456F648(a1, a2, a3, a4, a5 & 1);
}

void sub_1A456F648(void *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
  {
    sub_1A456F210(a1);
  }
  else
  {
    sub_1A456F24C(a1, a2);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1A456F684(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_1A456F6C0(void **a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A456E2E0(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, *(uint64_t (**)(uint64_t *))(v2 + 48));
}

uint64_t objectdestroy_116Tm()
{
  uint64_t v0;

  swift_release();
  sub_1A444AA18(*(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A456F71C(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A456E3A0(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24, *(uint64_t (**)(void *))(v2 + 48));
}

uint64_t sub_1A456F72C()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A456F760(uint64_t *a1)
{
  uint64_t v1;

  sub_1A4568924(*a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *, uint64_t))(v1 + 32));
}

uint64_t sub_1A456F774(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v2;

  return a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
}

uint64_t sub_1A456F7C0()
{
  return objectdestroy_101Tm((void (*)(_QWORD, _QWORD))sub_1A45140DC);
}

uint64_t sub_1A456F7CC()
{
  return objectdestroy_101Tm((void (*)(_QWORD, _QWORD))sub_1A45140DC);
}

uint64_t objectdestroy_101Tm(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  swift_release();
  swift_bridgeObjectRelease();
  a1(*(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1A456F81C()
{
  uint64_t v0;

  swift_release();
  sub_1A444AA18(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

_QWORD *sub_1A456F84C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A456E268(*(_QWORD *(**)(uint64_t *__return_ptr, __int128 *))(v1 + 16), (__int128 *)(v1 + 32), a1);
}

uint64_t sub_1A456F868()
{
  uint64_t v0;

  return sub_1A45697DC(*(void (**)(void **__return_ptr))(v0 + 16));
}

uint64_t sub_1A456F870()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A456F8A4()
{
  uint64_t v0;

  sub_1A4569618(*(void (**)(void))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1A456F8B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = *a1;
  return v2(&v4);
}

uint64_t sub_1A456F8F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A44A4FA4(a1, *(uint64_t (**)(void))(v1 + 16));
}

unint64_t sub_1A456F8FC()
{
  unint64_t result;

  result = qword_1EE720DA8;
  if (!qword_1EE720DA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A16B0, &type metadata for REMContactsProvider.ContactFetchError);
    atomic_store(result, (unint64_t *)&qword_1EE720DA8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMContactsProvider.ContactFetchError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A456F980 + 4 * byte_1A46A13AE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A456F9A0 + 4 * byte_1A46A13B3[v4]))();
}

_BYTE *sub_1A456F980(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A456F9A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A456F9A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A456F9B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A456F9B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A456F9C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMContactsProvider.ContactFetchError()
{
  return &type metadata for REMContactsProvider.ContactFetchError;
}

ValueMetadata *type metadata accessor for KeysToFetch()
{
  return &type metadata for KeysToFetch;
}

unint64_t sub_1A456F9F0()
{
  unint64_t result;

  result = qword_1EE720DB0;
  if (!qword_1EE720DB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A157C, &type metadata for REMContactsProvider.OperationParams);
    atomic_store(result, (unint64_t *)&qword_1EE720DB0);
  }
  return result;
}

unint64_t sub_1A456FA38()
{
  unint64_t result;

  result = qword_1EE720DB8;
  if (!qword_1EE720DB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A15E0, &type metadata for KeysToFetch);
    atomic_store(result, (unint64_t *)&qword_1EE720DB8);
  }
  return result;
}

unint64_t sub_1A456FA80()
{
  unint64_t result;

  result = qword_1EE720DC0;
  if (!qword_1EE720DC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A1688, &type metadata for REMContactsProvider.ContactFetchError);
    atomic_store(result, (unint64_t *)&qword_1EE720DC0);
  }
  return result;
}

uint64_t sub_1A456FB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED240000);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED240000);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

unint64_t REMWidgetRefresh.WidgetKind.widgetKindIdentifier.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000020;
  else
    return 0xD00000000000001ALL;
}

BOOL static REMWidgetRefresh.WidgetKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMWidgetRefresh.WidgetKind.hash(into:)()
{
  return sub_1A4691C98();
}

void *static REMWidgetRefresh.WidgetKind.allCases.getter()
{
  return &unk_1E4C11A60;
}

uint64_t REMWidgetRefresh.WidgetKind.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

void sub_1A456FC60(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FA70;
}

_QWORD *REMWidgetRefresh.__allocating_init(interval:queue:)(void *a1)
{
  _QWORD *v2;

  swift_allocObject();
  v2 = sub_1A456FEC8(a1);

  return v2;
}

_QWORD *REMWidgetRefresh.init(interval:queue:)(void *a1)
{
  _QWORD *v2;

  v2 = sub_1A456FEC8(a1);

  return v2;
}

uint64_t sub_1A456FCF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;

  v1 = sub_1A469060C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 32);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1A4690624();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242580);
    sub_1A443AD20((unint64_t *)&unk_1ED23E420, &qword_1ED242580, MEMORY[0x1E0C95F40]);
    sub_1A46904BC();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A456FDF0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v3 = v0;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  result = swift_bridgeObjectRelease();
  qword_1ED23EC40 = v2;
  *(_QWORD *)algn_1ED23EC48 = v3;
  return result;
}

uint64_t REMWidgetRefresh.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t REMWidgetRefresh.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

_QWORD *sub_1A456FEC8(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;

  v2 = v1;
  v23 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2430E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1A4691074();
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242570);
  v22 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242580);
  swift_allocObject();
  v13 = sub_1A4690450();
  v1[2] = v13;
  v1[4] = a1;
  v25 = v13;
  v14 = a1;
  swift_retain();
  sub_1A4691068();
  v24 = v14;
  v15 = sub_1A469105C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v6, 1, 1, v15);
  sub_1A44DBBA4();
  sub_1A443AD20(&qword_1ED242578, &qword_1ED242580, MEMORY[0x1E0C95F48]);
  sub_1A45705D0();
  sub_1A4690564();
  sub_1A4570618((uint64_t)v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  swift_release();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v23;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = j___s19ReminderKitInternal16REMWidgetRefreshC18refreshImmediatelyyyFZ_0;
  *(_QWORD *)(v17 + 24) = v16;
  sub_1A443AD20(&qword_1ED242568, &qword_1ED242570, MEMORY[0x1E0C95BB0]);
  v18 = sub_1A4690570();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  v2[3] = v18;
  return v2;
}

void _s19ReminderKitInternal16REMWidgetRefreshC18refreshImmediatelyyyFZ_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  if (qword_1ED23E430 != -1)
    swift_once();
  v0 = sub_1A4690318();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED240000);
  v1 = sub_1A469030C();
  v2 = sub_1A4691008();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A442D000, v1, v2, "Asking for Widget Refresh", v3, 2u);
    MEMORY[0x1A85A0114](v3, -1, -1);
  }

  if (qword_1ED23FFF8 != -1)
    swift_once();
  v4 = objc_allocWithZone(MEMORY[0x1E0D10110]);
  swift_bridgeObjectRetain();
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_initWithExtensionBundleIdentifier_kind_, v5, v6);

  v8 = (void *)sub_1A469087C();
  v9 = objc_allocWithZone(MEMORY[0x1E0D10110]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v11 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v9, sel_initWithExtensionBundleIdentifier_kind_, v10, v11);

  v12 = (void *)sub_1A469087C();
}

unint64_t sub_1A4570454()
{
  unint64_t result;

  result = qword_1EE720DD0;
  if (!qword_1EE720DD0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMWidgetRefresh.WidgetKind, &type metadata for REMWidgetRefresh.WidgetKind);
    atomic_store(result, (unint64_t *)&qword_1EE720DD0);
  }
  return result;
}

uint64_t sub_1A4570498()
{
  return sub_1A443AD20(&qword_1EE720DD8, &qword_1EE720DE0, MEMORY[0x1E0DEAF50]);
}

uint64_t type metadata accessor for REMWidgetRefresh()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMWidgetRefresh()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMWidgetRefresh.__allocating_init(interval:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of REMWidgetRefresh.refresh()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for REMWidgetRefresh.WidgetKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A4570550 + 4 * byte_1A46A16F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4570584 + 4 * byte_1A46A16F0[v4]))();
}

uint64_t sub_1A4570584(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A457058C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4570594);
  return result;
}

uint64_t sub_1A45705A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45705A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45705AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45705B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMWidgetRefresh.WidgetKind()
{
  return &type metadata for REMWidgetRefresh.WidgetKind;
}

unint64_t sub_1A45705D0()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1ED2430E8;
  if (!qword_1ED2430E8)
  {
    v1 = sub_1A44DBBA4();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2430E8);
  }
  return result;
}

uint64_t sub_1A4570618(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2430E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A4570658()
{
  return swift_deallocObject();
}

uint64_t sub_1A457066C()
{
  swift_release();
  return swift_deallocObject();
}

BOOL REMFeatureFlags.isEnabled.getter()
{
  char *v0;
  uint64_t v2;
  char v3;

  v3 = *v0;
  v2 = 0;
  return REMFeatureFlags.isEnabled(on:)((ReminderKitInternal::REMFeatureFlags::Platforms)&v2);
}

ReminderKitInternal::REMFeatureFlags::DevelopmentPhase_optional __swiftcall REMFeatureFlags.DevelopmentPhase.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMFeatureFlags::DevelopmentPhase_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMFeatureFlags.DevelopmentPhase.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A4570758 + 4 * byte_1A46A1800[*v0]))(0xD000000000000010, 0x80000001A46BC3C0);
}

uint64_t sub_1A4570758()
{
  return 0x706D6F4365646F43;
}

uint64_t sub_1A4570778()
{
  return 0x5277656976657250;
}

uint64_t sub_1A4570798()
{
  return 0x4365727574616546;
}

void sub_1A45707BC(char *a1)
{
  sub_1A466C1E4(*a1);
}

void sub_1A45707C8()
{
  char *v0;

  sub_1A4635F44(*v0);
}

void sub_1A45707D0()
{
  __asm { BR              X10 }
}

uint64_t sub_1A4570810()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4570888(uint64_t a1)
{
  char *v1;

  sub_1A46374CC(a1, *v1);
}

ReminderKitInternal::REMFeatureFlags::DevelopmentPhase_optional sub_1A4570890(Swift::String *a1)
{
  return REMFeatureFlags.DevelopmentPhase.init(rawValue:)(*a1);
}

uint64_t sub_1A457089C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45708D0 + 4 * byte_1A46A1808[*v0]))();
}

void sub_1A45708D0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "CodeComplete");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1A45708F4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "PreviewReady");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1A4570918(_QWORD *a1@<X8>)
{
  *a1 = 0x4365727574616546;
  a1[1] = 0xEF6574656C706D6FLL;
}

uint64_t REMFeatureFlags.TargetRelease.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t REMFeatureFlags.TargetRelease.rawValue.getter()
{
  return 0x3432303243445757;
}

uint64_t sub_1A45709AC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A45709FC()
{
  return sub_1A4690948();
}

uint64_t sub_1A4570A14()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A4570A60@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A4570AB0(_QWORD *a1@<X8>)
{
  *a1 = 0x3432303243445757;
  a1[1] = 0xE800000000000000;
}

void REMFeatureFlags.currentDevelopmentPhase.getter(_BYTE *a1@<X8>)
{
  char *v1;

  *a1 = byte_1A46A1D56[*v1];
}

void REMFeatureFlags.targetRelease.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = (0x1001Fu >> *v1) & 1;
}

void REMFeatureFlags.platforms.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1A4570B30()
{
  uint64_t *v0;
  uint64_t result;

  if (qword_1EE71C130 != -1)
    result = swift_once();
  *v0 = qword_1EE720DE8 | 4;
  return result;
}

Swift::Bool __swiftcall REMFeatureFlags.isEnabled(on:)(ReminderKitInternal::REMFeatureFlags::Platforms on)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  char v7;
  void *v8;
  void *v9;

  v2 = *(_QWORD *)on.rawValue;
  v3 = *v1;
  if (qword_1ED243F38 != -1)
    swift_once();
  swift_beginAccess();
  v4 = off_1ED243DB0;
  if (*((_QWORD *)off_1ED243DB0 + 2) && (v5 = sub_1A443E7EC(v3), (v6 & 1) != 0))
  {
    v7 = *(_BYTE *)(v4[7] + v5);
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    if (!v2)
      goto LABEL_10;
    if (qword_1EE71C130 != -1)
      swift_once();
    if ((v2 & ~qword_1EE720DE8) != 0)
    {
      return 0;
    }
    else
    {
LABEL_10:
      v8 = (void *)sub_1A469087C();
      REMFeatureFlags.rawValue.getter();
      v9 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v7 = rem_feature_enabled();

    }
  }
  return v7;
}

BOOL static REMFeatureFlags.Platforms.matchesCurrent(platform:)(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if (!*a1)
    return 1;
  if (qword_1EE71C130 != -1)
    swift_once();
  return (v1 & ~qword_1EE720DE8) == 0;
}

uint64_t REMFeatureFlags.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A4570DD8 + 4 * byte_1A46A181D[*v0]))(0xD000000000000010, 0x80000001A46BC410);
}

uint64_t sub_1A4570DD8()
{
  return 0x6166654469726973;
}

uint64_t sub_1A4570DFC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 13;
}

uint64_t static REMFeatureFlags.withOverrides(enabled:disabled:block:)(void **a1, unint64_t a2, void (*a3)(uint64_t))
{
  void *v5;
  unsigned __int8 *v6;
  void **v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  char v10;
  void *v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  void **v17;
  char *v18;
  BOOL v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  void *v29;
  _BOOL8 v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void **v34;
  char *v35;
  void *v36;
  uint64_t result;
  unint64_t v38;
  uint64_t v40;
  void *v41;
  unsigned __int8 *v42;
  void **v43;

  if (qword_1ED243F38 != -1)
    goto LABEL_42;
  while (1)
  {
    swift_beginAccess();
    v5 = off_1ED243DB0;
    v41 = off_1ED243DB0;
    v42 = (unsigned __int8 *)a1[2];
    if (!v42)
      break;
    v38 = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = a1;
      v8 = v6[(_QWORD)a1 + 32];
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      a1 = (void **)off_1ED243DB0;
      v43 = (void **)off_1ED243DB0;
      off_1ED243DB0 = (_UNKNOWN *)0x8000000000000000;
      a2 = sub_1A443E7EC(v8);
      v11 = a1[2];
      v12 = (v10 & 1) == 0;
      v13 = (uint64_t)v11 + v12;
      if (__OFADD__(v11, v12))
        break;
      v14 = v10;
      if ((uint64_t)a1[3] >= v13)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v17 = v43;
          if ((v10 & 1) == 0)
            goto LABEL_13;
        }
        else
        {
          a1 = (void **)&v43;
          sub_1A444953C();
          v17 = v43;
          if ((v14 & 1) == 0)
            goto LABEL_13;
        }
      }
      else
      {
        sub_1A4444D04(v13, isUniquelyReferenced_nonNull_native);
        a1 = v43;
        v15 = sub_1A443E7EC(v8);
        if ((v14 & 1) != (v16 & 1))
        {
LABEL_43:
          result = sub_1A4691C08();
          __break(1u);
          return result;
        }
        a2 = v15;
        v17 = v43;
        if ((v14 & 1) == 0)
        {
LABEL_13:
          v17[(a2 >> 6) + 8] = (void *)((unint64_t)v17[(a2 >> 6) + 8] | (1 << a2));
          *((_BYTE *)v17[6] + a2) = v8;
          *((_BYTE *)v17[7] + a2) = 1;
          v18 = (char *)v17[2];
          v19 = __OFADD__(v18, 1);
          v20 = v18 + 1;
          if (v19)
            goto LABEL_40;
          v17[2] = v20;
          goto LABEL_5;
        }
      }
      *((_BYTE *)v17[7] + a2) = 1;
LABEL_5:
      ++v6;
      off_1ED243DB0 = v17;
      swift_bridgeObjectRelease();
      swift_endAccess();
      a1 = v7;
      if (v42 == v6)
      {
        v21 = swift_bridgeObjectRelease();
        a2 = v38;
        v5 = v41;
        v22 = *(_QWORD *)(v38 + 16);
        if (!v22)
          goto LABEL_35;
LABEL_20:
        swift_bridgeObjectRetain();
        v23 = 0;
        while (2)
        {
          v24 = a2;
          v25 = *(unsigned __int8 *)(a2 + v23 + 32);
          swift_beginAccess();
          v26 = swift_isUniquelyReferenced_nonNull_native();
          a1 = (void **)off_1ED243DB0;
          v43 = (void **)off_1ED243DB0;
          off_1ED243DB0 = (_UNKNOWN *)0x8000000000000000;
          v28 = sub_1A443E7EC(v25);
          v29 = a1[2];
          v30 = (v27 & 1) == 0;
          v31 = (uint64_t)v29 + v30;
          if (__OFADD__(v29, v30))
            goto LABEL_39;
          a2 = v27;
          if ((uint64_t)a1[3] >= v31)
          {
            if ((v26 & 1) != 0)
            {
              v34 = v43;
              if ((v27 & 1) == 0)
                goto LABEL_30;
            }
            else
            {
              a1 = (void **)&v43;
              sub_1A444953C();
              v34 = v43;
              if ((a2 & 1) == 0)
                goto LABEL_30;
            }
          }
          else
          {
            sub_1A4444D04(v31, v26);
            a1 = v43;
            v32 = sub_1A443E7EC(v25);
            if ((a2 & 1) != (v33 & 1))
              goto LABEL_43;
            v28 = v32;
            v34 = v43;
            if ((a2 & 1) == 0)
            {
LABEL_30:
              v34[(v28 >> 6) + 8] = (void *)((unint64_t)v34[(v28 >> 6) + 8] | (1 << v28));
              *((_BYTE *)v34[6] + v28) = v25;
              *((_BYTE *)v34[7] + v28) = 0;
              v35 = (char *)v34[2];
              v19 = __OFADD__(v35, 1);
              v36 = v35 + 1;
              if (v19)
                goto LABEL_41;
              v34[2] = v36;
LABEL_22:
              ++v23;
              off_1ED243DB0 = v34;
              swift_bridgeObjectRelease();
              swift_endAccess();
              a2 = v24;
              if (v22 == v23)
              {
                v21 = swift_bridgeObjectRelease();
                v5 = v41;
                goto LABEL_35;
              }
              continue;
            }
          }
          break;
        }
        *((_BYTE *)v34[7] + v28) = 0;
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_once();
  }
  v21 = swift_bridgeObjectRetain();
  v22 = *(_QWORD *)(a2 + 16);
  if (v22)
    goto LABEL_20;
LABEL_35:
  a3(v21);
  if (!v40)
    off_1ED243DB0 = v5;
  return swift_bridgeObjectRelease();
}

id static REMFeatureFlags.override(enabled:disabled:)(unint64_t a1, void **a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  unint64_t v9;
  void *v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  void **v16;
  char *v17;
  BOOL v18;
  void *v19;
  unsigned __int8 *v20;
  unsigned __int8 *v21;
  void **v22;
  uint64_t v23;
  char v24;
  char v25;
  void *v26;
  _BOOL8 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  void **v32;
  char *v33;
  void *v34;
  objc_class *v35;
  _BYTE *v36;
  id result;
  void **v38;
  void *v39;
  objc_super v40;
  void **v41;

  if (qword_1ED243F38 != -1)
    goto LABEL_40;
LABEL_2:
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v39 = off_1ED243DB0;
  if (!v4)
  {
    swift_bridgeObjectRetain();
    v20 = (unsigned __int8 *)a2[2];
    if (!v20)
    {
LABEL_35:
      v35 = (objc_class *)type metadata accessor for TemporaryOverride();
      v36 = objc_allocWithZone(v35);
      v36[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled] = 0;
      *(_QWORD *)&v36[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_overridesToRestore] = v39;
      v40.receiver = v36;
      v40.super_class = v35;
      return objc_msgSendSuper2(&v40, sel_init);
    }
    goto LABEL_20;
  }
  v38 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v6 = a1;
    a1 = *(unsigned __int8 *)(a1 + v5 + 32);
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    a2 = (void **)off_1ED243DB0;
    v41 = (void **)off_1ED243DB0;
    off_1ED243DB0 = (_UNKNOWN *)0x8000000000000000;
    v9 = sub_1A443E7EC(a1);
    v10 = a2[2];
    v11 = (v8 & 1) == 0;
    v12 = (uint64_t)v10 + v11;
    if (__OFADD__(v10, v11))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      swift_once();
      goto LABEL_2;
    }
    v13 = v8;
    if ((uint64_t)a2[3] < v12)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v16 = v41;
      if ((v8 & 1) == 0)
        goto LABEL_13;
    }
    else
    {
      a2 = (void **)&v41;
      sub_1A444953C();
      v16 = v41;
      if ((v13 & 1) == 0)
      {
LABEL_13:
        v16[(v9 >> 6) + 8] = (void *)((unint64_t)v16[(v9 >> 6) + 8] | (1 << v9));
        *((_BYTE *)v16[6] + v9) = a1;
        *((_BYTE *)v16[7] + v9) = 1;
        v17 = (char *)v16[2];
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
          goto LABEL_38;
        v16[2] = v19;
        goto LABEL_5;
      }
    }
LABEL_4:
    *((_BYTE *)v16[7] + v9) = 1;
LABEL_5:
    ++v5;
    off_1ED243DB0 = v16;
    swift_bridgeObjectRelease();
    swift_endAccess();
    a1 = v6;
    if (v4 == v5)
    {
      swift_bridgeObjectRelease();
      a2 = v38;
      v20 = (unsigned __int8 *)v38[2];
      if (!v20)
        goto LABEL_35;
LABEL_20:
      swift_bridgeObjectRetain();
      v21 = 0;
      while (1)
      {
        v22 = a2;
        v23 = v21[(_QWORD)a2 + 32];
        swift_beginAccess();
        v24 = swift_isUniquelyReferenced_nonNull_native();
        a2 = (void **)off_1ED243DB0;
        v41 = (void **)off_1ED243DB0;
        off_1ED243DB0 = (_UNKNOWN *)0x8000000000000000;
        a1 = sub_1A443E7EC(v23);
        v26 = a2[2];
        v27 = (v25 & 1) == 0;
        v28 = (uint64_t)v26 + v27;
        if (__OFADD__(v26, v27))
          goto LABEL_37;
        v29 = v25;
        if ((uint64_t)a2[3] >= v28)
        {
          if ((v24 & 1) != 0)
          {
            v32 = v41;
            if ((v25 & 1) == 0)
              goto LABEL_30;
          }
          else
          {
            a2 = (void **)&v41;
            sub_1A444953C();
            v32 = v41;
            if ((v29 & 1) == 0)
              goto LABEL_30;
          }
        }
        else
        {
          sub_1A4444D04(v28, v24);
          a2 = v41;
          v30 = sub_1A443E7EC(v23);
          if ((v29 & 1) != (v31 & 1))
            goto LABEL_41;
          a1 = v30;
          v32 = v41;
          if ((v29 & 1) == 0)
          {
LABEL_30:
            v32[(a1 >> 6) + 8] = (void *)((unint64_t)v32[(a1 >> 6) + 8] | (1 << a1));
            *((_BYTE *)v32[6] + a1) = v23;
            *((_BYTE *)v32[7] + a1) = 0;
            v33 = (char *)v32[2];
            v18 = __OFADD__(v33, 1);
            v34 = v33 + 1;
            if (v18)
              goto LABEL_39;
            v32[2] = v34;
            goto LABEL_22;
          }
        }
        *((_BYTE *)v32[7] + a1) = 0;
LABEL_22:
        ++v21;
        off_1ED243DB0 = v32;
        swift_bridgeObjectRelease();
        swift_endAccess();
        a2 = v22;
        if (v20 == v21)
        {
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
    }
  }
  sub_1A4444D04(v12, isUniquelyReferenced_nonNull_native);
  a2 = v41;
  v14 = sub_1A443E7EC(a1);
  if ((v13 & 1) == (v15 & 1))
  {
    v9 = v14;
    v16 = v41;
    if ((v13 & 1) == 0)
      goto LABEL_13;
    goto LABEL_4;
  }
LABEL_41:
  result = (id)sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t REMFeatureFlags.Platforms.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void static REMFeatureFlags.Platforms.current.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

ReminderKitInternal::REMFeatureFlags::Platforms __swiftcall REMFeatureFlags.Platforms.init(rawValue:)(ReminderKitInternal::REMFeatureFlags::Platforms rawValue)
{
  ReminderKitInternal::REMFeatureFlags::Platforms *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static REMFeatureFlags.Platforms.iphoneOS.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static REMFeatureFlags.Platforms.ipadOS.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void sub_1A4571744()
{
  qword_1EE720DE8 = 3;
}

void static REMFeatureFlags.Platforms.macOS.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static REMFeatureFlags.Platforms.watchOS.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static REMFeatureFlags.Platforms.all.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x7FFFFFFFFFFFFFFFLL;
}

uint64_t _s19ReminderKitInternal15REMFeatureFlagsO9PlatformsV3iOSAEvgZ_0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1EE71C130 != -1)
    result = swift_once();
  *a1 = qword_1EE720DE8;
  return result;
}

uint64_t REMFeatureFlags.Platforms.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if ((~*v0 & 0x7FFFFFFFFFFFFFFFLL) == 0)
    return 0x5D6C6C615BLL;
  if (!v1)
    return 23899;
  if (qword_1EE71C130 != -1)
    swift_once();
  if ((qword_1EE720DE8 & ~v1) != 0 && (v1 & 1) == 0 && (v1 & 2) == 0)
  {
    if ((v1 & 4) == 0)
      goto LABEL_12;
LABEL_16:
    sub_1A45719E4();
    swift_beginAccess();
    sub_1A4690984();
    swift_endAccess();
    if ((v1 & 8) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  sub_1A45719E4();
  swift_beginAccess();
  sub_1A4690984();
  swift_endAccess();
  if ((v1 & 4) != 0)
    goto LABEL_16;
LABEL_12:
  if ((v1 & 8) != 0)
  {
LABEL_13:
    sub_1A45719E4();
    swift_beginAccess();
    sub_1A4690984();
    swift_endAccess();
  }
LABEL_14:
  swift_beginAccess();
  sub_1A4690984();
  swift_endAccess();
  return 0;
}

uint64_t sub_1A45719E4()
{
  swift_beginAccess();
  swift_beginAccess();
  sub_1A4690984();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

ReminderKitInternal::REMFeatureFlags::ExternalFeatureFlag __swiftcall REMFeatureFlags.ExternalFeatureFlag.init(domain:feature:)(Swift::String domain, Swift::String feature)
{
  Swift::String *v2;
  ReminderKitInternal::REMFeatureFlags::ExternalFeatureFlag result;

  *v2 = domain;
  v2[1] = feature;
  result.feature = feature;
  result.domain = domain;
  return result;
}

uint64_t REMFeatureFlags.ExternalFeatureFlag.isEnabled.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)sub_1A469087C();
  v1 = (void *)sub_1A469087C();
  v2 = rem_feature_enabled();

  return v2;
}

uint64_t static REMFeatureFlags.isAppleAccountBrandingEnabled()()
{
  void *v0;
  void *v1;
  uint64_t v2;

  v0 = (void *)sub_1A469087C();
  v1 = (void *)sub_1A469087C();
  v2 = rem_feature_enabled();

  return v2;
}

void *sub_1A4571B6C()
{
  void *result;

  result = (void *)sub_1A443D630(MEMORY[0x1E0DEE9D8]);
  off_1ED243DB0 = result;
  return result;
}

ReminderKitInternal::REMFeatureFlags_optional __swiftcall REMFeatureFlags.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMFeatureFlags_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A4691BA8();
  result.value = swift_bridgeObjectRelease();
  v5 = 17;
  if (v3 < 0x11)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static REMFeatureFlags.allCases.getter()
{
  return &unk_1E4C0FA38;
}

uint64_t sub_1A4571BFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466C140(*a1, *a2);
}

uint64_t sub_1A4571C08()
{
  sub_1A4691C8C();
  REMFeatureFlags.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4571C6C()
{
  REMFeatureFlags.rawValue.getter();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4571CBC()
{
  sub_1A4691C8C();
  REMFeatureFlags.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMFeatureFlags_optional sub_1A4571D1C(Swift::String *a1)
{
  return REMFeatureFlags.init(rawValue:)(*a1);
}

uint64_t sub_1A4571D28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMFeatureFlags.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A4571D4C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FA38;
}

id sub_1A4571D5C()
{
  _BYTE *v0;
  objc_class *ObjectType;
  void *v2;
  objc_super v4;

  ObjectType = (objc_class *)swift_getObjectType();
  if ((v0[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled] = 1;
    if (qword_1ED243F38 != -1)
      swift_once();
    v2 = *(void **)&v0[OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_overridesToRestore];
    swift_beginAccess();
    off_1ED243DB0 = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1A4571E8C()
{
  uint64_t v0;
  void *v1;
  uint64_t result;

  if ((*(_BYTE *)(v0
                 + OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled) & 1) == 0)
  {
    *(_BYTE *)(v0
             + OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_finishCalled) = 1;
    if (qword_1ED243F38 != -1)
      swift_once();
    v1 = *(void **)(v0
                  + OBJC_IVAR____TtC19ReminderKitInternalP33_BCDA9BEAAF9519B32B6DBABA4FDACDFF17TemporaryOverride_overridesToRestore);
    swift_beginAccess();
    off_1ED243DB0 = v1;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TemporaryOverride()
{
  return objc_opt_self();
}

unint64_t sub_1A4571F58()
{
  unint64_t result;

  result = qword_1EE720E00;
  if (!qword_1EE720E00)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags.DevelopmentPhase, &type metadata for REMFeatureFlags.DevelopmentPhase);
    atomic_store(result, (unint64_t *)&qword_1EE720E00);
  }
  return result;
}

unint64_t sub_1A4571FA0()
{
  unint64_t result;

  result = qword_1EE720E08;
  if (!qword_1EE720E08)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags.TargetRelease, &type metadata for REMFeatureFlags.TargetRelease);
    atomic_store(result, (unint64_t *)&qword_1EE720E08);
  }
  return result;
}

unint64_t sub_1A4571FE8()
{
  unint64_t result;

  result = qword_1EE720E10;
  if (!qword_1EE720E10)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags.Platforms, &type metadata for REMFeatureFlags.Platforms);
    atomic_store(result, (unint64_t *)&qword_1EE720E10);
  }
  return result;
}

unint64_t sub_1A4572030()
{
  unint64_t result;

  result = qword_1EE720E18;
  if (!qword_1EE720E18)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags.Platforms, &type metadata for REMFeatureFlags.Platforms);
    atomic_store(result, (unint64_t *)&qword_1EE720E18);
  }
  return result;
}

unint64_t sub_1A4572078()
{
  unint64_t result;

  result = qword_1EE720E20;
  if (!qword_1EE720E20)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags.Platforms, &type metadata for REMFeatureFlags.Platforms);
    atomic_store(result, (unint64_t *)&qword_1EE720E20);
  }
  return result;
}

unint64_t sub_1A45720C0()
{
  unint64_t result;

  result = qword_1EE720E28;
  if (!qword_1EE720E28)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags.Platforms, &type metadata for REMFeatureFlags.Platforms);
    atomic_store(result, (unint64_t *)&qword_1EE720E28);
  }
  return result;
}

unint64_t sub_1A4572108()
{
  unint64_t result;

  result = qword_1EE720E30;
  if (!qword_1EE720E30)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMFeatureFlags, &type metadata for REMFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1EE720E30);
  }
  return result;
}

unint64_t sub_1A4572150()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE720E38;
  if (!qword_1EE720E38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE720E40);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE720E38);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF0)
    goto LABEL_17;
  if (a2 + 16 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 16) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 16;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 16;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 16;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x11;
  v8 = v6 - 17;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 16 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 16) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF0)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEF)
    return ((uint64_t (*)(void))((char *)&loc_1A4572278 + 4 * byte_1A46A1833[v4]))();
  *a1 = a2 + 16;
  return ((uint64_t (*)(void))((char *)sub_1A45722AC + 4 * byte_1A46A182E[v4]))();
}

uint64_t sub_1A45722AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45722B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45722BCLL);
  return result;
}

uint64_t sub_1A45722C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45722D0);
  *(_BYTE *)result = a2 + 16;
  return result;
}

uint64_t sub_1A45722D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45722DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMFeatureFlags()
{
  return &type metadata for REMFeatureFlags;
}

uint64_t storeEnumTagSinglePayload for REMFeatureFlags.DevelopmentPhase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A4572344 + 4 * byte_1A46A183D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A4572378 + 4 * byte_1A46A1838[v4]))();
}

uint64_t sub_1A4572378(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4572380(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4572388);
  return result;
}

uint64_t sub_1A4572394(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A457239CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A45723A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45723A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.DevelopmentPhase()
{
  return &type metadata for REMFeatureFlags.DevelopmentPhase;
}

uint64_t storeEnumTagSinglePayload for REMFeatureFlags.TargetRelease(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A4572404 + 4 * byte_1A46A1842[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4572424 + 4 * byte_1A46A1847[v4]))();
}

_BYTE *sub_1A4572404(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4572424(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A457242C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4572434(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A457243C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4572444(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.TargetRelease()
{
  return &type metadata for REMFeatureFlags.TargetRelease;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.Platforms()
{
  return &type metadata for REMFeatureFlags.Platforms;
}

ValueMetadata *type metadata accessor for REMFeatureFlags.ExternalFeatureFlag()
{
  return &type metadata for REMFeatureFlags.ExternalFeatureFlag;
}

uint64_t dispatch thunk of REMFeatureFlagsTemporaryOverride.finish()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A4572488(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v16;
  _QWORD v17[4];

  v17[3] = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) != 0)
    v5 = HIBYTE(a4) & 0xF;
  else
    v5 = a3 & 0xFFFFFFFFFFFFLL;
  if (v5)
  {
    v16 = a4 & 0xFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if ((a4 & 0x1000000000000000) != 0)
      {
        v10 = sub_1A4691404();
      }
      else
      {
        if ((a4 & 0x2000000000000000) != 0)
        {
          v17[0] = a3;
          v17[1] = v16;
        }
        else if ((a3 & 0x1000000000000000) == 0)
        {
          sub_1A46914E8();
        }
        v10 = sub_1A46914F4();
      }
      v12 = v11;
      LODWORD(v17[0]) = v10;
      v13 = a1(v17);
      if (v4)
      {
        swift_bridgeObjectRelease();
        return v14 & 1;
      }
      if ((v13 & 1) == 0)
        break;
      v9 += v12;
      if (v9 >= v5)
      {
        swift_bridgeObjectRelease();
        v14 = 1;
        return v14 & 1;
      }
    }
    swift_bridgeObjectRelease();
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  return v14 & 1;
}

uint64_t sub_1A45725C4(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD v13[6];

  v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0)
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  v7 = sub_1A469099C();
  if (v8)
  {
    v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) == 0)
        break;
      v7 = sub_1A469099C();
      v9 = v11;
      if (!v11)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 1;
  }
}

Swift::Bool __swiftcall CharacterSet.containsUnicodeScalars(of:)(Swift::String of)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BYTE v10[16];

  object = of._object;
  countAndFlagsBits = of._countAndFlagsBits;
  v4 = sub_1A468FBEC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v8 + v7, &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v4);
  swift_bridgeObjectRetain();
  LOBYTE(countAndFlagsBits) = sub_1A4572BE8(countAndFlagsBits, (unint64_t)object, (unsigned int (*)(uint64_t))sub_1A4572790);
  swift_release();
  swift_bridgeObjectRelease();
  return countAndFlagsBits & 1;
}

Swift::Bool __swiftcall CharacterSet.containsUnicodeScalarsOfAllCharacters(in:)(Swift::String in)
{
  uint64_t v2;

  return sub_1A45725C4(sub_1A4572DEC, (uint64_t)&v2, in._countAndFlagsBits, (unint64_t)in._object) & 1;
}

uint64_t sub_1A45727D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[2];

  v4 = sub_1A468FBEC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v8 = *a1;
  v7 = a1[1];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_bridgeObjectRetain();
  v11 = sub_1A4572BE8(v8, v7, (unsigned int (*)(uint64_t))sub_1A4572790);
  swift_release();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

void static CharacterSet.emojis.getter()
{
  void *v0;
  id v1;

  v0 = (void *)CEMGetSharedEmojiCharacterSet();
  if (v0)
  {
    v1 = v0;
    sub_1A468FBD4();

  }
  else
  {
    __break(1u);
  }
}

void sub_1A4572938()
{
  off_1ED23EB58 = &unk_1E4C11DA8;
}

uint64_t static CharacterSet.hashtagTokenPrefixCharacterArray.getter()
{
  if (qword_1ED23ED30 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A457298C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  int v9;
  _DWORD v11[3];

  v0 = sub_1A468FBEC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_1ED23ECF0);
  v5 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ECF0);
  if (qword_1ED23ED30 != -1)
    swift_once();
  v6 = (char *)off_1ED23EB58;
  sub_1A4572E08();
  swift_bridgeObjectRetain();
  sub_1A469129C();
  v7 = *((_QWORD *)v6 + 2);
  if (v7)
  {
    v8 = (int *)(v6 + 32);
    do
    {
      v9 = *v8++;
      v11[2] = v9;
      sub_1A4691284();
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5, v4, v0);
}

uint64_t static CharacterSet.hashtagTokenPrefixCharacters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4572B7C(&qword_1ED23ED38, (uint64_t)qword_1ED23ECF0, a1);
}

void sub_1A4572AE4()
{
  uint64_t v0;
  id v1;

  v0 = sub_1A468FBEC();
  __swift_allocate_value_buffer(v0, qword_1ED23ED08);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED23ED08);
  v1 = objc_msgSend((id)objc_opt_self(), sel_hashtagTokenAllowedCharacters);
  sub_1A468FBD4();

}

uint64_t static CharacterSet.hashtagTokenAllowedCharacters.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A4572B7C(&qword_1ED23ED40, (uint64_t)qword_1ED23ED08, a1);
}

uint64_t sub_1A4572B7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1A468FBEC();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1A4572BE8(uint64_t a1, unint64_t a2, unsigned int (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;

  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 1;
  v17 = a2 & 0xFFFFFFFFFFFFFFLL;
  v15 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
  swift_bridgeObjectRetain();
  for (i = 0; i < v4; i += v12)
  {
    if ((a2 & 0x1000000000000000) != 0)
    {
      v10 = sub_1A4691404();
      v12 = v11;
    }
    else
    {
      if ((a2 & 0x2000000000000000) != 0)
      {
        v16[0] = a1;
        v16[1] = v17;
        v10 = *((unsigned __int8 *)v16 + i);
        if (*((char *)v16 + i) < 0)
          __asm { BR              X9 }
      }
      else
      {
        v9 = v15;
        if ((a1 & 0x1000000000000000) == 0)
          v9 = sub_1A46914E8();
        v10 = *(unsigned __int8 *)(v9 + i);
        if (*(char *)(v9 + i) < 0)
          __asm { BR              X10 }
      }
      v12 = 1;
    }
    v13 = (v3 == 0) & a3(v10);
    if ((_DWORD)v13 != 1)
      break;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1A4572DEC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1A45727D8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_1A4572E08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23ED48;
  if (!qword_1ED23ED48)
  {
    v1 = sub_1A468FBEC();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CAE4D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23ED48);
  }
  return result;
}

uint64_t sub_1A4572E54()
{
  sub_1A468FBEC();
  return sub_1A468FBE0() & 1;
}

uint64_t sub_1A4572E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED23F258);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23F258);
  if (qword_1ED23E620 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256830);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static REMNLQueryParserUtils.recurrentEventsFromStrings(attrStrings:referenceDate:)(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  result = sub_1A46916A4();
  v4 = result;
  if (!result)
    goto LABEL_15;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
  }
  else
  {
    for (i = 0; i != v4; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x1A859ECE0](i, a1);
      else
        v8 = *(id *)(a1 + 8 * i + 32);
      v7 = v8;
      v9 = (void *)sub_1A457309C(v8, a2);
      if (v9)
      {
        v10 = v9;
        MEMORY[0x1A859E3E0]();
        if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        sub_1A4690BB8();

        v7 = v10;
      }

    }
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

uint64_t sub_1A457309C(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  id v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t result;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  _QWORD aBlock[6];
  uint64_t v79;
  void *v80;
  char v81;
  unsigned __int8 v82;

  v69 = a2;
  v76 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v67 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - v7;
  v71 = (uint64_t)&v60 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v64 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v66 = (uint64_t)&v60 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v65 = (uint64_t)&v60 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v63 = (uint64_t)&v60 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v60 - v19;
  v74 = (uint64_t)&v60 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v60 - v21;
  v75 = (uint64_t)&v60 - v21;
  v23 = sub_1A468FDE4();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  v73 = swift_allocBox();
  v62 = v25;
  v24((char *)v25, 1, 1, v23);
  v24(v20, 1, 1, v23);
  v82 = 0;
  v77 = swift_allocBox();
  v27 = v26;
  v28 = sub_1A46900B4();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v61 = v27;
  v29(v27, 1, 1, v28);
  v72 = swift_allocBox();
  v60 = v30;
  v29(v30, 1, 1, v28);
  v79 = 0;
  v80 = 0;
  v81 = 1;
  v31 = objc_msgSend(a1, sel_string);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v68 = sub_1A46909FC();
  swift_bridgeObjectRelease();
  sub_1A444ABF4(v69, (uint64_t)v8, &qword_1ED243190);
  v32 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v33 = (v5 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
  v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v76;
  sub_1A449C96C(v71, v40 + v32);
  *(_QWORD *)(v40 + v33) = v70;
  *(_QWORD *)(v40 + v34) = v74;
  *(_QWORD *)(v40 + v35) = v75;
  *(_QWORD *)(v40 + v36) = v77;
  *(_QWORD *)(v40 + v37) = &v82;
  v41 = v72;
  *(_QWORD *)(v40 + v38) = v73;
  *(_QWORD *)(v40 + v39) = v41;
  *(_QWORD *)(v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8)) = &v79;
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = sub_1A45760A0;
  *(_QWORD *)(v42 + 24) = v40;
  aBlock[4] = sub_1A446A6C0;
  aBlock[5] = v42;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A4574F98;
  aBlock[3] = &block_descriptor_13_0;
  v43 = _Block_copy(aBlock);
  v44 = v76;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v44, sel_enumerateAttributesInRange_options_usingBlock_, 0, v68, 0, v43);
  _Block_release(v43);
  LOBYTE(v43) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v43 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((v81 & 1) != 0)
    {
      swift_release();
      swift_release();
      v46 = 0;
      v48 = v74;
      v47 = v75;
    }
    else
    {
      v76 = v80;
      v70 = v79;
      v49 = v61;
      swift_beginAccess();
      v50 = v71;
      sub_1A444ABF4(v49, v71, &qword_1ED243190);
      v51 = v60;
      swift_beginAccess();
      v52 = v51;
      v53 = v67;
      sub_1A444ABF4(v52, v67, &qword_1ED243190);
      LODWORD(v69) = v82;
      v47 = v75;
      v54 = v65;
      sub_1A444ABF4(v75, v65, &qword_1ED23E4C0);
      v55 = v63;
      sub_1A4575020(v54, v63);
      sub_1A445404C(v54, &qword_1ED23E4C0);
      v56 = v62;
      swift_beginAccess();
      v57 = v66;
      sub_1A444ABF4(v56, v66, &qword_1ED23E4C0);
      sub_1A4575020(v57, v54);
      sub_1A445404C(v57, &qword_1ED23E4C0);
      v48 = v74;
      v58 = v64;
      sub_1A444ABF4(v74, v64, &qword_1ED23E4C0);
      sub_1A4575020(v58, v57);
      sub_1A445404C(v58, &qword_1ED23E4C0);
      v59 = objc_allocWithZone((Class)TTRNLTextStructuredEventRecurrentEvent);
      v46 = sub_1A4575D10(v70, (uint64_t)v76, v50, v53, v69, v55, v54, v57);
      swift_release();
      swift_release();
    }
    sub_1A445404C(v48, &qword_1ED23E4C0);
    swift_release();
    sub_1A445404C(v47, &qword_1ED23E4C0);
    swift_release();
    return (uint64_t)v46;
  }
  return result;
}

uint64_t static REMNLQueryParserUtils.locationsFromStrings(attrStrings:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  _QWORD v16[6];
  unint64_t v17;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (v2 >= 1)
    {
      v4 = 0;
      while (1)
      {
        v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1A859ECE0](v4, a1) : *(id *)(a1 + 8 * v4 + 32);
        v6 = v5;
        v17 = MEMORY[0x1E0DEE9D8];
        v7 = objc_msgSend(v5, sel_string);
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v9 = v8;

        v10 = (v9 & 0x1000000000000000) != 0 ? sub_1A46909E4() : sub_1A46909F0();
        v11 = v10;
        swift_bridgeObjectRelease();
        v12 = swift_allocObject();
        *(_QWORD *)(v12 + 16) = &v17;
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = sub_1A4575F10;
        *(_QWORD *)(v13 + 24) = v12;
        v16[4] = sub_1A4452640;
        v16[5] = v13;
        v16[0] = MEMORY[0x1E0C809B0];
        v16[1] = 1107296256;
        v16[2] = sub_1A4574F98;
        v16[3] = &block_descriptor_8;
        v14 = _Block_copy(v16);
        swift_retain();
        swift_release();
        objc_msgSend(v6, sel_enumerateAttributesInRange_options_usingBlock_, 0, v11, 0, v14);
        _Block_release(v14);
        LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v14 & 1) != 0)
          break;
        ++v4;
        v15 = v17;
        swift_release();
        sub_1A4459024(v15);

        if (v2 == v4)
        {
          swift_bridgeObjectRelease();
          return v18;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      result = sub_1A46916A4();
      v2 = result;
      if (!result)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A45739CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, uint64_t a13, _QWORD *a14)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  void *v56;
  NSObject *v57;
  NSObject *v58;
  os_log_type_t v59;
  int v60;
  uint8_t *v61;
  _QWORD *v62;
  NSObject *v63;
  uint8_t *v64;
  id v65;
  unint64_t v66;
  char v67;
  uint64_t result;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unsigned int v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  void (*v101)(uint64_t, char *, uint64_t);
  uint64_t v102;
  char v103;
  char v104;
  char *v105;
  void (*v106)(char *, char *, uint64_t);
  char v107;
  char v108;
  void (*v109)(char *, uint64_t);
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char *v114;
  NSObject *v115;
  os_log_type_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD v162[2];
  uint8_t *v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  __int128 v199;
  __int128 v200;

  v185 = a8;
  v187 = a7;
  v179 = a6;
  v178 = a5;
  v192 = a3;
  v193 = a2;
  v195 = a14;
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  v15 = MEMORY[0x1E0C80A78](v169);
  v171 = (uint64_t)v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v174 = (uint64_t)v162 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v183 = (char *)v162 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v172 = (uint64_t)v162 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)v162 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)v162 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v186 = (uint64_t)v162 - v30;
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)v162 - v31;
  v194 = sub_1A468FDE4();
  v191 = *(_QWORD *)(v194 - 8);
  v33 = MEMORY[0x1E0C80A78](v194);
  v184 = (char *)v162 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v173 = (char *)v162 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v181 = (char *)v162 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v180 = (char *)v162 - v40;
  MEMORY[0x1E0C80A78](v39);
  v42 = (char *)v162 - v41;
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v43 = MEMORY[0x1E0C80A78](v170);
  v182 = (uint64_t)v162 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)v162 - v45;
  v190 = sub_1A46900B4();
  v188 = *(_QWORD *)(v190 - 8);
  MEMORY[0x1E0C80A78](v190);
  v189 = (uint64_t)v162 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v176 = a10;
  v48 = swift_projectBox();
  v175 = a12;
  v49 = swift_projectBox();
  v177 = a13;
  v50 = swift_projectBox();
  if (!*(_QWORD *)(a1 + 16))
  {
    v199 = 0u;
    v200 = 0u;
    goto LABEL_10;
  }
  v51 = v50;
  v168 = v48;
  v52 = (id)*MEMORY[0x1E0D83568];
  v53 = sub_1A443EA68((uint64_t)v52);
  if ((v54 & 1) == 0)
  {
    v199 = 0u;
    v200 = 0u;

    goto LABEL_10;
  }
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v53, (uint64_t)&v199);

  if (!*((_QWORD *)&v200 + 1))
  {
LABEL_10:
    sub_1A445404C((uint64_t)&v199, &qword_1ED243E68);
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23E740);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v165 = v49;
    v166 = v51;
    v167 = v197;
    if (qword_1ED23E618 == -1)
      goto LABEL_6;
    goto LABEL_75;
  }
LABEL_11:
  if (qword_1ED23E790 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_13;
LABEL_70:
    v199 = 0u;
    v200 = 0u;
    return sub_1A445404C((uint64_t)&v199, &qword_1ED243E68);
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_70;
LABEL_13:
  v65 = (id)qword_1ED23E780;
  v66 = sub_1A443EA68((uint64_t)v65);
  if ((v67 & 1) != 0)
  {
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v66, (uint64_t)&v199);
  }
  else
  {
    v199 = 0u;
    v200 = 0u;
  }

  if (!*((_QWORD *)&v200 + 1))
    return sub_1A445404C((uint64_t)&v199, &qword_1ED243E68);
  result = sub_1A445404C((uint64_t)&v199, &qword_1ED243E68);
  if ((v195[2] & 1) != 0)
  {
LABEL_60:
    v155 = v195;
    v156 = v192;
    *v195 = v193;
    v155[1] = v156;
    *((_BYTE *)v155 + 16) = 0;
    return result;
  }
  v69 = *v195;
  v70 = v195[1];
  v71 = __OFADD__(*v195, v70);
  v72 = *v195 + v70;
  if (v71)
  {
    __break(1u);
  }
  else if (!__OFADD__(v193, v192))
  {
    if (v72 <= v193 + v192)
      v72 = v193 + v192;
    if (v69 >= v193)
      v69 = v193;
    v71 = __OFSUB__(v72, v69);
    v73 = v72 - v69;
    if (!v71)
    {
      v74 = v195;
      *v195 = v69;
      v74[1] = v73;
      return result;
    }
    goto LABEL_74;
  }
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  swift_once();
LABEL_6:
  v55 = sub_1A4690318();
  v56 = (void *)__swift_project_value_buffer(v55, (uint64_t)qword_1ED23F258);
  v57 = v178;
  v178 = v56;
  v58 = sub_1A469030C();
  v59 = sub_1A4691008();
  v60 = v59;
  if (os_log_type_enabled(v58, v59))
  {
    v164 = v60;
    v61 = (uint8_t *)swift_slowAlloc();
    v62 = (_QWORD *)swift_slowAlloc();
    v163 = v61;
    *(_DWORD *)v61 = 138412290;
    v162[1] = v61 + 4;
    *(_QWORD *)&v199 = v57;
    v162[0] = (char *)&v199 + 8;
    v63 = v57;
    sub_1A46911D0();
    *v62 = v57;

    v64 = v163;
    _os_log_impl(&dword_1A442D000, v58, (os_log_type_t)v164, "QueryParser: found recurrent event for: %@", v163, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v62, -1, -1);
    MEMORY[0x1A85A0114](v64, -1, -1);
  }
  else
  {

    v58 = v57;
  }
  v75 = v190;

  sub_1A444ABF4(v179, (uint64_t)v46, &qword_1ED243190);
  v76 = v188;
  v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v188 + 48))(v46, 1, v75);
  v78 = v186;
  if (v77 == 1)
  {
    sub_1A46900A8();
    sub_1A445404C((uint64_t)v46, &qword_1ED243190);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v76 + 32))(v189, v46, v75);
  }
  v79 = v167;
  sub_1A4574C4C((void *)*MEMORY[0x1E0D83580], v167, (uint64_t)v32);
  v80 = v191;
  v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48);
  if (v81(v32, 1, v194) == 1)
  {
    sub_1A445404C((uint64_t)v32, &qword_1ED23E4C0);
  }
  else
  {
    v82 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    v83 = v194;
    v82(v42, v32, v194);
    v84 = v185;
    sub_1A445404C(v185, &qword_1ED23E4C0);
    v82((char *)v84, v42, v83);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56))(v84, 0, 1, v83);
  }
  v85 = v181;
  sub_1A4574C4C((void *)*MEMORY[0x1E0D83570], v79, (uint64_t)v28);
  v86 = v81(v28, 1, v194);
  v87 = v188;
  if (v86 == 1)
  {
    sub_1A4574C4C((void *)*MEMORY[0x1E0D83588], v79, v78);
    sub_1A445404C((uint64_t)v28, &qword_1ED23E4C0);
  }
  else
  {
    v88 = v191;
    v89 = v194;
    (*(void (**)(uint64_t, char *, uint64_t))(v191 + 32))(v78, v28, v194);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v78, 0, 1, v89);
  }
  sub_1A444ABF4(v78, (uint64_t)v25, &qword_1ED23E4C0);
  v90 = v81(v25, 1, v194);
  v91 = (uint64_t)v183;
  if (v90 == 1)
  {
    sub_1A445404C((uint64_t)v25, &qword_1ED23E4C0);
    v92 = v184;
    goto LABEL_49;
  }
  v93 = v87;
  v181 = a11;
  v94 = v191;
  v95 = v180;
  v96 = v25;
  v97 = v194;
  (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v180, v96, v194);
  v98 = v172;
  sub_1A444ABF4(v185, v172, &qword_1ED23E4C0);
  LODWORD(v97) = v81((char *)v98, 1, v97);
  sub_1A445404C(v98, &qword_1ED23E4C0);
  v99 = (_DWORD)v97 == 1;
  v100 = v94;
  if (!v99)
  {
    sub_1A445404C(a9, &qword_1ED23E4C0);
    v101 = *(void (**)(uint64_t, char *, uint64_t))(v94 + 16);
    v102 = v194;
    v101(a9, v95, v194);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v100 + 56))(a9, 0, 1, v102);
  }
  sub_1A468FD00();
  v104 = v103;
  v105 = v95;
  v106 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v106(v85, v105, v194);
  v87 = v93;
  if ((v104 & 1) != 0)
  {
    v109 = *(char **)(v100 + 8);
    ((void (*)(char *, uint64_t))v109)(v85, v194);
    v110 = v180;
  }
  else
  {
    sub_1A468FD60();
    v108 = v107;
    v109 = *(char **)(v100 + 8);
    ((void (*)(char *, uint64_t))v109)(v85, v194);
    v110 = v180;
    if ((v108 & 1) != 0)
      goto LABEL_45;
  }
  v111 = v182;
  DateComponents.nextDate(after:)(v189, v182);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v93 + 56))(v111, 0, 1, v190);
  v112 = v168;
  swift_beginAccess();
  sub_1A457619C(v111, v112, &qword_1ED243190);
LABEL_45:
  sub_1A468FD60();
  *v181 = v113 & 1;
  v114 = v173;
  v106(v173, v110, v194);
  swift_retain_n();
  v115 = sub_1A469030C();
  v116 = sub_1A4691008();
  v117 = v116;
  if (os_log_type_enabled(v115, v116))
  {
    v118 = swift_slowAlloc();
    v181 = (char *)swift_slowAlloc();
    *(_QWORD *)&v199 = v181;
    *(_DWORD *)v118 = 136315394;
    LODWORD(v179) = v117;
    v119 = sub_1A468FD0C();
    v197 = sub_1A4431120(v119, v120, (uint64_t *)&v199);
    v180 = v109;
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v109)(v114, v194);
    *(_WORD *)(v118 + 12) = 2080;
    v121 = v168;
    swift_beginAccess();
    v122 = v121;
    v123 = v182;
    sub_1A444ABF4(v122, v182, &qword_1ED243190);
    v124 = sub_1A4691194();
    v126 = v125;
    v87 = v188;
    sub_1A445404C(v123, &qword_1ED243190);
    v127 = v124;
    v91 = (uint64_t)v183;
    v197 = sub_1A4431120(v127, v126, (uint64_t *)&v199);
    sub_1A46911D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v115, (os_log_type_t)v179, "QueryParser: calculated relative date from dateComponents=%s -> startDate=%s", (uint8_t *)v118, 0x16u);
    v128 = v181;
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v128, -1, -1);
    MEMORY[0x1A85A0114](v118, -1, -1);

    ((void (*)(char *, uint64_t))v180)(v110, v194);
  }
  else
  {
    swift_release_n();

    v129 = v194;
    ((void (*)(char *, uint64_t))v109)(v114, v194);
    ((void (*)(char *, uint64_t))v109)(v110, v129);
  }
  v92 = v184;
  v79 = v167;
LABEL_49:
  sub_1A4574C4C((void *)*MEMORY[0x1E0D83578], v79, v91);
  swift_bridgeObjectRelease();
  if (v81((char *)v91, 1, v194) == 1)
  {
    result = sub_1A445404C(v91, &qword_1ED23E4C0);
  }
  else
  {
    v130 = v194;
    (*(void (**)(char *, uint64_t, uint64_t))(v191 + 32))(v92, v91, v194);
    v131 = v174;
    sub_1A444ABF4(v185, v174, &qword_1ED23E4C0);
    LODWORD(v130) = v81((char *)v131, 1, v130);
    sub_1A445404C(v131, &qword_1ED23E4C0);
    if ((_DWORD)v130 != 1)
    {
      v132 = v191;
      v133 = v171;
      v134 = v194;
      (*(void (**)(uint64_t, char *, uint64_t))(v191 + 16))(v171, v92, v194);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v132 + 56))(v133, 0, 1, v134);
      v135 = v165;
      swift_beginAccess();
      sub_1A457619C(v133, v135, &qword_1ED23E4C0);
    }
    sub_1A468FCD0();
    if ((v136 & 1) != 0)
    {
      v137 = v182;
      DateComponents.nextDate(after:)(v189, v182);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v87 + 56))(v137, 0, 1, v190);
      v138 = v166;
      swift_beginAccess();
      sub_1A457619C(v137, v138, &qword_1ED243190);
    }
    swift_retain_n();
    swift_retain_n();
    v139 = sub_1A469030C();
    v140 = sub_1A4691008();
    if (os_log_type_enabled(v139, v140))
    {
      v141 = swift_slowAlloc();
      v142 = swift_slowAlloc();
      v198 = v142;
      *(_DWORD *)v141 = 136315394;
      v143 = v165;
      swift_beginAccess();
      v144 = v143;
      v145 = v171;
      sub_1A444ABF4(v144, v171, &qword_1ED23E4C0);
      v146 = sub_1A4691194();
      v148 = v147;
      sub_1A445404C(v145, &qword_1ED23E4C0);
      v197 = sub_1A4431120(v146, v148, &v198);
      sub_1A46911D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v141 + 12) = 2080;
      v149 = v166;
      swift_beginAccess();
      v150 = v182;
      sub_1A444ABF4(v149, v182, &qword_1ED243190);
      v151 = sub_1A4691194();
      v153 = v152;
      sub_1A445404C(v150, &qword_1ED243190);
      v196 = sub_1A4431120(v151, v153, &v198);
      sub_1A46911D0();
      swift_release_n();
      v87 = v188;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v139, v140, "QueryParser: calculated relative date from dateComps=%s -> endDate=%s", (uint8_t *)v141, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v142, -1, -1);
      MEMORY[0x1A85A0114](v141, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v191 + 8))(v184, v194);
    }
    else
    {
      swift_release_n();
      swift_release_n();

      result = (*(uint64_t (**)(char *, uint64_t))(v191 + 8))(v92, v194);
    }
  }
  v154 = v190;
  if ((v195[2] & 1) != 0)
  {
    sub_1A445404C(v186, &qword_1ED23E4C0);
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v189, v154);
    goto LABEL_60;
  }
  v157 = *v195;
  v158 = v195[1];
  v71 = __OFADD__(*v195, v158);
  v159 = *v195 + v158;
  if (v71)
  {
    __break(1u);
  }
  else if (!__OFADD__(v193, v192))
  {
    if (v159 <= v193 + v192)
      v159 = v193 + v192;
    if (v157 >= v193)
      v157 = v193;
    v71 = __OFSUB__(v159, v157);
    v160 = v159 - v157;
    if (!v71)
    {
      v161 = v195;
      *v195 = v157;
      v161[1] = v160;
      sub_1A445404C(v186, &qword_1ED23E4C0);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 8))(v189, v154);
    }
    goto LABEL_78;
  }
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

uint64_t sub_1A4574C4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[2];
  __int128 v31;
  __int128 v32;
  _OWORD v33[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16))
  {
    v31 = 0u;
    v32 = 0u;
    goto LABEL_9;
  }
  v9 = a1;
  v10 = sub_1A443EA68((uint64_t)v9);
  if ((v11 & 1) == 0)
  {
    v31 = 0u;
    v32 = 0u;

    goto LABEL_9;
  }
  sub_1A44311F0(*(_QWORD *)(a2 + 56) + 32 * v10, (uint64_t)&v31);

  if (!*((_QWORD *)&v32 + 1))
  {
LABEL_9:
    sub_1A445404C((uint64_t)&v31, &qword_1ED243E68);
    v18 = sub_1A468FDE4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a3, 1, 1, v18);
  }
  sub_1A444A940(&v31, v33);
  sub_1A44311F0((uint64_t)v33, (uint64_t)&v31);
  v12 = sub_1A468FDE4();
  v13 = swift_dynamicCast();
  v14 = *(_QWORD *)(v12 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (!v13)
  {
    v15(v8, 1, 1, v12);
    goto LABEL_11;
  }
  v15(v8, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v12) == 1)
  {
LABEL_11:
    sub_1A445404C((uint64_t)v8, &qword_1ED23E4C0);
    if (qword_1ED23E618 != -1)
      swift_once();
    v20 = sub_1A4690318();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED23F258);
    v21 = v9;
    v22 = sub_1A469030C();
    v23 = sub_1A4690FFC();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v30[0] = v15;
      v26 = v25;
      *(_QWORD *)&v31 = v25;
      *(_DWORD *)v24 = 136315138;
      v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v30[1] = sub_1A4431120(v27, v28, (uint64_t *)&v31);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v22, v23, "QueryParser: Could not cast to DateComponents value for %s", v24, 0xCu);
      swift_arrayDestroy();
      v29 = v26;
      v15 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v30[0];
      MEMORY[0x1A85A0114](v29, -1, -1);
      MEMORY[0x1A85A0114](v24, -1, -1);
    }
    else
    {

    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    v16 = a3;
    v17 = 1;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v16, v17, 1, v12);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v8, v12);
  v16 = a3;
  v17 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v16, v17, 1, v12);
}

uint64_t sub_1A4574F98(uint64_t a1)
{
  void (*v1)(void);

  v1 = *(void (**)(void))(a1 + 32);
  type metadata accessor for Key(0);
  sub_1A4575F54();
  sub_1A4690708();
  v1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4575020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  _QWORD v46[10];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240110);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A468FDE4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A444ABF4(a1, (uint64_t)v12, &qword_1ED23E4C0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1A445404C((uint64_t)v12, &qword_1ED23E4C0);
    v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    sub_1A469027C();
    v18 = sub_1A46902AC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 0, 1, v18);
    v19 = objc_msgSend((id)objc_opt_self(), sel_defaultTimeZone);
    sub_1A46902DC();

    v20 = sub_1A46902F4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
    v21 = sub_1A468FD6C();
    if ((v22 & 1) != 0)
      v23 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v23 = v21;
    v46[9] = v23;
    v24 = sub_1A468FD78();
    if ((v25 & 1) != 0)
      v26 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v26 = v24;
    v46[8] = v26;
    v27 = sub_1A468FD48();
    if ((v28 & 1) != 0)
      v29 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v29 = v27;
    v46[7] = v29;
    v30 = sub_1A468FD60();
    if ((v31 & 1) != 0)
      v32 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v32 = v30;
    v46[6] = v32;
    v33 = sub_1A468FD84();
    if ((v34 & 1) != 0)
      v35 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v35 = v33;
    v46[5] = v35;
    v36 = sub_1A468FD90();
    if ((v37 & 1) != 0)
      v38 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v38 = v36;
    v46[4] = v38;
    v39 = sub_1A468FCC4();
    if ((v40 & 1) != 0)
      v41 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v41 = v39;
    v46[3] = v41;
    v42 = sub_1A468FDA8();
    if ((v43 & 1) != 0)
      v44 = 0x7FFFFFFFFFFFFFFFLL;
    else
      v44 = v42;
    v46[2] = v44;
    sub_1A468FD00();
    sub_1A468FD9C();
    v46[1] = v9;
    sub_1A468FCF4();
    sub_1A468FCD0();
    sub_1A468FD18();
    sub_1A468FDB4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a2, v17, 1, v13);
}

uint64_t sub_1A45753B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  id v9;
  unint64_t v10;
  char v11;
  id v12;
  unint64_t v13;
  char v14;
  id v15;
  unint64_t v16;
  char v17;
  id v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  char v26;
  id v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __int128 v43;
  __int128 v44;

  if (qword_1ED23E7E0 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_3;
LABEL_9:
    v43 = 0u;
    v44 = 0u;
    goto LABEL_10;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_9;
LABEL_3:
  v9 = (id)qword_1ED23E7D0;
  v10 = sub_1A443EA68((uint64_t)v9);
  if ((v11 & 1) == 0)
  {
    v43 = 0u;
    v44 = 0u;

    goto LABEL_10;
  }
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)&v43);

  if (!*((_QWORD *)&v44 + 1))
  {
LABEL_10:
    sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_62:
    v23 = 0;
    v22 = v41;
    v21 = v42;
    goto LABEL_63;
  }
LABEL_11:
  if (qword_1ED23E7F8 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_13;
LABEL_20:
    v43 = 0u;
    v44 = 0u;
LABEL_21:
    sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
    goto LABEL_22;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_20;
LABEL_13:
  v12 = (id)qword_1ED23E7E8;
  v13 = sub_1A443EA68((uint64_t)v12);
  if ((v14 & 1) != 0)
  {
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v43);
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }

  if (!*((_QWORD *)&v44 + 1))
    goto LABEL_21;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_40;
LABEL_22:
  if (qword_1ED23E7A0 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_24;
LABEL_31:
    v43 = 0u;
    v44 = 0u;
LABEL_32:
    sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
    goto LABEL_33;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_31;
LABEL_24:
  v15 = (id)qword_1ED23E798;
  v16 = sub_1A443EA68((uint64_t)v15);
  if ((v17 & 1) != 0)
  {
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v16, (uint64_t)&v43);
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }

  if (!*((_QWORD *)&v44 + 1))
    goto LABEL_32;
  if ((swift_dynamicCast() & 1) != 0)
    goto LABEL_62;
LABEL_33:
  if (qword_1ED23E7C8 == -1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_35;
LABEL_42:
    v43 = 0u;
    v44 = 0u;
LABEL_43:
    sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
LABEL_44:
    if (qword_1ED23E7B0 == -1)
    {
      if (*(_QWORD *)(a1 + 16))
        goto LABEL_46;
    }
    else
    {
      swift_once();
      if (*(_QWORD *)(a1 + 16))
      {
LABEL_46:
        v24 = (id)qword_1ED23E7A8;
        v25 = sub_1A443EA68((uint64_t)v24);
        if ((v26 & 1) != 0)
        {
          sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v25, (uint64_t)&v43);
        }
        else
        {
          v43 = 0u;
          v44 = 0u;
        }

        if (*((_QWORD *)&v44 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
            goto LABEL_62;
LABEL_55:
          if (qword_1ED23E778 == -1)
          {
            if (*(_QWORD *)(a1 + 16))
              goto LABEL_57;
          }
          else
          {
            swift_once();
            if (*(_QWORD *)(a1 + 16))
            {
LABEL_57:
              v27 = (id)qword_1ED23E768;
              v28 = sub_1A443EA68((uint64_t)v27);
              if ((v29 & 1) != 0)
              {
                sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)&v43);
              }
              else
              {
                v43 = 0u;
                v44 = 0u;
              }

              if (*((_QWORD *)&v44 + 1))
              {
                result = swift_dynamicCast();
                if ((result & 1) == 0)
                  return result;
                goto LABEL_62;
              }
              return sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
            }
          }
          v43 = 0u;
          v44 = 0u;
          return sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
        }
LABEL_54:
        sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
        goto LABEL_55;
      }
    }
    v43 = 0u;
    v44 = 0u;
    goto LABEL_54;
  }
  swift_once();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_42;
LABEL_35:
  v18 = (id)qword_1ED23E7B8;
  v19 = sub_1A443EA68((uint64_t)v18);
  if ((v20 & 1) != 0)
  {
    sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v43);
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
  }

  if (!*((_QWORD *)&v44 + 1))
    goto LABEL_43;
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_44;
LABEL_40:
  v22 = v41;
  v21 = v42;
  v23 = 1;
LABEL_63:
  if (v22 == 1162694472 && v21 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    v31 = 0;
  }
  else if (v22 == 0x454C4349484556 && v21 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    v31 = 2;
  }
  else
  {
    if ((v22 != 1263685463 || v21 != 0xE400000000000000) && (sub_1A4691A40() & 1) == 0)
      return swift_bridgeObjectRelease();
    v31 = 1;
  }
  if (qword_1ED23E618 != -1)
    swift_once();
  v32 = sub_1A4690318();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED23F258);
  swift_bridgeObjectRetain();
  v33 = sub_1A469030C();
  v34 = sub_1A4691008();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    v40 = v23;
    v36 = swift_slowAlloc();
    *(_QWORD *)&v43 = v36;
    *(_DWORD *)v35 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A4431120(v22, v21, (uint64_t *)&v43);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2080;
    v37 = sub_1A4691170();
    sub_1A4431120(v37, v38, (uint64_t *)&v43);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v33, v34, "QueryParser: found event location: %s, range={%s}", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    v39 = v36;
    v23 = v40;
    MEMORY[0x1A85A0114](v39, -1, -1);
    MEMORY[0x1A85A0114](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  objc_msgSend(objc_allocWithZone((Class)TTRNLTextStructuredEventLocation), sel_initWithRange_locationType_proximity_, a2, a3, v31, v23);
  MEMORY[0x1A859E3E0]();
  if (*(_QWORD *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A4690BDC();
  sub_1A4690C18();
  return sub_1A4690BB8();
}

uint64_t REMNLQueryParserUtils.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMNLQueryParserUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1A4575BA0()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E7D0 = result;
  return result;
}

uint64_t sub_1A4575BD4()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E7E8 = result;
  return result;
}

uint64_t sub_1A4575C08()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E798 = result;
  return result;
}

uint64_t sub_1A4575C3C()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E7B8 = result;
  return result;
}

uint64_t sub_1A4575C70()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E7A8 = result;
  return result;
}

uint64_t sub_1A4575CA4()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E768 = result;
  return result;
}

uint64_t sub_1A4575CDC()
{
  uint64_t result;

  result = sub_1A469087C();
  qword_1ED23E780 = result;
  return result;
}

id sub_1A4575D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v29;

  v13 = sub_1A46900B4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = 0;
  if (v15(a3, 1, v13) != 1)
  {
    v16 = (void *)sub_1A4690030();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
  }
  if (v15(a4, 1, v13) == 1)
  {
    v17 = 0;
  }
  else
  {
    v17 = (void *)sub_1A4690030();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a4, v13);
  }
  v18 = sub_1A468FDE4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  v21 = 0;
  if (v20(a6, 1, v18) != 1)
  {
    v21 = (void *)sub_1A468FD30();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a6, v18);
  }
  if (v20(a7, 1, v18) == 1)
  {
    v22 = 0;
  }
  else
  {
    v22 = (void *)sub_1A468FD30();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a7, v18);
  }
  if (v20(a8, 1, v18) == 1)
  {
    v23 = 0;
  }
  else
  {
    v23 = (void *)sub_1A468FD30();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a8, v18);
  }
  v24 = objc_msgSend(v29, sel_initWithRange_startDate_endDate_isAllDay_startComponents_endComponents_frequencyComponents_, a1, a2, v16, v17, a5 & 1, v21, v22, v23);

  return v24;
}

uint64_t sub_1A4575F00()
{
  return swift_deallocObject();
}

uint64_t sub_1A4575F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A45753B8(a1, a2, a3, a4, *(_QWORD **)(v4 + 16));
}

uint64_t sub_1A4575F18()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for REMNLQueryParserUtils()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMNLQueryParserUtils()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1A4575F54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23E800;
  if (!qword_1ED23E800)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x1A85A0000](&unk_1A4695084, v1);
    atomic_store(result, (unint64_t *)&qword_1ED23E800);
  }
  return result;
}

uint64_t sub_1A4575F9C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);

  v3 = sub_1A46900B4();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A45760A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1A45739CC(a1, a2, a3, a4, *(void **)(v4 + 16), v4 + v10, *(_QWORD *)(v4 + v11), *(_QWORD *)(v4 + v12), *(_QWORD *)(v4 + v13), *(_QWORD *)(v4 + v14), *(char **)(v4 + v15), *(_QWORD *)(v4 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD **)(v4+ ((((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A457618C()
{
  return swift_deallocObject();
}

uint64_t sub_1A457619C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A45761E8(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1A462ECA4(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1A457B1A8(v5);
  *a1 = v2;
  return result;
}

uint64_t when<A>(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  v6 = sub_1A4690C78();
  type metadata accessor for Promise(0, v6, v7, v8);
  v10[2] = a3;
  v10[3] = a2;
  v10[4] = a1;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A45768A4, (uint64_t)v10);
}

uint64_t sub_1A45762BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  void (*v31)(void);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  NSObject *v35;
  id v36;
  _QWORD *v37;
  id v38;
  void (*v39)(void);
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  _QWORD aBlock[6];
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v63 = a6;
  v51 = a4;
  v50 = a3;
  v11 = sub_1A46905A0();
  v56 = *(_QWORD *)(v11 - 8);
  v57 = v11;
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A46905DC();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a7;
  v15[3] = a1;
  v49 = v15;
  v15[4] = a2;
  swift_retain();
  v16 = dispatch_group_create();
  v17 = swift_allocObject();
  swift_getTupleTypeMetadata2();
  v18 = sub_1A46906CC();
  v62 = v17;
  *(_QWORD *)(v17 + 16) = v18;
  v60 = swift_allocObject();
  v61 = a7;
  *(_QWORD *)(v60 + 16) = MEMORY[0x1E0DEE9D8];
  aBlock[0] = a5;
  type metadata accessor for Promise(255, a7, v19, v20);
  v21 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v21);
  sub_1A4690AA4();
  v67 = v65;
  sub_1A469168C();
  sub_1A4691668();
  v59 = sub_1A4691680();
  sub_1A4691674();
  if (v66)
  {
    v58 = MEMORY[0x1E0DEE9C0] + 8;
    v22 = v65;
    do
    {
      dispatch_group_enter(v16);
      v23 = (_QWORD *)swift_allocObject();
      v23[2] = v61;
      v23[3] = v62;
      v23[4] = v22;
      swift_retain();
      v24 = sub_1A444B8B0(v63, (uint64_t)sub_1A457BF6C, (uint64_t)v23, v58);
      swift_release();
      v25 = swift_allocObject();
      *(_QWORD *)(v25 + 16) = v60;
      *(_QWORD *)(v25 + 24) = v22;
      v26 = qword_1ED243C50;
      swift_retain();
      if (v26 != -1)
        swift_once();
      v27 = *(_QWORD *)(*(_QWORD *)(v24 + 16) + 16);
      v28 = (id)qword_1ED2431A0;
      os_unfair_lock_lock_with_options();
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = v28;
      *(_QWORD *)(v29 + 24) = 0;
      *(_BYTE *)(v29 + 32) = 1;
      *(_QWORD *)(v29 + 40) = nullsub_1;
      *(_QWORD *)(v29 + 48) = 0;
      *(_QWORD *)(v29 + 56) = sub_1A457BFAC;
      *(_QWORD *)(v29 + 64) = v25;
      *(_QWORD *)(v29 + 72) = nullsub_1;
      *(_QWORD *)(v29 + 80) = 0;
      v30 = v28;
      swift_retain();
      v31 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v29);
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
      v31();
      swift_release();
      swift_release();

      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v16;
      v33 = (void *)qword_1ED2431A0;
      v34 = *(_QWORD *)(*(_QWORD *)(v24 + 16) + 16);
      v35 = v16;
      v36 = v33;
      os_unfair_lock_lock_with_options();
      v37 = (_QWORD *)swift_allocObject();
      v37[2] = v36;
      v37[3] = sub_1A457BFB8;
      v37[4] = v32;
      v38 = v36;
      swift_retain();
      v39 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v37);
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v34 + 16));
      v39();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      sub_1A4691674();
      v22 = v65;
    }
    while (v66);
  }
  swift_bridgeObjectRelease();
  v40 = (_QWORD *)swift_allocObject();
  v41 = v60;
  v40[2] = v61;
  v40[3] = v41;
  v42 = v51;
  v40[4] = v50;
  v40[5] = v42;
  v40[6] = v62;
  v40[7] = sub_1A457BEA4;
  v40[8] = v49;
  aBlock[4] = sub_1A457BF34;
  aBlock[5] = v40;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_180;
  v43 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v44 = v52;
  sub_1A46905C4();
  v65 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  v45 = v55;
  v46 = v57;
  sub_1A46912A8();
  sub_1A4691038();
  _Block_release(v43);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v46);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v54);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A45768A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A45762BC(a1, a2, a3, a4, *(_QWORD *)(v4 + 24), *(void **)(v4 + 32), *(_QWORD *)(v4 + 16));
}

uint64_t sub_1A45768B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v10 = (char *)&v12 + *(int *)(v8 + 48) - v9;
  *(uint64_t *)((char *)&v12 - v9) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v10, a1, a4);
  swift_beginAccess();
  sub_1A4690C78();
  sub_1A4690C3C();
  return swift_endAccess();
}

uint64_t sub_1A45769A8(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;

  v6 = (_QWORD *)(a2 + 16);
  swift_beginAccess();
  v7 = *(_QWORD **)(a2 + 16);
  v8 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_1A443A068(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v11 = v7[2];
  v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    v7 = sub_1A443A068((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v11 + 1;
  v12 = &v7[2 * v11];
  v12[4] = a3;
  v12[5] = a1;
  return swift_endAccess();
}

void sub_1A4576A84(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, char *a7)
{
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  _QWORD v28[5];
  _QWORD *v29;

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    v29 = *(_QWORD **)(a1 + 16);
    swift_bridgeObjectRetain_n();
    sub_1A45761E8(&v29);
    swift_bridgeObjectRelease();
    v12 = v29;
    v13 = v29[2];
    if (v13)
    {
      v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1A445AAE0(0, v13, 0);
      v14 = 5;
      v15 = v29;
      do
      {
        v16 = (void *)v12[v14];
        v17 = v16;
        v29 = v15;
        v19 = v15[2];
        v18 = v15[3];
        if (v19 >= v18 >> 1)
        {
          sub_1A445AAE0(v18 > 1, v19 + 1, 1);
          v15 = v29;
        }
        v15[2] = v19 + 1;
        v15[v19 + 4] = v16;
        v14 += 2;
        --v13;
      }
      while (v13);
      swift_release();
    }
    else
    {
      swift_release();
      v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    sub_1A457BBD4();
    v26 = (void *)swift_allocError();
    *v27 = v15;
    a2();

  }
  else
  {
    swift_beginAccess();
    MEMORY[0x1E0C80A78](*(_QWORD *)(a4 + 16));
    swift_bridgeObjectRetain();
    swift_getTupleTypeMetadata2();
    v20 = sub_1A4690C78();
    MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v20);
    v21 = sub_1A4690AEC();
    v22 = swift_bridgeObjectRelease();
    v28[4] = v21;
    MEMORY[0x1E0C80A78](v22);
    v28[2] = a7;
    v23 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v20);
    v25 = sub_1A449F0A4((void (*)(char *, char *))sub_1A457C018, (uint64_t)v28, v20, a7, MEMORY[0x1E0DEDCE8], v23, MEMORY[0x1E0DEDD18], v24);
    swift_bridgeObjectRelease();
    a5(v25);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A4576D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(int *)(MEMORY[0x1E0C80A78](TupleTypeMetadata2) + 48);
  v9 = (char *)&v13 + v8 - v7;
  v10 = a1 + v8;
  v11 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, v10, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
}

uint64_t when2<A, B>(on:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  type metadata accessor for Promise(0, TupleTypeMetadata2, v7, v8);
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = a3;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A45775D4, (uint64_t)v10);
}

uint64_t sub_1A4576E94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, _QWORD *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  void (*v33)(void);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  id v38;
  _QWORD *v39;
  id v40;
  void (*v41)(void);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  void (*v50)(void);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  NSObject *v54;
  id v55;
  _QWORD *v56;
  id v57;
  void (*v58)(void);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD v68[2];
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD aBlock[7];

  v72 = a3;
  v73 = a4;
  v10 = *a5;
  v70 = a7;
  v11 = *a7;
  v12 = sub_1A46905A0();
  v78 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A46905DC();
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  MEMORY[0x1E0C80A78](v14);
  v74 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v17 = *(_QWORD *)(v10 + 80);
  v16[2] = v17;
  v18 = *(_QWORD *)(v11 + 80);
  v16[3] = v18;
  v16[4] = a1;
  v71 = v16;
  v16[5] = a2;
  swift_retain();
  v19 = dispatch_group_create();
  sub_1A46911A0();
  sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v21 = swift_allocBox();
  v23 = v22 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v22, 1, 1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v23, 1, 1, v18);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  dispatch_group_enter(v19);
  v25 = (_QWORD *)swift_allocObject();
  v80 = v18;
  v81 = v17;
  v25[2] = v17;
  v25[3] = v18;
  v25[4] = v21;
  v82 = v21;
  swift_retain();
  v26 = a6;
  v69 = MEMORY[0x1E0DEE9C0] + 8;
  v27 = sub_1A444B8B0(a6, (uint64_t)sub_1A457BDF8, (uint64_t)v25, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  v28 = qword_1ED243C50;
  swift_retain();
  if (v28 != -1)
    swift_once();
  v29 = *(_QWORD *)(*(_QWORD *)(v27 + 16) + 16);
  v30 = (id)qword_1ED2431A0;
  os_unfair_lock_lock_with_options();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = 0;
  *(_BYTE *)(v31 + 32) = 1;
  *(_QWORD *)(v31 + 40) = nullsub_1;
  *(_QWORD *)(v31 + 48) = 0;
  *(_QWORD *)(v31 + 56) = sub_1A457A740;
  *(_QWORD *)(v31 + 64) = v24;
  *(_QWORD *)(v31 + 72) = nullsub_1;
  *(_QWORD *)(v31 + 80) = 0;
  v32 = v30;
  swift_retain();
  v33 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v31);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  v33();
  swift_release();
  swift_release();

  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v19;
  v35 = (void *)qword_1ED2431A0;
  v36 = *(_QWORD *)(*(_QWORD *)(v27 + 16) + 16);
  v37 = v19;
  v38 = v35;
  os_unfair_lock_lock_with_options();
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v38;
  v39[3] = sub_1A457C040;
  v39[4] = v34;
  v40 = v38;
  swift_retain();
  v41 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v39);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
  v41();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v37);
  v42 = (_QWORD *)swift_allocObject();
  v43 = v80;
  v42[2] = v81;
  v42[3] = v43;
  v42[4] = v82;
  swift_retain();
  v68[1] = v26;
  v44 = sub_1A444B8B0(v26, (uint64_t)sub_1A457BE1C, (uint64_t)v42, v69);
  swift_release();
  v45 = (void *)qword_1ED2431A0;
  v46 = *(_QWORD *)(*(_QWORD *)(v44 + 16) + 16);
  swift_retain();
  v47 = v45;
  os_unfair_lock_lock_with_options();
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v47;
  *(_QWORD *)(v48 + 24) = 0;
  *(_BYTE *)(v48 + 32) = 1;
  *(_QWORD *)(v48 + 40) = nullsub_1;
  *(_QWORD *)(v48 + 48) = 0;
  *(_QWORD *)(v48 + 56) = sub_1A457BB18;
  *(_QWORD *)(v48 + 64) = v24;
  *(_QWORD *)(v48 + 72) = nullsub_1;
  *(_QWORD *)(v48 + 80) = 0;
  v49 = v47;
  swift_retain();
  v50 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v48);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 16));
  v50();
  swift_release();
  swift_release();

  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v37;
  v52 = (void *)qword_1ED2431A0;
  v53 = *(_QWORD *)(*(_QWORD *)(v44 + 16) + 16);
  v54 = v37;
  v55 = v52;
  os_unfair_lock_lock_with_options();
  v56 = (_QWORD *)swift_allocObject();
  v56[2] = v55;
  v56[3] = sub_1A457C040;
  v56[4] = v51;
  v57 = v55;
  swift_retain();
  v58 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v56);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 16));
  v58();
  swift_release();
  swift_release();
  swift_release();

  v59 = (_QWORD *)swift_allocObject();
  v60 = v82;
  v61 = v80;
  v59[2] = v81;
  v59[3] = v61;
  v59[4] = v60;
  v59[5] = sub_1A457BDEC;
  v59[6] = v71;
  v59[7] = v24;
  v62 = v73;
  v59[8] = v72;
  v59[9] = v62;
  aBlock[4] = sub_1A457BE80;
  aBlock[5] = v59;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_165;
  v63 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v64 = v74;
  sub_1A46905C4();
  v83 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  v65 = v77;
  v66 = v79;
  sub_1A46912A8();
  sub_1A4691038();
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v64, v76);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A45775D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A4576E94(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD **)(v4 + 32));
}

uint64_t sub_1A45775E0(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))((char *)&v16 - v13, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(&v14[*(int *)(TupleTypeMetadata2 + 48)], a2, a6);
  a3(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, TupleTypeMetadata2);
}

uint64_t sub_1A45776C8(uint64_t a1, void (*a2)(char *, char *), uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata2;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  id v41;
  _QWORD *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *);
  void (*v61)(char *, uint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(void);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v68 = a5;
  v69 = a7;
  v67 = a6;
  v71 = a4;
  v59 = a3;
  v60 = a2;
  v63 = *(_QWORD *)(a8 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v58 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A46911A0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v62 = (char *)&v56 - v15;
  v64 = a8;
  v16 = sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v66 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v18 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v56 - v21;
  v23 = swift_projectBox();
  swift_beginAccess();
  v24 = *(int *)(TupleTypeMetadata2 + 48);
  v25 = &v22[v24];
  v26 = v23 + v24;
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v61(v22, v23, v13);
  v27 = *(_QWORD *)(v16 - 8);
  v28 = v26;
  v29 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, v28, v16);
  v65 = TupleTypeMetadata2;
  v30 = *(int *)(TupleTypeMetadata2 + 48);
  v31 = v69;
  v32 = &v20[v30];
  v56 = v14;
  v33 = v22;
  v34 = v70;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v33, v13);
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v32, v25, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v20, 1, v31) != 1)
  {
    v35 = v62;
    v61(v62, (uint64_t)v20, v13);
    v37 = v63;
    v36 = v64;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v32, 1, v64) != 1)
    {
      v53 = v57;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v57, v35, v31);
      v54 = v58;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v58, v32, v36);
      v60(v53, v54);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v54, v36);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v53, v31);
      v45 = v56;
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v20, v13);
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v31);
  }
  swift_beginAccess();
  v38 = *(void **)(v29 + 16);
  v39 = v29;
  if (v38)
  {
    v40 = v38;
    v41 = v38;
    v42 = sub_1A443A174(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v44 = v42[2];
    v43 = v42[3];
    if (v44 >= v43 >> 1)
      v42 = sub_1A443A174((_QWORD *)(v43 > 1), v44 + 1, 1, v42);
    v45 = v66;
    v42[2] = v44 + 1;
    v42[v44 + 4] = v38;

  }
  else
  {
    v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v45 = v66;
  }
  swift_beginAccess();
  v46 = *(void **)(v39 + 24);
  if (v46)
  {
    v47 = v46;
    v48 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v42 = sub_1A443A174(0, v42[2] + 1, 1, v42);
    v50 = v42[2];
    v49 = v42[3];
    if (v50 >= v49 >> 1)
      v42 = sub_1A443A174((_QWORD *)(v49 > 1), v50 + 1, 1, v42);
    v42[2] = v50 + 1;
    v42[v50 + 4] = v46;

  }
  sub_1A457BBD4();
  v51 = (void *)swift_allocError();
  *v52 = v42;
  v68();

  v13 = v65;
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v20, v13);
}

uint64_t whenSome<A, B>(on:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  sub_1A46911A0();
  sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  type metadata accessor for Promise(0, TupleTypeMetadata2, v7, v8);
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = a3;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A4578340, (uint64_t)v10);
}

uint64_t sub_1A4577C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, _QWORD *a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  void (*v33)(void);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  id v38;
  _QWORD *v39;
  id v40;
  void (*v41)(void);
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  void (*v50)(void);
  uint64_t v51;
  void *v52;
  uint64_t v53;
  NSObject *v54;
  id v55;
  _QWORD *v56;
  id v57;
  void (*v58)(void);
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  _QWORD v68[2];
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD aBlock[7];

  v72 = a3;
  v73 = a4;
  v10 = *a5;
  v70 = a7;
  v11 = *a7;
  v12 = sub_1A46905A0();
  v78 = *(_QWORD *)(v12 - 8);
  v79 = v12;
  MEMORY[0x1E0C80A78](v12);
  v77 = (char *)v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A46905DC();
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  MEMORY[0x1E0C80A78](v14);
  v74 = (char *)v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v17 = *(_QWORD *)(v10 + 80);
  v16[2] = v17;
  v18 = *(_QWORD *)(v11 + 80);
  v16[3] = v18;
  v16[4] = a1;
  v71 = v16;
  v16[5] = a2;
  swift_retain();
  v19 = dispatch_group_create();
  sub_1A46911A0();
  sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v21 = swift_allocBox();
  v23 = v22 + *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v22, 1, 1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v23, 1, 1, v18);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  dispatch_group_enter(v19);
  v25 = (_QWORD *)swift_allocObject();
  v80 = v18;
  v81 = v17;
  v25[2] = v17;
  v25[3] = v18;
  v25[4] = v21;
  v82 = v21;
  swift_retain();
  v26 = a6;
  v69 = MEMORY[0x1E0DEE9C0] + 8;
  v27 = sub_1A444B8B0(a6, (uint64_t)sub_1A457C0B0, (uint64_t)v25, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  v28 = qword_1ED243C50;
  swift_retain();
  if (v28 != -1)
    swift_once();
  v29 = *(_QWORD *)(*(_QWORD *)(v27 + 16) + 16);
  v30 = (id)qword_1ED2431A0;
  os_unfair_lock_lock_with_options();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = 0;
  *(_BYTE *)(v31 + 32) = 1;
  *(_QWORD *)(v31 + 40) = nullsub_1;
  *(_QWORD *)(v31 + 48) = 0;
  *(_QWORD *)(v31 + 56) = sub_1A457A740;
  *(_QWORD *)(v31 + 64) = v24;
  *(_QWORD *)(v31 + 72) = nullsub_1;
  *(_QWORD *)(v31 + 80) = 0;
  v32 = v30;
  swift_retain();
  v33 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v31);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  v33();
  swift_release();
  swift_release();

  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v19;
  v35 = (void *)qword_1ED2431A0;
  v36 = *(_QWORD *)(*(_QWORD *)(v27 + 16) + 16);
  v37 = v19;
  v38 = v35;
  os_unfair_lock_lock_with_options();
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = v38;
  v39[3] = sub_1A457C040;
  v39[4] = v34;
  v40 = v38;
  swift_retain();
  v41 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v39);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v36 + 16));
  v41();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v37);
  v42 = (_QWORD *)swift_allocObject();
  v43 = v80;
  v42[2] = v81;
  v42[3] = v43;
  v42[4] = v82;
  swift_retain();
  v68[1] = v26;
  v44 = sub_1A444B8B0(v26, (uint64_t)sub_1A457C0C4, (uint64_t)v42, v69);
  swift_release();
  v45 = (void *)qword_1ED2431A0;
  v46 = *(_QWORD *)(*(_QWORD *)(v44 + 16) + 16);
  swift_retain();
  v47 = v45;
  os_unfair_lock_lock_with_options();
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = v47;
  *(_QWORD *)(v48 + 24) = 0;
  *(_BYTE *)(v48 + 32) = 1;
  *(_QWORD *)(v48 + 40) = nullsub_1;
  *(_QWORD *)(v48 + 48) = 0;
  *(_QWORD *)(v48 + 56) = sub_1A457BB18;
  *(_QWORD *)(v48 + 64) = v24;
  *(_QWORD *)(v48 + 72) = nullsub_1;
  *(_QWORD *)(v48 + 80) = 0;
  v49 = v47;
  swift_retain();
  v50 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v48);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v46 + 16));
  v50();
  swift_release();
  swift_release();

  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v37;
  v52 = (void *)qword_1ED2431A0;
  v53 = *(_QWORD *)(*(_QWORD *)(v44 + 16) + 16);
  v54 = v37;
  v55 = v52;
  os_unfair_lock_lock_with_options();
  v56 = (_QWORD *)swift_allocObject();
  v56[2] = v55;
  v56[3] = sub_1A457C040;
  v56[4] = v51;
  v57 = v55;
  swift_retain();
  v58 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v56);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 16));
  v58();
  swift_release();
  swift_release();
  swift_release();

  v59 = (_QWORD *)swift_allocObject();
  v60 = v82;
  v61 = v80;
  v59[2] = v81;
  v59[3] = v61;
  v59[4] = v60;
  v59[5] = sub_1A457BD28;
  v59[6] = v71;
  v59[7] = v24;
  v62 = v73;
  v59[8] = v72;
  v59[9] = v62;
  aBlock[4] = sub_1A457BDBC;
  aBlock[5] = v59;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_127;
  v63 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v64 = v74;
  sub_1A46905C4();
  v83 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  v65 = v77;
  v66 = v79;
  sub_1A46912A8();
  sub_1A4691038();
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v78 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v64, v76);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A4578340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A4577C00(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(_QWORD **)(v4 + 32));
}

uint64_t sub_1A457834C(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v6 = sub_1A46911A0();
  v7 = sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))((char *)&v13 - v10, a1, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], a2, v7);
  a3(v11);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, TupleTypeMetadata2);
}

uint64_t sub_1A457844C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_1A46911A0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - v7;
  sub_1A46911A0();
  v9 = swift_projectBox();
  v10 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1A4578544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_1A46911A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - v8;
  sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = swift_projectBox();
  v12 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a1, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11 + *(int *)(TupleTypeMetadata2 + 48), v9, v6);
}

void sub_1A4578668(uint64_t a1, void (*a2)(char *, char *), uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  int v25;
  uint64_t v26;
  void **v27;
  void *v28;
  id v29;
  id v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void *v37;
  id v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  _QWORD *v43;
  _QWORD v44[2];
  void (*v45)(void);
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  void (*v49)(char *, char *);

  v44[1] = a6;
  v45 = a5;
  v44[0] = a4;
  v48 = a3;
  v49 = a2;
  v10 = sub_1A46911A0();
  v46 = a8;
  v11 = sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)v44 - v14;
  v16 = *(_QWORD *)(v11 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v19 = (char *)v44 - v18;
  v20 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v17);
  v22 = (char *)v44 - v21;
  v23 = swift_projectBox();
  swift_beginAccess();
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v47(v22, v23, v10);
  LODWORD(a7) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 48))(v22, 1, a7);
  v24 = *(void (**)(char *, uint64_t))(v20 + 8);
  v24(v22, v10);
  if ((_DWORD)a7 == 1
    && (swift_beginAccess(),
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v23 + *(int *)(TupleTypeMetadata2 + 48), v11),
        v25 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v19, 1),
        (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v11),
        v25 == 1))
  {
    v26 = v44[0];
    v27 = (void **)(v44[0] + 16);
    swift_beginAccess();
    v28 = *v27;
    if (*v27)
    {
      v29 = v28;
      v30 = v28;
      v31 = sub_1A443A174(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v33 = v31[2];
      v32 = v31[3];
      if (v33 >= v32 >> 1)
        v31 = sub_1A443A174((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
      v31[2] = v33 + 1;
      v31[v33 + 4] = v28;

    }
    else
    {
      v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_beginAccess();
    v37 = *(void **)(v26 + 24);
    if (v37)
    {
      v38 = v37;
      v39 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1A443A174(0, v31[2] + 1, 1, v31);
      v41 = v31[2];
      v40 = v31[3];
      if (v41 >= v40 >> 1)
        v31 = sub_1A443A174((_QWORD *)(v40 > 1), v41 + 1, 1, v31);
      v31[2] = v41 + 1;
      v31[v41 + 4] = v37;

    }
    sub_1A457BBD4();
    v42 = (void *)swift_allocError();
    *v43 = v31;
    v45();

  }
  else
  {
    swift_beginAccess();
    v34 = *(int *)(TupleTypeMetadata2 + 48);
    v35 = &v15[v34];
    v36 = v23 + v34;
    v47(v15, v23, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v35, v36, v11);
    v49(v15, v35);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v11);
    v24(v15, v10);
  }
}

uint64_t whenFirst<A, B>(on:_:maybe:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];

  sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  type metadata accessor for Promise(0, TupleTypeMetadata2, v7, v8);
  v10[2] = a2;
  v10[3] = a1;
  v10[4] = a3;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A4579248, (uint64_t)v10);
}

uint64_t sub_1A4578ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, NSObject *a7)
{
  uint64_t v10;
  NSObject v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  void (*v33)(void);
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  id v39;
  _QWORD *v40;
  id v41;
  void (*v42)(void);
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  void (*v52)(void);
  uint64_t v53;
  void *v54;
  uint64_t v55;
  id v56;
  _QWORD *v57;
  id v58;
  void (*v59)(void);
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD aBlock[7];

  v77 = a4;
  v75 = a3;
  v10 = *a5;
  v72 = a7;
  v11.isa = a7->isa;
  v12 = sub_1A46905A0();
  v82 = *(_QWORD *)(v12 - 8);
  v83 = v12;
  MEMORY[0x1E0C80A78](v12);
  v81 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A46905DC();
  v79 = *(_QWORD *)(v14 - 8);
  v80 = v14;
  MEMORY[0x1E0C80A78](v14);
  v78 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v17 = *(_QWORD *)(v10 + 80);
  v16[2] = v17;
  v18 = *((_QWORD *)v11.isa + 10);
  v16[3] = v18;
  v16[4] = a1;
  v74 = v16;
  v16[5] = a2;
  swift_retain();
  v19 = dispatch_group_create();
  sub_1A46911A0();
  v20 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v21, 1, 1, v17);
  sub_1A46911A0();
  v87 = swift_allocBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v22, 1, 1, v18);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 0;
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = 0;
  dispatch_group_enter(v19);
  v24 = (_QWORD *)swift_allocObject();
  v85 = v17;
  v86 = v18;
  v24[2] = v17;
  v24[3] = v18;
  v24[4] = v20;
  v76 = v20;
  v25 = v23;
  swift_retain();
  v26 = MEMORY[0x1E0DEE9C0] + 8;
  v84 = a6;
  v27 = sub_1A444B8B0(a6, (uint64_t)sub_1A457BC48, (uint64_t)v24, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  v28 = qword_1ED243C50;
  swift_retain();
  if (v28 != -1)
    swift_once();
  v29 = *(_QWORD *)(*(_QWORD *)(v27 + 16) + 16);
  v30 = (id)qword_1ED2431A0;
  os_unfair_lock_lock_with_options();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = v30;
  *(_QWORD *)(v31 + 24) = 0;
  *(_BYTE *)(v31 + 32) = 1;
  *(_QWORD *)(v31 + 40) = nullsub_1;
  *(_QWORD *)(v31 + 48) = 0;
  *(_QWORD *)(v31 + 56) = sub_1A457BC64;
  *(_QWORD *)(v31 + 64) = v25;
  *(_QWORD *)(v31 + 72) = nullsub_1;
  *(_QWORD *)(v31 + 80) = 0;
  v32 = v30;
  swift_retain();
  v33 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v31);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  v33();
  swift_release();
  swift_release();

  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v19;
  v35 = (void *)qword_1ED2431A0;
  v36 = *(_QWORD *)(v27 + 16);
  v71 = v25;
  v37 = *(_QWORD *)(v36 + 16);
  v38 = v19;
  v39 = v35;
  os_unfair_lock_lock_with_options();
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = v39;
  v40[3] = sub_1A457C040;
  v40[4] = v34;
  v41 = v39;
  swift_retain();
  v42 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v40);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
  v42();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v38);
  v43 = (_QWORD *)swift_allocObject();
  v44 = v86;
  v43[2] = v85;
  v43[3] = v44;
  v43[4] = v87;
  swift_retain();
  v45 = sub_1A444B8B0(v84, (uint64_t)sub_1A457BC84, (uint64_t)v43, v26);
  swift_release();
  v46 = (void *)qword_1ED2431A0;
  v47 = *(_QWORD *)(*(_QWORD *)(v45 + 16) + 16);
  v48 = v73;
  swift_retain();
  v49 = v46;
  os_unfair_lock_lock_with_options();
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v49;
  *(_QWORD *)(v50 + 24) = 0;
  *(_BYTE *)(v50 + 32) = 1;
  *(_QWORD *)(v50 + 40) = nullsub_1;
  *(_QWORD *)(v50 + 48) = 0;
  *(_QWORD *)(v50 + 56) = sub_1A457BC64;
  *(_QWORD *)(v50 + 64) = v48;
  *(_QWORD *)(v50 + 72) = nullsub_1;
  *(_QWORD *)(v50 + 80) = 0;
  v51 = v49;
  swift_retain();
  v52 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v50);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v47 + 16));
  v52();
  swift_release();
  swift_release();

  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = v38;
  v54 = (void *)qword_1ED2431A0;
  v55 = *(_QWORD *)(*(_QWORD *)(v45 + 16) + 16);
  v72 = v38;
  v56 = v54;
  os_unfair_lock_lock_with_options();
  v57 = (_QWORD *)swift_allocObject();
  v57[2] = v56;
  v57[3] = sub_1A457C040;
  v57[4] = v53;
  v58 = v56;
  swift_retain();
  v59 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v57);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
  v59();
  swift_release();
  swift_release();
  swift_release();

  v60 = (_QWORD *)swift_allocObject();
  v61 = v86;
  v62 = v87;
  v60[2] = v85;
  v60[3] = v61;
  v63 = v77;
  v60[4] = v76;
  v60[5] = sub_1A457BC18;
  v60[6] = v74;
  v60[7] = v62;
  v60[8] = v71;
  v60[9] = v48;
  v60[10] = v75;
  v60[11] = v63;
  aBlock[4] = sub_1A457BCF4;
  aBlock[5] = v60;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_87;
  v64 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v65 = v78;
  sub_1A46905C4();
  v88 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  v66 = v81;
  v67 = v83;
  sub_1A46912A8();
  v68 = v72;
  sub_1A4691038();
  _Block_release(v64);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v66, v67);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v65, v80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A4579248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A4578ABC(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(NSObject **)(v4 + 32));
}

uint64_t sub_1A4579254(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;

  v9 = sub_1A46911A0();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v13 = (char *)&v15 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))((char *)&v15 - v12, a1, a5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(&v13[*(int *)(TupleTypeMetadata2 + 48)], a2, v9);
  a3(v13);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, TupleTypeMetadata2);
}

uint64_t sub_1A4579344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_1A46911A0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - v7;
  v9 = swift_projectBox();
  v10 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1A457942C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_1A46911A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - v8;
  v10 = swift_projectBox();
  v11 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a1, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
}

id sub_1A4579514(void *a1, uint64_t a2)
{
  void *v4;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;

  return a1;
}

void sub_1A4579564(uint64_t a1, void (*a2)(char *, char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  void *v24;
  id v25;
  id v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  void *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *);
  uint64_t v43;
  void (*v44)(void);

  v43 = a8;
  v44 = a7;
  v38 = a6;
  v39 = a5;
  v41 = a3;
  v42 = a2;
  v40 = sub_1A46911A0();
  v9 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v11 = (char *)&v38 - v10;
  v12 = sub_1A46911A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - v15;
  v17 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_projectBox();
  v21 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v20, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a9) == 1)
  {
    v22 = v39;
    v23 = (void **)(v38 + 16);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    swift_beginAccess();
    v24 = *(void **)(v22 + 16);
    if (v24)
    {
      v25 = v24;
      v26 = v24;
      v27 = sub_1A443A174(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
        v27 = sub_1A443A174((_QWORD *)(v28 > 1), v29 + 1, 1, v27);
      v27[2] = v29 + 1;
      v27[v29 + 4] = v24;

    }
    else
    {
      v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_beginAccess();
    v31 = *v23;
    if (*v23)
    {
      v32 = v31;
      v33 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1A443A174(0, v27[2] + 1, 1, v27);
      v35 = v27[2];
      v34 = v27[3];
      if (v35 >= v34 >> 1)
        v27 = sub_1A443A174((_QWORD *)(v34 > 1), v35 + 1, 1, v27);
      v27[2] = v35 + 1;
      v27[v35 + 4] = v31;

    }
    sub_1A457BBD4();
    v36 = (void *)swift_allocError();
    *v37 = v27;
    v44();

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, a9);
    swift_beginAccess();
    v30 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v21, v40);
    v42(v19, v11);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v30);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, a9);
  }
}

uint64_t when3<A, B, C>(on:_:_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];

  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  type metadata accessor for Promise(0, TupleTypeMetadata3, v9, v10);
  v12[2] = a2;
  v12[3] = a1;
  v12[4] = a3;
  v12[5] = a4;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A457A308, (uint64_t)v12);
}

uint64_t sub_1A4579934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void *a6, NSObject *a7, _QWORD *a8)
{
  uint64_t v11;
  NSObject v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t TupleTypeMetadata3;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  void (*v37)(void);
  uint64_t v38;
  void *v39;
  uint64_t v40;
  NSObject *v41;
  id v42;
  _QWORD *v43;
  id v44;
  void (*v45)(void);
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  void (*v55)(void);
  uint64_t v56;
  void *v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  NSObject *v61;
  id v62;
  _QWORD *v63;
  id v64;
  void (*v65)(void);
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  id v73;
  void (*v74)(void);
  uint64_t v75;
  NSObject *v76;
  void *v77;
  uint64_t v78;
  NSObject *v79;
  id v80;
  _QWORD *v81;
  id v82;
  void (*v83)(void);
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  _QWORD v95[2];
  NSObject *v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD aBlock[7];

  v99 = a3;
  v100 = a4;
  v11 = *a5;
  v96 = a7;
  v12.isa = a7->isa;
  v97 = a8;
  v13 = *a8;
  v14 = sub_1A46905A0();
  v105 = *(_QWORD *)(v14 - 8);
  v106 = v14;
  MEMORY[0x1E0C80A78](v14);
  v104 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A46905DC();
  v102 = *(_QWORD *)(v16 - 8);
  v103 = v16;
  MEMORY[0x1E0C80A78](v16);
  v101 = (char *)v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)swift_allocObject();
  v19 = *(_QWORD *)(v11 + 80);
  v18[2] = v19;
  v20 = *((_QWORD *)v12.isa + 10);
  v18[3] = v20;
  v21 = *(_QWORD *)(v13 + 80);
  v18[4] = v21;
  v18[5] = a1;
  v98 = v18;
  v18[6] = a2;
  swift_retain();
  v22 = dispatch_group_create();
  sub_1A46911A0();
  sub_1A46911A0();
  sub_1A46911A0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v24 = swift_allocBox();
  v26 = v25 + *(int *)(TupleTypeMetadata3 + 48);
  v27 = v25 + *(int *)(TupleTypeMetadata3 + 64);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v25, 1, 1, v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v26, 1, 1, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v27, 1, 1, v21);
  v28 = (_QWORD *)swift_allocObject();
  v28[3] = 0;
  v28[4] = 0;
  v28[2] = 0;
  dispatch_group_enter(v22);
  v29 = (_QWORD *)swift_allocObject();
  v109 = v20;
  v110 = v19;
  v29[2] = v19;
  v29[3] = v20;
  v108 = v21;
  v29[4] = v21;
  v29[5] = v24;
  v111 = v24;
  swift_retain();
  v30 = a6;
  v107 = MEMORY[0x1E0DEE9C0] + 8;
  v31 = sub_1A444B8B0(a6, (uint64_t)sub_1A457A6C8, (uint64_t)v29, MEMORY[0x1E0DEE9C0] + 8);
  swift_release();
  v32 = qword_1ED243C50;
  swift_retain();
  if (v32 != -1)
    swift_once();
  v33 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + 16);
  v34 = (id)qword_1ED2431A0;
  os_unfair_lock_lock_with_options();
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v34;
  *(_QWORD *)(v35 + 24) = 0;
  *(_BYTE *)(v35 + 32) = 1;
  *(_QWORD *)(v35 + 40) = nullsub_1;
  *(_QWORD *)(v35 + 48) = 0;
  *(_QWORD *)(v35 + 56) = sub_1A457A740;
  *(_QWORD *)(v35 + 64) = v28;
  *(_QWORD *)(v35 + 72) = nullsub_1;
  *(_QWORD *)(v35 + 80) = 0;
  v36 = v34;
  swift_retain();
  v37 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v35);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
  v37();
  swift_release();
  swift_release();

  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = v22;
  v39 = (void *)qword_1ED2431A0;
  v40 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + 16);
  v41 = v22;
  v42 = v39;
  os_unfair_lock_lock_with_options();
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = v42;
  v43[3] = sub_1A457C040;
  v43[4] = v38;
  v44 = v42;
  swift_retain();
  v45 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v43);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v40 + 16));
  v45();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v41);
  v46 = (_QWORD *)swift_allocObject();
  v47 = v109;
  v46[2] = v110;
  v46[3] = v47;
  v46[4] = v108;
  v46[5] = v111;
  swift_retain();
  v48 = sub_1A444B8B0(v30, (uint64_t)sub_1A457BAFC, (uint64_t)v46, v107);
  swift_release();
  v49 = (void *)qword_1ED2431A0;
  v50 = *(_QWORD *)(v48 + 16);
  v95[0] = v48;
  v51 = *(_QWORD *)(v50 + 16);
  swift_retain();
  v52 = v49;
  os_unfair_lock_lock_with_options();
  v53 = swift_allocObject();
  *(_QWORD *)(v53 + 16) = v52;
  *(_QWORD *)(v53 + 24) = 0;
  *(_BYTE *)(v53 + 32) = 1;
  *(_QWORD *)(v53 + 40) = nullsub_1;
  *(_QWORD *)(v53 + 48) = 0;
  *(_QWORD *)(v53 + 56) = sub_1A457BB18;
  *(_QWORD *)(v53 + 64) = v28;
  *(_QWORD *)(v53 + 72) = nullsub_1;
  *(_QWORD *)(v53 + 80) = 0;
  v54 = v52;
  swift_retain();
  v55 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v53);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v51 + 16));
  v55();
  swift_release();
  swift_release();

  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 16) = v41;
  v57 = (void *)qword_1ED2431A0;
  v58 = *(_QWORD *)(v48 + 16);
  v59 = v30;
  v95[1] = v30;
  v60 = *(_QWORD *)(v58 + 16);
  v61 = v41;
  v96 = v61;
  v62 = v57;
  os_unfair_lock_lock_with_options();
  v63 = (_QWORD *)swift_allocObject();
  v63[2] = v62;
  v63[3] = sub_1A457C040;
  v63[4] = v56;
  v64 = v62;
  swift_retain();
  v65 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v63);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v60 + 16));
  v65();
  swift_release();
  swift_release();
  swift_release();

  dispatch_group_enter(v61);
  v66 = (_QWORD *)swift_allocObject();
  v67 = v109;
  v66[2] = v110;
  v66[3] = v67;
  v66[4] = v108;
  v66[5] = v111;
  swift_retain();
  v68 = sub_1A444B8B0(v59, (uint64_t)sub_1A457BB38, (uint64_t)v66, v107);
  swift_release();
  v69 = (void *)qword_1ED2431A0;
  v70 = *(_QWORD *)(*(_QWORD *)(v68 + 16) + 16);
  swift_retain();
  v71 = v69;
  os_unfair_lock_lock_with_options();
  v72 = swift_allocObject();
  *(_QWORD *)(v72 + 16) = v71;
  *(_QWORD *)(v72 + 24) = 0;
  *(_BYTE *)(v72 + 32) = 1;
  *(_QWORD *)(v72 + 40) = nullsub_1;
  *(_QWORD *)(v72 + 48) = 0;
  *(_QWORD *)(v72 + 56) = sub_1A457BB54;
  *(_QWORD *)(v72 + 64) = v28;
  *(_QWORD *)(v72 + 72) = nullsub_1;
  *(_QWORD *)(v72 + 80) = 0;
  v73 = v71;
  swift_retain();
  v74 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A44525EC, v72);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v70 + 16));
  v74();
  swift_release();
  swift_release();

  v75 = swift_allocObject();
  v76 = v96;
  *(_QWORD *)(v75 + 16) = v96;
  v77 = (void *)qword_1ED2431A0;
  v78 = *(_QWORD *)(*(_QWORD *)(v68 + 16) + 16);
  v79 = v76;
  v80 = v77;
  os_unfair_lock_lock_with_options();
  v81 = (_QWORD *)swift_allocObject();
  v81[2] = v80;
  v81[3] = sub_1A457C040;
  v81[4] = v75;
  v82 = v80;
  swift_retain();
  v83 = (void (*)(void))sub_1A4512D50((uint64_t)sub_1A457BAF8, (uint64_t)v81);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v78 + 16));
  v83();
  swift_release();
  swift_release();
  swift_release();

  v84 = (_QWORD *)swift_allocObject();
  v85 = v111;
  v86 = v109;
  v84[2] = v110;
  v84[3] = v86;
  v84[4] = v108;
  v84[5] = v85;
  v87 = v98;
  v84[6] = sub_1A457A574;
  v84[7] = v87;
  v88 = v99;
  v89 = v100;
  v84[8] = v28;
  v84[9] = v88;
  v84[10] = v89;
  aBlock[4] = sub_1A457BBA0;
  aBlock[5] = v84;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_9;
  v90 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  v91 = v101;
  sub_1A46905C4();
  v112 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  v92 = v104;
  v93 = v106;
  sub_1A46912A8();
  sub_1A4691038();
  _Block_release(v90);

  (*(void (**)(char *, uint64_t))(v105 + 8))(v92, v93);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v91, v103);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1A457A308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A4579934(a1, a2, a3, a4, *(uint64_t **)(v4 + 16), *(void **)(v4 + 24), *(NSObject **)(v4 + 32), *(_QWORD **)(v4 + 40));
}

_QWORD *initializeBufferWithCopyOfBuffer for WhenError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WhenError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WhenError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WhenError(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WhenError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WhenError()
{
  return &type metadata for WhenError;
}

uint64_t sub_1A457A43C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD v20[2];

  v20[1] = a5;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v16 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v18 = (char *)v20 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))((char *)v20 - v17, a1, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(&v18[*(int *)(TupleTypeMetadata3 + 48)], a2, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 16))(&v18[*(int *)(TupleTypeMetadata3 + 64)], a3, a8);
  a4(v18);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, TupleTypeMetadata3);
}

uint64_t sub_1A457A550()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457A574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1A457A43C(a1, a2, a3, *(void (**)(char *))(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1A457A584()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1A457A5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v5 = sub_1A46911A0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - v7;
  sub_1A46911A0();
  sub_1A46911A0();
  v9 = swift_projectBox();
  v10 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v5);
}

uint64_t sub_1A457A6C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A457A5B8(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16));
}

void sub_1A457A6E4(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = a1;
  v5 = a1;

}

void sub_1A457A740(void *a1)
{
  uint64_t v1;

  sub_1A457A6E4(a1, v1);
}

uint64_t sub_1A457A758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t TupleTypeMetadata3;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = sub_1A46911A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - v8;
  sub_1A46911A0();
  sub_1A46911A0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v11 = swift_projectBox();
  v12 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v9, a1, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, a4);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v11 + *(int *)(TupleTypeMetadata3 + 48), v9, v6);
}

void sub_1A457A894(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = a1;
  v5 = a1;

}

uint64_t sub_1A457A8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t TupleTypeMetadata3;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - v9;
  sub_1A46911A0();
  sub_1A46911A0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = swift_projectBox();
  v13 = *(_QWORD *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, a1, a5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, a5);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(v12 + *(int *)(TupleTypeMetadata3 + 64), v10, v7);
}

void sub_1A457AA2C(void *a1, uint64_t a2)
{
  void *v4;
  id v5;

  swift_beginAccess();
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a2 + 32) = a1;
  v5 = a1;

}

uint64_t sub_1A457AA88(uint64_t a1, void (*a2)(char *, char *, char *), uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata3;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  id v57;
  id v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  void *v62;
  id v63;
  id v64;
  unint64_t v65;
  unint64_t v66;
  void *v67;
  id v68;
  id v69;
  unint64_t v70;
  unint64_t v71;
  void *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  void (*v77)(void);
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, char *);
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(void);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;

  v97 = a6;
  v98 = a5;
  v103 = a4;
  v85 = a3;
  v86 = a2;
  v89 = *(_QWORD *)(a9 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v84 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 - 8);
  v101 = v14;
  v102 = v15;
  MEMORY[0x1E0C80A78](v12);
  v82 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v17;
  v18 = sub_1A46911A0();
  v105 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v88 = (char *)&v82 - v19;
  v20 = sub_1A46911A0();
  v104 = *(_QWORD *)(v20 - 8);
  v21 = v104;
  MEMORY[0x1E0C80A78](v20);
  v94 = (char *)&v82 - v22;
  v90 = a9;
  v106 = sub_1A46911A0();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v96 = *(_QWORD *)(TupleTypeMetadata3 - 8);
  v24 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v26 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v82 - v27;
  v29 = swift_projectBox();
  swift_beginAccess();
  v30 = *(int *)(TupleTypeMetadata3 + 48);
  v31 = &v28[v30];
  v32 = *(int *)(TupleTypeMetadata3 + 64);
  v33 = &v28[v32];
  v34 = v29 + v30;
  v99 = v29 + v32;
  v100 = &v28[v32];
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v91(v28, v29, v20);
  v35 = v105;
  v87 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  v87(v31, v34, v18);
  v36 = *(_QWORD *)(v106 - 8);
  (*(void (**)(char *, uint64_t))(v36 + 16))(v33, v99);
  v37 = &v26[*(int *)(TupleTypeMetadata3 + 48)];
  v99 = TupleTypeMetadata3;
  v38 = *(int *)(TupleTypeMetadata3 + 64);
  v39 = v101;
  v40 = &v26[v38];
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v26, v28, v20);
  v41 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  v95 = v37;
  v42 = v18;
  v41(v37, v31, v18);
  v43 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v44 = v102;
  v43(v40, v100, v106);
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  v106 = (uint64_t)v26;
  v46 = v26;
  v47 = v103;
  v48 = v39;
  if (v45(v46, 1, v39) != 1)
  {
    v49 = v94;
    v100 = (char *)v20;
    v91(v94, v106, v20);
    v50 = v92;
    v51 = v93;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v95, 1, v93) != 1)
    {
      v52 = v88;
      v87(v88, (uint64_t)v95, v42);
      v53 = v89;
      v54 = v90;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v40, 1, v90) != 1)
      {
        v77 = *(void (**)(void))(v44 + 32);
        v103 = v42;
        v78 = v82;
        v77();
        v79 = v52;
        v80 = v83;
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v83, v79, v51);
        v81 = v84;
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v84, v40, v54);
        v86(v78, v80, v81);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v81, v54);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v80, v51);
        (*(void (**)(char *, uint64_t))(v44 + 8))(v78, v48);
        (*(void (**)(char *, uint64_t))(v105 + 8))(v95, v103);
        v75 = v104;
        v74 = (uint64_t)v100;
        return (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v106, v74);
      }
      (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v51);
      v49 = v94;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v49, v48);
  }
  swift_beginAccess();
  v55 = *(void **)(v47 + 16);
  v56 = v47;
  if (v55)
  {
    v57 = v55;
    v58 = v55;
    v59 = sub_1A443A174(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v61 = v59[2];
    v60 = v59[3];
    if (v61 >= v60 >> 1)
      v59 = sub_1A443A174((_QWORD *)(v60 > 1), v61 + 1, 1, v59);
    v59[2] = v61 + 1;
    v59[v61 + 4] = v55;

  }
  else
  {
    v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_beginAccess();
  v62 = *(void **)(v56 + 24);
  if (v62)
  {
    v63 = v62;
    v64 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v59 = sub_1A443A174(0, v59[2] + 1, 1, v59);
    v66 = v59[2];
    v65 = v59[3];
    if (v66 >= v65 >> 1)
      v59 = sub_1A443A174((_QWORD *)(v65 > 1), v66 + 1, 1, v59);
    v59[2] = v66 + 1;
    v59[v66 + 4] = v62;

  }
  swift_beginAccess();
  v67 = *(void **)(v56 + 32);
  if (v67)
  {
    v68 = v67;
    v69 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v59 = sub_1A443A174(0, v59[2] + 1, 1, v59);
    v71 = v59[2];
    v70 = v59[3];
    if (v71 >= v70 >> 1)
      v59 = sub_1A443A174((_QWORD *)(v70 > 1), v71 + 1, 1, v59);
    v59[2] = v71 + 1;
    v59[v71 + 4] = v67;

  }
  sub_1A457BBD4();
  v72 = (void *)swift_allocError();
  *v73 = v59;
  v98();

  v74 = v99;
  v75 = v96;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v106, v74);
}

uint64_t sub_1A457B1A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  unint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v85 = 0;
      v86 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(_QWORD *)(v86 + 16 * i);
        v89 = v85;
        do
        {
          if (v88 >= *(_QWORD *)(v86 + v89))
            break;
          if (!v86)
            goto LABEL_140;
          v90 = (_QWORD *)(v86 + v89);
          v91 = *(_QWORD *)(v86 + v89 + 24);
          *(_OWORD *)(v86 + v89 + 16) = *(_OWORD *)(v86 + v89);
          *v90 = v88;
          v90[1] = v91;
          v89 -= 16;
        }
        while (v89 != -16);
        v85 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v92 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v93 = *v101;
        do
        {
          v94 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v93)
            goto LABEL_144;
          v95 = v92;
          v96 = *(_QWORD *)&v92[16 * v94 + 32];
          v97 = *(_QWORD *)&v92[16 * v13 + 24];
          sub_1A457B878((char *)(v93 + 16 * v96), (char *)(v93 + 16 * *(_QWORD *)&v92[16 * v13 + 16]), v93 + 16 * v97, __dst);
          if (v1)
            break;
          if (v97 < v96)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v95 = sub_1A462EBC8((uint64_t)v95);
          if (v94 >= *((_QWORD *)v95 + 2))
            goto LABEL_133;
          v98 = &v95[16 * v94 + 32];
          *(_QWORD *)v98 = v96;
          *((_QWORD *)v98 + 1) = v97;
          v99 = *((_QWORD *)v95 + 2);
          if (v13 > v99)
            goto LABEL_134;
          memmove(&v95[16 * v13 + 16], &v95[16 * v13 + 32], 16 * (v99 - v13));
          v92 = v95;
          *((_QWORD *)v95 + 2) = v99 - 1;
          v13 = v99 - 1;
        }
        while (v99 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7E8);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 32;
  v100 = *a1 - 16;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(_QWORD *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (uint64_t *)(v102 + 16 * v14);
        v19 = v15;
        while (1)
        {
          v21 = *v18;
          v18 += 2;
          v20 = v21;
          if (v15 < v17 == v21 >= v19)
            break;
          ++v10;
          v19 = v20;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v17)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v22 = 16 * v10;
          v23 = v10;
          v24 = v14;
          do
          {
            if (v24 != --v23)
            {
              if (!v11)
                goto LABEL_143;
              v25 = v11 + v22;
              v26 = *(_QWORD *)(v11 + v16);
              v27 = *(_QWORD *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v22 - 16);
              *(_QWORD *)(v25 - 16) = v26;
              *(_QWORD *)(v25 - 8) = v27;
            }
            ++v24;
            v22 -= 16;
            v16 += 16;
          }
          while (v24 < v23);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v28 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v28 >= v3)
      v28 = v3;
    if (v28 < v14)
      break;
    if (v10 != v28)
    {
      v29 = v100 + 16 * v10;
      do
      {
        v30 = *(_QWORD *)(v11 + 16 * v10);
        v31 = v14;
        v32 = v29;
        do
        {
          if (v30 >= *(_QWORD *)v32)
            break;
          if (!v11)
            goto LABEL_141;
          v33 = *(_QWORD *)(v32 + 24);
          *(_OWORD *)(v32 + 16) = *(_OWORD *)v32;
          *(_QWORD *)v32 = v30;
          *(_QWORD *)(v32 + 8) = v33;
          v32 -= 16;
          ++v31;
        }
        while (v10 != v31);
        ++v10;
        v29 += 16;
      }
      while (v10 != v28);
      v10 = v28;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v35 = *((_QWORD *)v12 + 2);
    v34 = *((_QWORD *)v12 + 3);
    v13 = v35 + 1;
    v11 = v106;
    if (v35 >= v34 >> 1)
    {
      v84 = sub_1A462E5B0((char *)(v34 > 1), v35 + 1, 1, v12);
      v11 = v106;
      v12 = v84;
    }
    *((_QWORD *)v12 + 2) = v13;
    v36 = v12 + 32;
    v37 = &v12[16 * v35 + 32];
    *(_QWORD *)v37 = v14;
    *((_QWORD *)v37 + 1) = v10;
    if (v35)
    {
      while (1)
      {
        v38 = v13 - 1;
        if (v13 >= 4)
        {
          v43 = &v36[16 * v13];
          v44 = *((_QWORD *)v43 - 8);
          v45 = *((_QWORD *)v43 - 7);
          v49 = __OFSUB__(v45, v44);
          v46 = v45 - v44;
          if (v49)
            goto LABEL_119;
          v48 = *((_QWORD *)v43 - 6);
          v47 = *((_QWORD *)v43 - 5);
          v49 = __OFSUB__(v47, v48);
          v41 = v47 - v48;
          v42 = v49;
          if (v49)
            goto LABEL_120;
          v50 = v13 - 2;
          v51 = &v36[16 * v13 - 32];
          v53 = *(_QWORD *)v51;
          v52 = *((_QWORD *)v51 + 1);
          v49 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          if (v49)
            goto LABEL_122;
          v49 = __OFADD__(v41, v54);
          v55 = v41 + v54;
          if (v49)
            goto LABEL_125;
          if (v55 >= v46)
          {
            v73 = &v36[16 * v38];
            v75 = *(_QWORD *)v73;
            v74 = *((_QWORD *)v73 + 1);
            v49 = __OFSUB__(v74, v75);
            v76 = v74 - v75;
            if (v49)
              goto LABEL_129;
            v66 = v41 < v76;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v67 = *((_QWORD *)v12 + 4);
            v68 = *((_QWORD *)v12 + 5);
            v49 = __OFSUB__(v68, v67);
            v60 = v68 - v67;
            v61 = v49;
            goto LABEL_77;
          }
          v40 = *((_QWORD *)v12 + 4);
          v39 = *((_QWORD *)v12 + 5);
          v49 = __OFSUB__(v39, v40);
          v41 = v39 - v40;
          v42 = v49;
        }
        if ((v42 & 1) != 0)
          goto LABEL_121;
        v50 = v13 - 2;
        v56 = &v36[16 * v13 - 32];
        v58 = *(_QWORD *)v56;
        v57 = *((_QWORD *)v56 + 1);
        v59 = __OFSUB__(v57, v58);
        v60 = v57 - v58;
        v61 = v59;
        if (v59)
          goto LABEL_124;
        v62 = &v36[16 * v38];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v49 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v49)
          goto LABEL_127;
        if (__OFADD__(v60, v65))
          goto LABEL_128;
        if (v60 + v65 >= v41)
        {
          v66 = v41 < v65;
LABEL_83:
          if (v66)
            v38 = v50;
          goto LABEL_85;
        }
LABEL_77:
        if ((v61 & 1) != 0)
          goto LABEL_123;
        v69 = &v36[16 * v38];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v49 = __OFSUB__(v70, v71);
        v72 = v70 - v71;
        if (v49)
          goto LABEL_126;
        if (v72 < v60)
          goto LABEL_15;
LABEL_85:
        v77 = v38 - 1;
        if (v38 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v78 = v12;
        v79 = &v36[16 * v77];
        v80 = *(_QWORD *)v79;
        v81 = &v36[16 * v38];
        v82 = *((_QWORD *)v81 + 1);
        sub_1A457B878((char *)(v11 + 16 * *(_QWORD *)v79), (char *)(v11 + 16 * *(_QWORD *)v81), v11 + 16 * v82, __dst);
        if (v1)
          goto LABEL_93;
        if (v82 < v80)
          goto LABEL_116;
        if (v38 > *((_QWORD *)v78 + 2))
          goto LABEL_117;
        *(_QWORD *)v79 = v80;
        *(_QWORD *)&v36[16 * v77 + 8] = v82;
        v83 = *((_QWORD *)v78 + 2);
        if (v38 >= v83)
          goto LABEL_118;
        v12 = v78;
        v13 = v83 - 1;
        memmove(&v36[16 * v38], v81 + 16, 16 * (v83 - 1 - v38));
        *((_QWORD *)v78 + 2) = v83 - 1;
        v11 = v106;
        if (v83 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A457B878(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[16 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (char *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 16;
          v20 = *((_QWORD *)v18 - 2);
          v18 -= 16;
          if (*((_QWORD *)v16 - 2) >= v20)
          {
            v22 = v16 - 16;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 16;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 16;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_1A462E6A8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A457BAFC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A457A758(a1, v1[5], v1[2], v1[3]);
}

void sub_1A457BB18(void *a1)
{
  uint64_t v1;

  sub_1A457A894(a1, v1);
}

uint64_t sub_1A457BB38(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A457A8F0(a1, v1[5], v1[2], v1[3], v1[4]);
}

void sub_1A457BB54(void *a1)
{
  uint64_t v1;

  sub_1A457AA2C(a1, v1);
}

uint64_t sub_1A457BB64()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BBA0()
{
  uint64_t v0;

  return sub_1A457AA88(*(_QWORD *)(v0 + 40), *(void (**)(char *, char *, char *))(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void (**)(void))(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1A457BBD4()
{
  unint64_t result;

  result = qword_1EE720E70;
  if (!qword_1EE720E70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for WhenError, &type metadata for WhenError);
    atomic_store(result, (unint64_t *)&qword_1EE720E70);
  }
  return result;
}

uint64_t sub_1A457BC18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A4579254(a1, a2, *(void (**)(char *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1A457BC24()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A457BC48(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4579344(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

id sub_1A457BC64(void *a1)
{
  uint64_t v1;

  return sub_1A4579514(a1, v1);
}

uint64_t sub_1A457BC84(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A457942C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1A457BCA8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A457BCF4()
{
  uint64_t v0;

  sub_1A4579564(*(_QWORD *)(v0 + 32), *(void (**)(char *, char *))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(void (**)(void))(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A457BD28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A457834C(a1, a2, *(void (**)(char *))(v2 + 32));
}

uint64_t sub_1A457BD34()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A457BD64()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A457BD8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BDBC()
{
  return sub_1A457BE8C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A4578668);
}

uint64_t sub_1A457BDC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A45775E0(a1, a2, *(void (**)(char *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1A457BDF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A457844C(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A457BE1C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A4578544(a1, v1[4], v1[2], v1[3]);
}

uint64_t objectdestroy_123Tm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BE80()
{
  return sub_1A457BE8C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45776C8);
}

uint64_t sub_1A457BE8C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[2], v1[3]);
}

uint64_t sub_1A457BEA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 24);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1A457BED4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A457BEF8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1A457BF34()
{
  uint64_t v0;

  sub_1A4576A84(*(_QWORD *)(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(void (**)(uint64_t))(v0 + 56), *(_QWORD *)(v0 + 64), *(char **)(v0 + 16));
}

uint64_t sub_1A457BF48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BF6C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A45768B0(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_1A457BF88()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BFAC(void *a1)
{
  uint64_t v1;

  return sub_1A45769A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1A457BFB8()
{
  uint64_t v0;

  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A457BFF0()
{
  uint64_t v0;

  return sub_1A44DA18C(*(_QWORD *)(v0 + 16), 0, 1, *(uint64_t (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

BOOL sub_1A457C004(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

uint64_t sub_1A457C018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A4576D54(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1A457C0B0(uint64_t a1)
{
  return sub_1A457BDF8(a1);
}

uint64_t sub_1A457C0C4(uint64_t a1)
{
  return sub_1A457BE1C(a1);
}

uint64_t sub_1A457C0D8()
{
  sub_1A457C67C();
  return sub_1A4691DB8();
}

uint64_t sub_1A457C100()
{
  sub_1A457C67C();
  return sub_1A4691DC4();
}

uint64_t sub_1A457C128()
{
  sub_1A457C638();
  return sub_1A4691DB8();
}

uint64_t sub_1A457C150()
{
  sub_1A457C638();
  return sub_1A4691DC4();
}

uint64_t sub_1A457C178()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000014;
  if (*v0 != 1)
    v1 = 0x6369666963657073;
  if (*v0)
    return v1;
  else
    return 0x756F6363416C6C61;
}

uint64_t sub_1A457C1EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A458006C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A457C210()
{
  sub_1A457C5B0();
  return sub_1A4691DB8();
}

uint64_t sub_1A457C238()
{
  sub_1A457C5B0();
  return sub_1A4691DC4();
}

uint64_t sub_1A457C260()
{
  sub_1A457C5F4();
  return sub_1A4691DB8();
}

uint64_t sub_1A457C288()
{
  sub_1A457C5F4();
  return sub_1A4691DC4();
}

void REMListPickerDataView.PickerMode.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char v30;
  char v31;
  char v32;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720E78);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720E80);
  v22 = *(_QWORD *)(v5 - 8);
  v23 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720E88);
  v8 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720E90);
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457C5B0();
  sub_1A4691D40();
  if (v14)
  {
    if (v14 == (void *)1)
    {
      v31 = 1;
      sub_1A457C638();
      v15 = v28;
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v15);
    }
    else
    {
      v32 = 2;
      sub_1A457C5F4();
      v17 = v14;
      v18 = v24;
      v19 = v28;
      sub_1A469180C();
      v29 = v17;
      type metadata accessor for REMObjectID_Codable();
      sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
      v20 = v26;
      sub_1A4691890();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v20);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v19);
      sub_1A44E829C(v14);
    }
  }
  else
  {
    v30 = 0;
    sub_1A457C67C();
    v16 = v28;
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v16);
  }
}

unint64_t sub_1A457C5B0()
{
  unint64_t result;

  result = qword_1EE720E98;
  if (!qword_1EE720E98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2ACC, &type metadata for REMListPickerDataView.PickerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720E98);
  }
  return result;
}

unint64_t sub_1A457C5F4()
{
  unint64_t result;

  result = qword_1EE720EA0;
  if (!qword_1EE720EA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2A7C, &type metadata for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720EA0);
  }
  return result;
}

unint64_t sub_1A457C638()
{
  unint64_t result;

  result = qword_1EE720EA8;
  if (!qword_1EE720EA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2A2C, &type metadata for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720EA8);
  }
  return result;
}

unint64_t sub_1A457C67C()
{
  unint64_t result;

  result = qword_1EE720EB0;
  if (!qword_1EE720EB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A29DC, &type metadata for REMListPickerDataView.PickerMode.AllAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720EB0);
  }
  return result;
}

uint64_t REMListPickerDataView.PickerMode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  char v44;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720EB8);
  v4 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v35 = v4;
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720EC0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720EC8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720ED0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A457C5B0();
  v17 = v40;
  sub_1A4691D28();
  if (!v17)
  {
    v31 = v8;
    v18 = v37;
    v19 = v38;
    v40 = v13;
    v20 = sub_1A46917DC();
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if (*(_BYTE *)(v20 + 32))
      {
        if (*(_BYTE *)(v20 + 32) != 1)
        {
          v37 = (char *)v20;
          v44 = 2;
          sub_1A457C5F4();
          v26 = v15;
          sub_1A4691734();
          v27 = v36;
          type metadata accessor for REMObjectID_Codable();
          sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
          v29 = v34;
          sub_1A46917C4();
          (*(void (**)(char *, uint64_t))(v35 + 8))(v19, v29);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v12);
          v28 = v41;
          v24 = (uint64_t)v39;
LABEL_12:
          *v27 = v28;
          return __swift_destroy_boxed_opaque_existential_1(v24);
        }
        v43 = 1;
        sub_1A457C638();
        sub_1A4691734();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v33);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
        v28 = 1;
      }
      else
      {
        v42 = 0;
        sub_1A457C67C();
        sub_1A4691734();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
        v28 = 0;
      }
      v24 = (uint64_t)v39;
      v27 = v36;
      goto LABEL_12;
    }
    v21 = sub_1A46914B8();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v23 = &type metadata for REMListPickerDataView.PickerMode;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v12);
  }
  v24 = (uint64_t)v39;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1A457CB64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMListPickerDataView.PickerMode.init(from:)(a1, a2);
}

void sub_1A457CB78(_QWORD *a1)
{
  REMListPickerDataView.PickerMode.encode(to:)(a1);
}

id REMListPickerDataView.Model.Account.account.getter()
{
  id *v0;

  return *v0;
}

uint64_t REMListPickerDataView.Model.Account.lists.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMListPickerDataView.Model.Account.init(account:lists:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void REMListPickerDataView.Model.Account.init(account:shouldIncludeCustomSmartLists:)(uint64_t *a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = a3;
  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    swift_bridgeObjectRelease();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_37;
  }
  v28 = *a1;
  v7 = 0;
  v8 = v5 + 32;
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v31 = *(_QWORD *)(v5 + 16);
  v32 = a1[1];
  v30 = v5 + 32;
  while (v7 < *(_QWORD *)(v5 + 16))
  {
    v10 = (unint64_t *)(v8 + 16 * v7);
    v12 = *v10;
    v11 = v10[1];
    v13 = *v10 >> 62;
    if (!(_DWORD)v13)
    {
      v17 = (id)v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1A443A280(0, v9[2] + 1, 1, v9);
      v19 = v9[2];
      v18 = v9[3];
      if (v19 >= v18 >> 1)
        v9 = sub_1A443A280((_QWORD *)(v18 > 1), v19 + 1, 1, v9);
      v9[2] = v19 + 1;
      v9[v19 + 4] = v12;
      goto LABEL_19;
    }
    if ((_DWORD)v13 != 1)
    {
      v20 = *(_QWORD *)(v11 + 16);
      if (!v20)
        goto LABEL_4;
      sub_1A4467604(v12);
      swift_bridgeObjectRetain();
      sub_1A4467604(v12);
      swift_bridgeObjectRetain();
      v21 = 0;
      while (2)
      {
        v22 = *(_QWORD *)(v11 + 8 * v21 + 32);
        if ((v22 & 0x8000000000000000) == 0)
        {
          v23 = (id)v22;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1A443A280(0, v9[2] + 1, 1, v9);
          v25 = v9[2];
          v24 = v9[3];
          v26 = v25 + 1;
          if (v25 >= v24 >> 1)
            v9 = sub_1A443A280((_QWORD *)(v24 > 1), v25 + 1, 1, v9);
          goto LABEL_23;
        }
        if ((a2 & 1) != 0)
        {
          v23 = (id)(v22 & 0x7FFFFFFFFFFFFFFFLL);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1A443A280(0, v9[2] + 1, 1, v9);
          v25 = v9[2];
          v27 = v9[3];
          v26 = v25 + 1;
          if (v25 >= v27 >> 1)
            v9 = sub_1A443A280((_QWORD *)(v27 > 1), v25 + 1, 1, v9);
          v22 |= 0x8000000000000000;
LABEL_23:
          v9[2] = v26;
          v9[v25 + 4] = v22;

        }
        if (v20 == ++v21)
        {
          swift_bridgeObjectRelease();
          sub_1A4467654(v12);
          sub_1A4467654(v12);
          swift_bridgeObjectRelease();
          v6 = v31;
          v5 = v32;
          v8 = v30;
          goto LABEL_4;
        }
        continue;
      }
    }
    if ((a2 & 1) != 0)
    {
      v14 = (id)(v12 & 0x3FFFFFFFFFFFFFFFLL);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = sub_1A443A280(0, v9[2] + 1, 1, v9);
      v16 = v9[2];
      v15 = v9[3];
      if (v16 >= v15 >> 1)
        v9 = sub_1A443A280((_QWORD *)(v15 > 1), v16 + 1, 1, v9);
      v9[2] = v16 + 1;
      v9[v16 + 4] = v12 & 0x3FFFFFFFFFFFFFFFLL | 0x8000000000000000;
LABEL_19:
      sub_1A4467654(v12);
    }
LABEL_4:
    if (++v7 == v6)
    {
      swift_bridgeObjectRelease();
      v4 = v28;
      v3 = a3;
LABEL_37:
      *v3 = v4;
      v3[1] = v9;
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1A457CEE4()
{
  _BYTE *v0;

  if (*v0)
    return 0x737473696CLL;
  else
    return 0x746E756F636361;
}

uint64_t sub_1A457CF1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45801F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A457CF40()
{
  sub_1A457EABC();
  return sub_1A4691DB8();
}

uint64_t sub_1A457CF68()
{
  sub_1A457EABC();
  return sub_1A4691DC4();
}

uint64_t REMListPickerDataView.Model.Account.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720ED8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EABC();
  sub_1A4691D40();
  v12 = v8;
  v11 = 0;
  type metadata accessor for REMAccount_Codable();
  sub_1A4436344(&qword_1ED242440, (uint64_t (*)(uint64_t))type metadata accessor for REMAccount_Codable, (uint64_t)&protocol conformance descriptor for REMAccount_Codable);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720EE8);
    sub_1A457EC10(&qword_1EE720EF0, &qword_1EE720EE8, (uint64_t (*)(void))sub_1A457EB00, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMListPickerDataView.Model.Account.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  char v13;
  void *v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EABC();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMAccount_Codable();
    v13 = 0;
    sub_1A4436344(qword_1ED241B10, (uint64_t (*)(uint64_t))type metadata accessor for REMAccount_Codable, (uint64_t)&protocol conformance descriptor for REMAccount_Codable);
    sub_1A46917C4();
    v9 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720EE8);
    v13 = 1;
    sub_1A457EC10(&qword_1EE720F08, &qword_1EE720EE8, (uint64_t (*)(void))sub_1A457EB44, MEMORY[0x1E0DEAF40]);
    v10 = v9;
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v14;
    *a2 = v10;
    a2[1] = v11;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

void sub_1A457D328(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  REMListPickerDataView.Model.Account.init(from:)(a1, a2);
}

uint64_t sub_1A457D33C(_QWORD *a1)
{
  return REMListPickerDataView.Model.Account.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Model.accounts.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMListPickerDataView::Model __swiftcall REMListPickerDataView.Model.init(accounts:)(ReminderKitInternal::REMListPickerDataView::Model accounts)
{
  ReminderKitInternal::REMListPickerDataView::Model *v1;

  v1->accounts._rawValue = accounts.accounts._rawValue;
  return accounts;
}

uint64_t sub_1A457D360()
{
  return 0x73746E756F636361;
}

uint64_t sub_1A457D378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73746E756F636361 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A457D40C()
{
  sub_1A457EB88();
  return sub_1A4691DB8();
}

uint64_t sub_1A457D434()
{
  sub_1A457EB88();
  return sub_1A4691DC4();
}

uint64_t REMListPickerDataView.Model.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EB88();
  sub_1A4691D40();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F28);
  sub_1A457EC10(&qword_1EE720F30, &qword_1EE720F28, (uint64_t (*)(void))sub_1A457EBCC, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMListPickerDataView.Model.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EB88();
  sub_1A4691D28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F28);
    sub_1A457EC10(&qword_1EE720F48, &qword_1EE720F28, (uint64_t (*)(void))sub_1A457EC74, MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A457D6CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMListPickerDataView.Model.init(from:)(a1, a2);
}

uint64_t sub_1A457D6E0(_QWORD *a1)
{
  return REMListPickerDataView.Model.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Result.model.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

void *REMListPickerDataView.Result.latestFetchResultToken.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

_QWORD *REMListPickerDataView.Result.init(model:latestFetchResultToken:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

void static REMListPickerDataView.fetch(store:pickerMode:shouldIncludeCustomSmartLists:diffingAgainst:)(void **a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12[2];

  v8 = *a1;
  v9 = objc_allocWithZone((Class)type metadata accessor for REMListPickerDataView.Invocation());
  sub_1A44E828C(v8);
  v10 = objc_msgSend(v9, sel_initWithFetchResultTokenToDiffAgainst_, a3);
  sub_1A447DEC4((uint64_t)v10, (uint64_t)v8, a2, v12);

  sub_1A44E829C(v8);
  if (!v4)
  {
    v11 = v12[1];
    *a4 = v12[0];
    a4[1] = v11;
  }
}

id REMListPickerDataView.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMListPickerDataView.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMListPickerDataView.Invocation.Parameters.pickerMode.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1A44E828C(v2);
}

uint64_t REMListPickerDataView.Invocation.Parameters.shouldIncludeCustomSmartLists.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1A457D848()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001DLL;
  else
    return 0x6F4D72656B636970;
}

uint64_t sub_1A457D88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45802DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A457D8B0()
{
  sub_1A457ECD8();
  return sub_1A4691DB8();
}

uint64_t sub_1A457D8D8()
{
  sub_1A457ECD8();
  return sub_1A4691DC4();
}

uint64_t REMListPickerDataView.Invocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[3];
  char v11;
  char v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F58);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[2] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457ECD8();
  sub_1A4691D40();
  v13 = v8;
  v12 = 0;
  sub_1A457ED1C();
  sub_1A4691890();
  if (!v2)
  {
    v11 = 1;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMListPickerDataView.Invocation.Parameters.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  char v10;
  _BYTE v11[16];
  id v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457ECD8();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11[15] = 0;
    sub_1A457ED60();
    sub_1A46917C4();
    v9 = v12;
    v11[14] = 1;
    sub_1A44E828C(v12);
    v10 = sub_1A4691794();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v10 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    sub_1A44E829C(v9);
  }
}

void sub_1A457DBC8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMListPickerDataView.Invocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A457DBDC(_QWORD *a1)
{
  return REMListPickerDataView.Invocation.Parameters.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Invocation.Result.model.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMListPickerDataView::Invocation::Result __swiftcall REMListPickerDataView.Invocation.Result.init(model:)(ReminderKitInternal::REMListPickerDataView::Invocation::Result model)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)model.model.accounts._rawValue;
  return model;
}

uint64_t sub_1A457DC08()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_1A457DC1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A457DCA8()
{
  sub_1A457EDA4();
  return sub_1A4691DB8();
}

uint64_t sub_1A457DCD0()
{
  sub_1A457EDA4();
  return sub_1A4691DC4();
}

uint64_t REMListPickerDataView.Invocation.Result.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EDA4();
  sub_1A4691D40();
  v9[1] = v7;
  sub_1A457EDE8();
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMListPickerDataView.Invocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720F98);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EDA4();
  sub_1A4691D28();
  if (!v2)
  {
    sub_1A457EE2C();
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A457DF10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMListPickerDataView.Invocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A457DF24(_QWORD *a1)
{
  return REMListPickerDataView.Invocation.Result.encode(to:)(a1);
}

id REMListPickerDataView.Invocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMListPickerDataView.Invocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMListPickerDataView.Invocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMListPickerDataView.Invocation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMListPickerDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMListPickerDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1)
      v5 = 1;
    else
      v5 = 2;
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional)intValue;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C796170;
  else
    return 0x54746E65746E6F63;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C796170;
  else
    return 0x54746E65746E6F63;
}

uint64_t sub_1A457E258(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466BD0C(*a1, *a2);
}

uint64_t sub_1A457E264()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A457E2EC()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A457E350()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::CodingKeys_optional sub_1A457E3D4(Swift::String *a1)
{
  return REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A457E3E0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x54746E65746E6F63;
  if (*v1)
    v2 = 0x64616F6C796170;
  v3 = 0xEB00000000657079;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A457E428()
{
  _BYTE *v0;

  if (*v0)
    return 0x64616F6C796170;
  else
    return 0x54746E65746E6F63;
}

uint64_t sub_1A457E470()
{
  sub_1A457EE70();
  return sub_1A4691DB8();
}

uint64_t sub_1A457E498()
{
  sub_1A457EE70();
  return sub_1A4691DC4();
}

ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::ContentType_optional __swiftcall REMListPickerDataView.Model.ListOrCustomSmartList.ContentType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ReminderKitInternal::REMListPickerDataView::Model::ListOrCustomSmartList::ContentType_optional)rawValue;
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.ContentType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1A457E4E4()
{
  sub_1A45803D4();
  return sub_1A4690B7C();
}

uint64_t sub_1A457E540()
{
  sub_1A45803D4();
  return sub_1A4690B40();
}

uint64_t REMListPickerDataView.Model.ListOrCustomSmartList.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  unint64_t v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720FA8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EE70();
  sub_1A4691D28();
  if (!v2)
  {
    v12 = 0;
    sub_1A457EEB4();
    sub_1A46917C4();
    if ((v11 & 1) != 0)
    {
      type metadata accessor for REMSmartList_Codable();
      v12 = 1;
      sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
      sub_1A46917C4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *a2 = v11 | 0x8000000000000000;
    }
    else
    {
      type metadata accessor for REMList_Codable();
      v12 = 1;
      sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
      sub_1A46917C4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      *a2 = v11;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void REMListPickerDataView.Model.ListOrCustomSmartList.encode(to:)(_QWORD *a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  id v9;
  uint64_t (*v10)();
  unint64_t *v11;
  void *v12;
  uint64_t v13;
  id v14;
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720FC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (unint64_t)*v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A457EE70();
  sub_1A4691D40();
  if ((v8 & 0x8000000000000000) != 0)
  {
    LOBYTE(v14) = 1;
    v15 = 0;
    sub_1A457EEF8();
    v9 = (id)(v8 & 0x7FFFFFFFFFFFFFFFLL);
    sub_1A4691890();
    if (!v2)
    {
      v14 = v9;
      v15 = 1;
      type metadata accessor for REMSmartList_Codable();
      v10 = type metadata accessor for REMSmartList_Codable;
      v11 = &qword_1ED242478;
      v12 = &protocol conformance descriptor for REMSmartList_Codable;
      goto LABEL_6;
    }
  }
  else
  {
    LOBYTE(v14) = 0;
    v15 = 0;
    sub_1A457EEF8();
    v9 = (id)v8;
    sub_1A4691890();
    if (!v2)
    {
      v14 = v9;
      v15 = 1;
      type metadata accessor for REMList_Codable();
      v10 = type metadata accessor for REMList_Codable;
      v11 = &qword_1ED243DB8;
      v12 = &protocol conformance descriptor for REMList_Codable;
LABEL_6:
      sub_1A4436344(v11, (uint64_t (*)(uint64_t))v10, (uint64_t)v12);
      sub_1A4691890();
    }
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

}

uint64_t sub_1A457E99C@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return REMListPickerDataView.Model.ListOrCustomSmartList.init(from:)(a1, a2);
}

void sub_1A457E9B0(_QWORD *a1)
{
  REMListPickerDataView.Model.ListOrCustomSmartList.encode(to:)(a1);
}

uint64_t REMListPickerDataView.Model.Account.allREMLists.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  unint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 8);
  v8 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (i = 0; i != v2; ++i)
    {
      v4 = *(_QWORD *)(v1 + 8 * i + 32);
      if ((v4 & 0x8000000000000000) == 0)
      {
        v5 = (id)v4;
        MEMORY[0x1A859E3E0]();
        if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1A4690BDC();
        sub_1A4690C18();
        sub_1A4690BB8();
      }
    }
    swift_bridgeObjectRelease();
    v6 = v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_1A457EABC()
{
  unint64_t result;

  result = qword_1EE720EE0;
  if (!qword_1EE720EE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A298C, &type metadata for REMListPickerDataView.Model.Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720EE0);
  }
  return result;
}

unint64_t sub_1A457EB00()
{
  unint64_t result;

  result = qword_1EE720EF8;
  if (!qword_1EE720EF8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList);
    atomic_store(result, (unint64_t *)&qword_1EE720EF8);
  }
  return result;
}

unint64_t sub_1A457EB44()
{
  unint64_t result;

  result = qword_1EE720F10;
  if (!qword_1EE720F10)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList);
    atomic_store(result, (unint64_t *)&qword_1EE720F10);
  }
  return result;
}

unint64_t sub_1A457EB88()
{
  unint64_t result;

  result = qword_1EE720F20;
  if (!qword_1EE720F20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A293C, &type metadata for REMListPickerDataView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720F20);
  }
  return result;
}

unint64_t sub_1A457EBCC()
{
  unint64_t result;

  result = qword_1EE720F38;
  if (!qword_1EE720F38)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.Account, &type metadata for REMListPickerDataView.Model.Account);
    atomic_store(result, (unint64_t *)&qword_1EE720F38);
  }
  return result;
}

uint64_t sub_1A457EC10(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1A85A0000](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A457EC74()
{
  unint64_t result;

  result = qword_1EE720F50;
  if (!qword_1EE720F50)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.Account, &type metadata for REMListPickerDataView.Model.Account);
    atomic_store(result, (unint64_t *)&qword_1EE720F50);
  }
  return result;
}

uint64_t type metadata accessor for REMListPickerDataView.Invocation()
{
  return objc_opt_self();
}

unint64_t sub_1A457ECD8()
{
  unint64_t result;

  result = qword_1EE720F60;
  if (!qword_1EE720F60)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A28EC, &type metadata for REMListPickerDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720F60);
  }
  return result;
}

unint64_t sub_1A457ED1C()
{
  unint64_t result;

  result = qword_1EE720F68;
  if (!qword_1EE720F68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.PickerMode, &type metadata for REMListPickerDataView.PickerMode);
    atomic_store(result, (unint64_t *)&qword_1EE720F68);
  }
  return result;
}

unint64_t sub_1A457ED60()
{
  unint64_t result;

  result = qword_1EE720F78;
  if (!qword_1EE720F78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.PickerMode, &type metadata for REMListPickerDataView.PickerMode);
    atomic_store(result, (unint64_t *)&qword_1EE720F78);
  }
  return result;
}

unint64_t sub_1A457EDA4()
{
  unint64_t result;

  result = qword_1EE720F88;
  if (!qword_1EE720F88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A289C, &type metadata for REMListPickerDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720F88);
  }
  return result;
}

unint64_t sub_1A457EDE8()
{
  unint64_t result;

  result = qword_1EE720F90;
  if (!qword_1EE720F90)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model, &type metadata for REMListPickerDataView.Model);
    atomic_store(result, (unint64_t *)&qword_1EE720F90);
  }
  return result;
}

unint64_t sub_1A457EE2C()
{
  unint64_t result;

  result = qword_1EE720FA0;
  if (!qword_1EE720FA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model, &type metadata for REMListPickerDataView.Model);
    atomic_store(result, (unint64_t *)&qword_1EE720FA0);
  }
  return result;
}

unint64_t sub_1A457EE70()
{
  unint64_t result;

  result = qword_1EE720FB0;
  if (!qword_1EE720FB0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE720FB0);
  }
  return result;
}

unint64_t sub_1A457EEB4()
{
  unint64_t result;

  result = qword_1EE720FB8;
  if (!qword_1EE720FB8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE720FB8);
  }
  return result;
}

unint64_t sub_1A457EEF8()
{
  unint64_t result;

  result = qword_1EE720FC8;
  if (!qword_1EE720FC8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE720FC8);
  }
  return result;
}

unint64_t sub_1A457EF40()
{
  unint64_t result;

  result = qword_1EE720FD0;
  if (!qword_1EE720FD0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Invocation.Parameters, &type metadata for REMListPickerDataView.Invocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE720FD0);
  }
  return result;
}

unint64_t sub_1A457EF90()
{
  unint64_t result;

  result = qword_1EE720FD8;
  if (!qword_1EE720FD8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Invocation.Result, &type metadata for REMListPickerDataView.Invocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE720FD8);
  }
  return result;
}

unint64_t sub_1A457EFD8()
{
  unint64_t result;

  result = qword_1EE721020;
  if (!qword_1EE721020)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721020);
  }
  return result;
}

unint64_t sub_1A457F020()
{
  unint64_t result;

  result = qword_1EE721028;
  if (!qword_1EE721028)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721028);
  }
  return result;
}

unint64_t sub_1A457F068()
{
  unint64_t result;

  result = qword_1EE721030;
  if (!qword_1EE721030)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721030);
  }
  return result;
}

unint64_t sub_1A457F0B0()
{
  unint64_t result;

  result = qword_1EE721038;
  if (!qword_1EE721038)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE721038);
  }
  return result;
}

uint64_t type metadata accessor for REMListPickerDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMListPickerDataView()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for REMListPickerDataView.PickerMode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.PickerMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode()
{
  return &type metadata for REMListPickerDataView.PickerMode;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model()
{
  return &type metadata for REMListPickerDataView.Model;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMListPickerDataView.Model.ListOrCustomSmartList(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for REMListPickerDataView.Model.ListOrCustomSmartList(_QWORD *a1)
{

}

uint64_t *assignWithCopy for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0x7FFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0x7FFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.Model.ListOrCustomSmartList(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1A457F348(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1A457F354(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1A457F364(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.ListOrCustomSmartList()
{
  return &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMAccountSnapshotSummary(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for REMAccountSnapshotSummary(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for REMAccountSnapshotSummary(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for REMAccountSnapshotSummary(id *a1, _OWORD *a2)
{

  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.Account()
{
  return &type metadata for REMListPickerDataView.Model.Account;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMListPickerDataView.Result(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for REMListPickerDataView.Result(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *assignWithCopy for REMListPickerDataView.Result(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for REMListPickerDataView.Result(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Result()
{
  return &type metadata for REMListPickerDataView.Result;
}

uint64_t initializeBufferWithCopyOfBuffer for REMListPickerDataView.Invocation.Parameters(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 >= 2uLL)
    v5 = v4;
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

void destroy for REMListPickerDataView.Invocation.Parameters(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 2)

}

uint64_t assignWithCopy for REMListPickerDataView.Invocation.Parameters(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 2uLL)
  {
    if ((unint64_t)v5 >= 2)
    {
      *(_QWORD *)a1 = v5;
      v7 = v5;

      goto LABEL_8;
    }

    v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 2)
  {
LABEL_6:
    *(_QWORD *)a1 = v5;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;
LABEL_8:
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for REMListPickerDataView.Invocation.Parameters(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;

  v4 = *(void **)a1;
  v5 = *(_QWORD *)a2;
  if (*(_QWORD *)a1 >= 2uLL)
  {
    if (v5 >= 2)
    {
      *(_QWORD *)a1 = v5;

      goto LABEL_6;
    }

  }
  *(_QWORD *)a1 = v5;
LABEL_6:
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMListPickerDataView.Invocation.Parameters(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *((_BYTE *)a1 + 9))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 2;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.Invocation.Parameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Parameters()
{
  return &type metadata for REMListPickerDataView.Invocation.Parameters;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Result()
{
  return &type metadata for REMListPickerDataView.Invocation.Result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType()
{
  return &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Result.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Invocation.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Invocation.Parameters.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Invocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Model.CodingKeys;
}

uint64_t _s19ReminderKitInternal21REMListPickerDataViewC5ModelV21ListOrCustomSmartListO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A457F834 + 4 * byte_1A46A1E05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A457F868 + 4 * asc_1A46A1E00[v4]))();
}

uint64_t sub_1A457F868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A457F870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A457F878);
  return result;
}

uint64_t sub_1A457F884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A457F88CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A457F890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A457F898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.Model.Account.CodingKeys()
{
  return &type metadata for REMListPickerDataView.Model.Account.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMListPickerDataView.PickerMode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A457F900 + 4 * byte_1A46A1E0F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A457F934 + 4 * byte_1A46A1E0A[v4]))();
}

uint64_t sub_1A457F934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A457F93C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A457F944);
  return result;
}

uint64_t sub_1A457F950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A457F958);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A457F95C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A457F964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.CodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.CodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.AllAccountsCodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.AllAccountsCodingKeys;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys;
}

uint64_t _s19ReminderKitInternal21REMListPickerDataViewC10InvocationC6ResultV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A457F9E0 + 4 * byte_1A46A1E14[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A457FA00 + 4 * byte_1A46A1E19[v4]))();
}

_BYTE *sub_1A457F9E0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A457FA00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A457FA08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A457FA10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A457FA18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A457FA20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys()
{
  return &type metadata for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys;
}

unint64_t sub_1A457FA40()
{
  unint64_t result;

  result = qword_1EE721100;
  if (!qword_1EE721100)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A243C, &type metadata for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721100);
  }
  return result;
}

unint64_t sub_1A457FA88()
{
  unint64_t result;

  result = qword_1EE721108;
  if (!qword_1EE721108)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2594, &type metadata for REMListPickerDataView.PickerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721108);
  }
  return result;
}

unint64_t sub_1A457FAD0()
{
  unint64_t result;

  result = qword_1EE721110;
  if (!qword_1EE721110)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A264C, &type metadata for REMListPickerDataView.Model.Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721110);
  }
  return result;
}

unint64_t sub_1A457FB18()
{
  unint64_t result;

  result = qword_1EE721118;
  if (!qword_1EE721118)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2704, &type metadata for REMListPickerDataView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721118);
  }
  return result;
}

unint64_t sub_1A457FB60()
{
  unint64_t result;

  result = qword_1EE721120;
  if (!qword_1EE721120)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A27BC, &type metadata for REMListPickerDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721120);
  }
  return result;
}

unint64_t sub_1A457FBA8()
{
  unint64_t result;

  result = qword_1EE721128;
  if (!qword_1EE721128)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2874, &type metadata for REMListPickerDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721128);
  }
  return result;
}

unint64_t sub_1A457FBF0()
{
  unint64_t result;

  result = qword_1EE721130;
  if (!qword_1EE721130)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A27E4, &type metadata for REMListPickerDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721130);
  }
  return result;
}

unint64_t sub_1A457FC38()
{
  unint64_t result;

  result = qword_1EE721138;
  if (!qword_1EE721138)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A280C, &type metadata for REMListPickerDataView.Invocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721138);
  }
  return result;
}

unint64_t sub_1A457FC80()
{
  unint64_t result;

  result = qword_1EE721140;
  if (!qword_1EE721140)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A272C, &type metadata for REMListPickerDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721140);
  }
  return result;
}

unint64_t sub_1A457FCC8()
{
  unint64_t result;

  result = qword_1EE721148;
  if (!qword_1EE721148)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2754, &type metadata for REMListPickerDataView.Invocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721148);
  }
  return result;
}

unint64_t sub_1A457FD10()
{
  unint64_t result;

  result = qword_1EE721150;
  if (!qword_1EE721150)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2674, &type metadata for REMListPickerDataView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721150);
  }
  return result;
}

unint64_t sub_1A457FD58()
{
  unint64_t result;

  result = qword_1EE721158;
  if (!qword_1EE721158)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A269C, &type metadata for REMListPickerDataView.Model.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721158);
  }
  return result;
}

unint64_t sub_1A457FDA0()
{
  unint64_t result;

  result = qword_1EE721160;
  if (!qword_1EE721160)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A25BC, &type metadata for REMListPickerDataView.Model.Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721160);
  }
  return result;
}

unint64_t sub_1A457FDE8()
{
  unint64_t result;

  result = qword_1EE721168;
  if (!qword_1EE721168)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A25E4, &type metadata for REMListPickerDataView.Model.Account.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721168);
  }
  return result;
}

unint64_t sub_1A457FE30()
{
  unint64_t result;

  result = qword_1EE721170;
  if (!qword_1EE721170)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A24B4, &type metadata for REMListPickerDataView.PickerMode.AllAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721170);
  }
  return result;
}

unint64_t sub_1A457FE78()
{
  unint64_t result;

  result = qword_1EE721178;
  if (!qword_1EE721178)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A24DC, &type metadata for REMListPickerDataView.PickerMode.AllAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721178);
  }
  return result;
}

unint64_t sub_1A457FEC0()
{
  unint64_t result;

  result = qword_1EE721180;
  if (!qword_1EE721180)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2464, &type metadata for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721180);
  }
  return result;
}

unint64_t sub_1A457FF08()
{
  unint64_t result;

  result = qword_1EE721188;
  if (!qword_1EE721188)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A248C, &type metadata for REMListPickerDataView.PickerMode.CloudKitOnlyAccountsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721188);
  }
  return result;
}

unint64_t sub_1A457FF50()
{
  unint64_t result;

  result = qword_1EE721190;
  if (!qword_1EE721190)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A23AC, &type metadata for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721190);
  }
  return result;
}

unint64_t sub_1A457FF98()
{
  unint64_t result;

  result = qword_1EE721198;
  if (!qword_1EE721198)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A23D4, &type metadata for REMListPickerDataView.PickerMode.SpecificAccountCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721198);
  }
  return result;
}

unint64_t sub_1A457FFE0()
{
  unint64_t result;

  result = qword_1EE7211A0;
  if (!qword_1EE7211A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A2504, &type metadata for REMListPickerDataView.PickerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7211A0);
  }
  return result;
}

unint64_t sub_1A4580028()
{
  unint64_t result;

  result = qword_1EE7211A8;
  if (!qword_1EE7211A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A252C, &type metadata for REMListPickerDataView.PickerMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7211A8);
  }
  return result;
}

uint64_t sub_1A458006C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F6363416C6C61 && a2 == 0xEB0000000073746ELL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A46C0820 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369666963657073 && a2 == 0xEF746E756F636341)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A45801F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E756F636361 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737473696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45802DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F4D72656B636970 && a2 == 0xEA00000000006564;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001A46C0840)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1A45803D4()
{
  unint64_t result;

  result = qword_1EE7211B0;
  if (!qword_1EE7211B0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType, &type metadata for REMListPickerDataView.Model.ListOrCustomSmartList.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE7211B0);
  }
  return result;
}

uint64_t OrderedSet.index(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1A859E008](&v4, a1, *(_QWORD *)(v2 + 8), *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB418], *(_QWORD *)(a2 + 24));
  return v4;
}

void OrderedSet.count.getter()
{
  JUMPOUT(0x1A859E47CLL);
}

uint64_t OrderedSet.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = sub_1A4690BF4();
  v11 = sub_1A46906C0();
  v20 = v10;
  v21 = v11;
  if (MEMORY[0x1A859E4AC](a1, a2))
  {
    v12 = 0;
    while (1)
    {
      v13 = sub_1A4690C0C();
      sub_1A4690BD0();
      if ((v13 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v12, a2);
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_10;
      }
      else
      {
        result = sub_1A469147C();
        if (v9 != 8)
        {
          __break(1u);
          return result;
        }
        v19 = result;
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(&v18 - 2, &v19, a2);
        swift_unknownObjectRelease();
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          result = swift_bridgeObjectRelease();
          v10 = v20;
          v11 = v21;
          goto LABEL_13;
        }
      }
      v16 = type metadata accessor for OrderedSet(0, a2, a3, v14);
      OrderedSet.append(_:)((uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
      (*(void (**)(char *, uint64_t))(v8 + 8))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
      ++v12;
      if (v15 == MEMORY[0x1A859E4AC](a1, a2))
        goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
LABEL_13:
  *a4 = v10;
  a4[1] = v11;
  return result;
}

uint64_t OrderedSet.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A4690BF4();
  result = sub_1A46906C0();
  *a1 = v2;
  a1[1] = result;
  return result;
}

uint64_t OrderedSet.append(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v14;
  unsigned __int8 v15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  MEMORY[0x1A859E008](&v14, v6, v2[1], v4, MEMORY[0x1E0DEB418], *(_QWORD *)(v10 + 24));
  v11 = v15;
  if (v15 == 1)
  {
    v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v12(v8, a1, v4);
    v14 = MEMORY[0x1A859E47C](v9, v4);
    v15 = 0;
    sub_1A469078C();
    sub_1A46907BC();
    v12(v8, a1, v4);
    sub_1A4690C78();
    sub_1A4690C3C();
  }
  return v11;
}

uint64_t OrderedSet.isEmpty.getter()
{
  uint64_t v0;

  v0 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v0);
  return sub_1A4690EB8() & 1;
}

uint64_t OrderedSet.contents.getter()
{
  sub_1A45813E0();
  return swift_bridgeObjectRetain();
}

BOOL OrderedSet.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;

  MEMORY[0x1A859E008](&v4, a1, *(_QWORD *)(v2 + 8), *(_QWORD *)(a2 + 16), MEMORY[0x1E0DEB418], *(_QWORD *)(a2 + 24));
  return (v5 & 1) == 0;
}

uint64_t OrderedSet.removeFirst()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = sub_1A46911A0();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v29 - v10;
  v12 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF58], v12);
  sub_1A4690F24();
  v36 = v2;
  v32 = sub_1A469078C();
  sub_1A4690720();
  v13 = *(_QWORD *)(v1 + 8);
  v14 = *(_QWORD *)(v13 + 64);
  v30 = v13 + 64;
  v15 = 1 << *(_BYTE *)(v13 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v31 = (unint64_t)(v15 + 63) >> 6;
  v29 = v31 - 1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = v33;
  if (!v17)
    goto LABEL_6;
LABEL_4:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v22 = v21 | (v19 << 6);
LABEL_5:
  (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v9, *(_QWORD *)(v13 + 48) + *(_QWORD *)(v3 + 72) * v22, v36);
  v23 = 0;
  *(_QWORD *)&v9[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v22);
  while (1)
  {
LABEL_18:
    v27 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v9, v23, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v11, v9, v35);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, TupleTypeMetadata2) == 1)
      return swift_release();
    v28 = *(_QWORD *)&v11[*(int *)(TupleTypeMetadata2 + 48)];
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v20, v11, v36);
    if (__OFSUB__(v28, 1))
      break;
    v37 = v28 - 1;
    v38 = 0;
    result = sub_1A46907BC();
    if (v17)
      goto LABEL_4;
LABEL_6:
    v24 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_29;
    if (v24 >= v31)
      goto LABEL_17;
    v25 = *(_QWORD *)(v30 + 8 * v24);
    if (v25)
      goto LABEL_9;
    v19 += 2;
    if (v24 + 1 >= v31)
    {
      v17 = 0;
      v23 = 1;
      v19 = v24;
    }
    else
    {
      v25 = *(_QWORD *)(v30 + 8 * v19);
      if (v25)
      {
        ++v24;
        goto LABEL_9;
      }
      v26 = v24 + 2;
      if (v24 + 2 < v31)
      {
        v25 = *(_QWORD *)(v30 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v24 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_30;
            if (v24 >= v31)
            {
              v17 = 0;
              v23 = 1;
              v19 = v29;
              goto LABEL_18;
            }
            v25 = *(_QWORD *)(v30 + 8 * v24);
            ++v26;
            if (v25)
              goto LABEL_9;
          }
        }
        v24 += 2;
LABEL_9:
        v17 = (v25 - 1) & v25;
        v22 = __clz(__rbit64(v25)) + (v24 << 6);
        v19 = v24;
        goto LABEL_5;
      }
LABEL_17:
      v17 = 0;
      v23 = 1;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t OrderedSet.removeLast()()
{
  uint64_t v0;

  v0 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v0);
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF58], v0);
  sub_1A4690F3C();
  sub_1A469078C();
  return sub_1A4690720();
}

Swift::Void __swiftcall OrderedSet.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
  sub_1A4690C78();
  sub_1A4690C6C();
  sub_1A469078C();
  sub_1A4690780();
}

uint64_t sub_1A4580CFC()
{
  return == infix<A>(_:_:)();
}

uint64_t == infix<A>(_:_:)()
{
  char v0;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1A4690C90();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t OrderedSet.startIndex.getter()
{
  return 0;
}

uint64_t sub_1A4580D7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = OrderedSet.endIndex.getter(a1);
  *a2 = result;
  return result;
}

uint64_t OrderedSet.endIndex.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v3 = MEMORY[0x1A859E4AC](v2, v1);
  swift_bridgeObjectRelease();
  return v3;
}

void (*sub_1A4580DE0(_QWORD *a1, uint64_t *a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = sub_1A4580E3C(v6, *a2, a3);
  return sub_1A445F9C4;
}

void (*sub_1A4580E3C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = malloc(*(_QWORD *)(v4 + 64));
  OrderedSet.subscript.getter();
  return sub_1A4580EA8;
}

void sub_1A4580EA8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  (*(void (**)(void *, _QWORD))(a1[1] + 8))(v1, *a1);
  free(v1);
}

uint64_t sub_1A4580EDC(uint64_t a1)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, a1);
  return sub_1A4690E28();
}

uint64_t sub_1A4580F3C()
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>);
  return sub_1A4690E04();
}

_QWORD *sub_1A4580F8C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4581134(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

uint64_t sub_1A4580F98(uint64_t a1)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, a1);
  return sub_1A4690E88();
}

uint64_t sub_1A4580FCC(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, a1);
  v1 = sub_1A45E076C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

double OrderedSet.init(arrayLiteral:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  double result;
  __int128 v6;

  OrderedSet.init(_:)(a1, a2, a3, (uint64_t *)&v6);
  result = *(double *)&v6;
  *a4 = v6;
  return result;
}

double sub_1A4581060@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  return OrderedSet.init(arrayLiteral:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t OrderedSet.subscript.getter()
{
  swift_bridgeObjectRetain();
  sub_1A4690CA8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45810BC()
{
  return sub_1A4690E1C();
}

uint64_t sub_1A45810CC()
{
  return sub_1A4690E34();
}

uint64_t sub_1A45810D8()
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>);
  return sub_1A4690E10();
}

_QWORD *sub_1A4581128(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4581134(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

_QWORD *sub_1A4581134(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A4581198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, a3);
  return sub_1A4690E1C();
}

uint64_t sub_1A45811FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, a4);
  return sub_1A4690DF8();
}

uint64_t sub_1A4581260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, a3);
  return sub_1A4690E34();
}

uint64_t OrderedSet.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1A4690C84();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A46907A4();
  return swift_bridgeObjectRelease();
}

uint64_t OrderedSet.hashValue.getter()
{
  sub_1A4691C8C();
  OrderedSet.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t sub_1A4581394()
{
  sub_1A4691C8C();
  OrderedSet.hash(into:)();
  return sub_1A4691CC8();
}

uint64_t type metadata accessor for OrderedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OrderedSet);
}

uint64_t sub_1A45813E0()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1A45813E8()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45813F8()
{
  return sub_1A45814EC((unint64_t *)&qword_1ED2421B0, MEMORY[0x1E0DEB8C0]);
}

void sub_1A458141C()
{
  JUMPOUT(0x1A85A0000);
}

void sub_1A458142C()
{
  JUMPOUT(0x1A85A0000);
}

void sub_1A458143C()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A458144C()
{
  return sub_1A45814EC(&qword_1EE7211B8, MEMORY[0x1E0DEB8B8]);
}

uint64_t sub_1A4581470(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>);
  return MEMORY[0x1A85A0000](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A45814B8()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45814C8()
{
  return sub_1A45814EC(qword_1EE7211C0, MEMORY[0x1E0DEB890]);
}

uint64_t sub_1A45814EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2421A8);
    v6 = sub_1A446E8D8();
    v7[0] = MEMORY[0x1E0DEB458];
    v7[1] = v6;
    result = MEMORY[0x1A85A0000](a2, v5, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4581558(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>);
  return MEMORY[0x1A85A0000](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A45815A0()
{
  JUMPOUT(0x1A85A0000);
}

double static REMSuggestedAttributesHarvester.harvestedAttributesResponse(for:in:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  id v7;
  double result;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[32];
  uint64_t v25;
  _OWORD v26[12];
  uint64_t v27;
  __int128 v28[5];
  _OWORD v29[2];

  v4 = *(_OWORD *)(a1 + 80);
  v28[4] = *(_OWORD *)(a1 + 64);
  v29[0] = v4;
  *(_DWORD *)((char *)v29 + 15) = *(_DWORD *)(a1 + 95);
  v5 = *(_OWORD *)(a1 + 16);
  v28[0] = *(_OWORD *)a1;
  v28[1] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v28[2] = *(_OWORD *)(a1 + 32);
  v28[3] = v6;
  type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4581724((uint64_t)v28);
  sub_1A447E998((uint64_t)v7, v28, (uint64_t)v26);

  sub_1A4581770((uint64_t)v28);
  if (!v2)
  {
    *(_OWORD *)v24 = v26[10];
    *(_OWORD *)&v24[16] = v26[11];
    v25 = v27;
    v20 = v26[6];
    v21 = v26[7];
    v22 = v26[8];
    v23 = v26[9];
    v16 = v26[2];
    v17 = v26[3];
    v18 = v26[4];
    v19 = v26[5];
    v14 = v26[0];
    v15 = v26[1];
    sub_1A449779C((uint64_t)&v14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976A4);
    sub_1A45817BC((uint64_t)&v14);
    v9 = v23;
    a2[8] = v22;
    a2[9] = v9;
    a2[10] = *(_OWORD *)v24;
    *(_OWORD *)((char *)a2 + 169) = *(_OWORD *)&v24[9];
    v10 = v19;
    a2[4] = v18;
    a2[5] = v10;
    v11 = v21;
    a2[6] = v20;
    a2[7] = v11;
    v12 = v15;
    *a2 = v14;
    a2[1] = v12;
    result = *(double *)&v16;
    v13 = v17;
    a2[2] = v16;
    a2[3] = v13;
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.Invocation()
{
  return objc_opt_self();
}

uint64_t sub_1A4581724(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v3 = v2;
  return a1;
}

uint64_t sub_1A4581770(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A45817BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v2 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 120);
  v10 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 144);
  v18 = *(_QWORD *)(a1 + 136);
  v15 = *(_QWORD *)(a1 + 160);
  v16 = *(_QWORD *)(a1 + 152);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 168);
  v12 = *(_BYTE *)(a1 + 184);
  v19 = *(void **)(a1 + 192);
  sub_1A44976DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_1A44976DC(v2, v3, v4, v5, v6, v7, v8, v9);
  sub_1A44976DC(v10, v18, v17, v16, v15, v14, v13, v12);

  return a1;
}

void static REMSuggestedAttributesHarvester.mentionsExtractionResponse(for:in:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  id v30;

  v5 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4581A64(a1, (uint64_t)v7);
  sub_1A447F46C((uint64_t)v8, (uint64_t)v7, &v21);

  sub_1A4581AA8((uint64_t)v7);
  if (!v2)
  {
    v9 = v21;
    v10 = v22;
    v11 = v23;
    v12 = v24;
    v13 = v25;
    v14 = v26;
    v19 = v27;
    v20 = v21;
    v15 = v28;
    v30 = v29;
    sub_1A44976A4(v21, v22, v23, v24, v25, v26, v27, v28);
    v16 = v9;
    v17 = v19;
    sub_1A44976DC(v16, v10, v11, v12, v13, v14, v19, v15);

    *(_QWORD *)a2 = v20;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v13;
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v17;
    *(_BYTE *)(a2 + 56) = v15;
  }
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest()
{
  uint64_t result;

  result = qword_1ED243710;
  if (!qword_1ED243710)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation()
{
  return objc_opt_self();
}

uint64_t sub_1A4581A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A4581AA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static REMSuggestedAttributesHarvester.feedback(for:in:)(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  _BYTE v8[8];
  id v9;

  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A447FFEC((uint64_t)v6, v4, v8, v5);

  if (!v2)
  {
    a2 = v8[0];

  }
  return a2 & 1;
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation()
{
  return objc_opt_self();
}

void static REMSuggestedAttributesHarvester.postSuggestionAnalytics(for:in:)(void **a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v4[8];
  void *v5;

  v2 = *a1;
  type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_retain();
  sub_1A4480AE4((uint64_t)v3, v2, v4);
  if (!v1)
  {

    v3 = v5;
  }
  swift_release();

}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation()
{
  return objc_opt_self();
}

void static REMSuggestedAttributesHarvester.recordSuggestion(for:in:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  _BYTE v8[8];
  void *v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 24);
  v5 = *(unsigned __int16 *)(a1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_bridgeObjectRetain();
  v7 = v4;
  sub_1A44815C4((uint64_t)v6, v3, v2, v5, (uint64_t)v7, v8);
  if (!v1)
  {

    v6 = v9;
  }

  swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation()
{
  return objc_opt_self();
}

id REMSuggestedAttributesHarvester.suggestedAttributesPerformer.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t REMSuggestedAttributesHarvester.__allocating_init(suggestedAttributesPerformer:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.init(suggestedAttributesPerformer:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t REMSuggestedAttributesHarvester.harvestAttributes(for:elector:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  id v7;
  _OWORD v9[10];
  _OWORD v10[2];
  _OWORD v11[5];
  _OWORD v12[2];
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[32];
  uint64_t v24;
  _OWORD v25[12];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[2];

  v4 = *(_OWORD *)(a1 + 80);
  v31 = *(_OWORD *)(a1 + 64);
  v32[0] = v4;
  *(_DWORD *)((char *)v32 + 15) = *(_DWORD *)(a1 + 95);
  v5 = *(_OWORD *)(a1 + 16);
  v27 = *(_OWORD *)a1;
  v28 = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v29 = *(_OWORD *)(a1 + 32);
  v30 = v6;
  type metadata accessor for REMSuggestedAttributesHarvester.Invocation();
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4581724((uint64_t)&v27);
  sub_1A447E998((uint64_t)v7, &v27, (uint64_t)v25);

  sub_1A4581770((uint64_t)&v27);
  if (!v2)
  {
    *(_OWORD *)v23 = v25[10];
    *(_OWORD *)&v23[16] = v25[11];
    v24 = v26;
    v19 = v25[6];
    v20 = v25[7];
    v21 = v25[8];
    v22 = v25[9];
    v15 = v25[2];
    v16 = v25[3];
    v17 = v25[4];
    v18 = v25[5];
    v13 = v25[0];
    v14 = v25[1];
    sub_1A449779C((uint64_t)&v13, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976A4);
    sub_1A45817BC((uint64_t)&v13);
    v11[4] = v31;
    v12[0] = v32[0];
    *(_DWORD *)((char *)v12 + 15) = *(_DWORD *)((char *)v32 + 15);
    v11[0] = v27;
    v11[1] = v28;
    v11[2] = v29;
    v11[3] = v30;
    v9[8] = v21;
    v9[9] = v22;
    v10[0] = *(_OWORD *)v23;
    *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)&v23[9];
    v9[4] = v17;
    v9[5] = v18;
    v9[6] = v19;
    v9[7] = v20;
    v9[0] = v13;
    v9[1] = v14;
    v9[2] = v15;
    v9[3] = v16;
    a2 = REMSuggestedAttributesElector.electionFor(request:response:)((uint64_t)v11, (uint64_t)v9);
    sub_1A449779C((uint64_t)&v13, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976DC);
  }
  return a2;
}

uint64_t REMSuggestedAttributesHarvester.extractMentions(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;
  id v27;

  v4 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionInvocation();
  v8 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4581A64(a1, (uint64_t)v6);
  sub_1A447F46C((uint64_t)v8, (uint64_t)v6, &v18);

  sub_1A4581AA8((uint64_t)v6);
  if (!v2)
  {
    v7 = v18;
    v9 = v19;
    v10 = v20;
    v11 = v21;
    v12 = v22;
    v13 = v23;
    v14 = v24;
    v15 = v25;
    v27 = v26;
    sub_1A44976A4(v18, v19, v20, v21, v22, v23, v24, v25);
    sub_1A44976DC(v7, v9, v10, v11, v12, v13, v14, v15);

    if ((v15 & 1) != 0)
    {
      v18 = v7;
      v19 = v9;
      v20 = v10;
      v21 = v11;
      v22 = v12;
      v23 = v13;
      v24 = v14;
      sub_1A44E60C8();
      swift_willThrowTypedImpl();
      sub_1A44976DC(v7, v9, v10, v11, v12, v13, v14, 1);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  return v7;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMSuggestedAttributesHarvester.feedback(for:)(ReminderKitInternal::REMSuggestedAttributesHarvester::FeedbackRequest a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _BYTE v8[8];
  id v9;

  v3 = *(void **)a1.source.predictors._rawValue;
  v4 = (void *)*((_QWORD *)a1.source.predictors._rawValue + 1);
  v5 = *(_QWORD *)(v1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A447FFEC((uint64_t)v6, v3, v8, v4);

  if (!v2)
  {
    LOBYTE(v5) = v8[0];

  }
  return v5 & 1;
}

void REMSuggestedAttributesHarvester.postSuggestionAnalytics(for:)(void **a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  _BYTE v4[8];
  void *v5;

  v2 = *a1;
  type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_retain();
  sub_1A4480AE4((uint64_t)v3, v2, v4);
  if (!v1)
  {

    v3 = v5;
  }
  swift_release();

}

void REMSuggestedAttributesHarvester.recordSuggestion(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unsigned int v5;
  id v6;
  id v7;
  _BYTE v8[8];
  void *v9;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(a1 + 24);
  v5 = *(unsigned __int16 *)(a1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionInvocation();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  swift_bridgeObjectRetain();
  v7 = v4;
  sub_1A44815C4((uint64_t)v6, v3, v2, v5, (uint64_t)v7, v8);
  if (!v1)
  {

    v6 = v9;
  }

  swift_bridgeObjectRelease();
}

uint64_t static REMSuggestedAttributesHarvester.Invocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMSuggestedAttributesHarvester.Invocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMSuggestedAttributesHarvester.Invocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_init);

  return v3;
}

id REMSuggestedAttributesHarvester.Invocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMSuggestedAttributesHarvester.MentionsExtractionInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMSuggestedAttributesHarvester.FeedbackInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMSuggestedAttributesHarvester.PostSuggestionAnalyticsInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t static REMSuggestedAttributesHarvester.RecordSuggestionInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMSuggestedAttributesHarvester.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMSuggestedAttributesHarvester.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A4582424(uint64_t a1, uint64_t a2)
{
  return REMSuggestedAttributesHarvester.harvestAttributes(for:elector:)(a1, a2);
}

uint64_t sub_1A4582444(uint64_t a1)
{
  return REMSuggestedAttributesHarvester.extractMentions(for:)(a1);
}

uint64_t sub_1A4582464(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  _BYTE v8[8];
  id v9;

  v3 = *(void **)a1;
  v4 = *(void **)(a1 + 8);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  type metadata accessor for REMSuggestedAttributesHarvester.FeedbackInvocation();
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A447FFEC((uint64_t)v6, v3, v8, v4);

  if (!v2)
  {
    LOBYTE(v5) = v8[0];

  }
  return v5 & 1;
}

void sub_1A45824FC(void **a1)
{
  REMSuggestedAttributesHarvester.postSuggestionAnalytics(for:)(a1);
}

void sub_1A458251C(uint64_t a1)
{
  REMSuggestedAttributesHarvester.recordSuggestion(for:)(a1);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == 1)
      v5 = 1;
    else
      v5 = 2;
  }
  else
  {
    v5 = 0;
  }
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.allCases.getter()
{
  return &unk_1E4C11F10;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 0x65766974616C6572;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 0x65766974616C6572;
}

uint64_t sub_1A45826C4(char *a1, char *a2)
{
  return sub_1A4669454(*a1, *a2);
}

uint64_t sub_1A45826D0()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4582760()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45827CC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior::CodingKeys_optional sub_1A4582858(Swift::String *a1)
{
  return REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A4582864(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65766974616C6572;
  if (*v1)
    v2 = 0x6E656469666E6F63;
  v3 = 0xEF74726F70707553;
  if (*v1)
    v3 = 0xEA00000000006563;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A45828B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 0x65766974616C6572;
}

void sub_1A4582904(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FD08;
}

uint64_t sub_1A4582914()
{
  sub_1A4582AF8();
  return sub_1A4691DB8();
}

uint64_t sub_1A458293C()
{
  sub_1A4582AF8();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesHarvester.Request.CoreBehavior.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.relativeSupport.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.confidence.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior __swiftcall REMSuggestedAttributesHarvester.Request.CoreBehavior.init(relativeSupport:confidence:)(Swift::Double_optional relativeSupport, Swift::Double_optional confidence)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CoreBehavior result;

  *(_QWORD *)v4 = *(_QWORD *)&relativeSupport.is_nil;
  *(_BYTE *)(v4 + 8) = confidence.is_nil;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3 & 1;
  result.confidence.value = confidence.value;
  result.relativeSupport.value = relativeSupport.value;
  result.confidence.is_nil = confidence.is_nil;
  result.relativeSupport.is_nil = relativeSupport.is_nil;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242248);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v10 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4582AF8();
  sub_1A4691D40();
  v12 = 0;
  sub_1A4691830();
  if (!v2)
  {
    v11 = 1;
    sub_1A4691830();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

unint64_t sub_1A4582AF8()
{
  unint64_t result;

  result = qword_1ED2437D8;
  if (!qword_1ED2437D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437D8);
  }
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.CoreBehavior.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;
  char *v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2425D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4582AF8();
  sub_1A4691D28();
  if (!v2)
  {
    v19 = 0;
    v9 = sub_1A4691764();
    v11 = v10;
    v18 = 1;
    v13 = sub_1A4691764();
    v14 = v8;
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v11 & 1;
    *(_QWORD *)(a2 + 16) = v13;
    *(_BYTE *)(a2 + 24) = v16 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4582CA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.Request.CoreBehavior.init(from:)(a1, a2);
}

uint64_t sub_1A4582CB4(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.Request.CoreBehavior.encode(to:)(a1);
}

uint64_t sub_1A4582CC8()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.init(stringValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void *static REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.allCases.getter()
{
  return &unk_1E4C11FA8;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.rawValue.getter()
{
  return 0xD000000000000013;
}

unint64_t REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys.stringValue.getter()
{
  return 0xD000000000000013;
}

uint64_t sub_1A4582DEC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A4582E40()
{
  return sub_1A4690948();
}

uint64_t sub_1A4582E5C()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A4582EAC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A4582EFC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001A46BC5D0;
}

unint64_t sub_1A4582F1C()
{
  return 0xD000000000000013;
}

uint64_t sub_1A4582F38@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A4582F8C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FD30;
}

uint64_t sub_1A4582F9C()
{
  sub_1A4583104();
  return sub_1A4691DB8();
}

uint64_t sub_1A4582FC4()
{
  sub_1A4583104();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesHarvester.Request.Embedding.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.neighborsToConsider.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::Embedding __swiftcall REMSuggestedAttributesHarvester.Request.Embedding.init(neighborsToConsider:)(ReminderKitInternal::REMSuggestedAttributesHarvester::Request::Embedding neighborsToConsider)
{
  uint64_t v1;

  *(_QWORD *)v1 = neighborsToConsider.neighborsToConsider.value;
  *(_BYTE *)(v1 + 8) = neighborsToConsider.neighborsToConsider.is_nil;
  return neighborsToConsider;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242250);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4583104();
  sub_1A4691D40();
  sub_1A469183C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A4583104()
{
  unint64_t result;

  result = qword_1ED2437F0;
  if (!qword_1ED2437F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437F0);
  }
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.Embedding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2425D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4583104();
  sub_1A4691D28();
  if (!v2)
  {
    v9 = sub_1A4691770();
    v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_BYTE *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A458326C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.Request.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1A4583280(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242250);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4583104();
  sub_1A4691D40();
  sub_1A469183C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A4583370()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 12;
  if (v3 < 0xC)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional __swiftcall REMSuggestedAttributesHarvester.Request.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 12;
  return (ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesHarvester.Request.CodingKeys.allCases.getter()
{
  return &unk_1E4C0FCD8;
}

uint64_t REMSuggestedAttributesHarvester.Request.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4583468 + 4 * byte_1A46A2DF0[*v0]))(0x4F64656C62616E65, 0xEE00534F63616D6ELL);
}

unint64_t sub_1A4583478()
{
  return 0xD000000000000015;
}

uint64_t sub_1A4583510()
{
  return 0x6168654265726F63;
}

uint64_t sub_1A4583530()
{
  return 0x6E69646465626D65;
}

unint64_t sub_1A4583554()
{
  return 0xD000000000000013;
}

uint64_t REMSuggestedAttributesHarvester.Request.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45835B8 + 4 * byte_1A46A2DFC[*v0]))(0x4F64656C62616E65, 0xEE00534F63616D6ELL);
}

unint64_t sub_1A45835C8()
{
  return 0xD000000000000015;
}

uint64_t sub_1A4583660()
{
  return 0x6168654265726F63;
}

uint64_t sub_1A4583680()
{
  return 0x6E69646465626D65;
}

unint64_t sub_1A45836A4()
{
  return 0xD000000000000013;
}

uint64_t sub_1A45836CC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A4669508(*a1, *a2);
}

uint64_t sub_1A45836D8()
{
  sub_1A4691C8C();
  REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A458373C()
{
  REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A458378C()
{
  sub_1A4691C8C();
  REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional sub_1A45837EC(Swift::String *a1)
{
  return REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A45837F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributesHarvester.Request.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional sub_1A4583820@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributesHarvester::Request::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributesHarvester.Request.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A4583854(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FCD8;
}

uint64_t sub_1A4583864()
{
  sub_1A4587358();
  return sub_1A4691DB8();
}

uint64_t sub_1A458388C()
{
  sub_1A4587358();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.Request.enabledOnmacOS.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesHarvester.Request.enabledOniOS.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t REMSuggestedAttributesHarvester.Request.modelPipelineSwitcher.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesHarvester.Request.reminder.getter()
{
  return swift_retain();
}

void *REMSuggestedAttributesHarvester.Request.accountID.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t REMSuggestedAttributesHarvester.Request.languageIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedAttributesHarvester.Request.hasPasteboardURL.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t REMSuggestedAttributesHarvester.Request.reminderHasURL.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

void REMSuggestedAttributesHarvester.Request.coreBehavior.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;

  v2 = *(_BYTE *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
}

void REMSuggestedAttributesHarvester.Request.embedding.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 96);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 88);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t REMSuggestedAttributesHarvester.Request.allowLocalOverrides.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 97);
}

uint64_t REMSuggestedAttributesHarvester.Request.allowCloudOverrides.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 98);
}

uint64_t REMSuggestedAttributesHarvester.Request.init(enabledOnmacOS:enabledOniOS:modelPipelineSwitcher:reminderInput:accountID:languageIdentifier:hasPasteboardURL:reminderHasURL:coreBehavior:embedding:allowLocalOverrides:allowCloudOverrides:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t *a11, uint64_t *a12, char a13, char a14)
{
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v14 = *a11;
  v15 = *((_BYTE *)a11 + 8);
  v16 = a11[2];
  v17 = *((_BYTE *)a11 + 24);
  v18 = *a12;
  v19 = *((_BYTE *)a12 + 8);
  *(_BYTE *)a9 = (result == 2) | result & 1;
  *(_BYTE *)(a9 + 1) = (a2 == 2) | a2 & 1;
  *(_QWORD *)(a9 + 8) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_QWORD *)(a9 + 40) = a7;
  *(_BYTE *)(a9 + 48) = a8;
  *(_BYTE *)(a9 + 49) = a10;
  *(_QWORD *)(a9 + 56) = v14;
  *(_BYTE *)(a9 + 64) = v15;
  *(_QWORD *)(a9 + 72) = v16;
  *(_BYTE *)(a9 + 80) = v17;
  *(_QWORD *)(a9 + 88) = v18;
  *(_BYTE *)(a9 + 96) = v19;
  *(_BYTE *)(a9 + 97) = a13;
  *(_BYTE *)(a9 + 98) = a14;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD v16[4];
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  int v35;
  char v36;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242240);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(unsigned __int8 *)(v1 + 1);
  v7 = *(_QWORD *)(v1 + 8);
  v28 = *(_QWORD *)(v1 + 16);
  v29 = v7;
  v8 = *(_QWORD *)(v1 + 24);
  v26 = *(_QWORD *)(v1 + 32);
  v27 = v8;
  v25 = *(_QWORD *)(v1 + 40);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 48);
  v23 = *(unsigned __int8 *)(v1 + 49);
  v24 = v8;
  v19 = *(_QWORD *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 64);
  v22 = *(_QWORD *)(v1 + 72);
  LODWORD(v5) = *(unsigned __int8 *)(v1 + 80);
  v20 = v8;
  v21 = v5;
  v17 = *(_QWORD *)(v1 + 88);
  v18 = *(unsigned __int8 *)(v1 + 96);
  v16[3] = *(unsigned __int8 *)(v1 + 97);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587358();
  v9 = v3;
  sub_1A4691D40();
  LOBYTE(v31) = 0;
  v10 = v6;
  v11 = v30;
  sub_1A4691860();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v13 = v28;
  v12 = v29;
  v14 = v27;
  LOBYTE(v31) = 1;
  sub_1A4691860();
  v31 = v12;
  v36 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240290);
  sub_1A4587424(&qword_1ED23E738, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAFA8], MEMORY[0x1E0DEA0B8]);
  sub_1A4691890();
  v31 = v13;
  v36 = 3;
  type metadata accessor for REMSuggestedAttributeInput(0);
  sub_1A4436344(&qword_1ED241EC0, type metadata accessor for REMSuggestedAttributeInput, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributeInput);
  sub_1A4691890();
  v31 = v14;
  v36 = 4;
  type metadata accessor for REMObjectID_Codable();
  sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A4691848();
  LOBYTE(v31) = 5;
  sub_1A4691818();
  LOBYTE(v31) = 6;
  sub_1A4691860();
  LOBYTE(v31) = 7;
  sub_1A4691860();
  v31 = v19;
  v32 = v20;
  v33 = v22;
  v34 = v21;
  v36 = 8;
  sub_1A458739C();
  sub_1A4691890();
  v31 = v17;
  v32 = v18;
  v36 = 9;
  sub_1A45873E0();
  sub_1A4691890();
  LOBYTE(v31) = 10;
  sub_1A4691860();
  LOBYTE(v31) = 11;
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v9);
}

void REMSuggestedAttributesHarvester.Request.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  int v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  void *v25;
  int v26;
  uint64_t v27;
  int v28;
  void *v29;
  int v30;
  int v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  int v42;
  char v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2425C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587358();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v38) = 0;
    v9 = sub_1A4691794();
    LOBYTE(v38) = 1;
    v10 = sub_1A4691794();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240290);
    v43 = 2;
    sub_1A4587424(&qword_1ED23EAB0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAFC0], MEMORY[0x1E0DEA0D8]);
    sub_1A46917C4();
    v42 = v10;
    v11 = v38;
    type metadata accessor for REMSuggestedAttributeInput(0);
    v43 = 3;
    sub_1A4436344(&qword_1ED2424C8, type metadata accessor for REMSuggestedAttributeInput, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributeInput);
    v37 = v11;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v12 = (uint64_t)v38;
    type metadata accessor for REMObjectID_Codable();
    v43 = 4;
    sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    v36 = v12;
    swift_retain();
    sub_1A469177C();
    v13 = v38;
    LOBYTE(v38) = 5;
    v35 = v13;
    v14 = v13;
    v33 = sub_1A469174C();
    v34 = v15;
    LOBYTE(v38) = 6;
    swift_bridgeObjectRetain();
    v31 = sub_1A4691794();
    v32 = v14;
    v16 = v34;
    LOBYTE(v38) = 7;
    v30 = sub_1A4691794();
    v43 = 8;
    sub_1A4587488();
    sub_1A46917C4();
    v29 = v38;
    v28 = v39;
    v27 = v40;
    v26 = v41;
    v43 = 9;
    sub_1A45874CC();
    sub_1A46917C4();
    v25 = v38;
    v24 = v39;
    LOBYTE(v38) = 10;
    v23 = sub_1A4691794();
    LOBYTE(v38) = 11;
    LOBYTE(v12) = sub_1A4691794();
    HIDWORD(v22) = v9 & 1;
    v17 = v42 & 1;
    v42 = v31 & 1;
    v31 = v30 & 1;
    v18 = *(void (**)(char *, uint64_t))(v6 + 8);
    v19 = v23 & 1;
    v18(v8, v5);
    *(_BYTE *)a2 = BYTE4(v22);
    *(_BYTE *)(a2 + 1) = v17;
    v20 = v36;
    *(_QWORD *)(a2 + 8) = v37;
    *(_QWORD *)(a2 + 16) = v20;
    v21 = v33;
    *(_QWORD *)(a2 + 24) = v35;
    *(_QWORD *)(a2 + 32) = v21;
    *(_QWORD *)(a2 + 40) = v16;
    *(_BYTE *)(a2 + 48) = v42;
    *(_BYTE *)(a2 + 49) = v31;
    *(_QWORD *)(a2 + 56) = v29;
    *(_BYTE *)(a2 + 64) = v28;
    *(_QWORD *)(a2 + 72) = v27;
    *(_BYTE *)(a2 + 80) = v26;
    *(_QWORD *)(a2 + 88) = v25;
    *(_BYTE *)(a2 + 96) = v24;
    *(_BYTE *)(a2 + 97) = v19;
    *(_BYTE *)(a2 + 98) = v12 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();
  }
}

void sub_1A45844D8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMSuggestedAttributesHarvester.Request.init(from:)(a1, a2);
}

uint64_t sub_1A45844EC(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.Request.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.reminderTitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id REMSuggestedAttributesHarvester.MentionsExtractionRequest.listID.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.editingSessionID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest() + 24);
  v4 = sub_1A46900FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.init(reminderTitle:listID:editingSessionID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v6;
  uint64_t v7;

  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  v6 = (char *)a5
     + *(int *)(type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest() + 24);
  v7 = sub_1A46900FC();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6, a4, v7);
}

uint64_t sub_1A45845D4()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x44497473696CLL;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x7265646E696D6572;
}

uint64_t sub_1A458463C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4589EC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4584660()
{
  sub_1A4587510();
  return sub_1A4691DB8();
}

uint64_t sub_1A4584688()
{
  sub_1A4587510();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242238);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587510();
  sub_1A4691D40();
  v12 = 0;
  sub_1A4691854();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    v10[15] = 1;
    type metadata accessor for REMObjectID_Codable();
    sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A4691890();
    type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
    v10[14] = 2;
    sub_1A46900FC();
    sub_1A4436344(&qword_1ED243D00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void REMSuggestedAttributesHarvester.MentionsExtractionRequest.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v20 = a2;
  v21 = sub_1A46900FC();
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2425C0);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest();
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1A4587510();
  v12 = v24;
  sub_1A4691D28();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  else
  {
    v18 = v8;
    v24 = v4;
    v14 = v21;
    v13 = v22;
    v28 = 0;
    v15 = (uint64_t)v10;
    *v10 = sub_1A4691788();
    v10[1] = v16;
    type metadata accessor for REMObjectID_Codable();
    v27 = 1;
    sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    v10[2] = v25;
    v26 = 2;
    sub_1A4436344(&qword_1ED243F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v17 = v24;
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v15 + *(int *)(v18 + 24), v17, v14);
    sub_1A4581A64(v15, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
    sub_1A4581AA8(v15);
  }
}

void sub_1A4584B3C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMSuggestedAttributesHarvester.MentionsExtractionRequest.init(from:)(a1, a2);
}

uint64_t sub_1A4584B50(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.MentionsExtractionRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.FeedbackRequest.source.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

double REMSuggestedAttributesHarvester.FeedbackRequest.feedbackFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::FeedbackRequest __swiftcall REMSuggestedAttributesHarvester.FeedbackRequest.init(source:feedbackFactor:)(ReminderKitInternal::REMSuggestedAttributeOutput::Source source, Swift::Double feedbackFactor)
{
  uint64_t v2;
  ReminderKitInternal::REMSuggestedAttributesHarvester::FeedbackRequest result;

  *(_QWORD *)v2 = *(_QWORD *)source.predictors._rawValue;
  *(Swift::Double *)(v2 + 8) = feedbackFactor;
  result.feedbackFactor = feedbackFactor;
  result.source = source;
  return result;
}

uint64_t sub_1A4584B88()
{
  _BYTE *v0;

  if (*v0)
    return 0x6B63616264656566;
  else
    return 0x656372756F73;
}

uint64_t sub_1A4584BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A458A030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4584BF0()
{
  sub_1A4587554();
  return sub_1A4691DB8();
}

uint64_t sub_1A4584C18()
{
  sub_1A4587554();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.FeedbackRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE v10[8];
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2427E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587554();
  sub_1A4691D40();
  v11 = v8;
  v10[7] = 0;
  sub_1A450DA5C();
  sub_1A4691890();
  if (!v2)
  {
    v10[6] = 1;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesHarvester.FeedbackRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242A30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587554();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13[7] = 0;
  sub_1A450D9D4();
  sub_1A46917C4();
  v9 = v14;
  v13[6] = 1;
  swift_bridgeObjectRetain();
  sub_1A46917A0();
  v11 = v10;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4584F10@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.FeedbackRequest.init(from:)(a1, a2);
}

uint64_t sub_1A4584F24(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.FeedbackRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.reminder.getter()
{
  return swift_retain();
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.init(reminder:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A4584F48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7265646E696D6572 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A4584FDC()
{
  sub_1A4587598();
  return sub_1A4691DB8();
}

uint64_t sub_1A4585004()
{
  sub_1A4587598();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F348);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587598();
  sub_1A4691D40();
  v9[1] = v7;
  type metadata accessor for REMSuggestedAttributeInput(0);
  sub_1A4436344(&qword_1ED241EC0, type metadata accessor for REMSuggestedAttributeInput, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributeInput);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F738);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587598();
  sub_1A4691D28();
  if (!v2)
  {
    type metadata accessor for REMSuggestedAttributeInput(0);
    sub_1A4436344(&qword_1ED2424C8, type metadata accessor for REMSuggestedAttributeInput, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributeInput);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4585284@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.init(from:)(a1, a2);
}

uint64_t sub_1A4585298(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.suggestionValue.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void REMSuggestedAttributesHarvester.RecordSuggestionRequest.suggestionType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

void REMSuggestedAttributesHarvester.RecordSuggestionRequest.pipeline.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

id REMSuggestedAttributesHarvester.RecordSuggestionRequest.reminderID.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.init(suggestionValue:suggestionType:pipeline:reminderID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  char v7;

  v6 = *a3;
  v7 = *a4;
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_BYTE *)(a6 + 16) = v6;
  *(_BYTE *)(a6 + 17) = v7;
  *(_QWORD *)(a6 + 24) = a5;
  return result;
}

uint64_t sub_1A4585314()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4585350 + 4 * byte_1A46A2E08[*v0]))(0x6974736567677573, 0xEF65756C61566E6FLL);
}

uint64_t sub_1A4585364()
{
  return 0x656E696C65706970;
}

uint64_t sub_1A458537C()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A4585398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A458A13C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45853BC()
{
  sub_1A45875DC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45853E4()
{
  sub_1A45875DC();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F340);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 16);
  v18 = *(unsigned __int8 *)(v1 + 17);
  v19 = v8;
  v17 = *(_QWORD *)(v1 + 24);
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A45875DC();
  sub_1A4691D40();
  v26 = 0;
  sub_1A4691854();
  if (!v2)
  {
    v13 = v18;
    v14 = v17;
    v25 = v19;
    v24 = 1;
    sub_1A4587620();
    sub_1A4691890();
    v23 = v13;
    v22 = 2;
    sub_1A450D908();
    sub_1A4691890();
    v20 = v14;
    v21 = 3;
    type metadata accessor for REMObjectID_Codable();
    sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t REMSuggestedAttributesHarvester.RecordSuggestionRequest.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  id v14;
  int v15;
  int v16;
  void *v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  char v21;
  unsigned __int8 v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F730);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45875DC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  v9 = sub_1A4691788();
  v11 = v10;
  v21 = 1;
  sub_1A4587664();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v16 = v22;
  v19 = 2;
  sub_1A450D840();
  sub_1A46917C4();
  v15 = v20;
  type metadata accessor for REMObjectID_Codable();
  v18 = 3;
  sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v17;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 17) = v15;
  *(_QWORD *)(a2 + 24) = v13;
  v14 = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4585868@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.RecordSuggestionRequest.init(from:)(a1, a2);
}

uint64_t sub_1A458587C(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.RecordSuggestionRequest.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.Response.heuristicResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1A44976A4(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMSuggestedAttributesHarvester.Response.embeddingResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 64);
  v3 = *(_QWORD *)(v1 + 72);
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(_QWORD *)(v1 + 88);
  v6 = *(_QWORD *)(v1 + 96);
  v7 = *(_QWORD *)(v1 + 104);
  v8 = *(_QWORD *)(v1 + 112);
  v9 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1A44976A4(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMSuggestedAttributesHarvester.Response.coreBehaviorResult.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 128);
  v3 = *(_QWORD *)(v1 + 136);
  v4 = *(_QWORD *)(v1 + 144);
  v5 = *(_QWORD *)(v1 + 152);
  v6 = *(_QWORD *)(v1 + 160);
  v7 = *(_QWORD *)(v1 + 168);
  v8 = *(_QWORD *)(v1 + 176);
  v9 = *(_BYTE *)(v1 + 184);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1A44976A4(v2, v3, v4, v5, v6, v7, v8, v9);
}

__n128 REMSuggestedAttributesHarvester.Response.init(heuristicResult:embeddingResult:coreBehaviorResult:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  char v12;
  char v13;

  v4 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a3 + 48);
  v5 = *(_BYTE *)(a1 + 56);
  v13 = *(_BYTE *)(a2 + 56);
  v12 = *(_BYTE *)(a3 + 56);
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a4 + 48) = v4;
  *(_BYTE *)(a4 + 56) = v5;
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a4 + 64) = *(_OWORD *)a2;
  *(_OWORD *)(a4 + 80) = v9;
  *(_OWORD *)(a4 + 96) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a4 + 112) = v6;
  *(_BYTE *)(a4 + 120) = v13;
  v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 128) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 144) = v10;
  result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 160) = result;
  *(_QWORD *)(a4 + 176) = v7;
  *(_BYTE *)(a4 + 184) = v12;
  return result;
}

uint64_t sub_1A4585990()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6E69646465626D65;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 0x6974736972756568;
}

uint64_t sub_1A45859FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A458A340(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4585A20()
{
  sub_1A45876A8();
  return sub_1A4691DB8();
}

uint64_t sub_1A4585A48()
{
  sub_1A45876A8();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.Response.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  int v42;
  char v43;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242610);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v34 = v1[1];
  v35 = v7;
  v33 = v1[2];
  v8 = *((_QWORD *)v1 + 6);
  v9 = *((_BYTE *)v1 + 56);
  v10 = *((_QWORD *)v1 + 8);
  v31 = *((_QWORD *)v1 + 9);
  v32 = v10;
  v11 = *((_QWORD *)v1 + 10);
  v29 = *((_QWORD *)v1 + 11);
  v30 = v11;
  v12 = *((_QWORD *)v1 + 12);
  v27 = *((_QWORD *)v1 + 13);
  v28 = v12;
  v26 = *((_QWORD *)v1 + 14);
  v42 = *((unsigned __int8 *)v1 + 120);
  v25 = *((_QWORD *)v1 + 16);
  v24 = *((_QWORD *)v1 + 17);
  v23 = *((_QWORD *)v1 + 18);
  v22 = *((_QWORD *)v1 + 19);
  v21 = *((_QWORD *)v1 + 20);
  v20 = *((_QWORD *)v1 + 21);
  v19 = *((_QWORD *)v1 + 22);
  v18 = *((unsigned __int8 *)v1 + 184);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45876A8();
  sub_1A4691D40();
  v37 = v35;
  v38 = v34;
  v39 = v33;
  v40 = v8;
  v41 = v9;
  v43 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2402C0);
  sub_1A4587864(&qword_1ED23EB00, (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
  v13 = v36;
  sub_1A4691890();
  if (!v13)
  {
    v14 = v24;
    v15 = v25;
    *(_QWORD *)&v37 = v32;
    *((_QWORD *)&v37 + 1) = v31;
    *(_QWORD *)&v38 = v30;
    *((_QWORD *)&v38 + 1) = v29;
    *(_QWORD *)&v39 = v28;
    *((_QWORD *)&v39 + 1) = v27;
    v40 = v26;
    v41 = v42;
    v43 = 1;
    sub_1A4691890();
    *(_QWORD *)&v37 = v15;
    *((_QWORD *)&v37 + 1) = v14;
    *(_QWORD *)&v38 = v23;
    *((_QWORD *)&v38 + 1) = v22;
    *(_QWORD *)&v39 = v21;
    *((_QWORD *)&v39 + 1) = v20;
    v40 = v19;
    v41 = v18;
    v43 = 2;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesHarvester.Response.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _OWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  char v96;
  char v97;
  unsigned __int8 v98;
  unsigned __int8 v99;
  char v100;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242220);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1A45876A8();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  v55 = v6;
  v53 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2402C0);
  LOBYTE(v57) = 0;
  sub_1A4587864(qword_1ED23E850, (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
  sub_1A46917C4();
  v10 = v74;
  v11 = v75;
  v99 = v75;
  LOBYTE(v57) = 1;
  v54 = v68;
  v50 = v70;
  v51 = v69;
  v48 = v72;
  v49 = v71;
  v47 = v73;
  sub_1A44976A4(v68, v69, v70, v71, v72, v73, v74, v75);
  sub_1A46917C4();
  v52 = v10;
  v40 = v11;
  LOBYTE(v10) = v75;
  v98 = v75;
  v100 = 2;
  v12 = v68;
  v44 = v70;
  v45 = v69;
  v42 = v72;
  v43 = v71;
  v41 = v73;
  v46 = v74;
  sub_1A44976A4(v68, v69, v70, v71, v72, v73, v74, v75);
  v38 = 0;
  sub_1A46917C4();
  v39 = v12;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v5);
  v55 = v92;
  v37 = v93;
  v38 = *((_QWORD *)&v92 + 1);
  v35 = v94;
  v36 = *((_QWORD *)&v93 + 1);
  v33 = v95;
  v34 = *((_QWORD *)&v94 + 1);
  v97 = v96;
  *(_QWORD *)&v57 = v54;
  *((_QWORD *)&v57 + 1) = v51;
  *(_QWORD *)&v58 = v50;
  *((_QWORD *)&v58 + 1) = v49;
  *(_QWORD *)&v59 = v48;
  *((_QWORD *)&v59 + 1) = v47;
  *(_QWORD *)&v60 = v52;
  BYTE8(v60) = v40;
  v13 = v12;
  v14 = v44;
  v15 = v45;
  *(_QWORD *)&v61 = v12;
  *((_QWORD *)&v61 + 1) = v45;
  v17 = v42;
  v16 = v43;
  *(_QWORD *)&v62 = v44;
  *((_QWORD *)&v62 + 1) = v43;
  v18 = v41;
  *(_QWORD *)&v63 = v42;
  *((_QWORD *)&v63 + 1) = v41;
  *(_QWORD *)&v64 = v46;
  BYTE8(v64) = v10;
  v65 = v92;
  v66 = v93;
  v67[0] = v94;
  *(_QWORD *)&v67[1] = v95;
  BYTE8(v67[1]) = v96;
  sub_1A449779C((uint64_t)&v57, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976A4);
  sub_1A44976DC(v13, v15, v14, v16, v17, v18, v46, v10);
  v19 = v54;
  v21 = v50;
  v20 = v51;
  v23 = v48;
  v22 = v49;
  v24 = v47;
  sub_1A44976DC(v54, v51, v50, v49, v48, v47, v52, v40);
  v25 = v66;
  v26 = v53;
  v53[8] = v65;
  v26[9] = v25;
  v26[10] = v67[0];
  *(_OWORD *)((char *)v26 + 169) = *(_OWORD *)((char *)v67 + 9);
  v27 = v62;
  v26[4] = v61;
  v26[5] = v27;
  v28 = v64;
  v26[6] = v63;
  v26[7] = v28;
  v29 = v58;
  *v26 = v57;
  v26[1] = v29;
  v30 = v60;
  v26[2] = v59;
  v26[3] = v30;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  v68 = v19;
  v69 = v20;
  v70 = v21;
  v71 = v22;
  v72 = v23;
  v73 = v24;
  v74 = v52;
  v75 = v99;
  v76 = v39;
  v77 = v45;
  v78 = v44;
  v79 = v43;
  v80 = v42;
  v81 = v41;
  v82 = v46;
  v83 = v98;
  v84 = v55;
  v85 = v38;
  v86 = v37;
  v87 = v36;
  v88 = v35;
  v89 = v34;
  v90 = v33;
  v91 = v97;
  return sub_1A449779C((uint64_t)&v68, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1A44976DC);
}

uint64_t sub_1A45862CC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.Response.init(from:)(a1, a2);
}

uint64_t sub_1A45862E0(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.Response.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionResponse.result.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  v9 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1A44976A4(v2, v3, v4, v5, v6, v7, v8, v9);
}

__n128 REMSuggestedAttributesHarvester.MentionsExtractionResponse.init(result:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  __n128 result;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a2 + 32) = result;
  *(_QWORD *)(a2 + 48) = v2;
  *(_BYTE *)(a2 + 56) = v3;
  return result;
}

uint64_t sub_1A4586344()
{
  return 0x746C75736572;
}

uint64_t sub_1A458635C()
{
  sub_1A458791C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4586384()
{
  sub_1A458791C();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionResponse.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242608);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v12 = v1[1];
  v13 = v7;
  v11 = v1[2];
  v8 = *((_QWORD *)v1 + 6);
  v9 = *((_BYTE *)v1 + 56);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A458791C();
  sub_1A4691D40();
  v14 = v13;
  v15 = v12;
  v16 = v11;
  v17 = v8;
  v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2402C0);
  sub_1A4587864(&qword_1ED23EB00, (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesHarvester.MentionsExtractionResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[3];
  uint64_t v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242218);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A458791C();
  sub_1A4691D28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2402C0);
    sub_1A4587864(qword_1ED23E850, (uint64_t)&protocol conformance descriptor for <> Result<A, B>);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v15;
    v10 = v16;
    v11 = v14[1];
    v12 = v14[2];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = v12;
    *(_QWORD *)(a2 + 48) = v9;
    *(_BYTE *)(a2 + 56) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A458664C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesHarvester.MentionsExtractionResponse.init(from:)(a1, a2);
}

uint64_t sub_1A4586660(_QWORD *a1)
{
  return REMSuggestedAttributesHarvester.MentionsExtractionResponse.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesHarvester.BooleanResponse.result.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ReminderKitInternal::REMSuggestedAttributesHarvester::BooleanResponse __swiftcall REMSuggestedAttributesHarvester.BooleanResponse.init(result:)(ReminderKitInternal::REMSuggestedAttributesHarvester::BooleanResponse result)
{
  ReminderKitInternal::REMSuggestedAttributesHarvester::BooleanResponse *v1;

  v1->result = result.result;
  return result;
}

uint64_t sub_1A4586684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A4586710()
{
  sub_1A4587960();
  return sub_1A4691DB8();
}

uint64_t sub_1A4586738()
{
  sub_1A4587960();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesHarvester.BooleanResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587960();
  sub_1A4691D40();
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMSuggestedAttributesHarvester.BooleanResponse.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F318);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587960();
  sub_1A4691D28();
  if (!v2)
  {
    v9 = sub_1A4691794();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4586950@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMSuggestedAttributesHarvester.BooleanResponse.init(from:)(a1, a2);
}

uint64_t sub_1A4586964(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4587960();
  sub_1A4691D40();
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

ReminderKitInternal::REMSuggestedAttributesHarvester::CachedSuggestionType_optional __swiftcall REMSuggestedAttributesHarvester.CachedSuggestionType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesHarvester::CachedSuggestionType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMSuggestedAttributesHarvester.CachedSuggestionType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4586ACC + 4 * byte_1A46A2E0C[*v0]))(1953720684, 0xE400000000000000);
}

uint64_t sub_1A4586ACC()
{
  return 0x6E65727275636572;
}

uint64_t sub_1A4586AE8()
{
  return 0x664F796144657564;
}

uint64_t sub_1A4586B08()
{
  return 0x6144657544706C6ELL;
}

uint64_t sub_1A4586B28()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A4586B40()
{
  return 0x656C6369686576;
}

uint64_t sub_1A4586B58()
{
  return 0x64656767616C66;
}

uint64_t sub_1A4586B70()
{
  return 0x797469726F697270;
}

uint64_t sub_1A4586B88()
{
  return 6775156;
}

uint64_t sub_1A4586B98()
{
  return 0x746361746E6F63;
}

void sub_1A4586BB0(char *a1)
{
  sub_1A4669514(*a1);
}

uint64_t sub_1A4586BBC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A46368C4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

void sub_1A4586C00(uint64_t a1)
{
  char *v1;

  sub_1A46368C4(a1, *v1);
}

uint64_t sub_1A4586C08()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A4691C8C();
  sub_1A46368C4((uint64_t)v3, v1);
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributesHarvester::CachedSuggestionType_optional sub_1A4586C48(Swift::String *a1)
{
  return REMSuggestedAttributesHarvester.CachedSuggestionType.init(rawValue:)(*a1);
}

uint64_t sub_1A4586C54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributesHarvester.CachedSuggestionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A4586C78()
{
  sub_1A458A4B8();
  return sub_1A4690B70();
}

uint64_t sub_1A4586CD4()
{
  sub_1A458A4B8();
  return sub_1A4690B34();
}

void static REMSuggestedAttributesHarvester.modelPipelineValueFromUserDefaults(for:)(unsigned __int8 *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  _BYTE v7[40];
  __int128 v8;
  __int128 v9;

  v1 = *a1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_daemonUserDefaults);
  v3 = objc_msgSend(v2, sel_suggestedAttributesHarvestingOverrides);

  if (v3)
  {
    v4 = sub_1A4690708();

  }
  else
  {
    v4 = sub_1A443D4F0(MEMORY[0x1E0DEE9D8]);
  }
  *(_QWORD *)&v8 = 0xD000000000000015;
  *((_QWORD *)&v8 + 1) = 0x80000001A46BC600;
  sub_1A4691374();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1A443E720((uint64_t)v7), (v6 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v7);
  if (*((_QWORD *)&v9 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240290);
    swift_dynamicCast();
  }
  else
  {
    sub_1A4496084((uint64_t)&v8);
  }
  __asm { BR              X9 }
}

uint64_t sub_1A4586EB4()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 16) && (v1 = sub_1A443E4C8(5131883, 0xE300000000000000), (v2 & 1) != 0))
    v3 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 56) + v1);
  else
    v3 = 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

void static REMSuggestedAttributesHarvester.setModelPipelineValueInUserDefaults(for:value:)(unsigned __int8 *a1)
{
  uint64_t v1;
  id v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  char v6;
  _BYTE v7[40];
  __int128 v8;
  __int128 v9;

  v1 = *a1;
  v2 = objc_msgSend((id)objc_opt_self(), sel_daemonUserDefaults);
  v3 = objc_msgSend(v2, sel_suggestedAttributesHarvestingOverrides);

  if (v3)
  {
    v4 = sub_1A4690708();

  }
  else
  {
    v4 = sub_1A443D4F0(MEMORY[0x1E0DEE9D8]);
  }
  sub_1A4691374();
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_1A443E720((uint64_t)v7), (v6 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v8);
  }
  else
  {
    v8 = 0u;
    v9 = 0u;
  }
  sub_1A444ABC0((uint64_t)v7);
  if (*((_QWORD *)&v9 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240290);
    swift_dynamicCast();
  }
  else
  {
    sub_1A4496084((uint64_t)&v8);
  }
  __asm { BR              X9 }
}

void sub_1A4587164()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  char v6;
  id v7;
  void *v8;
  _OWORD v9[2];
  _QWORD v10[5];
  __int128 v11;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10[0] = v1;
  sub_1A445F660(v2 & 1, 5131883, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *((_QWORD *)&v11 + 1) = v4 | 0x8000000000000000;
  sub_1A4691374();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240290);
  *(_QWORD *)&v11 = v1;
  sub_1A444A940(&v11, v9);
  v6 = swift_isUniquelyReferenced_nonNull_native();
  sub_1A445DE6C(v9, (uint64_t)v10, v6);
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v10);
  v7 = objc_msgSend(v0, sel_daemonUserDefaults, v3);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setSuggestedAttributesHarvestingOverrides_, v8);
  swift_bridgeObjectRelease();

}

uint64_t _s19ReminderKitInternal31REMSuggestedAttributesHarvesterC7RequestV14partialKeyPath3fors07PartialiJ0CyAEGAE10CodingKeysO_tFZ_0()
{
  return swift_getKeyPath();
}

unint64_t sub_1A4587358()
{
  unint64_t result;

  result = qword_1ED2437C0;
  if (!qword_1ED2437C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437C0);
  }
  return result;
}

unint64_t sub_1A458739C()
{
  unint64_t result;

  result = qword_1ED241F88;
  if (!qword_1ED241F88)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED241F88);
  }
  return result;
}

unint64_t sub_1A45873E0()
{
  unint64_t result;

  result = qword_1ED241F90;
  if (!qword_1ED241F90)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding);
    atomic_store(result, (unint64_t *)&qword_1ED241F90);
  }
  return result;
}

uint64_t sub_1A4587424(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED240290);
    v10[0] = a2;
    v10[1] = a3;
    result = MEMORY[0x1A85A0000](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A4587488()
{
  unint64_t result;

  result = qword_1ED2424D0;
  if (!qword_1ED2424D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED2424D0);
  }
  return result;
}

unint64_t sub_1A45874CC()
{
  unint64_t result;

  result = qword_1ED2424D8;
  if (!qword_1ED2424D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding);
    atomic_store(result, (unint64_t *)&qword_1ED2424D8);
  }
  return result;
}

unint64_t sub_1A4587510()
{
  unint64_t result;

  result = qword_1ED2436F8;
  if (!qword_1ED2436F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A42E8, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2436F8);
  }
  return result;
}

unint64_t sub_1A4587554()
{
  unint64_t result;

  result = qword_1ED243CC0;
  if (!qword_1ED243CC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4298, &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243CC0);
  }
  return result;
}

unint64_t sub_1A4587598()
{
  unint64_t result;

  result = qword_1ED240DB8;
  if (!qword_1ED240DB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4248, &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240DB8);
  }
  return result;
}

unint64_t sub_1A45875DC()
{
  unint64_t result;

  result = qword_1ED240DA0;
  if (!qword_1ED240DA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A41F8, &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240DA0);
  }
  return result;
}

unint64_t sub_1A4587620()
{
  unint64_t result;

  result = qword_1ED23F1C8;
  if (!qword_1ED23F1C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.CachedSuggestionType, &type metadata for REMSuggestedAttributesHarvester.CachedSuggestionType);
    atomic_store(result, (unint64_t *)&qword_1ED23F1C8);
  }
  return result;
}

unint64_t sub_1A4587664()
{
  unint64_t result;

  result = qword_1ED23F680;
  if (!qword_1ED23F680)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.CachedSuggestionType, &type metadata for REMSuggestedAttributesHarvester.CachedSuggestionType);
    atomic_store(result, (unint64_t *)&qword_1ED23F680);
  }
  return result;
}

unint64_t sub_1A45876A8()
{
  unint64_t result;

  result = qword_1ED243808;
  if (!qword_1ED243808)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A41A8, &type metadata for REMSuggestedAttributesHarvester.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243808);
  }
  return result;
}

unint64_t sub_1A45876EC()
{
  unint64_t result;

  result = qword_1ED240288;
  if (!qword_1ED240288)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput, &type metadata for REMSuggestedAttributeOutput);
    atomic_store(result, (unint64_t *)&qword_1ED240288);
  }
  return result;
}

uint64_t sub_1A4587730(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED240298);
    v8 = a2();
    result = MEMORY[0x1A85A0000](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A4587798()
{
  unint64_t result;

  result = qword_1ED240280;
  if (!qword_1ED240280)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributeOutput, &type metadata for REMSuggestedAttributeOutput);
    atomic_store(result, (unint64_t *)&qword_1ED240280);
  }
  return result;
}

unint64_t sub_1A45877DC()
{
  unint64_t result;

  result = qword_1ED2431C0;
  if (!qword_1ED2431C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1ED2431C0);
  }
  return result;
}

unint64_t sub_1A4587820()
{
  unint64_t result;

  result = qword_1ED2431B8;
  if (!qword_1ED2431B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1ED2431B8);
  }
  return result;
}

uint64_t sub_1A4587864(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD v6[4];

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2402C0);
    v6[0] = sub_1A4587730(&qword_1ED2402A8, (uint64_t (*)(void))sub_1A45876EC, MEMORY[0x1E0DEAF40]);
    v6[1] = sub_1A4587730(&qword_1ED2402A0, (uint64_t (*)(void))sub_1A4587798, MEMORY[0x1E0DEAF10]);
    v6[2] = sub_1A45877DC();
    v6[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](a2, v5, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A458791C()
{
  unint64_t result;

  result = qword_1ED2437A8;
  if (!qword_1ED2437A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4158, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437A8);
  }
  return result;
}

unint64_t sub_1A4587960()
{
  unint64_t result;

  result = qword_1ED240D80;
  if (!qword_1ED240D80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4108, &type metadata for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240D80);
  }
  return result;
}

unint64_t sub_1A45879A8()
{
  unint64_t result;

  result = qword_1ED2424E0[0];
  if (!qword_1ED2424E0[0])
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request, &type metadata for REMSuggestedAttributesHarvester.Request);
    atomic_store(result, qword_1ED2424E0);
  }
  return result;
}

unint64_t sub_1A45879F8()
{
  unint64_t result;

  result = qword_1EE721248;
  if (!qword_1EE721248)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Response, &type metadata for REMSuggestedAttributesHarvester.Response);
    atomic_store(result, (unint64_t *)&qword_1EE721248);
  }
  return result;
}

uint64_t sub_1A4587A3C()
{
  return sub_1A4436344(&qword_1EE721290, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributesHarvester.MentionsExtractionRequest);
}

uint64_t sub_1A4587A68()
{
  return sub_1A4436344(&qword_1ED241F78, (uint64_t (*)(uint64_t))type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributesHarvester.MentionsExtractionRequest);
}

unint64_t sub_1A4587A9C()
{
  unint64_t result;

  result = qword_1EE721298;
  if (!qword_1EE721298)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.MentionsExtractionResponse, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse);
    atomic_store(result, (unint64_t *)&qword_1EE721298);
  }
  return result;
}

unint64_t sub_1A4587AE4()
{
  unint64_t result;

  result = qword_1EE7212E0;
  if (!qword_1EE7212E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.FeedbackRequest, &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7212E0);
  }
  return result;
}

unint64_t sub_1A4587B34()
{
  unint64_t result;

  result = qword_1EE7212E8;
  if (!qword_1EE7212E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.BooleanResponse, &type metadata for REMSuggestedAttributesHarvester.BooleanResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7212E8);
  }
  return result;
}

unint64_t sub_1A4587B7C()
{
  unint64_t result;

  result = qword_1EE721330;
  if (!qword_1EE721330)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest, &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest);
    atomic_store(result, (unint64_t *)&qword_1EE721330);
  }
  return result;
}

unint64_t sub_1A4587BC8()
{
  unint64_t result;

  result = qword_1EE721378;
  if (!qword_1EE721378)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.RecordSuggestionRequest, &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest);
    atomic_store(result, (unint64_t *)&qword_1EE721378);
  }
  return result;
}

unint64_t sub_1A4587C14()
{
  unint64_t result;

  result = qword_1EE7213C0;
  if (!qword_1EE7213C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7213C0);
  }
  return result;
}

uint64_t sub_1A4587C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A4587C6C, (uint64_t (*)(void))sub_1A4582AF8);
}

unint64_t sub_1A4587C6C()
{
  unint64_t result;

  result = qword_1ED242910;
  if (!qword_1ED242910)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242910);
  }
  return result;
}

unint64_t sub_1A4587CB4()
{
  unint64_t result;

  result = qword_1ED2437E8;
  if (!qword_1ED2437E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437E8);
  }
  return result;
}

unint64_t sub_1A4587CFC()
{
  unint64_t result;

  result = qword_1ED2437E0;
  if (!qword_1ED2437E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437E0);
  }
  return result;
}

uint64_t sub_1A4587D40()
{
  return sub_1A4460EE4(&qword_1ED242A18, &qword_1ED242A10);
}

unint64_t sub_1A4587D6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A4587488();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A4587D94()
{
  unint64_t result;

  result = qword_1EE721400;
  if (!qword_1EE721400)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721400);
  }
  return result;
}

uint64_t sub_1A4587DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A4587DEC, (uint64_t (*)(void))sub_1A4583104);
}

unint64_t sub_1A4587DEC()
{
  unint64_t result;

  result = qword_1ED242920;
  if (!qword_1ED242920)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242920);
  }
  return result;
}

unint64_t sub_1A4587E34()
{
  unint64_t result;

  result = qword_1ED243800;
  if (!qword_1ED243800)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243800);
  }
  return result;
}

unint64_t sub_1A4587E7C()
{
  unint64_t result;

  result = qword_1ED2437F8;
  if (!qword_1ED2437F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437F8);
  }
  return result;
}

uint64_t sub_1A4587EC0()
{
  return sub_1A4460EE4(&qword_1ED242A28, &qword_1ED242A20);
}

unint64_t sub_1A4587EEC(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45874CC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A4587F14()
{
  unint64_t result;

  result = qword_1EE721440;
  if (!qword_1EE721440)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721440);
  }
  return result;
}

uint64_t sub_1A4587F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A4587F9C, (uint64_t (*)(void))sub_1A4587358);
}

uint64_t sub_1A4587F6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A4587F9C()
{
  unint64_t result;

  result = qword_1ED242768;
  if (!qword_1ED242768)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242768);
  }
  return result;
}

unint64_t sub_1A4587FE4()
{
  unint64_t result;

  result = qword_1ED2437D0;
  if (!qword_1ED2437D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437D0);
  }
  return result;
}

unint64_t sub_1A458802C()
{
  unint64_t result;

  result = qword_1ED2437C8;
  if (!qword_1ED2437C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CodingKeys, &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437C8);
  }
  return result;
}

uint64_t sub_1A4588070()
{
  return sub_1A4460EE4(&qword_1ED242A08, &qword_1ED242A00);
}

unint64_t sub_1A458809C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45879A8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45880C4()
{
  unint64_t result;

  result = qword_1ED23F678;
  if (!qword_1ED23F678)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.CachedSuggestionType, &type metadata for REMSuggestedAttributesHarvester.CachedSuggestionType);
    atomic_store(result, (unint64_t *)&qword_1ED23F678);
  }
  return result;
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.harvestAttributes(for:elector:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.extractMentions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.feedback(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))() & 1;
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.postSuggestionAnalytics(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvesterType.recordSuggestion(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMSuggestedAttributesHarvester()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSuggestedAttributesHarvester.__allocating_init(suggestedAttributesPerformer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t destroy for REMSuggestedAttributesHarvester.Request(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_WORD *)a1 = *(_WORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v5 = *(void **)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_WORD *)(a1 + 97) = *(_WORD *)(a2 + 97);
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.Request(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v7 = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v7;
  v8 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  return a1;
}

__n128 __swift_memcpy99_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_DWORD *)(a1 + 95) = *(_DWORD *)((char *)a2 + 95);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.Request(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(a2 + 97);
  *(_BYTE *)(a1 + 98) = *(_BYTE *)(a2 + 98);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 99))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 98) = 0;
    *(_WORD *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 99) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 99) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request.CoreBehavior(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request.CoreBehavior(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.CoreBehavior()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.Embedding()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.Embedding;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.Embedding.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1A45885F4 + 4 * byte_1A46A2E1B[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1A4588628 + 4 * byte_1A46A2E16[v4]))();
}

uint64_t sub_1A4588628(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4588630(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4588638);
  return result;
}

uint64_t sub_1A4588644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A458864CLL);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1A4588650(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4588658(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Request.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Request.CodingKeys;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A46900FC();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v12 = v6;
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t destroy for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A46900FC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  id v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A46900FC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v11 = v5;
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1A46900FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for REMSuggestedAttributesHarvester.MentionsExtractionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for REMSuggestedAttributesHarvester.MentionsExtractionRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1A46900FC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4588974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1A46900FC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45889FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1A46900FC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A4588A70()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900FC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.FeedbackRequest()
{
  return &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest()
{
  return &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest;
}

void destroy for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v4 = *(void **)(a2 + 24);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.RecordSuggestionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionRequest()
{
  return &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest;
}

uint64_t destroy for REMSuggestedAttributesHarvester.Response(uint64_t a1)
{
  sub_1A44976DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_1A44976DC(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
  return sub_1A44976DC(*(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_QWORD *)(a1 + 160), *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_BYTE *)(a1 + 184));
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_1A44976A4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  v12 = *(_QWORD *)(v2 + 64);
  v13 = *(_QWORD *)(v2 + 72);
  v14 = *(_QWORD *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 88);
  v16 = *(_QWORD *)(v2 + 96);
  v17 = *(_QWORD *)(v2 + 104);
  v18 = *(_QWORD *)(v2 + 112);
  v19 = *(_BYTE *)(v2 + 120);
  sub_1A44976A4(v12, v13, v14, v15, v16, v17, v18, v19);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 120) = v19;
  v20 = *(_QWORD *)(v2 + 128);
  v21 = *(_QWORD *)(v2 + 136);
  v22 = *(_QWORD *)(v2 + 144);
  v23 = *(_QWORD *)(v2 + 152);
  v24 = *(_QWORD *)(v2 + 160);
  v25 = *(_QWORD *)(v2 + 168);
  v26 = *(_QWORD *)(v2 + 176);
  LOBYTE(v2) = *(_BYTE *)(v2 + 184);
  sub_1A44976A4(v20, v21, v22, v23, v24, v25, v26, v2);
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v26;
  *(_BYTE *)(a1 + 184) = v2;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_1A44976A4(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1A44976DC(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = *(_QWORD *)(v2 + 64);
  v21 = *(_QWORD *)(v2 + 72);
  v22 = *(_QWORD *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 88);
  v24 = *(_QWORD *)(v2 + 96);
  v25 = *(_QWORD *)(v2 + 104);
  v26 = *(_QWORD *)(v2 + 112);
  v27 = *(_BYTE *)(v2 + 120);
  sub_1A44976A4(v20, v21, v22, v23, v24, v25, v26, v27);
  v28 = *(_QWORD *)(a1 + 64);
  v29 = *(_QWORD *)(a1 + 72);
  v30 = *(_QWORD *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 88);
  v32 = *(_QWORD *)(a1 + 96);
  v33 = *(_QWORD *)(a1 + 104);
  v34 = *(_QWORD *)(a1 + 112);
  v35 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 104) = v25;
  *(_QWORD *)(a1 + 112) = v26;
  *(_BYTE *)(a1 + 120) = v27;
  sub_1A44976DC(v28, v29, v30, v31, v32, v33, v34, v35);
  v36 = *(_QWORD *)(v2 + 128);
  v37 = *(_QWORD *)(v2 + 136);
  v38 = *(_QWORD *)(v2 + 144);
  v39 = *(_QWORD *)(v2 + 152);
  v40 = *(_QWORD *)(v2 + 160);
  v41 = *(_QWORD *)(v2 + 168);
  v42 = *(_QWORD *)(v2 + 176);
  LOBYTE(v2) = *(_BYTE *)(v2 + 184);
  sub_1A44976A4(v36, v37, v38, v39, v40, v41, v42, v2);
  v43 = *(_QWORD *)(a1 + 128);
  v44 = *(_QWORD *)(a1 + 136);
  v45 = *(_QWORD *)(a1 + 144);
  v46 = *(_QWORD *)(a1 + 152);
  v47 = *(_QWORD *)(a1 + 160);
  v48 = *(_QWORD *)(a1 + 168);
  v49 = *(_QWORD *)(a1 + 176);
  v50 = *(_BYTE *)(a1 + 184);
  *(_QWORD *)(a1 + 128) = v36;
  *(_QWORD *)(a1 + 136) = v37;
  *(_QWORD *)(a1 + 144) = v38;
  *(_QWORD *)(a1 + 152) = v39;
  *(_QWORD *)(a1 + 160) = v40;
  *(_QWORD *)(a1 + 168) = v41;
  *(_QWORD *)(a1 + 176) = v42;
  *(_BYTE *)(a1 + 184) = v2;
  sub_1A44976DC(v43, v44, v45, v46, v47, v48, v49, v50);
  return a1;
}

__n128 __swift_memcpy185_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_OWORD *)(a1 + 169) = *(__int128 *)((char *)a2 + 169);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.Response(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;

  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_BYTE *)(a1 + 56);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = v5;
  sub_1A44976DC(v6, v7, v8, v9, v10, v11, v12, v13);
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_BYTE *)(a2 + 120);
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_BYTE *)(a1 + 120);
  v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v15;
  *(_BYTE *)(a1 + 120) = v16;
  sub_1A44976DC(v17, v18, v19, v20, v21, v22, v23, v24);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = *(_BYTE *)(a2 + 184);
  v28 = *(_QWORD *)(a1 + 128);
  v29 = *(_QWORD *)(a1 + 136);
  v30 = *(_QWORD *)(a1 + 144);
  v31 = *(_QWORD *)(a1 + 152);
  v32 = *(_QWORD *)(a1 + 160);
  v33 = *(_QWORD *)(a1 + 168);
  v34 = *(_QWORD *)(a1 + 176);
  v35 = *(_BYTE *)(a1 + 184);
  v36 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v36;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = v26;
  *(_BYTE *)(a1 + 184) = v27;
  sub_1A44976DC(v28, v29, v30, v31, v32, v33, v34, v35);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.Response(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 185))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.Response(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 184) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 185) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 185) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Response()
{
  return &type metadata for REMSuggestedAttributesHarvester.Response;
}

uint64_t destroy for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1)
{
  return sub_1A44976DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1A44976A4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1A44976A4(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  sub_1A44976DC(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 56) = v4;
  sub_1A44976DC(v5, v7, v6, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.MentionsExtractionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionResponse()
{
  return &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.BooleanResponse(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45893CC + 4 * byte_1A46A2E25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4589400 + 4 * byte_1A46A2E20[v4]))();
}

uint64_t sub_1A4589400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4589408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4589410);
  return result;
}

uint64_t sub_1A458941C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4589424);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4589428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4589430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.BooleanResponse()
{
  return &type metadata for REMSuggestedAttributesHarvester.BooleanResponse;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesHarvester.CachedSuggestionType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.CachedSuggestionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A4589528 + 4 * byte_1A46A2E2F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A458955C + 4 * byte_1A46A2E2A[v4]))();
}

uint64_t sub_1A458955C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4589564(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A458956CLL);
  return result;
}

uint64_t sub_1A4589578(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4589580);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A4589584(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A458958C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.CachedSuggestionType()
{
  return &type metadata for REMSuggestedAttributesHarvester.CachedSuggestionType;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.Response.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.Response.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A4589628 + 4 * byte_1A46A2E39[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A458965C + 4 * byte_1A46A2E34[v4]))();
}

uint64_t sub_1A458965C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4589664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A458966CLL);
  return result;
}

uint64_t sub_1A4589678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4589680);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A4589684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A458968C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys;
}

uint64_t _s19ReminderKitInternal31REMSuggestedAttributesHarvesterC7RequestV9EmbeddingV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A45896E8 + 4 * byte_1A46A2E3E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4589708 + 4 * byte_1A46A2E43[v4]))();
}

_BYTE *sub_1A45896E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4589708(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4589710(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4589718(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4589720(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4589728(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys;
}

uint64_t _s19ReminderKitInternal31REMSuggestedAttributesHarvesterC7RequestV12CoreBehaviorV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A4589790 + 4 * byte_1A46A2E4D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A45897C4 + 4 * byte_1A46A2E48[v4]))();
}

uint64_t sub_1A45897C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45897CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45897D4);
  return result;
}

uint64_t sub_1A45897E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45897E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45897EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45897F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys;
}

uint64_t _s19ReminderKitInternal31REMSuggestedAttributesHarvesterC8ResponseV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A458985C + 4 * byte_1A46A2E57[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A4589890 + 4 * byte_1A46A2E52[v4]))();
}

uint64_t sub_1A4589890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4589898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45898A0);
  return result;
}

uint64_t sub_1A45898AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45898B4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A45898B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45898C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys;
}

unint64_t sub_1A45898E0()
{
  unint64_t result;

  result = qword_1EE721480;
  if (!qword_1EE721480)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3C90, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721480);
  }
  return result;
}

unint64_t sub_1A4589928()
{
  unint64_t result;

  result = qword_1EE721488;
  if (!qword_1EE721488)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3D48, &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721488);
  }
  return result;
}

unint64_t sub_1A4589970()
{
  unint64_t result;

  result = qword_1EE721490;
  if (!qword_1EE721490)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3E00, &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721490);
  }
  return result;
}

unint64_t sub_1A45899B8()
{
  unint64_t result;

  result = qword_1EE721498;
  if (!qword_1EE721498)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3EB8, &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721498);
  }
  return result;
}

unint64_t sub_1A4589A00()
{
  unint64_t result;

  result = qword_1EE7214A0;
  if (!qword_1EE7214A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3F70, &type metadata for REMSuggestedAttributesHarvester.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7214A0);
  }
  return result;
}

unint64_t sub_1A4589A48()
{
  unint64_t result;

  result = qword_1EE7214A8;
  if (!qword_1EE7214A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4028, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7214A8);
  }
  return result;
}

unint64_t sub_1A4589A90()
{
  unint64_t result;

  result = qword_1EE7214B0;
  if (!qword_1EE7214B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A40E0, &type metadata for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7214B0);
  }
  return result;
}

unint64_t sub_1A4589AD8()
{
  unint64_t result;

  result = qword_1ED240D90;
  if (!qword_1ED240D90)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4050, &type metadata for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240D90);
  }
  return result;
}

unint64_t sub_1A4589B20()
{
  unint64_t result;

  result = qword_1ED240D88;
  if (!qword_1ED240D88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A4078, &type metadata for REMSuggestedAttributesHarvester.BooleanResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240D88);
  }
  return result;
}

unint64_t sub_1A4589B68()
{
  unint64_t result;

  result = qword_1ED2437B8;
  if (!qword_1ED2437B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3F98, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437B8);
  }
  return result;
}

unint64_t sub_1A4589BB0()
{
  unint64_t result;

  result = qword_1ED2437B0;
  if (!qword_1ED2437B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3FC0, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2437B0);
  }
  return result;
}

unint64_t sub_1A4589BF8()
{
  unint64_t result;

  result = qword_1ED243818[0];
  if (!qword_1ED243818[0])
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3EE0, &type metadata for REMSuggestedAttributesHarvester.Response.CodingKeys);
    atomic_store(result, qword_1ED243818);
  }
  return result;
}

unint64_t sub_1A4589C40()
{
  unint64_t result;

  result = qword_1ED243810;
  if (!qword_1ED243810)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3F08, &type metadata for REMSuggestedAttributesHarvester.Response.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243810);
  }
  return result;
}

unint64_t sub_1A4589C88()
{
  unint64_t result;

  result = qword_1ED240DB0;
  if (!qword_1ED240DB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3E28, &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240DB0);
  }
  return result;
}

unint64_t sub_1A4589CD0()
{
  unint64_t result;

  result = qword_1ED240DA8;
  if (!qword_1ED240DA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3E50, &type metadata for REMSuggestedAttributesHarvester.RecordSuggestionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240DA8);
  }
  return result;
}

unint64_t sub_1A4589D18()
{
  unint64_t result;

  result = qword_1ED240DC8;
  if (!qword_1ED240DC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3D70, &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240DC8);
  }
  return result;
}

unint64_t sub_1A4589D60()
{
  unint64_t result;

  result = qword_1ED240DC0;
  if (!qword_1ED240DC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3D98, &type metadata for REMSuggestedAttributesHarvester.PostSuggestionAnalyticsRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240DC0);
  }
  return result;
}

unint64_t sub_1A4589DA8()
{
  unint64_t result;

  result = qword_1ED243CD0;
  if (!qword_1ED243CD0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3CB8, &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243CD0);
  }
  return result;
}

unint64_t sub_1A4589DF0()
{
  unint64_t result;

  result = qword_1ED243CC8;
  if (!qword_1ED243CC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3CE0, &type metadata for REMSuggestedAttributesHarvester.FeedbackRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243CC8);
  }
  return result;
}

unint64_t sub_1A4589E38()
{
  unint64_t result;

  result = qword_1ED243708;
  if (!qword_1ED243708)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3C00, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243708);
  }
  return result;
}

unint64_t sub_1A4589E80()
{
  unint64_t result;

  result = qword_1ED243700;
  if (!qword_1ED243700)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A3C28, &type metadata for REMSuggestedAttributesHarvester.MentionsExtractionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243700);
  }
  return result;
}

uint64_t sub_1A4589EC4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265646E696D6572 && a2 == 0xED0000656C746954;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44497473696CLL && a2 == 0xE600000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C0A00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A458A030(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63616264656566 && a2 == 0xEE00726F74636146)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A458A13C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974736567677573 && a2 == 0xEF65756C61566E6FLL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974736567677573 && a2 == 0xEE00657079546E6FLL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E696C65706970 && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A458A340(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974736972756568 && a2 == 0xEF746C7573655263;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69646465626D65 && a2 == 0xEF746C7573655267 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A46C0A20)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1A458A4B8()
{
  unint64_t result;

  result = qword_1ED240D98;
  if (!qword_1ED240D98)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.CachedSuggestionType, &type metadata for REMSuggestedAttributesHarvester.CachedSuggestionType);
    atomic_store(result, (unint64_t *)&qword_1ED240D98);
  }
  return result;
}

uint64_t MersenneTwister.__allocating_init()()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t result;

  v0 = swift_allocObject();
  v1 = sub_1A458A85C(0x7FFFFFFFFFFFFFFFuLL);
  if ((v1 & 0x8000000000000000) == 0)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, v1);
    if (v2)
    {
      *(_QWORD *)(v0 + 16) = v2;
      return v0;
    }
    __break(1u);
  }
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t MersenneTwister.init()()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  uint64_t result;

  v1 = sub_1A458A85C(0x7FFFFFFFFFFFFFFFuLL);
  if ((v1 & 0x8000000000000000) == 0)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, v1);
    if (v2)
    {
      *(_QWORD *)(v0 + 16) = v2;
      return v0;
    }
    __break(1u);
  }
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t MersenneTwister.__allocating_init(seed:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t result;

  v2 = swift_allocObject();
  if ((a1 & 0x8000000000000000) == 0)
  {
    v3 = v2;
    v4 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, a1);
    if (v4)
    {
      *(_QWORD *)(v3 + 16) = v4;
      return v3;
    }
    __break(1u);
  }
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t MersenneTwister.init(seed:)(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t result;

  if ((a1 & 0x8000000000000000) == 0)
  {
    v2 = objc_msgSend(objc_allocWithZone((Class)RMDMersenneTwisterRandomSource), sel_initWithSeed_, a1);
    if (v2)
    {
      *(_QWORD *)(v1 + 16) = v2;
      return v1;
    }
    __break(1u);
  }
  result = sub_1A469162C();
  __break(1u);
  return result;
}

id sub_1A458A7F8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_nextInt);
}

uint64_t MersenneTwister.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MersenneTwister.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_1A458A848()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_nextInt);
}

unint64_t sub_1A458A85C(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1A85A012C](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1A85A012C](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for MersenneTwister()
{
  return objc_opt_self();
}

uint64_t method lookup function for MersenneTwister()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MersenneTwister.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MersenneTwister.__allocating_init(seed:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MersenneTwister.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

Swift::Void __swiftcall Dictionary.merge(takingValuesIn:)(Swift::OpaquePointer takingValuesIn)
{
  swift_bridgeObjectRetain();
  sub_1A4690750();
}

uint64_t sub_1A458A984@<X0>(uint64_t a1@<X8>)
{
  return sub_1A458AA1C(a1);
}

uint64_t Dictionary.merging(takingValuesIn:)()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1A4690768();
}

uint64_t sub_1A458AA1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 24) - 8) + 16))(a1);
}

uint64_t Dictionary.removingNils<A>()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t result;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t TupleTypeMetadata2;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v6 = sub_1A46911A0();
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v67 = (char *)&v55 - v10;
  v11 = *(_QWORD *)(a3 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v55 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = sub_1A46911A0();
  v68 = *(_QWORD *)(v18 - 8);
  v69 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v71 = (char *)&v55 - v22;
  v77 = sub_1A46906C0();
  sub_1A4690744();
  v61 = sub_1A469078C();
  sub_1A469072C();
  v23 = *(_QWORD *)(a1 + 64);
  v59 = a1 + 64;
  v24 = 1 << *(_BYTE *)(a1 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v27 = (unint64_t)(v24 + 63) >> 6;
  v56 = v27 - 1;
  result = swift_bridgeObjectRetain();
  v29 = 0;
  v60 = v27;
  v65 = a3;
  v66 = a1;
  v57 = a1 + 96;
  v58 = v27 - 4;
  v30 = a3;
  v72 = v17;
  if (!v26)
    goto LABEL_12;
LABEL_6:
  v36 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  v37 = v36 | (v29 << 6);
  v38 = TupleTypeMetadata2;
LABEL_7:
  v39 = v66;
  (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v21, *(_QWORD *)(v66 + 48) + *(_QWORD *)(v76 + 72) * v37, a2);
  (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(&v21[*(int *)(v38 + 48)], *(_QWORD *)(v39 + 56) + *(_QWORD *)(v73 + 72) * v37, v74);
  v40 = 0;
  v41 = v65;
  v42 = v72;
LABEL_8:
  v43 = v71;
  while (1)
  {
    v44 = *(_QWORD *)(v38 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v21, v40, 1, v38);
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v43, v21, v69);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v43, 1, v38) == 1)
    {
      swift_release();
      return v77;
    }
    v75 = v29;
    v45 = v21;
    v46 = &v43[*(int *)(v38 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v42, v43, a2);
    v47 = v11;
    v48 = v73;
    v49 = a2;
    v50 = v67;
    v51 = v46;
    v52 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v67, v51, v74);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v50, 1, v41) == 1)
    {
      v30 = v41;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v49);
      result = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v50, v52);
      v11 = v47;
      a2 = v49;
      v21 = v45;
      v17 = v42;
      v29 = v75;
      if (v26)
        goto LABEL_6;
    }
    else
    {
      v31 = v76;
      v32 = v63;
      (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v63, v50, v41);
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v62, v72, v49);
      v33 = v64;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v64, v32, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v33, 0, 1, v41);
      sub_1A46907BC();
      v34 = v31;
      v30 = v41;
      v35 = v41;
      v17 = v72;
      (*(void (**)(char *, uint64_t))(v47 + 8))(v32, v35);
      result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v49);
      v11 = v47;
      a2 = v49;
      v21 = v45;
      v29 = v75;
      if (v26)
        goto LABEL_6;
    }
LABEL_12:
    v53 = v29 + 1;
    v38 = TupleTypeMetadata2;
    if (__OFADD__(v29, 1))
      break;
    v42 = v17;
    if (v53 >= v60)
    {
      v26 = 0;
      v40 = 1;
      v41 = v30;
      goto LABEL_8;
    }
    v54 = *(_QWORD *)(v59 + 8 * v53);
    if (v54)
      goto LABEL_15;
    v41 = v30;
    if ((uint64_t)(v29 + 2) >= v60)
    {
      v26 = 0;
      v40 = 1;
      ++v29;
      goto LABEL_8;
    }
    v54 = *(_QWORD *)(v59 + 8 * (v29 + 2));
    if (v54)
    {
      v53 = v29 + 2;
LABEL_15:
      v26 = (v54 - 1) & v54;
      v37 = __clz(__rbit64(v54)) + (v53 << 6);
      v29 = v53;
      goto LABEL_7;
    }
    v53 = v29 + 3;
    if ((uint64_t)(v29 + 3) >= v60)
    {
      v26 = 0;
      v40 = 1;
      v29 += 2;
      goto LABEL_8;
    }
    v54 = *(_QWORD *)(v59 + 8 * v53);
    if (v54)
      goto LABEL_15;
    v43 = v71;
    while (v58 != v29)
    {
      v54 = *(_QWORD *)(v57 + 8 * v29++);
      if (v54)
      {
        v53 = v29 + 3;
        goto LABEL_15;
      }
    }
    v26 = 0;
    v40 = 1;
    v29 = v56;
  }
  __break(1u);
  return result;
}

uint64_t Dictionary<>.append(_:toCollectionUnderKey:)(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t *, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  char v39;
  uint64_t result;
  _QWORD v41[2];
  void (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;

  v5 = v4;
  v50 = a1;
  v9 = a3[3];
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v44 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v15 = (char *)v41 - v14;
  v16 = a3[2];
  v17 = MEMORY[0x1E0C80A78](v13);
  v43 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v41 - v19;
  v46 = v21;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v42((char *)v41 - v19, a2, v16);
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = v16;
  v22[3] = v9;
  v48 = a4;
  v49 = v9;
  v23 = a3[4];
  v22[4] = v23;
  v22[5] = a4;
  v24 = *(void (**)(char *, uint64_t *, uint64_t))(v12 + 16);
  v45 = v15;
  v24(v15, v50, AssociatedTypeWitness);
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (__OFADD__(sub_1A4691308(), 1))
    {
      __break(1u);
    }
    else
    {
      v25 = sub_1A46915F0();
      v51 = v25;
      sub_1A458B3C0((uint64_t)v20, v16, v23);
      v27 = *(_QWORD *)(v25 + 16);
      v28 = (v26 & 1) == 0;
      v29 = v27 + v28;
      if (!__OFADD__(v27, v28))
      {
        v30 = v26;
        if (*(_QWORD *)(v25 + 24) >= v29
          || (v31 = sub_1A46915E4(),
              sub_1A458B520(v29, 1, v31),
              v25 = v51,
              sub_1A458B3C0((uint64_t)v20, v16, v23),
              (v30 & 1) == (v32 & 1)))
        {
          *v5 = v25;
          if ((v30 & 1) != 0)
          {
LABEL_7:
            swift_bridgeObjectRetain();
LABEL_13:
            swift_bridgeObjectRelease();
            sub_1A4690F00();
            (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v16);
            return swift_release();
          }
LABEL_12:
          swift_bridgeObjectRetain();
          sub_1A4690F54();
          v42(v43, (uint64_t)v20, v16);
          sub_1A46915D8();
          goto LABEL_13;
        }
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_isUniquelyReferenced_nonNull_native();
  v33 = *v5;
  v50 = v5;
  v51 = v33;
  *v5 = 0x8000000000000000;
  v41[1] = sub_1A458B3C0((uint64_t)v20, v16, v23);
  if (__OFADD__(*(_QWORD *)(v33 + 16), (v34 & 1) == 0))
    goto LABEL_16;
  v35 = v34;
  sub_1A46915E4();
  v36 = sub_1A46915C0();
  v37 = v50;
  v38 = v51;
  if ((v36 & 1) == 0 || (sub_1A458B3C0((uint64_t)v20, v16, v23), (v35 & 1) == (v39 & 1)))
  {
    *v37 = v38;
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
      goto LABEL_7;
    goto LABEL_12;
  }
LABEL_17:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t sub_1A458B3B0()
{
  return swift_deallocObject();
}

unint64_t sub_1A458B3C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46907E0();
  return sub_1A458B408(a1, v6, a2, a3);
}

unint64_t sub_1A458B408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  char v16;
  _QWORD v18[2];

  v5 = v4;
  v18[0] = a1;
  v18[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v5 + 32);
  v12 = v11 & ~v10;
  if (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v13 = ~v10;
    v14 = *(_QWORD *)(v7 + 72);
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v15(v9, *(_QWORD *)(v5 + 48) + v14 * v12, a3);
      v16 = sub_1A4690864();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a3);
      if ((v16 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  }
  return v12;
}

uint64_t sub_1A458B520(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int v34;
  int64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = v3;
  v6 = *(_QWORD *)(a3 + 24);
  v38 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v7);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v37 = *(_QWORD *)(v16 + 32);
  sub_1A46916EC();
  v39 = sub_1A46916C8();
  if (*(_QWORD *)(v15 + 16))
  {
    v33 = v3;
    v17 = 1 << *(_BYTE *)(v15 + 32);
    v18 = *(_QWORD *)(v15 + 64);
    v36 = (_QWORD *)(v15 + 64);
    v19 = -1;
    if (v17 < 64)
      v19 = ~(-1 << v17);
    v20 = v19 & v18;
    v35 = (unint64_t)(v17 + 63) >> 6;
    result = swift_retain();
    v22 = 0;
    v34 = a2;
    v23 = 2;
    if ((a2 & 1) != 0)
      v23 = 4;
    v24 = 8 * v23;
    while (1)
    {
      if (v20)
      {
        v25 = __clz(__rbit64(v20));
        v20 &= v20 - 1;
        v26 = v25 | (v22 << 6);
      }
      else
      {
        if (__OFADD__(v22++, 1))
          goto LABEL_28;
        v28 = v36;
        if (v22 >= v35)
        {
LABEL_19:
          swift_release();
          if ((v34 & 1) == 0)
          {
            result = swift_release();
            v4 = v33;
            goto LABEL_26;
          }
          v31 = 1 << *(_BYTE *)(v15 + 32);
          if (v31 >= 64)
            bzero(v28, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          else
            *v28 = -1 << v31;
          v4 = v33;
          *(_QWORD *)(v15 + 16) = 0;
          break;
        }
        v29 = v36[v22];
        if (!v29)
        {
          if (++v22 >= v35)
            goto LABEL_19;
          v29 = v36[v22];
          v30 = v22;
          if (!v29)
          {
            while (1)
            {
              v22 = v30 + 1;
              if (__OFADD__(v30, 1))
                break;
              if (v22 >= v35)
                goto LABEL_19;
              v29 = v36[v22];
              ++v30;
              if (v29)
                goto LABEL_18;
            }
            __break(1u);
LABEL_28:
            __break(1u);
            return result;
          }
        }
LABEL_18:
        v20 = (v29 - 1) & v29;
        v26 = __clz(__rbit64(v29)) + (v22 << 6);
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v12 + v24))(v14, *(_QWORD *)(v15 + 48) + *(_QWORD *)(v12 + 72) * v26, v11);
      (*(void (**)(char *, unint64_t, uint64_t))(v38 + v24))(v9, *(_QWORD *)(v15 + 56) + *(_QWORD *)(v38 + 72) * v26, v6);
      result = sub_1A46915CC();
    }
  }
  result = swift_release();
LABEL_26:
  *v4 = v39;
  return result;
}

uint64_t sub_1A458B7CC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMAnalyticsEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void REMAnalyticsEvent.payload.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[94];

  v1 = sub_1A4690294();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1A46902AC();
  v14[5] = *(_QWORD *)(v2 - 8);
  v14[6] = v2;
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1A46900B4();
  v14[8] = *(_QWORD *)(v3 - 8);
  v14[9] = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v14[7] = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v14[4] = (char *)v14 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for REMAnalyticsEvent();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  v14[10] = v12;
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9E0];
  v14[11] = v12 + 16;
  sub_1A44304C4(v0, (uint64_t)v11);
  v13 = (char *)&loc_1A458B9D4 + *((int *)qword_1A458D060 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1A458B9E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *v2;
  v5 = v2[1];
  v6 = *((_QWORD *)v2 + 2);
  *(_QWORD *)(v0 + 72) = *((_QWORD *)v2 + 1);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70);
  v8 = (uint64_t)&v2[*(int *)(v7 + 64)];
  v9 = (uint64_t *)&v2[*(int *)(v7 + 80)];
  v10 = *v9;
  v11 = v9[1];
  sub_1A449C96C(v8, v1);
  *(_BYTE *)(v3 - 128) = v4;
  *(_BYTE *)(v3 - 127) = v5;
  v12 = sub_1A458D724();
  v14 = v13;
  *(_BYTE *)(v3 - 128) = v4;
  *(_BYTE *)(v3 - 127) = v5;
  v15 = sub_1A458D95C();
  sub_1A458D0BC(v12, v14, v15, v16, *(_QWORD *)(v0 + 72), v6, v1, v10, v11, *(_QWORD *)(v0 + 80));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A449C92C(v1);
  swift_beginAccess();
  v17 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v17;
}

void sub_1A458D03C()
{
  JUMPOUT(0x1A458CED0);
}

uint64_t sub_1A458D0BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  char isUniquelyReferenced_nonNull_native;
  id v33;
  char v34;
  id v35;
  void *v36;
  id v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  double v45;
  id v46;
  char v47;
  id v48;
  void *v49;
  id v50;
  char v51;
  id v52;
  void *v53;
  id v54;
  char v55;
  _QWORD v57[4];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v57[1] = a5;
  v57[2] = a8;
  v61 = a7;
  v57[3] = a3;
  v58 = a6;
  v65 = a4;
  v59 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v10);
  v60 = (uint64_t)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A4690294();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A46902AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1A46900B4();
  v63 = *(_QWORD *)(v20 - 8);
  v64 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v57[0] = (char *)v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v57 - v23;
  v25 = (uint64_t *)(a10 + 16);
  sub_1A46900A8();
  sub_1A469027C();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0CB1140], v12);
  v62 = v24;
  v26 = sub_1A46902A0();
  v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  v28 = v58;
  v27(v15, v12);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v29 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  swift_bridgeObjectRetain();
  v30 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v29, sel_initWithString_, v30);

  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v66 = *(_QWORD *)(a10 + 16);
  *(_QWORD *)(a10 + 16) = 0x8000000000000000;
  sub_1A445EAD8((uint64_t)v31, 0x6F6974617265706FLL, 0xEB0000000064496ELL, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a10 + 16) = v66;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v26);
  swift_beginAccess();
  v34 = swift_isUniquelyReferenced_nonNull_native();
  v66 = *(_QWORD *)(a10 + 16);
  *(_QWORD *)(a10 + 16) = 0x8000000000000000;
  sub_1A445EAD8((uint64_t)v33, 0x6144664F72756F68, 0xE900000000000079, v34);
  *(_QWORD *)(a10 + 16) = v66;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (v28)
  {
    v35 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    swift_bridgeObjectRetain();
    v36 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v37 = objc_msgSend(v35, sel_initWithString_, v36);

    swift_beginAccess();
    v38 = swift_isUniquelyReferenced_nonNull_native();
    v66 = *v25;
    *v25 = 0x8000000000000000;
    sub_1A445EAD8((uint64_t)v37, 0x496E6F6973736573, 0xE900000000000064, v38);
    *v25 = v66;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v39 = v60;
  sub_1A452A364(v61, v60);
  v41 = v63;
  v40 = v64;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v39, 1, v64) != 1)
  {
    v44 = v57[0];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v41 + 32))(v57[0], v39, v40);
    v43 = v62;
    sub_1A4690018();
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v45);
    swift_beginAccess();
    v47 = swift_isUniquelyReferenced_nonNull_native();
    v66 = *v25;
    *v25 = 0x8000000000000000;
    sub_1A445EAD8((uint64_t)v46, 0x5464657370616C65, 0xEB00000000656D69, v47);
    *v25 = v66;
    swift_bridgeObjectRelease();
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v40);
    v42 = v65;
    if (!a9)
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_1A449C92C(v39);
  v42 = v65;
  v43 = v62;
  if (a9)
  {
LABEL_7:
    v48 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    swift_bridgeObjectRetain();
    v49 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v50 = objc_msgSend(v48, sel_initWithString_, v49);

    swift_beginAccess();
    v51 = swift_isUniquelyReferenced_nonNull_native();
    v66 = *v25;
    *v25 = 0x8000000000000000;
    sub_1A445EAD8((uint64_t)v50, 0x61636F4C77656976, 0xEC0000006E6F6974, v51);
    *v25 = v66;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
LABEL_8:
  if (v42)
  {
    v52 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
    swift_bridgeObjectRetain();
    v53 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v54 = objc_msgSend(v52, sel_initWithString_, v53);

    swift_beginAccess();
    v55 = swift_isUniquelyReferenced_nonNull_native();
    v66 = *v25;
    *v25 = 0x8000000000000000;
    sub_1A445EAD8((uint64_t)v54, 0x6F6974617265706FLL, 0xEF6C69617465446ELL, v55);
    *v25 = v66;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v43, v40);
}

uint64_t sub_1A458D724()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)nullsub_2
                                                            + 4 * byte_1A46A452F[*(unsigned __int8 *)(v0 + 1)]))(0x65526574656C6564, 0xEE007265646E696DLL);
}

unint64_t sub_1A458D764()
{
  return 0xD000000000000013;
}

unint64_t sub_1A458D7B4()
{
  return 0xD000000000000011;
}

uint64_t sub_1A458D7D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t))((char *)nullsub_2 + 4 * byte_1A46A4535[*v0]))(0x6552657461657263);
}

void sub_1A458D7FC()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D818()
{
  JUMPOUT(0x1A458D7BCLL);
}

void sub_1A458D824()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D83C()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D854()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D86C()
{
  JUMPOUT(0x1A458D7BCLL);
}

void sub_1A458D878()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D890()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D8A8()
{
  JUMPOUT(0x1A458D7A8);
}

uint64_t sub_1A458D8C0()
{
  return 0x694C64656B636970;
}

uint64_t sub_1A458D8E4()
{
  return 0x6853746567646977;
}

void sub_1A458D908()
{
  JUMPOUT(0x1A458D7A8);
}

void sub_1A458D920()
{
  JUMPOUT(0x1A458D7A8);
}

uint64_t sub_1A458D938()
{
  return 0x6F43734177656976;
}

uint64_t sub_1A458D95C()
{
  unsigned __int8 *v0;
  unsigned int v1;
  unsigned int v2;
  BOOL v3;
  unsigned int v4;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = v0[1];
  v3 = v2 >= 3;
  v4 = v2 - 3;
  if (v3)
  {
    v6 = 0x5641446C6163;
    if ((v1 & 1) == 0)
      v6 = 0x74694B64756F6C63;
    if (v1 == 2)
      v7 = 0;
    else
      v7 = v6;
    if (v4 >= 2)
      return 0;
    else
      return v7;
  }
  else if (v1 <= 0xFD)
  {
    return sub_1A458DD34();
  }
  else
  {
    return 0;
  }
}

unint64_t sub_1A458D9F8()
{
  unsigned __int16 *v0;
  unsigned int v1;
  unint64_t result;
  unint64_t v3;

  v1 = *v0;
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1)
      __asm { BR              X10 }
    __asm { BR              X10 }
  }
  if ((v1 & 1) != 0)
    result = 0xD000000000000014;
  else
    result = 0x7473694C6E65706FLL;
  v3 = result;
  if ((v1 & 0x100) != 0)
  {
    sub_1A4690984();
    return v3;
  }
  return result;
}

uint64_t REMRemindersInCalendarUserOperation.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A458DC60 + 4 * byte_1A46A4551[*v0]))(0xD000000000000014, 0x80000001A46BC6B0);
}

uint64_t sub_1A458DC60@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t sub_1A458DCD0()
{
  return 0x65526574656C6564;
}

uint64_t sub_1A458DCF4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t REMRemindersWidgetUserOperation.rawValue.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_1A458DD34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A458DD70
                                                                     + 4 * byte_1A46A4559[*v0 >> 5]))(0xD00000000000002BLL, 0x80000001A46C0ED0);
}

uint64_t sub_1A458DD70@<X0>(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + 13;
  v3 = v1 + 16;
  if ((a1 & 1) != 0)
    return v3;
  else
    return v2;
}

ReminderKitInternal::REMRemindersInCalendarUserOperation_optional __swiftcall REMRemindersInCalendarUserOperation.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ReminderKitInternal::REMRemindersInCalendarUserOperation_optional)sub_1A458E05C(v1);
}

void sub_1A458DE74(char *a1)
{
  sub_1A46691B4(*a1);
}

void sub_1A458DE80()
{
  char *v0;

  sub_1A4638220(0, *v0);
}

void sub_1A458DE8C(uint64_t a1)
{
  char *v1;

  sub_1A46367D4(a1, *v1);
}

void sub_1A458DE94(uint64_t a1)
{
  char *v1;

  sub_1A4638220(a1, *v1);
}

ReminderKitInternal::REMRemindersInCalendarUserOperation_optional sub_1A458DE9C(Swift::String *a1)
{
  return REMRemindersInCalendarUserOperation.init(rawValue:)(*a1);
}

uint64_t sub_1A458DEA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMRemindersInCalendarUserOperation.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t REMRemindersWidgetUserOperation.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1A458DF20()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A458DF74()
{
  return sub_1A4690948();
}

uint64_t sub_1A458DF90()
{
  sub_1A4691C8C();
  sub_1A4690948();
  return sub_1A4691CC8();
}

uint64_t sub_1A458DFE0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1A458E030(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001A46BC730;
}

ReminderKitInternal::REMRemindersOpenUserOperation::SmartListType_optional __swiftcall REMRemindersOpenUserOperation.SmartListType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ReminderKitInternal::REMRemindersOpenUserOperation::SmartListType_optional)sub_1A458E05C(v1);
}

uint64_t sub_1A458E05C@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  v4 = 8;
  if (v2 < 8)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t REMRemindersOpenUserOperation.SmartListType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A458E0DC + 4 * byte_1A46A4560[*v0]))(0x7961646F74, 0xE500000000000000);
}

uint64_t sub_1A458E0DC()
{
  return 0x64656767616C66;
}

uint64_t sub_1A458E0F4()
{
  return 0x656C756465686373;
}

void sub_1A458E184(char *a1)
{
  sub_1A466A4B0(*a1);
}

void sub_1A458E190()
{
  char *v0;

  sub_1A4637CC0(0, *v0);
}

void sub_1A458E19C(uint64_t a1)
{
  char *v1;

  sub_1A4636EF4(a1, *v1);
}

void sub_1A458E1A4(uint64_t a1)
{
  char *v1;

  sub_1A4637CC0(a1, *v1);
}

ReminderKitInternal::REMRemindersOpenUserOperation::SmartListType_optional sub_1A458E1AC(Swift::String *a1)
{
  return REMRemindersOpenUserOperation.SmartListType.init(rawValue:)(*a1);
}

uint64_t sub_1A458E1B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A458E1E4 + 4 * byte_1A46A4568[*v0]))();
}

void sub_1A458E1E4(_QWORD *a1@<X8>)
{
  *a1 = 0x64656767616C66;
  a1[1] = 0xE700000000000000;
}

void sub_1A458E200(_QWORD *a1@<X8>)
{
  *a1 = 0x656C756465686373;
  a1[1] = 0xE900000000000064;
}

uint64_t REMRemindersCreateListUserOperation.hash(into:)()
{
  return sub_1A4691C98();
}

BOOL static REMRemindersCreateListUserOperation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMRemindersCreateListUserOperation.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t REMSharedListUserOperationDetail.hash(into:)()
{
  return sub_1A4691C98();
}

BOOL static REMSharedListUserOperationDetail.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMSharedListUserOperationDetail.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A458E3B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;

  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A458E6D4();
  if (!v8)
    goto LABEL_24;
  v10 = v7;
  v11 = v8;
  v12 = v9;
  v13 = (_QWORD *)*a5;
  v15 = sub_1A443E4C8(v7, v8);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      v22 = (_QWORD *)*a5;
      if ((v14 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1A4448C9C();
      v22 = (_QWORD *)*a5;
      if ((v19 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    v25 = (uint64_t *)(v22[6] + 16 * v15);
    *v25 = v10;
    v25[1] = v11;
    *(_QWORD *)(v22[7] + 8 * v15) = v12;
    v26 = v22[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v28;
LABEL_13:
    sub_1A458E6D4();
    if (v30)
    {
      v32 = v29;
      v33 = v30;
      v34 = v31;
      do
      {
        v40 = (_QWORD *)*a5;
        v42 = sub_1A443E4C8(v32, v33);
        v43 = v40[2];
        v44 = (v41 & 1) == 0;
        v45 = v43 + v44;
        if (__OFADD__(v43, v44))
          goto LABEL_25;
        v46 = v41;
        if (v40[3] < v45)
        {
          sub_1A444373C(v45, 1);
          v47 = sub_1A443E4C8(v32, v33);
          if ((v46 & 1) != (v48 & 1))
            goto LABEL_27;
          v42 = v47;
        }
        v49 = (_QWORD *)*a5;
        if ((v46 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v35 = v49[7];
          v36 = 8 * v42;

          *(_QWORD *)(v35 + v36) = v34;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          v50 = (uint64_t *)(v49[6] + 16 * v42);
          *v50 = v32;
          v50[1] = v33;
          *(_QWORD *)(v49[7] + 8 * v42) = v34;
          v51 = v49[2];
          v27 = __OFADD__(v51, 1);
          v52 = v51 + 1;
          if (v27)
            goto LABEL_26;
          v49[2] = v52;
        }
        sub_1A458E6D4();
        v32 = v37;
        v33 = v38;
        v34 = v39;
      }
      while (v38);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1A4460EDC();
    return swift_release();
  }
  sub_1A444373C(v18, a4 & 1);
  v20 = sub_1A443E4C8(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    v22 = (_QWORD *)*a5;
    if ((v19 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    swift_bridgeObjectRelease();
    v23 = v22[7];
    v24 = 8 * v15;

    *(_QWORD *)(v23 + v24) = v12;
    goto LABEL_13;
  }
LABEL_27:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

id sub_1A458E69C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

void sub_1A458E6D4()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

uint64_t _s19ReminderKitInternal25REMRDLUserOperationDetailO2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A458E884 + 4 * byte_1A46A4570[*a1 >> 5]))();
}

uint64_t sub_1A458E884@<X0>(unsigned int a1@<W8>)
{
  char v1;

  if (a1 < 0x20)
    return (((v1 & 1) == 0) ^ a1) & 1;
  else
    return 0;
}

void _s19ReminderKitInternal16REMUserOperationO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X13 }
}

BOOL sub_1A458E97C@<W0>(unsigned int a1@<W8>)
{
  unsigned int v1;
  int v2;
  unsigned __int8 v4[25];

  if (v2)
    return 0;
  v4[2] = a1;
  if (v1 <= 0xFD)
  {
    v4[0] = v1;
    return a1 <= 0xFD && (_s19ReminderKitInternal25REMRDLUserOperationDetailO2eeoiySbAC_ACtFZ_0(v4) & 1) != 0;
  }
  return a1 > 0xFD;
}

void _s19ReminderKitInternal29REMRemindersOpenUserOperationO2eeoiySbAC_ACtFZ_0(unsigned __int16 *a1, __int16 *a2)
{
  unsigned int v2;
  __int16 v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 >> 14)
  {
    if (v2 >> 14 == 1)
    {
      if ((v3 & 0xC000) == 0x4000)
        sub_1A466A4B0(v2);
    }
    else
    {
      ((void (*)(void))((char *)&loc_1A458EC0C + 4 * byte_1A46A458D[v2 - 0x8000]))();
    }
  }
}

id sub_1A458EC60()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240118);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  sub_1A46902B8();
  v4 = sub_1A46902F4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) != 1)
  {
    v6 = (void *)sub_1A46902D0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  objc_msgSend(v3, sel_setTimeZone_, v6);

  v7 = (void *)sub_1A469087C();
  objc_msgSend(v3, sel_setDateFormat_, v7);

  return v3;
}

unint64_t sub_1A458ED8C()
{
  unint64_t result;

  result = qword_1EE71D180;
  if (!qword_1EE71D180)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE71D180);
  }
  return result;
}

unint64_t sub_1A458EDCC()
{
  unint64_t result;

  result = qword_1EE721570;
  if (!qword_1EE721570)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersInCalendarUserOperation, &type metadata for REMRemindersInCalendarUserOperation);
    atomic_store(result, (unint64_t *)&qword_1EE721570);
  }
  return result;
}

unint64_t sub_1A458EE14()
{
  unint64_t result;

  result = qword_1EE721578;
  if (!qword_1EE721578)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersWidgetUserOperation, &type metadata for REMRemindersWidgetUserOperation);
    atomic_store(result, (unint64_t *)&qword_1EE721578);
  }
  return result;
}

unint64_t sub_1A458EE5C()
{
  unint64_t result;

  result = qword_1EE721580;
  if (!qword_1EE721580)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersOpenUserOperation.SmartListType, &type metadata for REMRemindersOpenUserOperation.SmartListType);
    atomic_store(result, (unint64_t *)&qword_1EE721580);
  }
  return result;
}

unint64_t sub_1A458EEA4()
{
  unint64_t result;

  result = qword_1EE721588;
  if (!qword_1EE721588)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersCreateListUserOperation, &type metadata for REMRemindersCreateListUserOperation);
    atomic_store(result, (unint64_t *)&qword_1EE721588);
  }
  return result;
}

unint64_t sub_1A458EEEC()
{
  unint64_t result;

  result = qword_1EE721590;
  if (!qword_1EE721590)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSharedListUserOperationDetail, &type metadata for REMSharedListUserOperationDetail);
    atomic_store(result, (unint64_t *)&qword_1EE721590);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMAnalyticsEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_WORD *)a1 = *(_WORD *)a2;
        v7 = a2[2];
        a1[1] = a2[1];
        a1[2] = v7;
        swift_bridgeObjectRetain();
        v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70);
        v9 = *(int *)(v8 + 64);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_1A46900B4();
        v13 = *(_QWORD *)(v12 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
          goto LABEL_19;
        goto LABEL_10;
      case 1u:
        *(_WORD *)a1 = *(_WORD *)a2;
        v16 = a2[2];
        a1[1] = a2[1];
        a1[2] = v16;
        swift_bridgeObjectRetain();
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FF90);
        v17 = *(int *)(v8 + 64);
        v10 = (char *)a1 + v17;
        v11 = (char *)a2 + v17;
        v12 = sub_1A46900B4();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
          goto LABEL_10;
        goto LABEL_19;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v18 = a2[2];
        a1[1] = a2[1];
        a1[2] = v18;
        swift_bridgeObjectRetain();
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721568);
        v19 = *(int *)(v8 + 64);
        v10 = (char *)a1 + v19;
        v11 = (char *)a2 + v19;
        v12 = sub_1A46900B4();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_10:
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
LABEL_19:
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        v47 = *(int *)(v8 + 80);
        v48 = (_QWORD *)((char *)a1 + v47);
        v49 = (_QWORD *)((char *)a2 + v47);
        v50 = v49[1];
        *v48 = *v49;
        v48[1] = v50;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        v22 = a2[3];
        a1[2] = a2[2];
        a1[3] = v22;
        v23 = a2[5];
        a1[4] = a2[4];
        a1[5] = v23;
        v24 = a2[7];
        a1[6] = a2[6];
        a1[7] = v24;
        v25 = a2[8];
        v26 = a2[9];
        a1[8] = v25;
        a1[9] = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v27 = a2[1];
        *a1 = *a2;
        a1[1] = v27;
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        v28 = a2[5];
        a1[4] = a2[4];
        a1[5] = v28;
        v29 = a2[7];
        a1[6] = a2[6];
        a1[7] = v29;
        v30 = a2[9];
        a1[8] = a2[8];
        a1[9] = v30;
        v31 = a2[10];
        v32 = a2[11];
        a1[10] = v31;
        a1[11] = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v33 = a2[1];
        *a1 = *a2;
        a1[1] = v33;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v34 = a2[4];
        a1[3] = a2[3];
        a1[4] = v34;
        v35 = a2[6];
        a1[5] = a2[5];
        a1[6] = v35;
        v36 = a2[8];
        a1[7] = a2[7];
        a1[8] = v36;
        v37 = a2[10];
        a1[9] = a2[9];
        a1[10] = v37;
        v38 = a2[11];
        v39 = a2[12];
        a1[11] = v38;
        a1[12] = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v40 = a2[1];
        *a1 = *a2;
        a1[1] = v40;
        v41 = a2[3];
        a1[2] = a2[2];
        a1[3] = v41;
        v42 = a2[4];
        v43 = a2[5];
        a1[4] = v42;
        a1[5] = v43;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v44 = (void *)*a2;
        v45 = a2[1];
        *a1 = v44;
        a1[1] = v45;
        v46 = v44;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_QWORD *assignWithCopy for REMAnalyticsEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  if (a1 != a2)
  {
    sub_1A458B7CC((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_WORD *)a1 = *(_WORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70);
        v7 = *(int *)(v6 + 64);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_1A46900B4();
        v11 = *(_QWORD *)(v10 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
          goto LABEL_17;
        goto LABEL_8;
      case 1u:
        *(_WORD *)a1 = *(_WORD *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FF90);
        v12 = *(int *)(v6 + 64);
        v8 = (char *)a1 + v12;
        v9 = (char *)a2 + v12;
        v10 = sub_1A46900B4();
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
          goto LABEL_8;
        goto LABEL_17;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721568);
        v13 = *(int *)(v6 + 64);
        v8 = (char *)a1 + v13;
        v9 = (char *)a2 + v13;
        v10 = sub_1A46900B4();
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
LABEL_8:
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
LABEL_17:
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        v17 = *(int *)(v6 + 80);
        v18 = (_QWORD *)((char *)a1 + v17);
        v19 = (_QWORD *)((char *)a2 + v17);
        *v18 = *v19;
        v18[1] = v19[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        *((_BYTE *)a1 + 25) = *((_BYTE *)a2 + 25);
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 7u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_19;
      case 0xCu:
        v15 = (void *)*a2;
        *a1 = *a2;
        a1[1] = a2[1];
        v16 = v15;
        swift_bridgeObjectRetain();
LABEL_19:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for REMAnalyticsEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721568);
      v15 = *(int *)(v14 + 64);
      v16 = &a1[v15];
      v17 = &a2[v15];
      v18 = sub_1A46900B4();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      *(_OWORD *)&a1[*(int *)(v14 + 80)] = *(_OWORD *)&a2[*(int *)(v14 + 80)];
      goto LABEL_17;
    case 1:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FF90);
      v22 = *(int *)(v21 + 64);
      v23 = &a1[v22];
      v24 = &a2[v22];
      v25 = sub_1A46900B4();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      *(_OWORD *)&a1[*(int *)(v21 + 80)] = *(_OWORD *)&a2[*(int *)(v21 + 80)];
      goto LABEL_17;
    case 0:
      *(_WORD *)a1 = *(_WORD *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70);
      v8 = *(int *)(v7 + 64);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1A46900B4();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      *(_OWORD *)&a1[*(int *)(v7 + 80)] = *(_OWORD *)&a2[*(int *)(v7 + 80)];
LABEL_17:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for REMAnalyticsEvent(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_1A458B7CC((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721568);
        v15 = *(int *)(v14 + 64);
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = sub_1A46900B4();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
        *(_OWORD *)&a1[*(int *)(v14 + 80)] = *(_OWORD *)&a2[*(int *)(v14 + 80)];
        goto LABEL_18;
      case 1:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FF90);
        v22 = *(int *)(v21 + 64);
        v23 = &a1[v22];
        v24 = &a2[v22];
        v25 = sub_1A46900B4();
        v26 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        *(_OWORD *)&a1[*(int *)(v21 + 80)] = *(_OWORD *)&a2[*(int *)(v21 + 80)];
        goto LABEL_18;
      case 0:
        *(_WORD *)a1 = *(_WORD *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FF70);
        v8 = *(int *)(v7 + 64);
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1A46900B4();
        v12 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
        }
        *(_OWORD *)&a1[*(int *)(v7 + 80)] = *(_OWORD *)&a2[*(int *)(v7 + 80)];
LABEL_18:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_1A458FFAC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  char *v10;
  char *v11;
  char *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;

  v5 = &unk_1A46A4968;
  v6 = &unk_1A46A4980;
  sub_1A452A9E8();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(v0 - 8) + 64;
    swift_getTupleTypeLayout();
    v10 = &v9;
    swift_getTupleTypeLayout();
    v11 = &v4;
    v5 = &unk_1A46A49B0;
    v6 = &unk_1A46A4980;
    v7 = v2;
    v8 = &unk_1A46A4980;
    swift_getTupleTypeLayout();
    v12 = &v3;
    v13 = &unk_1A46A49C8;
    v14 = &unk_1A46A49E0;
    v15 = &unk_1A46A49F8;
    v16 = &unk_1A46A4A10;
    v17 = &unk_1A46A4980;
    v18 = &unk_1A46A4A28;
    v19 = &unk_1A46A4A40;
    v20 = &unk_1A46A4A58;
    v21 = MEMORY[0x1E0DEE9C8] + 64;
    v22 = &unk_1A46A4A70;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t getEnumTagSinglePayload for REMUserOperation(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 65285 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65285 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65285;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65285;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65285;
  }
LABEL_17:
  v6 = *((unsigned __int8 *)a1 + 1);
  if (v6 <= 5)
    v7 = -1;
  else
    v7 = v6 ^ 0xFF;
  return (v7 + 1);
}

uint64_t storeEnumTagSinglePayload for REMUserOperation(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65285 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65285 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A45901EC + 4 * byte_1A46A45D7[v4]))();
  *a1 = a2 - 251;
  return ((uint64_t (*)(void))((char *)sub_1A4590220 + 4 * byte_1A46A45D2[v4]))();
}

uint64_t sub_1A4590220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A4590228(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A4590230);
  return result;
}

uint64_t sub_1A459023C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A4590244);
  *(_BYTE *)(result + 1) = -(char)a2;
  return result;
}

uint64_t sub_1A4590248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A4590250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A459025C(unsigned __int8 *a1)
{
  if (a1[1] <= 4u)
    return a1[1];
  else
    return *a1 + 5;
}

_BYTE *sub_1A4590274(_BYTE *result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  result[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMUserOperation()
{
  return &type metadata for REMUserOperation;
}

ValueMetadata *type metadata accessor for REMRemindersInCalendarUserOperation()
{
  return &type metadata for REMRemindersInCalendarUserOperation;
}

uint64_t storeEnumTagSinglePayload for REMRemindersWidgetUserOperation(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A45902F4 + 4 * byte_1A46A45DC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4590314 + 4 * byte_1A46A45E1[v4]))();
}

_BYTE *sub_1A45902F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4590314(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A459031C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4590324(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A459032C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4590334(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersWidgetUserOperation()
{
  return &type metadata for REMRemindersWidgetUserOperation;
}

uint64_t getEnumTagSinglePayload for REMRemindersOpenUserOperation(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0xFFE)
    goto LABEL_17;
  if (a2 + 61442 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 61442 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 61442;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 61442;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 61442;
  }
LABEL_17:
  v6 = ((*a1 >> 14) | (4 * ((*a1 >> 4) & 0x3E0 | (*a1 >> 3)))) ^ 0xFFF;
  if (v6 >= 0xFFD)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for REMRemindersOpenUserOperation(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 61442 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 61442 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4590448 + 4 * byte_1A46A45EB[v4]))();
  *a1 = a2 - 4094;
  return ((uint64_t (*)(void))((char *)sub_1A459047C + 4 * byte_1A46A45E6[v4]))();
}

uint64_t sub_1A459047C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A4590484(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1A459048CLL);
  return result;
}

uint64_t sub_1A45904AC(uint64_t result, int a2)
{
  unsigned int v2;

  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1A45904B4);
  v2 = ((-a2 >> 2) & 0x3FF) - (a2 << 10);
  *(_WORD *)result = (16 * v2) & 0xFE00 | (8 * (v2 & 0x1F));
  return result;
}

uint64_t sub_1A45904B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A45904C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1A45904CC(unsigned __int16 *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;

  v1 = *a1;
  v2 = (__int16)v1;
  v3 = v1 >> 14;
  v4 = (v1 & 7 | (8 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0)
    return v3;
  else
    return v4;
}

_WORD *sub_1A45904F4(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_1A4590504(_WORD *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 0x107 | ((_WORD)a2 << 14);
  else
    *result = (32 * (a2 - 2)) & 0x100 | (a2 - 2) & 7 | 0x8000;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersOpenUserOperation()
{
  return &type metadata for REMRemindersOpenUserOperation;
}

uint64_t _s19ReminderKitInternal29REMRemindersOpenUserOperationO13SmartListTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A4590598 + 4 * byte_1A46A45F5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A45905CC + 4 * byte_1A46A45F0[v4]))();
}

uint64_t sub_1A45905CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45905D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45905DCLL);
  return result;
}

uint64_t sub_1A45905E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45905F0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A45905F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45905FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersOpenUserOperation.SmartListType()
{
  return &type metadata for REMRemindersOpenUserOperation.SmartListType;
}

uint64_t storeEnumTagSinglePayload for REMRemindersCreateListUserOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4590664 + 4 * byte_1A46A45FF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A4590698 + 4 * byte_1A46A45FA[v4]))();
}

uint64_t sub_1A4590698(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45906A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45906A8);
  return result;
}

uint64_t sub_1A45906B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45906BCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A45906C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45906C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersCreateListUserOperation()
{
  return &type metadata for REMRemindersCreateListUserOperation;
}

uint64_t getEnumTagSinglePayload for REMRDLUserOperationDetail(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7A)
    goto LABEL_17;
  if (a2 + 134 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 134) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 134;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 134;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 134;
  }
LABEL_17:
  v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x79)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for REMRDLUserOperationDetail(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 134 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 134) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7A)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x79)
    return ((uint64_t (*)(void))((char *)&loc_1A45907D0 + 4 * byte_1A46A4609[v4]))();
  *a1 = a2 - 122;
  return ((uint64_t (*)(void))((char *)sub_1A4590804 + 4 * byte_1A46A4604[v4]))();
}

uint64_t sub_1A4590804(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A459080C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4590814);
  return result;
}

uint64_t sub_1A459082C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4590834);
  *(_BYTE *)result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1A4590838(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4590840(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A459084C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 <= 0x3F)
    return v1 >> 5;
  else
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
}

_BYTE *sub_1A4590868(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *sub_1A4590878(_BYTE *result, unsigned int a2)
{
  if (a2 < 2)
    *result = *result & 1 | (32 * a2);
  else
    *result = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  return result;
}

ValueMetadata *type metadata accessor for REMRDLUserOperationDetail()
{
  return &type metadata for REMRDLUserOperationDetail;
}

uint64_t storeEnumTagSinglePayload for REMSharedListUserOperationDetail(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A4590908 + 4 * byte_1A46A4613[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A459093C + 4 * byte_1A46A460E[v4]))();
}

uint64_t sub_1A459093C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4590944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A459094CLL);
  return result;
}

uint64_t sub_1A4590958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4590960);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4590964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A459096C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSharedListUserOperationDetail()
{
  return &type metadata for REMSharedListUserOperationDetail;
}

void REMSearchableItemAttributeName.attributeKey.getter()
{
  __asm { BR              X10 }
}

id sub_1A45909CC@<X0>(unsigned int a1@<W8>)
{
  _BOOL8 v1;
  id v2;
  void *v3;
  id v4;

  v1 = a1 < 2;
  v2 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  v3 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v3, 0, 0, v1, 0);

  if (!v4)
  {
    __break(1u);
    JUMPOUT(0x1A4590B20);
  }
  return v4;
}

uint64_t REMSearchableItemAttributeName.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4590B74 + 4 * byte_1A46A4CF0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1A4590B74()
{
  return 0x656A624F4D45525FLL;
}

uint64_t sub_1A4590B94()
{
  return 0x6F6363414D45525FLL;
}

uint64_t sub_1A4590BB8()
{
  return 0x7473694C4D45525FLL;
}

uint64_t sub_1A4590BD4()
{
  return 0x6D6574494D45525FLL;
}

uint64_t sub_1A4590BF4()
{
  return 0x67616C464D45525FLL;
}

uint64_t sub_1A4590C14()
{
  return 0x655273494D45525FLL;
}

unint64_t sub_1A4590C38()
{
  return 0xD000000000000020;
}

ReminderKitInternal::REMSearchableItemAttributeName_optional __swiftcall REMSearchableItemAttributeName.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSearchableItemAttributeName_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static REMSearchableItemAttributeName.allCases.getter()
{
  return &unk_1E4C0FCB0;
}

void sub_1A4590CB8(char *a1)
{
  sub_1A4669A1C(*a1);
}

void sub_1A4590CC4()
{
  char *v0;

  sub_1A4637FDC(0, *v0);
}

void sub_1A4590CD0(uint64_t a1)
{
  char *v1;

  sub_1A4636AC0(a1, *v1);
}

void sub_1A4590CD8(uint64_t a1)
{
  char *v1;

  sub_1A4637FDC(a1, *v1);
}

ReminderKitInternal::REMSearchableItemAttributeName_optional sub_1A4590CE0(Swift::String *a1)
{
  return REMSearchableItemAttributeName.init(rawValue:)(*a1);
}

uint64_t sub_1A4590CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSearchableItemAttributeName.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1A4590D10(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FCB0;
}

uint64_t REMSearchableItemType.entityName.getter()
{
  id v0;
  uint64_t v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_cdEntityName);
  v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v1;
}

ReminderKitInternal::REMSearchableItemType_optional __swiftcall REMSearchableItemType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ReminderKitInternal::REMSearchableItemType_optional)rawValue;
}

uint64_t REMSearchableItemType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1A4590DB8()
{
  sub_1A459675C();
  return sub_1A4690B7C();
}

uint64_t sub_1A4590E14()
{
  sub_1A459675C();
  return sub_1A4690B40();
}

BOOL static REMSearchableListType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMSearchableListType.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t sub_1A4590EA0()
{
  _BYTE *v0;

  if (*v0)
    return 1701736302;
  else
    return 0x797265636F7267;
}

uint64_t sub_1A4590ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45964D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4590EF8()
{
  sub_1A45911BC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4590F20()
{
  sub_1A45911BC();
  return sub_1A4691DC4();
}

uint64_t sub_1A4590F48()
{
  sub_1A4591244();
  return sub_1A4691DB8();
}

uint64_t sub_1A4590F70()
{
  sub_1A4591244();
  return sub_1A4691DC4();
}

uint64_t sub_1A4590F98()
{
  sub_1A4591200();
  return sub_1A4691DB8();
}

uint64_t sub_1A4590FC0()
{
  sub_1A4591200();
  return sub_1A4691DC4();
}

uint64_t REMSearchableListType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215A0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215A8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215B0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45911BC();
  sub_1A4691D40();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1A4591200();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1A4591244();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_1A45911BC()
{
  unint64_t result;

  result = qword_1EE7215B8;
  if (!qword_1EE7215B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5924, &type metadata for REMSearchableListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7215B8);
  }
  return result;
}

unint64_t sub_1A4591200()
{
  unint64_t result;

  result = qword_1EE7215C0;
  if (!qword_1EE7215C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A58D4, &type metadata for REMSearchableListType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7215C0);
  }
  return result;
}

unint64_t sub_1A4591244()
{
  unint64_t result;

  result = qword_1EE7215C8;
  if (!qword_1EE7215C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5884, &type metadata for REMSearchableListType.GroceryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7215C8);
  }
  return result;
}

uint64_t REMSearchableListType.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t REMSearchableListType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215D0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215D8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7215E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45911BC();
  v11 = v33;
  sub_1A4691D28();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1A46917DC();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1A46914B8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMSearchableListType;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1A4591200();
    sub_1A4691734();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1A4591244();
    v22 = v6;
    sub_1A4691734();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1A4591624@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMSearchableListType.init(from:)(a1, a2);
}

uint64_t sub_1A4591638(_QWORD *a1)
{
  return REMSearchableListType.encode(to:)(a1);
}

ReminderKitInternal::REMStringMatchingStyle_optional __swiftcall REMStringMatchingStyle.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ReminderKitInternal::REMStringMatchingStyle_optional)rawValue;
}

uint64_t REMStringMatchingStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ReminderKitInternal::REMStringMatchingStyle_optional sub_1A4591668(Swift::Int *a1)
{
  return REMStringMatchingStyle.init(rawValue:)(*a1);
}

uint64_t sub_1A4591670()
{
  sub_1A4596718();
  return sub_1A4690B7C();
}

uint64_t sub_1A45916CC()
{
  sub_1A4596718();
  return sub_1A4690B40();
}

uint64_t REMSearchCriterion.Inclusion.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6564756C636E69;
  if (*v0 != 1)
    v1 = 0x466564756C636E69;
  if (*v0)
    return v1;
  else
    return 0x6564756C637865;
}

BOOL static REMSearchCriterion.Inclusion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMSearchCriterion.Inclusion.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t sub_1A45917B0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6564756C636E69;
  if (*v0 != 1)
    v1 = 0x466564756C636E69;
  if (*v0)
    return v1;
  else
    return 0x6564756C637865;
}

uint64_t sub_1A459180C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45965B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4591830()
{
  sub_1A4591BD4();
  return sub_1A4691DB8();
}

uint64_t sub_1A4591858()
{
  sub_1A4591BD4();
  return sub_1A4691DC4();
}

uint64_t sub_1A4591880()
{
  sub_1A4591CA0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45918A8()
{
  sub_1A4591CA0();
  return sub_1A4691DC4();
}

uint64_t sub_1A45918D0()
{
  sub_1A4591C5C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45918F8()
{
  sub_1A4591C5C();
  return sub_1A4691DC4();
}

uint64_t sub_1A4591920()
{
  sub_1A4591C18();
  return sub_1A4691DB8();
}

uint64_t sub_1A4591948()
{
  sub_1A4591C18();
  return sub_1A4691DC4();
}

uint64_t REMSearchCriterion.Inclusion.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215F0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7215F8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721600);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721608);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4591BD4();
  sub_1A4691D40();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1A4591C5C();
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1A4591C18();
      v16 = v21;
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1A4591CA0();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_1A4591BD4()
{
  unint64_t result;

  result = qword_1EE721610;
  if (!qword_1EE721610)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5834, &type metadata for REMSearchCriterion.Inclusion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721610);
  }
  return result;
}

unint64_t sub_1A4591C18()
{
  unint64_t result;

  result = qword_1EE721618;
  if (!qword_1EE721618)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A57E4, &type metadata for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721618);
  }
  return result;
}

unint64_t sub_1A4591C5C()
{
  unint64_t result;

  result = qword_1EE721620;
  if (!qword_1EE721620)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5794, &type metadata for REMSearchCriterion.Inclusion.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721620);
  }
  return result;
}

unint64_t sub_1A4591CA0()
{
  unint64_t result;

  result = qword_1EE721628;
  if (!qword_1EE721628)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5744, &type metadata for REMSearchCriterion.Inclusion.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721628);
  }
  return result;
}

uint64_t REMSearchCriterion.Inclusion.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t REMSearchCriterion.Inclusion.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721630);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721638);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721640);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE721648);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4591BD4();
  v13 = v41;
  sub_1A4691D28();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1A46917DC();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1A46914B8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v25 = &type metadata for REMSearchCriterion.Inclusion;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1A4591C5C();
      v20 = v9;
      sub_1A4691734();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1A4591C18();
      v28 = v15;
      sub_1A4691734();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1A4591CA0();
    sub_1A4691734();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1A459216C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMSearchCriterion.Inclusion.init(from:)(a1, a2);
}

uint64_t sub_1A4592180(_QWORD *a1)
{
  return REMSearchCriterion.Inclusion.encode(to:)(a1);
}

id CSSearchableItemAttributeSet.rem_objectID.getter()
{
  return sub_1A45927A8(1);
}

void CSSearchableItemAttributeSet.rem_objectID.setter(void *a1)
{
  sub_1A4592948(a1, 0x656A624F4D45525FLL, 0xEC00000044497463, 1);
}

uint64_t CSSearchableItemAttributeSet.rem_objectIDString.getter()
{
  return sub_1A4592ABC(1);
}

void CSSearchableItemAttributeSet.rem_objectIDString.setter(uint64_t a1, uint64_t a2)
{
  sub_1A4592B3C(a1, a2, 0x656A624F4D45525FLL, 0xEC00000044497463, 1);
}

void (*CSSearchableItemAttributeSet.rem_objectID.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  v4 = sub_1A468FF7C();
  v3[2] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[3] = v5;
  v3[4] = malloc(*(_QWORD *)(v5 + 64));
  *v3 = CSSearchableItemAttributeSet.rem_objectID.getter();
  return sub_1A4592258;
}

void sub_1A4592258(id **a1, char a2)
{
  sub_1A4592CA0(a1, a2, 0x656A624F4D45525FLL, 0xEC00000044497463, 1);
}

void sub_1A459227C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A45922D4()
{
  void *v0;
  unint64_t *v1;
  void *v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _OWORD v7[6];

  v2 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v0, sel_attributeForKey_, v2);

  if (v3
    && (sub_1A4691278(),
        swift_unknownObjectRelease(),
        sub_1A444A940(v6, v7),
        sub_1A444A940(v7, v6),
        sub_1A444AA40(0, v1),
        (swift_dynamicCast() & 1) != 0))
  {
    return v5;
  }
  else
  {
    return 0;
  }
}

void (*CSSearchableItemAttributeSet.rem_objectIDString.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  sub_1A459227C(1);
  if (v3)
  {
    v4 = v3;
    v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A4592504;
}

void sub_1A4592504(uint64_t a1, char a2)
{
  sub_1A4592FE0(a1, a2, 0x656A624F4D45525FLL, 0xEC00000044497463, 1);
}

id CSSearchableItemAttributeSet.rem_accountID.getter()
{
  return sub_1A45927A8(2);
}

void sub_1A4592530(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v7 = sub_1A468FF7C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  if (*a1)
  {
    v12 = objc_msgSend(v11, sel_urlRepresentation);
    sub_1A468FF1C();

    v13 = sub_1A468FE98();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    v13 = 0;
    v15 = 0;
  }
  a5(v13, v15);

}

void CSSearchableItemAttributeSet.rem_accountID.setter(void *a1)
{
  sub_1A4592948(a1, 0x6F6363414D45525FLL, 0xED00004449746E75, 0);
}

uint64_t CSSearchableItemAttributeSet.rem_accountIDString.getter()
{
  return sub_1A4592ABC(2);
}

void CSSearchableItemAttributeSet.rem_accountIDString.setter(uint64_t a1, uint64_t a2)
{
  sub_1A4592B3C(a1, a2, 0x6F6363414D45525FLL, 0xED00004449746E75, 0);
}

void (*CSSearchableItemAttributeSet.rem_accountID.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  v4 = sub_1A468FF7C();
  v3[2] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[3] = v5;
  v3[4] = malloc(*(_QWORD *)(v5 + 64));
  *v3 = CSSearchableItemAttributeSet.rem_accountID.getter();
  return sub_1A45926DC;
}

void sub_1A45926DC(id **a1, char a2)
{
  sub_1A4592CA0(a1, a2, 0x6F6363414D45525FLL, 0xED00004449746E75, 0);
}

void (*CSSearchableItemAttributeSet.rem_accountIDString.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  sub_1A459227C(2);
  if (v3)
  {
    v4 = v3;
    v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A4592778;
}

void sub_1A4592778(uint64_t a1, char a2)
{
  sub_1A4592FE0(a1, a2, 0x6F6363414D45525FLL, 0xED00004449746E75, 0);
}

id CSSearchableItemAttributeSet.rem_listID.getter()
{
  return sub_1A45927A8(3);
}

id sub_1A45927A8(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A468FF7C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A459227C(a1);
  v10 = v9;
  if (v9)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A468FF58();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1A44E22C8((uint64_t)v4);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      v11 = (void *)sub_1A468FED4();
      v10 = objc_msgSend((id)objc_opt_self(), sel_objectIDWithURL_, v11);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  return v10;
}

void CSSearchableItemAttributeSet.rem_listID.setter(void *a1)
{
  sub_1A4592948(a1, 0x7473694C4D45525FLL, 0xEA00000000004449, 0);
}

void sub_1A4592948(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;

  v6 = v4;
  v8 = sub_1A468FF7C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = objc_msgSend(a1, sel_urlRepresentation);
    sub_1A468FF1C();

    sub_1A468FE98();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v13 = sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  v15 = (void *)sub_1A469087C();
  v16 = objc_msgSend(v14, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v15, 0, 0, a4 & 1, 0);

  if (v16)
  {
    objc_msgSend(v6, sel_setValue_forCustomKey_, v13, v16);
    swift_unknownObjectRelease();

  }
  else
  {
    __break(1u);
  }
}

uint64_t CSSearchableItemAttributeSet.rem_listIDString.getter()
{
  return sub_1A4592ABC(3);
}

uint64_t sub_1A4592ABC(char a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  sub_1A459227C(a1);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v3;
}

void CSSearchableItemAttributeSet.rem_listIDString.setter(uint64_t a1, uint64_t a2)
{
  sub_1A4592B3C(a1, a2, 0x7473694C4D45525FLL, 0xEA00000000004449, 0);
}

void sub_1A4592B3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  void *v5;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  if (a2)
  {
    v7 = sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  v9 = (void *)sub_1A469087C();
  v10 = objc_msgSend(v8, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v9, 0, 0, a5 & 1, 0);

  if (v10)
  {
    objc_msgSend(v5, sel_setValue_forCustomKey_, v7, v10);
    swift_unknownObjectRelease();

  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_listID.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[1] = v1;
  v4 = sub_1A468FF7C();
  v3[2] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[3] = v5;
  v3[4] = malloc(*(_QWORD *)(v5 + 64));
  *v3 = CSSearchableItemAttributeSet.rem_listID.getter();
  return sub_1A4592C80;
}

void sub_1A4592C80(id **a1, char a2)
{
  sub_1A4592CA0(a1, a2, 0x7473694C4D45525FLL, 0xEA00000000004449, 0);
}

void sub_1A4592CA0(id **a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  void **v6;
  id v7;
  void *v8;
  void (**v9)(void *, void *);
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void (**v14)(void *, void *);
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;

  v6 = *a1;
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    if (v7)
    {
      v9 = (void (**)(void *, void *))v6[3];
      v8 = v6[4];
      v10 = v6[2];
      v11 = objc_msgSend(v7, sel_urlRepresentation);
      sub_1A468FF1C();

      sub_1A468FE98();
      v9[1](v8, v10);
      v12 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = 0;
    }
    v18 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    v19 = (void *)sub_1A469087C();
    v20 = objc_msgSend(v18, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v19, 0, 0, a5 & 1, 0);

    if (v20)
    {
      v21 = v6[4];
      objc_msgSend(v6[1], sel_setValue_forCustomKey_, v12, v20);

      swift_unknownObjectRelease();
      v7 = *v6;
LABEL_12:

      free(v21);
      free(v6);
      return;
    }
    __break(1u);
  }
  else
  {
    if (v7)
    {
      v14 = (void (**)(void *, void *))v6[3];
      v13 = v6[4];
      v15 = v6[2];
      v16 = objc_msgSend(**a1, sel_urlRepresentation);
      sub_1A468FF1C();

      sub_1A468FE98();
      v14[1](v13, v15);
      v17 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    v22 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    v23 = (void *)sub_1A469087C();
    v24 = objc_msgSend(v22, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v23, 0, 0, a5 & 1, 0);

    if (v24)
    {
      v21 = v6[4];
      objc_msgSend(v6[1], sel_setValue_forCustomKey_, v17, v24);

      swift_unknownObjectRelease();
      goto LABEL_12;
    }
  }
  __break(1u);
}

void sub_1A4592EE4(char a1@<W3>, uint64_t *a2@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1A459227C(a1);
  if (v3)
  {
    v4 = v3;
    v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void (*CSSearchableItemAttributeSet.rem_listIDString.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  sub_1A459227C(3);
  if (v3)
  {
    v4 = v3;
    v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1A4592FC0;
}

void sub_1A4592FC0(uint64_t a1, char a2)
{
  sub_1A4592FE0(a1, a2, 0x7473694C4D45525FLL, 0xEA00000000004449, 0);
}

void sub_1A4592FE0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v7 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    if (v7)
    {
      swift_bridgeObjectRetain();
      v8 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = 0;
    }
    v10 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    v11 = (void *)sub_1A469087C();
    v12 = objc_msgSend(v10, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v11, 0, 0, a5 & 1, 0);

    if (v12)
    {
      objc_msgSend(*(id *)(a1 + 16), sel_setValue_forCustomKey_, v8, v12);

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
  else
  {
    if (v7)
    {
      v9 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    v13 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    v14 = (void *)sub_1A469087C();
    v15 = objc_msgSend(v13, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v14, 0, 0, a5 & 1, 0);

    if (v15)
    {
      objc_msgSend(*(id *)(a1 + 16), sel_setValue_forCustomKey_, v9, v15);

      swift_unknownObjectRelease();
      return;
    }
  }
  __break(1u);
}

void CSSearchableItemAttributeSet.rem_itemType.getter(char *a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  char v5;

  sub_1A459227C(4);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_integerValue);

    if (v4 == (id)1)
      v5 = 1;
    else
      v5 = 2;
    if (!v4)
      v5 = 0;
  }
  else
  {
    v5 = 2;
  }
  *a1 = v5;
}

void CSSearchableItemAttributeSet.rem_itemType.setter(unsigned __int8 *a1)
{
  void *v1;
  int v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  if (v2 == 2 || (v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v2 & 1)) == 0)
    v4 = 0;
  else
    v4 = v3;
  v5 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  v6 = (void *)sub_1A469087C();
  v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 0, 0, 0, 0);

  if (v7)
  {
    objc_msgSend(v1, sel_setValue_forCustomKey_, v4, v7);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_itemType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  char v6;

  *a1 = v1;
  v2 = (char *)(a1 + 1);
  sub_1A459227C(4);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_integerValue);

    if (v5 == (id)1)
      v6 = 1;
    else
      v6 = 2;
    if (!v5)
      v6 = 0;
  }
  else
  {
    v6 = 2;
  }
  *v2 = v6;
  return sub_1A4593380;
}

void sub_1A4593380(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v3;
  char v4;

  if ((a2 & 1) != 0)
  {
    v3 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v3;
  }
  else
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  CSSearchableItemAttributeSet.rem_itemType.setter(v2);
}

id CSSearchableItemAttributeSet.rem_flagged.getter()
{
  void *v0;
  void *v1;
  id v2;

  sub_1A459227C(5);
  v1 = v0;
  if (!v0)
    return 0;
  v2 = objc_msgSend(v0, sel_integerValue);

  return v2;
}

void sub_1A4593428(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;

  sub_1A459227C(5);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_integerValue);

  }
  else
  {
    v4 = 0;
  }
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v3 == 0;
}

void CSSearchableItemAttributeSet.rem_flagged.setter(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  if ((a2 & 1) != 0 || (v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1)) == 0)
    v4 = 0;
  else
    v4 = v3;
  v5 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  v6 = (void *)sub_1A469087C();
  v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 0, 0, 0, 0);

  if (v7)
  {
    objc_msgSend(v2, sel_setValue_forCustomKey_, v4, v7);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_flagged.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  id v5;

  *(_QWORD *)(a1 + 16) = v1;
  sub_1A459227C(5);
  v4 = v3;
  if (v3)
  {
    v5 = objc_msgSend(v3, sel_integerValue);

  }
  else
  {
    v5 = 0;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v4 == 0;
  return sub_1A4593618;
}

void sub_1A4593618(uint64_t a1)
{
  CSSearchableItemAttributeSet.rem_flagged.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t CSSearchableItemAttributeSet.rem_isRecurrent.getter()
{
  return sub_1A4593710(6);
}

void CSSearchableItemAttributeSet.rem_isRecurrent.setter(char a1)
{
  sub_1A45937E8(a1);
}

void (*CSSearchableItemAttributeSet.rem_isRecurrent.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;

  *a1 = v1;
  v2 = (unsigned __int8 *)(a1 + 1);
  sub_1A459227C(6);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_BOOLValue);

  }
  else
  {
    v5 = 2;
  }
  *v2 = v5;
  return sub_1A45936E4;
}

void sub_1A45936E4(uint64_t a1)
{
  CSSearchableItemAttributeSet.rem_isRecurrent.setter(*(_BYTE *)(a1 + 8));
}

uint64_t CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.getter()
{
  return sub_1A4593710(7);
}

uint64_t sub_1A4593710(char a1)
{
  void *v1;
  void *v2;
  id v3;

  sub_1A459227C(a1);
  if (!v1)
    return 2;
  v2 = v1;
  v3 = objc_msgSend(v1, sel_BOOLValue);

  return (uint64_t)v3;
}

void sub_1A4593764(char a1@<W3>, unsigned __int8 *a2@<X8>)
{
  void *v3;
  void *v4;
  unsigned __int8 v5;

  sub_1A459227C(a1);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_BOOLValue);

  }
  else
  {
    v5 = 2;
  }
  *a2 = v5;
}

void CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.setter(char a1)
{
  sub_1A45937E8(a1);
}

void sub_1A45937E8(char a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  if (a1 == 2 || (v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, a1 & 1)) == 0)
    v4 = 0;
  else
    v4 = v3;
  v5 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  v6 = (void *)sub_1A469087C();
  v7 = objc_msgSend(v5, sel_initWithKeyName_searchable_searchableByDefault_unique_multiValued_, v6, 0, 0, 0, 0);

  if (v7)
  {
    objc_msgSend(v1, sel_setValue_forCustomKey_, v4, v7);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void (*CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;

  *a1 = v1;
  v2 = (unsigned __int8 *)(a1 + 1);
  sub_1A459227C(7);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_BOOLValue);

  }
  else
  {
    v5 = 2;
  }
  *v2 = v5;
  return sub_1A4593954;
}

void sub_1A4593954(uint64_t a1)
{
  CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.setter(*(_BYTE *)(a1 + 8));
}

uint64_t REMReminder.displayString.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  id v4;
  id v5;
  void *v6;

  v1 = v0;
  objc_msgSend(v0, sel_priority);
  v2 = REMReminderPriorityLevelForPriority();
  if (v2 == 3
    || v2 == 2
    || (v2 == 1 ? (v3 = 0xE100000000000000) : (v3 = 0xE000000000000000), (v3 & 0x300000000000000) != 0))
  {
    swift_bridgeObjectRetain();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
  }
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, sel_titleAsString);
  if (!v4)
    v4 = (id)_REMGetLocalizedString();
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A4690984();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend(v1, sel_notesAsString);
  if (v5)
  {
    v6 = v5;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t REMList.displayString.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_displayName);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

unint64_t sub_1A4593B80()
{
  unint64_t result;

  result = qword_1EE721658;
  if (!qword_1EE721658)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableItemAttributeName, &type metadata for REMSearchableItemAttributeName);
    atomic_store(result, (unint64_t *)&qword_1EE721658);
  }
  return result;
}

unint64_t sub_1A4593BC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE721660;
  if (!qword_1EE721660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721668);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE721660);
  }
  return result;
}

unint64_t sub_1A4593C18()
{
  unint64_t result;

  result = qword_1EE721670;
  if (!qword_1EE721670)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableItemType, &type metadata for REMSearchableItemType);
    atomic_store(result, (unint64_t *)&qword_1EE721670);
  }
  return result;
}

unint64_t sub_1A4593C60()
{
  unint64_t result;

  result = qword_1EE721678;
  if (!qword_1EE721678)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableListType, &type metadata for REMSearchableListType);
    atomic_store(result, (unint64_t *)&qword_1EE721678);
  }
  return result;
}

unint64_t sub_1A4593CA8()
{
  unint64_t result;

  result = qword_1EE721680;
  if (!qword_1EE721680)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStringMatchingStyle, &type metadata for REMStringMatchingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE721680);
  }
  return result;
}

unint64_t sub_1A4593CF0()
{
  unint64_t result;

  result = qword_1EE721688;
  if (!qword_1EE721688)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchCriterion.Inclusion, &type metadata for REMSearchCriterion.Inclusion);
    atomic_store(result, (unint64_t *)&qword_1EE721688);
  }
  return result;
}

uint64_t sub_1A4593D34()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_displayName);
  v2 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v2;
}

id sub_1A4593D88@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = CSSearchableItemAttributeSet.rem_objectID.getter();
  *a1 = result;
  return result;
}

void sub_1A4593DB0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A4592530(a1, a2, a3, a4, CSSearchableItemAttributeSet.rem_objectIDString.setter);
}

void sub_1A4593DCC(uint64_t *a1@<X8>)
{
  sub_1A4592EE4(1, a1);
}

uint64_t sub_1A4593DE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CSSearchableItemAttributeSet.rem_objectIDString.setter);
}

id sub_1A4593DF0@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = CSSearchableItemAttributeSet.rem_accountID.getter();
  *a1 = result;
  return result;
}

void sub_1A4593E18(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A4592530(a1, a2, a3, a4, CSSearchableItemAttributeSet.rem_accountIDString.setter);
}

void sub_1A4593E34(uint64_t *a1@<X8>)
{
  sub_1A4592EE4(2, a1);
}

uint64_t sub_1A4593E4C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CSSearchableItemAttributeSet.rem_accountIDString.setter);
}

uint64_t keypath_set_2Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

id sub_1A4593E98@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = CSSearchableItemAttributeSet.rem_listID.getter();
  *a1 = result;
  return result;
}

void sub_1A4593EC0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1A4592530(a1, a2, a3, a4, CSSearchableItemAttributeSet.rem_listIDString.setter);
}

void sub_1A4593EDC(uint64_t *a1@<X8>)
{
  sub_1A4592EE4(3, a1);
}

uint64_t sub_1A4593EF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))CSSearchableItemAttributeSet.rem_listIDString.setter);
}

void sub_1A4593F00(_BYTE *a1@<X8>)
{
  char v2;

  CSSearchableItemAttributeSet.rem_itemType.getter(&v2);
  *a1 = v2;
}

void sub_1A4593F38(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  CSSearchableItemAttributeSet.rem_itemType.setter(&v1);
}

void sub_1A4593F70(uint64_t a1)
{
  CSSearchableItemAttributeSet.rem_flagged.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1A4593FA0(unsigned __int8 *a1@<X8>)
{
  sub_1A4593764(6, a1);
}

void sub_1A4593FB8(char *a1)
{
  CSSearchableItemAttributeSet.rem_isRecurrent.setter(*a1);
}

void sub_1A4593FDC(unsigned __int8 *a1@<X8>)
{
  sub_1A4593764(7, a1);
}

void sub_1A4593FF4(char *a1)
{
  CSSearchableItemAttributeSet.rem_shouldCategorizeGroceryItems.setter(*a1);
}

uint64_t storeEnumTagSinglePayload for REMSearchableItemAttributeName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A4594064 + 4 * byte_1A46A4CFD[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A4594098 + 4 * byte_1A46A4CF8[v4]))();
}

uint64_t sub_1A4594098(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45940A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45940A8);
  return result;
}

uint64_t sub_1A45940B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45940BCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A45940C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45940C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSearchableItemAttributeName()
{
  return &type metadata for REMSearchableItemAttributeName;
}

ValueMetadata *type metadata accessor for REMSearchableItemType()
{
  return &type metadata for REMSearchableItemType;
}

uint64_t dispatch thunk of REMSearchableItem.displayString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for REMSearchableListType()
{
  return &type metadata for REMSearchableListType;
}

ValueMetadata *type metadata accessor for REMStringMatchingStyle()
{
  return &type metadata for REMStringMatchingStyle;
}

char *initializeBufferWithCopyOfBuffer for REMSearchCriterion(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char **, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  unsigned int (*v16)(char **, uint64_t, uint64_t);
  uint64_t v17;
  unsigned int (*v18)(char **, uint64_t, uint64_t);
  uint64_t v19;
  unsigned int (*v20)(char **, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v7[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *(_QWORD *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 3u:
        v9 = *a2;
        *(_QWORD *)a1 = *a2;
        a1[8] = *((_BYTE *)a2 + 8);
        v10 = v9;
        swift_storeEnumTagMultiPayload();
        return a1;
      case 4u:
      case 5u:
      case 9u:
        v15 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v15;
        a1[16] = *((_BYTE *)a2 + 16);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        return a1;
      case 7u:
        v11 = sub_1A46900B4();
        v12 = *(_QWORD *)(v11 - 8);
        v13 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v13(a2, 1, v11))
        {
          v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v24 = &a1[v23];
        v25 = (char *)a2 + v23;
        if (!v13((char **)v25, 1, v11))
          goto LABEL_30;
        goto LABEL_29;
      case 0xAu:
        v11 = sub_1A46900B4();
        v12 = *(_QWORD *)(v11 - 8);
        v16 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v16(a2, 1, v11))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v24 = &a1[v26];
        v25 = (char *)a2 + v26;
        if (v16((char **)v25, 1, v11))
          goto LABEL_29;
        goto LABEL_30;
      case 0xCu:
        v11 = sub_1A46900B4();
        v12 = *(_QWORD *)(v11 - 8);
        v18 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v18(a2, 1, v11))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v24 = &a1[v27];
        v25 = (char *)a2 + v27;
        if (v18((char **)v25, 1, v11))
          goto LABEL_29;
        goto LABEL_30;
      case 0xDu:
        v11 = sub_1A46900B4();
        v12 = *(_QWORD *)(v11 - 8);
        v20 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v12 + 48);
        if (v20(a2, 1, v11))
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v12 + 16))(a1, a2, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
        }
        v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v24 = &a1[v28];
        v25 = (char *)a2 + v28;
        if (v20((char **)v25, 1, v11))
        {
LABEL_29:
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
LABEL_30:
          (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
      case 0x11u:
        v22 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v22;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for REMSearchCriterion(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(id *, uint64_t, uint64_t);
  char *v5;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
    case 5u:
    case 9u:
    case 0x10u:
    case 0x11u:
      swift_bridgeObjectRelease();
      break;
    case 3u:

      break;
    case 7u:
    case 0xAu:
    case 0xCu:
    case 0xDu:
      v2 = sub_1A46900B4();
      v3 = *(_QWORD *)(v2 - 8);
      v4 = *(unsigned int (**)(id *, uint64_t, uint64_t))(v3 + 48);
      if (!v4(a1, 1, v2))
        (*(void (**)(id *, uint64_t))(v3 + 8))(a1, v2);
      v5 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      if (!v4((id *)v5, 1, v2))
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    default:
      return;
  }
}

_QWORD *initializeWithCopy for REMSearchCriterion(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 3u:
      v6 = (void *)*a2;
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v7 = v6;
      goto LABEL_27;
    case 4u:
    case 5u:
    case 9u:
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 7u:
      v8 = sub_1A46900B4();
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v10((char *)a2, 1, v8))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      if (v10(v22, 1, v8))
        goto LABEL_23;
      goto LABEL_26;
    case 0xAu:
      v8 = sub_1A46900B4();
      v9 = *(_QWORD *)(v8 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v13((char *)a2, 1, v8))
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v21 = (char *)a1 + v23;
      v22 = (char *)a2 + v23;
      if (v13(v22, 1, v8))
        goto LABEL_23;
      goto LABEL_26;
    case 0xCu:
      v8 = sub_1A46900B4();
      v9 = *(_QWORD *)(v8 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v15((char *)a2, 1, v8))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v21 = (char *)a1 + v24;
      v22 = (char *)a2 + v24;
      if (v15(v22, 1, v8))
        goto LABEL_23;
      goto LABEL_26;
    case 0xDu:
      v8 = sub_1A46900B4();
      v9 = *(_QWORD *)(v8 - 8);
      v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      if (v17((char *)a2, 1, v8))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v21 = (char *)a1 + v26;
      v22 = (char *)a2 + v26;
      if (v17(v22, 1, v8))
      {
LABEL_23:
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
LABEL_26:
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v21, v22, v8);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v8);
      }
      goto LABEL_27;
    case 0x10u:
    case 0x11u:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      swift_bridgeObjectRetain();
LABEL_27:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for REMSearchCriterion(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1A45953C8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_28;
      case 3u:
        v6 = (void *)*a2;
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v7 = v6;
        goto LABEL_28;
      case 4u:
      case 5u:
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_28;
      case 7u:
        v8 = sub_1A46900B4();
        v9 = *(_QWORD *)(v8 - 8);
        v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v10((char *)a2, 1, v8))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        if (v10(v20, 1, v8))
          goto LABEL_24;
        goto LABEL_27;
      case 0xAu:
        v8 = sub_1A46900B4();
        v9 = *(_QWORD *)(v8 - 8);
        v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v12((char *)a2, 1, v8))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v19 = (char *)a1 + v21;
        v20 = (char *)a2 + v21;
        if (v12(v20, 1, v8))
          goto LABEL_24;
        goto LABEL_27;
      case 0xCu:
        v8 = sub_1A46900B4();
        v9 = *(_QWORD *)(v8 - 8);
        v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v14((char *)a2, 1, v8))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v19 = (char *)a1 + v22;
        v20 = (char *)a2 + v22;
        if (v14(v20, 1, v8))
          goto LABEL_24;
        goto LABEL_27;
      case 0xDu:
        v8 = sub_1A46900B4();
        v9 = *(_QWORD *)(v8 - 8);
        v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
        if (v16((char *)a2, 1, v8))
        {
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v9 + 16))(a1, a2, v8);
          (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        }
        v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v19 = (char *)a1 + v24;
        v20 = (char *)a2 + v24;
        if (v16(v20, 1, v8))
        {
LABEL_24:
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
LABEL_27:
          (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v19, v20, v8);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v8);
        }
        goto LABEL_28;
      case 0x10u:
      case 0x11u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
LABEL_28:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A45953C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMSearchCriterion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for REMSearchCriterion(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 7u:
      v6 = sub_1A46900B4();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v8(a2, 1, v6))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v17 = &a1[v16];
      v18 = &a2[v16];
      if (!v8(v18, 1, v6))
        goto LABEL_22;
      goto LABEL_19;
    case 0xAu:
      v6 = sub_1A46900B4();
      v7 = *(_QWORD *)(v6 - 8);
      v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v10(a2, 1, v6))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v17 = &a1[v19];
      v18 = &a2[v19];
      if (v10(v18, 1, v6))
        goto LABEL_19;
      goto LABEL_22;
    case 0xCu:
      v6 = sub_1A46900B4();
      v7 = *(_QWORD *)(v6 - 8);
      v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v12(a2, 1, v6))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v17 = &a1[v20];
      v18 = &a2[v20];
      if (v12(v18, 1, v6))
        goto LABEL_19;
      goto LABEL_22;
    case 0xDu:
      v6 = sub_1A46900B4();
      v7 = *(_QWORD *)(v6 - 8);
      v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
      if (v14(a2, 1, v6))
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
      v17 = &a1[v22];
      v18 = &a2[v22];
      if (v14(v18, 1, v6))
      {
LABEL_19:
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
LABEL_22:
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for REMSearchCriterion(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 != a2)
  {
    sub_1A45953C8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 7u:
        v6 = sub_1A46900B4();
        v7 = *(_QWORD *)(v6 - 8);
        v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v8(a2, 1, v6))
        {
          v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v17 = &a1[v16];
        v18 = &a2[v16];
        if (!v8(v18, 1, v6))
          goto LABEL_23;
        goto LABEL_20;
      case 0xAu:
        v6 = sub_1A46900B4();
        v7 = *(_QWORD *)(v6 - 8);
        v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v10(a2, 1, v6))
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v17 = &a1[v19];
        v18 = &a2[v19];
        if (v10(v18, 1, v6))
          goto LABEL_20;
        goto LABEL_23;
      case 0xCu:
        v6 = sub_1A46900B4();
        v7 = *(_QWORD *)(v6 - 8);
        v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v12(a2, 1, v6))
        {
          v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v17 = &a1[v20];
        v18 = &a2[v20];
        if (v12(v18, 1, v6))
          goto LABEL_20;
        goto LABEL_23;
      case 0xDu:
        v6 = sub_1A46900B4();
        v7 = *(_QWORD *)(v6 - 8);
        v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
        if (v14(a2, 1, v6))
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        }
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ED50) + 48);
        v17 = &a1[v22];
        v18 = &a2[v22];
        if (v14(v18, 1, v6))
        {
LABEL_20:
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
          memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
LABEL_23:
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v17, v18, v6);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1A4595D44()
{
  unint64_t v0;
  char v1;
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void *v9;
  void *v10;
  void *v11;
  char *v12;
  void *v13;
  void *v14;
  char *v15;
  void *v16;
  char *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;

  v5 = MEMORY[0x1E0DE9D18] + 64;
  v6 = MEMORY[0x1E0DE9D18] + 64;
  v7 = MEMORY[0x1E0DE9D18] + 64;
  v8 = "\t";
  v9 = &unk_1A46A5300;
  v10 = &unk_1A46A5300;
  v11 = &unk_1A46A5318;
  sub_1A452A9E8();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v12 = &v4;
    v13 = &unk_1A46A5318;
    v14 = &unk_1A46A5300;
    swift_getTupleTypeLayout2();
    v15 = &v3;
    v16 = &unk_1A46A5318;
    swift_getTupleTypeLayout2();
    v17 = &v2;
    swift_getTupleTypeLayout2();
    v18 = &v1;
    v19 = &unk_1A46A5318;
    v20 = &unk_1A46A5318;
    v21 = &unk_1A46A5330;
    v22 = &unk_1A46A5330;
    v23 = &unk_1A46A5318;
    swift_initEnumMetadataMultiPayload();
  }
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion()
{
  return &type metadata for REMSearchCriterion.Inclusion;
}

uint64_t _s19ReminderKitInternal18REMSearchCriterionO9InclusionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4595EB8 + 4 * byte_1A46A4D5D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A4595EEC + 4 * byte_1A46A4D58[v4]))();
}

uint64_t sub_1A4595EEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4595EF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4595EFCLL);
  return result;
}

uint64_t sub_1A4595F08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4595F10);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A4595F14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4595F1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.CodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.ExcludeCodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.ExcludeCodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.IncludeCodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.IncludeCodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys()
{
  return &type metadata for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys;
}

uint64_t _s19ReminderKitInternal21REMSearchableItemTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A4595FB4 + 4 * byte_1A46A4D67[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4595FE8 + 4 * byte_1A46A4D62[v4]))();
}

uint64_t sub_1A4595FE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4595FF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4595FF8);
  return result;
}

uint64_t sub_1A4596004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A459600CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4596010(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4596018(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSearchableListType.CodingKeys()
{
  return &type metadata for REMSearchableListType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchableListType.GroceryCodingKeys()
{
  return &type metadata for REMSearchableListType.GroceryCodingKeys;
}

ValueMetadata *type metadata accessor for REMSearchableListType.NoneCodingKeys()
{
  return &type metadata for REMSearchableListType.NoneCodingKeys;
}

unint64_t sub_1A4596058()
{
  unint64_t result;

  result = qword_1EE7216F0;
  if (!qword_1EE7216F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5574, &type metadata for REMSearchableListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7216F0);
  }
  return result;
}

unint64_t sub_1A45960A0()
{
  unint64_t result;

  result = qword_1EE7216F8;
  if (!qword_1EE7216F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A571C, &type metadata for REMSearchCriterion.Inclusion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7216F8);
  }
  return result;
}

unint64_t sub_1A45960E8()
{
  unint64_t result;

  result = qword_1EE721700;
  if (!qword_1EE721700)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A563C, &type metadata for REMSearchCriterion.Inclusion.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721700);
  }
  return result;
}

unint64_t sub_1A4596130()
{
  unint64_t result;

  result = qword_1EE721708;
  if (!qword_1EE721708)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5664, &type metadata for REMSearchCriterion.Inclusion.ExcludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721708);
  }
  return result;
}

unint64_t sub_1A4596178()
{
  unint64_t result;

  result = qword_1EE721710;
  if (!qword_1EE721710)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A55EC, &type metadata for REMSearchCriterion.Inclusion.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721710);
  }
  return result;
}

unint64_t sub_1A45961C0()
{
  unint64_t result;

  result = qword_1EE721718;
  if (!qword_1EE721718)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5614, &type metadata for REMSearchCriterion.Inclusion.IncludeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721718);
  }
  return result;
}

unint64_t sub_1A4596208()
{
  unint64_t result;

  result = qword_1EE721720;
  if (!qword_1EE721720)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A559C, &type metadata for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721720);
  }
  return result;
}

unint64_t sub_1A4596250()
{
  unint64_t result;

  result = qword_1EE721728;
  if (!qword_1EE721728)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A55C4, &type metadata for REMSearchCriterion.Inclusion.IncludeForSiriCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721728);
  }
  return result;
}

unint64_t sub_1A4596298()
{
  unint64_t result;

  result = qword_1EE721730;
  if (!qword_1EE721730)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A568C, &type metadata for REMSearchCriterion.Inclusion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721730);
  }
  return result;
}

unint64_t sub_1A45962E0()
{
  unint64_t result;

  result = qword_1EE721738;
  if (!qword_1EE721738)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A56B4, &type metadata for REMSearchCriterion.Inclusion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721738);
  }
  return result;
}

unint64_t sub_1A4596328()
{
  unint64_t result;

  result = qword_1EE721740;
  if (!qword_1EE721740)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5494, &type metadata for REMSearchableListType.GroceryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721740);
  }
  return result;
}

unint64_t sub_1A4596370()
{
  unint64_t result;

  result = qword_1EE721748;
  if (!qword_1EE721748)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A54BC, &type metadata for REMSearchableListType.GroceryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721748);
  }
  return result;
}

unint64_t sub_1A45963B8()
{
  unint64_t result;

  result = qword_1EE721750;
  if (!qword_1EE721750)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5444, &type metadata for REMSearchableListType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721750);
  }
  return result;
}

unint64_t sub_1A4596400()
{
  unint64_t result;

  result = qword_1EE721758;
  if (!qword_1EE721758)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A546C, &type metadata for REMSearchableListType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721758);
  }
  return result;
}

unint64_t sub_1A4596448()
{
  unint64_t result;

  result = qword_1EE721760;
  if (!qword_1EE721760)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A54E4, &type metadata for REMSearchableListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721760);
  }
  return result;
}

unint64_t sub_1A4596490()
{
  unint64_t result;

  result = qword_1EE721768;
  if (!qword_1EE721768)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A550C, &type metadata for REMSearchableListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721768);
  }
  return result;
}

uint64_t sub_1A45964D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797265636F7267 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45965B4(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6564756C637865 && a2 == 0xE700000000000000;
  if (v3 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564756C636E69 && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x466564756C636E69 && a2 == 0xEE0069726953726FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1A4596718()
{
  unint64_t result;

  result = qword_1EE721770;
  if (!qword_1EE721770)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStringMatchingStyle, &type metadata for REMStringMatchingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE721770);
  }
  return result;
}

unint64_t sub_1A459675C()
{
  unint64_t result;

  result = qword_1EE721778;
  if (!qword_1EE721778)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSearchableItemType, &type metadata for REMSearchableItemType);
    atomic_store(result, (unint64_t *)&qword_1EE721778);
  }
  return result;
}

uint64_t sub_1A45967A4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4596800()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4596834(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1A4596890()
{
  swift_beginAccess();
  return swift_retain();
}

double sub_1A45968C4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 32);
}

uint64_t sub_1A45968F4()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1A4596924()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 48);
}

void PointCloud.metric.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 57);
}

uint64_t PointCloud.__allocating_init(points:distanceCalculator:)(unint64_t a1, char *a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  PointCloud.init(points:distanceCalculator:)(a1, a2);
  return v4;
}

uint64_t PointCloud.init(points:distanceCalculator:)(unint64_t a1, char *a2)
{
  uint64_t v2;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)(v2 + 48) = 0;
  v4 = *a2;
  *(_BYTE *)(v2 + 56) = 1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v11 = sub_1A46916A4();
    result = swift_bridgeObjectRelease();
    if (!v11)
      goto LABEL_7;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v6)
      goto LABEL_7;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    v8 = MEMORY[0x1A859ECE0](0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    v8 = *(_QWORD *)(a1 + 32);
    swift_retain();
  }
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 24);
  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v9;
  *(_BYTE *)(v2 + 56) = 0;
LABEL_7:
  if (v5)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 + 57) = v4;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = v10;
  sub_1A4596CA0();
  return v2;
}

uint64_t sub_1A4596B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = v1;
  v4 = (_QWORD *)(v1 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 16);
  if (!(v5 >> 62))
  {
    if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v10 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_3:
    swift_beginAccess();
    v6 = *(_QWORD *)(a1 + 24);
    swift_beginAccess();
    *(_QWORD *)(v2 + 48) = v6;
    *(_BYTE *)(v2 + 56) = 0;
  }
LABEL_4:
  swift_beginAccess();
  v7 = swift_retain();
  MEMORY[0x1A859E3E0](v7);
  if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1A4690BDC();
  sub_1A4690C18();
  sub_1A4690BB8();
  swift_endAccess();
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = swift_beginAccess();
  *(_QWORD *)(v2 + 40) = v8;
  return result;
}

uint64_t sub_1A4596CA0()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t result;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = Array<A>.average()(v1);
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_retain();
    swift_retain();
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1A459714C(v3, v0, v2, 0.0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_beginAccess();
    v5 = v4 / (double)*(uint64_t *)(v2 + 24);
    swift_beginAccess();
    *(double *)(v0 + 32) = v5;
    swift_beginAccess();
    *(_QWORD *)(v0 + 24) = v2;
    swift_retain();
    swift_release();
    v6 = *(_QWORD *)(v2 + 24);
    swift_release();
    result = swift_beginAccess();
    *(_QWORD *)(v0 + 48) = v6;
  }
  else
  {
    swift_beginAccess();
    *(_QWORD *)(v0 + 24) = 0;
    swift_release();
    result = swift_beginAccess();
    *(_QWORD *)(v0 + 48) = 0;
  }
  *(_BYTE *)(v0 + 56) = v2 == 0;
  return result;
}

uint64_t PointCloud.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t PointCloud.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A4596E70@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A4596EBC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_retain();
}

double sub_1A4596F08@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_beginAccess();
  result = *(double *)(v3 + 32);
  *a2 = result;
  return result;
}

uint64_t sub_1A4596F4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_1A4596F94@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return result;
}

uint64_t sub_1A4596FD8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 40) = v2;
  return result;
}

uint64_t sub_1A4597018@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  result = swift_beginAccess();
  v5 = *(_BYTE *)(v3 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + 48);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1A4597064(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t result;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v4 + 48) = v2;
  *(_BYTE *)(v4 + 56) = v3;
  return result;
}

uint64_t type metadata accessor for PointCloud()
{
  return objc_opt_self();
}

uint64_t method lookup function for PointCloud()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PointCloud.points.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PointCloud.center.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PointCloud.variance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PointCloud.numOfPoints.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PointCloud.dimension.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PointCloud.__allocating_init(points:distanceCalculator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of PointCloud.addPoint(point:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

double sub_1A459714C(unint64_t a1, unint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  double v11;
  double v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  float64x2_t *v42;
  float64x2_t *v43;
  float64x2_t v44;
  float64x2_t v45;
  float64x2_t v46;
  float64x2_t v47;
  float64x2_t v48;
  float64x2_t v49;
  float64x2_t v50;
  float64x2_t v51;
  double v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  unint64_t v57;
  float64x2_t *v58;
  float64x2_t *v59;
  float64x2_t v60;
  float64x2_t v61;
  float64x2_t v62;
  float64x2_t v63;
  char v66;

  if (a1 >> 62)
    goto LABEL_64;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v9 = a3 + 16;
      v10 = *(unsigned __int8 *)(a2 + 57);
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v13 = MEMORY[0x1A859ECE0](v8, a1);
          v14 = __OFADD__(v8++, 1);
          if (v14)
            goto LABEL_61;
        }
        else
        {
          v13 = *(_QWORD *)(a1 + 32 + 8 * v8);
          swift_retain();
          v14 = __OFADD__(v8++, 1);
          if (v14)
            goto LABEL_61;
        }
        if (!v10)
          break;
        if (v10 == 1)
        {
          a2 = (unint64_t)&v66;
          sub_1A44E3540(v13, a3);
          v12 = v11;
          swift_release();
        }
        else
        {
          swift_beginAccess();
          a2 = *(_QWORD *)(v13 + 24);
          if ((a2 & 0x8000000000000000) != 0)
            goto LABEL_62;
          if (a2)
          {
            swift_beginAccess();
            swift_beginAccess();
            v15 = *(_QWORD *)(v13 + 16);
            v16 = *(_QWORD *)(v15 + 16);
            if (!v16)
              goto LABEL_57;
            v17 = *(_QWORD *)v9;
            v18 = *(_QWORD *)(*(_QWORD *)v9 + 16);
            if (!v18)
              goto LABEL_58;
            v19 = v15 + 32;
            v20 = v17 + 32;
            v21 = *(double *)(v17 + 32);
            v22 = *(double *)(v15 + 32);
            v23 = v22 * v22;
            v24 = v21 * v21;
            v25 = v22 * v21 + 0.0;
            if (a2 != 1)
            {
              v26 = v18 - 1;
              if (v18 - 1 >= v16 - 1)
                v26 = v16 - 1;
              if (v26 >= a2 - 2)
                v26 = a2 - 2;
              v27 = v26 + 1;
              if (v27 > 4)
              {
                v40 = v27 & 3;
                if ((v27 & 3) == 0)
                  v40 = 4;
                v41 = v27 - v40;
                v28 = v41 + 1;
                v42 = (float64x2_t *)(v15 + 56);
                v43 = (float64x2_t *)(v17 + 56);
                do
                {
                  v44 = v42[-1];
                  v45 = v43[-1];
                  v46 = vmulq_f64(v44, v44);
                  v47 = vmulq_f64(*v42, *v42);
                  v48 = vmulq_f64(v45, v45);
                  v49 = vmulq_f64(*v43, *v43);
                  v50 = vmulq_f64(v44, v45);
                  v51 = vmulq_f64(*v42, *v43);
                  v25 = v25 + v50.f64[0] + v50.f64[1] + v51.f64[0] + v51.f64[1];
                  v23 = v23 + v46.f64[0] + v46.f64[1] + v47.f64[0] + v47.f64[1];
                  v24 = v24 + v48.f64[0] + v48.f64[1] + v49.f64[0] + v49.f64[1];
                  v42 += 2;
                  v43 += 2;
                  v41 -= 4;
                }
                while (v41);
              }
              else
              {
                v28 = 1;
              }
              while (v16 != v28)
              {
                if (v28 >= v18)
                  goto LABEL_58;
                v52 = *(double *)(v19 + 8 * v28);
                v53 = *(double *)(v20 + 8 * v28);
                v23 = v23 + v52 * v52;
                v24 = v24 + v53 * v53;
                v25 = v25 + v52 * v53;
                if (a2 == ++v28)
                  goto LABEL_44;
              }
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
              goto LABEL_59;
            }
          }
          else
          {
            v25 = 0.0;
            v23 = 0.0;
            v24 = 0.0;
          }
LABEL_44:
          swift_release();
          v54 = sqrt(v23) * sqrt(v24);
          if ((*(_QWORD *)&v54 & 0x7FFFFFFFFFFFFFFFLL) != 0)
            v55 = v25 / v54;
          else
            v55 = 0.0;
          v12 = acos(v55) / 3.14159265;
        }
LABEL_5:
        a4 = a4 + v12;
        if (v8 == v7)
          goto LABEL_65;
      }
      swift_beginAccess();
      a2 = *(_QWORD *)(v13 + 24);
      if ((a2 & 0x8000000000000000) != 0)
        goto LABEL_63;
      if (!a2)
        break;
      swift_beginAccess();
      swift_beginAccess();
      v29 = *(_QWORD *)(v13 + 16);
      v30 = *(_QWORD *)(v29 + 16);
      if (!v30)
        goto LABEL_59;
      v31 = *(_QWORD *)v9;
      v32 = *(_QWORD *)(*(_QWORD *)v9 + 16);
      if (!v32)
        goto LABEL_60;
      v33 = v29 + 32;
      v34 = v31 + 32;
      v35 = *(double *)(v29 + 32) - *(double *)(v31 + 32);
      v36 = v35 * v35;
      if (a2 == 1)
        goto LABEL_55;
      v37 = v32 - 1;
      if (v32 - 1 >= v30 - 1)
        v37 = v30 - 1;
      if (v37 >= a2 - 2)
        v37 = a2 - 2;
      v38 = v37 + 1;
      if (v38 > 4)
      {
        v56 = v38 & 3;
        if ((v38 & 3) == 0)
          v56 = 4;
        v57 = v38 - v56;
        v39 = v57 + 1;
        v58 = (float64x2_t *)(v29 + 56);
        v59 = (float64x2_t *)(v31 + 56);
        do
        {
          v60 = vsubq_f64(v58[-1], v59[-1]);
          v61 = vsubq_f64(*v58, *v59);
          v62 = vmulq_f64(v60, v60);
          v63 = vmulq_f64(v61, v61);
          v36 = v36 + v62.f64[0] + v62.f64[1] + v63.f64[0] + v63.f64[1];
          v58 += 2;
          v59 += 2;
          v57 -= 4;
        }
        while (v57);
      }
      else
      {
        v39 = 1;
      }
      while (v30 != v39)
      {
        if (v39 >= v32)
          goto LABEL_60;
        v36 = v36
            + (*(double *)(v33 + 8 * v39) - *(double *)(v34 + 8 * v39))
            * (*(double *)(v33 + 8 * v39) - *(double *)(v34 + 8 * v39));
        if (a2 == ++v39)
          goto LABEL_55;
      }
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      swift_bridgeObjectRetain();
      v7 = sub_1A46916A4();
      if (!v7)
        goto LABEL_65;
    }
    v36 = 0.0;
LABEL_55:
    swift_release();
    v12 = sqrt(v36);
    goto LABEL_5;
  }
LABEL_65:
  swift_bridgeObjectRelease();
  return a4;
}

id REMStructuredLocation.clCircularRegion.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  objc_msgSend(v0, sel_latitude);
  v2 = v1;
  objc_msgSend(v0, sel_longitude);
  v4 = v3;
  objc_msgSend(v0, sel_radius);
  v6 = v5;
  v7 = objc_msgSend(v0, sel_title);
  if (v7)
  {
    v8 = v7;
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  }
  v9 = objc_allocWithZone(MEMORY[0x1E0C9E368]);
  v10 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithCenter_radius_identifier_, v10, v2, v4, v6);

  objc_msgSend(v11, sel_setGeoReferenceFrame_, REMStructuredLocation.referenceFrame.getter());
  return v11;
}

CLCircularRegion __swiftcall CLCircularRegion.init(circularRegion:radius:)(CLCircularRegion circularRegion, Swift::Double radius)
{
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  -[objc_class center](circularRegion.super.super.isa, sel_center);
  v5 = v4;
  v7 = v6;
  v8 = -[objc_class identifier](circularRegion.super.super.isa, sel_identifier);
  if (!v8)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v8 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCenter_radius_identifier_, v8, v5, v7, radius);

  v10 = v9;
  objc_msgSend(v10, sel_setNotifyOnExit_, -[objc_class notifyOnExit](circularRegion.super.super.isa, sel_notifyOnExit));
  v11 = v10;
  objc_msgSend(v11, sel_setNotifyOnEntry_, -[objc_class notifyOnEntry](circularRegion.super.super.isa, sel_notifyOnEntry));

  v12 = v11;
  objc_msgSend(v12, sel_setConservativeEntry_, -[objc_class conservativeEntry](circularRegion.super.super.isa, sel_conservativeEntry));

  objc_msgSend(v12, sel_setGeoReferenceFrame_, -[objc_class geoReferenceFrame](circularRegion.super.super.isa, sel_geoReferenceFrame));
  return (CLCircularRegion)v12;
}

void __swiftcall REMStructuredLocation.init(title:location:)(REMStructuredLocation *__return_ptr retstr, Swift::String title, CLLocation location)
{
  Class isa;
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;

  isa = location.super.isa;
  v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithTitle_, v5);

  v7 = v6;
  -[objc_class coordinate](isa, sel_coordinate);
  objc_msgSend(v7, sel_setLatitude_);
  -[objc_class coordinate](isa, sel_coordinate);
  objc_msgSend(v7, sel_setLongitude_, v8);
  -[objc_class horizontalAccuracy](isa, sel_horizontalAccuracy);
  v10 = v9;
  -[objc_class verticalAccuracy](isa, sel_verticalAccuracy);
  if (v10 > v11)
    v11 = v10;
  objc_msgSend(v7, sel_setRadius_, v11);
  -[objc_class referenceFrame](isa, sel_referenceFrame);
  sub_1A46918D8();
  v12 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setReferenceFrameString_, v12);

}

void __swiftcall REMStructuredLocation.init(title:circularRegion:placemark:)(REMStructuredLocation *__return_ptr retstr, Swift::String title, CLCircularRegion circularRegion, CLPlacemark_optional placemark)
{
  Class isa;
  id v6;
  void *v7;
  id v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  Class v16;

  isa = placemark.value.super.isa;
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v7 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithTitle_, v7);

  v9 = v8;
  -[objc_class center](circularRegion.super.super.isa, sel_center);
  v11 = v10;
  objc_msgSend(v9, sel_setLatitude_);
  objc_msgSend(v9, sel_setLongitude_, v11);
  -[objc_class radius](circularRegion.super.super.isa, sel_radius);
  objc_msgSend(v9, sel_setRadius_);
  -[objc_class geoReferenceFrame](circularRegion.super.super.isa, sel_geoReferenceFrame);
  sub_1A46918D8();
  v12 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_setReferenceFrameString_, v12);

  if (isa)
  {
    v13 = -[objc_class postalAddress](isa, sel_postalAddress);
    v14 = v9;
    if (v13)
    {
      v15 = v13;
      v14 = objc_msgSend((id)objc_opt_self(), sel_stringFromPostalAddress_style_, v13, 0);
      if (!v14)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v14 = (id)sub_1A469087C();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v9, sel_setAddress_, v14);

    }
    v16 = circularRegion.super.super.isa;
    circularRegion.super.super.isa = isa;
  }
  else
  {
    v16 = (Class)v9;
  }

}

id static REMStructuredLocation.createFromCLLocation(title:location:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;

  if (a2)
  {
    v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!a3)
      return 0;
    v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v5 = 0;
  }
  v6 = objc_msgSend(v4, sel_initWithTitle_, v5);

  if (a3)
  {
    v7 = a3;
    objc_msgSend(v7, sel_horizontalAccuracy);
    v9 = v8;
    objc_msgSend(v7, sel_verticalAccuracy);
    if (v9 <= v10)
      v9 = v10;
    if (v9 > 0.0)
    {
      objc_msgSend(v7, sel_coordinate);
      objc_msgSend(v6, sel_setLatitude_);
      objc_msgSend(v7, sel_coordinate);
      objc_msgSend(v6, sel_setLongitude_, v11);
      objc_msgSend(v6, sel_setRadius_, v9);
      objc_msgSend(v7, sel_referenceFrame);
      sub_1A46918D8();
      v12 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_setReferenceFrameString_, v12);

      return v6;
    }

    return 0;
  }
  return v6;
}

uint64_t REMStructuredLocation.referenceFrame.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;

  v1 = objc_msgSend(v0, sel_referenceFrameString);
  if (v1)
  {
    v2 = v1;
    v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v5 = v4;

    if (v3 == 49 && v5 == 0xE100000000000000)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    v7 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
  }
  v9 = objc_msgSend(v0, sel_referenceFrameString);
  if (!v9)
    return 0;
  v10 = v9;
  v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v13 = v12;

  if (v11 == 50 && v13 == 0xE100000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
      return 0;
  }
  return 2;
}

id REMStructuredLocation.clLocation.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  CLLocationDegrees v6;
  double v7;
  CLLocationDegrees v8;
  uint64_t v9;
  id v10;
  CLLocationCoordinate2D v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = sub_1A46900B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_latitude);
  v6 = v5;
  objc_msgSend(v0, sel_longitude);
  v8 = v7;
  v9 = REMStructuredLocation.referenceFrame.getter();
  v10 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  v11 = CLLocationCoordinate2DMake(v6, v8);
  sub_1A46900A8();
  v12 = (void *)sub_1A4690030();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v13 = objc_msgSend(v10, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v12, v9, v11.latitude, v11.longitude, -1.0, -1.0, -1.0);

  return v13;
}

id REMStructuredLocation.clPlacemark.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  CLLocationDegrees v7;
  double v8;
  CLLocationDegrees v9;
  uint64_t v10;
  id v11;
  CLLocationCoordinate2D v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1A46900B4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_latitude);
  v7 = v6;
  objc_msgSend(v0, sel_longitude);
  v9 = v8;
  v10 = REMStructuredLocation.referenceFrame.getter();
  v11 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  v12 = CLLocationCoordinate2DMake(v7, v9);
  sub_1A46900A8();
  v13 = (void *)sub_1A4690030();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14 = objc_msgSend(v11, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v13, v10, v12.latitude, v12.longitude, -1.0, -1.0, -1.0);

  v15 = objc_msgSend(v1, sel_displayName);
  if (v15)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    v15 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_placemarkWithLocation_name_postalAddress_, v14, v15, 0);

  return v16;
}

Swift::Bool __swiftcall REMStructuredLocation.isCloseTo(_:maxDistanceInMeters:)(REMStructuredLocation *_, Swift::Double maxDistanceInMeters)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  CLLocationDegrees v11;
  double v12;
  CLLocationDegrees v13;
  uint64_t v14;
  id v15;
  CLLocationCoordinate2D v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  id v19;
  double v20;
  CLLocationDegrees v21;
  double v22;
  CLLocationDegrees v23;
  uint64_t v24;
  id v25;
  CLLocationCoordinate2D v26;
  void *v27;
  id v28;
  double v29;
  double v30;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  -[REMStructuredLocation latitude](_, sel_latitude);
  v11 = v10;
  -[REMStructuredLocation longitude](_, sel_longitude);
  v13 = v12;
  v14 = REMStructuredLocation.referenceFrame.getter();
  v15 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  v16 = CLLocationCoordinate2DMake(v11, v13);
  sub_1A46900A8();
  v17 = (void *)sub_1A4690030();
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  v19 = objc_msgSend(v15, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v17, v14, v16.latitude, v16.longitude, -1.0, -1.0, -1.0);

  objc_msgSend(v3, sel_latitude);
  v21 = v20;
  objc_msgSend(v3, sel_longitude);
  v23 = v22;
  v24 = REMStructuredLocation.referenceFrame.getter();
  v25 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  v26 = CLLocationCoordinate2DMake(v21, v23);
  sub_1A46900A8();
  v27 = (void *)sub_1A4690030();
  v18(v9, v6);
  v28 = objc_msgSend(v25, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v27, v24, v26.latitude, v26.longitude, -1.0, -1.0, -1.0);

  objc_msgSend(v28, sel_distanceFromLocation_, v19);
  v30 = v29;

  return v30 <= maxDistanceInMeters;
}

Swift::Bool __swiftcall REMStructuredLocation.isCloseTo(_:maxDistanceInMeters:)(CLLocation _, Swift::Double maxDistanceInMeters)
{
  void *v2;
  Class isa;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  CLLocationDegrees v10;
  double v11;
  CLLocationDegrees v12;
  uint64_t v13;
  id v14;
  CLLocationCoordinate2D v15;
  void *v16;
  id v17;
  double v18;
  double v19;
  uint64_t v21;

  isa = _.super.isa;
  v5 = sub_1A46900B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v2, sel_latitude);
  v10 = v9;
  objc_msgSend(v2, sel_longitude);
  v12 = v11;
  v13 = REMStructuredLocation.referenceFrame.getter();
  v14 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  v15 = CLLocationCoordinate2DMake(v10, v12);
  sub_1A46900A8();
  v16 = (void *)sub_1A4690030();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = objc_msgSend(v14, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v16, v13, v15.latitude, v15.longitude, -1.0, -1.0, -1.0);

  objc_msgSend(v17, sel_distanceFromLocation_, isa);
  v19 = v18;

  return v19 <= maxDistanceInMeters;
}

id CLCircularRegion.clLocation.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  double v5;
  CLLocationDegrees v6;
  double v7;
  CLLocationDegrees v8;
  id v9;
  id v10;
  CLLocationCoordinate2D v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = sub_1A46900B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, sel_center);
  v6 = v5;
  objc_msgSend(v0, sel_center);
  v8 = v7;
  v9 = objc_msgSend(v0, sel_geoReferenceFrame);
  v10 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  v11 = CLLocationCoordinate2DMake(v6, v8);
  sub_1A46900A8();
  v12 = (void *)sub_1A4690030();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v13 = objc_msgSend(v10, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_timestamp_referenceFrame_, v12, v9, v11.latitude, v11.longitude, -1.0, -1.0, -1.0);

  return v13;
}

uint64_t REMReminderDetailDataView.CheckUpdateResult.reminderHasUpdates.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void *REMReminderDetailDataView.CheckUpdateResult.latestFetchResultToken.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void static REMReminderDetailDataView.fetchHasReminderUpdates(store:reminderID:diffingAgainst:)(void *a1@<X1>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE v22[8];
  uint64_t v23;
  objc_super v24;
  uint64_t v25;

  v21 = a3;
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v10 = objc_allocWithZone(v9);
  v11 = a1;
  v12 = objc_msgSend(v11, sel_uuid);
  sub_1A46900F0();

  v13 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = objc_msgSend(v11, sel_entityName);
  if (!v14)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v14 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v24.receiver = v10;
  v24.super_class = v9;
  v15 = objc_msgSendSuper2(&v24, sel_initWithUUID_entityName_, v13, v14);

  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  v17 = v25;
  sub_1A44820AC((uint64_t)v16, (uint64_t)v15, v22);

  if (!v17)
  {
    v18 = v23;
    v19 = v21;
    *v21 = v22[0];
    *((_QWORD *)v19 + 1) = v18;
  }
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Parameters.init(reminderID:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id REMReminderDetailDataView.CheckUpdateInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t static REMReminderDetailDataView.CheckUpdateInvocation.supportsSecureCoding.getter()
{
  return 1;
}

id REMReminderDetailDataView.CheckUpdateInvocation.Parameters.reminderID.getter()
{
  id *v0;

  return *v0;
}

uint64_t sub_1A4598810()
{
  sub_1A45990AC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4598838()
{
  sub_1A45990AC();
  return sub_1A4691DC4();
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721940);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45990AC();
  sub_1A4691D40();
  v9[1] = v7;
  type metadata accessor for REMObjectID_Codable();
  sub_1A44A44F4(&qword_1ED243370, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721950);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45990AC();
  sub_1A4691D28();
  if (!v2)
  {
    type metadata accessor for REMObjectID_Codable();
    sub_1A44A44F4(&qword_1ED243F80, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4598AA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMReminderDetailDataView.CheckUpdateInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A4598ABC(_QWORD *a1)
{
  return REMReminderDetailDataView.CheckUpdateInvocation.Parameters.encode(to:)(a1);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Result.hasUpdates.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ReminderKitInternal::REMReminderDetailDataView::CheckUpdateInvocation::Result __swiftcall REMReminderDetailDataView.CheckUpdateInvocation.Result.init(hasUpdates:)(ReminderKitInternal::REMReminderDetailDataView::CheckUpdateInvocation::Result hasUpdates)
{
  ReminderKitInternal::REMReminderDetailDataView::CheckUpdateInvocation::Result *v1;

  v1->hasUpdates = hasUpdates.hasUpdates;
  return hasUpdates;
}

uint64_t sub_1A4598AE0()
{
  return 0x7461647055736168;
}

uint64_t sub_1A4598AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7461647055736168 && a2 == 0xEA00000000007365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A4598B9C()
{
  sub_1A45990F0();
  return sub_1A4691DB8();
}

uint64_t sub_1A4598BC4()
{
  sub_1A45990F0();
  return sub_1A4691DC4();
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Result.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721958);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45990F0();
  sub_1A4691D40();
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMReminderDetailDataView.CheckUpdateInvocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721968);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45990F0();
  sub_1A4691D28();
  if (!v2)
  {
    v9 = sub_1A4691794();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A4598DDC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMReminderDetailDataView.CheckUpdateInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A4598DF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721958);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45990F0();
  sub_1A4691D40();
  sub_1A4691860();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id REMReminderDetailDataView.CheckUpdateInvocation.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMReminderDetailDataView.CheckUpdateInvocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMReminderDetailDataView.CheckUpdateInvocation.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMReminderDetailDataView.CheckUpdateInvocation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t REMReminderDetailDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMReminderDetailDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation()
{
  return objc_opt_self();
}

unint64_t sub_1A45990AC()
{
  unint64_t result;

  result = qword_1EE721948;
  if (!qword_1EE721948)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5D28, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721948);
  }
  return result;
}

unint64_t sub_1A45990F0()
{
  unint64_t result;

  result = qword_1EE721960;
  if (!qword_1EE721960)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5CD8, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721960);
  }
  return result;
}

unint64_t sub_1A4599138()
{
  unint64_t result;

  result = qword_1EE721970;
  if (!qword_1EE721970)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderDetailDataView.CheckUpdateInvocation.Parameters, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE721970);
  }
  return result;
}

unint64_t sub_1A4599188()
{
  unint64_t result;

  result = qword_1EE721978;
  if (!qword_1EE721978)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderDetailDataView.CheckUpdateInvocation.Result, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE721978);
  }
  return result;
}

uint64_t type metadata accessor for REMReminderDetailDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMReminderDetailDataView()
{
  return swift_lookUpClassMethod();
}

uint64_t assignWithCopy for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = v4;

  return a1;
}

uint64_t assignWithTake for REMReminderDetailDataView.CheckUpdateResult(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  return a1;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateResult()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateResult;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Parameters()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters;
}

uint64_t storeEnumTagSinglePayload for REMReminderDetailDataView.CheckUpdateInvocation.Result(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45992D8 + 4 * byte_1A46A59F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A459930C + 4 * byte_1A46A59F0[v4]))();
}

uint64_t sub_1A459930C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4599314(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A459931CLL);
  return result;
}

uint64_t sub_1A4599328(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4599330);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4599334(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A459933C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Result()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys;
}

uint64_t _s19ReminderKitInternal25REMReminderDetailDataViewC21CheckUpdateInvocationC6ResultV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A45993AC + 4 * byte_1A46A59FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A45993CC + 4 * byte_1A46A59FF[v4]))();
}

_BYTE *sub_1A45993AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A45993CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A45993D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A45993DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A45993E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A45993EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys;
}

unint64_t sub_1A459940C()
{
  unint64_t result;

  result = qword_1EE721A80;
  if (!qword_1EE721A80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5BF8, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721A80);
  }
  return result;
}

unint64_t sub_1A4599454()
{
  unint64_t result;

  result = qword_1EE721A88;
  if (!qword_1EE721A88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5CB0, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721A88);
  }
  return result;
}

unint64_t sub_1A459949C()
{
  unint64_t result;

  result = qword_1EE721A90;
  if (!qword_1EE721A90)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5C20, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721A90);
  }
  return result;
}

unint64_t sub_1A45994E4()
{
  unint64_t result;

  result = qword_1EE721A98;
  if (!qword_1EE721A98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5C48, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721A98);
  }
  return result;
}

unint64_t sub_1A459952C()
{
  unint64_t result;

  result = qword_1EE721AA0;
  if (!qword_1EE721AA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5B68, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721AA0);
  }
  return result;
}

unint64_t sub_1A4599574()
{
  unint64_t result;

  result = qword_1EE721AA8;
  if (!qword_1EE721AA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5B90, &type metadata for REMReminderDetailDataView.CheckUpdateInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721AA8);
  }
  return result;
}

uint64_t dispatch thunk of Identifiable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t REMSortableElement.element.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t REMSortableElement.sortIndex.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 28));
}

uint64_t REMSortableElement.init(element:sortIndex:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, a1, a4);
  result = type metadata accessor for REMSortableElement(0, a4, v9, v10);
  v12 = a5 + *(int *)(result + 28);
  *(_QWORD *)v12 = a2;
  *(_BYTE *)(v12 + 8) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for REMSortableElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMSortableElement);
}

uint64_t sub_1A4599660(uint64_t a1)
{
  return REMSortableElement.sortIndex.getter(a1);
}

uint64_t Array<A>.sorted(by:)()
{
  uint64_t v0;

  v0 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v0);
  return sub_1A4690AEC();
}

BOOL sub_1A45996F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  char v6;
  double v7;
  double v8;
  char v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 32);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  v5 = v4(v1, v2);
  if ((v6 & 1) != 0)
    return 0;
  v7 = *(double *)&v5;
  v8 = COERCE_DOUBLE(v4(v1, v2));
  if ((v9 & 1) != 0)
    return 1;
  if ((v3 & 1) != 0)
    return v8 < v7;
  else
    return v7 < v8;
}

uint64_t Array<A>.sort(by:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  v1 = Array<A>.sorted(by:)();
  result = swift_bridgeObjectRelease();
  *v0 = v1;
  return result;
}

uint64_t dispatch thunk of REMSortable.sortIndex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A459980C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A4599880(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v11 = *(_BYTE *)(v10 + 8);
    v12 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v12 = *(_QWORD *)v10;
    *(_BYTE *)(v12 + 8) = v11;
  }
  return v4;
}

uint64_t sub_1A4599938(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1A4599948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A45999AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A4599A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A4599A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  return a1;
}

uint64_t sub_1A4599AD8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  v6 = ((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  v7 = (a2 - v5 + 255) >> (8 * v6);
  if (v6 < 4)
    v8 = v7 + 1;
  else
    v8 = 2;
  if (v8 >= 0x10000)
    v9 = 4;
  else
    v9 = 2;
  if (v8 < 0x100)
    v9 = 1;
  if (v8 >= 2)
    v10 = v9;
  else
    v10 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1A4599B54 + 4 * byte_1A46A5DA0[v10]))();
}

void sub_1A4599BBC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  if (v7 >= a3)
  {
    v12 = 0u;
    if (v7 >= a2)
      goto LABEL_14;
  }
  else
  {
    v9 = (a3 - v7 + 255) >> (8 * v8);
    if (v8 <= 3)
      v10 = v9 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (v7 >= a2)
LABEL_14:
      __asm { BR              X11 }
  }
  if (v8 >= 4)
    v13 = ~v7 + a2;
  else
    v13 = (~(_BYTE)v7 + a2);
  bzero(a1, v8);
  if ((_DWORD)v8 == 1)
    *a1 = v13;
  else
    *(_DWORD *)a1 = v13;
  __asm { BR              X10 }
}

void sub_1A4599CCC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A4599CD4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A4599CDCLL);
}

void sub_1A4599CF8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1A4599D00()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1A4599D08(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x1A4599D10);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t Collection.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v5 = &v14[-v4];
  sub_1A4690E64();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = sub_1A4690B1C();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  if ((v6 & 1) != 0)
  {
    v7 = (void (*)(_BYTE *, _QWORD))sub_1A4690EF4();
    v9 = v8;
    v10 = swift_getAssociatedTypeWitness();
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a1, v9, v10);
    v7(v14, 0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
  }
  else
  {
    v13 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, 1, 1, v13);
  }
}

uint64_t sub_1A4599F20(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1A444A940((_OWORD *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A445E0D4(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = sub_1A46915B4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1A445404C(a1, &qword_1ED243E68);
    sub_1A445D954(a2, v9);
    v7 = sub_1A46915B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_1A445404C((uint64_t)v9, &qword_1ED243E68);
  }
}

uint64_t sub_1A459A004(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _OWORD v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1A444A940((_OWORD *)a1, v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_1A445E604(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A445404C(a1, &qword_1ED243E68);
    sub_1A445DA50((uint64_t)a2, v7);

    return sub_1A445404C((uint64_t)v7, &qword_1ED243E68);
  }
}

id sub_1A459A0BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A459A0E4(a1, a2, a3, &qword_1ED2439B0, &qword_1EE721B90);
}

id sub_1A459A0D0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A459A0E4(a1, a2, a3, &qword_1EE71E248, &qword_1EE721B80);
}

id sub_1A459A0E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  NSObject *v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  NSObject *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *v72;
  char *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  id v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  char *v94;
  char v95[32];
  _OWORD v96[2];
  __int128 v97;
  uint64_t v98;

  v92 = (void (*)(char *, char *, uint64_t))a2;
  v9 = sub_1A4691CEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v89 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v90 = (char *)&v84 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v87 = (void (*)(char *, char *, uint64_t))((char *)&v84 - v16);
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v84 - v18;
  MEMORY[0x1E0C80A78](v17);
  v93 = (char *)&v84 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D178);
  v21 = MEMORY[0x1E0C80A78](v20);
  v85 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v84 = (uint64_t)&v84 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v88 = (uint64_t)&v84 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v84 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v86 = (uint64_t)&v84 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v84 - v33;
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v84 - v35;
  v37 = __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1A444ABF4(a1, (uint64_t)&v97, &qword_1ED243E68);
  v94 = v36;
  if (v98)
  {
    sub_1A444A940(&v97, v96);
    sub_1A44311F0((uint64_t)v96, (uint64_t)v95);
    sub_1A4691CD4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    v38 = v10;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
  }
  else
  {
    v38 = v10;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v36, 1, 1, v9);
  }
  v39 = v9;
  v98 = __swift_instantiateConcreteTypeFromMangledName(a5);
  *(_QWORD *)&v97 = v37;
  v40 = v93;
  sub_1A4691CD4();
  if (a3)
  {
    v41 = v38;
    if (qword_1EE71BFF0 != -1)
      swift_once();
    v42 = sub_1A4690318();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EE71D160);
    v43 = (uint64_t)v94;
    sub_1A444ABF4((uint64_t)v94, (uint64_t)v34, &qword_1EE71D178);
    v44 = v91;
    v87 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v87(v91, v40, v39);
    v45 = a3;
    swift_bridgeObjectRetain_n();
    v46 = sub_1A469030C();
    v47 = sub_1A4690FFC();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      LODWORD(v86) = v47;
      v48 = swift_slowAlloc();
      v85 = swift_slowAlloc();
      *(_QWORD *)&v97 = v85;
      *(_DWORD *)v48 = 136315650;
      sub_1A444ABF4((uint64_t)v34, (uint64_t)v29, &qword_1EE71D178);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v29, 1, v39) == 1)
      {
        v49 = 0xE300000000000000;
        v50 = 7104878;
      }
      else
      {
        v64 = v90;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v90, v29, v39);
        v87(v89, v64, v39);
        v50 = sub_1A46908E8();
        v49 = v65;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v64, v39);
      }
      *(_QWORD *)&v96[0] = sub_1A4431120(v50, v49, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v34, &qword_1EE71D178);
      *(_WORD *)(v48 + 12) = 2080;
      v66 = v91;
      v67 = sub_1A4691CE0();
      *(_QWORD *)&v96[0] = sub_1A4431120(v67, v68, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v62 = v41;
      v63 = *(void (**)(char *, uint64_t))(v41 + 8);
      v63(v66, v39);
      *(_WORD *)(v48 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v96[0] = sub_1A4431120((uint64_t)v92, v45, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v46, (os_log_type_t)v86, "Failed cast {given: %s, expect: %s, message: \"%s}\"", (uint8_t *)v48, 0x20u);
      v69 = v85;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v69, -1, -1);
      MEMORY[0x1A85A0114](v48, -1, -1);

      v40 = v93;
      v43 = (uint64_t)v94;
    }
    else
    {
      sub_1A445404C((uint64_t)v34, &qword_1EE71D178);
      v62 = v41;
      v63 = *(void (**)(char *, uint64_t))(v41 + 8);
      v63(v44, v39);

      swift_bridgeObjectRelease_n();
    }
    *(_QWORD *)&v97 = 0;
    *((_QWORD *)&v97 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v97 = 0xD000000000000014;
    *((_QWORD *)&v97 + 1) = 0x80000001A46BD730;
    v70 = v88;
    sub_1A444ABF4(v43, v88, &qword_1EE71D178);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v70, 1, v39) != 1)
    {
      v71 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v90, v70, v39);
      v87(v89, v71, v39);
      sub_1A46908E8();
      v63(v71, v39);
    }
    v72 = (void *)objc_opt_self();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691CE0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4690984();
  }
  else
  {
    if (qword_1EE71BFF0 != -1)
      swift_once();
    v51 = sub_1A4690318();
    __swift_project_value_buffer(v51, (uint64_t)qword_1EE71D160);
    v52 = v86;
    sub_1A444ABF4((uint64_t)v94, v86, &qword_1EE71D178);
    v53 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v54 = (char *)v87;
    v53((char *)v87, v40, v9);
    v55 = sub_1A469030C();
    v56 = sub_1A4690FFC();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      LODWORD(v91) = v56;
      v57 = swift_slowAlloc();
      v88 = swift_slowAlloc();
      *(_QWORD *)&v97 = v88;
      *(_DWORD *)v57 = 136315394;
      v58 = v84;
      sub_1A444ABF4(v52, v84, &qword_1EE71D178);
      v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v58, 1, v9);
      v92 = v53;
      if (v59 == 1)
      {
        v60 = 0xE300000000000000;
        v61 = 7104878;
      }
      else
      {
        v73 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v90, v58, v9);
        v53(v89, v73, v9);
        v61 = sub_1A46908E8();
        v60 = v74;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v73, v39);
      }
      *(_QWORD *)&v96[0] = sub_1A4431120(v61, v60, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C(v86, &qword_1EE71D178);
      *(_WORD *)(v57 + 12) = 2080;
      v75 = (char *)v87;
      v76 = sub_1A4691CE0();
      *(_QWORD *)&v96[0] = sub_1A4431120(v76, v77, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v63 = *(void (**)(char *, uint64_t))(v38 + 8);
      v63(v75, v39);
      _os_log_impl(&dword_1A442D000, v55, (os_log_type_t)v91, "Failed cast {given: %s, expect: %s}", (uint8_t *)v57, 0x16u);
      v78 = v88;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v78, -1, -1);
      MEMORY[0x1A85A0114](v57, -1, -1);

      v53 = v92;
      v40 = v93;
    }
    else
    {
      sub_1A445404C(v52, &qword_1EE71D178);
      v63 = *(void (**)(char *, uint64_t))(v38 + 8);
      v63(v54, v9);

    }
    *(_QWORD *)&v97 = 0;
    *((_QWORD *)&v97 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v97 = 0xD000000000000014;
    *((_QWORD *)&v97 + 1) = 0x80000001A46BD730;
    v43 = (uint64_t)v94;
    v79 = v85;
    sub_1A444ABF4((uint64_t)v94, v85, &qword_1EE71D178);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v79, 1, v39) != 1)
    {
      v80 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v90, v79, v39);
      v53(v89, v80, v39);
      sub_1A46908E8();
      v63(v80, v39);
    }
    v72 = (void *)objc_opt_self();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691CE0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  sub_1A4690984();
  v81 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v82 = objc_msgSend(v72, sel_internalErrorWithDebugDescription_, v81);

  v63(v40, v39);
  sub_1A445404C(v43, &qword_1EE71D178);
  return v82;
}

id sub_1A459AC38(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A459A0E4(a1, a2, a3, &qword_1EE71E238, &qword_1EE721B88);
}

id sub_1A459AC4C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A459AC88(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1EE721B70);
}

id sub_1A459AC60(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A459A0E4(a1, a2, a3, &qword_1ED243170, &qword_1EE721B78);
}

id sub_1A459AC74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A459AC88(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for REMStoreObjectsContainer, &qword_1EE721B68);
}

id sub_1A459AC88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  NSObject *v46;
  int v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  NSObject *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void *v72;
  char *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  id v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, char *, uint64_t);
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  void (*v92)(char *, char *, uint64_t);
  char *v93;
  char *v94;
  char v95[32];
  _OWORD v96[2];
  __int128 v97;
  uint64_t v98;

  v92 = (void (*)(char *, char *, uint64_t))a2;
  v9 = sub_1A4691CEC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v89 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v90 = (char *)&v84 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v87 = (void (*)(char *, char *, uint64_t))((char *)&v84 - v16);
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v84 - v18;
  MEMORY[0x1E0C80A78](v17);
  v93 = (char *)&v84 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D178);
  v21 = MEMORY[0x1E0C80A78](v20);
  v85 = (uint64_t)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v84 = (uint64_t)&v84 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v88 = (uint64_t)&v84 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v84 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v86 = (uint64_t)&v84 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v84 - v33;
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v84 - v35;
  v37 = a4(0);
  sub_1A444ABF4(a1, (uint64_t)&v97, &qword_1ED243E68);
  v94 = v36;
  if (v98)
  {
    sub_1A444A940(&v97, v96);
    sub_1A44311F0((uint64_t)v96, (uint64_t)v95);
    sub_1A4691CD4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    v38 = v10;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v36, 0, 1, v9);
  }
  else
  {
    v38 = v10;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v36, 1, 1, v9);
  }
  v39 = v9;
  v98 = __swift_instantiateConcreteTypeFromMangledName(a5);
  *(_QWORD *)&v97 = v37;
  v40 = v93;
  sub_1A4691CD4();
  if (a3)
  {
    v41 = v38;
    if (qword_1EE71BFF0 != -1)
      swift_once();
    v42 = sub_1A4690318();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EE71D160);
    v43 = (uint64_t)v94;
    sub_1A444ABF4((uint64_t)v94, (uint64_t)v34, &qword_1EE71D178);
    v44 = v91;
    v87 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v87(v91, v40, v39);
    v45 = a3;
    swift_bridgeObjectRetain_n();
    v46 = sub_1A469030C();
    v47 = sub_1A4690FFC();
    if (os_log_type_enabled(v46, (os_log_type_t)v47))
    {
      LODWORD(v86) = v47;
      v48 = swift_slowAlloc();
      v85 = swift_slowAlloc();
      *(_QWORD *)&v97 = v85;
      *(_DWORD *)v48 = 136315650;
      sub_1A444ABF4((uint64_t)v34, (uint64_t)v29, &qword_1EE71D178);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v29, 1, v39) == 1)
      {
        v49 = 0xE300000000000000;
        v50 = 7104878;
      }
      else
      {
        v64 = v90;
        (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v90, v29, v39);
        v87(v89, v64, v39);
        v50 = sub_1A46908E8();
        v49 = v65;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v64, v39);
      }
      *(_QWORD *)&v96[0] = sub_1A4431120(v50, v49, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C((uint64_t)v34, &qword_1EE71D178);
      *(_WORD *)(v48 + 12) = 2080;
      v66 = v91;
      v67 = sub_1A4691CE0();
      *(_QWORD *)&v96[0] = sub_1A4431120(v67, v68, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v62 = v41;
      v63 = *(void (**)(char *, uint64_t))(v41 + 8);
      v63(v66, v39);
      *(_WORD *)(v48 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v96[0] = sub_1A4431120((uint64_t)v92, v45, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v46, (os_log_type_t)v86, "Failed cast {given: %s, expect: %s, message: \"%s}\"", (uint8_t *)v48, 0x20u);
      v69 = v85;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v69, -1, -1);
      MEMORY[0x1A85A0114](v48, -1, -1);

      v40 = v93;
      v43 = (uint64_t)v94;
    }
    else
    {
      sub_1A445404C((uint64_t)v34, &qword_1EE71D178);
      v62 = v41;
      v63 = *(void (**)(char *, uint64_t))(v41 + 8);
      v63(v44, v39);

      swift_bridgeObjectRelease_n();
    }
    *(_QWORD *)&v97 = 0;
    *((_QWORD *)&v97 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v97 = 0xD000000000000014;
    *((_QWORD *)&v97 + 1) = 0x80000001A46BD730;
    v70 = v88;
    sub_1A444ABF4(v43, v88, &qword_1EE71D178);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v70, 1, v39) != 1)
    {
      v71 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v90, v70, v39);
      v87(v89, v71, v39);
      sub_1A46908E8();
      v63(v71, v39);
    }
    v72 = (void *)objc_opt_self();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691CE0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4690984();
  }
  else
  {
    if (qword_1EE71BFF0 != -1)
      swift_once();
    v51 = sub_1A4690318();
    __swift_project_value_buffer(v51, (uint64_t)qword_1EE71D160);
    v52 = v86;
    sub_1A444ABF4((uint64_t)v94, v86, &qword_1EE71D178);
    v53 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v54 = (char *)v87;
    v53((char *)v87, v40, v9);
    v55 = sub_1A469030C();
    v56 = sub_1A4690FFC();
    if (os_log_type_enabled(v55, (os_log_type_t)v56))
    {
      LODWORD(v91) = v56;
      v57 = swift_slowAlloc();
      v88 = swift_slowAlloc();
      *(_QWORD *)&v97 = v88;
      *(_DWORD *)v57 = 136315394;
      v58 = v84;
      sub_1A444ABF4(v52, v84, &qword_1EE71D178);
      v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v58, 1, v9);
      v92 = v53;
      if (v59 == 1)
      {
        v60 = 0xE300000000000000;
        v61 = 7104878;
      }
      else
      {
        v73 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v90, v58, v9);
        v53(v89, v73, v9);
        v61 = sub_1A46908E8();
        v60 = v74;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v73, v39);
      }
      *(_QWORD *)&v96[0] = sub_1A4431120(v61, v60, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A445404C(v86, &qword_1EE71D178);
      *(_WORD *)(v57 + 12) = 2080;
      v75 = (char *)v87;
      v76 = sub_1A4691CE0();
      *(_QWORD *)&v96[0] = sub_1A4431120(v76, v77, (uint64_t *)&v97);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      v63 = *(void (**)(char *, uint64_t))(v38 + 8);
      v63(v75, v39);
      _os_log_impl(&dword_1A442D000, v55, (os_log_type_t)v91, "Failed cast {given: %s, expect: %s}", (uint8_t *)v57, 0x16u);
      v78 = v88;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v78, -1, -1);
      MEMORY[0x1A85A0114](v57, -1, -1);

      v53 = v92;
      v40 = v93;
    }
    else
    {
      sub_1A445404C(v52, &qword_1EE71D178);
      v63 = *(void (**)(char *, uint64_t))(v38 + 8);
      v63(v54, v9);

    }
    *(_QWORD *)&v97 = 0;
    *((_QWORD *)&v97 + 1) = 0xE000000000000000;
    sub_1A4691410();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v97 = 0xD000000000000014;
    *((_QWORD *)&v97 + 1) = 0x80000001A46BD730;
    v43 = (uint64_t)v94;
    v79 = v85;
    sub_1A444ABF4((uint64_t)v94, v85, &qword_1EE71D178);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v79, 1, v39) != 1)
    {
      v80 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v90, v79, v39);
      v53(v89, v80, v39);
      sub_1A46908E8();
      v63(v80, v39);
    }
    v72 = (void *)objc_opt_self();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691CE0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
  }
  sub_1A4690984();
  v81 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v82 = objc_msgSend(v72, sel_internalErrorWithDebugDescription_, v81);

  v63(v40, v39);
  sub_1A445404C(v43, &qword_1EE71D178);
  return v82;
}

void REMSwiftInvocator.performSwiftInvocation<A>(_:parameters:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(uint64_t *, _QWORD);
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t MetatypeMetadata;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  void (*v67)(uint64_t *, _QWORD);
  id v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, char *, uint64_t);
  char *v77;
  char *v78;
  char *v79;
  id v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  uint64_t v95;
  char *v96;
  uint64_t AssociatedTypeWitness;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  char *v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  id v109[6];
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;

  v103 = a2;
  v98 = a1;
  v93 = a7;
  v106 = a6;
  v107 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v92 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v91 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v96 = (char *)&v85 - v13;
  MEMORY[0x1E0C80A78](v12);
  v90 = (char *)&v85 - v14;
  v15 = sub_1A46915B4();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v105 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FE50();
  swift_allocObject();
  v18 = sub_1A468FE44();
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 8);
  v100 = v7;
  v99 = a3;
  v101 = a5;
  v94 = v19;
  v20 = v19(a3, a5);
  v21 = MEMORY[0x1E0DEE9D8];
  v22 = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  v23 = type metadata accessor for REMStoreObjectsContainer();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = v20;
  v25 = (uint64_t)v24;
  v24[3] = v22;
  v26 = v24 + 3;
  v24[4] = sub_1A443CEF8(v21);
  if (qword_1ED244118 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED243F48);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v29 = (uint64_t)v105;
  v28(v105, v27, v15);
  v112 = v23;
  v111 = (_QWORD *)v25;
  v102 = v25;
  swift_retain();
  v30 = (void (*)(uint64_t *, _QWORD))sub_1A468FE38();
  sub_1A4599F20((uint64_t)&v111, v29);
  v30(&v110, 0);
  v95 = v15;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v31 = v104;
  v32 = sub_1A468FE2C();
  if (v31)
  {
    v34 = (uint64_t)v107;
    if (qword_1EE71C138 != -1)
      swift_once();
    v35 = sub_1A4690318();
    __swift_project_value_buffer(v35, (uint64_t)qword_1EE721AB0);
    v36 = v31;
    v37 = v31;
    v38 = sub_1A469030C();
    v39 = sub_1A4690FF0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      v111 = (_QWORD *)v41;
      *(_DWORD *)v40 = 136315394;
      swift_getErrorValue();
      v42 = Error.rem_errorDescription.getter((uint64_t)v109[5]);
      v110 = sub_1A4431120(v42, v43, (uint64_t *)&v111);
      sub_1A46911D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v40 + 12) = 2080;
      v110 = v34;
      swift_getMetatypeMetadata();
      v44 = sub_1A46908E8();
      v110 = sub_1A4431120(v44, v45, (uint64_t *)&v111);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v38, v39, "Failed to encode the parameters of REMSwiftInvocable {error: %s, invocation: %s}", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v41, -1, -1);
      MEMORY[0x1A85A0114](v40, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
    swift_release();
    swift_release();
  }
  else
  {
    v46 = v32;
    v47 = v33;
    v87 = v27;
    v88 = v28;
    v103 = v23;
    v89 = v18;
    swift_beginAccess();
    v48 = *v26;
    v49 = objc_allocWithZone(MEMORY[0x1E0D846C0]);
    sub_1A44695A8(v46, v47);
    swift_bridgeObjectRetain();
    v109[0] = objc_msgSend(v49, sel_init);
    v50 = v107;
    v111 = v107;
    v51 = v46;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v53 = sub_1A46908E8();
    v55 = v54;
    v104 = &v85;
    MEMORY[0x1E0C80A78](v53);
    *(&v85 - 10) = v99;
    *(&v85 - 9) = (uint64_t)v50;
    v56 = v47;
    v57 = v106;
    *(&v85 - 8) = v101;
    *(&v85 - 7) = v57;
    *(&v85 - 6) = (uint64_t)v109;
    v58 = v98;
    *(&v85 - 5) = v100;
    *(&v85 - 4) = v58;
    *(&v85 - 3) = v51;
    *(&v85 - 2) = v56;
    *(&v85 - 1) = v48;
    v59 = sub_1A4690FD8();
    measureTimeElapsed(_:level:block:)(v53, v55, v59, (char *)sub_1A459C8D4, (uint64_t)(&v85 - 12));
    v98 = MetatypeMetadata;
    sub_1A44695EC(v51, v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A468FE20();
    swift_allocObject();
    sub_1A468FE14();
    v60 = objc_msgSend(v109[0], sel_resultStorages);
    v61 = sub_1A4690708();

    v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B8);
    v111 = (_QWORD *)v61;
    sub_1A44311F0((uint64_t)&v111, (uint64_t)&v110);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439B0);
    if (swift_dynamicCast())
    {
      v86 = v51;
      v104 = (uint64_t *)v56;
      v62 = v108;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
      v63 = v94(v99, v101);
      v64 = v103;
      v65 = (_QWORD *)swift_allocObject();
      v65[2] = v63;
      v65[3] = v62;
      v65[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
      v66 = (uint64_t)v105;
      v88(v105, v87, v95);
      v112 = v64;
      v111 = v65;
      swift_retain();
      v67 = (void (*)(uint64_t *, _QWORD))sub_1A468FE08();
      sub_1A4599F20((uint64_t)&v111, v66);
      v67(&v110, 0);
      v68 = v109[0];
      v69 = objc_msgSend(v109[0], sel_resultData);
      v70 = sub_1A468FFC4();
      v72 = v71;

      v73 = AssociatedTypeWitness;
      swift_getAssociatedConformanceWitness();
      v74 = v96;
      sub_1A468FDFC();
      sub_1A44695EC(v70, v72);
      v75 = v92;
      v76 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v77 = v74;
      v78 = v90;
      v76(v90, v77, v73);
      v79 = v91;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v91, v78, v73);
      v80 = v68;
      v107 = objc_msgSend(v80, sel_latestFetchResultToken);
      sub_1A44695EC(v86, (unint64_t)v104);
      swift_release();
      swift_release();

      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v78, v73);
      v81 = v93;
      v76(v93, v79, v73);
      v84 = type metadata accessor for REMInvocationResult(0, v73, v82, v83);
      *(_QWORD *)&v81[*(int *)(v84 + 28)] = v107;
    }
    else
    {
      sub_1A44311F0((uint64_t)&v111, (uint64_t)&v110);
      sub_1A459A0E4((uint64_t)&v110, 0, 0, &qword_1ED2439B0, &qword_1EE721B90);
      sub_1A445404C((uint64_t)&v110, &qword_1ED243E68);
      swift_willThrow();
      sub_1A44695EC(v51, v56);
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
    }

  }
}

uint64_t sub_1A459C474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721AB0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721AB0);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t sub_1A459C504()
{
  sub_1A459C92C();
  return sub_1A4691DB8();
}

uint64_t sub_1A459C52C()
{
  sub_1A459C92C();
  return sub_1A4691DC4();
}

uint64_t VoidParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721AC8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A459C92C();
  sub_1A4691D40();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t VoidParameters.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_1A459C63C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721AC8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A459C92C();
  sub_1A4691D40();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t REMInvocationResult.result.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

void *REMInvocationResult.latestFetchResultToken.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 28));
  v3 = v2;
  return v2;
}

void REMSwiftInvocator.performSwiftInvocation<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  REMSwiftInvocator.performSwiftInvocation<A>(_:parameters:)(a1, a2, a2, a3, a4, a5, a6);
}

id REMStore.store.getter()
{
  void *v0;

  return v0;
}

id sub_1A459C76C()
{
  id *v0;

  return *v0;
}

id sub_1A459C774()
{
  id *v0;

  return objc_msgSend(*v0, sel_store);
}

id sub_1A459C798(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1A459C7B8(a1, a2, a3, a4);
}

id sub_1A459C7B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v4;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v12[2];

  v12[1] = *(id *)MEMORY[0x1E0C80C00];
  v7 = (void *)sub_1A468FFAC();
  if (a4)
  {
    sub_1A44C178C();
    sub_1A4460634();
    a4 = (void *)sub_1A46906F0();
  }
  v12[0] = 0;
  v8 = objc_msgSend(v4, sel_resultFromPerformingSwiftInvocation_parametersData_storages_error_, a1, v7, a4, v12);

  if (v8)
  {
    v9 = v12[0];
  }
  else
  {
    v10 = v12[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v8;
}

void sub_1A459C8D4()
{
  _QWORD *v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  void *v4;

  v2 = (void **)v0[6];
  v3 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v0[4] + 16))(v0[8], v0[9], v0[10], v0[11], v0[2]);
  if (!v1)
  {
    v4 = *v2;
    *v2 = (void *)v3;

  }
}

unint64_t sub_1A459C92C()
{
  unint64_t result;

  result = qword_1EE721AD0[0];
  if (!qword_1EE721AD0[0])
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A6000, &type metadata for VoidParameters.CodingKeys);
    atomic_store(result, qword_1EE721AD0);
  }
  return result;
}

uint64_t dispatch thunk of REMSwiftInvocableProtocol.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

ValueMetadata *type metadata accessor for VoidParameters()
{
  return &type metadata for VoidParameters;
}

uint64_t sub_1A459C988()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A459C9FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  void *v10;
  id v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = v10;
    v11 = v10;
  }
  return v4;
}

void sub_1A459CAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();

}

uint64_t sub_1A459CAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  *v7 = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_1A459CB50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  void *v9;
  id v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v7;
  *v7 = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_1A459CBB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A459CC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1A459CC78(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFE)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFE)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      if ((v12 + 1) >= 2)
        return v12;
      else
        return 0;
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A459CCF4 + 4 * byte_1A46A5E30[v10]))();
  }
}

void sub_1A459CD80(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFEu)
    v6 = 2147483646;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A459CE74()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A459CEF8);
}

void sub_1A459CE7C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A459CE84);
  JUMPOUT(0x1A459CEF8);
}

void sub_1A459CECC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A459CEF8);
}

void sub_1A459CED4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A459CEF8);
}

uint64_t sub_1A459CEDC(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFE)
  {
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x1A459CEE8);
    *(_QWORD *)((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = a2;
LABEL_6:
    JUMPOUT(0x1A459CEF8);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t type metadata accessor for REMInvocationResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMInvocationResult);
}

uint64_t dispatch thunk of REMSwiftInvocator.store.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of REMSwiftInvocator.result(fromPerforming:parametersData:storages:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

ValueMetadata *type metadata accessor for VoidParameters.CodingKeys()
{
  return &type metadata for VoidParameters.CodingKeys;
}

unint64_t sub_1A459CF50()
{
  unint64_t result;

  result = qword_1EE721B58;
  if (!qword_1EE721B58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5FB0, &type metadata for VoidParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721B58);
  }
  return result;
}

unint64_t sub_1A459CF98()
{
  unint64_t result;

  result = qword_1EE721B60;
  if (!qword_1EE721B60)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A5FD8, &type metadata for VoidParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721B60);
  }
  return result;
}

id sub_1A459CFDC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1A459C798(a1, a2, a3, a4);
}

uint64_t sub_1A459CFF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721B98);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721B98);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.encodedString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;

  v1 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A46908DC();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A468FB80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FBB0();
  swift_allocObject();
  sub_1A468FBA4();
  if (qword_1EE71C150 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v5, (uint64_t)qword_1EE721BC8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1A468FB8C();
  sub_1A4436344(&qword_1EE721BE0, (uint64_t (*)(uint64_t))type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.GroceryAutoCategorizationMessage);
  v10 = sub_1A468FB98();
  v12 = v11;
  sub_1A46908D0();
  v13 = sub_1A46908B8();
  if (v14)
  {
    v15 = v13;
    sub_1A44695EC(v10, v12);
    swift_release();
  }
  else
  {
    if (qword_1EE71C140 != -1)
      swift_once();
    v17 = sub_1A4690318();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EE721B98);
    sub_1A45A0744(v0, (uint64_t)v3);
    v18 = sub_1A469030C();
    v19 = sub_1A4690FF0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      v24[0] = v20 + 4;
      v22 = REMRemindersListDataView.GroceryAutoCategorizationMessage.description.getter();
      v24[1] = sub_1A4431120(v22, v23, &v25);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      sub_1A45A0788((uint64_t)v3);
      _os_log_impl(&dword_1A442D000, v18, v19, "GroceryAutoCategorizationMessage: Cannot encode to JSON data to UTF8 {message: %s}", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v21, -1, -1);
      MEMORY[0x1A85A0114](v20, -1, -1);
      sub_1A44695EC(v10, v12);

      swift_release();
    }
    else
    {
      sub_1A44695EC(v10, v12);
      swift_release();
      sub_1A45A0788((uint64_t)v3);

    }
    return 0;
  }
  return v15;
}

uint64_t type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage()
{
  uint64_t result;

  result = qword_1ED23F080;
  if (!qword_1ED23F080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v1 = sub_1A46900B4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v30 - v10;
  v12 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A45A0744(v0, (uint64_t)v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(_QWORD *)v14;
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v18 = &v14[*(int *)(v17 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, &v14[*(int *)(v17 + 48)], v5);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v18, v1);
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_1A4691410();
      sub_1A4690984();
      v31 = v16;
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      sub_1A46900CC();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      sub_1A4436344(&qword_1EE721BF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v19 = v32;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    else
    {
      v27 = *(_QWORD *)v14;
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v14[*(int *)(v28 + 48)], v1);
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_1A4691410();
      sub_1A4690984();
      v31 = v27;
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      sub_1A4436344(&qword_1EE721BF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      sub_1A46918D8();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v19 = v32;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
  else
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
    v21 = &v14[*(int *)(v20 + 48)];
    v22 = &v14[*(int *)(v20 + 64)];
    v23 = v6;
    v30 = v6;
    v24 = v2;
    v25 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v25(v11, v14, v5);
    v25(v9, v21, v5);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v4, v22, v1);
    v32 = 0;
    v33 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    sub_1A46900CC();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A46900CC();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4436344(&qword_1EE721BF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v19 = v32;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v1);
    v26 = *(void (**)(char *, uint64_t))(v30 + 8);
    v26(v9, v5);
    v26(v11, v5);
  }
  return v19;
}

uint64_t static REMRemindersListDataView.GroceryAutoCategorizationMessage.message(from:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v30 = a3;
  v31 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46908DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A468FB44();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A468FB74();
  swift_allocObject();
  sub_1A468FB68();
  if (qword_1EE71C148 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v11, (uint64_t)qword_1EE721BB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  sub_1A468FB50();
  sub_1A46908D0();
  v16 = sub_1A46908AC();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v18 >> 60 == 15)
  {
    if (qword_1EE71C140 != -1)
      swift_once();
    v19 = sub_1A4690318();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE721B98);
    swift_bridgeObjectRetain_n();
    v20 = sub_1A469030C();
    v21 = sub_1A4690FF0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v33 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain();
      v32 = sub_1A4431120(a1, a2, &v33);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v20, v21, "GroceryAutoCategorizationMessage: Cannot decode JSON string into utf8 data {encodedMessage: %s}", v22, 0xCu);
      v24 = 1;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v23, -1, -1);
      MEMORY[0x1A85A0114](v22, -1, -1);

      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
      v24 = 1;
    }
    v26 = v30;
    v25 = v31;
  }
  else
  {
    sub_1A4436344(&qword_1EE721C08, (uint64_t (*)(uint64_t))type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.GroceryAutoCategorizationMessage);
    v25 = v31;
    v24 = 0;
    sub_1A468FB5C();
    sub_1A44D65D0(v16, v18);
    swift_release();
    v26 = v30;
    sub_1A45A07C4((uint64_t)v6, v30);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v26, v24, 1, v25);
}

void static REMRemindersListDataView.GroceryAutoCategorizationMessage.coalesceRecent(encodedMessageStrings:)(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(void);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  __int128 v55;
  unint64_t v56;
  unint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t *v61;
  uint64_t v62;
  unint64_t v63;
  unsigned int (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;
  char *v84;
  void (*v85)(char *, uint64_t, uint64_t);
  void (*v86)(uint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  char v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  int v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(char *, char *, uint64_t);
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  char *v140;
  char v141;
  char *v142;
  char v143;
  void (*v144)(char *, uint64_t);
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  char *v155;
  int v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char v168;
  void (*v169)(char *, uint64_t);
  _QWORD *v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  int v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(char *, char *, uint64_t);
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char v199;
  char *v200;
  void (*v201)(char *, uint64_t);
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  void (*v219)(char *, char *, uint64_t);
  char *v220;
  uint64_t v221;
  char *v222;
  char *v223;
  char v224;
  void (*v225)(char *, uint64_t);
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  void (*v240)(char *, uint64_t);
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void (*v247)(uint64_t, uint64_t);
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  void (*v282)(void);
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  __int128 v287;
  void (*v288)(char *, char *, uint64_t);
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  int64_t v298;
  uint64_t v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305[2];
  uint64_t v306;

  v281 = a2;
  v3 = sub_1A46900FC();
  v4 = *(_QWORD *)(v3 - 8);
  v293 = v3;
  v294 = v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v275 = (char *)&v269 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v280 = (char *)&v269 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v273 = (char *)&v269 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v279 = (char *)&v269 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v272 = (char *)&v269 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v274 = (char *)&v269 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v270 = (char *)&v269 - v18;
  MEMORY[0x1E0C80A78](v17);
  v271 = (char *)&v269 - v19;
  v285 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23EB30);
  MEMORY[0x1E0C80A78](v285);
  v286 = (char *)&v269 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v295 = sub_1A46900B4();
  v292 = *(_QWORD *)(v295 - 8);
  v21 = MEMORY[0x1E0C80A78](v295);
  v278 = (char *)&v269 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v277 = (char *)&v269 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v276 = (char *)&v269 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v269 = (char *)&v269 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v291 = (char *)&v269 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v290 = (char *)&v269 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v301 = (char *)&v269 - v34;
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v269 - v35;
  v37 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = MEMORY[0x1E0C80A78](v37);
  v284 = (uint64_t)&v269 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v39);
  v300 = (uint64_t)&v269 - v42;
  MEMORY[0x1E0C80A78](v41);
  v304 = (uint64_t)&v269 - v43;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EC80);
  v45 = MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v269 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v45);
  v302 = v38;
  v48 = *(void (**)(void))(v38 + 56);
  v296 = (uint64_t)&v269 - v49;
  v282 = v48;
  v48();
  v50 = *(_QWORD *)(a1 + 56);
  v297 = a1 + 56;
  v51 = 1 << *(_BYTE *)(a1 + 32);
  v52 = -1;
  if (v51 < 64)
    v52 = ~(-1 << v51);
  v53 = v52 & v50;
  v298 = (unint64_t)(v51 + 63) >> 6;
  v303 = a1;
  swift_bridgeObjectRetain();
  v54 = 0;
  *(_QWORD *)&v55 = 136315138;
  v287 = v55;
  v283 = MEMORY[0x1E0DEE9B8] + 8;
  v299 = v37;
  v289 = v36;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v53)
        {
          v56 = __clz(__rbit64(v53));
          v53 &= v53 - 1;
          v57 = v56 | (v54 << 6);
        }
        else
        {
          v58 = v54 + 1;
          if (__OFADD__(v54, 1))
          {
            __break(1u);
            goto LABEL_85;
          }
          if (v58 >= v298)
            goto LABEL_48;
          v59 = *(_QWORD *)(v297 + 8 * v58);
          ++v54;
          if (!v59)
          {
            v54 = v58 + 1;
            if (v58 + 1 >= v298)
              goto LABEL_48;
            v59 = *(_QWORD *)(v297 + 8 * v54);
            if (!v59)
            {
              v54 = v58 + 2;
              if (v58 + 2 >= v298)
                goto LABEL_48;
              v59 = *(_QWORD *)(v297 + 8 * v54);
              if (!v59)
              {
                v60 = v58 + 3;
                if (v60 >= v298)
                {
LABEL_48:
                  swift_release();
                  sub_1A45A0890(v296, (uint64_t)v281);
                  return;
                }
                v59 = *(_QWORD *)(v297 + 8 * v60);
                if (!v59)
                {
                  while (1)
                  {
                    v54 = v60 + 1;
                    if (__OFADD__(v60, 1))
                      break;
                    if (v54 >= v298)
                      goto LABEL_48;
                    v59 = *(_QWORD *)(v297 + 8 * v54);
                    ++v60;
                    if (v59)
                      goto LABEL_20;
                  }
LABEL_85:
                  __break(1u);
LABEL_86:
                  __break(1u);
LABEL_87:
                  __break(1u);
LABEL_88:
                  __break(1u);
LABEL_89:
                  __break(1u);
LABEL_90:
                  __break(1u);
LABEL_91:
                  __break(1u);
LABEL_92:
                  __break(1u);
                  goto LABEL_93;
                }
                v54 = v60;
              }
            }
          }
LABEL_20:
          v53 = (v59 - 1) & v59;
          v57 = __clz(__rbit64(v59)) + (v54 << 6);
        }
        v61 = (uint64_t *)(*(_QWORD *)(v303 + 48) + 16 * v57);
        v62 = *v61;
        v63 = v61[1];
        swift_bridgeObjectRetain();
        static REMRemindersListDataView.GroceryAutoCategorizationMessage.message(from:)(v62, v63, (uint64_t)v47);
        v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v302 + 48);
        if (v64(v47, 1, v37) != 1)
          break;
        sub_1A45A0808((uint64_t)v47);
        if (qword_1EE71C140 != -1)
          swift_once();
        v65 = sub_1A4690318();
        __swift_project_value_buffer(v65, (uint64_t)qword_1EE721B98);
        swift_bridgeObjectRetain();
        v66 = sub_1A469030C();
        v67 = sub_1A4690FF0();
        if (os_log_type_enabled(v66, v67))
        {
          v68 = swift_slowAlloc();
          v69 = swift_slowAlloc();
          v305[0] = v69;
          *(_DWORD *)v68 = v287;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v68 + 4) = sub_1A4431120(v62, v63, v305);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A442D000, v66, v67, "GroceryAutoCategorizationMessage: Cannot get message from {encodedMessageString: %s", (uint8_t *)v68, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v69, -1, -1);
          v70 = v68;
          v37 = v299;
          MEMORY[0x1A85A0114](v70, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
      }
      swift_bridgeObjectRelease();
      v71 = v304;
      sub_1A45A07C4((uint64_t)v47, v304);
      sub_1A46900A8();
      sub_1A4690024();
      sub_1A45A0744(v71, v300);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        v73 = v295;
        v75 = v291;
        v74 = v292;
        if (EnumCaseMultiPayload == 1)
        {
          v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
          v77 = v300 + *(int *)(v76 + 48);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
          v78(v75, v300 + *(int *)(v76 + 64), v73);
          (*(void (**)(uint64_t, uint64_t))(v294 + 8))(v77, v293);
        }
        else
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
          v78(v75, v300 + *(int *)(v89 + 48), v73);
        }
      }
      else
      {
        v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
        v80 = v300;
        v81 = v300 + *(int *)(v79 + 48);
        v82 = v300 + *(int *)(v79 + 64);
        v75 = v291;
        v74 = v292;
        v288 = (void (*)(char *, char *, uint64_t))v53;
        v83 = v54;
        v84 = v47;
        v85 = *(void (**)(char *, uint64_t, uint64_t))(v292 + 32);
        v73 = v295;
        v85(v291, v82, v295);
        v86 = *(void (**)(uint64_t, uint64_t))(v294 + 8);
        v87 = v81;
        v88 = v293;
        v86(v87, v293);
        v86(v80, v88);
        v78 = v85;
        v47 = v84;
        v54 = v83;
        v53 = (unint64_t)v288;
      }
      v90 = v290;
      v288 = (void (*)(char *, char *, uint64_t))v78;
      v78(v290, (uint64_t)v75, v73);
      sub_1A4436344((unint64_t *)&qword_1ED243CF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v91 = v301;
      v92 = sub_1A4690834();
      v93 = *(void (**)(char *, uint64_t))(v74 + 8);
      v93(v90, v73);
      v93(v91, v73);
      v93(v289, v73);
      if ((v92 & 1) == 0)
        break;
      if (qword_1EE71C140 != -1)
        swift_once();
      v94 = sub_1A4690318();
      __swift_project_value_buffer(v94, (uint64_t)qword_1EE721B98);
      v95 = v304;
      v96 = v284;
      sub_1A45A0744(v304, v284);
      v97 = sub_1A469030C();
      v98 = sub_1A4690FF0();
      if (os_log_type_enabled(v97, v98))
      {
        v99 = swift_slowAlloc();
        v100 = swift_slowAlloc();
        v306 = v100;
        *(_DWORD *)v99 = v287;
        v101 = REMRemindersListDataView.GroceryAutoCategorizationMessage.encodedString.getter();
        if (v102)
        {
          v305[0] = v101;
          v305[1] = v102;
          v103 = sub_1A46908E8();
          v105 = v104;
        }
        else
        {
          v105 = 0xE300000000000000;
          v103 = 7104878;
        }
        *(_QWORD *)(v99 + 4) = sub_1A4431120(v103, v105, &v306);
        swift_bridgeObjectRelease();
        sub_1A45A0788(v96);
        _os_log_impl(&dword_1A442D000, v97, v98, "GroceryAutoCategorizationMessage: Skipping coalescing message as it was too old {message: '%s'}", (uint8_t *)v99, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v100, -1, -1);
        MEMORY[0x1A85A0114](v99, -1, -1);

        v114 = v304;
      }
      else
      {

        sub_1A45A0788(v96);
        v114 = v95;
      }
      sub_1A45A0788(v114);
      v37 = v299;
    }
    v106 = v286;
    v107 = (uint64_t)&v286[*(int *)(v285 + 48)];
    v108 = v296;
    sub_1A45A0848(v296, (uint64_t)v286);
    sub_1A45A0744(v304, v107);
    v109 = v106;
    v110 = v299;
    if (v64(v109, 1, v299) != 1)
      break;
    sub_1A45A0808(v108);
    v111 = swift_getEnumCaseMultiPayload();
    v37 = v110;
    if (v111)
    {
      if (v111 == 1)
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v113 = v107 + *(int *)(v112 + 48);
        v93((char *)(v107 + *(int *)(v112 + 64)), v73);
        (*(void (**)(uint64_t, uint64_t))(v294 + 8))(v113, v293);
      }
      else
      {
        v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
        v93((char *)(v107 + *(int *)(v120 + 48)), v73);
      }
    }
    else
    {
      v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
      v116 = v107 + *(int *)(v115 + 48);
      v93((char *)(v107 + *(int *)(v115 + 64)), v73);
      v117 = *(void (**)(uint64_t, uint64_t))(v294 + 8);
      v118 = v116;
      v119 = v293;
      v117(v118, v293);
      v117(v107, v119);
    }
    v121 = v296;
    sub_1A45A07C4(v304, v296);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v282)(v121, 0, 1, v37);
  }
  v122 = swift_getEnumCaseMultiPayload();
  if (v122)
  {
    if (v122 != 1)
    {
      sub_1A45A0788(v304);
      swift_release();
      sub_1A45A0808(v296);
      v176 = v286;
      v177 = *(_QWORD *)v286;
      v178 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
      v179 = (char *)v176 + v178;
      v180 = swift_getEnumCaseMultiPayload();
      v181 = v281;
      if (!v180)
      {
        v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
        v243 = v73;
        v244 = *(int *)(v242 + 48);
        v245 = *(int *)(v242 + 64);
        v288(&v181[v178], v179, v243);
        if (!__OFADD__(v177, 1))
        {
          *(_QWORD *)v181 = v177 + 1;
          v246 = v299;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v181, 0, 1, v246);
          v93((char *)(v107 + v245), v243);
          v247 = *(void (**)(uint64_t, uint64_t))(v294 + 8);
          v248 = v293;
          v247(v107 + v244, v293);
          v247(v107, v248);
          return;
        }
        goto LABEL_92;
      }
      if (v180 == 1)
      {
        v182 = *(_QWORD *)v107;
        v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v184 = *(int *)(v183 + 48);
        v185 = *(int *)(v183 + 64);
        v186 = &v181[v178];
        v187 = v295;
        v288(v186, v179, v295);
        if (!__OFADD__(v177, v182))
        {
          *(_QWORD *)v181 = v177 + v182;
          v188 = v299;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v181, 0, 1, v188);
          v93((char *)(v107 + v185), v187);
          (*(void (**)(uint64_t, uint64_t))(v294 + 8))(v107 + v184, v293);
          return;
        }
        goto LABEL_88;
      }
      v249 = *(_QWORD *)v107;
      v250 = v295;
      v288(&v281[v178], v179, v295);
      if (!__OFADD__(v177, v249))
      {
        v251 = (char *)(v107 + v178);
        *(_QWORD *)v181 = v177 + v249;
        v252 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v181, 0, 1, v252);
        v93(v251, v250);
        return;
      }
LABEL_93:
      __break(1u);
      return;
    }
    v123 = v286;
    v124 = *(_QWORD *)v286;
    v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
    v126 = *(int *)(v125 + 48);
    v127 = (char *)v123 + v126;
    v128 = *(int *)(v125 + 64);
    v129 = (char *)v123 + v128;
    v130 = swift_getEnumCaseMultiPayload();
    v131 = v296;
    if (v130)
    {
      if (v130 != 1)
      {
        sub_1A45A0788(v304);
        swift_release();
        sub_1A45A0808(v131);
        v210 = *(_QWORD *)v107;
        v211 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
        v212 = v281;
        v213 = v129;
        v214 = v295;
        v288(&v281[v211], v213, v295);
        if (!__OFADD__(v124, v210))
        {
          v215 = (char *)(v107 + v211);
          *(_QWORD *)v212 = v124 + v210;
          v216 = v299;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v212, 0, 1, v216);
          v93(v215, v214);
          (*(void (**)(char *, uint64_t))(v294 + 8))(v127, v293);
          return;
        }
        goto LABEL_90;
      }
      v132 = *(_QWORD *)v107;
      v301 = (char *)(v107 + v126);
      v302 = v132;
      v134 = v293;
      v133 = v294;
      v135 = *(void (**)(char *, char *, uint64_t))(v294 + 32);
      v135(v280, v127, v293);
      v288(v278, v129, v295);
      v136 = v275;
      v137 = v301;
      v301 = (char *)v135;
      v135(v275, v137, v134);
      v138 = v124 + v302;
      if (__OFADD__(v124, v302))
        goto LABEL_86;
      v139 = (char *)(v107 + v128);
      v140 = v280;
      v141 = sub_1A46900E4();
      v142 = v136;
      v143 = v141;
      v144 = *(void (**)(char *, uint64_t))(v133 + 8);
      v144(v142, v134);
      sub_1A45A0788(v304);
      swift_release();
      sub_1A45A0808(v296);
      if ((v143 & 1) != 0)
      {
        v145 = v281;
        v146 = &v281[*(int *)(v125 + 48)];
        v147 = &v281[*(int *)(v125 + 64)];
        *(_QWORD *)v281 = v138;
        ((void (*)(char *, char *, uint64_t))v301)(v146, v140, v134);
        v148 = v147;
        v149 = v295;
        v288(v148, v278, v295);
        v150 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v145, 0, 1, v150);
        v93(v139, v149);
      }
      else
      {
        v144(v140, v134);
        v259 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
        v260 = v281;
        v261 = &v281[*(int *)(v259 + 48)];
        *(_QWORD *)v281 = v138;
        v262 = v295;
        v288(v261, v278, v295);
        v263 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v260, 0, 1, v263);
        v93(v139, v262);
      }
    }
    else
    {
      v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
      v190 = v107 + *(int *)(v189 + 48);
      v302 = *(int *)(v189 + 64);
      v191 = v294;
      v192 = *(void (**)(char *, char *, uint64_t))(v294 + 32);
      v193 = v127;
      v194 = v293;
      v192(v279, v193, v293);
      v288(v277, v129, v295);
      v195 = v273;
      v196 = v194;
      v301 = (char *)v192;
      v192(v273, (char *)v190, v194);
      v197 = v124 + 1;
      if (__OFADD__(v124, 1))
        goto LABEL_89;
      v302 += v107;
      v198 = v279;
      v199 = sub_1A46900E4();
      v200 = v195;
      v201 = *(void (**)(char *, uint64_t))(v191 + 8);
      v201(v200, v196);
      sub_1A45A0788(v304);
      swift_release();
      sub_1A45A0808(v296);
      if ((v199 & 1) != 0)
      {
        v202 = v281;
        v203 = &v281[*(int *)(v125 + 48)];
        v204 = &v281[*(int *)(v125 + 64)];
        *(_QWORD *)v281 = v197;
        ((void (*)(char *, char *, uint64_t))v301)(v203, v198, v196);
        v205 = v204;
        v206 = v295;
        v288(v205, v277, v295);
        v207 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v202, 0, 1, v207);
        v208 = (char *)v302;
        v209 = v206;
      }
      else
      {
        v201(v198, v196);
        v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
        v265 = v281;
        v266 = &v281[*(int *)(v264 + 48)];
        *(_QWORD *)v281 = v197;
        v267 = v295;
        v288(v266, v277, v295);
        v268 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v265, 0, 1, v268);
        v208 = (char *)v302;
        v209 = v267;
      }
      v93(v208, v209);
      v201((char *)v107, v196);
    }
  }
  else
  {
    v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
    v152 = *(int *)(v151 + 48);
    v153 = &v286[v152];
    v154 = *(int *)(v151 + 64);
    v155 = &v286[v154];
    v156 = swift_getEnumCaseMultiPayload();
    v157 = v281;
    v158 = v294;
    if (v156)
    {
      if (v156 != 1)
      {
        sub_1A45A0788(v304);
        swift_release();
        sub_1A45A0808(v296);
        v234 = *(_QWORD *)v107;
        v235 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
        v236 = v155;
        v237 = v295;
        v288(&v157[v235], v236, v295);
        if (!__OFADD__(v234, 1))
        {
          v238 = (char *)(v107 + v235);
          *(_QWORD *)v157 = v234 + 1;
          v239 = v299;
          swift_storeEnumTagMultiPayload();
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v157, 0, 1, v239);
          v93(v238, v237);
          v240 = *(void (**)(char *, uint64_t))(v158 + 8);
          v241 = v293;
          v240(v153, v293);
          v240(v286, v241);
          return;
        }
        goto LABEL_91;
      }
      v302 = *(_QWORD *)v107;
      v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v160 = v107 + *(int *)(v159 + 48);
      v161 = *(int *)(v159 + 64);
      v162 = *(void (**)(char *, char *, uint64_t))(v158 + 32);
      v163 = v274;
      v164 = v153;
      v165 = v293;
      v162(v274, v164, v293);
      v288(v276, v155, v295);
      v166 = v272;
      v162(v272, (char *)v160, v165);
      v167 = v302 + 1;
      if (__OFADD__(v302, 1))
        goto LABEL_87;
      v302 = v107 + v161;
      v168 = sub_1A46900E4();
      v169 = *(void (**)(char *, uint64_t))(v158 + 8);
      v169(v166, v165);
      sub_1A45A0788(v304);
      swift_release();
      sub_1A45A0808(v296);
      v170 = v281;
      if ((v168 & 1) != 0)
      {
        v171 = &v281[*(int *)(v159 + 48)];
        v172 = &v281[*(int *)(v159 + 64)];
        *(_QWORD *)v281 = v167;
        v162(v171, v163, v165);
        v173 = v172;
      }
      else
      {
        v169(v163, v165);
        v173 = (char *)v170 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
        *v170 = v167;
      }
      v174 = v295;
      v288(v173, v276, v295);
      v175 = v299;
      swift_storeEnumTagMultiPayload();
      ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v282)(v170, 0, 1, v175);
      v93((char *)v302, v174);
      v169(v286, v165);
    }
    else
    {
      v217 = (char *)(v107 + v152);
      v302 = v107 + v154;
      v218 = v294;
      v219 = *(void (**)(char *, char *, uint64_t))(v294 + 32);
      v220 = v271;
      v221 = v293;
      v219(v271, v153, v293);
      v222 = v269;
      v288(v269, v155, v295);
      v223 = v270;
      v219(v270, v217, v221);
      v224 = sub_1A46900E4();
      v225 = *(void (**)(char *, uint64_t))(v218 + 8);
      v225(v223, v221);
      sub_1A45A0788(v304);
      swift_release();
      sub_1A45A0808(v296);
      if ((v224 & 1) != 0)
      {
        v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v227 = v281;
        v228 = &v281[*(int *)(v226 + 48)];
        v229 = v221;
        v230 = &v281[*(int *)(v226 + 64)];
        *(_QWORD *)v281 = 2;
        v219(v228, v220, v229);
        v231 = v222;
        v232 = v295;
        v288(v230, v231, v295);
        v233 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v227, 0, 1, v233);
        v93((char *)v302, v232);
        v225((char *)v107, v229);
        v225(v286, v229);
      }
      else
      {
        v225(v220, v221);
        v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
        v254 = v281;
        v255 = &v281[*(int *)(v253 + 48)];
        *(_QWORD *)v281 = 2;
        v256 = v222;
        v257 = v295;
        v288(v255, v256, v295);
        v258 = v299;
        swift_storeEnumTagMultiPayload();
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v282)(v254, 0, 1, v258);
        v93((char *)v302, v257);
        v225((char *)v107, v221);
        v225(v286, v221);
      }
    }
  }
}

uint64_t sub_1A459F794(uint64_t a1)
{
  return sub_1A459F7CC(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE048], qword_1EE721BB0, MEMORY[0x1E0CAE028]);
}

uint64_t sub_1A459F7B0(uint64_t a1)
{
  return sub_1A459F7CC(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE160], qword_1EE721BC8, MEMORY[0x1E0CAE138]);
}

uint64_t sub_1A459F7CC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, unsigned int *a4)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v7, *a4, v6);
}

uint64_t sub_1A459F828()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A459F85C + 4 * byte_1A46A6050[*v0]))(0xD000000000000012, 0x80000001A46C1530);
}

uint64_t sub_1A459F85C()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A459F8A8()
{
  return 0x7441646575657571;
}

uint64_t sub_1A459F8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45A2024(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A459F8E4()
{
  sub_1A45A13B4();
  return sub_1A4691DB8();
}

uint64_t sub_1A459F90C()
{
  sub_1A45A13B4();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char **v21;
  uint64_t v22;
  char *v23;
  int EnumCaseMultiPayload;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v37;
  char **v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char **, uint64_t);
  char **v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;

  v2 = v1;
  v4 = sub_1A46900B4();
  v67 = *(_QWORD *)(v4 - 8);
  v68 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v60 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v62 = (char *)&v58 - v8;
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v58 - v9;
  v10 = sub_1A46900FC();
  v11 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  v64 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v61 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v58 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v58 - v17;
  v19 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char **)((char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C10);
  v65 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v23 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45A13B4();
  v69 = v23;
  sub_1A4691D40();
  sub_1A45A0744(v2, (uint64_t)v21);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v60 = *v21;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v26 = (char *)v21 + *(int *)(v25 + 48);
      v27 = (char *)v21 + *(int *)(v25 + 64);
      v29 = v63;
      v28 = v64;
      v30 = v61;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v26, v63);
      v32 = v67;
      v31 = v68;
      v33 = v62;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v62, v27, v68);
      v78 = 0;
      v34 = v69;
      v35 = v66;
      sub_1A4691854();
      if (v35)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v29);
      }
      else
      {
        v77 = 3;
        sub_1A4691878();
        sub_1A46900CC();
        v76 = 2;
        sub_1A4691854();
        swift_bridgeObjectRelease();
        v56 = v62;
        sub_1A469006C();
        v75 = 4;
        sub_1A469186C();
        v57 = v64;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v56, v31);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v30, v63);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v34, v70);
    }
    else
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
      v51 = v67;
      v50 = v68;
      v52 = v60;
      (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v60, (char *)v21 + *(int *)(v49 + 48), v68);
      v81 = 0;
      v54 = v69;
      v53 = v70;
      v55 = v66;
      sub_1A4691854();
      if (!v55)
      {
        v80 = 3;
        sub_1A4691878();
        sub_1A469006C();
        v79 = 4;
        sub_1A469186C();
      }
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v50);
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v54, v53);
    }
  }
  else
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
    v38 = (char **)((char *)v21 + *(int *)(v37 + 48));
    v39 = (char *)v21 + *(int *)(v37 + 64);
    v40 = v64;
    v41 = *(void (**)(char *, char **, uint64_t))(v64 + 32);
    v42 = v21;
    v43 = v63;
    v41(v18, v42, v63);
    v41(v16, v38, v43);
    v45 = v67;
    v44 = v68;
    v46 = v59;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v59, v39, v68);
    v74 = 0;
    v47 = v66;
    sub_1A4691854();
    if (v47)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
      v48 = *(void (**)(char *, uint64_t))(v40 + 8);
    }
    else
    {
      sub_1A46900CC();
      v73 = 1;
      sub_1A4691854();
      swift_bridgeObjectRelease();
      sub_1A46900CC();
      v72 = 2;
      sub_1A4691854();
      swift_bridgeObjectRelease();
      sub_1A469006C();
      v71 = 4;
      sub_1A469186C();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
      v48 = *(void (**)(char *, uint64_t))(v64 + 8);
    }
    v48(v16, v43);
    v48(v18, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v69, v70);
  }
}

uint64_t REMRemindersListDataView.GroceryAutoCategorizationMessage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  void (*v38)(uint64_t *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;
  char v84;
  char v85;

  v65 = a2;
  v3 = sub_1A46914AC();
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  MEMORY[0x1E0C80A78](v3);
  v62 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1A46900B4();
  v68 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v67 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1A46900FC();
  v71 = *(_QWORD *)(v74 - 8);
  v6 = MEMORY[0x1E0C80A78](v74);
  v69 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v70 = (char *)&v60 - v9;
  MEMORY[0x1E0C80A78](v8);
  v72 = (char *)&v60 - v10;
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C20);
  v11 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = a1[3];
  v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = sub_1A45A13B4();
  v19 = v76;
  sub_1A4691D28();
  if (v19)
    goto LABEL_17;
  v60 = v18;
  v61 = v16;
  v76 = v14;
  v20 = v11;
  v85 = 0;
  v21 = v73;
  v22 = v74;
  v24 = sub_1A4691788();
  v25 = v13;
  if (v24 != 0xD000000000000017 || v23 != 0x80000001A46C14E0)
  {
    v26 = v23;
    if ((sub_1A4691A40() & 1) == 0)
    {
      if (v24 == 0xD000000000000019 && v26 == 0x80000001A46C14C0 || (sub_1A4691A40() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v28 = v20;
        v29 = v71;
        v82 = 2;
        sub_1A4436344(&qword_1ED243F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
        sub_1A46917C4();
        v81 = 3;
        v30 = sub_1A46917AC();
        v80 = 4;
        sub_1A46917A0();
        v54 = v29;
        v55 = v67;
        sub_1A4690060();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v25, v21);
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v35 = (uint64_t)v61;
        v57 = (char *)v61 + *(int *)(v56 + 48);
        v37 = (char *)v61 + *(int *)(v56 + 64);
        *v61 = v30;
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v57, v69, v22);
        v39 = v55;
        goto LABEL_13;
      }
      if (v24 == 0xD00000000000001BLL && v26 == 0x80000001A46C14A0)
      {
        v31 = v21;
        swift_bridgeObjectRelease();
LABEL_15:
        v84 = 3;
        v44 = sub_1A46917AC();
        v83 = 4;
        sub_1A46917A0();
        v58 = v67;
        sub_1A4690060();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v31);
        v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8);
        v39 = v58;
        v35 = (uint64_t)v61;
        v37 = (char *)v61 + *(int *)(v59 + 48);
        *v61 = v44;
        goto LABEL_13;
      }
      v31 = v21;
      v43 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      if ((v43 & 1) != 0)
        goto LABEL_15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E4E0);
      v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_1A4695C10;
      v46 = v60;
      *(_QWORD *)(v45 + 56) = &_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysON;
      *(_QWORD *)(v45 + 64) = v46;
      *(_BYTE *)(v45 + 32) = 0;
      v47 = v62;
      sub_1A46914A0();
      v48 = sub_1A46914B8();
      swift_allocError();
      v50 = v49;
      v52 = v63;
      v51 = v64;
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v49, v47, v64);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v48 - 8) + 104))(v50, *MEMORY[0x1E0DEC458], v48);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v47, v51);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v31);
LABEL_17:
      v42 = (uint64_t)v75;
      return __swift_destroy_boxed_opaque_existential_1(v42);
    }
  }
  swift_bridgeObjectRelease();
  v79 = 1;
  sub_1A4436344(&qword_1ED243F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  sub_1A46917C4();
  v78 = 2;
  v27 = v70;
  sub_1A46917C4();
  v77 = 4;
  sub_1A46917A0();
  v32 = v27;
  v33 = v67;
  sub_1A4690060();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v21);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
  v35 = (uint64_t)v61;
  v36 = (char *)v61 + *(int *)(v34 + 48);
  v37 = (char *)v61 + *(int *)(v34 + 64);
  v38 = *(void (**)(uint64_t *, char *, uint64_t))(v71 + 32);
  v38(v61, v72, v22);
  v38((uint64_t *)v36, v32, v22);
  v39 = v33;
LABEL_13:
  v40 = (uint64_t)v75;
  v41 = v65;
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v37, v39, v66);
  swift_storeEnumTagMultiPayload();
  sub_1A45A07C4(v35, v41);
  v42 = v40;
  return __swift_destroy_boxed_opaque_existential_1(v42);
}

uint64_t sub_1A45A0718@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.GroceryAutoCategorizationMessage.init(from:)(a1, a2);
}

uint64_t sub_1A45A072C(_QWORD *a1)
{
  return REMRemindersListDataView.GroceryAutoCategorizationMessage.encode(to:)(a1);
}

uint64_t sub_1A45A0744(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A45A0788(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A45A07C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A45A0808(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EC80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A45A0848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A45A0890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s19ReminderKitInternal24REMRemindersListDataViewO32GroceryAutoCategorizationMessageO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char **v55;
  uint64_t *v56;
  int EnumCaseMultiPayload;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  int v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char **v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  char *v86;
  char *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  int v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  char *v107;
  uint64_t v108;
  char *v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, char **, uint64_t);
  char *v114;
  char **v115;
  uint64_t v116;
  char *v117;
  void (*v118)(char *, char *, uint64_t);
  char *v119;
  uint64_t v120;
  char *v121;
  void (*v122)(char *, char *, uint64_t);
  char *v123;
  char *v124;
  char v125;
  char *v126;
  void (*v127)(char *, uint64_t);
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  uint64_t v134;
  void (*v135)(char *, uint64_t);
  char *v136;
  uint64_t v137;
  _BOOL8 v138;
  char *v140;
  uint64_t v141;
  char *v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *, char *, uint64_t);
  char *v148;
  char *v149;
  double v150;
  char *v151;
  char *v152;
  void (*v153)(char *, uint64_t);
  uint64_t v154;
  _QWORD *v155;
  void (*v156)(char *, char *, uint64_t);
  uint64_t v157;
  double v158;
  char *v159;
  void (*v160)(char *, uint64_t);
  _QWORD *v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  char *v164;
  double v165;
  void (*v166)(char *, uint64_t);
  void (*v167)(char *, uint64_t);
  char *v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;

  v186 = (char *)a2;
  v188 = sub_1A46900B4();
  v190 = *(_QWORD **)(v188 - 8);
  v3 = MEMORY[0x1E0C80A78](v188);
  v174 = (char *)&v170 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v173 = (char *)&v170 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v172 = (char *)&v170 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v171 = (char *)&v170 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v179 = (char *)&v170 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v178 = (char *)&v170 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v184 = (char *)&v170 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v185 = (char *)&v170 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v177 = (char *)&v170 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v183 = (char *)&v170 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v182 = (char *)&v170 - v24;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v170 - v25;
  v187 = sub_1A46900FC();
  v189 = *(_QWORD *)(v187 - 8);
  v27 = MEMORY[0x1E0C80A78](v187);
  v176 = (char *)&v170 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v175 = (char *)&v170 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v180 = (char *)&v170 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v181 = (char *)&v170 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v170 - v36;
  v38 = MEMORY[0x1E0C80A78](v35);
  v40 = (char *)&v170 - v39;
  v41 = MEMORY[0x1E0C80A78](v38);
  v43 = (char *)&v170 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v46 = (char *)&v170 - v45;
  v47 = MEMORY[0x1E0C80A78](v44);
  v49 = (char *)&v170 - v48;
  MEMORY[0x1E0C80A78](v47);
  v51 = (char *)&v170 - v50;
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C40);
  v53 = MEMORY[0x1E0C80A78](v52);
  v55 = (char **)((char *)&v170 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  v56 = (uint64_t *)((char *)v55 + *(int *)(v53 + 48));
  sub_1A45A0744(a1, (uint64_t)v55);
  sub_1A45A0744((uint64_t)v186, (uint64_t)v56);
  type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v59 = *(int *)(v58 + 48);
      v60 = (char *)v55 + v59;
      v61 = *(int *)(v58 + 64);
      v62 = (char *)v55 + v61;
      v63 = swift_getEnumCaseMultiPayload();
      if (v63)
      {
        if (v63 == 1)
        {
          v64 = *v55;
          v186 = (char *)*v56;
          v65 = (char *)v56 + v59;
          v66 = (char *)v56 + v61;
          v67 = v189;
          v68 = *(void (**)(char *, char *, uint64_t))(v189 + 32);
          v69 = v181;
          v70 = v187;
          v68(v181, v60, v187);
          v71 = (void (*)(char *, char *, uint64_t))v190[4];
          v72 = v62;
          v73 = v188;
          v71(v185, v72, v188);
          v74 = v180;
          v68(v180, v65, v70);
          v71(v184, v66, v73);
          v75 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
          v76 = v175;
          v75(v175, v69, v70);
          v77 = v176;
          v75(v176, v74, v70);
          if (v64 == v186)
            v78 = sub_1A46900E4();
          else
            v78 = 0;
          v152 = v178;
          v151 = v179;
          v153 = *(void (**)(char *, uint64_t))(v189 + 8);
          v154 = v187;
          v153(v77, v187);
          v153(v76, v154);
          v155 = v190;
          v156 = (void (*)(char *, char *, uint64_t))v190[2];
          v157 = v188;
          v156(v152, v185, v188);
          v156(v151, v184, v157);
          if ((v78 & 1) != 0)
          {
            sub_1A469009C();
            v138 = fabs(v158) < 0.001;
          }
          else
          {
            v138 = 0;
          }
          v167 = (void (*)(char *, uint64_t))v155[1];
          v167(v151, v157);
          v167(v152, v157);
          v167(v184, v157);
          v153(v180, v154);
          v167(v185, v157);
          v153(v181, v154);
          return v138;
        }
        v109 = (char *)v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
        v110 = (void (*)(char *, uint64_t))v190[1];
        v111 = v188;
        v110(v109, v188);
        v110((char *)v55 + v61, v111);
        (*(void (**)(char *, uint64_t))(v189 + 8))(v60, v187);
      }
      else
      {
        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
        v103 = (char *)v56 + *(int *)(v102 + 48);
        v104 = (void (*)(char *, uint64_t))v190[1];
        v105 = v188;
        v104((char *)v56 + *(int *)(v102 + 64), v188);
        v106 = *(void (**)(char *, uint64_t))(v189 + 8);
        v107 = v103;
        v108 = v187;
        v106(v107, v187);
        v106((char *)v56, v108);
        v104((char *)v55 + v61, v105);
        v106(v60, v108);
      }
      return 0;
    }
    v93 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
    v94 = (char *)v55 + v93;
    v95 = swift_getEnumCaseMultiPayload();
    if (!v95)
    {
      v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
      v132 = (char *)v56 + *(int *)(v131 + 48);
      v133 = (void (*)(char *, uint64_t))v190[1];
      v134 = v188;
      v133((char *)v56 + *(int *)(v131 + 64), v188);
      v135 = *(void (**)(char *, uint64_t))(v189 + 8);
      v136 = v132;
      v137 = v187;
      v135(v136, v187);
      v135((char *)v56, v137);
      v133(v94, v134);
      return 0;
    }
    v96 = v190;
    if (v95 == 1)
    {
      v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v98 = (char *)v56 + *(int *)(v97 + 48);
      v99 = (char *)v56 + *(int *)(v97 + 64);
      v100 = (void (*)(char *, uint64_t))v96[1];
      v101 = v188;
      v100(v99, v188);
      (*(void (**)(char *, uint64_t))(v189 + 8))(v98, v187);
      v100(v94, v101);
      return 0;
    }
    v140 = *v55;
    v141 = *v56;
    v142 = (char *)v56 + v93;
    v143 = (void (*)(char *, char *, uint64_t))v190[4];
    v144 = v171;
    v145 = v188;
    v143(v171, v94, v188);
    v146 = v172;
    v143(v172, v142, v145);
    v147 = (void (*)(char *, char *, uint64_t))v96[2];
    v148 = v173;
    v147(v173, v144, v145);
    v149 = v174;
    v147(v174, v146, v145);
    if (v140 == (char *)v141)
    {
      sub_1A469009C();
      v138 = fabs(v150) < 0.001;
    }
    else
    {
      v138 = 0;
    }
    v166 = (void (*)(char *, uint64_t))v96[1];
    v166(v149, v145);
    v166(v148, v145);
    v166(v146, v145);
    v166(v144, v145);
  }
  else
  {
    v178 = v40;
    v179 = v37;
    v180 = v51;
    v181 = v43;
    v184 = v49;
    v185 = v46;
    v79 = v183;
    v186 = v26;
    v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
    v81 = *(int *)(v80 + 48);
    v82 = (char **)((char *)v55 + v81);
    v83 = *(int *)(v80 + 64);
    v84 = swift_getEnumCaseMultiPayload();
    if (v84)
    {
      if (v84 == 1)
      {
        v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v86 = (char *)v56 + *(int *)(v85 + 48);
        v87 = (char *)v56 + *(int *)(v85 + 64);
        v88 = (void (*)(char *, uint64_t))v190[1];
        v89 = v188;
        v88(v87, v188);
        v90 = *(void (**)(char *, uint64_t))(v189 + 8);
        v91 = v86;
        v92 = v187;
        v90(v91, v187);
        v88((char *)v55 + v83, v89);
        v90((char *)v55 + v81, v92);
        v90((char *)v55, v92);
      }
      else
      {
        v126 = (char *)v56 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
        v127 = (void (*)(char *, uint64_t))v190[1];
        v128 = v188;
        v127(v126, v188);
        v127((char *)v55 + v83, v128);
        v129 = *(void (**)(char *, uint64_t))(v189 + 8);
        v130 = v187;
        v129((char *)v55 + v81, v187);
        v129((char *)v55, v130);
      }
      return 0;
    }
    v175 = (char *)v56 + v81;
    v176 = (char *)v56 + v83;
    v112 = v189;
    v113 = *(void (**)(char *, char **, uint64_t))(v189 + 32);
    v114 = (char *)v55 + v83;
    v115 = v55;
    v116 = v187;
    v113(v180, v115, v187);
    v113(v184, (char **)v56, v116);
    v117 = v185;
    v113(v185, v82, v116);
    v118 = (void (*)(char *, char *, uint64_t))v190[4];
    v119 = v114;
    v120 = v188;
    v118(v186, v119, v188);
    v121 = v181;
    v113(v181, (char **)v175, v116);
    v118(v182, v176, v120);
    LOBYTE(v118) = sub_1A46900E4();
    v122 = *(void (**)(char *, char *, uint64_t))(v112 + 16);
    v123 = v178;
    v122(v178, v117, v116);
    v124 = v179;
    v122(v179, v121, v116);
    if ((v118 & 1) != 0)
      v125 = sub_1A46900E4();
    else
      v125 = 0;
    v159 = v79;
    v160 = *(void (**)(char *, uint64_t))(v189 + 8);
    v160(v124, v116);
    v160(v123, v116);
    v161 = v190;
    v162 = (void (*)(char *, char *, uint64_t))v190[2];
    v162(v79, v186, v120);
    v163 = v177;
    v164 = v182;
    v162(v177, v182, v120);
    if ((v125 & 1) != 0)
    {
      sub_1A469009C();
      v138 = fabs(v165) < 0.001;
    }
    else
    {
      v138 = 0;
    }
    v168 = v185;
    v169 = (void (*)(char *, uint64_t))v161[1];
    v169(v163, v120);
    v169(v159, v120);
    v169(v164, v120);
    v160(v181, v116);
    v169(v186, v120);
    v160(v168, v116);
    v160(v184, v116);
    v160(v180, v116);
  }
  return v138;
}

unint64_t sub_1A45A13B4()
{
  unint64_t result;

  result = qword_1EE721C18;
  if (!qword_1EE721C18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A6204, &_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE721C18);
  }
  return result;
}

uint64_t *_s14descr1E4C23B79V32GroceryAutoCategorizationMessageOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v8 = *(int *)(v7 + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1A46900FC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        v12 = *(int *)(v7 + 64);
      }
      else
      {
        v21 = sub_1A46900FC();
        v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        v22(a1, a2, v21);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
        v22((uint64_t *)((char *)a1 + *(int *)(v23 + 48)), (uint64_t *)((char *)a2 + *(int *)(v23 + 48)), v21);
        v12 = *(int *)(v23 + 64);
      }
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14descr1E4C23B79V32GroceryAutoCategorizationMessageOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
  }
  else if ((_DWORD)result == 1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
    v8 = a1 + *(int *)(v7 + 48);
    v9 = sub_1A46900FC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v6 = *(int *)(v7 + 64);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1A46900FC();
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
    v4(a1 + *(int *)(v5 + 48), v3);
    v6 = *(int *)(v5 + 64);
  }
  v10 = a1 + v6;
  v11 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *_s14descr1E4C23B79V32GroceryAutoCategorizationMessageOwcp(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1A46900B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A46900FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      v10 = *(int *)(v5 + 64);
    }
    else
    {
      v18 = sub_1A46900FC();
      v19 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(a1, a2, v18);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
      v19((_QWORD *)((char *)a1 + *(int *)(v20 + 48)), (_QWORD *)((char *)a2 + *(int *)(v20 + 48)), v18);
      v10 = *(int *)(v20 + 64);
    }
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1A46900B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s14descr1E4C23B79V32GroceryAutoCategorizationMessageOwca(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v20;

  if (a1 != a2)
  {
    sub_1A45A0788((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v6 = *(int *)(v5 + 48);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1A46900FC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
        v10 = *(int *)(v5 + 64);
      }
      else
      {
        v18 = sub_1A46900FC();
        v19 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
        v19((_QWORD *)((char *)a1 + *(int *)(v20 + 48)), (_QWORD *)((char *)a2 + *(int *)(v20 + 48)), v18);
        v10 = *(int *)(v20 + 64);
      }
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *_s14descr1E4C23B79V32GroceryAutoCategorizationMessageOwtk(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1A46900B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A46900FC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = *(int *)(v5 + 64);
    }
    else
    {
      v18 = sub_1A46900FC();
      v19 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
      v19((_QWORD *)((char *)a1 + *(int *)(v20 + 48)), (_QWORD *)((char *)a2 + *(int *)(v20 + 48)), v18);
      v10 = *(int *)(v20 + 64);
    }
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_1A46900B4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s14descr1E4C23B79V32GroceryAutoCategorizationMessageOwta(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v20;

  if (a1 != a2)
  {
    sub_1A45A0788((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BE8) + 48);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *a1 = *a2;
        v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721BF8);
        v6 = *(int *)(v5 + 48);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1A46900FC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        v10 = *(int *)(v5 + 64);
      }
      else
      {
        v18 = sub_1A46900FC();
        v19 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
        v19(a1, a2, v18);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721C00);
        v19((_QWORD *)((char *)a1 + *(int *)(v20 + 48)), (_QWORD *)((char *)a2 + *(int *)(v20 + 48)), v18);
        v10 = *(int *)(v20 + 64);
      }
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1A45A1D88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;
  char v6;
  char v7;
  char *v8;
  char *v9;
  char *v10;

  v0 = sub_1A46900FC();
  if (v1 <= 0x3F)
  {
    v2 = sub_1A46900B4();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      v8 = &v7;
      swift_getTupleTypeLayout3();
      v9 = &v6;
      swift_getTupleTypeLayout2();
      v10 = &v5;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t _s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A45A1ECC + 4 * byte_1A46A605A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A45A1F00 + 4 * byte_1A46A6055[v4]))();
}

uint64_t sub_1A45A1F00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45A1F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45A1F10);
  return result;
}

uint64_t sub_1A45A1F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45A1F24);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A45A1F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45A1F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysOMa()
{
  return &_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysON;
}

unint64_t sub_1A45A1F50()
{
  unint64_t result;

  result = qword_1EE721C28;
  if (!qword_1EE721C28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A61DC, &_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE721C28);
  }
  return result;
}

unint64_t sub_1A45A1F98()
{
  unint64_t result;

  result = qword_1EE721C30;
  if (!qword_1EE721C30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A614C, &_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE721C30);
  }
  return result;
}

unint64_t sub_1A45A1FE0()
{
  unint64_t result;

  result = qword_1EE721C38;
  if (!qword_1EE721C38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A6174, &_s14descr1E4C23B79V32GroceryAutoCategorizationMessageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EE721C38);
  }
  return result;
}

uint64_t sub_1A45A2024(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A46C1530 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7441646575657571 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t REMSmartListCustomContext.filter.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  id v6;
  id v7;
  BOOL v9;
  BOOL v11;

  v1 = objc_msgSend(v0, sel_smartlist);
  v2 = objc_msgSend(v1, sel_filterData);

  if (!v2)
    return 0;
  v3 = sub_1A468FFC4();
  v5 = v4;

  v6 = objc_msgSend(v0, sel_smartlist);
  v7 = objc_msgSend(v6, sel_minimumSupportedVersion);

  v9 = v7 != (id)*MEMORY[0x1E0D84B50] && v7 == (id)*MEMORY[0x1E0D84B40];
  v11 = v9;
  return sub_1A452280C(v3, v5, (unsigned __int8 *)&v11);
}

_QWORD *sub_1A45A2368()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[32];
  uint64_t v16;
  uint64_t v17;
  _OWORD v18[2];
  __int128 v19;
  uint64_t v20;

  v1 = sub_1A468FE74();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0;
  sub_1A4690FCC();

  sub_1A45A3984();
  sub_1A46911B8();
  v14 = v2;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (v20)
  {
    sub_1A444A940(&v19, v18);
    sub_1A44311F0((uint64_t)v18, (uint64_t)v15);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v7 = v16;
      v8 = v17;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      if (v8)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1A4438920(0, v6[2] + 1, 1, v6);
        v10 = v6[2];
        v9 = v6[3];
        if (v10 >= v9 >> 1)
          v6 = sub_1A4438920((_QWORD *)(v9 > 1), v10 + 1, 1, v6);
        v6[2] = v10 + 1;
        v11 = &v6[2 * v10];
        v11[4] = v7;
        v11[5] = v8;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    sub_1A46911B8();
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v4, v1);
  return v6;
}

uint64_t sub_1A45A2528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721C48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721C48);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMAccount.isConsideredEmpty()()
{
  return sub_1A45A2660((SEL *)&selRef_isConsideredEmptyWithResultPtr_withError_) & 1;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMAccount.mcisManaged()()
{
  return sub_1A45A2660((SEL *)&selRef_MCIsManagedWithResultPtr_error_) & 1;
}

uint64_t sub_1A45A2660(SEL *a1)
{
  void *v1;
  id v2;
  id v3;
  id v5;
  char v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v6 = 0;
  v5 = 0;
  if ((objc_msgSend(v1, *a1, &v6, &v5) & 1) != 0)
  {
    LOBYTE(v2) = v6;
    v3 = v5;
  }
  else
  {
    v2 = v5;
    sub_1A468FE68();

    swift_willThrow();
  }
  return v2 & 1;
}

_QWORD *REMAccount.mergeableOrderingNodeIdentifiers()()
{
  void *v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend(v0, sel_listIDsOrdering);
  v2 = sub_1A45A2368();

  return v2;
}

uint64_t REMAccount.mergeableOrderingNodeObjectIDs(entityName:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[6];

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = MEMORY[0x1E0DEE9D8];
  v6 = objc_msgSend(v2, sel_listIDsMergeableOrdering);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v5;
  v7[3] = a1;
  v7[4] = a2;
  v11[4] = sub_1A45A2C2C;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A45A2C38;
  v11[3] = &block_descriptor_10;
  v8 = _Block_copy(v11);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v6, sel_enumerateObjectsUsingBlock_, v8);
  _Block_release(v8);

  swift_beginAccess();
  v9 = *(_QWORD *)(v5 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v9;
}

uint64_t sub_1A45A289C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A45A28C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  id v19;
  _QWORD *v20;
  id v21;
  void *v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A46900C0();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A4473730((uint64_t)v8);
    if (qword_1EE71C158 != -1)
      swift_once();
    v13 = sub_1A4690318();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EE721C48);
    v14 = a1;
    v15 = sub_1A469030C();
    v16 = sub_1A4690FFC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138543362;
      v25[1] = v14;
      v19 = v14;
      sub_1A46911D0();
      *v18 = a1;

      _os_log_impl(&dword_1A442D000, v15, v16, "Invalid UUID found in listIDsMergeableOrdering when converting to REMObjectID {uuidString: %{public}@}", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v18, -1, -1);
      MEMORY[0x1A85A0114](v17, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v20 = (_QWORD *)(a4 + 16);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v21 = objc_allocWithZone(MEMORY[0x1E0D845B0]);
    swift_bridgeObjectRetain();
    v22 = (void *)sub_1A46900D8();
    v23 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_initWithUUID_entityName_, v22, v23);

    v24 = swift_beginAccess();
    MEMORY[0x1A859E3E0](v24);
    if (*(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1A4690BDC();
    sub_1A4690C18();
    sub_1A4690BB8();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1A45A2C00()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A45A2C2C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A45A28C0(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1A45A2C38(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t REMAccountType.asInt16.getter(uint64_t a1)
{
  uint64_t v1;

  v1 = 0x7FFFLL;
  if (a1 < 0x7FFF)
    v1 = a1;
  if (v1 <= -32768)
    return -32768;
  else
    return v1;
}

uint64_t REMAccountType.loggableDescription.getter(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84460]), sel_initWithType_, a1);
  v2 = objc_msgSend(v1, sel_internalDescription);

  v3 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  return v3;
}

BOOL static REMAccountTypeHost.REMAccountTypeSwitchError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMAccountTypeHost.REMAccountTypeSwitchError.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMAccountTypeHost.REMAccountTypeSwitchError.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

id REMAccountTypeHost.switchByAccountType<A>(primaryCloudKitBlock:nonPrimaryCloudKitBlock:calDavBlock:exchangeBlock:localBlock:localInternalBlock:anyCloudKitBlock:anyCloudAccountBlock:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, void (*a7)(uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, void (*a10)(void), uint64_t a11, void (*a12)(void), uint64_t a13, void (*a14)(uint64_t), uint64_t a15, void (*a16)(uint64_t), uint64_t a17, uint64_t a18)
{
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  id result;
  void (*v50)(uint64_t);
  _BYTE *v51;
  _BYTE *v52;
  void (*v53)(void);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t);
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  void (*v86)(uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  void (*v91)(uint64_t);
  void (*v92)(uint64_t);
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t);
  char *v96;
  uint64_t v97;
  char *v98;
  void (*v99)(uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  v93 = a6;
  v94 = a8;
  v91 = a5;
  v92 = a7;
  v97 = a4;
  v95 = a3;
  v86 = a1;
  v87 = a2;
  v102 = sub_1A46911A0();
  v103 = *(_QWORD *)(v102 - 8);
  v20 = MEMORY[0x1E0C80A78](v102);
  v99 = (void (*)(uint64_t))((char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = MEMORY[0x1E0C80A78](v20);
  v98 = (char *)&v84 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v90 = (char *)&v84 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v84 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v89 = (char *)&v84 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v84 - v32;
  v34 = MEMORY[0x1E0C80A78](v31);
  v96 = (char *)&v84 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v88 = (char *)&v84 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v84 - v39;
  v41 = MEMORY[0x1E0C80A78](v38);
  v85 = (char *)&v84 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v45 = (char *)&v84 - v44;
  MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v84 - v46;
  v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a18 - 8) + 56);
  v101 = a9;
  v48(a9, 1, 1, a18);
  result = objc_msgSend(v18, sel__accountType);
  v50 = a14;
  switch((unint64_t)result)
  {
    case 0uLL:
      sub_1A45A35A4();
      swift_allocError();
      *v51 = 0;
      goto LABEL_4;
    case 1uLL:
      v53 = a10;
      if (a10)
      {
        v54 = v98;
        goto LABEL_19;
      }
      v60 = v103;
      v59 = v101;
      v58 = v102;
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
      v54 = v98;
      goto LABEL_33;
    case 2uLL:
      if (a16)
      {
        v99 = a14;
        v55 = swift_retain();
        v56 = v100;
        a16(v55);
        v57 = v56;
        v59 = v101;
        v58 = v102;
        v60 = v103;
        if (v56)
          goto LABEL_23;
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
        sub_1A443A6F8((uint64_t)a16);
        result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v47, v58);
        v50 = v99;
        if (!v99)
          goto LABEL_47;
      }
      else
      {
        v57 = v100;
        v59 = v101;
        v58 = v102;
        v60 = v103;
        if (!a14)
          goto LABEL_47;
      }
      v71 = v50;
      v72 = swift_retain();
      v71(v72);
      if (v57)
        goto LABEL_28;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
      sub_1A443A6F8((uint64_t)v71);
      result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v45, v58);
LABEL_47:
      v77 = v86;
      v54 = v85;
      if (v86)
        goto LABEL_48;
      return result;
    case 3uLL:
      if (a16)
      {
        v61 = swift_retain();
        v62 = v100;
        a16(v61);
        v57 = v62;
        v59 = v101;
        v60 = v103;
        if (v62)
          goto LABEL_16;
        v75 = v102;
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
        sub_1A443A6F8((uint64_t)a16);
        v76 = v33;
        v58 = v75;
        result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v76, v75);
      }
      else
      {
        v57 = v100;
        v59 = v101;
        v58 = v102;
        v60 = v103;
      }
      v77 = v91;
      v54 = v89;
      if (!v91)
        return result;
LABEL_48:
      v82 = swift_retain();
      v77(v82);
      if (v57)
      {
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
        goto LABEL_50;
      }
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
      goto LABEL_53;
    case 4uLL:
      if (a16)
      {
        v63 = swift_retain();
        v64 = v100;
        a16(v63);
        v65 = v64;
        v58 = v102;
        v60 = v103;
        if (v64)
        {
LABEL_16:
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v101, v102);
          v66 = (uint64_t)a16;
          return (id)sub_1A443A6F8(v66);
        }
        v78 = v101;
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
        sub_1A443A6F8((uint64_t)a16);
        result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v78, v28, v58);
      }
      else
      {
        v65 = v100;
        v58 = v102;
        v60 = v103;
      }
      v77 = v92;
      v54 = v90;
      if (!v92)
        return result;
      v79 = swift_retain();
      v77(v79);
      if (v65)
      {
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v101, v58);
LABEL_50:
        v66 = (uint64_t)v77;
        return (id)sub_1A443A6F8(v66);
      }
      v59 = v101;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v101, v58);
LABEL_53:
      sub_1A443A6F8((uint64_t)v77);
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v54, v58);
    case 5uLL:
      v53 = a12;
      if (a12)
      {
        v54 = (char *)v99;
LABEL_19:
        v67 = v100;
        v53();
        v59 = v101;
        v58 = v102;
        v60 = v103;
        if (v67)
          return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
      }
      else
      {
        v60 = v103;
        v59 = v101;
        v58 = v102;
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
        v54 = (char *)v99;
LABEL_33:
        v48((uint64_t)v54, 1, 1, a18);
      }
      return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v54, v58);
    case 6uLL:
      if (a16)
      {
        v68 = swift_retain();
        v69 = v100;
        a16(v68);
        v70 = v69;
        v59 = v101;
        v58 = v102;
        v60 = v103;
        if (v69)
        {
LABEL_23:
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
          v66 = (uint64_t)a16;
          return (id)sub_1A443A6F8(v66);
        }
        (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
        sub_1A443A6F8((uint64_t)a16);
        result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v40, v58);
        v73 = v96;
        v71 = v95;
        v50 = a14;
        v74 = v88;
        if (!a14)
          goto LABEL_55;
      }
      else
      {
        v70 = v100;
        v59 = v101;
        v58 = v102;
        v60 = v103;
        v73 = v96;
        v71 = v95;
        v74 = v88;
        if (!a14)
          goto LABEL_55;
      }
      v80 = v50;
      v81 = swift_retain();
      v80(v81);
      if (v70)
      {
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
        return (id)sub_1A443A6F8((uint64_t)v80);
      }
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
      sub_1A443A6F8((uint64_t)v80);
      result = (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v74, v58);
      v73 = v96;
LABEL_55:
      if (v71)
      {
        v83 = swift_retain();
        v71(v83);
        if (v70)
        {
LABEL_28:
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
          v66 = (uint64_t)v71;
          return (id)sub_1A443A6F8(v66);
        }
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v58);
        sub_1A443A6F8((uint64_t)v71);
        v54 = v73;
        return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v60 + 32))(v59, v54, v58);
      }
      return result;
    default:
      sub_1A45A35A4();
      swift_allocError();
      *v52 = 1;
LABEL_4:
      swift_willThrow();
      return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v103 + 8))(v101, v102);
  }
}

unint64_t sub_1A45A35A4()
{
  unint64_t result;

  result = qword_1EE721C60;
  if (!qword_1EE721C60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMAccountTypeHost.REMAccountTypeSwitchError, &type metadata for REMAccountTypeHost.REMAccountTypeSwitchError);
    atomic_store(result, (unint64_t *)&qword_1EE721C60);
  }
  return result;
}

void static REMAccountTypeHost.enumerateAccountTypeHostsAndAccountCapabilities(_:)(void (*a1)(id, id))
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;

  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = 1; i != 7; ++i)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v3 = sub_1A4439734(0, v3[2] + 1, 1, v3);
    v6 = v3[2];
    v5 = v3[3];
    if (v6 >= v5 >> 1)
      v3 = sub_1A4439734((_QWORD *)(v5 > 1), v6 + 1, 1, v3);
    v3[2] = v6 + 1;
    v3[v6 + 4] = i;
  }
  v7 = v3[2];
  if (v7)
  {
    v8 = 0;
    while (1)
    {
      v9 = v3[v8 + 4];
      v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84460]), sel_initWithType_, v9);
      v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D84448]), sel_initWithAccountType_, v9);
      a1(v10, v11);
      if (v1)
        break;
      ++v8;

      if (v7 == v8)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();

  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_1A45A3754@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = _sSo14REMAccountTypeV19ReminderKitInternalE8allCasesSayABGvgZ_0();
  *a1 = result;
  return result;
}

_QWORD *_sSo14REMAccountTypeV19ReminderKitInternalE8allCasesSayABGvgZ_0()
{
  _QWORD *v0;
  uint64_t i;
  unint64_t v2;
  unint64_t v3;

  v0 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  for (i = 1; i != 7; ++i)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v0 = sub_1A4439734(0, v0[2] + 1, 1, v0);
    v3 = v0[2];
    v2 = v0[3];
    if (v3 >= v2 >> 1)
      v0 = sub_1A4439734((_QWORD *)(v2 > 1), v3 + 1, 1, v0);
    v0[2] = v3 + 1;
    v0[v3 + 4] = i;
  }
  return v0;
}

unint64_t sub_1A45A3824()
{
  unint64_t result;

  result = qword_1EE721C68;
  if (!qword_1EE721C68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMAccountTypeHost.REMAccountTypeSwitchError, &type metadata for REMAccountTypeHost.REMAccountTypeSwitchError);
    atomic_store(result, (unint64_t *)&qword_1EE721C68);
  }
  return result;
}

unint64_t sub_1A45A386C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE721C70;
  if (!qword_1EE721C70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721C78);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE721C70);
  }
  return result;
}

uint64_t _s25REMAccountTypeSwitchErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45A3904 + 4 * byte_1A46A626D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A45A3938 + 4 * byte_1A46A6268[v4]))();
}

uint64_t sub_1A45A3938(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45A3940(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45A3948);
  return result;
}

uint64_t sub_1A45A3954(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45A395CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45A3960(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45A3968(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMAccountTypeHost.REMAccountTypeSwitchError()
{
  return &type metadata for REMAccountTypeHost.REMAccountTypeSwitchError;
}

unint64_t sub_1A45A3984()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71FFA0;
  if (!qword_1EE71FFA0)
  {
    v1 = sub_1A468FE74();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71FFA0);
  }
  return result;
}

uint64_t sub_1A45A39CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED243138);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED243138);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

double Date.rem_elapsedInMilliseconds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  uint64_t v7;

  v0 = sub_1A46900B4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46900A8();
  sub_1A4690018();
  v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5 * 1000.0;
}

uint64_t sub_1A45A3AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721C80);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721C80);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMStore.asyncFetch<A>(on:body:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD v10[6];
  uint64_t v11;

  type metadata accessor for Promise(0, a4, a3, a4);
  v10[2] = a4;
  v10[3] = a1;
  v10[4] = a2;
  v10[5] = a3;
  v11 = v4;
  return Promise.__allocating_init(resolver:)((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t), _QWORD *, uint64_t (*)(void *, uint64_t, uint64_t, uint64_t), _QWORD *))sub_1A45A3DF4, (uint64_t)v10);
}

uint64_t sub_1A45A3BF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v29 = a5;
  v25 = a3;
  v15 = sub_1A46905A0();
  v28 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1A46905DC();
  v26 = *(_QWORD *)(v18 - 8);
  v27 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a9;
  v21[3] = a6;
  v21[4] = a7;
  v21[5] = a8;
  v21[6] = a1;
  v21[7] = a2;
  v21[8] = v25;
  v21[9] = a4;
  aBlock[4] = sub_1A45A9E48;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = &block_descriptor_176;
  v22 = _Block_copy(aBlock);
  swift_retain();
  v23 = a8;
  swift_retain();
  swift_retain();
  sub_1A46905C4();
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v20, v17, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v15);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v27);
  return swift_release();
}

uint64_t sub_1A45A3DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1A45A3BF8(a1, a2, a3, a4, *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(void **)(v4 + 48), *(_QWORD *)(v4 + 16));
}

uint64_t sub_1A45A3E20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v16;

  v10 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14(v13);
  a4(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, a8);
}

id REMStore.fetchOrCreateNonCustomSmartList(withType:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *a1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D846A8]), sel_initWithStore_, v1);
  v4 = **((_QWORD **)&unk_1E4C246D0 + v2);
  v9[0] = 0;
  v5 = objc_msgSend(v3, sel_fetchNonCustomSmartListWithSmartListType_createIfNeeded_error_, v4, 1, v9);
  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1A468FE68();

    swift_willThrow();
  }

  return v5;
}

id REMStore.fetchNonCustomSmartList(withType:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *a1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D846A8]), sel_initWithStore_, v1);
  v4 = **((_QWORD **)&unk_1E4C246D0 + v2);
  v9[0] = 0;
  v5 = objc_msgSend(v3, sel_fetchNonCustomSmartListWithSmartListType_createIfNeeded_error_, v4, 0, v9);
  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1A468FE68();

    swift_willThrow();
  }

  return v5;
}

void REMStore.fetchContentAttributes(of:completionHandlerQueue:completion:)(void *a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  id v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t ObjCClassFromMetadata;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  _QWORD *v29;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = objc_msgSend(v5, sel_daemonController);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(a1, sel_objectID);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v12;
    v13[3] = a3;
    v13[4] = a4;
    v13[5] = ObjectType;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a3;
    *(_QWORD *)(v14 + 24) = a4;
    swift_retain_n();
    v15 = v12;
    v16 = (void *)sub_1A469087C();
    v28 = sub_1A45A4460;
    v29 = v13;
    v17 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v25 = 1107296256;
    v26 = sub_1A45A47DC;
    v27 = &block_descriptor_11;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v28 = sub_1A45A9F64;
    v29 = (_QWORD *)v14;
    aBlock = v17;
    v25 = 1107296256;
    v26 = sub_1A45A4824;
    v27 = &block_descriptor_6_0;
    v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v16, v18, v19);
    _Block_release(v19);
    _Block_release(v18);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

  }
  else
  {
    v20 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v22 = (void *)sub_1A469087C();
    v23 = objc_msgSend(v20, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v22);

    a3(v23, 1);
  }
}

void sub_1A45A4378(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  void *v11;
  id v12;
  _QWORD v13[6];

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  v13[4] = sub_1A45A9E00;
  v13[5] = v10;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A45A47D8;
  v13[3] = &block_descriptor_170;
  v11 = _Block_copy(v13);
  v12 = a2;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_fetchContentAttributesOfTemplateWithObjectID_completion_, v12, v11);
  _Block_release(v11);
}

uint64_t sub_1A45A4458()
{
  return objectdestroyTm_1();
}

void sub_1A45A4460(void *a1)
{
  uint64_t v1;

  sub_1A45A4378(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

void sub_1A45A446C(void *a1, id a2, void *a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  if (a2)
  {
    v8 = 1;
    v9 = a2;
  }
  else
  {
    v9 = a1;
    if (a1)
    {
      v10 = a1;
      v8 = 0;
    }
    else
    {
      if (qword_1EE71C168 != -1)
        swift_once();
      v13 = sub_1A4690318();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EE721C80);
      v14 = a3;
      v15 = sub_1A469030C();
      v16 = sub_1A4690FFC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v25 = (_QWORD *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v27 = v26;
        *(_DWORD *)v17 = 136315394;
        v28 = a6;
        swift_getMetatypeMetadata();
        v18 = sub_1A46908E8();
        v28 = sub_1A4431120(v18, v19, &v27);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2112;
        v28 = (uint64_t)v14;
        v20 = v14;
        sub_1A46911D0();
        *v25 = v14;

        _os_log_impl(&dword_1A442D000, v15, v16, "%s: 'templateContentAttributes' and 'error' in completion of '-[REMXPCStorePerformer fetchContentAttributesOfTemplateWithObjectID:completion:]' were both nil {remTemplate.objectID: %@}", (uint8_t *)v17, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v25, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v26, -1, -1);
        MEMORY[0x1A85A0114](v17, -1, -1);

      }
      else
      {

      }
      v21 = (void *)objc_opt_self();
      v28 = 0;
      v29 = 0xE000000000000000;
      sub_1A4691410();
      sub_1A4690984();
      v22 = objc_msgSend(v14, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v23 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v21, sel_internalErrorWithDebugDescription_, v23);

      v8 = 1;
    }
  }
  v24 = a2;
  a4(v9, v8);
  sub_1A456F210(v9);
}

uint64_t sub_1A45A47DC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1A45A4824(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void REMStore.createOrUpdatePublicLink(for:with:completionHandlerQueue:completion:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t ObjectType;
  void *v36;
  uint64_t v37;
  uint64_t aBlock;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  _QWORD *v43;

  v36 = a2;
  ObjectType = swift_getObjectType();
  v10 = sub_1A46905A0();
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A46905DC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v5, sel_daemonController);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(a1, sel_objectID);
    v20 = (_QWORD *)swift_allocObject();
    v21 = ObjectType;
    v22 = v36;
    v20[2] = v19;
    v20[3] = v22;
    v20[4] = a3;
    v20[5] = a4;
    v20[6] = a5;
    v20[7] = v21;
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a3;
    v23[3] = a4;
    v23[4] = a5;
    v24 = a3;
    swift_retain_n();
    v25 = v24;
    v26 = v19;
    v27 = v22;
    v28 = (void *)sub_1A469087C();
    v42 = sub_1A45A4D20;
    v43 = v20;
    v29 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v39 = 1107296256;
    v40 = sub_1A45A47DC;
    v41 = &block_descriptor_21_1;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v42 = sub_1A45A5224;
    v43 = v23;
    aBlock = v29;
    v39 = 1107296256;
    v40 = sub_1A45A4824;
    v41 = &block_descriptor_24_0;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v18, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v28, v30, v31);
    _Block_release(v31);
    _Block_release(v30);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

  }
  else
  {
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = a4;
    *(_QWORD *)(v32 + 24) = a5;
    v42 = sub_1A45A4C08;
    v43 = (_QWORD *)v32;
    aBlock = MEMORY[0x1E0C809B0];
    v39 = 1107296256;
    v40 = sub_1A44AE6A0;
    v41 = &block_descriptor_12;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A46905C4();
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1A44A6088();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
    sub_1A44A60D0();
    sub_1A46912A8();
    MEMORY[0x1A859E8FC](0, v16, v12, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_release();
  }
}

void sub_1A45A4C08()
{
  uint64_t v0;

  sub_1A45A55EC(*(void (**)(id, uint64_t))(v0 + 16));
}

void sub_1A45A4C20(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[6];

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a7;
  v18[4] = sub_1A45A9D64;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1A45A47D8;
  v18[3] = &block_descriptor_158;
  v15 = _Block_copy(v18);
  v16 = a2;
  v17 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createOrUpdatePublicLinkForTemplateWithObjectID_configuration_completion_, v16, a3, v15);
  _Block_release(v15);
}

uint64_t sub_1A45A4D20(uint64_t a1)
{
  return sub_1A45A57F4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45A4C20);
}

uint64_t sub_1A45A4D2C(id a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  NSObject *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock;
  unint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;

  v50 = a4;
  v13 = sub_1A46905A0();
  v51 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1A46905DC();
  v16 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v19 = 1;
    a1 = a2;
  }
  else if (a1)
  {
    v20 = a1;
    v19 = 0;
  }
  else
  {
    if (qword_1EE71C168 != -1)
      swift_once();
    v21 = sub_1A4690318();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE721C80);
    v48 = a3;
    v22 = sub_1A469030C();
    v23 = sub_1A4690FFC();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v45 = v24;
      v26 = v25;
      v44 = (_QWORD *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v52 = v46;
      aBlock = a7;
      *(_DWORD *)v26 = 136315394;
      v43 = v26 + 4;
      swift_getMetatypeMetadata();
      v47 = v22;
      v27 = sub_1A46908E8();
      aBlock = sub_1A4431120(v27, v28, &v52);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      v42 = (uint8_t *)v26;
      v43 = v26 + 14;
      v41 = v26 + 22;
      v29 = v48;
      aBlock = (uint64_t)v48;
      v30 = v48;
      sub_1A46911D0();
      v31 = v44;
      *v44 = v29;

      v32 = v42;
      _os_log_impl(&dword_1A442D000, v47, (os_log_type_t)v45, "%s: 'templatePublicLink' and 'error' in completion of '-[REMXPCStorePerformer createOrUpdatePublicLinkForTemplateWithObjectID:configuration:completion:]' were both nil {remTemplate.objectID: %@}", v42, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v31, -1, -1);
      v33 = v46;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v32, -1, -1);

    }
    else
    {

      v34 = v48;
    }
    v47 = objc_opt_self();
    aBlock = 0;
    v54 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    v35 = objc_msgSend(v48, sel_description);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v36 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    a1 = -[NSObject internalErrorWithDebugDescription:](v47, sel_internalErrorWithDebugDescription_, v36);

    v19 = 1;
  }
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = a5;
  *(_QWORD *)(v37 + 24) = a6;
  *(_QWORD *)(v37 + 32) = a1;
  *(_BYTE *)(v37 + 40) = v19;
  v57 = sub_1A45A9CC8;
  v58 = v37;
  aBlock = MEMORY[0x1E0C809B0];
  v54 = 1107296256;
  v55 = sub_1A44AE6A0;
  v56 = &block_descriptor_164;
  v38 = _Block_copy(&aBlock);
  v39 = a2;
  swift_retain();
  sub_1A444AA0C(a1);
  sub_1A46905C4();
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v18, v15, v38);
  _Block_release(v38);
  sub_1A456F210(a1);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v49);
  return swift_release();
}

uint64_t sub_1A45A521C()
{
  return objectdestroyTm_1();
}

uint64_t sub_1A45A5224(void *a1)
{
  uint64_t *v1;

  return sub_1A45A5D6C(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E4C24550, (uint64_t)sub_1A45A9CFC, (uint64_t)&block_descriptor_152_0);
}

void REMStore.createPublicContentPreview(of:with:completionHandlerQueue:completion:)(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t ObjectType;
  void *v36;
  uint64_t v37;
  uint64_t aBlock;
  uint64_t v39;
  void *v40;
  void *v41;
  void *v42;
  _QWORD *v43;

  v36 = a2;
  ObjectType = swift_getObjectType();
  v10 = sub_1A46905A0();
  v34 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A46905DC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = objc_msgSend(v5, sel_daemonController);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend(a1, sel_objectID);
    v20 = (_QWORD *)swift_allocObject();
    v21 = ObjectType;
    v22 = v36;
    v20[2] = v19;
    v20[3] = v22;
    v20[4] = a3;
    v20[5] = a4;
    v20[6] = a5;
    v20[7] = v21;
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a3;
    v23[3] = a4;
    v23[4] = a5;
    v24 = a3;
    swift_retain_n();
    v25 = v24;
    v26 = v19;
    v27 = v22;
    v28 = (void *)sub_1A469087C();
    v42 = sub_1A45A57E8;
    v43 = v20;
    v29 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v39 = 1107296256;
    v40 = sub_1A45A47DC;
    v41 = &block_descriptor_39;
    v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v42 = sub_1A45A5F40;
    v43 = v23;
    aBlock = v29;
    v39 = 1107296256;
    v40 = sub_1A45A4824;
    v41 = &block_descriptor_42;
    v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v18, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v28, v30, v31);
    _Block_release(v31);
    _Block_release(v30);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

  }
  else
  {
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = a4;
    *(_QWORD *)(v32 + 24) = a5;
    v42 = sub_1A45A9E60;
    v43 = (_QWORD *)v32;
    aBlock = MEMORY[0x1E0C809B0];
    v39 = 1107296256;
    v40 = sub_1A44AE6A0;
    v41 = &block_descriptor_30_0;
    v33 = _Block_copy(&aBlock);
    swift_retain();
    sub_1A46905C4();
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1A44A6088();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
    sub_1A44A60D0();
    sub_1A46912A8();
    MEMORY[0x1A859E8FC](0, v16, v12, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    swift_release();
  }
}

void sub_1A45A55EC(void (*a1)(id, uint64_t))
{
  void *v2;
  uint64_t ObjCClassFromMetadata;
  void *v4;
  id v5;

  v2 = (void *)objc_opt_self();
  sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v4 = (void *)sub_1A469087C();
  v5 = objc_msgSend(v2, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v4);

  a1(v5, 1);
}

void sub_1A45A56AC(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  _QWORD v18[6];

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a2;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a7;
  v18[4] = sub_1A45A9CB0;
  v18[5] = v14;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1A45A47D8;
  v18[3] = &block_descriptor_140;
  v15 = _Block_copy(v18);
  v16 = a2;
  v17 = a4;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_createPublicContentPreviewOfTemplateWithObjectID_configuration_completion_, v16, a3, v15);
  _Block_release(v15);
}

uint64_t objectdestroy_14Tm_0()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A45A57E8(uint64_t a1)
{
  return sub_1A45A57F4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45A56AC);
}

uint64_t sub_1A45A57F4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1A45A5808(id a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  _QWORD *v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  NSObject *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock;
  unint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;

  v50 = a4;
  v13 = sub_1A46905A0();
  v51 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1A46905DC();
  v16 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v19 = 1;
    a1 = a2;
  }
  else if (a1)
  {
    v20 = a1;
    v19 = 0;
  }
  else
  {
    if (qword_1EE71C168 != -1)
      swift_once();
    v21 = sub_1A4690318();
    __swift_project_value_buffer(v21, (uint64_t)qword_1EE721C80);
    v48 = a3;
    v22 = sub_1A469030C();
    v23 = sub_1A4690FFC();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v45 = v24;
      v26 = v25;
      v44 = (_QWORD *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v52 = v46;
      aBlock = a7;
      *(_DWORD *)v26 = 136315394;
      v43 = v26 + 4;
      swift_getMetatypeMetadata();
      v47 = v22;
      v27 = sub_1A46908E8();
      aBlock = sub_1A4431120(v27, v28, &v52);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2112;
      v42 = (uint8_t *)v26;
      v43 = v26 + 14;
      v41 = v26 + 22;
      v29 = v48;
      aBlock = (uint64_t)v48;
      v30 = v48;
      sub_1A46911D0();
      v31 = v44;
      *v44 = v29;

      v32 = v42;
      _os_log_impl(&dword_1A442D000, v47, (os_log_type_t)v45, "%s: 'publicTemplateObjectID' and 'error' in completion of '-[REMXPCStorePerformer createPublicContentPreviewOfTemplateWithObjectID:configuration:completion:]' were both nil {remTemplate.objectID: %@}", v42, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v31, -1, -1);
      v33 = v46;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v33, -1, -1);
      MEMORY[0x1A85A0114](v32, -1, -1);

    }
    else
    {

      v34 = v48;
    }
    v47 = objc_opt_self();
    aBlock = 0;
    v54 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    v35 = objc_msgSend(v48, sel_description);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v36 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    a1 = -[NSObject internalErrorWithDebugDescription:](v47, sel_internalErrorWithDebugDescription_, v36);

    v19 = 1;
  }
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = a5;
  *(_QWORD *)(v37 + 24) = a6;
  *(_QWORD *)(v37 + 32) = a1;
  *(_BYTE *)(v37 + 40) = v19;
  v57 = sub_1A45A9CC8;
  v58 = v37;
  aBlock = MEMORY[0x1E0C809B0];
  v54 = 1107296256;
  v55 = sub_1A44AE6A0;
  v56 = &block_descriptor_146;
  v38 = _Block_copy(&aBlock);
  v39 = a2;
  swift_retain();
  sub_1A444AA0C(a1);
  sub_1A46905C4();
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v18, v15, v38);
  _Block_release(v38);
  sub_1A456F210(a1);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v13);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v49);
  return swift_release();
}

void sub_1A45A5CF8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1A45A5D6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v22 = a7;
  v24 = a2;
  v11 = sub_1A46905A0();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A46905DC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a1;
  aBlock[4] = a6;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44AE6A0;
  aBlock[3] = v22;
  v19 = _Block_copy(aBlock);
  swift_retain();
  v20 = a1;
  sub_1A46905C4();
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A44A6088();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242FD0);
  sub_1A44A60D0();
  sub_1A46912A8();
  MEMORY[0x1A859E8FC](0, v17, v13, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return swift_release();
}

uint64_t sub_1A45A5F38()
{
  return objectdestroyTm_1();
}

uint64_t sub_1A45A5F40(void *a1)
{
  uint64_t *v1;

  return sub_1A45A5D6C(a1, v1[2], v1[3], v1[4], (uint64_t)&unk_1E4C24460, (uint64_t)sub_1A45A9CA8, (uint64_t)&block_descriptor_134);
}

void REMStore.revokePublicLink(for:completionHandlerQueue:completion:)(void *a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  id v10;
  void *v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t ObjCClassFromMetadata;
  void *v23;
  id v24;
  uint64_t aBlock;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  _QWORD *v30;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v10 = objc_msgSend(v5, sel_daemonController);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(a1, sel_objectID);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v12;
    v13[3] = a1;
    v13[4] = a3;
    v13[5] = a4;
    v13[6] = ObjectType;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a3;
    *(_QWORD *)(v14 + 24) = a4;
    swift_retain_n();
    v15 = v12;
    v16 = a1;
    v17 = (void *)sub_1A469087C();
    v29 = sub_1A45A6300;
    v30 = v13;
    v18 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v26 = 1107296256;
    v27 = sub_1A45A47DC;
    v28 = &block_descriptor_51;
    v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v29 = sub_1A45A669C;
    v30 = (_QWORD *)v14;
    aBlock = v18;
    v26 = 1107296256;
    v27 = sub_1A45A4824;
    v28 = &block_descriptor_54;
    v20 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v11, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v17, v19, v20);
    _Block_release(v20);
    _Block_release(v19);
    swift_unknownObjectRelease();

    swift_release();
    swift_release();

  }
  else
  {
    v21 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v23 = (void *)sub_1A469087C();
    v24 = objc_msgSend(v21, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v23);

    a3(v24, 1);
  }
}

void sub_1A45A621C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v15[4] = sub_1A45A9C98;
  v15[5] = v12;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A45A47D8;
  v15[3] = &block_descriptor_128;
  v13 = _Block_copy(v15);
  v14 = a3;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_revokePublicLinkForTemplateWithObjectID_completion_, a2, v13);
  _Block_release(v13);
}

void sub_1A45A6300(void *a1)
{
  uint64_t v1;

  sub_1A45A621C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1A45A6310(void *a1, id a2, void *a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint32_t *p_ivar_base_size;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  if (a2)
  {
    v8 = 1;
    v9 = a2;
  }
  else
  {
    v9 = a1;
    if (a1)
    {
      v10 = a1;
      v8 = 0;
    }
    else
    {
      if (qword_1EE71C168 != -1)
        swift_once();
      v13 = sub_1A4690318();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EE721C80);
      v14 = a3;
      v15 = sub_1A469030C();
      v16 = sub_1A4690FFC();
      p_ivar_base_size = &REMRemindersListDataView_TemplateInvocation__metaData.ivar_base_size;
      if (os_log_type_enabled(v15, v16))
      {
        v18 = swift_slowAlloc();
        v27 = (_QWORD *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v29 = v28;
        *(_DWORD *)v18 = 136315394;
        v30 = a6;
        swift_getMetatypeMetadata();
        v19 = sub_1A46908E8();
        v30 = sub_1A4431120(v19, v20, &v29);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2112;
        v21 = objc_msgSend(v14, sel_objectID);
        v30 = (uint64_t)v21;
        p_ivar_base_size = (_DWORD *)(&REMRemindersListDataView_TemplateInvocation__metaData + 8);
        sub_1A46911D0();
        *v27 = v21;

        _os_log_impl(&dword_1A442D000, v15, v16, "%s: 'templateObjectID' and 'error' in completion of '-[REMXPCStorePerformer revokePublicLinkForTemplateWithObjectID:completion:]' were both nil {remTemplate.objectID: %@}", (uint8_t *)v18, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v27, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v28, -1, -1);
        MEMORY[0x1A85A0114](v18, -1, -1);

      }
      else
      {

      }
      v22 = (void *)objc_opt_self();
      v30 = 0;
      v31 = 0xE000000000000000;
      sub_1A4691410();
      sub_1A4690984();
      v23 = objc_msgSend(v14, *((SEL *)p_ivar_base_size + 351));
      v24 = objc_msgSend(v23, sel_description);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v25 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v22, sel_internalErrorWithDebugDescription_, v25);

      v8 = 1;
    }
  }
  v26 = a2;
  a4(v9, v8);
  sub_1A456F210(v9);
}

uint64_t sub_1A45A669C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(a1, 1);
}

void REMStore.downloadPublicTemplate(withPublicLinkURLUUID:completion:)(uint64_t a1, void (*a2)(id, uint64_t), void (*a3)(id, uint64_t))
{
  void *v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void (*v14)(char *, uint64_t, uint64_t);
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (**v18)(id, uint64_t);
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t ObjCClassFromMetadata;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = sub_1A46900FC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(v4, sel_daemonController);
  if (v13)
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v28 = v13;
    v14((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
    v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
    v18 = (void (**)(id, uint64_t))(v17 + v16);
    *v18 = a2;
    v18[1] = a3;
    *(_QWORD *)(v17 + ((v16 + 23) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a2;
    *(_QWORD *)(v19 + 24) = a3;
    swift_retain_n();
    v20 = (void *)sub_1A469087C();
    v33 = sub_1A45A6B54;
    v34 = v17;
    v21 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v30 = 1107296256;
    v31 = sub_1A45A47DC;
    v32 = &block_descriptor_63_0;
    v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v33 = sub_1A45A9F64;
    v34 = v19;
    aBlock = v21;
    v30 = 1107296256;
    v31 = sub_1A45A4824;
    v32 = &block_descriptor_66;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v28, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v20, v22, v23);
    _Block_release(v23);
    _Block_release(v22);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v24 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v26 = (void *)sub_1A469087C();
    v28 = objc_msgSend(v24, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v26);

    a2(v28, 1);
  }
}

void sub_1A45A69D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[6];

  v18 = a5;
  v19 = a1;
  v8 = sub_1A46900FC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v13, v11, v8);
  v16 = (_QWORD *)(v15 + v14);
  *v16 = a3;
  v16[1] = a4;
  *(_QWORD *)(v15 + ((v14 + 23) & 0xFFFFFFFFFFFFFFF8)) = v18;
  aBlock[4] = sub_1A45A9C20;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A45A47D8;
  aBlock[3] = &block_descriptor_122;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v19, sel_downloadPublicTemplateWithPublicLinkURLUUID_completion_, v12, v17);
  _Block_release(v17);

}

void sub_1A45A6B54(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1A46900FC() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A45A69D0(a1, v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + v5 + 8), *(_QWORD *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFF8)));
}

void sub_1A45A6BB4(id a1, void *a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  int v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v11 = sub_1A46900FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v15 = 1;
    a1 = a2;
  }
  else if (a1)
  {
    v16 = a1;
    v15 = 0;
  }
  else
  {
    if (qword_1EE71C168 != -1)
      swift_once();
    v17 = sub_1A4690318();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EE721C80);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
    v18 = sub_1A469030C();
    v19 = sub_1A4690FFC();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v35 = a3;
      v22 = v21;
      v34 = swift_slowAlloc();
      v36 = v34;
      v37 = a6;
      *(_DWORD *)v22 = 136315394;
      v33 = v18;
      swift_getMetatypeMetadata();
      v32 = v20;
      v23 = sub_1A46908E8();
      v37 = sub_1A4431120(v23, v24, &v36);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v25 = sub_1A46900CC();
      v37 = sub_1A4431120(v25, v26, &v36);
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v18 = v33;
      _os_log_impl(&dword_1A442D000, v33, (os_log_type_t)v32, "%s: 'publicTemplateObjectID' and 'error' in completion of '-[REMXPCStorePerformer downloadPublicTemplateWithPublicLinkURLUUID:completion:]' were both nil {publicLinkURLUUID: %s}", (uint8_t *)v22, 0x16u);
      v27 = v34;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v27, -1, -1);
      MEMORY[0x1A85A0114](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }

    v28 = (void *)objc_opt_self();
    v37 = 0;
    v38 = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    sub_1A46900CC();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v29 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    a1 = objc_msgSend(v28, sel_internalErrorWithDebugDescription_, v29);

    v15 = 1;
  }
  v30 = a2;
  a4(a1, v15);
  sub_1A456F210(a1);
}

uint64_t REMStore.downloadPublicTemplate(withPublicLinkURLUUID:)(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;

  v3 = sub_1A46900FC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v7 + v6, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CA8);
  swift_allocObject();
  v8 = v1;
  return sub_1A46904B0();
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1A45A6FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1A45A9B40;
  *(_QWORD *)(v8 + 24) = v7;
  swift_retain();
  REMStore.downloadPublicTemplate(withPublicLinkURLUUID:completion:)(a4, (void (*)(id, uint64_t))sub_1A45A9B78, (void (*)(id, uint64_t))v8);
  return swift_release();
}

uint64_t sub_1A45A7090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1A46900FC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1A45A7104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1A46900FC() - 8) + 80);
  return sub_1A45A6FF8(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1A45A716C()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
  *v2 = v0;
  v2[1] = sub_1A45A722C;
  return sub_1A4691BB4();
}

uint64_t sub_1A45A722C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A45A7298()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A45A72A4()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A45A72D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(id, uint64_t);
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CB8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = (void (*)(id, uint64_t))swift_allocObject();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))((char *)v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  REMStore.downloadPublicTemplate(withPublicLinkURLUUID:completion:)(a3, (void (*)(id, uint64_t))sub_1A45A9AF0, v9);
  return swift_release();
}

uint64_t sub_1A45A73BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A45A72D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A45A73C4(void *a1, char a2)
{
  id v2;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CB8);
    return sub_1A4690CCC();
  }
  else
  {
    v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CB8);
    return sub_1A4690CD8();
  }
}

uint64_t REMStore.permanentlyHideReminders(with:accountID:completion:)(unint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, _QWORD *);
  unint64_t v31;
  char v32;
  char v33;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  void (**v45)(id, uint64_t);
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t result;
  void *v50;
  void (*v51)(id, uint64_t);
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  char *v55;
  void *v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  _QWORD *v65;

  v9 = (_QWORD *)sub_1A46900B4();
  v10 = *(v9 - 1);
  MEMORY[0x1E0C80A78](v9);
  v59 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v13 = MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v63 = (char *)&v50 - v15;
  v16 = sub_1A46900FC();
  v61 = *(_QWORD *)(v16 - 8);
  v62 = v16;
  MEMORY[0x1E0C80A78](v16);
  v60 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)sub_1A443DB58(MEMORY[0x1E0DEE9D8]);
  v58 = v10;
  if (a1 >> 62)
    goto LABEL_31;
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v19; v19 = sub_1A46916A4())
  {
    if (v19 < 1)
    {
      __break(1u);
LABEL_35:
      result = sub_1A4691C08();
      __break(1u);
      return result;
    }
    v50 = a2;
    v51 = a3;
    v52 = a4;
    v53 = v4;
    a2 = 0;
    v56 = (void *)v19;
    v57 = a1 & 0xC000000000000001;
    v54 = a1;
    while (1)
    {
      if (v57)
        v22 = (id)MEMORY[0x1A859ECE0](a2, a1);
      else
        v22 = *(id *)(a1 + 8 * (_QWORD)a2 + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_objectID, v50, v51, v52, v53);
      v25 = objc_msgSend(v24, sel_uuid);

      v26 = v60;
      sub_1A46900F0();

      a3 = (void (*)(id, uint64_t))sub_1A46900CC();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v26, v62);
      v64 = v23;
      v29 = objc_msgSend(v23, sel_lastModifiedDate);
      a4 = (uint64_t)v63;
      sub_1A4690084();

      v30 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v10 + 56);
      v30(a4, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v10 + 48))(a4, 1, v9) == 1)
      {
        sub_1A449C92C(a4);
        swift_bridgeObjectRetain();
        v31 = sub_1A443E4C8((uint64_t)a3, v28);
        v33 = v32;
        swift_bridgeObjectRelease();
        if ((v33 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v65 = v18;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1A4449F30();
            v18 = v65;
          }
          swift_bridgeObjectRelease();
          v21 = (uint64_t)v55;
          (*(void (**)(char *, unint64_t, _QWORD *))(v10 + 32))(v55, v18[7] + *(_QWORD *)(v10 + 72) * v31, v9);
          sub_1A45A9808(v31, (uint64_t)v18);
          swift_bridgeObjectRelease();
          v20 = 0;
        }
        else
        {
          v20 = 1;
          v21 = (uint64_t)v55;
        }
        v30(v21, v20, 1, v9);
        swift_bridgeObjectRelease();
        sub_1A449C92C(v21);

        goto LABEL_7;
      }
      v35 = v9;
      v9 = *(_QWORD **)(v10 + 32);
      v36 = v35;
      ((void (*)(char *, uint64_t))v9)(v59, a4);
      v37 = swift_isUniquelyReferenced_nonNull_native();
      v65 = v18;
      v4 = v18;
      a1 = sub_1A443E4C8((uint64_t)a3, v28);
      v39 = v18[2];
      v40 = (v38 & 1) == 0;
      v41 = v39 + v40;
      if (__OFADD__(v39, v40))
        break;
      a4 = v38;
      if (v18[3] >= v41)
      {
        if ((v37 & 1) != 0)
        {
          v44 = v64;
          v4 = v65;
          if ((v38 & 1) == 0)
            goto LABEL_25;
        }
        else
        {
          sub_1A4449F30();
          v44 = v64;
          v4 = v65;
          if ((a4 & 1) == 0)
            goto LABEL_25;
        }
      }
      else
      {
        sub_1A4446188(v41, v37);
        v42 = sub_1A443E4C8((uint64_t)a3, v28);
        if ((a4 & 1) != (v43 & 1))
          goto LABEL_35;
        a1 = v42;
        v44 = v64;
        v4 = v65;
        if ((a4 & 1) == 0)
        {
LABEL_25:
          v4[(a1 >> 6) + 8] |= 1 << a1;
          v45 = (void (**)(id, uint64_t))(v4[6] + 16 * a1);
          *v45 = a3;
          v45[1] = (void (*)(id, uint64_t))v28;
          ((void (*)(unint64_t, char *, _QWORD *))v9)(v4[7] + *(_QWORD *)(v58 + 72) * a1, v59, v36);
          v46 = v4[2];
          v47 = __OFADD__(v46, 1);
          v48 = v46 + 1;
          if (v47)
            goto LABEL_30;
          v4[2] = v48;
          swift_bridgeObjectRetain();
          v9 = v36;
          goto LABEL_27;
        }
      }
      v9 = v36;
      (*(void (**)(unint64_t, char *, _QWORD *))(v58 + 40))(v4[7] + *(_QWORD *)(v58 + 72) * a1, v59, v36);
LABEL_27:
      v18 = v65;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v54;
      v10 = v58;
LABEL_7:
      a2 = (char *)a2 + 1;
      if (v56 == a2)
      {
        swift_bridgeObjectRelease();
        a4 = v52;
        a2 = v50;
        a3 = v51;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    v10 = v58;
  }
  swift_bridgeObjectRelease();
LABEL_33:
  sub_1A45A7950((uint64_t)v18, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

void sub_1A45A7950(uint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  void *v4;
  id v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t ObjCClassFromMetadata;
  void *v20;
  id v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD *v27;

  v9 = objc_msgSend(v4, sel_daemonController);
  if (v9)
  {
    v10 = v9;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a1;
    v11[3] = a2;
    v11[4] = a3;
    v11[5] = a4;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = a3;
    *(_QWORD *)(v12 + 24) = a4;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v13 = a2;
    v14 = (void *)sub_1A469087C();
    v26 = sub_1A45A9A54;
    v27 = v11;
    v15 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v23 = 1107296256;
    v24 = sub_1A45A47DC;
    v25 = &block_descriptor_98;
    v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v26 = sub_1A45A9F64;
    v27 = (_QWORD *)v12;
    aBlock = v15;
    v23 = 1107296256;
    v24 = sub_1A45A4824;
    v25 = &block_descriptor_101;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v14, v16, v17);
    _Block_release(v17);
    _Block_release(v16);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v18 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v20 = (void *)sub_1A469087C();
    v21 = objc_msgSend(v18, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v20);

    a3(v21, 1);
  }
}

uint64_t REMStore.permanentlyHideReminderChangeItems(with:accountID:completion:)(unint64_t a1, void *a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  _QWORD *v4;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t, unint64_t);
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  char v42;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v44;
  void (**v45)(id, uint64_t);
  unint64_t v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t result;
  void *v51;
  void (*v52)(id, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void *v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;

  v9 = sub_1A46900B4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v13 = MEMORY[0x1E0C80A78](v12);
  v59 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v51 - v15;
  v16 = sub_1A46900FC();
  v63 = *(_QWORD *)(v16 - 8);
  v64 = v16;
  MEMORY[0x1E0C80A78](v16);
  v62 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)sub_1A443DB58(MEMORY[0x1E0DEE9D8]);
  if (a1 >> 62)
    goto LABEL_33;
  v19 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v19; v19 = sub_1A46916A4())
  {
    if (v19 < 1)
    {
      __break(1u);
LABEL_37:
      result = sub_1A4691C08();
      __break(1u);
      return result;
    }
    v51 = a2;
    v52 = a3;
    v53 = a4;
    v54 = v4;
    a2 = 0;
    v60 = (void *)v19;
    v61 = a1 & 0xC000000000000001;
    v55 = a1;
    v56 = v9;
    v57 = v10;
    while (1)
    {
      if (v61)
        v22 = (id)MEMORY[0x1A859ECE0](a2, a1);
      else
        v22 = *(id *)(a1 + 8 * (_QWORD)a2 + 32);
      v23 = v22;
      v24 = objc_msgSend(v22, sel_objectID, v51, v52, v53, v54);
      v25 = objc_msgSend(v24, sel_uuid);

      v26 = v62;
      sub_1A46900F0();

      a3 = (void (*)(id, uint64_t))sub_1A46900CC();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v26, v64);
      v29 = objc_msgSend(v23, sel_lastModifiedDate);
      if (!v29)
      {
        v33 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v10 + 56);
        v32 = (uint64_t)v65;
        v33(v65, 1, 1, v9);
LABEL_19:
        sub_1A449C92C(v32);
        swift_bridgeObjectRetain();
        v40 = sub_1A443E4C8((uint64_t)a3, v28);
        v42 = v41;
        swift_bridgeObjectRelease();
        if ((v42 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v66 = v18;
          if (!isUniquelyReferenced_nonNull_native)
          {
            sub_1A4449F30();
            v18 = v66;
          }
          swift_bridgeObjectRelease();
          v21 = (uint64_t)v59;
          (*(void (**)(char *, unint64_t, unint64_t))(v10 + 32))(v59, v18[7] + *(_QWORD *)(v10 + 72) * v40, v9);
          sub_1A45A9808(v40, (uint64_t)v18);
          swift_bridgeObjectRelease();
          v20 = 0;
        }
        else
        {
          v20 = 1;
          v21 = (uint64_t)v59;
        }
        v33((char *)v21, v20, 1, v9);
        swift_bridgeObjectRelease();
        sub_1A449C92C(v21);

        goto LABEL_7;
      }
      v30 = v29;
      v31 = v65;
      sub_1A4690084();

      v32 = (uint64_t)v31;
      v33 = *(void (**)(char *, uint64_t, uint64_t, unint64_t))(v10 + 56);
      v33((char *)v32, 0, 1, v9);
      if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v10 + 48))(v32, 1, v9) == 1)
        goto LABEL_19;
      v10 = *(_QWORD *)(v10 + 32);
      ((void (*)(char *, uint64_t, unint64_t))v10)(v58, v32, v9);
      a4 = swift_isUniquelyReferenced_nonNull_native();
      v66 = v18;
      v4 = v18;
      v9 = sub_1A443E4C8((uint64_t)a3, v28);
      v35 = v18[2];
      v36 = (v34 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
        break;
      a1 = v34;
      if (v18[3] >= v37)
      {
        if ((a4 & 1) != 0)
        {
          v4 = v66;
          if ((v34 & 1) == 0)
            goto LABEL_27;
        }
        else
        {
          sub_1A4449F30();
          v4 = v66;
          if ((a1 & 1) == 0)
            goto LABEL_27;
        }
      }
      else
      {
        sub_1A4446188(v37, a4);
        v38 = sub_1A443E4C8((uint64_t)a3, v28);
        if ((a1 & 1) != (v39 & 1))
          goto LABEL_37;
        v9 = v38;
        v4 = v66;
        if ((a1 & 1) == 0)
        {
LABEL_27:
          v4[(v9 >> 6) + 8] |= 1 << v9;
          v45 = (void (**)(id, uint64_t))(v4[6] + 16 * v9);
          *v45 = a3;
          v45[1] = (void (*)(id, uint64_t))v28;
          v46 = v4[7] + *(_QWORD *)(v57 + 72) * v9;
          v9 = v56;
          ((void (*)(unint64_t, char *, unint64_t))v10)(v46, v58, v56);
          v47 = v4[2];
          v48 = __OFADD__(v47, 1);
          v49 = v47 + 1;
          if (v48)
            goto LABEL_32;
          v4[2] = v49;
          swift_bridgeObjectRetain();
          v10 = v57;
          goto LABEL_29;
        }
      }
      v10 = v57;
      v44 = v4[7] + *(_QWORD *)(v57 + 72) * v9;
      v9 = v56;
      (*(void (**)(unint64_t, char *, unint64_t))(v57 + 40))(v44, v58, v56);
LABEL_29:
      v18 = v66;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = v55;
LABEL_7:
      a2 = (char *)a2 + 1;
      if (v60 == a2)
      {
        swift_bridgeObjectRelease();
        a4 = v53;
        a2 = v51;
        a3 = v52;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_35:
  sub_1A45A7950((uint64_t)v18, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

void REMStore.batchDeleteExpiredReminders(daysFromNow:completion:)(void *a1, void (*a2)(id), uint64_t a3)
{
  void *v3;
  void *v4;
  id v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t ObjCClassFromMetadata;
  void *v19;
  id v20;
  uint64_t aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  _QWORD *v26;

  v4 = v3;
  v8 = objc_msgSend(v4, sel_daemonController);
  if (v8)
  {
    v9 = v8;
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = a3;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a2;
    *(_QWORD *)(v11 + 24) = a3;
    v12 = a1;
    swift_retain_n();
    v13 = (void *)sub_1A469087C();
    v25 = sub_1A45A9A0C;
    v26 = v10;
    v14 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v22 = 1107296256;
    v23 = sub_1A45A47DC;
    v24 = &block_descriptor_80;
    v15 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v25 = sub_1A4452640;
    v26 = (_QWORD *)v11;
    aBlock = v14;
    v22 = 1107296256;
    v23 = sub_1A45A4824;
    v24 = &block_descriptor_83;
    v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v13, v15, v16);
    _Block_release(v16);
    _Block_release(v15);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v17 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v19 = (void *)sub_1A469087C();
    v20 = objc_msgSend(v17, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v19);

    a2(v20);
  }
}

void sub_1A45A836C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[4] = sub_1A45A9A18;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A4621DD8;
  v10[3] = &block_descriptor_89;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_batchDeleteExpiredRemindersWith_completion_, a2, v9);
  _Block_release(v9);
}

void sub_1A45A843C(void *a1, void (*a2)(void))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    ((void (*)(void *))a2)(a1);

  }
  else
  {
    a2();
  }
}

void sub_1A45A8490(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  sub_1A46900B4();
  v9 = (void *)sub_1A46906F0();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a4;
  *(_QWORD *)(v10 + 24) = a5;
  v12[4] = sub_1A45A9A84;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A4621DD8;
  v12[3] = &block_descriptor_107;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_permanentlyHideRemindersWith_accountID_completion_, v9, a3, v11);
  _Block_release(v11);

}

void sub_1A45A8594(void *a1, void (*a2)(void *, uint64_t))
{
  id v4;

  if (a1)
  {
    v4 = a1;
    a2(a1, 1);

  }
  else
  {
    a2(0, 0);
  }
}

id REMStore.deletePhantomHashtags(with:)(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v15[3];

  v3 = v2;
  v4 = v1;
  v15[2] = *(id *)MEMORY[0x1E0C80C00];
  type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v6, sel_init);
  sub_1A4482BE4((uint64_t)v7, a1, (uint64_t *)v15);
  swift_bridgeObjectRelease();

  if (!v3)
  {
    v8 = v15[0];

    v9 = sub_1A445A540((uint64_t)v8);
    swift_bridgeObjectRelease();
    if (v9 < 0 || (v9 & 0x4000000000000000) != 0)
    {
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
      swift_bridgeObjectRetain();
      sub_1A4691644();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1A4691A64();
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
    }
    swift_release();
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
    v10 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v15[0] = 0;
    v11 = objc_msgSend(v4, sel_repairPhantomObjectsWithObjectIDs_error_, v10, v15);

    v12 = v15[0];
    if (v11)
    {
      v1 = (id)sub_1A4690BA0();
      v13 = v12;

    }
    else
    {
      v1 = v15[0];
      sub_1A468FE68();

      swift_willThrow();
    }
  }
  return v1;
}

unint64_t sub_1A45A87F0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A444AB84(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_1A469135C();
        result = sub_1A444ABC0((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A45A89B8(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  unint64_t v35;
  uint64_t v36;

  v4 = sub_1A46915B4();
  v36 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v35 = (result + 1) & v11;
      v12 = *(_QWORD *)(v36 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v34(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        v18 = sub_1A46907E0();
        result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v35)
        {
          if (v19 >= v35 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 32 * a1);
            v25 = (_OWORD *)(v23 + 32 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 2))
            {
              v26 = v25[1];
              *v24 = *v25;
              v24[1] = v26;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v35 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A45A8C3C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A4691C8C();
        swift_bridgeObjectRetain();
        sub_1A4690948();
        v10 = sub_1A4691CC8();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A45A8E24(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v11 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v12 = sub_1A4691134();

        v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = *(_QWORD *)(a2 + 48);
            v17 = (_QWORD *)(v16 + 8 * v3);
            v18 = (_QWORD *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1)
              *v17 = *v18;
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v10 = v21[1];
              *v20 = *v21;
              v20[1] = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A45A8FD4(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1A4691C80();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_1A46900B4() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1A45A9190(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1A4691134();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1A45A9340(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A4691C8C();
        swift_bridgeObjectRetain();
        sub_1A4690948();
        v9 = sub_1A4691CC8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1A45A9514(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  __int128 *v27;
  BOOL v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = v7;
      v9 = (result + 1) & v7;
      v35 = v9;
      do
      {
        v36 = 24 * v6;
        v12 = *(_QWORD *)(v2 + 48) + 24 * v6;
        v14 = *(void **)v12;
        v13 = *(_QWORD *)(v12 + 8);
        v15 = *(_BYTE *)(v12 + 16);
        sub_1A4691C8C();
        sub_1A4691C98();
        if ((v15 & 1) != 0)
        {
          sub_1A444A990(v14, v13, 1);
          v16 = v3;
          v17 = v2;
          v18 = v8;
          v19 = v4;
          v20 = v14;
          sub_1A469114C();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
          v21 = (void *)sub_1A4690B94();
          sub_1A469114C();

          v4 = v19;
          v8 = v18;
          v2 = v17;
          v3 = v16;
          v9 = v35;
        }
        else
        {
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
          v21 = (void *)sub_1A4690B94();
          sub_1A469114C();
        }

        v22 = sub_1A4691CC8();
        result = sub_1A444AA18(v14, v13, v15);
        v23 = v22 & v8;
        if (v3 >= (uint64_t)v9)
        {
          if (v23 < v9)
            goto LABEL_5;
        }
        else if (v23 >= v9)
        {
          goto LABEL_14;
        }
        if (v3 >= (uint64_t)v23)
        {
LABEL_14:
          v24 = *(_QWORD *)(v2 + 48);
          result = v24 + 24 * v3;
          if (24 * v3 < v36 || result >= v24 + v36 + 24)
          {
            result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v3 != v6)
          {
            result = swift_arrayInitWithTakeBackToFront();
          }
          v25 = *(_QWORD *)(v2 + 56);
          v26 = v25 + 40 * v3;
          v27 = (__int128 *)(v25 + 40 * v6);
          if (40 * v3 < (uint64_t)(40 * v6) || v26 >= (unint64_t)v27 + 40 || (v28 = v3 == v6, v3 = v6, !v28))
          {
            v10 = *v27;
            v11 = v27[1];
            *(_QWORD *)(v26 + 32) = *((_QWORD *)v27 + 4);
            *(_OWORD *)v26 = v10;
            *(_OWORD *)(v26 + 16) = v11;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v8;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v29 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v30 = *v29;
    v31 = (-1 << v3) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v4 + 8 * (result >> 6));
    v31 = *v29;
    v30 = (-1 << result) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(v2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_1A45A9808(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A46912B4();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1A4691C8C();
        swift_bridgeObjectRetain();
        sub_1A4690948();
        v9 = sub_1A4691CC8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(sub_1A46900B4() - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1A45A9A04()
{
  return objectdestroyTm_1();
}

void sub_1A45A9A0C(void *a1)
{
  uint64_t *v1;

  sub_1A45A836C(a1, v1[2], v1[3], v1[4]);
}

void sub_1A45A9A18(void *a1)
{
  uint64_t v1;

  sub_1A45A843C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1A45A9A20()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

void sub_1A45A9A54(void *a1)
{
  uint64_t *v1;

  sub_1A45A8490(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A45A9A60()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A45A9A84(void *a1)
{
  uint64_t v1;

  sub_1A45A8594(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1A45A9A8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CB8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1A45A9AF0(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CB8);
  return sub_1A45A73C4(a1, v3);
}

uint64_t sub_1A45A9B40(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1A45A9B78(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 16))(a1, a2 & 1);
}

uint64_t objectdestroy_56Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1A46900FC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1A45A9C20(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1A46900FC() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1A45A6BB4(a1, a2, v2 + v6, *(void (**)(id, uint64_t))(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(_QWORD *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1A45A9C90()
{
  return objectdestroyTm_1();
}

void sub_1A45A9C98(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A45A6310(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A45A9CB0(uint64_t a1, uint64_t a2)
{
  return sub_1A45A9D70(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45A5808);
}

uint64_t sub_1A45A9CBC()
{
  return objectdestroy_142Tm((void (*)(_QWORD, _QWORD))sub_1A456F210);
}

uint64_t objectdestroy_130Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A45A9D00()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), 1);
}

uint64_t objectdestroy_44Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A45A9D64(uint64_t a1, uint64_t a2)
{
  return sub_1A45A9D70(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A45A4D2C);
}

uint64_t sub_1A45A9D70(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1A45A9D84()
{
  return objectdestroy_142Tm((void (*)(_QWORD, _QWORD))sub_1A45A9E5C);
}

uint64_t objectdestroy_142Tm(void (*a1)(_QWORD, _QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1A45A9DCC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1A45A9DF8()
{
  return objectdestroyTm_1();
}

void sub_1A45A9E00(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A45A446C(a1, a2, *(void **)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A45A9E0C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A45A9E48()
{
  uint64_t v0;

  return sub_1A45A3E20(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(void (**)(char *))(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A45A9F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721CC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721CC0);
  if (qword_1EE71C0B0 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE75B8E8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMSmartListChangeItem.userDefinedVisibility.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_smartListType);
  v6 = objc_msgSend(v1, sel_pinnedDate);
  if (v6)
  {
    v7 = v6;
    sub_1A4690084();

    v8 = sub_1A46900B4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    v9 = sub_1A46900B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  v10 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v5, (uint64_t)v4);

  sub_1A449C92C((uint64_t)v4);
  return v10;
}

uint64_t sub_1A45AA100@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = objc_msgSend(*a1, sel_smartListType);
  v9 = objc_msgSend(v7, sel_pinnedDate);
  if (v9)
  {
    v10 = v9;
    sub_1A4690084();

    v11 = sub_1A46900B4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
  }
  else
  {
    v12 = sub_1A46900B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  v13 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v8, (uint64_t)v6);

  result = sub_1A449C92C((uint64_t)v6);
  *a2 = v13;
  return result;
}

void REMSmartListChangeItem.userDefinedVisibility.setter(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  int v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _BYTE v39[12];
  int v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v39[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = objc_msgSend(v2, sel_smartListType);
  v12 = objc_msgSend(v2, sel_pinnedDate);
  if (v12)
  {
    v13 = v12;
    sub_1A4690084();

    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, v14, 1, v4);
  v15 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v11, (uint64_t)v10);

  sub_1A449C92C((uint64_t)v10);
  if (v15 != a1)
  {
    v16 = objc_msgSend(v2, sel_smartListType);
    v17 = REMSmartListType.supportsUserDefinedVisibility.getter(v16);

    if ((v17 & 1) != 0)
    {
      switch(a1)
      {
        case 2:
          if (qword_1EE71C188 != -1)
            swift_once();
          __swift_project_value_buffer(v4, (uint64_t)qword_1EE721DD8);
          v31 = (void *)sub_1A4690030();
          break;
        case 1:
          sub_1A4690090();
          v31 = (void *)sub_1A4690030();
          (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
          break;
        case 0:
          objc_msgSend(v2, sel_setPinnedDate_, 0);
          return;
        default:
          if (qword_1EE71C170 != -1)
            swift_once();
          v32 = sub_1A4690318();
          __swift_project_value_buffer(v32, (uint64_t)qword_1EE721CC0);
          v20 = sub_1A469030C();
          v33 = sub_1A4690FFC();
          if (!os_log_type_enabled(v20, v33))
            goto LABEL_33;
          v34 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v34 = 134217984;
          v44 = a1;
          sub_1A46911D0();
          _os_log_impl(&dword_1A442D000, v20, v33, "REMSmartListChangeItem.userDefinedVisibility.set: Unhandled userDefinedVisibility {userDefinedVisibility: %ld}", v34, 0xCu);
          v35 = (uint64_t)v34;
LABEL_32:
          MEMORY[0x1A85A0114](v35, -1, -1);
LABEL_33:

          return;
      }
      objc_msgSend(v2, sel_setPinnedDate_, v31);

      return;
    }
    if (qword_1EE71C170 != -1)
      swift_once();
    v18 = sub_1A4690318();
    __swift_project_value_buffer(v18, (uint64_t)qword_1EE721CC0);
    v19 = v2;
    v20 = sub_1A469030C();
    v21 = sub_1A4690FFC();
    if (!os_log_type_enabled(v20, (os_log_type_t)v21))
    {

      return;
    }
    v40 = v21;
    v22 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v44 = v42;
    *(_DWORD *)v22 = 138543874;
    v24 = objc_msgSend(v19, sel_objectID);
    v43 = (uint64_t)v24;
    sub_1A46911D0();
    v41 = v23;
    *v23 = v24;
    *(_WORD *)(v22 + 12) = 2082;
    v25 = objc_msgSend(v19, sel_smartListType);
    v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v28 = v27;

    v43 = sub_1A4431120(v26, v28, &v44);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    if (a1)
    {
      if (a1 == 2)
      {
        v29 = 0xE700000000000000;
        v36 = 0x65646469682ELL;
      }
      else
      {
        if (a1 == 1)
        {
          v29 = 0xE800000000000000;
          v30 = 0x656C62697369762ELL;
LABEL_31:
          v43 = sub_1A4431120(v30, v29, &v44);
          sub_1A46911D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1A442D000, v20, (os_log_type_t)v40, "REMSmartListChangeItem.userDefinedVisibility.set: Smart list does not support user-defined visibility {objectID: %{public}@, smartListType: %{public}s, userDefinedVisibility: %{public}s}", (uint8_t *)v22, 0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
          v37 = v41;
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v37, -1, -1);
          v38 = v42;
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v38, -1, -1);
          v35 = v22;
          goto LABEL_32;
        }
        v29 = 0xE700000000000000;
        v36 = 0x776F6E6B6E75;
      }
      v30 = v36 & 0xFFFFFFFFFFFFLL | 0x6E000000000000;
      goto LABEL_31;
    }
    v29 = 0xEA00000000006465;
    v30 = 0x6E696665646E752ELL;
    goto LABEL_31;
  }
}

void (*REMSmartListChangeItem.userDefinedVisibility.modify(uint64_t *a1))(uint64_t *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  a1[1] = (uint64_t)v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  a1[2] = (uint64_t)v5;
  v6 = objc_msgSend(v2, sel_smartListType);
  v7 = objc_msgSend(v2, sel_pinnedDate);
  if (v7)
  {
    v8 = v7;
    sub_1A4690084();

    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  v10 = sub_1A46900B4();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, v9, 1, v10);
  v11 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v6, (uint64_t)v5);

  sub_1A449C92C((uint64_t)v5);
  *a1 = v11;
  return sub_1A45AA898;
}

void sub_1A45AA898(uint64_t *a1)
{
  void *v1;

  v1 = (void *)a1[2];
  REMSmartListChangeItem.userDefinedVisibility.setter(*a1);
  free(v1);
}

void sub_1A45AA8C4(uint64_t *a1)
{
  REMSmartListChangeItem.userDefinedVisibility.setter(*a1);
}

uint64_t sub_1A45AA8E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721CD8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721CD8);
  if (qword_1EE71C0B8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE75B900);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  objc_super v5;

  v5.receiver = objc_allocWithZone(v1);
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_initWithReminderPredicateDescriptor_, a1);

  return v3;
}

id REMReminderPredicateDescriptor_Codable.init(_:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithReminderPredicateDescriptor_, a1);

  return v3;
}

uint64_t static REMReminderPredicateDescriptor_Codable.supportsSecureCoding.getter()
{
  return 1;
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMReminderPredicateDescriptor_Codable.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(type:)(uint64_t a1)
{
  objc_class *v1;

  return objc_msgSend(objc_allocWithZone(v1), sel_initWithType_, a1);
}

id REMReminderPredicateDescriptor_Codable.init(type:)(uint64_t a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v4, sel_initWithType_, a1);
}

void (**REMReminderPredicateDescriptor_Codable.__allocating_init(from:)(_QWORD *a1))(char *, uint64_t)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (**v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  void (**v23)(char *, uint64_t);
  objc_class *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[3];
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  objc_class *v39;
  void (**v40)(char *, uint64_t);

  v38 = sub_1A46900B4();
  v35 = *(_QWORD *)(v38 - 8);
  v2 = MEMORY[0x1E0C80A78](v38);
  v31 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v37 = (char *)v28 - v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v34 = (char *)v28 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)v28 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v36 = (char *)v28 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v32 = (char *)v28 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v28 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v28 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721CF0);
  v20 = *(void (***)(char *, uint64_t))(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45ABAE8();
  v23 = v40;
  sub_1A4691D28();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v28[1] = v18;
    v28[2] = v16;
    v29 = a1;
    v30 = 0;
    v24 = v39;
    v40 = v20;
    v25 = sub_1A46917DC();
    if (*(_QWORD *)(v25 + 16))
    {
      v26 = *(unsigned __int8 *)(v25 + 32);
      swift_bridgeObjectRelease();
      __asm { BR              X9 }
    }
    swift_bridgeObjectRelease();
    v20 = (void (**)(char *, uint64_t))objc_msgSend(objc_allocWithZone(v24), sel_initWithType_, 6);
    v40[1](v22, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return v20;
}

unint64_t sub_1A45ABAE8()
{
  unint64_t result;

  result = qword_1EE721CF8;
  if (!qword_1EE721CF8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.CodingKeys, &type metadata for REMReminderPredicateDescriptor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721CF8);
  }
  return result;
}

unint64_t sub_1A45ABB2C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE721D08;
  if (!qword_1EE721D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721D00);
    v3 = sub_1A450C498(&qword_1EE721D10, v2, (uint64_t (*)(uint64_t))type metadata accessor for REMReminderPredicateDescriptor_Codable, (uint64_t)&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE721D08);
  }
  return result;
}

uint64_t type metadata accessor for REMReminderPredicateDescriptor_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A45ABBC8()
{
  unint64_t result;

  result = qword_1EE721D20;
  if (!qword_1EE721D20)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.TextMatching, &type metadata for REMReminderPredicateDescriptor_Codable.TextMatching);
    atomic_store(result, (unint64_t *)&qword_1EE721D20);
  }
  return result;
}

uint64_t REMReminderPredicateDescriptor_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  objc_class *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  objc_class *v60;
  id v61;
  void *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  void *v67;
  objc_class *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  objc_class *v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  void *v99;
  char *v100;
  uint64_t v101;
  id v102;
  void *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  void *v108;
  objc_class *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  void *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  objc_super v165;
  objc_super v166;
  objc_super v167;
  uint64_t v168;
  uint64_t v169;
  objc_super v170;
  objc_super v171;
  _QWORD v172[3];
  uint64_t v173;
  Class ObjectType;

  v2 = v1;
  ObjectType = (Class)swift_getObjectType();
  v151 = sub_1A4690318();
  v150 = *(_QWORD *)(v151 - 8);
  v4 = MEMORY[0x1E0C80A78](v151);
  v6 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v149 = (char *)&v149 - v7;
  v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v8 = MEMORY[0x1E0C80A78](v158);
  v153 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v157 = (char *)&v149 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v156 = (char *)&v149 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v154 = (char *)&v149 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v152 = (char *)&v149 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v155 = (char *)&v149 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v149 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v149 - v23;
  v25 = sub_1A46900FC();
  v163 = *(_QWORD *)(v25 - 8);
  v164 = v25;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v149 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721D28);
  v160 = *(_QWORD *)(v162 - 8);
  MEMORY[0x1E0C80A78](v162);
  v29 = (char *)&v149 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45ABAE8();
  v161 = v29;
  sub_1A4691D40();
  switch((unint64_t)objc_msgSend(v2, sel_type))
  {
    case 0uLL:
      v30 = objc_msgSend(v2, sel_listID);
      if (v30)
      {
        v31 = v30;
        v32 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        v33 = objc_allocWithZone(v32);
        v34 = v31;
        v35 = objc_msgSend(v34, sel_uuid);
        sub_1A46900F0();

        v36 = (void *)sub_1A46900D8();
        (*(void (**)(char *, uint64_t))(v163 + 8))(v27, v164);
        v37 = objc_msgSend(v34, sel_entityName);
        if (!v37)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v37 = (id)sub_1A469087C();
          swift_bridgeObjectRelease();
        }
        v165.receiver = v33;
        v165.super_class = v32;
        v38 = objc_msgSendSuper2(&v165, sel_initWithUUID_entityName_, v36, v37);

      }
      else
      {
        v38 = 0;
      }
      v127 = v161;
      v128 = v162;
      v172[0] = v38;
      LOBYTE(v168) = 0;
      goto LABEL_78;
    case 1uLL:
      v84 = objc_msgSend(v2, sel_parentReminderID);
      if (v84)
      {
        v85 = v84;
        v86 = (objc_class *)type metadata accessor for REMObjectID_Codable();
        v87 = objc_allocWithZone(v86);
        v88 = v85;
        v89 = objc_msgSend(v88, sel_uuid);
        sub_1A46900F0();

        v90 = (void *)sub_1A46900D8();
        (*(void (**)(char *, uint64_t))(v163 + 8))(v27, v164);
        v91 = objc_msgSend(v88, sel_entityName);
        if (!v91)
        {
          _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v91 = (id)sub_1A469087C();
          swift_bridgeObjectRelease();
        }
        v166.receiver = v87;
        v166.super_class = v86;
        v38 = objc_msgSendSuper2(&v166, sel_initWithUUID_entityName_, v90, v91);

      }
      else
      {
        v38 = 0;
      }
      v127 = v161;
      v128 = v162;
      v172[0] = v38;
      LOBYTE(v168) = 1;
LABEL_78:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23E4D0);
      sub_1A45ADCF8();
      sub_1A4691890();

      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v127, v128);
    case 2uLL:
      v61 = objc_msgSend(v2, sel_objectIDs);
      if (v61)
      {
        v62 = v61;
        sub_1A444AA40(0, (unint64_t *)&qword_1ED2440D8);
        v63 = sub_1A4690BA0();

        if (v63 >> 62)
        {
          swift_bridgeObjectRetain();
          v64 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          if (v64)
          {
LABEL_24:
            v172[0] = MEMORY[0x1E0DEE9D8];
            sub_1A469153C();
            if ((v64 & 0x8000000000000000) == 0)
            {
              v65 = 0;
              v158 = v63 & 0xC000000000000001;
              ObjectType = (Class)v63;
              do
              {
                if (v158)
                  v66 = (id)MEMORY[0x1A859ECE0](v65, v63);
                else
                  v66 = *(id *)(v63 + 8 * v65 + 32);
                v67 = v66;
                v68 = (objc_class *)type metadata accessor for REMObjectID_Codable();
                v69 = objc_allocWithZone(v68);
                v70 = v67;
                v71 = objc_msgSend(v70, sel_uuid);
                sub_1A46900F0();

                v72 = (void *)sub_1A46900D8();
                (*(void (**)(char *, uint64_t))(v163 + 8))(v27, v164);
                v73 = objc_msgSend(v70, sel_entityName);
                if (!v73)
                {
                  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
                  v73 = (id)sub_1A469087C();
                  swift_bridgeObjectRelease();
                }
                ++v65;
                v167.receiver = v69;
                v167.super_class = v68;
                objc_msgSendSuper2(&v167, sel_initWithUUID_entityName_, v72, v73);

                sub_1A4691518();
                sub_1A4691548();
                sub_1A4691554();
                sub_1A4691524();
                v63 = (unint64_t)ObjectType;
              }
              while (v64 != v65);
              v111 = v172[0];
              swift_bridgeObjectRelease();
              goto LABEL_102;
            }
            goto LABEL_110;
          }
        }
        else
        {
          v64 = *(_QWORD *)((v63 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v64)
            goto LABEL_24;
        }
        swift_bridgeObjectRelease();
        v111 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v111 = 0;
      }
LABEL_102:
      v172[0] = v111;
      LOBYTE(v168) = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721D58);
      sub_1A45ADB78(&qword_1EE721D60, &qword_1EE721D58, (uint64_t (*)(void))sub_1A449CD34);
      v140 = v162;
      v141 = v161;
      sub_1A4691890();
      (*(void (**)(char *, uint64_t))(v160 + 8))(v141, v140);
      return swift_bridgeObjectRelease();
    case 3uLL:
      v74 = objc_msgSend(v2, sel_startingDueDate);
      if (v74)
      {
        v75 = v74;
        sub_1A4690084();

        v76 = sub_1A46900B4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v24, 0, 1, v76);
      }
      else
      {
        v124 = sub_1A46900B4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v24, 1, 1, v124);
      }
      v97 = v161;
      v96 = v162;
      LOBYTE(v172[0]) = 3;
      sub_1A449CC30();
      sub_1A4691890();
      v118 = (uint64_t)v24;
      goto LABEL_85;
    case 4uLL:
      v43 = objc_msgSend(v2, sel_endingDueDate);
      if (v43)
      {
        v44 = v43;
        sub_1A4690084();

        v45 = sub_1A46900B4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v22, 0, 1, v45);
      }
      else
      {
        v117 = sub_1A46900B4();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(v22, 1, 1, v117);
      }
      v97 = v161;
      v96 = v162;
      LOBYTE(v172[0]) = 4;
      sub_1A449CC30();
      sub_1A4691890();
      v118 = (uint64_t)v22;
      goto LABEL_85;
    case 5uLL:
      LOBYTE(v168) = 5;
      v78 = v161;
      v77 = v162;
      sub_1A4691800();
      ObjectType = (Class)v2;
      v92 = objc_msgSend(v2, sel_startingDueDate);
      if (v92)
      {
        v93 = v92;
        v94 = (uint64_t)v155;
        sub_1A4690084();

        v95 = sub_1A46900B4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 0, 1, v95);
      }
      else
      {
        v129 = sub_1A46900B4();
        v94 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v155, 1, 1, v129);
      }
      v130 = v159;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
      sub_1A449CC30();
      sub_1A4691908();
      v131 = v94;
      if (!v130)
      {
        sub_1A449C92C(v94);
        v132 = -[objc_class endingDueDate](ObjectType, sel_endingDueDate);
        if (v132)
        {
          v133 = v132;
          v134 = v152;
          sub_1A4690084();

          v135 = sub_1A46900B4();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v134, 0, 1, v135);
        }
        else
        {
          v138 = sub_1A46900B4();
          v134 = v152;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 56))(v152, 1, 1, v138);
        }
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
        sub_1A4691908();
        v131 = (uint64_t)v134;
      }
      sub_1A449C92C(v131);
      goto LABEL_95;
    case 6uLL:
      objc_msgSend(v2, sel_completed);
      LOBYTE(v172[0]) = 6;
      v97 = v161;
      v96 = v162;
      sub_1A4691860();
      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v97, v96);
    case 7uLL:
      LOBYTE(v168) = 7;
      v78 = v161;
      v77 = v162;
      sub_1A4691800();
      v79 = objc_msgSend(v2, sel_text);
      if (v79)
      {
        v80 = v79;
        v81 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v83 = v82;

      }
      else
      {
        v81 = 0;
        v83 = 0;
      }
      v125 = v159;
      v168 = v81;
      v169 = v83;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
      sub_1A45ADC58();
      sub_1A4691908();
      if (v125)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v126 = objc_msgSend(v2, sel_textMatching);
        if ((unint64_t)v126 >= 4)
          goto LABEL_115;
        LOBYTE(v168) = (_BYTE)v126;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
        sub_1A45ADCB4();
        sub_1A4691908();
      }
LABEL_95:
      (*(void (**)(char *, uint64_t))(v160 + 8))(v78, v77);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v172);
    case 8uLL:
      v102 = objc_msgSend(v2, sel_descriptors);
      if (v102)
      {
        v103 = v102;
        sub_1A444AA40(0, &qword_1EE721D18);
        v104 = sub_1A4690BA0();

        if (v104 >> 62)
        {
          swift_bridgeObjectRetain();
          v105 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          v56 = v162;
          if (v105)
            goto LABEL_48;
        }
        else
        {
          v105 = *(_QWORD *)((v104 & 0xFFFFFFFFFFFFF8) + 0x10);
          v56 = v162;
          if (v105)
          {
LABEL_48:
            v172[0] = MEMORY[0x1E0DEE9D8];
            sub_1A469153C();
            if (v105 < 0)
              goto LABEL_111;
            v106 = 0;
            do
            {
              if ((v104 & 0xC000000000000001) != 0)
                v107 = (id)MEMORY[0x1A859ECE0](v106, v104);
              else
                v107 = *(id *)(v104 + 8 * v106 + 32);
              v108 = v107;
              ++v106;
              v109 = ObjectType;
              v170.receiver = objc_allocWithZone(ObjectType);
              v170.super_class = v109;
              objc_msgSendSuper2(&v170, sel_initWithReminderPredicateDescriptor_, v108);

              sub_1A4691518();
              sub_1A4691548();
              sub_1A4691554();
              sub_1A4691524();
            }
            while (v105 != v106);
            v112 = v172[0];
            swift_bridgeObjectRelease();
            goto LABEL_105;
          }
        }
        swift_bridgeObjectRelease();
        v112 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v112 = 0;
        v56 = v162;
      }
LABEL_105:
      v172[0] = v112;
      v139 = 8;
      goto LABEL_106;
    case 9uLL:
      v52 = objc_msgSend(v2, sel_descriptors);
      if (v52)
      {
        v53 = v52;
        sub_1A444AA40(0, &qword_1EE721D18);
        v54 = sub_1A4690BA0();

        if (v54 >> 62)
        {
          swift_bridgeObjectRetain();
          v55 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          v56 = v162;
          if (v55)
            goto LABEL_15;
        }
        else
        {
          v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
          v56 = v162;
          if (v55)
          {
LABEL_15:
            v172[0] = MEMORY[0x1E0DEE9D8];
            sub_1A469153C();
            if (v55 < 0)
            {
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              if (qword_1EE71C178 != -1)
                swift_once();
              v143 = v151;
              v144 = __swift_project_value_buffer(v151, (uint64_t)qword_1EE721CD8);
              (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v6, v144, v143);
              v145 = MEMORY[0x1E0DEE9D8];
              sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
              sub_1A443CDB8(v145);
              sub_1A4510F48((uint64_t)"unknown reminder predicate descriptor type", 42, 2);
              __break(1u);
LABEL_115:
              if (qword_1EE71C178 != -1)
                swift_once();
              v146 = v151;
              v147 = __swift_project_value_buffer(v151, (uint64_t)qword_1EE721CD8);
              (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v149, v147, v146);
              v148 = MEMORY[0x1E0DEE9D8];
              sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
              sub_1A443CDB8(v148);
              sub_1A4510F48((uint64_t)"unknown text matching", 21, 2);
              __break(1u);
              JUMPOUT(0x1A45AD0A0);
            }
            v57 = 0;
            do
            {
              if ((v54 & 0xC000000000000001) != 0)
                v58 = (id)MEMORY[0x1A859ECE0](v57, v54);
              else
                v58 = *(id *)(v54 + 8 * v57 + 32);
              v59 = v58;
              ++v57;
              v60 = ObjectType;
              v171.receiver = objc_allocWithZone(ObjectType);
              v171.super_class = v60;
              objc_msgSendSuper2(&v171, sel_initWithReminderPredicateDescriptor_, v59);

              sub_1A4691518();
              sub_1A4691548();
              sub_1A4691554();
              sub_1A4691524();
            }
            while (v55 != v57);
            v110 = v172[0];
            swift_bridgeObjectRelease();
            goto LABEL_99;
          }
        }
        swift_bridgeObjectRelease();
        v110 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        v110 = 0;
        v56 = v162;
      }
LABEL_99:
      v172[0] = v110;
      v139 = 9;
LABEL_106:
      LOBYTE(v168) = v139;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721D30);
      sub_1A45ADB78(&qword_1EE721D38, &qword_1EE721D30, (uint64_t (*)(void))sub_1A45ADBDC);
      v142 = v161;
      sub_1A4691890();
      (*(void (**)(char *, uint64_t))(v160 + 8))(v142, v56);
      return swift_bridgeObjectRelease();
    case 0xAuLL:
      v98 = objc_msgSend(v2, sel_startingDueDate);
      if (v98)
      {
        v99 = v98;
        v100 = v154;
        sub_1A4690084();

        v101 = sub_1A46900B4();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v100, 0, 1, v101);
      }
      else
      {
        v136 = sub_1A46900B4();
        v100 = v154;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v154, 1, 1, v136);
      }
      v97 = v161;
      v96 = v162;
      LOBYTE(v172[0]) = 10;
      sub_1A449CC30();
      sub_1A4691890();
      v118 = (uint64_t)v100;
LABEL_85:
      sub_1A449C92C(v118);
      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v97, v96);
    case 0xBuLL:
      v39 = objc_msgSend(v2, sel_endingDueDate);
      if (v39)
      {
        v40 = v39;
        v41 = (uint64_t)v156;
        sub_1A4690084();

        v42 = sub_1A46900B4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v41, 0, 1, v42);
      }
      else
      {
        v113 = sub_1A46900B4();
        v41 = (uint64_t)v156;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v156, 1, 1, v113);
      }
      v114 = v161;
      v115 = v162;
      LOBYTE(v172[0]) = 11;
      sub_1A449CC30();
      sub_1A4691890();
      sub_1A449C92C(v41);
      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v114, v115);
    case 0xCuLL:
      LOBYTE(v168) = 12;
      v47 = v161;
      v46 = v162;
      sub_1A4691800();
      ObjectType = (Class)v2;
      v48 = objc_msgSend(v2, sel_startingDueDate);
      if (v48)
      {
        v49 = v48;
        v50 = (uint64_t)v157;
        sub_1A4690084();

        v51 = sub_1A46900B4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v50, 0, 1, v51);
      }
      else
      {
        v119 = sub_1A46900B4();
        v50 = (uint64_t)v157;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v157, 1, 1, v119);
      }
      v120 = v159;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
      sub_1A449CC30();
      sub_1A4691908();
      if (!v120)
      {
        sub_1A449C92C(v50);
        v121 = -[objc_class endingDueDate](ObjectType, sel_endingDueDate);
        if (v121)
        {
          v122 = v121;
          v50 = (uint64_t)v153;
          sub_1A4690084();

          v123 = sub_1A46900B4();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v50, 0, 1, v123);
        }
        else
        {
          v137 = sub_1A46900B4();
          v50 = (uint64_t)v153;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v153, 1, 1, v137);
        }
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v172, v173);
        sub_1A4691908();
      }
      sub_1A449C92C(v50);
      (*(void (**)(char *, uint64_t))(v160 + 8))(v47, v46);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v172);
    default:
      goto LABEL_112;
  }
}

id REMReminderPredicateDescriptor.codable.getter()
{
  uint64_t v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)type metadata accessor for REMReminderPredicateDescriptor_Codable();
  v3.receiver = objc_allocWithZone(v1);
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, sel_initWithReminderPredicateDescriptor_, v0);
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional __swiftcall REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional __swiftcall REMReminderPredicateDescriptor_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional __swiftcall REMReminderPredicateDescriptor_Codable.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 13;
  return (ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional)intValue;
}

uint64_t REMReminderPredicateDescriptor_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45AD1E8 + 4 * byte_1A46A63BA[*v0]))(0x44497473696CLL, 0xE600000000000000);
}

unint64_t sub_1A45AD1E8()
{
  return 0xD000000000000010;
}

uint64_t sub_1A45AD248()
{
  return 0x4265746144657564;
}

uint64_t sub_1A45AD26C()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1A45AD288()
{
  return 0x656C746974;
}

uint64_t sub_1A45AD29C()
{
  return 6581857;
}

uint64_t sub_1A45AD2AC()
{
  return 29295;
}

unint64_t sub_1A45AD2B8()
{
  return 0xD000000000000015;
}

unint64_t sub_1A45AD2D4()
{
  return 0xD000000000000014;
}

void sub_1A45AD2EC()
{
  JUMPOUT(0x1A45AD300);
}

uint64_t REMReminderPredicateDescriptor_Codable.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45AD338 + 4 * byte_1A46A63C7[*v0]))(0x44497473696CLL, 0xE600000000000000);
}

unint64_t sub_1A45AD338()
{
  return 0xD000000000000010;
}

uint64_t sub_1A45AD398()
{
  return 0x4265746144657564;
}

uint64_t sub_1A45AD3BC()
{
  return 0x6574656C706D6F63;
}

uint64_t sub_1A45AD3D8()
{
  return 0x656C746974;
}

uint64_t sub_1A45AD3EC()
{
  return 6581857;
}

uint64_t sub_1A45AD3FC()
{
  return 29295;
}

unint64_t sub_1A45AD408()
{
  return 0xD000000000000015;
}

unint64_t sub_1A45AD424()
{
  return 0xD000000000000014;
}

void sub_1A45AD43C()
{
  JUMPOUT(0x1A45AD450);
}

uint64_t sub_1A45AD45C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A4668C90(*a1, *a2);
}

uint64_t sub_1A45AD468()
{
  sub_1A4691C8C();
  REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45AD4CC()
{
  REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45AD51C()
{
  sub_1A4691C8C();
  REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional sub_1A45AD57C(Swift::String *a1)
{
  return REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A45AD588@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMReminderPredicateDescriptor_Codable.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional sub_1A45AD5B0@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMReminderPredicateDescriptor_Codable::CodingKeys_optional result;
  char v5;

  result.value = REMReminderPredicateDescriptor_Codable.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A45AD5E4(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1A45AD5F0()
{
  sub_1A45ABAE8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45AD618()
{
  sub_1A45ABAE8();
  return sub_1A4691DC4();
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::TextMatching_optional __swiftcall REMReminderPredicateDescriptor_Codable.TextMatching.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMReminderPredicateDescriptor_Codable::TextMatching_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMReminderPredicateDescriptor_Codable.TextMatching.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45AD6C4 + 4 * byte_1A46A63D4[*v0]))(0x7463617865, 0xE500000000000000);
}

uint64_t sub_1A45AD6C4()
{
  return 0x736E6961746E6F63;
}

uint64_t sub_1A45AD6DC()
{
  return 0x6957736E69676562;
}

uint64_t sub_1A45AD6F8()
{
  return 0x6874695773646E65;
}

void sub_1A45AD710(char *a1)
{
  sub_1A4668B34(*a1);
}

void sub_1A45AD71C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45AD764()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A45AD7D8()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45AD810()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A45AD870()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45AD8B4()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMReminderPredicateDescriptor_Codable::TextMatching_optional sub_1A45AD928(Swift::String *a1)
{
  return REMReminderPredicateDescriptor_Codable.TextMatching.init(rawValue:)(*a1);
}

uint64_t sub_1A45AD934()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45AD960 + 4 * byte_1A46A63E4[*v0]))();
}

void sub_1A45AD960(_QWORD *a1@<X8>)
{
  *a1 = 0x736E6961746E6F63;
  a1[1] = 0xE800000000000000;
}

void sub_1A45AD97C(_QWORD *a1@<X8>)
{
  *a1 = 0x6957736E69676562;
  a1[1] = 0xEA00000000006874;
}

void sub_1A45AD99C(_QWORD *a1@<X8>)
{
  *a1 = 0x6874695773646E65;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1A45AD9B8()
{
  sub_1A45AE05C();
  return sub_1A4690B70();
}

uint64_t sub_1A45ADA14()
{
  sub_1A45AE05C();
  return sub_1A4690B34();
}

id REMReminderPredicateDescriptor_Codable.__allocating_init(reminderPredicateDescriptor:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithReminderPredicateDescriptor_, a1);

  return v3;
}

void REMReminderPredicateDescriptor_Codable.init(reminderPredicateDescriptor:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id REMReminderPredicateDescriptor_Codable.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void (**sub_1A45ADB30@<X0>(_QWORD *a1@<X0>, void (***a2)(char *, uint64_t)@<X8>))(char *, uint64_t)
{
  uint64_t v2;
  void (**result)(char *, uint64_t);

  result = REMReminderPredicateDescriptor_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A45ADB58(_QWORD *a1)
{
  return REMReminderPredicateDescriptor_Codable.encode(to:)(a1);
}

uint64_t sub_1A45ADB78(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A45ADBDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EE721D40;
  if (!qword_1EE721D40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721D00);
    v3 = sub_1A450C498(&qword_1EE721D48, v2, (uint64_t (*)(uint64_t))type metadata accessor for REMReminderPredicateDescriptor_Codable, (uint64_t)&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_1EE721D40);
  }
  return result;
}

unint64_t sub_1A45ADC58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2439C8;
  if (!qword_1ED2439C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2439C0);
    v2 = MEMORY[0x1E0DEA970];
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2439C8);
  }
  return result;
}

unint64_t sub_1A45ADCB4()
{
  unint64_t result;

  result = qword_1EE721D50;
  if (!qword_1EE721D50)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.TextMatching, &type metadata for REMReminderPredicateDescriptor_Codable.TextMatching);
    atomic_store(result, (unint64_t *)&qword_1EE721D50);
  }
  return result;
}

unint64_t sub_1A45ADCF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE721D68;
  if (!qword_1EE721D68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED23E4D0);
    v2 = sub_1A450C498(&qword_1ED243370, 255, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE721D68);
  }
  return result;
}

unint64_t sub_1A45ADD7C()
{
  unint64_t result;

  result = qword_1EE721D70;
  if (!qword_1EE721D70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.CodingKeys, &type metadata for REMReminderPredicateDescriptor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721D70);
  }
  return result;
}

unint64_t sub_1A45ADDC4()
{
  unint64_t result;

  result = qword_1EE721D78;
  if (!qword_1EE721D78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.CodingKeys, &type metadata for REMReminderPredicateDescriptor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721D78);
  }
  return result;
}

unint64_t sub_1A45ADE0C()
{
  unint64_t result;

  result = qword_1EE721D80;
  if (!qword_1EE721D80)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.CodingKeys, &type metadata for REMReminderPredicateDescriptor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721D80);
  }
  return result;
}

unint64_t sub_1A45ADE54()
{
  unint64_t result;

  result = qword_1EE721D88;
  if (!qword_1EE721D88)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.TextMatching, &type metadata for REMReminderPredicateDescriptor_Codable.TextMatching);
    atomic_store(result, (unint64_t *)&qword_1EE721D88);
  }
  return result;
}

uint64_t method lookup function for REMReminderPredicateDescriptor_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMReminderPredicateDescriptor_Codable.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of REMReminderPredicateDescriptor_Codable.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t storeEnumTagSinglePayload for REMReminderPredicateDescriptor_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A45ADF10 + 4 * byte_1A46A63ED[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A45ADF44 + 4 * byte_1A46A63E8[v4]))();
}

uint64_t sub_1A45ADF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45ADF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45ADF54);
  return result;
}

uint64_t sub_1A45ADF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45ADF68);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A45ADF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45ADF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMReminderPredicateDescriptor_Codable.CodingKeys()
{
  return &type metadata for REMReminderPredicateDescriptor_Codable.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMReminderPredicateDescriptor_Codable.TextMatching(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A45ADFDC + 4 * byte_1A46A63F7[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A45AE010 + 4 * byte_1A46A63F2[v4]))();
}

uint64_t sub_1A45AE010(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45AE018(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45AE020);
  return result;
}

uint64_t sub_1A45AE02C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45AE034);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A45AE038(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45AE040(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMReminderPredicateDescriptor_Codable.TextMatching()
{
  return &type metadata for REMReminderPredicateDescriptor_Codable.TextMatching;
}

unint64_t sub_1A45AE05C()
{
  unint64_t result;

  result = qword_1EE721DB8;
  if (!qword_1EE721DB8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMReminderPredicateDescriptor_Codable.TextMatching, &type metadata for REMReminderPredicateDescriptor_Codable.TextMatching);
    atomic_store(result, (unint64_t *)&qword_1EE721DB8);
  }
  return result;
}

uint64_t sub_1A45AE0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721DC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721DC0);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void Publisher.combiningDebounce<A>(for:scheduler:options:transform:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v9 = v8;
  v36 = a7;
  v37 = a4;
  v38 = a5;
  v33 = a2;
  v34 = a3;
  v32 = a1;
  v35 = a8;
  swift_getAssociatedTypeWitness();
  v11 = sub_1A46911A0();
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - v13;
  v15 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v20 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v22 = (char *)&v29 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v9;
  v28 = v27;
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v32, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v33, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v14, v34, v31);
  Publishers.CombiningDebounce.init(upstream:dueTime:scheduler:options:transform:)((uint64_t)v24, v28, v35);
}

uint64_t sub_1A45AE33C()
{
  return swift_retain();
}

void Publishers.CombiningDebounce.init(upstream:dueTime:scheduler:options:transform:)(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.CombiningDebounce();
}

uint64_t sub_1A45AE3D4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v7 = v1 + a1[13];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v7, v5, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v1 + a1[14], v4, v3);
  v9 = v1 + a1[15];
  swift_getAssociatedTypeWitness();
  v10 = sub_1A46911A0();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, v2, v10);
  v12 = (_QWORD *)(v1 + a1[16]);
  *v12 = v13;
  v12[1] = v14;
  return result;
}

void type metadata accessor for Publishers.CombiningDebounce()
{
  JUMPOUT(0x1A859FF40);
}

uint64_t Publishers.CombiningDebounce.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.CombiningDebounce.dueTime.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 52);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t Publishers.CombiningDebounce.scheduler.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t Publishers.CombiningDebounce.options.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 60);
  swift_getAssociatedTypeWitness();
  v5 = sub_1A46911A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Publishers.CombiningDebounce.transform.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 64));
  swift_retain();
  return v2;
}

uint64_t Publishers.CombiningDebounce.receive<A>(subscriber:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t TupleTypeMetadata2;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;

  v93 = a4;
  v119 = a3;
  v105 = a1;
  v5 = a2[2];
  v112 = a2[4];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v114 = a2;
  v7 = a2[5];
  v8 = a2[3];
  swift_getAssociatedTypeWitness();
  v98 = AssociatedTypeWitness;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_1A46911A0();
  v104 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v115 = (char *)&v79 - v11;
  v109 = v5;
  v113 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v10);
  v85 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = v9;
  v13 = sub_1A469039C();
  v101 = *(_QWORD *)(v13 - 8);
  v90 = v13;
  MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v79 - v14;
  v91 = MEMORY[0x1A85A0000](MEMORY[0x1E0C95950], v13);
  v15 = sub_1A46903A8();
  v103 = *(_QWORD *)(v15 - 8);
  v96 = v15;
  MEMORY[0x1E0C80A78](v15);
  v87 = (char *)&v79 - v16;
  v97 = MEMORY[0x1A85A0000](MEMORY[0x1E0C959B8], v15);
  v17 = sub_1A4690378();
  v102 = *(_QWORD *)(v17 - 8);
  v94 = v17;
  MEMORY[0x1E0C80A78](v17);
  v92 = (char *)&v79 - v18;
  v95 = MEMORY[0x1A85A0000](MEMORY[0x1E0C95708], v17);
  v120 = v17;
  v121 = v8;
  v122 = v95;
  v123 = v7;
  v106 = v7;
  v99 = sub_1A46903F0();
  v100 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v89 = (char *)&v79 - v19;
  swift_getAssociatedConformanceWitness();
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v107 = v20;
  v83 = *(_QWORD *)(v21 + 64);
  v108 = v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v82 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v79 - v25;
  v111 = (char *)&v79 - v25;
  v27 = *(_QWORD *)(v8 - 8);
  v118 = v8;
  v28 = *(_QWORD *)(v27 + 64);
  v29 = MEMORY[0x1E0C80A78](v24);
  v30 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v79 - v31;
  v33 = v114;
  v34 = v110;
  v35 = v110 + *((int *)v114 + 14);
  v36 = *(void (**)(char *, uint64_t))(v27 + 16);
  v84 = (char *)&v79 - v31;
  v36((char *)&v79 - v31, v35);
  v37 = v34 + *((int *)v33 + 13);
  v79 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v79(v26, v37, v20);
  v38 = (uint64_t *)(v34 + *((int *)v33 + 16));
  v40 = *v38;
  v39 = v38[1];
  v81 = v40;
  v80 = v39;
  v41 = v85;
  v42 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 16))(v85, v34, v109);
  v43 = v32;
  v44 = v118;
  ((void (*)(char *, char *, uint64_t))v36)(v30, v43, v118);
  v45 = *(unsigned __int8 *)(v27 + 80);
  v86 = v27;
  v46 = (v45 + 64) & ~v45;
  v47 = (char *)swift_allocObject();
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  v48 = v44;
  v49 = v112;
  *((_QWORD *)v47 + 4) = v119;
  *((_QWORD *)v47 + 5) = v49;
  v50 = v106;
  v51 = v93;
  *((_QWORD *)v47 + 6) = v106;
  *((_QWORD *)v47 + 7) = v51;
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(&v47[v46], v30, v48);
  v52 = v49;
  sub_1A46904F8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v41, v42);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(v115, 1, 1);
  v53 = v82;
  v54 = v107;
  v79(v82, (uint64_t)v111, v107);
  v55 = v108;
  v56 = (*(unsigned __int8 *)(v108 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  v57 = (v83 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = (char *)swift_allocObject();
  v59 = v118;
  *((_QWORD *)v58 + 2) = v42;
  *((_QWORD *)v58 + 3) = v59;
  *((_QWORD *)v58 + 4) = v119;
  *((_QWORD *)v58 + 5) = v52;
  *((_QWORD *)v58 + 6) = v50;
  *((_QWORD *)v58 + 7) = v51;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v58[v56], v53, v54);
  v60 = &v58[v57];
  v61 = v80;
  *(_QWORD *)v60 = v81;
  *((_QWORD *)v60 + 1) = v61;
  swift_retain();
  v62 = v87;
  v64 = v115;
  v63 = v116;
  v65 = v90;
  v66 = v117;
  sub_1A4690510();
  swift_release();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v64, v63);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v66, v65);
  v67 = (_QWORD *)swift_allocObject();
  v69 = v118;
  v68 = v119;
  v67[2] = v109;
  v67[3] = v69;
  v70 = v112;
  v67[4] = v68;
  v67[5] = v70;
  v67[6] = v106;
  v67[7] = v51;
  v71 = v92;
  v72 = v96;
  sub_1A46904D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v62, v72);
  v73 = v111;
  v74 = v89;
  v75 = v84;
  v76 = v94;
  sub_1A4690564();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v71, v76);
  v77 = v99;
  sub_1A46903E4();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v74, v77);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v73, v107);
  return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v75, v69);
}

uint64_t sub_1A45AEE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  sub_1A469057C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 56))(a2, 0, 1, TupleTypeMetadata2);
}

uint64_t sub_1A45AEF30()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1A45AEF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A45AEE44(a1, a2);
}

void sub_1A45AEFAC(void (*a1)(uint64_t, char *, uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, char *);
  char *v73;
  char *v74;
  uint64_t TupleTypeMetadata2;
  char *v76;
  char *v77;
  char *v78;
  uint64_t AssociatedConformanceWitness;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;

  v71 = a5;
  v72 = a4;
  v83 = a3;
  v84 = a1;
  v89 = a2;
  v87 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = swift_getAssociatedTypeWitness();
  v81 = *(_QWORD *)(v7 - 8);
  v82 = v7;
  MEMORY[0x1E0C80A78](v7);
  v78 = (char *)&v71 - v8;
  v9 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v74 = (char *)&v71 - v11;
  v91 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v80 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v77 = (char *)&v71 - v15;
  v90 = *(_QWORD *)(v9 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v76 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v85 = (char *)&v71 - v18;
  v88 = (void (*)(char *, char *))sub_1A4690318();
  v19 = *((_QWORD *)v88 - 1);
  MEMORY[0x1E0C80A78](v88);
  v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = v9;
  v22 = swift_getTupleTypeMetadata2();
  v23 = sub_1A46911A0();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&v71 - v29;
  v31 = *(_QWORD *)(v22 - 8);
  v32 = MEMORY[0x1E0C80A78](v28);
  v73 = (char *)&v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v93 = (char *)&v71 - v34;
  v35 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  v35(v30, v89, v23);
  v86 = v31;
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v36(v30, 1, v22) != 1)
  {
    v37 = *(int *)(v22 + 48);
    v38 = &v93[v37];
    v39 = &v30[v37];
    v88 = *(void (**)(char *, char *))(v90 + 32);
    v88(v93, v30);
    v40 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
    v89 = v38;
    v40(v38, v39, AssociatedTypeWitness);
    v35(v27, (char *)v84, v23);
    if (v36(v27, 1, v22) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      v41 = v87;
      v42 = (char *)(v87 + *(int *)(v22 + 48));
      ((void (*)(uint64_t, char *, uint64_t))v88)(v87, v93, v92);
      v40(v42, v89, AssociatedTypeWitness);
    }
    else
    {
      v43 = &v27[*(int *)(v22 + 48)];
      v45 = v74;
      v44 = TupleTypeMetadata2;
      v46 = v40;
      v47 = &v74[*(int *)(TupleTypeMetadata2 + 48)];
      v48 = v92;
      v49 = (void (*)(char *, char *, uint64_t))v88;
      ((void (*)(char *, char *, uint64_t))v88)(v74, v27, v92);
      v46(v47, v43, AssociatedTypeWitness);
      v50 = &v45[*(int *)(v44 + 48)];
      v49(v85, v45, v48);
      v51 = v77;
      v46(v77, v50, AssociatedTypeWitness);
      v52 = v73;
      v53 = &v73[*(int *)(v22 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v73, v93, v48);
      (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v53, v89, AssociatedTypeWitness);
      v54 = v76;
      v49(v76, v52, v48);
      v55 = v80;
      v84 = (void (*)(uint64_t, char *, uint64_t))v46;
      v46(v80, v53, AssociatedTypeWitness);
      v56 = v78;
      sub_1A46911E8();
      v57 = v82;
      swift_getAssociatedConformanceWitness();
      LOBYTE(v53) = sub_1A469084C();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v56, v57);
      if ((v53 & 1) != 0)
      {
        v58 = v54;
        v41 = v87;
        v59 = v87 + *(int *)(v22 + 48);
        v60 = v85;
        v72(v85, v58);
        v61 = *(void (**)(char *, uint64_t))(v90 + 8);
        v62 = v92;
        v61(v58, v92);
        (*(void (**)(char *, uint64_t))(v91 + 8))(v51, AssociatedTypeWitness);
        v61(v60, v62);
        v63 = v86;
        (*(void (**)(char *, uint64_t))(v86 + 8))(v93, v22);
        v84(v59, v55, AssociatedTypeWitness);
LABEL_8:
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v41, 0, 1, v22);
        return;
      }
      v64 = *(void (**)(char *, uint64_t))(v91 + 8);
      v64(v55, AssociatedTypeWitness);
      v65 = *(void (**)(char *, uint64_t))(v90 + 8);
      v66 = v92;
      v65(v54, v92);
      v64(v51, AssociatedTypeWitness);
      v65(v85, v66);
      v41 = v87;
      v67 = v87 + *(int *)(v22 + 48);
      ((void (*)(uint64_t, char *, uint64_t))v88)(v87, v93, v66);
      v84(v67, v89, AssociatedTypeWitness);
    }
    v63 = v86;
    goto LABEL_8;
  }
  v68 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v23);
  if (qword_1EE71C180 != -1)
    swift_once();
  v69 = __swift_project_value_buffer(v68, (uint64_t)qword_1EE721DC0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v69, v68);
  v70 = MEMORY[0x1E0DEE9D8];
  sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
  sub_1A443CDB8(v70);
  sub_1A4510F48((uint64_t)"Subsequent input is unexpectedly nil", 36, 2);
  __break(1u);
}

uint64_t sub_1A45AF6B0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  swift_release();
  return swift_deallocObject();
}

void sub_1A45AF794(void (*a1)(uint64_t, char *, uint64_t)@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1A45AEFAC(a1, a2, v3 + v8, *(void (**)(char *, char *))v9, *(_QWORD *)(v9 + 8), a3);
}

uint64_t sub_1A45AF8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v14 - v9, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v10, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a2, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    v12 = &v10[*(int *)(TupleTypeMetadata2 + 48)];
    v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v10, AssociatedTypeWitness);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v12, v5);
  }
}

uint64_t sub_1A45AFA38()
{
  return swift_deallocObject();
}

uint64_t sub_1A45AFA48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A45AF8A0(a1, a2);
}

uint64_t sub_1A45AFA58()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A45AFA78(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return Publishers.CombiningDebounce.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1A45AFA8C()
{
  uint64_t AssociatedTypeWitness;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      AssociatedTypeWitness = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_getAssociatedTypeWitness();
        AssociatedTypeWitness = sub_1A46911A0();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_1A45AFC04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void *v32;
  const void *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  size_t __n;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v3 = *(_QWORD *)(a3 + 24);
  v45 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(v45 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v40 = v5 + v8;
  v10 = *(_QWORD *)(v3 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v41 = *(_QWORD *)(v7 + 64) + v11;
  v12 = (v41 + ((v5 + v9) & ~v9)) & ~(unint64_t)v11;
  v42 = v10;
  v43 = AssociatedTypeWitness;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = swift_getAssociatedTypeWitness();
  v15 = v4;
  v44 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = v13 + v17;
  if (*(_DWORD *)(v16 + 84))
    v19 = *(_QWORD *)(v16 + 64);
  else
    v19 = *(_QWORD *)(v16 + 64) + 1;
  v20 = v8 | *(_DWORD *)(v15 + 80) & 0xF8 | v11 | v17;
  if (v20 > 7
    || ((v11 | *(_DWORD *)(v16 + 80) | *(_DWORD *)(v15 + 80) | v8) & 0x100000) != 0
    || ((v19 + 7 + ((v13 + v17 + v12) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v23 = *a2;
    *a1 = *a2;
    v27 = (uint64_t *)(v23 + (((v20 | 7) + 16) & ~(unint64_t)(v20 | 7)));
  }
  else
  {
    __n = v19;
    v39 = v19 + 7;
    v24 = ~(unint64_t)v8;
    v25 = ~(unint64_t)v11;
    v26 = ~v17;
    v27 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v45);
    v28 = ((unint64_t)a1 + v40) & ~v9;
    v29 = ((unint64_t)a2 + v40) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v28, v29, v43);
    v30 = (v28 + v41) & v25;
    v31 = (v29 + v41) & v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v42 + 16))(v30, v31, v3);
    v32 = (void *)((v30 + v18) & v26);
    v33 = (const void *)((v31 + v18) & v26);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v33, 1, v44))
    {
      memcpy(v32, v33, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v32, v33, v44);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v32, 0, 1, v44);
    }
    v34 = (_QWORD *)(((unint64_t)v33 + v39) & 0xFFFFFFFFFFFFFFF8);
    v35 = v34[1];
    v36 = (_QWORD *)(((unint64_t)v32 + v39) & 0xFFFFFFFFFFFFFFF8);
    *v36 = *v34;
    v36[1] = v35;
  }
  swift_retain();
  return v27;
}

uint64_t sub_1A45AFEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = (v5 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, AssociatedTypeWitness);
  v10 = *(_QWORD *)(v6 - 8);
  v11 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v11, v6);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = (v11 + v12 + *(unsigned __int8 *)(v14 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v15, v13);
  return swift_release();
}

uint64_t sub_1A45B003C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11 + a1) & ~v11;
  v13 = (v7 + v11 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12, v13, AssociatedTypeWitness);
  v14 = *(_QWORD *)(v8 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v17, v18, v8);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)((v19 + v22 + v17) & ~v22);
  v24 = (const void *)((v19 + v22 + v18) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v24, 1, v20))
  {
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
    if (v25)
      v27 = *(_QWORD *)(v21 + 64);
    else
      v27 = v26 + 1;
    memcpy(v23, v24, v27);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v23, v24, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
  }
  if (v25)
    v28 = v26;
  else
    v28 = v26 + 1;
  v29 = (uint64_t)v23 + v28 + 7;
  v30 = (uint64_t *)(((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  v32 = *v30;
  v31 = v30[1];
  v33 = (_QWORD *)(v29 & 0xFFFFFFFFFFFFFFF8);
  *v33 = v32;
  v33[1] = v31;
  swift_retain();
  return a1;
}

uint64_t sub_1A45B0238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  size_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11 + a1) & ~v11;
  v13 = (v7 + v11 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v12, v13, AssociatedTypeWitness);
  v14 = *(_QWORD *)(v8 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 24))(v17, v18, v8);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)((v19 + v22 + v17) & ~v22);
  v24 = (void *)((v19 + v22 + v18) & ~v22);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v18) = v25(v23, 1, v20);
  v26 = v25(v24, 1, v20);
  if ((_DWORD)v18)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v23, v24, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v23, v24, v20);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  }
  if (*(_DWORD *)(v21 + 84))
    v27 = *(_QWORD *)(v21 + 64);
  else
    v27 = *(_QWORD *)(v21 + 64) + 1;
  memcpy(v23, v24, v27);
LABEL_10:
  if (*(_DWORD *)(v21 + 84))
    v28 = *(_QWORD *)(v21 + 64);
  else
    v28 = *(_QWORD *)(v21 + 64) + 1;
  v29 = (_QWORD *)(((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  v30 = (_QWORD *)(((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1A45B0484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  uint64_t v26;
  size_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11 + a1) & ~v11;
  v13 = (v7 + v11 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v12, v13, AssociatedTypeWitness);
  v14 = *(_QWORD *)(v8 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v17, v18, v8);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)((v19 + v22 + v17) & ~v22);
  v24 = (const void *)((v19 + v22 + v18) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v24, 1, v20))
  {
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
    if (v25)
      v27 = *(_QWORD *)(v21 + 64);
    else
      v27 = v26 + 1;
    memcpy(v23, v24, v27);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v23, v24, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
  }
  if (v25)
    v28 = v26;
  else
    v28 = v26 + 1;
  *(_OWORD *)(((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A45B067C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  size_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(a3 + 24);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = (v7 + v11 + a1) & ~v11;
  v13 = (v7 + v11 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v12, v13, AssociatedTypeWitness);
  v14 = *(_QWORD *)(v8 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = (v16 + v12) & ~v15;
  v18 = (v16 + v13) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 40))(v17, v18, v8);
  v19 = *(_QWORD *)(v14 + 64);
  v20 = swift_getAssociatedTypeWitness();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)((v19 + v22 + v17) & ~v22);
  v24 = (void *)((v19 + v22 + v18) & ~v22);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  LODWORD(v18) = v25(v23, 1, v20);
  v26 = v25(v24, 1, v20);
  if ((_DWORD)v18)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v23, v24, v20);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v20);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v23, v24, v20);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  }
  if (*(_DWORD *)(v21 + 84))
    v27 = *(_QWORD *)(v21 + 64);
  else
    v27 = *(_QWORD *)(v21 + 64) + 1;
  memcpy(v23, v24, v27);
LABEL_10:
  if (*(_DWORD *)(v21 + 84))
    v28 = *(_QWORD *)(v21 + 64);
  else
    v28 = *(_QWORD *)(v21 + 64) + 1;
  *(_OWORD *)(((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1A45B08C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unsigned int v35;
  uint64_t AssociatedTypeWitness;
  uint64_t v37;
  unsigned int v38;

  v4 = *(_QWORD *)(a3 + 24);
  v37 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v37 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v38 = v6;
  if (v8 <= v6)
    v9 = v6;
  else
    v9 = *(_DWORD *)(v7 + 84);
  v10 = *(_QWORD *)(v4 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v9)
    v12 = v9;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14)
    v15 = v14 - 1;
  else
    v15 = 0;
  if (v15 <= v12)
    v16 = v12;
  else
    v16 = v15;
  if (v16 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  v17 = *(_QWORD *)(v13 + 64);
  if (!v14)
    ++v17;
  if (!a2)
    return 0;
  v18 = *(unsigned __int8 *)(v7 + 80);
  v19 = *(_QWORD *)(v5 + 64) + v18;
  v20 = *(_QWORD *)(v7 + 64);
  v21 = *(unsigned __int8 *)(v10 + 80);
  v22 = *(_QWORD *)(v10 + 64);
  v23 = *(unsigned __int8 *)(v13 + 80);
  v24 = v17 + 7;
  v25 = a1;
  if (v16 < a2)
  {
    if (((((v24 + ((v22 + v23 + ((v20 + v21 + (v19 & ~v18)) & ~v21)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v26 = 2;
    else
      v26 = a2 - v16 + 1;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v28 = v27;
    else
      v28 = 0;
    __asm { BR              X6 }
  }
  if (v38 == v16)
  {
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    v30 = v38;
    v31 = v37;
    return v29(v25, v30, v31);
  }
  v25 = (v19 + a1) & ~v18;
  if ((_DWORD)v8 == v16)
  {
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v30 = v8;
    v31 = AssociatedTypeWitness;
    return v29(v25, v30, v31);
  }
  v25 = (v25 + v20 + v21) & ~v21;
  if ((_DWORD)v11 == v16)
  {
    v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    v30 = v11;
    v31 = v4;
    return v29(v25, v30, v31);
  }
  v33 = (v25 + v22 + v23) & ~v23;
  if (v15 == v16)
  {
    if (v14 < 2)
      return 0;
    v35 = (*(uint64_t (**)(uint64_t))(v13 + 48))(v33);
    if (v35 >= 2)
      return v35 - 1;
    else
      return 0;
  }
  else
  {
    v34 = *(_QWORD *)((v24 + v33) & 0xFFFFFFFFFFFFF8);
    if (v34 >= 0xFFFFFFFF)
      LODWORD(v34) = -1;
    return (v34 + 1);
  }
}

void sub_1A45B0BC0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  int v25;
  unsigned int v26;

  v5 = *(_QWORD *)(a4 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v8 + 84) <= v7)
    v9 = v7;
  else
    v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v10 + 84) <= v9)
    v11 = v9;
  else
    v11 = *(_DWORD *)(v10 + 84);
  v12 = 0u;
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v14 = *(_DWORD *)(v13 + 84);
  if (v14)
    v15 = v14 - 1;
  else
    v15 = 0;
  if (v15 <= v11)
    v16 = v11;
  else
    v16 = v15;
  if (v16 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  v17 = *(unsigned __int8 *)(v8 + 80);
  v20 = *(unsigned __int8 *)(v10 + 80);
  v22 = *(unsigned __int8 *)(v13 + 80);
  v23 = *(_QWORD *)(v13 + 64);
  if (!v14)
    ++v23;
  v21 = *(_QWORD *)(v10 + 64);
  v19 = *(_QWORD *)(v8 + 64);
  v18 = *(_QWORD *)(v6 + 64) + v17;
  if (v16 < a3)
  {
    if ((((_DWORD)v23
         + 7
         + (((_DWORD)v21
           + (_DWORD)v22
           + (((_DWORD)v19 + (_DWORD)v20 + (v18 & ~(_DWORD)v17)) & ~(_DWORD)v20)) & ~(_DWORD)v22)) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v24 = a3 - v16 + 1;
    else
      v24 = 2;
    if (v24 >= 0x10000)
      v25 = 4;
    else
      v25 = 2;
    if (v24 < 0x100)
      v25 = 1;
    if (v24 >= 2)
      v12 = v25;
    else
      v12 = 0;
  }
  if (a2 > v16)
  {
    if ((((_DWORD)v23
         + 7
         + (((_DWORD)v21
           + (_DWORD)v22
           + (((_DWORD)v19 + (_DWORD)v20 + (v18 & ~(_DWORD)v17)) & ~(_DWORD)v20)) & ~(_DWORD)v22)) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      v26 = ~v16 + a2;
      bzero(a1, ((v23 + 7 + ((v21 + v22 + ((v19 + v20 + (v18 & ~v17)) & ~v20)) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 16);
      *a1 = v26;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X6 }
}

uint64_t sub_1A45B0DE0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;

  *(_BYTE *)(result + v19) = 0;
  if (a2)
  {
    if (v25 == v3)
    {
      v20 = *(uint64_t (**)(void))(v14 + 56);
      return v20();
    }
    v21 = (v10 + result) & v18;
    if (v17 == v3)
    {
      v20 = *(uint64_t (**)(void))(v12 + 56);
      return v20();
    }
    v22 = (v21 + v8 + v7) & v13;
    if (v16 == v3)
    {
      v20 = *(uint64_t (**)(void))(v15 + 56);
      return v20();
    }
    result = (v22 + v6 + v5) & v11;
    if (v4 == v3)
    {
      v20 = *(uint64_t (**)(void))(a3 + 56);
      return v20();
    }
    v23 = (_QWORD *)((v9 + result) & 0xFFFFFFFFFFFFFFF8);
    if (a2 < 0)
    {
      v24 = a2 ^ 0x80000000;
      v23[1] = 0;
    }
    else
    {
      v24 = (a2 - 1);
    }
    *v23 = v24;
  }
  return result;
}

uint64_t REMSmartList.userDefinedVisibility.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(v0, sel_smartListType);
  v6 = objc_msgSend(v1, sel_pinnedDate);
  if (v6)
  {
    v7 = v6;
    sub_1A4690084();

    v8 = sub_1A46900B4();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 0, 1, v8);
  }
  else
  {
    v9 = sub_1A46900B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  }
  v10 = _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(v5, (uint64_t)v4);

  sub_1A449C92C((uint64_t)v4);
  return v10;
}

uint64_t sub_1A45B0FFC()
{
  uint64_t v0;

  v0 = sub_1A46900B4();
  __swift_allocate_value_buffer(v0, qword_1EE721DD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EE721DD8);
  return sub_1A4690000();
}

uint64_t static REMSmartList.hiddenPredefinedSmartListPinnedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EE71C188 != -1)
    swift_once();
  v2 = sub_1A46900B4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EE721DD8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t _sSo12REMSmartListC19ReminderKitInternalE028userDefinedVisibilityOfSmartB04with10pinnedDateSo0ab4UsergH0VSo0aB4Typea_10Foundation0M0VSgtFZ_0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = REMSmartListType.supportsUserDefinedVisibility.getter(a1);
  result = 0;
  if ((v11 & 1) != 0)
  {
    sub_1A452A364(a2, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1A449C92C((uint64_t)v6);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      if (qword_1EE71C188 != -1)
        swift_once();
      __swift_project_value_buffer(v7, (uint64_t)qword_1EE721DD8);
      v13 = sub_1A4690078();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      if ((v13 & 1) != 0)
        return 2;
      else
        return 1;
    }
  }
  return result;
}

uint64_t sub_1A45B121C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721DF0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721DF0);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

id REMContactRepresentation.init(contact:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;

  v2 = sub_1A45B2304(a1);
  v3 = sub_1A45B24DC(a1);
  if (*(_QWORD *)(v2 + 16) || *(_QWORD *)(v3 + 16))
  {
    v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v5 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v6 = (void *)sub_1A4690B94();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v4, sel_initWithPhones_emails_, v5, v6);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return 0;
  }
  return v7;
}

id REMContactRepresentation.init(contactIdentifier:contactStore:)(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v6;
  void **v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  unsigned int v24;
  id v25;
  char isEscapingClosureAtFileLocation;
  uint64_t v27;
  id v28;
  _QWORD *v29;
  id v30;
  _QWORD *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  void *v48;
  void *v49;
  void *v51;
  void *v52;
  id aBlock[6];
  _QWORD v54[3];

  v54[1] = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  v6 = swift_allocObject();
  v7 = (void **)MEMORY[0x1E0C966E8];
  *(_OWORD *)(v6 + 16) = xmmword_1A4696C10;
  v8 = *v7;
  v9 = (void *)*MEMORY[0x1E0C966A8];
  *(_QWORD *)(v6 + 32) = *v7;
  *(_QWORD *)(v6 + 40) = v9;
  v10 = (void *)*MEMORY[0x1E0C967C0];
  *(_QWORD *)(v6 + 48) = *MEMORY[0x1E0C967C0];
  sub_1A4690BB8();
  v11 = objc_allocWithZone(MEMORY[0x1E0C97210]);
  v12 = v8;
  v13 = v9;
  v14 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
  v15 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v11, sel_initWithKeysToFetch_, v15);

  v17 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A4695C10;
  *(_QWORD *)(v18 + 32) = a1;
  *(_QWORD *)(v18 + 40) = a2;
  swift_bridgeObjectRetain();
  v19 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v17, sel_predicateForContactsWithIdentifiers_, v19);

  objc_msgSend(v16, sel_setPredicate_, v20);
  v54[0] = 0;
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = v54;
  v22 = (_QWORD *)swift_allocObject();
  v22[2] = sub_1A45B2698;
  v22[3] = v21;
  aBlock[4] = sub_1A4452640;
  aBlock[5] = v22;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1A45B1AB0;
  aBlock[3] = &block_descriptor_12;
  v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  v24 = objc_msgSend(a3, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v16, aBlock, v23);
  _Block_release(v23);
  v25 = aBlock[0];
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_4;
  }
  if (v24)
    goto LABEL_8;
  v21 = (_QWORD *)sub_1A468FE68();

  swift_willThrow();
  if (qword_1EE71C190 != -1)
    goto LABEL_21;
LABEL_4:
  v27 = sub_1A4690318();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EE721DF0);
  v28 = v16;
  v29 = v21;
  v30 = v28;
  v31 = v21;
  v32 = sub_1A469030C();
  v33 = sub_1A4690FF0();
  if (os_log_type_enabled(v32, v33))
  {
    v52 = a3;
    v34 = swift_slowAlloc();
    v51 = (void *)swift_slowAlloc();
    aBlock[0] = v51;
    *(_DWORD *)v34 = 136315394;
    if (objc_msgSend(v30, sel_predicate))
    {
      sub_1A444AA40(0, &qword_1EE721E10);
      v35 = sub_1A46908E8();
      v37 = v36;
    }
    else
    {
      v37 = 0xE300000000000000;
      v35 = 7104878;
    }
    sub_1A4431120(v35, v37, (uint64_t *)aBlock);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    swift_getErrorValue();
    v42 = sub_1A4691C2C();
    sub_1A4431120(v42, v43, (uint64_t *)aBlock);
    sub_1A46911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A442D000, v32, v33, "Error enumerating contacts with CNContact predicate {predicate: %s, error: %s}", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v51, -1, -1);
    MEMORY[0x1A85A0114](v34, -1, -1);

    a3 = v52;
    v38 = (void *)v54[0];
    if (!v54[0])
      goto LABEL_13;
    goto LABEL_9;
  }

LABEL_8:
  v38 = (void *)v54[0];
  if (!v54[0])
  {
LABEL_13:
    if (qword_1EE71C190 != -1)
      swift_once();
    v44 = sub_1A4690318();
    __swift_project_value_buffer(v44, (uint64_t)qword_1EE721DF0);
    swift_bridgeObjectRetain();
    v45 = sub_1A469030C();
    v46 = sub_1A4690FF0();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      aBlock[0] = v48;
      *(_DWORD *)v47 = 136315138;
      swift_bridgeObjectRetain();
      sub_1A4431120(a1, a2, (uint64_t *)aBlock);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A442D000, v45, v46, "Unable to look up contact identifier from CNContactStore {contactIdentifier: %s}", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v48, -1, -1);
      MEMORY[0x1A85A0114](v47, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v40 = 0;
    goto LABEL_19;
  }
LABEL_9:
  v39 = v38;
  swift_bridgeObjectRelease();
  v40 = REMContactRepresentation.init(contact:)(v39);

  v41 = v40;
  if (v40)

LABEL_19:
  v49 = (void *)v54[0];
  swift_release();

  return v40;
}

void sub_1A45B1AB0(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id REMContactRepresentation.init(address:)()
{
  void *v0;
  unsigned int v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unsigned int v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;

  sub_1A46908F4();
  swift_bridgeObjectRelease();
  v0 = (void *)sub_1A469087C();
  v1 = objc_msgSend(v0, sel_rem_hasMailto);

  v2 = (void *)sub_1A469087C();
  v3 = v2;
  if (v1)
  {
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v3, sel_rem_removingMailto);

    v5 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v7 = v6;

    v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  }
  else
  {
    v9 = objc_msgSend(v2, sel_rem_hasTel);

    if (!v9)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v10 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v10, sel_rem_removingTel);

    v12 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v14 = v13;

    v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v15 = swift_allocObject();
    v5 = 0;
    v7 = 0;
    *(_OWORD *)(v15 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v14;
  }
  v16 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  if (v7)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1A4695C10;
    *(_QWORD *)(v17 + 32) = v5;
    *(_QWORD *)(v17 + 40) = v7;
  }
  swift_bridgeObjectRetain();
  v18 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v8, sel_initWithPhones_emails_, v16, v18);

  swift_bridgeObjectRelease();
  return v19;
}

Swift::Bool __swiftcall REMContactRepresentation.matches(contact:)(CNContact contact)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  unsigned __int8 v6;

  v2 = v1;
  sub_1A444AA40(0, &qword_1EE721E18);
  v4 = REMContactRepresentation.init(contact:)(contact.super.isa);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(v2, sel_matchesContactRepresentation_, v4);

  return v6;
}

CNContact_optional __swiftcall CNContactStore.contactFrom(emailAddresses:phoneNumbers:keysToFetch:)(Swift::OpaquePointer emailAddresses, Swift::OpaquePointer phoneNumbers, Swift::OpaquePointer keysToFetch)
{
  _QWORD *rawValue;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  Swift::Bool v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  id v31;
  objc_class *v32;
  uint64_t v33;
  void *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  CNContact_optional result;

  rawValue = phoneNumbers._rawValue;
  v38 = *MEMORY[0x1E0C80C00];
  v4 = MEMORY[0x1E0DEE9D8];
  v36 = MEMORY[0x1E0DEE9D8];
  v37 = MEMORY[0x1E0DEE9D8];
  v5 = *((_QWORD *)emailAddresses._rawValue + 2);
  if (v5)
  {
    v6 = (_QWORD *)(swift_bridgeObjectRetain() + 40);
    do
    {
      if (*v6)
      {
        v7 = (void *)objc_opt_self();
        swift_bridgeObjectRetain();
        v8 = (void *)sub_1A469087C();
        v9 = objc_msgSend(v7, sel_predicateForContactsMatchingEmailAddress_, v8);
        swift_bridgeObjectRelease();

        if (v9)
        {
          MEMORY[0x1A859E3E0]();
          if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A4690BDC();
          sub_1A4690C18();
          sub_1A4690BB8();
        }
      }
      v6 += 2;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v10 = v36;
    rawValue = phoneNumbers._rawValue;
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  sub_1A4459334(v10);
  v36 = v4;
  v11 = rawValue[2];
  if (v11)
  {
    swift_bridgeObjectRetain();
    v12 = rawValue + 5;
    do
    {
      if (*v12)
      {
        v13 = objc_allocWithZone(MEMORY[0x1E0C97398]);
        swift_bridgeObjectRetain();
        v14 = (void *)sub_1A469087C();
        v15 = objc_msgSend(v13, sel_initWithStringValue_, v14);

        v16 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsMatchingPhoneNumber_, v15);
        swift_bridgeObjectRelease();

        if (v16)
        {
          MEMORY[0x1A859E3E0]();
          if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1A4690BDC();
          sub_1A4690C18();
          sub_1A4690BB8();
        }
      }
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v4 = v36;
  }
  sub_1A4459334(v4);
  v17 = v37;
  if (v37 >> 62)
    goto LABEL_36;
  v18 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v18)
  {
    v19 = 0;
    while (1)
    {
      v20 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      v21 = *(id *)(v17 + 8 * v19 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421C0);
      v22 = (void *)sub_1A4690B94();
      v36 = 0;
      v23 = objc_msgSend(v35, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v21, v22, &v36);

      v24 = (id)v36;
      if (v23)
      {
        sub_1A444AA40(0, &qword_1EE720DA0);
        v29 = sub_1A4690BA0();
        v30 = v24;
        swift_bridgeObjectRelease();

        if (v29 >> 62)
        {
          swift_bridgeObjectRetain();
          v28 = sub_1A46916A4();
          swift_bridgeObjectRelease();
          if (v28)
          {
LABEL_29:
            if ((v29 & 0xC000000000000001) != 0)
            {
              v31 = (id)MEMORY[0x1A859ECE0](0, v29);
            }
            else
            {
              if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                __break(1u);
              v31 = *(id *)(v29 + 32);
            }
            v28 = (uint64_t)v31;
          }
        }
        else
        {
          v28 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v28)
            goto LABEL_29;
        }
        swift_bridgeObjectRelease();

        goto LABEL_34;
      }
      v25 = (id)v36;
      v26 = (void *)sub_1A468FE68();

      swift_willThrow();
      ++v19;
      if (v20 == v18)
        goto LABEL_26;
    }
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    v33 = sub_1A46916A4();
    swift_bridgeObjectRelease();
    if (!v33)
      break;
    swift_bridgeObjectRetain();
    v18 = sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  v28 = 0;
LABEL_34:
  v32 = (objc_class *)v28;
  result.value.super.isa = v32;
  result.is_nil = v27;
  return result;
}

unint64_t CNContactStore.contact(matching:keysToFetch:)(void *a1, Swift::OpaquePointer a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v4 = objc_msgSend(a1, sel_emails);
  v5 = sub_1A4690BA0();

  v6 = sub_1A4560304(v5);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(a1, sel_phones);
  v8 = sub_1A4690BA0();

  v9 = sub_1A4560304(v8);
  swift_bridgeObjectRelease();
  v10 = (unint64_t)CNContactStore.contactFrom(emailAddresses:phoneNumbers:keysToFetch:)((Swift::OpaquePointer)v6, (Swift::OpaquePointer)v9, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1A45B2304(void *a1)
{
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;

  v1 = objc_msgSend(a1, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CD8);
  v2 = sub_1A4690BA0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_17:
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  result = sub_1A46916A4();
  v3 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1A859ECE0](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_value);
      v10 = objc_msgSend(v9, sel_unformattedInternationalStringValue);

      if (v10)
      {
        v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v13 = v12;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1A4438920(0, v6[2] + 1, 1, v6);
        v15 = v6[2];
        v14 = v6[3];
        if (v15 >= v14 >> 1)
          v6 = sub_1A4438920((_QWORD *)(v14 > 1), v15 + 1, 1, v6);
        v6[2] = v15 + 1;
        v16 = &v6[2 * v15];
        v16[4] = v11;
        v16[5] = v13;
      }
      else
      {

      }
      ++v5;
    }
    while (v3 != v5);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45B24DC(void *a1)
{
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = objc_msgSend(a1, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE720CD8);
  v2 = sub_1A4690BA0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v3 = sub_1A46916A4();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_13;
LABEL_3:
  v16 = MEMORY[0x1E0DEE9D8];
  result = sub_1A445A8BC(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v16;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1A859ECE0](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v9 = objc_msgSend(v7, sel_value);
      v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v12 = v11;

      v14 = *(_QWORD *)(v16 + 16);
      v13 = *(_QWORD *)(v16 + 24);
      if (v14 >= v13 >> 1)
        sub_1A445A8BC(v13 > 1, v14 + 1, 1);
      ++v5;
      *(_QWORD *)(v16 + 16) = v14 + 1;
      v15 = v16 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45B2688()
{
  return swift_deallocObject();
}

void sub_1A45B2698(void *a1)
{
  uint64_t v1;
  id *v2;
  id v3;
  id v4;

  v2 = *(id **)(v1 + 16);
  v4 = *v2;
  *v2 = a1;
  v3 = a1;

}

uint64_t sub_1A45B26C8()
{
  return swift_deallocObject();
}

double static NSDateInterval.rem1Second.getter()
{
  return 1.0;
}

double sub_1A45B26E0()
{
  return 1.0;
}

double static NSDateInterval.rem1Minute.getter()
{
  return 60.0;
}

double sub_1A45B26F4()
{
  return 60.0;
}

double static NSDateInterval.rem1Hour.getter()
{
  return 3600.0;
}

double sub_1A45B2710()
{
  return 3600.0;
}

double static NSDateInterval.rem1Day.getter()
{
  return 86400.0;
}

double sub_1A45B2730()
{
  return 86400.0;
}

double static NSDateInterval.rem1Week.getter()
{
  return 604800.0;
}

double sub_1A45B2750()
{
  return 604800.0;
}

double static NSDateInterval.rem1Month30Days.getter()
{
  return 2592000.0;
}

double sub_1A45B2770()
{
  return 2592000.0;
}

double static NSDateInterval.rem1Year.getter()
{
  return 31536000.0;
}

double sub_1A45B2790()
{
  return 31536000.0;
}

double static NSDateInterval.remNotificationFireDateGracePeriod.getter()
{
  return 28800.0;
}

double sub_1A45B27B0()
{
  return 28800.0;
}

uint64_t MutableOrderedSet.__allocating_init(_:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  MutableOrderedSet.init(_:)();
  return v0;
}

uint64_t MutableOrderedSet.remove(_:)(uint64_t a1)
{
  return sub_1A45B28D0(a1, (SEL *)&selRef_removeObject_);
}

uint64_t MutableOrderedSet.array.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_array);
  sub_1A4690BA0();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EAC0);
  sub_1A45B2D2C();
  v2 = sub_1A4690A98();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t MutableOrderedSet.add(_:)(uint64_t a1)
{
  return sub_1A45B28D0(a1, (SEL *)&selRef_addObject_);
}

uint64_t sub_1A45B28D0(uint64_t a1, SEL *a2)
{
  uint64_t v2;

  objc_msgSend(*(id *)(v2 + 16), *a2, sub_1A4691A34());
  return swift_unknownObjectRelease();
}

uint64_t MutableOrderedSet.init(_:)()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;

  sub_1A4691584();
  swift_bridgeObjectRelease();
  v1 = objc_allocWithZone(MEMORY[0x1E0C99E10]);
  v2 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithArray_, v2);

  *(_QWORD *)(v0 + 16) = v3;
  return v0;
}

Swift::Void __swiftcall MutableOrderedSet.addValues(from:)(Swift::OpaquePointer from)
{
  sub_1A45B2E08((uint64_t)from._rawValue, (SEL *)&selRef_addObjectsFromArray_);
}

uint64_t MutableOrderedSet.insert(_:at:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t result;

  v4 = *(void **)(v2 + 16);
  result = sub_1A4691A34();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v4, sel_insertObject_atIndex_, result, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MutableOrderedSet.replaceValue(at:with:)(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(*(id *)(v1 + 16), sel_replaceObjectAtIndex_withObject_, result, sub_1A4691A34());
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t MutableOrderedSet.value(at:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  id v8;
  uint64_t v9;
  int v10;

  v5 = *v2;
  result = (uint64_t)objc_msgSend((id)v2[2], sel_count);
  if (result < 1 || result <= a1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 56))(a2, 1, 1);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v8 = objc_msgSend((id)v2[2], sel_objectAtIndex_, a1);
    sub_1A4691278();
    swift_unknownObjectRelease();
    v9 = *(_QWORD *)(v5 + 80);
    v10 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, v10 ^ 1u, 1, v9);
  }
  return result;
}

id MutableOrderedSet.count.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_count);
}

uint64_t MutableOrderedSet.index(of:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t result;

  v1 = (unint64_t)objc_msgSend(*(id *)(v0 + 16), sel_indexOfObject_, sub_1A4691A34());
  swift_unknownObjectRelease();
  if (v1 == sub_1A468FB38())
    return 0;
  v2 = v1;
  if ((v1 & 0x8000000000000000) == 0)
    return v2;
  result = sub_1A469162C();
  __break(1u);
  return result;
}

id MutableOrderedSet.contains(_:)()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_containsObject_, sub_1A4691A34());
  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1A45B2C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v7;

  sub_1A44311F0(a1, (uint64_t)&v7);
  v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_1A45B2D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A45B2C98(a1, *(_QWORD *)(v2 + 16), a2);
}

unint64_t sub_1A45B2D2C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED23EAC8;
  if (!qword_1ED23EAC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED23EAC0);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED23EAC8);
  }
  return result;
}

BOOL MutableOrderedSet.isEmpty.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_count) == 0;
}

Swift::Void __swiftcall MutableOrderedSet.removeValue(at:)(Swift::UInt at)
{
  uint64_t v1;
  int64_t v3;

  v3 = (int64_t)objc_msgSend(*(id *)(v1 + 16), sel_count);
  if (v3 >= 1 && v3 > at)
  {
    if ((at & 0x8000000000000000) != 0)
      __break(1u);
    else
      objc_msgSend(*(id *)(v1 + 16), sel_removeObjectAtIndex_, at);
  }
}

Swift::Void __swiftcall MutableOrderedSet.removeValues(in:)(Swift::OpaquePointer in)
{
  sub_1A45B2E08((uint64_t)in._rawValue, (SEL *)&selRef_removeObjectsInArray_);
}

void sub_1A45B2E08(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  v4 = *(void **)(v2 + 16);
  sub_1A4691584();
  v5 = (id)sub_1A4690B94();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, *a2, v5);

}

Swift::Void __swiftcall MutableOrderedSet.removeAllValues()()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_removeAllObjects);
}

uint64_t MutableOrderedSet.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MutableOrderedSet.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MutableOrderedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MutableOrderedSet);
}

uint64_t method lookup function for MutableOrderedSet()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MutableOrderedSet.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t static Analytics.isEventUsed(_:)()
{
  void *v0;
  uint64_t IsEventUsed;

  v0 = (void *)sub_1A469087C();
  IsEventUsed = AnalyticsIsEventUsed();

  return IsEventUsed;
}

uint64_t sub_1A45B2F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED240468);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED240468);
  if (qword_1ED243CD8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256870);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static Analytics.postEvent(_:payload:duration:)(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, char a5)
{
  unint64_t v9;

  if (a3)
    v9 = a3;
  else
    v9 = sub_1A443DA40(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  sub_1A45B4244(a1, a2, v9, a4, a5 & 1, 0, 0);
  return swift_bridgeObjectRelease();
}

void static Analytics.postEvent(_:payload:duration:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, char a7)
{
  sub_1A45B4244(a1, a2, a3, a4, a5 & 1, a6, a7);
}

void static Analytics.postBiomeEventForUncategorizedGroceryItem(item:)()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0D02170]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithItemChanged_originalCategory_destinationCategory_, v1, 0, 0);

  sub_1A45B4814((uint64_t)v2);
}

void static Analytics.postBiomeEventForCorrectedGroceryItem(item:originalCategory:destinationCategory:)()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0D02170]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v0, sel_initWithItemChanged_originalCategory_destinationCategory_, v1, v2, v3);

  sub_1A45B4814((uint64_t)v4);
}

void static Analytics.postEvent(_:payload:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, id a4, char a5)
{
  sub_1A45B4244(a1, a2, a3, 0, 1, a4, a5);
}

void sub_1A45B32A0(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (qword_1ED243C88 != -1)
    swift_once();
  v2 = sub_1A4690318();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED240468);
  swift_bridgeObjectRetain_n();
  v3 = sub_1A469030C();
  v4 = sub_1A4691008();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315138;
    if (!a1)
      sub_1A443D4F0(MEMORY[0x1E0DEE9D8]);
    swift_bridgeObjectRetain();
    v7 = sub_1A4690714();
    v9 = v8;
    swift_bridgeObjectRelease();
    sub_1A4431120(v7, v9, &v10);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v3, v4, "AutoBugCapture did reply {response: %s}", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v6, -1, -1);
    MEMORY[0x1A85A0114](v5, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1A45B3488(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1A4690708();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

id Analytics.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Analytics.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Analytics();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Analytics.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Analytics();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall Analytics.postEvent(_:payload:duration:)(Swift::String _, Swift::OpaquePointer_optional payload, Swift::Double_optional duration)
{
  Swift::Bool is_nil;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t rawValue;

  is_nil = duration.is_nil;
  v4 = *(_QWORD *)&payload.is_nil;
  object = _._object;
  countAndFlagsBits = _._countAndFlagsBits;
  if (payload.value._rawValue)
    rawValue = (uint64_t)payload.value._rawValue;
  else
    rawValue = sub_1A443DA40(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  sub_1A45B4244(countAndFlagsBits, (unint64_t)object, rawValue, v4, is_nil, 0, 0);
  swift_bridgeObjectRelease();
}

void Analytics.postEvent(_:payload:duration:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, char a7)
{
  sub_1A45B4244(a1, a2, a3, a4, a5 & 1, a6, a7);
}

void Analytics.postEvent(_:payload:error:performAutoBugCaptureOnError:)(uint64_t a1, unint64_t a2, uint64_t a3, id a4, char a5)
{
  sub_1A45B4244(a1, a2, a3, 0, 1, a4, a5);
}

Swift::Bool __swiftcall Analytics.isEventUsed(_:)(Swift::String a1)
{
  void *v1;
  char IsEventUsed;

  v1 = (void *)sub_1A469087C();
  IsEventUsed = AnalyticsIsEventUsed();

  return IsEventUsed;
}

void sub_1A45B3694(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, char a7)
{
  sub_1A45B4244(a1, a2, a3, a4, a5 & 1, a6, a7);
}

void _s19ReminderKitInternal9AnalyticsC9postEventyyAA012REMAnalyticsF0OFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  REMAnalyticsEvent.id.getter();
  v1 = v0;
  v3 = v2;
  REMAnalyticsEvent.payload.getter();
  if (qword_1ED243C88 != -1)
    swift_once();
  v4 = sub_1A4690318();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED240468);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v5 = sub_1A469030C();
  v6 = sub_1A4691008();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136446466;
    swift_bridgeObjectRetain();
    sub_1A4431120(v1, v3, &v14);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2082;
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
    swift_bridgeObjectRetain();
    v8 = sub_1A4690714();
    v10 = v9;
    swift_bridgeObjectRelease();
    sub_1A4431120(v8, v10, &v14);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v5, v6, "Posting analytics {name: %{public}s, payload: %{public}s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v13, -1, -1);
    MEMORY[0x1A85A0114](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v11 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
  v12 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

}

id sub_1A45B3968(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v5;
  uint64_t v7;
  id v8;
  char v9;
  id result;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  id v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  void *v33;
  __int128 v34;
  __int128 v35;

  v5 = a1;
  if (!a4)
  {
    swift_bridgeObjectRetain();
    if ((a3 & 1) == 0)
      goto LABEL_21;
    return (id)v5;
  }
  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v8 = a4;
  if (v7)
  {
    sub_1A443E4C8(0x6D6F44726F727265, 0xEB000000006E6961);
    if ((v9 & 1) != 0)
      goto LABEL_17;
  }
  result = objc_msgSend(v8, sel_domain);
  if (result)
  {
    v11 = (uint64_t)result;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A445EAD8(v11, 0x6D6F44726F727265, 0xEB000000006E6961, isUniquelyReferenced_nonNull_native);
    v13 = v5;
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_code);
    v14 = sub_1A4690DD4();
    v15 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v34 = v13;
    sub_1A445EAD8(v14, 0x646F43726F727265, 0xE900000000000065, v15);
    v5 = v13;
    swift_bridgeObjectRelease();
    v16 = objc_msgSend(v8, sel_domain);
    v17 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v19 = v18;

    if (v17 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v19 == v20)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v21 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
        goto LABEL_17;
    }
    v22 = objc_msgSend(v8, sel_userInfo);
    v23 = sub_1A4690708();

    v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    if (*(_QWORD *)(v23 + 16) && (v26 = sub_1A443E4C8(v24, v25), (v27 & 1) != 0))
    {
      sub_1A44311F0(*(_QWORD *)(v23 + 56) + 32 * v26, (uint64_t)&v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v35 + 1))
      {
        sub_1A444AA40(0, (unint64_t *)&qword_1EE71D180);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v28 = v33;
          v29 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v34 = v5;
          sub_1A445EAD8((uint64_t)v28, 0xD000000000000015, 0x80000001A46C1DC0, v29);
          v5 = v34;

          swift_bridgeObjectRelease();
          if ((a3 & 1) != 0)
            return (id)v5;
LABEL_21:
          if (!*(_QWORD *)(v5 + 16) || (sub_1A443E4C8(0x6E6F697461727564, 0xE800000000000000), (v30 & 1) == 0))
          {
            v31 = sub_1A4690D20();
            v32 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v34 = v5;
            sub_1A445EAD8(v31, 0x6E6F697461727564, 0xE800000000000000, v32);
            v5 = v34;
            swift_bridgeObjectRelease();
          }
          return (id)v5;
        }
LABEL_17:

        if ((a3 & 1) != 0)
          return (id)v5;
        goto LABEL_21;
      }
    }
    else
    {
      v34 = 0u;
      v35 = 0u;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    sub_1A4496084((uint64_t)&v34);
    if ((a3 & 1) == 0)
      goto LABEL_21;
    return (id)v5;
  }
  __break(1u);
  return result;
}

void sub_1A45B3D1C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t aBlock[7];

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DAFF28]), sel_init);
  v6 = (void *)sub_1A469087C();
  v7 = (void *)sub_1A469087C();
  v8 = objc_msgSend(a4, sel_domain);
  if (!v8)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v8 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  aBlock[0] = (uint64_t)objc_msgSend(a4, sel_code);
  sub_1A46918D8();
  v9 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v11 = objc_msgSend(v10, sel_processName);

  if (!v11)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v11 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v12 = (void *)sub_1A469087C();
  v13 = objc_msgSend(v5, sel_signatureWithDomain_type_subType_subtypeContext_detectedProcess_triggerThresholdValues_, v6, v7, v8, v9, v11, v12);

  if (v13)
  {
    aBlock[0] = 0;
    v14 = v13;
    sub_1A46906FC();

  }
  if (qword_1ED243C88 != -1)
    swift_once();
  v15 = sub_1A4690318();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED240468);
  v16 = v13;
  v17 = sub_1A469030C();
  v18 = sub_1A4690FFC();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    aBlock[0] = v20;
    *(_DWORD *)v19 = 136315138;
    if (v13)
    {
      v21 = objc_msgSend(v16, sel_description);
      v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v24 = v23;

    }
    else
    {
      v24 = 0xE300000000000000;
      v22 = 7104878;
    }
    aBlock[6] = sub_1A4431120(v22, v24, aBlock);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v17, v18, "Failed to cast signature {signature: %s}", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v20, -1, -1);
    MEMORY[0x1A85A0114](v19, -1, -1);

  }
  else
  {

  }
}

void sub_1A45B4244(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, id a6, char a7)
{
  char v11;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  os_log_type_t type;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v11 = a5 & 1;
  if (a6)
  {
    v14 = a6;
    v15 = (void *)sub_1A468FE5C();
    v16 = sub_1A45B3968(a3, a4, v11, v15);
    if (qword_1ED243C88 != -1)
      swift_once();
    v17 = sub_1A4690318();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED240468);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v18 = sub_1A469030C();
    v19 = sub_1A4690FF0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v41 = v39;
      *(_DWORD *)v20 = 136315394;
      type = v19;
      swift_bridgeObjectRetain();
      sub_1A4431120(a1, a2, &v41);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      v21 = a2;
      v22 = v15;
      v23 = a1;
      swift_bridgeObjectRetain();
      v24 = sub_1A4690714();
      v26 = v25;
      swift_bridgeObjectRelease();
      v27 = v24;
      a1 = v23;
      v15 = v22;
      a2 = v21;
      sub_1A4431120(v27, v26, &v41);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v18, type, "Posting analytics error {name: %s, payload: %s}", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v39, -1, -1);
      MEMORY[0x1A85A0114](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v35 = (void *)sub_1A469087C();
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
    v36 = (void *)sub_1A46906F0();
    AnalyticsSendEvent();

    if ((a7 & 1) != 0)
      sub_1A45B3D1C(a1, a2, (uint64_t)v16, v15);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A45B3968(a3, a4, a5 & 1, 0);
    if (qword_1ED243C88 != -1)
      swift_once();
    v28 = sub_1A4690318();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED240468);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_1A469030C();
    v30 = sub_1A4691008();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v41 = v40;
      *(_DWORD *)v31 = 136446466;
      swift_bridgeObjectRetain();
      sub_1A4431120(a1, a2, &v41);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
      swift_bridgeObjectRetain();
      v32 = sub_1A4690714();
      v34 = v33;
      swift_bridgeObjectRelease();
      sub_1A4431120(v32, v34, &v41);
      sub_1A46911D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v29, v30, "Posting analytics {name: %{public}s, payload: %{public}s}", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v40, -1, -1);
      MEMORY[0x1A85A0114](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v37 = (void *)sub_1A469087C();
    sub_1A444AA40(0, (unint64_t *)&qword_1ED2439F0);
    v15 = (void *)sub_1A46906F0();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

  }
}

void sub_1A45B4814(uint64_t a1)
{
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = objc_msgSend((id)BiomeLibrary(), sel_Reminders);
  swift_unknownObjectRelease();
  v3 = objc_msgSend(v2, sel_Grocery);
  swift_unknownObjectRelease();
  v4 = objc_msgSend(v3, sel_MiscategorizedGroceryItem);
  swift_unknownObjectRelease();
  v5 = objc_msgSend(v4, sel_source);
  if (qword_1ED243C88 != -1)
    swift_once();
  v6 = sub_1A4690318();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED240468);
  v7 = v5;
  v8 = sub_1A469030C();
  v9 = sub_1A4691008();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = a1;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v18 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = objc_msgSend(v7, sel_identifier);
    v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v15 = v14;

    v16 = v13;
    a1 = v17;
    sub_1A4431120(v16, v15, &v18);
    sub_1A46911D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v8, v9, "Donating event to {name: %{public}s}", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v11, -1, -1);
    MEMORY[0x1A85A0114](v10, -1, -1);

  }
  else
  {

  }
  objc_msgSend(v7, sel_sendEvent_, a1);

}

uint64_t type metadata accessor for Analytics()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of AnalyticsType.postEvent(_:payload:duration:error:performAutoBugCaptureOnError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a9 + 8))(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_1A45B4ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE721E20);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE721E20);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void static REMSuggestedAttributesTrainer.train(in:parameters:)(__int128 *a1@<X1>, void *a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _BYTE v14[800];
  _QWORD __src[100];
  __int128 v16[9];
  _OWORD v17[2];

  v4 = a1[9];
  v16[8] = a1[8];
  v17[0] = v4;
  *(_OWORD *)((char *)v17 + 9) = *(__int128 *)((char *)a1 + 153);
  v5 = a1[5];
  v16[4] = a1[4];
  v16[5] = v5;
  v6 = a1[7];
  v16[6] = a1[6];
  v16[7] = v6;
  v7 = a1[1];
  v16[0] = *a1;
  v16[1] = v7;
  v8 = a1[3];
  v16[2] = a1[2];
  v16[3] = v8;
  v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (qword_1EE71C1A0 != -1)
    swift_once();
  v10 = sub_1A4690318();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EE721E20);
  v11 = sub_1A469030C();
  v12 = sub_1A4691008();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1A442D000, v11, v12, "REMSuggestedAttributesTrainer init (train())", v13, 2u);
    MEMORY[0x1A85A0114](v13, -1, -1);
  }

  sub_1A44836E4(v9, v16, __src);
  if (!v2)
  {
    memcpy(v14, __src, sizeof(v14));
    sub_1A4496CF0((uint64_t)v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496858, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A449694C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1A4496988, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A4496C38);
    sub_1A45B4D18((uint64_t)v14);
    memcpy(a2, v14, 0x318uLL);
  }
}

uint64_t sub_1A45B4D18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 184);
  v28 = *(_QWORD *)(a1 + 192);
  v27 = *(_QWORD *)(a1 + 200);
  v26 = *(_QWORD *)(a1 + 208);
  v4 = *(_QWORD *)(a1 + 224);
  v25 = *(_QWORD *)(a1 + 216);
  v5 = *(_BYTE *)(a1 + 232);
  v56 = *(_QWORD *)(a1 + 240);
  v55 = *(_QWORD *)(a1 + 248);
  v54 = *(_QWORD *)(a1 + 256);
  v53 = *(_QWORD *)(a1 + 264);
  v52 = *(_QWORD *)(a1 + 272);
  v51 = *(_QWORD *)(a1 + 280);
  v50 = *(_QWORD *)(a1 + 288);
  v49 = *(_QWORD *)(a1 + 296);
  v47 = *(_OWORD *)(a1 + 320);
  v48 = *(_OWORD *)(a1 + 304);
  v45 = *(_OWORD *)(a1 + 352);
  v46 = *(_OWORD *)(a1 + 336);
  v43 = *(_OWORD *)(a1 + 384);
  v44 = *(_OWORD *)(a1 + 368);
  v42 = *(_OWORD *)(a1 + 400);
  v39 = *(_OWORD *)(a1 + 432);
  v40 = *(_OWORD *)(a1 + 416);
  v38 = *(_OWORD *)(a1 + 448);
  v33 = *(_OWORD *)(a1 + 464);
  v23 = *(_OWORD *)(a1 + 496);
  v24 = *(_OWORD *)(a1 + 480);
  v21 = *(_OWORD *)(a1 + 528);
  v22 = *(_OWORD *)(a1 + 512);
  v19 = *(_OWORD *)(a1 + 560);
  v20 = *(_OWORD *)(a1 + 544);
  v17 = *(_OWORD *)(a1 + 592);
  v18 = *(_OWORD *)(a1 + 576);
  v15 = *(_OWORD *)(a1 + 624);
  v16 = *(_OWORD *)(a1 + 608);
  v13 = *(_OWORD *)(a1 + 656);
  v14 = *(_OWORD *)(a1 + 640);
  v12 = *(_OWORD *)(a1 + 672);
  v6 = *(_QWORD *)(a1 + 688);
  v7 = *(_QWORD *)(a1 + 696);
  v8 = *(_BYTE *)(a1 + 704);
  v9 = *(_BYTE *)(a1 + 777);
  v29 = *(_QWORD *)(a1 + 712);
  v30 = *(_QWORD *)(a1 + 720);
  v31 = *(_QWORD *)(a1 + 728);
  v32 = *(_QWORD *)(a1 + 736);
  v34 = *(_QWORD *)(a1 + 744);
  v35 = *(_QWORD *)(a1 + 752);
  v36 = *(_QWORD *)(a1 + 760);
  v37 = *(_QWORD *)(a1 + 768);
  v10 = *(_BYTE *)(a1 + 776);
  v41 = *(void **)(a1 + 792);
  sub_1A4496FEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_BYTE *)(a1 + 168));
  sub_1A44970E0(v2, v3, v28, v27, v26, v25, v4, v5);
  sub_1A449711C(v56, v55, v54, v53, v52, v51, v50, v49, v48, *((uint64_t *)&v48 + 1), v47, *((uint64_t *)&v47 + 1), v46, *((uint64_t *)&v46 + 1), v45, *((uint64_t *)&v45 + 1), v44, *((uint64_t *)&v44 + 1), v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v6,
    v7,
    v8);
  sub_1A44973CC(v29, v30, v31, v32, v34, v35, v36, v37, v10, v9);

  return a1;
}

uint64_t static REMSuggestedAttributesTrainer.supportsSecureCoding.getter()
{
  return 1;
}

id REMSuggestedAttributesTrainer.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMSuggestedAttributesTrainer.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_init);

  return v3;
}

id REMSuggestedAttributesTrainer.__deallocating_deinit()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  objc_super v8;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1EE71C1A0 != -1)
    swift_once();
  v3 = sub_1A4690318();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EE721E20);
  v4 = sub_1A469030C();
  v5 = sub_1A4691008();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1A442D000, v4, v5, "REMSuggestedAttributesTrainer deinit", v6, 2u);
    MEMORY[0x1A85A0114](v6, -1, -1);
  }

  v8.receiver = v1;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.listAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_OWORD *)(v1 + 80);
  v3 = *(_OWORD *)(v1 + 112);
  v19 = *(_OWORD *)(v1 + 96);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 48);
  v15 = *(_OWORD *)(v1 + 32);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 48);
  v8 = *(_OWORD *)(v1 + 80);
  v17 = *(_OWORD *)(v1 + 64);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1A443527C((uint64_t)v14);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.skippedRemindersCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.trainingSetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.validationSetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

double REMSuggestedAttributesTrainer.Result.Embedding.trainingDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.Embedding.init(listAccuracy:skippedRemindersCount:trainingSetCount:validationSetCount:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::Embedding *__return_ptr retstr, ReminderKitInternal::REMSuggestedAttributesAccuracy *listAccuracy, Swift::Int skippedRemindersCount, Swift::Int trainingSetCount, Swift::Int validationSetCount, Swift::Double trainingDuration)
{
  __int128 v6;
  void *rawValue;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v6 = *(_OWORD *)&listAccuracy->metrics.precision;
  *(_OWORD *)&retstr->listAccuracy.metrics.typeIIErrors._rawValue = *(_OWORD *)&listAccuracy->metrics.typeIIErrors._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.precision = v6;
  rawValue = listAccuracy->metrics.indexedClasses._rawValue;
  v8 = *(_OWORD *)&listAccuracy->metrics.trueNegatives._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.confusionMatrix._rawValue = *(_OWORD *)&listAccuracy->metrics.confusionMatrix._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.trueNegatives._rawValue = v8;
  v9 = *(_OWORD *)&listAccuracy->metrics.recalls._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.falseNegatives._rawValue = *(_OWORD *)&listAccuracy->metrics.falseNegatives._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.recalls._rawValue = v9;
  v10 = *(_OWORD *)&listAccuracy->metrics.correctIndices._rawValue;
  *(_OWORD *)&retstr->listAccuracy.correctSample._rawValue = *(_OWORD *)&listAccuracy->correctSample._rawValue;
  *(_OWORD *)&retstr->listAccuracy.metrics.correctIndices._rawValue = v10;
  retstr->listAccuracy.metrics.indexedClasses._rawValue = rawValue;
  retstr->skippedRemindersCount = skippedRemindersCount;
  retstr->trainingSetCount = trainingSetCount;
  retstr->validationSetCount = validationSetCount;
  retstr->trainingDuration = trainingDuration;
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v11 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v12 = *(_QWORD *)(v1 + 120);
  v13 = *(_QWORD *)(v1 + 128);
  v18 = *(_QWORD *)(v1 + 96);
  v14 = *(_QWORD *)(v1 + 152);
  v15 = *(_QWORD *)(v1 + 160);
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = v16;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v11;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v18;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 120) = v12;
  *(_QWORD *)(a1 + 128) = v13;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(v1 + 136);
  *(_QWORD *)(a1 + 152) = v14;
  *(_QWORD *)(a1 + 160) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A45B5480(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45B54BC + 4 * byte_1A46A6860[a1]))(0x756363417473696CLL, 0xEC00000079636172);
}

unint64_t sub_1A45B54BC()
{
  return 0xD000000000000015;
}

uint64_t sub_1A45B5520()
{
  unsigned __int8 *v0;

  return sub_1A45B5480(*v0);
}

uint64_t sub_1A45B5528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45C0920(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45B554C()
{
  sub_1A45BF614();
  return sub_1A4691DB8();
}

uint64_t sub_1A45B5574()
{
  sub_1A45BF614();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _QWORD v15[3];
  char v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *((_QWORD *)v3 + 17);
  v15[1] = *((_QWORD *)v3 + 18);
  v15[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BF614();
  sub_1A4691D40();
  v10 = v3[7];
  v23 = v3[6];
  v24 = v10;
  v25 = *((_QWORD *)v3 + 16);
  v11 = v3[3];
  v19 = v3[2];
  v20 = v11;
  v12 = v3[5];
  v21 = v3[4];
  v22 = v12;
  v13 = v3[1];
  v17 = *v3;
  v18 = v13;
  v16 = 0;
  sub_1A45BF658();
  sub_1A4691890();
  if (!v2)
  {
    LOBYTE(v17) = 1;
    sub_1A4691878();
    LOBYTE(v17) = 2;
    sub_1A4691878();
    LOBYTE(v17) = 3;
    sub_1A4691878();
    LOBYTE(v17) = 4;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSuggestedAttributesTrainer.Result.Embedding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _OWORD v26[8];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1A45BF614();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  v10 = v6;
  v42 = 0;
  sub_1A45BF69C();
  v11 = v5;
  sub_1A46917C4();
  v39 = v49;
  v40 = v50;
  v35 = v45;
  v36 = v46;
  v37 = v47;
  v38 = v48;
  v33 = v43;
  v34 = v44;
  v58 = v49;
  v59 = v50;
  v54 = v45;
  v55 = v46;
  v56 = v47;
  v57 = v48;
  v41 = v51;
  v60 = v51;
  v52 = v43;
  v53 = v44;
  LOBYTE(v26[0]) = 1;
  sub_1A443527C((uint64_t)&v33);
  v12 = sub_1A46917AC();
  LOBYTE(v26[0]) = 2;
  v13 = sub_1A46917AC();
  LOBYTE(v26[0]) = 3;
  v24 = sub_1A46917AC();
  v32 = 4;
  sub_1A46917A0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  v17 = v40;
  *(_OWORD *)(a2 + 96) = v39;
  *(_OWORD *)(a2 + 112) = v17;
  v18 = v41;
  v19 = v36;
  *(_OWORD *)(a2 + 32) = v35;
  *(_OWORD *)(a2 + 48) = v19;
  v20 = v38;
  *(_OWORD *)(a2 + 64) = v37;
  *(_OWORD *)(a2 + 80) = v20;
  v21 = v34;
  *(_OWORD *)a2 = v33;
  *(_OWORD *)(a2 + 16) = v21;
  *(_QWORD *)(a2 + 128) = v18;
  *(_QWORD *)(a2 + 136) = v12;
  v23 = v24;
  v22 = (uint64_t)v25;
  *(_QWORD *)(a2 + 144) = v13;
  *(_QWORD *)(a2 + 152) = v23;
  *(_QWORD *)(a2 + 160) = v16;
  __swift_destroy_boxed_opaque_existential_1(v22);
  v26[6] = v58;
  v26[7] = v59;
  v26[2] = v54;
  v26[3] = v55;
  v26[4] = v56;
  v26[5] = v57;
  v26[0] = v52;
  v26[1] = v53;
  v27 = v60;
  v28 = v12;
  v29 = v13;
  v30 = v23;
  v31 = v16;
  return sub_1A443535C((uint64_t)v26);
}

uint64_t sub_1A45B5A90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1A45B5AA4(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.Embedding.encode(to:)(a1);
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.precision.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.recall.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.skippedRemindersCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.trainingSetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.validationSetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.trainingDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.AnchoredBubble.init(precision:recall:skippedRemindersCount:trainingSetCount:validationSetCount:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::AnchoredBubble *__return_ptr retstr, Swift::Double precision, Swift::Double recall, Swift::Int skippedRemindersCount, Swift::Int trainingSetCount, Swift::Int validationSetCount, Swift::Double trainingDuration)
{
  retstr->precision = precision;
  retstr->recall = recall;
  retstr->skippedRemindersCount = skippedRemindersCount;
  retstr->trainingSetCount = trainingSetCount;
  retstr->validationSetCount = validationSetCount;
  retstr->trainingDuration = trainingDuration;
}

double REMSuggestedAttributesTrainer.Result.AnchoredBubble.droppingSensitiveFields.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;

  v2 = *(_QWORD *)(v1 + 32);
  result = *(double *)(v1 + 40);
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  return result;
}

uint64_t sub_1A45B5B18(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45B5B50 + 4 * byte_1A46A6865[a1]))(0x6F69736963657270, 0xE90000000000006ELL);
}

uint64_t sub_1A45B5B50()
{
  return 0x6C6C61636572;
}

unint64_t sub_1A45B5B64()
{
  return 0xD000000000000015;
}

uint64_t sub_1A45B5BC8()
{
  unsigned __int8 *v0;

  return sub_1A45B5B18(*v0);
}

uint64_t sub_1A45B5BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45C0B30(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A45B5BF4(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1A45B5C00()
{
  sub_1A45BF6E0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45B5C28()
{
  sub_1A45BF6E0();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E60);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v10[1] = *(_QWORD *)(v1 + 24);
  v10[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BF6E0();
  sub_1A4691D40();
  v16 = 0;
  sub_1A469186C();
  if (!v2)
  {
    v15 = 1;
    sub_1A469186C();
    v14 = 2;
    sub_1A4691878();
    v13 = 3;
    sub_1A4691878();
    v12 = 4;
    sub_1A4691878();
    v11 = 5;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.AnchoredBubble.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BF6E0();
  sub_1A4691D28();
  if (!v2)
  {
    v24 = 0;
    sub_1A46917A0();
    v10 = v9;
    v23 = 1;
    sub_1A46917A0();
    v12 = v11;
    v22 = 2;
    v13 = sub_1A46917AC();
    v21 = 3;
    v14 = sub_1A46917AC();
    v20 = 4;
    v18 = sub_1A46917AC();
    v19 = 5;
    sub_1A46917A0();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v18;
    a2[5] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45B603C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.AnchoredBubble.init(from:)(a1, a2);
}

uint64_t sub_1A45B6050(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.AnchoredBubble.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.listAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_OWORD *)(v1 + 80);
  v3 = *(_OWORD *)(v1 + 112);
  v19 = *(_OWORD *)(v1 + 96);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 16);
  v5 = *(_OWORD *)(v1 + 48);
  v15 = *(_OWORD *)(v1 + 32);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 48);
  v8 = *(_OWORD *)(v1 + 80);
  v17 = *(_OWORD *)(v1 + 64);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 16);
  v14[0] = *(_OWORD *)v1;
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_QWORD *)(v1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 128);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1A443527C((uint64_t)v14);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.dueDayOfWeekAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[8];
  uint64_t v12;

  v2 = *(_OWORD *)(v1 + 216);
  v3 = *(_OWORD *)(v1 + 248);
  v11[6] = *(_OWORD *)(v1 + 232);
  v11[7] = v3;
  v12 = *(_QWORD *)(v1 + 264);
  v4 = *(_OWORD *)(v1 + 152);
  v5 = *(_OWORD *)(v1 + 184);
  v11[2] = *(_OWORD *)(v1 + 168);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(v1 + 200);
  v11[5] = v2;
  v11[0] = *(_OWORD *)(v1 + 136);
  v11[1] = v4;
  v6 = *(_OWORD *)(v1 + 216);
  v7 = *(_OWORD *)(v1 + 248);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 232);
  *(_OWORD *)(a1 + 112) = v7;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 264);
  v8 = *(_OWORD *)(v1 + 152);
  v9 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 200);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 16) = v8;
  return sub_1A443527C((uint64_t)v11);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.alarmLocationAccuracy.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_OWORD *)(v1 + 352);
  v3 = *(_OWORD *)(v1 + 384);
  v19 = *(_OWORD *)(v1 + 368);
  v20 = v3;
  v4 = *(_OWORD *)(v1 + 288);
  v5 = *(_OWORD *)(v1 + 320);
  v15 = *(_OWORD *)(v1 + 304);
  v6 = v15;
  v16 = v5;
  v7 = *(_OWORD *)(v1 + 320);
  v8 = *(_OWORD *)(v1 + 352);
  v17 = *(_OWORD *)(v1 + 336);
  v9 = v17;
  v18 = v8;
  v10 = *(_OWORD *)(v1 + 288);
  v14[0] = *(_OWORD *)(v1 + 272);
  v11 = v14[0];
  v14[1] = v10;
  v12 = *(_OWORD *)(v1 + 384);
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = v9;
  *(_OWORD *)(a1 + 80) = v2;
  v21 = *(_QWORD *)(v1 + 400);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(v1 + 400);
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v4;
  return sub_1A443527C((uint64_t)v14);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.minedRuleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 408);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.filteredOutRulesCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 416);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.trainingSetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 424);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.validationSetCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 432);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.distinctListCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 440);
}

double REMSuggestedAttributesTrainer.Result.CoreBehavior.trainingDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 448);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.topRules.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall REMSuggestedAttributesTrainer.Result.CoreBehavior.init(listAccuracy:dueDayOfWeekAccuracy:alarmLocationAccuracy:minedRuleCount:filteredOutRulesCount:distinctListCount:trainingSetCount:validationSetCount:trainingDuration:topRules:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::CoreBehavior *__return_ptr retstr, ReminderKitInternal::REMSuggestedAttributesAccuracy *listAccuracy, ReminderKitInternal::REMSuggestedAttributesAccuracy *dueDayOfWeekAccuracy, ReminderKitInternal::REMSuggestedAttributesAccuracy *alarmLocationAccuracy, Swift::Int minedRuleCount, Swift::Int filteredOutRulesCount, Swift::Int distinctListCount, Swift::Int trainingSetCount, Swift::Int validationSetCount, Swift::Double trainingDuration, Swift::OpaquePointer topRules)
{
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  void *rawValue;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[26];

  v18 = *(_OWORD *)&listAccuracy->metrics.precision;
  v31[6] = *(_OWORD *)&listAccuracy->metrics.typeIIErrors._rawValue;
  v31[7] = v18;
  v19 = *(_OWORD *)&listAccuracy->metrics.trueNegatives._rawValue;
  v31[2] = *(_OWORD *)&listAccuracy->metrics.confusionMatrix._rawValue;
  v31[3] = v19;
  v20 = *(_OWORD *)&listAccuracy->metrics.recalls._rawValue;
  v31[4] = *(_OWORD *)&listAccuracy->metrics.falseNegatives._rawValue;
  v31[5] = v20;
  v21 = *(_OWORD *)&listAccuracy->metrics.correctIndices._rawValue;
  v31[0] = *(_OWORD *)&listAccuracy->correctSample._rawValue;
  v31[1] = v21;
  v22 = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.falseNegatives._rawValue;
  *(_OWORD *)((char *)&v31[13] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.recalls._rawValue;
  v23 = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.precision;
  *(_OWORD *)((char *)&v31[14] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.typeIIErrors._rawValue;
  *(_OWORD *)((char *)&v31[15] + 8) = v23;
  v24 = *(_OWORD *)&dueDayOfWeekAccuracy->correctSample._rawValue;
  *(_OWORD *)((char *)&v31[9] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.correctIndices._rawValue;
  v25 = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.trueNegatives._rawValue;
  *(_OWORD *)((char *)&v31[10] + 8) = *(_OWORD *)&dueDayOfWeekAccuracy->metrics.confusionMatrix._rawValue;
  *(_OWORD *)((char *)&v31[11] + 8) = v25;
  rawValue = dueDayOfWeekAccuracy->metrics.indexedClasses._rawValue;
  *(_QWORD *)&v31[8] = listAccuracy->metrics.indexedClasses._rawValue;
  *((_QWORD *)&v31[16] + 1) = rawValue;
  *(_OWORD *)((char *)&v31[12] + 8) = v22;
  *(_OWORD *)((char *)&v31[8] + 8) = v24;
  v27 = *(_OWORD *)&alarmLocationAccuracy->metrics.precision;
  v31[23] = *(_OWORD *)&alarmLocationAccuracy->metrics.typeIIErrors._rawValue;
  v31[24] = v27;
  *(_QWORD *)&v31[25] = alarmLocationAccuracy->metrics.indexedClasses._rawValue;
  v28 = *(_OWORD *)&alarmLocationAccuracy->metrics.trueNegatives._rawValue;
  v31[19] = *(_OWORD *)&alarmLocationAccuracy->metrics.confusionMatrix._rawValue;
  v31[20] = v28;
  v29 = *(_OWORD *)&alarmLocationAccuracy->metrics.recalls._rawValue;
  v31[21] = *(_OWORD *)&alarmLocationAccuracy->metrics.falseNegatives._rawValue;
  v31[22] = v29;
  v30 = *(_OWORD *)&alarmLocationAccuracy->metrics.correctIndices._rawValue;
  v31[17] = *(_OWORD *)&alarmLocationAccuracy->correctSample._rawValue;
  v31[18] = v30;
  memcpy(retstr, v31, 0x198uLL);
  retstr->minedRuleCount = minedRuleCount;
  retstr->filteredOutRulesCount = filteredOutRulesCount;
  retstr->trainingSetCount = trainingSetCount;
  retstr->validationSetCount = validationSetCount;
  retstr->distinctListCount = distinctListCount;
  retstr->trainingDuration = trainingDuration;
  retstr->topRules = topRules;
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = *(_QWORD *)(v1 + 16);
  v41 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v11 = *(_QWORD *)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 120);
  v13 = *(_QWORD *)(v1 + 128);
  v45 = *(_QWORD *)(v1 + 160);
  v46 = *(_QWORD *)(v1 + 152);
  v43 = *(_QWORD *)(v1 + 176);
  v44 = *(_QWORD *)(v1 + 168);
  v42 = *(_QWORD *)(v1 + 184);
  v29 = *(_QWORD *)(v1 + 192);
  v30 = *(_QWORD *)(v1 + 200);
  v31 = *(_QWORD *)(v1 + 208);
  v32 = *(_QWORD *)(v1 + 216);
  v33 = *(_QWORD *)(v1 + 224);
  v34 = *(_QWORD *)(v1 + 232);
  v14 = *(_QWORD *)(v1 + 256);
  v15 = *(_QWORD *)(v1 + 264);
  v16 = *(_QWORD *)(v1 + 288);
  v47 = *(_QWORD *)(v1 + 296);
  v17 = *(_QWORD *)(v1 + 408);
  v18 = *(_QWORD *)(v1 + 400);
  v19 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)a1 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 8) = v19;
  *(_QWORD *)(a1 + 128) = v13;
  *(_QWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 144) = v19;
  *(_QWORD *)(a1 + 264) = v15;
  *(_QWORD *)(a1 + 272) = v19;
  *(_QWORD *)(a1 + 280) = v19;
  *(_QWORD *)(a1 + 400) = v18;
  *(_QWORD *)(a1 + 408) = v17;
  *(_QWORD *)(a1 + 456) = v19;
  v20 = *(_QWORD *)(v1 + 304);
  v35 = *(_QWORD *)(v1 + 312);
  v21 = *(_QWORD *)(v1 + 376);
  v22 = *(_QWORD *)(v1 + 448);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(v1 + 104);
  *(_QWORD *)(a1 + 120) = v12;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(v1 + 240);
  *(_QWORD *)(a1 + 256) = v14;
  v23 = *(_OWORD *)(v1 + 384);
  v24 = *(_OWORD *)(v1 + 416);
  v25 = *(_OWORD *)(v1 + 432);
  v26 = *(_QWORD *)(v1 + 320);
  v36 = *(_QWORD *)(v1 + 328);
  v37 = *(_QWORD *)(v1 + 336);
  v38 = *(_QWORD *)(v1 + 344);
  v39 = *(_QWORD *)(v1 + 352);
  v40 = *(_QWORD *)(v1 + 360);
  v27 = *(_QWORD *)(v1 + 368);
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v41;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 152) = v46;
  *(_QWORD *)(a1 + 160) = v45;
  *(_QWORD *)(a1 + 168) = v44;
  *(_QWORD *)(a1 + 176) = v43;
  *(_QWORD *)(a1 + 184) = v42;
  *(_QWORD *)(a1 + 192) = v29;
  *(_QWORD *)(a1 + 200) = v30;
  *(_QWORD *)(a1 + 208) = v31;
  *(_QWORD *)(a1 + 216) = v32;
  *(_QWORD *)(a1 + 224) = v33;
  *(_QWORD *)(a1 + 232) = v34;
  *(_QWORD *)(a1 + 288) = v16;
  *(_QWORD *)(a1 + 296) = v47;
  *(_QWORD *)(a1 + 304) = v20;
  *(_QWORD *)(a1 + 312) = v35;
  *(_QWORD *)(a1 + 320) = v26;
  *(_QWORD *)(a1 + 328) = v36;
  *(_QWORD *)(a1 + 336) = v37;
  *(_QWORD *)(a1 + 344) = v38;
  *(_QWORD *)(a1 + 352) = v39;
  *(_QWORD *)(a1 + 360) = v40;
  *(_QWORD *)(a1 + 368) = v27;
  *(_QWORD *)(a1 + 376) = v21;
  *(_OWORD *)(a1 + 384) = v23;
  *(_OWORD *)(a1 + 416) = v24;
  *(_OWORD *)(a1 + 432) = v25;
  *(_QWORD *)(a1 + 448) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A45B65F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45B662C + 4 * byte_1A46A686B[a1]))(0x756363417473696CLL, 0xEC00000079636172);
}

unint64_t sub_1A45B662C()
{
  return 0xD000000000000014;
}

uint64_t sub_1A45B6700()
{
  return 0x73656C7552706F74;
}

uint64_t sub_1A45B6718()
{
  unsigned __int8 *v0;

  return sub_1A45B65F0(*v0);
}

uint64_t sub_1A45B6720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45C0D90(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A45B6744(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1A45B6750()
{
  sub_1A45BF724();
  return sub_1A4691DB8();
}

uint64_t sub_1A45B6778()
{
  sub_1A45BF724();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *((_QWORD *)v3 + 51);
  v27 = *((_QWORD *)v3 + 52);
  v26 = *((_QWORD *)v3 + 53);
  v25 = *((_QWORD *)v3 + 54);
  v24 = *((_QWORD *)v3 + 55);
  v23 = *((_QWORD *)v3 + 57);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BF724();
  sub_1A4691D40();
  v9 = v3[7];
  v36 = v3[6];
  v37 = v9;
  v38 = *((_QWORD *)v3 + 16);
  v10 = v3[3];
  v32 = v3[2];
  v33 = v10;
  v11 = v3[5];
  v34 = v3[4];
  v35 = v11;
  v12 = v3[1];
  v30 = *v3;
  v31 = v12;
  v29 = 0;
  sub_1A45BF658();
  sub_1A4691890();
  if (!v2)
  {
    v13 = *(__int128 *)((char *)v3 + 216);
    v14 = *(__int128 *)((char *)v3 + 248);
    v36 = *(__int128 *)((char *)v3 + 232);
    v37 = v14;
    v38 = *((_QWORD *)v3 + 33);
    v15 = *(__int128 *)((char *)v3 + 152);
    v16 = *(__int128 *)((char *)v3 + 184);
    v32 = *(__int128 *)((char *)v3 + 168);
    v33 = v16;
    v34 = *(__int128 *)((char *)v3 + 200);
    v35 = v13;
    v30 = *(__int128 *)((char *)v3 + 136);
    v31 = v15;
    v29 = 1;
    sub_1A4691890();
    v17 = v3[24];
    v36 = v3[23];
    v37 = v17;
    v38 = *((_QWORD *)v3 + 50);
    v18 = v3[20];
    v32 = v3[19];
    v33 = v18;
    v19 = v3[22];
    v34 = v3[21];
    v35 = v19;
    v20 = v3[18];
    v30 = v3[17];
    v31 = v20;
    v29 = 2;
    sub_1A4691890();
    LOBYTE(v30) = 3;
    sub_1A4691878();
    LOBYTE(v30) = 4;
    sub_1A4691878();
    LOBYTE(v30) = 5;
    sub_1A4691878();
    LOBYTE(v30) = 6;
    sub_1A4691878();
    LOBYTE(v30) = 7;
    sub_1A4691878();
    LOBYTE(v30) = 8;
    sub_1A469186C();
    *(_QWORD *)&v30 = v23;
    v29 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A45BFCA0(&qword_1ED23EAB8, &qword_1ED242FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSuggestedAttributesTrainer.Result.CoreBehavior.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[29];
  _BYTE v24[408];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  uint64_t v80;
  char v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  _OWORD v91[27];

  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E88);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BF724();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a2;
  v21 = v5;
  v81 = 0;
  sub_1A45BF69C();
  sub_1A46917C4();
  v78 = v88;
  v79 = v89;
  v74 = v84;
  v75 = v85;
  v77 = v87;
  v76 = v86;
  v73 = v83;
  v72 = v82;
  v91[6] = v88;
  v91[7] = v89;
  v91[2] = v84;
  v91[3] = v85;
  v91[5] = v87;
  v91[4] = v86;
  v80 = v90;
  *(_QWORD *)&v91[8] = v90;
  v91[1] = v83;
  v91[0] = v82;
  v62 = 1;
  sub_1A443527C((uint64_t)&v72);
  sub_1A46917C4();
  v59 = v69;
  v60 = v70;
  v55 = v65;
  v56 = v66;
  v58 = v68;
  v57 = v67;
  v54 = v64;
  v53 = v63;
  *(_OWORD *)((char *)&v91[13] + 8) = v68;
  *(_OWORD *)((char *)&v91[14] + 8) = v69;
  *(_OWORD *)((char *)&v91[15] + 8) = v70;
  *(_OWORD *)((char *)&v91[9] + 8) = v64;
  *(_OWORD *)((char *)&v91[10] + 8) = v65;
  *(_OWORD *)((char *)&v91[11] + 8) = v66;
  *(_OWORD *)((char *)&v91[12] + 8) = v67;
  v61 = v71;
  *((_QWORD *)&v91[16] + 1) = v71;
  *(_OWORD *)((char *)&v91[8] + 8) = v63;
  v43 = 2;
  sub_1A443527C((uint64_t)&v53);
  sub_1A46917C4();
  v40 = v50;
  v41 = v51;
  v36 = v46;
  v37 = v47;
  v39 = v49;
  v38 = v48;
  v34 = v44;
  v35 = v45;
  v91[23] = v50;
  v91[24] = v51;
  v91[19] = v46;
  v91[20] = v47;
  v91[22] = v49;
  v91[21] = v48;
  v42 = v52;
  *(_QWORD *)&v91[25] = v52;
  v91[18] = v45;
  v91[17] = v44;
  v24[0] = 3;
  sub_1A443527C((uint64_t)&v34);
  v8 = sub_1A46917AC();
  v24[0] = 4;
  v9 = sub_1A46917AC();
  v24[0] = 5;
  v19 = sub_1A46917AC();
  v24[0] = 6;
  v18 = sub_1A46917AC();
  v24[0] = 7;
  v17 = sub_1A46917AC();
  v24[0] = 8;
  sub_1A46917A0();
  v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v32 = 9;
  sub_1A45BFCA0(&qword_1ED23E750, &qword_1ED242FF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  v23[6] = v78;
  v23[7] = v79;
  v23[2] = v74;
  v23[3] = v75;
  v23[4] = v76;
  v23[5] = v77;
  v23[0] = v72;
  v23[1] = v73;
  *(_OWORD *)((char *)&v23[13] + 8) = v58;
  *(_OWORD *)((char *)&v23[14] + 8) = v59;
  *(_OWORD *)((char *)&v23[15] + 8) = v60;
  *(_OWORD *)((char *)&v23[9] + 8) = v54;
  *(_OWORD *)((char *)&v23[10] + 8) = v55;
  *(_OWORD *)((char *)&v23[11] + 8) = v56;
  v12 = v33;
  *(_QWORD *)&v23[8] = v80;
  *((_QWORD *)&v23[16] + 1) = v61;
  *(_OWORD *)((char *)&v23[12] + 8) = v57;
  *(_OWORD *)((char *)&v23[8] + 8) = v53;
  v23[23] = v40;
  v23[24] = v41;
  v23[19] = v36;
  v23[20] = v37;
  v23[21] = v38;
  v23[22] = v39;
  v23[17] = v34;
  v23[18] = v35;
  *(_QWORD *)&v23[25] = v42;
  *((_QWORD *)&v23[25] + 1) = v8;
  v14 = v18;
  v13 = v19;
  *(_QWORD *)&v23[26] = v9;
  *((_QWORD *)&v23[26] + 1) = v19;
  v15 = v17;
  *(_QWORD *)&v23[27] = v18;
  *((_QWORD *)&v23[27] + 1) = v17;
  *(_QWORD *)&v23[28] = v11;
  *((_QWORD *)&v23[28] + 1) = v33;
  sub_1A45BF768((uint64_t)v23);
  sub_1A443535C((uint64_t)&v34);
  sub_1A443535C((uint64_t)&v53);
  sub_1A443535C((uint64_t)&v72);
  memcpy(v20, v23, 0x1D0uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  memcpy(v24, v91, sizeof(v24));
  v25 = v8;
  v26 = v9;
  v27 = v13;
  v28 = v14;
  v29 = v15;
  v30 = v11;
  v31 = v12;
  return sub_1A45BF9E0((uint64_t)v24);
}

uint64_t sub_1A45B7360@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.CoreBehavior.init(from:)(a1, a2);
}

uint64_t sub_1A45B7374(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.CoreBehavior.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.clusterVariances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.clusterLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.clusterSizes.getter()
{
  return swift_bridgeObjectRetain();
}

double REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.mse.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.trainingDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.init(clusterLabels:clusterVariances:clusterSizes:mse:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::IntentionalWordPrescribed *__return_ptr retstr, Swift::OpaquePointer clusterLabels, Swift::OpaquePointer clusterVariances, Swift::OpaquePointer clusterSizes, Swift::Double mse, Swift::Double trainingDuration)
{
  retstr->clusterVariances = clusterVariances;
  retstr->clusterLabels = clusterLabels;
  retstr->clusterSizes = clusterSizes;
  retstr->mse = mse;
  retstr->trainingDuration = trainingDuration;
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A45B7408(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A45B7440 + 4 * byte_1A46A6875[a1]))(0xD000000000000010, 0x80000001A46C1EE0);
}

uint64_t sub_1A45B7440()
{
  return 0x4C72657473756C63;
}

uint64_t sub_1A45B7464()
{
  return 0x5372657473756C63;
}

uint64_t sub_1A45B7484()
{
  return 6648685;
}

uint64_t sub_1A45B74A8()
{
  unsigned __int8 *v0;

  return sub_1A45B7408(*v0);
}

uint64_t sub_1A45B74B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45C1180(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45B74D4()
{
  sub_1A45BFC5C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45B74FC()
{
  sub_1A45BFC5C();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721E90);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BFC5C();
  sub_1A4691D40();
  v16 = v9;
  v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
  sub_1A45BFCA0(&qword_1EE721EA8, &qword_1EE721EA0, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v10 = v13;
    v16 = v14;
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A45BFCA0(&qword_1ED23EAB8, &qword_1ED242FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
    v16 = v10;
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7C0);
    sub_1A45BFCA0(&qword_1EE721EB0, &qword_1EE71C7C0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
    LOBYTE(v16) = 3;
    sub_1A469186C();
    LOBYTE(v16) = 4;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EB8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BFC5C();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
  v21 = 0;
  sub_1A45BFCA0(&qword_1EE721EC0, &qword_1EE721EA0, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v21 = 1;
  sub_1A45BFCA0(&qword_1ED23E750, &qword_1ED242FF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v20 = v9;
  v10 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7C0);
  v21 = 2;
  sub_1A45BFCA0(&qword_1EE721EC8, &qword_1EE71C7C0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v19 = v10;
  v11 = v22;
  LOBYTE(v22) = 3;
  swift_bridgeObjectRetain();
  sub_1A46917A0();
  v13 = v12;
  LOBYTE(v22) = 4;
  sub_1A46917A0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v19;
  *a2 = v20;
  a2[1] = v17;
  a2[2] = v11;
  a2[3] = v13;
  a2[4] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45B7B70@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.init(from:)(a1, a2);
}

uint64_t sub_1A45B7B84(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.bestK.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.bestClusterLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.clusterVariances.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.clusterSizes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.mse.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.minK.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

void __swiftcall REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.init(bestK:bestClusterLabels:minK:maxK:clusterVariances:clusterSizes:mse:trainingDuration:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Result::IntentionalWordTuned *__return_ptr retstr, Swift::Int bestK, Swift::OpaquePointer bestClusterLabels, Swift::Int minK, Swift::Int maxK, Swift::OpaquePointer clusterVariances, Swift::OpaquePointer clusterSizes, Swift::OpaquePointer mse, Swift::Double trainingDuration)
{
  retstr->bestK = bestK;
  retstr->bestClusterLabels = bestClusterLabels;
  retstr->clusterVariances = clusterVariances;
  retstr->clusterSizes = clusterSizes;
  retstr->mse = mse;
  retstr->minK = minK;
  retstr->maxK = maxK;
  retstr->trainingDuration = trainingDuration;
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A45B7C40(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45B7C70 + 4 * byte_1A46A687A[a1]))(0x4B74736562, 0xE500000000000000);
}

unint64_t sub_1A45B7C70()
{
  return 0xD000000000000011;
}

unint64_t sub_1A45B7C90()
{
  return 0xD000000000000010;
}

uint64_t sub_1A45B7D08()
{
  unsigned __int8 *v0;

  return sub_1A45B7C40(*v0);
}

uint64_t sub_1A45B7D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45C13C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A45B7D34(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1A45B7D40()
{
  sub_1A45BFCFC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45B7D68()
{
  sub_1A45BFCFC();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721ED0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v19 = v1[2];
  v20 = v8;
  v9 = v1[3];
  v17 = v1[4];
  v18 = v9;
  v10 = v1[5];
  v16[0] = v1[6];
  v16[1] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BFCFC();
  sub_1A4691D40();
  LOBYTE(v22) = 0;
  v11 = v7;
  sub_1A4691878();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = v18;
  v14 = v19;
  v15 = v17;
  v22 = v20;
  v21 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A45BFCA0(&qword_1ED23EAB8, &qword_1ED242FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  v22 = v14;
  v21 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EE0);
  sub_1A45BFD40(&qword_1EE721EE8, &qword_1EE721EA8, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  v22 = v13;
  v21 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EF0);
  sub_1A45BFDC8(&qword_1EE721EF8, &qword_1EE721EB0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  v22 = v15;
  v21 = 4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
  sub_1A45BFCA0(&qword_1EE721EA8, &qword_1EE721EA0, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  LOBYTE(v22) = 5;
  sub_1A4691878();
  LOBYTE(v22) = 6;
  sub_1A4691878();
  LOBYTE(v22) = 7;
  sub_1A469186C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BFCFC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v26) = 0;
  v9 = sub_1A46917AC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v25 = 1;
  sub_1A45BFCA0(&qword_1ED23E750, &qword_1ED242FF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v24 = v9;
  v11 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EE0);
  v25 = 2;
  sub_1A45BFD40(&qword_1EE721F08, &qword_1EE721EC0, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v23 = v11;
  v12 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EF0);
  v25 = 3;
  sub_1A45BFDC8(&qword_1EE721F10, &qword_1EE721EC8, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v22 = v12;
  v13 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
  v25 = 4;
  sub_1A45BFCA0(&qword_1EE721EC0, &qword_1EE721EA0, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v14 = v26;
  LOBYTE(v26) = 5;
  swift_bridgeObjectRetain();
  v21 = sub_1A46917AC();
  LOBYTE(v26) = 6;
  v20 = sub_1A46917AC();
  LOBYTE(v26) = 7;
  sub_1A46917A0();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v17 = v23;
  *a2 = v24;
  a2[1] = v17;
  v18 = v21;
  a2[2] = v22;
  a2[3] = v13;
  a2[4] = v14;
  a2[5] = v18;
  a2[6] = v20;
  a2[7] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45B8618@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.init(from:)(a1, a2);
}

uint64_t sub_1A45B862C(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWord.droppingSensitiveFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v11 = v1[7];
  v12 = v1[6];
  v9 = *((_BYTE *)v1 + 64);
  if ((v9 & 1) == 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v12;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v9;
  return result;
}

uint64_t sub_1A45B86F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWord.init(from:)(a1, a2);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BFE50();
  sub_1A4691D28();
  if (!v2)
  {
    v21 = 0;
    sub_1A45BFE94();
    sub_1A46917C4();
    v10 = v16;
    v21 = 1;
    if ((v16 & 1) != 0)
    {
      sub_1A45BFED8();
      sub_1A46917C4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v11 = 0;
      v12 = v16;
      v13 = v17;
      v14 = 0uLL;
      v15 = v18;
    }
    else
    {
      sub_1A45BFF1C();
      sub_1A46917C4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v12 = v16;
      v13 = v17;
      v15 = v18;
      v14 = v19;
      v11 = v20;
    }
    *(_QWORD *)a2 = v12;
    *(_OWORD *)(a2 + 8) = v13;
    *(_OWORD *)(a2 + 24) = v15;
    *(_OWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 56) = v11;
    *(_BYTE *)(a2 + 64) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45B8910(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.IntentionalWord.encode(to:)(a1);
}

uint64_t REMSuggestedAttributesTrainer.Result.IntentionalWord.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F40);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v16 = *v1;
  v17 = v8;
  v9 = v1[3];
  v18 = v1[2];
  v19 = v9;
  v20 = v1[4];
  v10 = v1[5];
  v14 = v1[6];
  v15 = v10;
  v11 = v1[7];
  v12 = *((_BYTE *)v1 + 64);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45BFE50();
  sub_1A4691D40();
  if ((v12 & 1) != 0)
  {
    LOBYTE(v21) = 1;
    v29 = 0;
    sub_1A45BFF60();
    sub_1A4691890();
    if (!v2)
    {
      v21 = v16;
      v22 = v17;
      v23 = v18;
      v24 = v19;
      v25 = v20;
      v29 = 1;
      sub_1A45BFFA4();
LABEL_6:
      sub_1A4691890();
    }
  }
  else
  {
    LOBYTE(v21) = 0;
    v29 = 0;
    sub_1A45BFF60();
    sub_1A4691890();
    if (!v2)
    {
      v21 = v16;
      v22 = v17;
      v23 = v18;
      v24 = v19;
      v25 = v20;
      v26 = v15;
      v27 = v14;
      v28 = v11;
      v29 = 1;
      sub_1A45BFFE8();
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.embedding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[176];

  sub_1A44C6CC8(v1, (uint64_t)v4, &qword_1EE721F60);
  sub_1A44C6CC8((uint64_t)v4, a1, &qword_1EE721F60);
  return sub_1A45C05E0((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496858);
}

uint64_t REMSuggestedAttributesTrainer.Result.anchoredBubble.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v1 + 176);
  v3 = *(_QWORD *)(v1 + 184);
  v4 = *(_QWORD *)(v1 + 192);
  v5 = *(_QWORD *)(v1 + 200);
  v6 = *(_QWORD *)(v1 + 208);
  v7 = *(_QWORD *)(v1 + 216);
  v8 = *(_QWORD *)(v1 + 224);
  v9 = *(_BYTE *)(v1 + 232);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = v9;
  return sub_1A449694C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t REMSuggestedAttributesTrainer.Result.corebehavior.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[472];

  sub_1A44C6CC8(v1 + 240, (uint64_t)v4, &qword_1EE721F68);
  sub_1A44C6CC8((uint64_t)v4, a1, &qword_1EE721F68);
  return sub_1A45C064C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496988);
}

uint64_t REMSuggestedAttributesTrainer.Result.intentionalWord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v2 = *(_QWORD *)(v1 + 712);
  v3 = *(_QWORD *)(v1 + 720);
  v4 = *(_QWORD *)(v1 + 728);
  v5 = *(_QWORD *)(v1 + 736);
  v6 = *(_QWORD *)(v1 + 744);
  v7 = *(_QWORD *)(v1 + 752);
  v8 = *(_QWORD *)(v1 + 760);
  v9 = *(_QWORD *)(v1 + 768);
  v10 = *(_BYTE *)(v1 + 776);
  v11 = *(_BYTE *)(v1 + 777);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  *(_BYTE *)(a1 + 65) = v11;
  return sub_1A4496C38(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
}

double REMSuggestedAttributesTrainer.Result.trainingDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 784);
}

void *REMSuggestedAttributesTrainer.Result.init(embedding:anchoredBubble:corebehavior:intentionalWord:trainingDuration:)@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, void *a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[176];
  _BYTE v24[472];
  _OWORD __src[50];

  sub_1A44C6CC8(a1, (uint64_t)v23, &qword_1EE721F60);
  v21 = a2[1];
  v22 = *a2;
  v20 = a2[2];
  v11 = *((_QWORD *)a2 + 6);
  v12 = *((_BYTE *)a2 + 56);
  sub_1A44C6CC8(a3, (uint64_t)v24, &qword_1EE721F68);
  v18 = a4[1];
  v19 = *a4;
  v17 = a4[2];
  v13 = *((_QWORD *)a4 + 6);
  v14 = *((_QWORD *)a4 + 7);
  v15 = *((_BYTE *)a4 + 64);
  LOBYTE(a4) = *((_BYTE *)a4 + 65);
  sub_1A44C6CC8((uint64_t)v23, (uint64_t)__src, &qword_1EE721F60);
  __src[11] = v22;
  __src[12] = v21;
  __src[13] = v20;
  *(_QWORD *)&__src[14] = v11;
  BYTE8(__src[14]) = v12;
  sub_1A44C6CC8((uint64_t)v24, (uint64_t)&__src[15], &qword_1EE721F68);
  *(_OWORD *)((char *)&__src[44] + 8) = v19;
  *(_OWORD *)((char *)&__src[45] + 8) = v18;
  *(_OWORD *)((char *)&__src[46] + 8) = v17;
  *((_QWORD *)&__src[47] + 1) = v13;
  *(_QWORD *)&__src[48] = v14;
  BYTE8(__src[48]) = v15;
  BYTE9(__src[48]) = (_BYTE)a4;
  *(double *)&__src[49] = a6;
  return memcpy(a5, __src, 0x318uLL);
}

uint64_t REMSuggestedAttributesTrainer.Result.shortDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 784);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A20);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEB070];
  *(_OWORD *)(v2 + 16) = xmmword_1A4695C10;
  v4 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = v4;
  *(_QWORD *)(v2 + 32) = v1;
  sub_1A46908C4();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  return 14948;
}

void *REMSuggestedAttributesTrainer.Result.droppingSensitiveFields.getter@<X0>(void *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  int v97;
  _BYTE v98[472];
  _BYTE __src[792];
  _BYTE v100[472];
  _BYTE v101[472];
  _BYTE v102[176];
  _BYTE v103[176];
  _BYTE v104[472];
  _BYTE v105[184];

  sub_1A44C6CC8(v1, (uint64_t)v103, &qword_1EE721F60);
  v88 = *(_QWORD *)(v1 + 192);
  v89 = *(_QWORD *)(v1 + 176);
  v93 = *(_QWORD *)(v1 + 208);
  v94 = *(_QWORD *)(v1 + 184);
  v86 = *(_QWORD *)(v1 + 216);
  v87 = *(_QWORD *)(v1 + 200);
  v92 = *(_QWORD *)(v1 + 224);
  v97 = *(unsigned __int8 *)(v1 + 232);
  sub_1A44C6CC8(v1 + 240, (uint64_t)v104, &qword_1EE721F68);
  v85 = *(_QWORD *)(v1 + 712);
  v2 = *(_QWORD *)(v1 + 720);
  v3 = *(_QWORD *)(v1 + 728);
  v4 = *(_QWORD *)(v1 + 736);
  v5 = *(_QWORD *)(v1 + 744);
  v96 = *(_QWORD *)(v1 + 760);
  v79 = *(_QWORD *)(v1 + 768);
  v80 = *(_QWORD *)(v1 + 752);
  v91 = *(_BYTE *)(v1 + 776);
  v95 = *(_BYTE *)(v1 + 777);
  v6 = *(_QWORD *)(v1 + 784);
  sub_1A44C6CC8((uint64_t)v103, (uint64_t)v105, &qword_1EE721F60);
  v7 = sub_1A45C002C((uint64_t)v105);
  v8 = MEMORY[0x1E0DEE9D8];
  v83 = v3;
  v84 = v2;
  v81 = v5;
  v82 = v4;
  if (v7 == 1)
  {
    sub_1A44C6CC8((uint64_t)v103, (uint64_t)__src, &qword_1EE721F60);
    nullsub_1(__src, v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = v103;
  }
  else
  {
    sub_1A44C6CC8((uint64_t)v103, (uint64_t)v101, &qword_1EE721F60);
    v12 = nullsub_1(v101, v11);
    v13 = *(_QWORD *)(v12 + 152);
    v14 = *(_QWORD *)(v12 + 160);
    v15 = *(_QWORD *)(v12 + 16);
    v16 = *(_QWORD *)(v12 + 24);
    v17 = *(_QWORD *)(v12 + 32);
    v18 = *(_QWORD *)(v12 + 40);
    v19 = v8;
    v20 = *(_QWORD *)(v12 + 48);
    v21 = *(_QWORD *)(v12 + 56);
    v22 = *(_QWORD *)(v12 + 64);
    v23 = *(_QWORD *)(v12 + 72);
    v25 = *(_QWORD *)(v12 + 80);
    v24 = *(_QWORD *)(v12 + 88);
    v26 = *(_QWORD *)(v12 + 120);
    v75 = *(_QWORD *)(v12 + 128);
    v77 = *(_QWORD *)(v12 + 96);
    *(_QWORD *)__src = v19;
    *(_QWORD *)&__src[8] = v19;
    *(_QWORD *)&__src[16] = v15;
    *(_QWORD *)&__src[24] = v16;
    *(_QWORD *)&__src[32] = v17;
    *(_QWORD *)&__src[40] = v18;
    *(_QWORD *)&__src[48] = v20;
    *(_QWORD *)&__src[56] = v21;
    *(_QWORD *)&__src[64] = v22;
    *(_QWORD *)&__src[72] = v23;
    *(_QWORD *)&__src[80] = v25;
    *(_QWORD *)&__src[88] = v24;
    *(_QWORD *)&__src[96] = v77;
    *(_OWORD *)&__src[104] = *(_OWORD *)(v12 + 104);
    *(_QWORD *)&__src[120] = v26;
    *(_OWORD *)&__src[136] = *(_OWORD *)(v12 + 136);
    *(_QWORD *)&__src[128] = v75;
    *(_QWORD *)&__src[152] = v13;
    *(_QWORD *)&__src[160] = v14;
    sub_1A45C0044((uint64_t)__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = __src;
  }
  sub_1A44C6CC8((uint64_t)v10, (uint64_t)v102, &qword_1EE721F60);
  if (v97)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1A44C6CC8((uint64_t)v104, (uint64_t)v101, &qword_1EE721F68);
  if (sub_1A45C0034((uint64_t)v101) == 1)
  {
    sub_1A44C6CC8((uint64_t)v104, (uint64_t)__src, &qword_1EE721F68);
    nullsub_1(__src, v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v104;
  }
  else
  {
    sub_1A44C6CC8((uint64_t)v104, (uint64_t)v98, &qword_1EE721F68);
    v30 = nullsub_1(v98, v29);
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    v33 = *(_QWORD *)(v30 + 32);
    v34 = *(_QWORD *)(v30 + 40);
    v35 = *(_QWORD *)(v30 + 48);
    v63 = *(_QWORD *)(v30 + 56);
    v36 = *(_QWORD *)(v30 + 64);
    v37 = *(_QWORD *)(v30 + 72);
    v38 = *(_QWORD *)(v30 + 80);
    v39 = *(_QWORD *)(v30 + 88);
    v40 = *(_QWORD *)(v30 + 120);
    v70 = *(_QWORD *)(v30 + 96);
    v71 = *(_QWORD *)(v30 + 152);
    v74 = *(_QWORD *)(v30 + 168);
    v76 = *(_QWORD *)(v30 + 176);
    v78 = *(_QWORD *)(v30 + 184);
    v72 = *(_QWORD *)(v30 + 160);
    v73 = *(_QWORD *)(v30 + 192);
    v69 = *(_QWORD *)(v30 + 200);
    v50 = *(_QWORD *)(v30 + 128);
    v51 = *(_QWORD *)(v30 + 208);
    v52 = *(_QWORD *)(v30 + 216);
    v53 = *(_QWORD *)(v30 + 224);
    v41 = *(_QWORD *)(v30 + 256);
    v56 = *(_QWORD *)(v30 + 288);
    v57 = *(_QWORD *)(v30 + 296);
    v58 = *(_QWORD *)(v30 + 304);
    v59 = *(_QWORD *)(v30 + 264);
    v42 = *(_QWORD *)(v30 + 376);
    v43 = *(_OWORD *)(v30 + 104);
    v44 = *(_OWORD *)(v30 + 240);
    v45 = *(_OWORD *)(v30 + 384);
    v54 = *(_QWORD *)(v30 + 232);
    v55 = *(_QWORD *)(v30 + 320);
    v60 = *(_QWORD *)(v30 + 328);
    v61 = *(_QWORD *)(v30 + 312);
    v62 = *(_QWORD *)(v30 + 336);
    v64 = *(_QWORD *)(v30 + 344);
    v65 = *(_QWORD *)(v30 + 352);
    v66 = *(_QWORD *)(v30 + 360);
    v67 = *(_QWORD *)(v30 + 368);
    v68 = *(_QWORD *)(v30 + 400);
    *(_QWORD *)&__src[408] = *(_QWORD *)(v30 + 408);
    v46 = *(_QWORD *)(v30 + 448);
    v47 = *(_OWORD *)(v30 + 416);
    v48 = *(_OWORD *)(v30 + 432);
    *(_OWORD *)&__src[104] = v43;
    *(_OWORD *)&__src[240] = v44;
    *(_OWORD *)&__src[384] = v45;
    *(_OWORD *)&__src[416] = v47;
    *(_OWORD *)&__src[432] = v48;
    *(_QWORD *)__src = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[8] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[136] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[144] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[272] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[280] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[456] = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&__src[128] = v50;
    *(_QWORD *)&__src[264] = v59;
    *(_QWORD *)&__src[400] = v68;
    *(_QWORD *)&__src[16] = v32;
    *(_QWORD *)&__src[24] = v31;
    *(_QWORD *)&__src[32] = v33;
    *(_QWORD *)&__src[40] = v34;
    *(_QWORD *)&__src[48] = v35;
    *(_QWORD *)&__src[56] = v63;
    *(_QWORD *)&__src[64] = v36;
    *(_QWORD *)&__src[72] = v37;
    *(_QWORD *)&__src[80] = v38;
    *(_QWORD *)&__src[88] = v39;
    *(_QWORD *)&__src[96] = v70;
    *(_QWORD *)&__src[120] = v40;
    *(_QWORD *)&__src[152] = v71;
    *(_QWORD *)&__src[160] = v72;
    *(_QWORD *)&__src[168] = v74;
    *(_QWORD *)&__src[176] = v76;
    *(_QWORD *)&__src[184] = v78;
    *(_QWORD *)&__src[192] = v73;
    *(_QWORD *)&__src[200] = v69;
    *(_QWORD *)&__src[208] = v51;
    *(_QWORD *)&__src[216] = v52;
    *(_QWORD *)&__src[224] = v53;
    *(_QWORD *)&__src[232] = v54;
    *(_QWORD *)&__src[256] = v41;
    *(_QWORD *)&__src[288] = v56;
    *(_QWORD *)&__src[296] = v57;
    *(_QWORD *)&__src[304] = v58;
    *(_QWORD *)&__src[312] = v61;
    *(_QWORD *)&__src[320] = v55;
    *(_QWORD *)&__src[328] = v60;
    *(_QWORD *)&__src[336] = v62;
    *(_QWORD *)&__src[344] = v64;
    *(_QWORD *)&__src[352] = v65;
    *(_QWORD *)&__src[360] = v66;
    *(_QWORD *)&__src[368] = v67;
    *(_QWORD *)&__src[376] = v42;
    *(_QWORD *)&__src[448] = v46;
    sub_1A45C003C((uint64_t)__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = __src;
  }
  sub_1A44C6CC8((uint64_t)v28, (uint64_t)v100, &qword_1EE721F68);
  if ((v95 & 1) == 0 && (v91 & 1) == 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A44C6CC8((uint64_t)v102, (uint64_t)__src, &qword_1EE721F60);
  *(_QWORD *)&__src[176] = v89;
  *(_QWORD *)&__src[184] = v94;
  *(_QWORD *)&__src[192] = v88;
  *(_QWORD *)&__src[200] = v87;
  *(_QWORD *)&__src[208] = v93;
  *(_QWORD *)&__src[216] = v86;
  *(_QWORD *)&__src[224] = v92;
  __src[232] = v97;
  sub_1A44C6CC8((uint64_t)v100, (uint64_t)&__src[240], &qword_1EE721F68);
  *(_QWORD *)&__src[712] = v85;
  *(_QWORD *)&__src[720] = v84;
  *(_QWORD *)&__src[728] = v83;
  *(_QWORD *)&__src[736] = v82;
  *(_QWORD *)&__src[744] = v81;
  *(_QWORD *)&__src[752] = v80;
  *(_QWORD *)&__src[760] = v96;
  *(_QWORD *)&__src[768] = v79;
  __src[776] = v91;
  __src[777] = v95;
  *(_QWORD *)&__src[784] = v6;
  return memcpy(a1, __src, 0x318uLL);
}

uint64_t sub_1A45B95DC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45B9610 + 4 * byte_1A46A6882[*v0]))(0x6E69646465626D65, 0xE900000000000067);
}

uint64_t sub_1A45B9610()
{
  return 0x6465726F68636E61;
}

uint64_t sub_1A45B9634()
{
  return 0x6168656265726F63;
}

uint64_t sub_1A45B9654()
{
  return 0x6F69746E65746E69;
}

unint64_t sub_1A45B9678()
{
  return 0xD000000000000010;
}

uint64_t sub_1A45B9694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45C16CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45B96B8()
{
  sub_1A45C004C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45B96E0()
{
  sub_1A45C004C();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Result.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  _BYTE v52[176];
  _BYTE v53[480];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F70);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A44C6CC8(v2, (uint64_t)v52, &qword_1EE721F60);
  v8 = *(_QWORD *)(v2 + 176);
  v38 = *(_QWORD *)(v2 + 184);
  v39 = v8;
  v9 = *(_QWORD *)(v2 + 192);
  v36 = *(_QWORD *)(v2 + 200);
  v37 = v9;
  v10 = *(_QWORD *)(v2 + 208);
  v34 = *(_QWORD *)(v2 + 216);
  v35 = v10;
  v33 = *(_QWORD *)(v2 + 224);
  v32 = *(unsigned __int8 *)(v2 + 232);
  sub_1A44C6CC8(v2 + 240, (uint64_t)v53, &qword_1EE721F68);
  v11 = *(_QWORD *)(v2 + 712);
  v30 = *(_QWORD *)(v2 + 720);
  v31 = v11;
  v12 = *(_QWORD *)(v2 + 728);
  v28 = *(_QWORD *)(v2 + 736);
  v29 = v12;
  v13 = *(_QWORD *)(v2 + 744);
  v26 = *(_QWORD *)(v2 + 752);
  v27 = v13;
  v14 = *(_QWORD *)(v2 + 760);
  v24 = *(_QWORD *)(v2 + 768);
  v25 = v14;
  v15 = *(unsigned __int8 *)(v2 + 776);
  v22 = *(unsigned __int8 *)(v2 + 777);
  v23 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C004C();
  sub_1A4691D40();
  sub_1A44C6CC8((uint64_t)v52, (uint64_t)&v41, &qword_1EE721F60);
  v51 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F60);
  sub_1A45C0090();
  v16 = v40;
  sub_1A4691890();
  if (!v16)
  {
    v18 = v29;
    v17 = v30;
    v19 = v31;
    v41 = v39;
    v42 = v38;
    v43 = v37;
    v44 = v36;
    v45 = v35;
    v46 = v34;
    v47 = v33;
    LOBYTE(v48) = v32;
    v51 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F98);
    sub_1A45C01A0();
    sub_1A4691890();
    sub_1A44C6CC8((uint64_t)v53, (uint64_t)&v41, &qword_1EE721F68);
    v51 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F68);
    sub_1A45C02B0();
    sub_1A4691890();
    v41 = v19;
    v42 = v17;
    v43 = v18;
    v44 = v28;
    v45 = v27;
    v46 = v26;
    v47 = v25;
    v48 = v24;
    v49 = v23;
    v50 = v22;
    v51 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721FD0);
    sub_1A45C03C0();
    sub_1A4691890();
    LOBYTE(v41) = 4;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Result.init(from:)@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD v54[99];
  uint64_t v55[99];
  char v56;
  _BYTE v57[472];
  uint64_t v58;
  _BYTE v59[176];
  uint64_t v60;
  uint64_t v61[100];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721FF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1A45C004C();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v51 = a2;
  v52 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F60);
  v59[175] = 0;
  sub_1A45C04D0();
  sub_1A46917C4();
  sub_1A44C6CC8((uint64_t)&v60, (uint64_t)v59, &qword_1EE721F60);
  sub_1A44C6CC8((uint64_t)v59, (uint64_t)v61, &qword_1EE721F60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F98);
  LOBYTE(v54[0]) = 1;
  sub_1A45C05E0((uint64_t)v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496858);
  sub_1A45C0558();
  sub_1A46917C4();
  v11 = v55[0];
  v49 = 0;
  v50 = v55[1];
  v48 = v55[2];
  v12 = v55[3];
  v13 = v55[4];
  v14 = v55[5];
  v15 = v55[6];
  v16 = LOBYTE(v55[7]);
  v61[22] = v55[0];
  v61[23] = v55[1];
  v61[24] = v55[2];
  v61[25] = v55[3];
  v61[26] = v55[4];
  v61[27] = v55[5];
  v61[28] = v55[6];
  LOBYTE(v61[29]) = v55[7];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721F68);
  v43 = v11;
  v57[471] = 2;
  v17 = v11;
  v18 = v48;
  v44 = v12;
  v45 = v13;
  v46 = v14;
  v47 = v15;
  sub_1A449694C(v17, v50, v48, v12, v13, v14, v15, v16);
  sub_1A45C0700();
  v19 = v49;
  sub_1A46917C4();
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v5);
    sub_1A44970E0(v43, v50, v18, v44, v45, v46, v47, v16);
    sub_1A45C05E0((uint64_t)v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496FEC);
    v24 = v49;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    sub_1A44C6CC8((uint64_t)v61, (uint64_t)v54, &qword_1EE721F60);
    result = sub_1A45C05E0((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496FEC);
    if (!v24)
      return sub_1A44970E0(v61[22], v61[23], v61[24], v61[25], v61[26], v61[27], v61[28], v61[29]);
  }
  else
  {
    v41 = v16;
    sub_1A44C6CC8((uint64_t)&v58, (uint64_t)v57, &qword_1EE721F68);
    sub_1A44C6CC8((uint64_t)v57, (uint64_t)&v61[30], &qword_1EE721F68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721FD0);
    LOBYTE(v54[0]) = 3;
    sub_1A45C064C((uint64_t)v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496988);
    sub_1A45C0788();
    sub_1A46917C4();
    v61[89] = v55[0];
    v61[90] = v55[1];
    v61[91] = v55[2];
    v61[92] = v55[3];
    v61[93] = v55[4];
    v61[94] = v55[5];
    v61[95] = v55[6];
    v61[96] = v55[7];
    LOWORD(v61[97]) = v55[8];
    v56 = 4;
    v33 = BYTE1(v55[8]);
    v34 = LOBYTE(v55[8]);
    v32 = v55[0];
    v37 = v55[3];
    v38 = v55[1];
    v42 = v55[2];
    v35 = v55[5];
    v36 = v55[4];
    v39 = v55[7];
    v40 = v55[6];
    sub_1A4496C38(v55[0], v55[1], v55[2], v55[3], v55[4], v55[5], v55[6], v55[7], v55[8], SBYTE1(v55[8]));
    sub_1A46917A0();
    v20 = v41;
    v22 = v45;
    v21 = v46;
    v23 = v48;
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v5);
    v61[98] = v26;
    sub_1A44C6CC8((uint64_t)v59, (uint64_t)v54, &qword_1EE721F60);
    v54[22] = v43;
    v54[23] = v50;
    v54[24] = v23;
    v54[25] = v44;
    v54[26] = v22;
    v54[27] = v21;
    v54[28] = v47;
    LOBYTE(v54[29]) = v20;
    sub_1A44C6CC8((uint64_t)v57, (uint64_t)&v54[30], &qword_1EE721F68);
    v27 = v32;
    v54[89] = v32;
    v28 = v37;
    v29 = v38;
    v54[90] = v38;
    v54[91] = v42;
    v54[92] = v37;
    v31 = v35;
    v30 = v36;
    v54[93] = v36;
    v54[94] = v35;
    v54[95] = v40;
    v54[96] = v39;
    LOBYTE(v23) = v33;
    LOBYTE(v21) = v34;
    LOBYTE(v54[97]) = v34;
    BYTE1(v54[97]) = v33;
    v54[98] = v26;
    sub_1A4496CF0((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496858, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A449694C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1A4496988, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A4496C38);
    sub_1A44973CC(v27, v29, v42, v28, v30, v31, v40, v39, v21, v23);
    sub_1A45C064C((uint64_t)v57, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A449711C);
    sub_1A44970E0(v43, v50, v48, v44, v45, v46, v47, v41);
    sub_1A45C05E0((uint64_t)v59, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496FEC);
    memcpy(v51, v54, 0x318uLL);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
    memcpy(v55, v61, sizeof(v55));
    return sub_1A4496CF0((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1A4496FEC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))sub_1A44970E0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, char))sub_1A449711C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int))sub_1A44973CC);
  }
  return result;
}

uint64_t sub_1A45BA1EC@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Result.init(from:)(a1, a2);
}

uint64_t sub_1A45BA200(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Result.encode(to:)(a1);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 8;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.allCases.getter()
{
  return &unk_1E4C0FC10;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BA2F8 + 4 * byte_1A46A6887[*v0]))(0x656C62616E457369, 0xE900000000000064);
}

uint64_t sub_1A45BA2F8()
{
  return 0x74726F70707573;
}

uint64_t sub_1A45BA310()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1A45BA330()
{
  return 0x6E656469666E6F63;
}

unint64_t sub_1A45BA34C()
{
  return 0xD000000000000019;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BA3E0 + 4 * byte_1A46A688F[*v0]))(0x656C62616E457369, 0xE900000000000064);
}

uint64_t sub_1A45BA3E0()
{
  return 0x74726F70707573;
}

uint64_t sub_1A45BA3F8()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1A45BA418()
{
  return 0x6E656469666E6F63;
}

unint64_t sub_1A45BA434()
{
  return 0xD000000000000019;
}

void sub_1A45BA494(char *a1)
{
  sub_1A4669F84(*a1);
}

void sub_1A45BA4A0()
{
  char *v0;

  sub_1A4637DD8(0, *v0);
}

void sub_1A45BA4AC(uint64_t a1)
{
  char *v1;

  sub_1A4636CA4(a1, *v1);
}

void sub_1A45BA4B4(uint64_t a1)
{
  char *v1;

  sub_1A4637DD8(a1, *v1);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional sub_1A45BA4BC(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A45BA4C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional sub_1A45BA4F0@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A45BA524(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FC10;
}

uint64_t sub_1A45BA534()
{
  sub_1A45C0810();
  return sub_1A4691DB8();
}

uint64_t sub_1A45BA55C()
{
  sub_1A45C0810();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.CoreBehavior.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.isEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.support.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.adjustment.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.validationRelativeSupport.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.validationConfidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.feedbackResetVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

double REMSuggestedAttributesTrainer.Parameters.CoreBehavior.feedbackExpirationWindow.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void __swiftcall REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(isEnabled:support:adjustment:confidence:validationRelativeSupport:validationConfidence:feedbackResetVersion:feedbackExpirationWindow:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior *__return_ptr retstr, Swift::Bool_optional isEnabled, Swift::UInt_optional support, Swift::UInt_optional adjustment, Swift::Double_optional confidence, Swift::Double_optional validationRelativeSupport, Swift::Double_optional validationConfidence, Swift::UInt_optional feedbackResetVersion, Swift::Double_optional feedbackExpirationWindow)
{
  Swift::Bool is_nil;
  double v10;
  BOOL v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  Swift::Bool v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  double v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  double v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  Swift::UInt v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  double v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  Swift::UInt v43;
  Swift::UInt v44;
  double v45;
  double v46;
  BOOL v47;
  Swift::Bool v48;
  Swift::UInt value;
  Swift::UInt v50;
  Swift::Bool v51;
  double v52;
  char v53;
  Swift::UInt v54;
  char v55;
  double v56;
  char v57;

  v46 = *(double *)&validationConfidence.is_nil;
  is_nil = validationRelativeSupport.is_nil;
  v10 = *(double *)&confidence.is_nil;
  v51 = adjustment.is_nil;
  value = support.value;
  v50 = adjustment.value;
  v48 = support.is_nil;
  v13 = isEnabled.value == 2;
  if (qword_1EE71C1A0 != -1)
    swift_once();
  v14 = sub_1A4690318();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EE721E20);
  v15 = sub_1A469030C();
  v16 = sub_1A4691008();
  v47 = v13 || isEnabled.value;
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v45 = v10;
    v18 = is_nil;
    v19 = swift_slowAlloc();
    *(_DWORD *)v17 = 136446210;
    v52 = *(double *)&v19;
    if (v13 || isEnabled.value)
      v20 = 5457241;
    else
      v20 = 20302;
    if (v13 || isEnabled.value)
      v21 = 0xE300000000000000;
    else
      v21 = 0xE200000000000000;
    sub_1A4431120(v20, v21, (uint64_t *)&v52);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v15, v16, "CoreBehavior model enabled: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    v22 = v19;
    is_nil = v18;
    v10 = v45;
    MEMORY[0x1A85A0114](v22, -1, -1);
    MEMORY[0x1A85A0114](v17, -1, -1);
  }

  if (is_nil)
    v23 = 0.5;
  else
    v23 = v10;
  v24 = sub_1A469030C();
  v25 = sub_1A4691008();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v26 = 134349056;
    v52 = v23;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v24, v25, "CoreBehavior model confidence threshold: %{public}f", v26, 0xCu);
    MEMORY[0x1A85A0114](v26, -1, -1);
  }

  if ((feedbackResetVersion.value & 1) != 0)
    v27 = 0.01;
  else
    v27 = v46;
  v28 = sub_1A469030C();
  v29 = sub_1A4691008();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v30 = 134349056;
    v52 = v27;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v28, v29, "CoreBehavior model validation relative support threshold: %{public}f", v30, 0xCu);
    MEMORY[0x1A85A0114](v30, -1, -1);
  }

  if ((v53 & 1) != 0)
    v31 = 0.3;
  else
    v31 = *(double *)&feedbackResetVersion.is_nil;
  v32 = sub_1A469030C();
  v33 = sub_1A4691008();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v34 = 134349056;
    v52 = v31;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v32, v33, "CoreBehavior model validation confidence threshold: %{public}f", v34, 0xCu);
    MEMORY[0x1A85A0114](v34, -1, -1);
  }

  if ((v55 & 1) != 0)
    v35 = 0;
  else
    v35 = v54;
  v36 = sub_1A469030C();
  v37 = sub_1A4691008();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v38 = 134349056;
    v52 = *(double *)&v35;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v36, v37, "CoreBehavior model feedbackResetVersion: %{public}lu", v38, 0xCu);
    MEMORY[0x1A85A0114](v38, -1, -1);
  }

  if ((v57 & 1) != 0)
    v39 = 2592000.0;
  else
    v39 = v56;
  v40 = sub_1A469030C();
  v41 = sub_1A4691008();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v42 = 134349056;
    v52 = v39;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v40, v41, "CoreBehavior model feedbackExpirationWindow: %{public}f", v42, 0xCu);
    MEMORY[0x1A85A0114](v42, -1, -1);
  }

  retstr->isEnabled = v47;
  v43 = v50;
  if (v51)
    v43 = 0;
  v44 = 6;
  if (!v48)
    v44 = value;
  retstr->support = v44;
  retstr->adjustment = v43;
  retstr->confidence = v23;
  retstr->validationRelativeSupport = v27;
  retstr->validationConfidence = v31;
  retstr->feedbackResetVersion = v35;
  retstr->feedbackExpirationWindow = v39;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722018);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v14[0] = *(_QWORD *)(v1 + 16);
  v14[1] = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1A45C0810();
  sub_1A4691D40();
  v22 = 0;
  sub_1A4691860();
  if (!v2)
  {
    v21 = 1;
    sub_1A4691884();
    v20 = 2;
    sub_1A4691884();
    v19 = 3;
    sub_1A469186C();
    v18 = 4;
    sub_1A469186C();
    v17 = 5;
    sub_1A469186C();
    v16 = 6;
    sub_1A4691884();
    v15 = 7;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722028);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C0810();
  sub_1A4691D28();
  if (!v2)
  {
    v30 = 0;
    v9 = sub_1A4691794();
    v29 = 1;
    v10 = sub_1A46917B8();
    v28 = 2;
    v22 = sub_1A46917B8();
    v27 = 3;
    sub_1A46917A0();
    v12 = v11;
    v26 = 4;
    sub_1A46917A0();
    v14 = v13;
    v25 = 5;
    sub_1A46917A0();
    v16 = v15;
    v24 = 6;
    v21 = sub_1A46917B8();
    v23 = 7;
    sub_1A46917A0();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    v20 = v22;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v20;
    *(_QWORD *)(a2 + 24) = v12;
    *(_QWORD *)(a2 + 32) = v14;
    *(_QWORD *)(a2 + 40) = v16;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45BAFF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(from:)(a1, a2);
}

uint64_t sub_1A45BB004(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.CoreBehavior.encode(to:)(a1);
}

uint64_t sub_1A45BB018()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional)sub_1A45BC060(v1);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;

  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional)sub_1A45BC0C8(v1);
}

void *static REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.allCases.getter()
{
  return &unk_1E4C128F8;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x656C62616E457369;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x656C62616E457369;
}

uint64_t sub_1A45BB0E4(char *a1, char *a2)
{
  return sub_1A4669CC0(*a1, *a2);
}

uint64_t sub_1A45BB0F0()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45BB178()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45BB1DC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding::CodingKeys_optional sub_1A45BB260(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A45BB26C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x656C62616E457369;
  if (*v1)
    v2 = 0xD000000000000013;
  v3 = 0x80000001A46BC5D0;
  if (!*v1)
    v3 = 0xE900000000000064;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A45BB2B4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x656C62616E457369;
}

void sub_1A45BB2FC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FC88;
}

uint64_t sub_1A45BB30C()
{
  sub_1A45C0854();
  return sub_1A4691DB8();
}

uint64_t sub_1A45BB334()
{
  sub_1A45C0854();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.Embedding.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.isEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.neighborsToConsider.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding __swiftcall REMSuggestedAttributesTrainer.Parameters.Embedding.init(isEnabled:neighborsToConsider:)(Swift::Bool_optional isEnabled, Swift::Int_optional neighborsToConsider)
{
  uint64_t v2;
  Swift::Bool is_nil;
  Swift::Int value;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  Swift::Bool v20;
  Swift::Int v21;
  Swift::Int v22;
  BOOL v23;
  uint64_t v24;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding result;

  is_nil = neighborsToConsider.is_nil;
  value = neighborsToConsider.value;
  v6 = v2;
  v7 = isEnabled.value == 2;
  if (qword_1EE71C1A0 != -1)
    swift_once();
  v8 = sub_1A4690318();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE721E20);
  v9 = sub_1A469030C();
  v10 = sub_1A4691008();
  v23 = v7 || isEnabled.value;
  if (os_log_type_enabled(v9, v10))
  {
    v22 = value;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v11 = 136446210;
    v24 = v12;
    if (v7 || isEnabled.value)
      v13 = 5457241;
    else
      v13 = 20302;
    if (v7 || isEnabled.value)
      v14 = 0xE300000000000000;
    else
      v14 = 0xE200000000000000;
    sub_1A4431120(v13, v14, &v24);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v9, v10, "kNN model is enabled: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v12, -1, -1);
    v15 = v11;
    value = v22;
    MEMORY[0x1A85A0114](v15, -1, -1);
  }

  if (is_nil)
    v16 = 7;
  else
    v16 = value;
  v17 = sub_1A469030C();
  v18 = sub_1A4691008();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134349056;
    v24 = v16;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v17, v18, "Number of neighbors to consider in kNN: %{public}ld", v19, 0xCu);
    MEMORY[0x1A85A0114](v19, -1, -1);
  }

  *(_BYTE *)v6 = v23;
  *(_QWORD *)(v6 + 8) = v16;
  result.neighborsToConsider = v21;
  result.isEnabled = v20;
  return result;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722030);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C0854();
  sub_1A4691D40();
  v11 = 0;
  sub_1A4691860();
  if (!v2)
  {
    v10 = 1;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.Embedding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722040);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C0854();
  sub_1A4691D28();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_1A4691794();
    v13 = 1;
    v10 = sub_1A46917AC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45BB868@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.Embedding.init(from:)(a1, a2);
}

uint64_t sub_1A45BB87C(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.Embedding.encode(to:)(a1);
}

uint64_t sub_1A45BB890()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 4;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.allCases.getter()
{
  return &unk_1E4C129A0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BB998 + 4 * byte_1A46A6897[*v0]))(0x4F64656C62616E65, 0xEC000000534F696ELL);
}

unint64_t sub_1A45BB9AC()
{
  return 0xD000000000000018;
}

unint64_t sub_1A45BB9C8()
{
  return 0xD00000000000001ELL;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BBA20 + 4 * byte_1A46A689B[*v0]))(0x4F64656C62616E65, 0xEC000000534F696ELL);
}

unint64_t sub_1A45BBA34()
{
  return 0xD000000000000018;
}

unint64_t sub_1A45BBA50()
{
  return 0xD00000000000001ELL;
}

void sub_1A45BBA70(char *a1)
{
  sub_1A4669E08(*a1);
}

void sub_1A45BBA7C()
{
  char *v0;

  sub_1A4636024(*v0);
}

void sub_1A45BBA84(uint64_t a1)
{
  char *v1;

  sub_1A4636BF8(a1, *v1);
}

void sub_1A45BBA8C(uint64_t a1)
{
  char *v1;

  sub_1A4637F04(a1, *v1);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional sub_1A45BBA94(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A45BBAA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45BBAD8 + 4 * byte_1A46A689F[*v0]))();
}

void sub_1A45BBAD8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  a1[1] = 0xEE00534F63616D6ELL;
}

void sub_1A45BBAF0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x80000001A46BC9B0;
}

void sub_1A45BBB10(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000001ELL;
  a1[1] = 0x80000001A46BC9D0;
}

uint64_t sub_1A45BBB34()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BBB6C + 4 * byte_1A46A68A3[*v0]))(0x4F64656C62616E65, 0xEC000000534F696ELL);
}

unint64_t sub_1A45BBB80()
{
  return 0xD000000000000018;
}

unint64_t sub_1A45BBB9C()
{
  return 0xD00000000000001ELL;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional sub_1A45BBBBC@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A45BBBF0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FC38;
}

uint64_t sub_1A45BBC00()
{
  sub_1A45C0898();
  return sub_1A4691DB8();
}

uint64_t sub_1A45BBC28()
{
  sub_1A45C0898();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.enabledOniOS.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.enabledOnmacOS.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

double REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.defaultWordDistanceScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.overrideLocalWordDistanceScale.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble __swiftcall REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.init(enabledOniOS:enabledOnmacOS:defaultWordDistanceScale:overrideLocalWordDistanceScale:)(Swift::Bool_optional enabledOniOS, Swift::Bool_optional enabledOnmacOS, Swift::Double_optional defaultWordDistanceScale, Swift::Bool_optional overrideLocalWordDistanceScale)
{
  char v4;
  uint64_t v5;
  double v6;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble result;

  v6 = *(double *)&defaultWordDistanceScale.is_nil;
  if (overrideLocalWordDistanceScale.value)
    v6 = 0.2;
  *(_BYTE *)v5 = enabledOniOS.value == 2 || enabledOniOS.value;
  *(_BYTE *)(v5 + 1) = enabledOnmacOS.value == 2 || enabledOnmacOS.value;
  *(double *)(v5 + 8) = v6;
  *(_BYTE *)(v5 + 16) = v4 & 1;
  result.defaultWordDistanceScale = v6;
  result.overrideLocalWordDistanceScale = enabledOnmacOS.value;
  result.enabledOniOS = enabledOniOS.value;
  return result;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  _DWORD v10[3];
  char v11;
  char v12;
  char v13;
  char v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722048);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 1);
  v10[1] = *(unsigned __int8 *)(v1 + 16);
  v10[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C0898();
  sub_1A4691D40();
  v14 = 0;
  sub_1A4691860();
  if (!v2)
  {
    v13 = 1;
    sub_1A4691860();
    v12 = 2;
    sub_1A469186C();
    v11 = 3;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v15[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722058);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C0898();
  sub_1A4691D28();
  if (!v2)
  {
    v15[15] = 0;
    v9 = sub_1A4691794();
    v15[14] = 1;
    v10 = sub_1A4691794();
    v15[13] = 2;
    sub_1A46917A0();
    v13 = v12;
    v15[12] = 3;
    v14 = sub_1A4691794();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_BYTE *)(a2 + 1) = v10 & 1;
    *(_QWORD *)(a2 + 8) = v13;
    *(_BYTE *)(a2 + 16) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45BC018@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.init(from:)(a1, a2);
}

uint64_t sub_1A45BC02C(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.encode(to:)(a1);
}

uint64_t sub_1A45BC040()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional)sub_1A45BC060(v1);
}

uint64_t sub_1A45BC060@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;

  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional)sub_1A45BC0C8(v1);
}

uint64_t sub_1A45BC0C8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2)
  {
    if (v2 == 1)
      v4 = 1;
    else
      v4 = 2;
  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.allCases.getter()
{
  return &unk_1E4C12A68;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 107;
  else
    return 0x656C62616E457369;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 107;
  else
    return 0x656C62616E457369;
}

uint64_t sub_1A45BC1BC(char *a1, char *a2)
{
  return sub_1A4669D6C(*a1, *a2);
}

uint64_t sub_1A45BC1C8()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45BC240()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45BC294()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord::CodingKeys_optional sub_1A45BC308(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A45BC314(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 107;
  if (!*v1)
    v2 = 0x656C62616E457369;
  v3 = 0xE900000000000064;
  if (*v1)
    v3 = 0xE100000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A45BC34C()
{
  _BYTE *v0;

  if (*v0)
    return 107;
  else
    return 0x656C62616E457369;
}

void sub_1A45BC384(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FC60;
}

uint64_t sub_1A45BC394()
{
  sub_1A45C08DC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45BC3BC()
{
  sub_1A45C08DC();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesTrainer.Parameters.IntentionalWord.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.isEnabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.k.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord __swiftcall REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(isEnabled:k:)(Swift::Bool_optional isEnabled, Swift::Int_optional k)
{
  uint64_t v2;
  Swift::Bool is_nil;
  Swift::Int value;
  uint64_t v6;
  BOOL v7;
  BOOL v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint8_t *v20;
  os_log_type_t v21;
  const char *v22;
  NSObject *v23;
  uint8_t *v24;
  uint32_t v25;
  _BOOL8 v26;
  Swift::Int v27;
  Swift::Bool v28;
  Swift::Int v29;
  uint64_t v30;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord result;

  is_nil = k.is_nil;
  value = k.value;
  v6 = v2;
  v7 = isEnabled.value == 2;
  if (qword_1EE71C1A0 != -1)
    swift_once();
  v8 = v7 || isEnabled.value;
  v9 = sub_1A4690318();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EE721E20);
  v10 = sub_1A469030C();
  v11 = sub_1A4691008();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v29 = value;
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136446210;
    v30 = v13;
    if (v7 || isEnabled.value)
      v14 = 5457241;
    else
      v14 = 20302;
    if (v7 || isEnabled.value)
      v15 = 0xE300000000000000;
    else
      v15 = 0xE200000000000000;
    sub_1A4431120(v14, v15, &v30);
    sub_1A46911D0();
    v8 = v7 || isEnabled.value;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v10, v11, "intentional word model is enabled: %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    v16 = v13;
    value = v29;
    MEMORY[0x1A85A0114](v16, -1, -1);
    MEMORY[0x1A85A0114](v12, -1, -1);
  }

  v17 = sub_1A469030C();
  v18 = sub_1A4691008();
  v19 = os_log_type_enabled(v17, v18);
  if (is_nil)
  {
    if (v19)
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      v21 = v18;
      v22 = "Auto tuning number of clusters";
      v23 = v17;
      v24 = v20;
      v25 = 2;
LABEL_16:
      _os_log_impl(&dword_1A442D000, v23, v21, v22, v24, v25);
      MEMORY[0x1A85A0114](v20, -1, -1);
    }
  }
  else if (v19)
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v20 = 134349056;
    v30 = value;
    sub_1A46911D0();
    v21 = v18;
    v22 = "Number of clusters to consider in k-Mean: %{public}ld";
    v23 = v17;
    v24 = v20;
    v25 = 12;
    goto LABEL_16;
  }

  *(_BYTE *)v6 = v8;
  *(_QWORD *)(v6 + 8) = value;
  *(_BYTE *)(v6 + 16) = is_nil;
  result.k.value = v27;
  result.isEnabled = v26;
  *(_DWORD *)result.gap1 = *(_DWORD *)((char *)&v26 + 1);
  *(_WORD *)&result.gap1[4] = *(_WORD *)((char *)&v26 + 5);
  result.gap1[6] = HIBYTE(v26);
  result.k.is_nil = v28;
  return result;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  int v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722060);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C08DC();
  sub_1A4691D40();
  v12 = 0;
  sub_1A4691860();
  if (!v2)
  {
    v11 = 1;
    sub_1A469183C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C08DC();
  sub_1A4691D28();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_1A4691794();
    v15 = 1;
    v11 = sub_1A4691770();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v11;
    *(_BYTE *)(a2 + 16) = v13 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45BC950@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(from:)(a1, a2);
}

uint64_t sub_1A45BC964(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.IntentionalWord.encode(to:)(a1);
}

uint64_t sub_1A45BC978()
{
  return swift_getKeyPath();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 13;
  if (v3 < 0xD)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 13;
  return (ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesTrainer.Parameters.CodingKeys.allCases.getter()
{
  return &unk_1E4C0FBE0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BCA84 + 4 * byte_1A46A68A7[*v0]))(0x4F64656C62616E65, 0xEE00534F63616D6ELL);
}

uint64_t sub_1A45BCA94()
{
  return 0x6C706D615378616DLL;
}

unint64_t sub_1A45BCAB8()
{
  return 0xD000000000000012;
}

uint64_t sub_1A45BCAF0()
{
  return 0x6153646C756F6873;
}

unint64_t sub_1A45BCB14()
{
  return 0xD000000000000013;
}

uint64_t sub_1A45BCB3C()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_1A45BCB58()
{
  return 0x6168654265726F63;
}

uint64_t sub_1A45BCB78()
{
  return 0x6E69646465626D65;
}

uint64_t sub_1A45BCB94()
{
  return 0x6465726F68636E61;
}

uint64_t sub_1A45BCBB8()
{
  return 0x6F69746E65746E69;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45BCC18 + 4 * byte_1A46A68B4[*v0]))(0x4F64656C62616E65, 0xEE00534F63616D6ELL);
}

uint64_t sub_1A45BCC28()
{
  return 0x6C706D615378616DLL;
}

unint64_t sub_1A45BCC4C()
{
  return 0xD000000000000012;
}

uint64_t sub_1A45BCC84()
{
  return 0x6153646C756F6873;
}

unint64_t sub_1A45BCCA8()
{
  return 0xD000000000000013;
}

uint64_t sub_1A45BCCD0()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_1A45BCCEC()
{
  return 0x6168654265726F63;
}

uint64_t sub_1A45BCD0C()
{
  return 0x6E69646465626D65;
}

uint64_t sub_1A45BCD28()
{
  return 0x6465726F68636E61;
}

uint64_t sub_1A45BCD4C()
{
  return 0x6F69746E65746E69;
}

uint64_t sub_1A45BCD70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466A1D0(*a1, *a2);
}

uint64_t sub_1A45BCD7C()
{
  sub_1A4691C8C();
  REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45BCDE0()
{
  REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45BCE30()
{
  sub_1A4691C8C();
  REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional sub_1A45BCE90(Swift::String *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A45BCE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributesTrainer.Parameters.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional sub_1A45BCEC4@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributesTrainer.Parameters.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A45BCEF8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FBE0;
}

uint64_t sub_1A45BCF08()
{
  sub_1A45C1964();
  return sub_1A4691DB8();
}

uint64_t sub_1A45BCF30()
{
  sub_1A45C1964();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesTrainer.Parameters.enabledOnmacOS.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.enabledOniOS.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.maxSampleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.minimumSampleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

double REMSuggestedAttributesTrainer.Parameters.validationSetProportion.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.shouldSaveModel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.allowLocalOverrides.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.allowCloudOverrides.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 34);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.randomSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

double REMSuggestedAttributesTrainer.Parameters.coreBehavior.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  uint64_t v3;
  uint64_t v4;

  result = *(double *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_QWORD *)(v1 + 104);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 48);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 72);
  *(double *)(a1 + 40) = result;
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = v4;
  return result;
}

void REMSuggestedAttributesTrainer.Parameters.embedding.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 120);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)(a1 + 8) = v2;
}

double REMSuggestedAttributesTrainer.Parameters.anchoredBubble.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  double result;
  char v4;

  v2 = *(_BYTE *)(v1 + 129);
  result = *(double *)(v1 + 136);
  v4 = *(_BYTE *)(v1 + 144);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 128);
  *(_BYTE *)(a1 + 1) = v2;
  *(double *)(a1 + 8) = result;
  *(_BYTE *)(a1 + 16) = v4;
  return result;
}

void REMSuggestedAttributesTrainer.Parameters.intentionalWord.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_BYTE *)(v1 + 168);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 152);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
}

void __swiftcall REMSuggestedAttributesTrainer.Parameters.init(enabledOnmacOS:enabledOniOS:maxSampleCount:minimumSampleCount:validationSetProportion:shouldSaveModel:allowLocalOverrides:allowCloudOverrides:randomSeed:coreBehavior:embedding:anchoredBubble:intentionalWord:)(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters *__return_ptr retstr, Swift::Bool_optional enabledOnmacOS, Swift::Bool_optional enabledOniOS, Swift::Int_optional maxSampleCount, Swift::Int_optional minimumSampleCount, Swift::Double_optional validationSetProportion, Swift::Bool_optional shouldSaveModel, Swift::Bool_optional allowLocalOverrides, Swift::Bool_optional allowCloudOverrides, Swift::Int_optional randomSeed, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior *coreBehavior, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding embedding, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble anchoredBubble, ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord intentionalWord)
{
  double v15;
  Swift::Bool is_nil;
  Swift::Int value;
  Swift::Double validationConfidence;
  Swift::Double feedbackExpirationWindow;
  Swift::Double v21;
  Swift::Int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  Swift::Int v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  Swift::Int v31;
  double v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  char v39;
  Swift::Int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  Swift::Int v45;
  char v46;
  Swift::UInt feedbackResetVersion;
  __int128 v49;
  __int128 v51;
  Swift::Bool isEnabled;
  Swift::Int v53;
  char v54;
  char *v55;

  v15 = *(double *)&validationSetProportion.is_nil;
  is_nil = minimumSampleCount.is_nil;
  value = minimumSampleCount.value;
  isEnabled = coreBehavior->isEnabled;
  v51 = *(_OWORD *)&coreBehavior->support;
  v49 = *(_OWORD *)&coreBehavior->confidence;
  validationConfidence = coreBehavior->validationConfidence;
  feedbackResetVersion = coreBehavior->feedbackResetVersion;
  feedbackExpirationWindow = coreBehavior->feedbackExpirationWindow;
  v46 = **(_BYTE **)&embedding.isEnabled;
  v45 = *(_QWORD *)(*(_QWORD *)&embedding.isEnabled + 8);
  v43 = *(_BYTE *)(embedding.neighborsToConsider + 1);
  v44 = *(_BYTE *)embedding.neighborsToConsider;
  v21 = *(double *)(embedding.neighborsToConsider + 8);
  v41 = *v55;
  v42 = *(_BYTE *)(embedding.neighborsToConsider + 16);
  v40 = *((_QWORD *)v55 + 1);
  v39 = v55[16];
  if (maxSampleCount.is_nil)
    v22 = 100;
  else
    v22 = maxSampleCount.value;
  v53 = v22;
  if (qword_1EE71C1A0 != -1)
    swift_once();
  v23 = sub_1A4690318();
  __swift_project_value_buffer(v23, (uint64_t)qword_1EE721E20);
  v24 = sub_1A469030C();
  v25 = sub_1A4691008();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v26 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v24, v25, "maxSampleCount: %{public}ld", v26, 0xCu);
    MEMORY[0x1A85A0114](v26, -1, -1);
  }

  if (is_nil)
    v27 = 30;
  else
    v27 = value;
  v28 = sub_1A469030C();
  v29 = sub_1A4691008();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v30 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v28, v29, "minimumSampleCount: %{public}ld", v30, 0xCu);
    MEMORY[0x1A85A0114](v30, -1, -1);
  }
  v31 = randomSeed.value;

  if (shouldSaveModel.value)
    v32 = 0.2;
  else
    v32 = v15;
  v33 = sub_1A469030C();
  v34 = sub_1A4691008();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v35 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v33, v34, "validationSetProportion: %{public}f", v35, 0xCu);
    MEMORY[0x1A85A0114](v35, -1, -1);
  }

  if (randomSeed.is_nil)
    v31 = sub_1A458A85C(0x7FFFFFFFFFFFFFFFuLL);
  v36 = sub_1A469030C();
  v37 = sub_1A4691008();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v38 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v36, v37, "randomSeed: %{public}ld", v38, 0xCu);
    MEMORY[0x1A85A0114](v38, -1, -1);
  }

  retstr->enabledOnmacOS = enabledOnmacOS.value == 2 || enabledOnmacOS.value;
  retstr->enabledOniOS = enabledOniOS.value == 2 || enabledOniOS.value;
  retstr->maxSampleCount = v53;
  retstr->minimumSampleCount = v27;
  retstr->validationSetProportion = v32;
  retstr->shouldSaveModel = allowLocalOverrides.value;
  retstr->allowLocalOverrides = allowCloudOverrides.value == 2 || allowCloudOverrides.value;
  retstr->allowCloudOverrides = (v54 == 2) | v54 & 1;
  retstr->randomSeed = v31;
  retstr->coreBehavior.isEnabled = isEnabled;
  *(_OWORD *)&retstr->coreBehavior.support = v51;
  *(_OWORD *)&retstr->coreBehavior.confidence = v49;
  retstr->coreBehavior.validationConfidence = validationConfidence;
  retstr->coreBehavior.feedbackResetVersion = feedbackResetVersion;
  retstr->coreBehavior.feedbackExpirationWindow = feedbackExpirationWindow;
  retstr->embedding.isEnabled = v46;
  retstr->embedding.neighborsToConsider = v45;
  retstr->anchoredBubble.enabledOniOS = v44;
  retstr->anchoredBubble.enabledOnmacOS = v43;
  retstr->anchoredBubble.defaultWordDistanceScale = v21;
  retstr->anchoredBubble.overrideLocalWordDistanceScale = v42;
  retstr->intentionalWord.isEnabled = v41;
  retstr->intentionalWord.k.value = v40;
  retstr->intentionalWord.k.is_nil = v39;
}

__n128 REMSuggestedAttributesTrainer.Parameters.init(partial:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  int v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  int v49;
  Swift::Bool enabledOnmacOS;
  Swift::Int minimumSampleCount;
  Swift::Int maxSampleCount;
  Swift::Double validationSetProportion;
  Swift::Double v54;
  Swift::Double v55;
  Swift::UInt v56;
  Swift::Double v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  Swift::Bool_optional v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  int v79;
  Swift::Int v80;
  char v81;
  Swift::Bool v82;
  Swift::Int v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  Swift::Bool_optional v87;
  uint64_t KeyPath;
  Swift::Int v89;
  char v90;
  char v91;
  Swift::Bool v92;
  Swift::Int v93;
  char v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  int v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  int v102;
  uint64_t v103;
  unint64_t v104;
  char v105;
  int v106;
  uint64_t v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  unint64_t v114;
  char v115;
  int v116;
  char v117;
  __int128 v118;
  __int128 v119;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding embedding;
  __int128 v121;
  __n128 result;
  _BYTE feedbackResetVersion[10];
  Swift::Int_optional feedbackResetVersion_8;
  Swift::Bool *v125;
  _BYTE *v126;
  Swift::Bool *v127;
  char v128;
  char isEnabled;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::IntentionalWord intentionalWord;
  __int16 intentionalWord_16;
  Swift::Bool allowLocalOverrides;
  Swift::Bool_optional allowLocalOverridesa;
  Swift::Bool confidence;
  Swift::Bool confidencea;
  Swift::UInt v136;
  Swift::Int v137;
  Swift::UInt v138;
  Swift::Int v139;
  Swift::Bool_optional shouldSaveModel;
  Swift::Bool_optional shouldSaveModela;
  char v142;
  char v143;
  char v144;
  Swift::Int v145;
  Swift::Bool adjustment;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  Swift::Bool v150;
  Swift::Bool v151;
  Swift::Int v152;
  char v153;
  _BYTE v154[2];
  uint64_t v155;
  char v156;
  Swift::Bool v157;
  Swift::Int v158;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior coreBehavior;
  ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters v160;
  __int128 v161;
  __int128 v162;
  Swift::Int v163;
  char v164;
  Swift::UInt_optional v165;
  Swift::Int_optional v166;
  Swift::Int_optional v167;
  Swift::Int_optional v168;
  Swift::UInt_optional v169;
  Swift::Int_optional v170;
  Swift::Double_optional v171;
  Swift::Double_optional v172;
  Swift::Double_optional v173;
  Swift::Double_optional v174;

  v3 = *a1;
  swift_getKeyPath();
  if (!*(_QWORD *)(v3 + 16))
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v4 = swift_retain();
  v5 = sub_1A443EBC0(v4);
  if ((v6 & 1) == 0)
  {
    memset(&v160, 0, 32);
    swift_release();
    goto LABEL_8;
  }
  sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v160);
  swift_release();
  if (!*(_QWORD *)&v160.validationSetProportion)
  {
LABEL_8:
    sub_1A4496084((uint64_t)&v160);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722088);
  if (swift_dynamicCast())
  {
    v7 = *(_QWORD *)&coreBehavior.isEnabled;
    goto LABEL_10;
  }
LABEL_9:
  v7 = sub_1A443DD4C(MEMORY[0x1E0DEE9D8]);
LABEL_10:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (!*(_QWORD *)(v3 + 16))
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
LABEL_18:
    sub_1A4496084((uint64_t)&v160);
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  v8 = swift_retain();
  v9 = sub_1A443EBC0(v8);
  if ((v10 & 1) != 0)
    sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v9, (uint64_t)&v160);
  else
    memset(&v160, 0, 32);
  swift_release();
  if (!*(_QWORD *)&v160.validationSetProportion)
    goto LABEL_18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722080);
  if (swift_dynamicCast())
  {
    v11 = *(_QWORD *)&coreBehavior.isEnabled;
    goto LABEL_20;
  }
LABEL_19:
  v11 = sub_1A443DD30(MEMORY[0x1E0DEE9D8]);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  v148 = a2;
  if (!*(_QWORD *)(v3 + 16))
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
LABEL_28:
    sub_1A4496084((uint64_t)&v160);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  v12 = swift_retain();
  v13 = sub_1A443EBC0(v12);
  if ((v14 & 1) != 0)
    sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v13, (uint64_t)&v160);
  else
    memset(&v160, 0, 32);
  swift_release();
  if (!*(_QWORD *)&v160.validationSetProportion)
    goto LABEL_28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722078);
  if (swift_dynamicCast())
  {
    v149 = *(_QWORD *)&coreBehavior.isEnabled;
    goto LABEL_30;
  }
LABEL_29:
  v149 = sub_1A443DD14(MEMORY[0x1E0DEE9D8]);
LABEL_30:
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1A45BE8E8(v3, (unint64_t *)&v160);
  swift_bridgeObjectRelease();
  swift_release();
  v15 = *(_QWORD *)&v160.enabledOnmacOS;
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v16 = swift_retain();
    v17 = sub_1A443EC6C(v16);
    if ((v18 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v17, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  if (swift_dynamicCast())
  {
    shouldSaveModel.value = coreBehavior.isEnabled;
  }
  else
  {
    shouldSaveModel.value = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = swift_retain();
    v20 = sub_1A443EC6C(v19);
    if ((v21 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v20, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v22 = swift_dynamicCast();
  if (v22)
  {
    v138 = *(_QWORD *)&coreBehavior.isEnabled;
  }
  else
  {
    v138 = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v23 = v22 ^ 1;
  LOBYTE(coreBehavior.support) = v22 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v24 = swift_retain();
    v25 = sub_1A443EC6C(v24);
    if ((v26 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v25, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v27 = swift_dynamicCast();
  if (v27)
  {
    v136 = *(_QWORD *)&coreBehavior.isEnabled;
  }
  else
  {
    v136 = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v28 = v27 ^ 1;
  LOBYTE(coreBehavior.support) = v27 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v29 = swift_retain();
    v30 = sub_1A443EC6C(v29);
    if ((v31 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v30, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v32 = swift_dynamicCast();
  if (v32)
  {
    confidence = coreBehavior.isEnabled;
  }
  else
  {
    confidence = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v144 = v32 ^ 1;
  LOBYTE(coreBehavior.support) = v32 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v33 = swift_retain();
    v34 = sub_1A443EC6C(v33);
    if ((v35 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v34, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v36 = swift_dynamicCast();
  if (v36)
  {
    allowLocalOverrides = coreBehavior.isEnabled;
  }
  else
  {
    allowLocalOverrides = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v37 = v36 ^ 1;
  LOBYTE(coreBehavior.support) = v36 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v38 = swift_retain();
    v39 = sub_1A443EC6C(v38);
    if ((v40 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v39, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v41 = swift_dynamicCast();
  if (v41)
  {
    intentionalWord_16 = *(_WORD *)&coreBehavior.isEnabled;
  }
  else
  {
    intentionalWord_16 = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  LOBYTE(coreBehavior.support) = v41 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v42 = swift_retain();
    v43 = sub_1A443EC6C(v42);
    if ((v44 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v43, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v45 = swift_dynamicCast();
  if (!v45)
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  LOBYTE(coreBehavior.support) = v45 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v7 + 16))
  {
    v46 = swift_retain();
    v47 = sub_1A443EC6C(v46);
    if ((v48 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v7 + 56) + 32 * v47, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
  }
  v49 = swift_dynamicCast();
  v147 = v15;
  if (!v49)
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  LOBYTE(coreBehavior.support) = v49 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  v174.is_nil = allowLocalOverrides;
  *(_WORD *)&feedbackResetVersion[8] = intentionalWord_16;
  feedbackResetVersion[0] = v37;
  v169.value = v136;
  v165.value = v138;
  v165.is_nil = v23;
  v173.is_nil = v144;
  v169.is_nil = v28;
  v171.is_nil = confidence;
  REMSuggestedAttributesTrainer.Parameters.CoreBehavior.init(isEnabled:support:adjustment:confidence:validationRelativeSupport:validationConfidence:feedbackResetVersion:feedbackExpirationWindow:)((ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::CoreBehavior *)&v160, shouldSaveModel, v165, v169, v171, v173, v174, *(Swift::UInt_optional *)feedbackResetVersion, *(Swift::Double_optional *)&feedbackResetVersion[1]);
  enabledOnmacOS = v160.enabledOnmacOS;
  maxSampleCount = v160.maxSampleCount;
  minimumSampleCount = v160.minimumSampleCount;
  validationSetProportion = v160.validationSetProportion;
  v54 = *(double *)&v160.shouldSaveModel;
  v55 = *(double *)&v160.randomSeed;
  v56 = *(_QWORD *)&v160.coreBehavior.isEnabled;
  v57 = *(double *)&v160.coreBehavior.support;
  swift_getKeyPath();
  if (*(_QWORD *)(v149 + 16))
  {
    swift_bridgeObjectRetain();
    v58 = swift_retain();
    v59 = sub_1A443EC60(v58);
    if ((v60 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v149 + 56) + 32 * v59, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    *(_DWORD *)&intentionalWord.gap1[3] = coreBehavior.isEnabled;
  }
  else
  {
    *(_DWORD *)&intentionalWord.gap1[3] = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v149 + 16))
  {
    swift_bridgeObjectRetain();
    v61 = swift_retain();
    v62 = sub_1A443EC60(v61);
    if ((v63 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v149 + 56) + 32 * v62, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    *(_DWORD *)&intentionalWord.isEnabled = coreBehavior.isEnabled;
  }
  else
  {
    *(_DWORD *)&intentionalWord.isEnabled = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v149 + 16))
  {
    swift_bridgeObjectRetain();
    v64 = swift_retain();
    v65 = sub_1A443EC60(v64);
    if ((v66 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v149 + 56) + 32 * v65, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v67 = swift_dynamicCast();
  if (v67)
  {
    v68 = *(_QWORD *)&coreBehavior.isEnabled;
  }
  else
  {
    *(_QWORD *)&coreBehavior.isEnabled = 0;
    v68 = 0x3FC999999999999ALL;
  }
  LOBYTE(coreBehavior.support) = v67 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v149 + 16))
  {
    v69 = swift_retain();
    v70 = sub_1A443EC60(v69);
    if ((v71 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v149 + 56) + 32 * v70, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
  }
  adjustment = enabledOnmacOS;
  if (swift_dynamicCast())
  {
    isEnabled = coreBehavior.isEnabled;
  }
  else
  {
    isEnabled = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v72 = swift_retain();
    v73 = sub_1A443EC54(v72);
    if ((v74 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v11 + 56) + 32 * v73, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    v75.value = coreBehavior.isEnabled;
  }
  else
  {
    v75.value = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v11 + 16))
  {
    v76 = swift_retain();
    v77 = sub_1A443EC54(v76);
    if ((v78 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v11 + 56) + 32 * v77, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
  }
  v79 = swift_dynamicCast();
  if (v79)
  {
    v80 = *(_QWORD *)&coreBehavior.isEnabled;
  }
  else
  {
    v80 = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v81 = v79 ^ 1;
  LOBYTE(coreBehavior.support) = v79 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  v166.value = v80;
  v166.is_nil = v81;
  REMSuggestedAttributesTrainer.Parameters.Embedding.init(isEnabled:neighborsToConsider:)(v75, v166);
  v82 = v160.enabledOnmacOS;
  v83 = v160.maxSampleCount;
  swift_getKeyPath();
  if (*(_QWORD *)(v147 + 16))
  {
    swift_bridgeObjectRetain();
    v84 = swift_retain();
    v85 = sub_1A443EBCC(v84);
    if ((v86 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v147 + 56) + 32 * v85, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v150 = v82;
  v145 = v83;
  if (swift_dynamicCast())
  {
    v87.value = coreBehavior.isEnabled;
  }
  else
  {
    v87.value = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  KeyPath = swift_getKeyPath();
  v89 = sub_1A45BE9BC(KeyPath, v147);
  v91 = v90;
  swift_bridgeObjectRelease();
  swift_release();
  v167.is_nil = v91 & 1;
  v167.value = v89;
  REMSuggestedAttributesTrainer.Parameters.IntentionalWord.init(isEnabled:k:)(v87, v167);
  v92 = v160.enabledOnmacOS;
  v93 = v160.maxSampleCount;
  v94 = v160.minimumSampleCount;
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v95 = swift_retain();
    v96 = sub_1A443EBC0(v95);
    if ((v97 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v96, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v98 = swift_dynamicCast();
  if (v98)
  {
    v139 = *(_QWORD *)&coreBehavior.isEnabled;
  }
  else
  {
    v139 = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v143 = v98 ^ 1;
  LOBYTE(coreBehavior.support) = v98 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v99 = swift_retain();
    v100 = sub_1A443EBC0(v99);
    if ((v101 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v100, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v102 = swift_dynamicCast();
  if (v102)
  {
    v137 = *(_QWORD *)&coreBehavior.isEnabled;
  }
  else
  {
    v137 = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  v142 = v102 ^ 1;
  LOBYTE(coreBehavior.support) = v102 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v103 = swift_retain();
    v104 = sub_1A443EBC0(v103);
    if ((v105 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v104, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  v106 = swift_dynamicCast();
  if (v106)
  {
    confidencea = coreBehavior.isEnabled;
  }
  else
  {
    confidencea = 0;
    *(_QWORD *)&coreBehavior.isEnabled = 0;
  }
  shouldSaveModela.value = v106 ^ 1;
  LOBYTE(coreBehavior.support) = v106 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v107 = swift_retain();
    v108 = sub_1A443EBC0(v107);
    if ((v109 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v108, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    allowLocalOverridesa.value = coreBehavior.isEnabled;
  }
  else
  {
    allowLocalOverridesa.value = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v110 = swift_retain();
    v111 = sub_1A443EBC0(v110);
    if ((v112 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v111, (uint64_t)&v160);
    else
      memset(&v160, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v160, 0, 32);
    swift_bridgeObjectRetain();
  }
  if (swift_dynamicCast())
  {
    intentionalWord.k.is_nil = coreBehavior.isEnabled;
  }
  else
  {
    intentionalWord.k.is_nil = 2;
    coreBehavior.isEnabled = 2;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    v113 = swift_retain();
    v114 = sub_1A443EBC0(v113);
    if ((v115 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v114, (uint64_t)&v161);
    }
    else
    {
      v161 = 0u;
      v162 = 0u;
    }
    swift_release();
  }
  else
  {
    v161 = 0u;
    v162 = 0u;
  }
  v116 = swift_dynamicCast();
  if (v116)
  {
    intentionalWord.k.value = v163;
  }
  else
  {
    intentionalWord.k.value = 0;
    v163 = 0;
  }
  v117 = v116 ^ 1;
  v164 = v116 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  coreBehavior.isEnabled = adjustment;
  coreBehavior.support = maxSampleCount;
  coreBehavior.adjustment = minimumSampleCount;
  coreBehavior.confidence = validationSetProportion;
  coreBehavior.validationRelativeSupport = v54;
  coreBehavior.validationConfidence = v55;
  coreBehavior.feedbackResetVersion = v56;
  coreBehavior.feedbackExpirationWindow = v57;
  v157 = v150;
  v158 = v145;
  v154[0] = (*(_DWORD *)&intentionalWord.gap1[3] == 2) | intentionalWord.gap1[3] & 1;
  v154[1] = *(_DWORD *)&intentionalWord.isEnabled == 2 || intentionalWord.isEnabled;
  v155 = v68;
  v156 = isEnabled & 1;
  v151 = v92;
  v152 = v93;
  v153 = v94;
  v126 = v154;
  v127 = &v151;
  v125 = &v157;
  feedbackResetVersion_8.is_nil = v117;
  feedbackResetVersion_8.value = intentionalWord.k.value;
  v170.value = v137;
  v168.value = v139;
  v170.is_nil = v142;
  v168.is_nil = v143;
  v172.is_nil = confidencea;
  REMSuggestedAttributesTrainer.Parameters.init(enabledOnmacOS:enabledOniOS:maxSampleCount:minimumSampleCount:validationSetProportion:shouldSaveModel:allowLocalOverrides:allowCloudOverrides:randomSeed:coreBehavior:embedding:anchoredBubble:intentionalWord:)(&v160, (Swift::Bool_optional)2, (Swift::Bool_optional)2, v168, v170, v172, shouldSaveModela, allowLocalOverridesa, (Swift::Bool_optional)2, feedbackResetVersion_8, &coreBehavior, *(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding *)(&v126 - 1), *(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::AnchoredBubble *)(&v128 - 16), intentionalWord);
  v118 = *(_OWORD *)&v160.anchoredBubble.overrideLocalWordDistanceScale;
  *(_OWORD *)(v148 + 128) = *(_OWORD *)&v160.anchoredBubble.enabledOniOS;
  *(_OWORD *)(v148 + 144) = v118;
  *(_OWORD *)(v148 + 153) = *(_OWORD *)v160.intentionalWord.gap1;
  v119 = *(_OWORD *)&v160.coreBehavior.validationRelativeSupport;
  *(_OWORD *)(v148 + 64) = *(_OWORD *)&v160.coreBehavior.adjustment;
  *(_OWORD *)(v148 + 80) = v119;
  embedding = v160.embedding;
  *(_OWORD *)(v148 + 96) = *(_OWORD *)&v160.coreBehavior.feedbackResetVersion;
  *(ReminderKitInternal::REMSuggestedAttributesTrainer::Parameters::Embedding *)(v148 + 112) = embedding;
  v121 = *(_OWORD *)&v160.minimumSampleCount;
  *(_OWORD *)v148 = *(_OWORD *)&v160.enabledOnmacOS;
  *(_OWORD *)(v148 + 16) = v121;
  result = *(__n128 *)&v160.coreBehavior.isEnabled;
  *(_OWORD *)(v148 + 32) = *(_OWORD *)&v160.shouldSaveModel;
  *(__n128 *)(v148 + 48) = result;
  return result;
}

unint64_t sub_1A45BE8E8@<X0>(uint64_t a1@<X1>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t result;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  if (!*(_QWORD *)(a1 + 16))
  {
    v9 = 0u;
    v10 = 0u;
    goto LABEL_8;
  }
  v4 = swift_retain();
  v5 = sub_1A443EBC0(v4);
  if ((v6 & 1) == 0)
  {
    v9 = 0u;
    v10 = 0u;
    swift_release();
    goto LABEL_8;
  }
  sub_1A44311F0(*(_QWORD *)(a1 + 56) + 32 * v5, (uint64_t)&v9);
  swift_release();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_8:
    sub_1A4496084((uint64_t)&v9);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722420);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    result = sub_1A443DCF8(MEMORY[0x1E0DEE9D8]);
    goto LABEL_10;
  }
  result = v8;
LABEL_10:
  *a2 = result;
  return result;
}

uint64_t sub_1A45BE9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  _OWORD v10[2];

  if (!*(_QWORD *)(a2 + 16))
  {
    v8 = 0u;
    v9 = 0u;
    goto LABEL_8;
  }
  v3 = swift_retain();
  v4 = sub_1A443EBCC(v3);
  if ((v5 & 1) == 0)
  {
    v8 = 0u;
    v9 = 0u;
    swift_release();
    goto LABEL_8;
  }
  sub_1A44311F0(*(_QWORD *)(a2 + 56) + 32 * v4, (uint64_t)&v8);
  swift_release();
  if (!*((_QWORD *)&v9 + 1))
  {
LABEL_8:
    sub_1A4496084((uint64_t)&v8);
    return 0;
  }
  sub_1A444A940(&v8, v10);
  sub_1A444A940(v10, &v8);
  if ((swift_dynamicCast() & 1) != 0)
    return v7;
  return 0;
}

uint64_t REMSuggestedAttributesTrainer.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char v51;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722090);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *(unsigned __int8 *)(v1 + 1);
  v7 = *(_QWORD *)(v1 + 8);
  v38 = *(_QWORD *)(v1 + 16);
  v39 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 32);
  v35 = *(unsigned __int8 *)(v1 + 33);
  v36 = v7;
  v34 = *(unsigned __int8 *)(v1 + 34);
  v33 = *(_QWORD *)(v1 + 40);
  v29 = *(unsigned __int8 *)(v1 + 48);
  v32 = *(_QWORD *)(v1 + 56);
  v31 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  v30 = *(_QWORD *)(v1 + 96);
  v11 = *(_QWORD *)(v1 + 104);
  v27 = *(unsigned __int8 *)(v1 + 112);
  v28 = *(_QWORD *)(v1 + 120);
  v24 = *(unsigned __int8 *)(v1 + 128);
  v26 = *(unsigned __int8 *)(v1 + 129);
  v12 = *(_QWORD *)(v1 + 136);
  v25 = *(unsigned __int8 *)(v1 + 144);
  v37 = *(unsigned __int8 *)(v1 + 152);
  v13 = *(_QWORD *)(v1 + 160);
  v14 = *(unsigned __int8 *)(v1 + 168);
  v15 = a1[3];
  v16 = a1;
  v18 = v17;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_1A45C1964();
  sub_1A4691D40();
  v41 = 0;
  v19 = v40;
  sub_1A4691860();
  if (!v19)
  {
    v23 = v14;
    v40 = v13;
    v20 = v37;
    v41 = 1;
    sub_1A4691860();
    v41 = 2;
    sub_1A4691878();
    v41 = 3;
    sub_1A4691878();
    v41 = 4;
    sub_1A469186C();
    v41 = 5;
    sub_1A4691860();
    v41 = 6;
    sub_1A4691860();
    v41 = 7;
    sub_1A4691860();
    v41 = 8;
    sub_1A4691878();
    v41 = v29;
    v43 = v32;
    v44 = v31;
    v45 = v8;
    v46 = v9;
    v47 = v10;
    v48 = v30;
    v49 = v11;
    v51 = 9;
    sub_1A45C19A8();
    sub_1A4691890();
    v41 = v27;
    v43 = v28;
    v51 = 10;
    sub_1A45C19EC();
    sub_1A4691890();
    v41 = v24;
    v42 = v26;
    v43 = v12;
    LOBYTE(v44) = v25;
    v51 = 11;
    sub_1A45C1A30();
    sub_1A4691890();
    v41 = v20;
    v43 = v40;
    LOBYTE(v44) = v23;
    v51 = 12;
    sub_1A45C1A74();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v18);
}

uint64_t REMSuggestedAttributesTrainer.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7220C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C1964();
  sub_1A4691D28();
  if (!v2)
  {
    v41 = 0;
    v9 = sub_1A4691794();
    v41 = 1;
    v10 = sub_1A4691794();
    v41 = 2;
    v40 = sub_1A46917AC();
    v41 = 3;
    v39 = sub_1A46917AC();
    v41 = 4;
    sub_1A46917A0();
    v12 = v11;
    v41 = 5;
    v38 = sub_1A4691794();
    v41 = 6;
    v37 = sub_1A4691794();
    v41 = 7;
    v36 = sub_1A4691794();
    v41 = 8;
    v35 = sub_1A46917AC();
    v51 = 9;
    sub_1A45C1AB8();
    sub_1A46917C4();
    v34 = v41;
    v33 = v43;
    v32 = v44;
    v13 = v45;
    v14 = v46;
    v15 = v47;
    v31 = v48;
    v16 = v49;
    v51 = 10;
    sub_1A45C1AFC();
    sub_1A46917C4();
    v30 = v41;
    v29 = v43;
    v51 = 11;
    sub_1A45C1B40();
    sub_1A46917C4();
    v28 = v41;
    v27 = v42;
    v17 = v43;
    HIDWORD(v26) = v44;
    v51 = 12;
    sub_1A45C1B84();
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v19 = v41;
    v20 = v43;
    v21 = v38 & 1;
    v22 = v37 & 1;
    v23 = v36 & 1;
    v50 = v44;
    *(_BYTE *)a2 = v9 & 1;
    *(_BYTE *)(a2 + 1) = v10 & 1;
    v24 = v39;
    *(_QWORD *)(a2 + 8) = v40;
    *(_QWORD *)(a2 + 16) = v24;
    *(_QWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 32) = v21;
    *(_BYTE *)(a2 + 33) = v22;
    *(_BYTE *)(a2 + 34) = v23;
    *(_QWORD *)(a2 + 40) = v35;
    *(_BYTE *)(a2 + 48) = v34;
    v25 = v32;
    *(_QWORD *)(a2 + 56) = v33;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v13;
    *(_QWORD *)(a2 + 80) = v14;
    *(_QWORD *)(a2 + 88) = v15;
    *(_QWORD *)(a2 + 96) = v31;
    *(_QWORD *)(a2 + 104) = v16;
    *(_BYTE *)(a2 + 112) = v30;
    *(_QWORD *)(a2 + 120) = v29;
    *(_BYTE *)(a2 + 128) = v28;
    *(_BYTE *)(a2 + 129) = v27;
    *(_QWORD *)(a2 + 136) = v17;
    *(_BYTE *)(a2 + 144) = BYTE4(v26);
    *(_BYTE *)(a2 + 152) = v19;
    *(_QWORD *)(a2 + 160) = v20;
    *(_BYTE *)(a2 + 168) = v50;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45BF3F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesTrainer.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A45BF40C(_QWORD *a1)
{
  return REMSuggestedAttributesTrainer.Parameters.encode(to:)(a1);
}

id REMSuggestedAttributesTrainer.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSuggestedAttributesTrainer.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

uint64_t sub_1A45BF4F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A44E6DD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45BF51C()
{
  sub_1A45BFE50();
  return sub_1A4691DB8();
}

uint64_t sub_1A45BF544()
{
  sub_1A45BFE50();
  return sub_1A4691DC4();
}

uint64_t sub_1A45BF56C()
{
  sub_1A45C5FF8();
  return sub_1A4690B7C();
}

uint64_t sub_1A45BF5C8()
{
  sub_1A45C5FF8();
  return sub_1A4690B40();
}

unint64_t sub_1A45BF614()
{
  unint64_t result;

  result = qword_1EE721E40;
  if (!qword_1EE721E40)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8330, &type metadata for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721E40);
  }
  return result;
}

unint64_t sub_1A45BF658()
{
  unint64_t result;

  result = qword_1EE721E48;
  if (!qword_1EE721E48)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesAccuracy, &type metadata for REMSuggestedAttributesAccuracy);
    atomic_store(result, (unint64_t *)&qword_1EE721E48);
  }
  return result;
}

unint64_t sub_1A45BF69C()
{
  unint64_t result;

  result = qword_1EE721E58;
  if (!qword_1EE721E58)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesAccuracy, &type metadata for REMSuggestedAttributesAccuracy);
    atomic_store(result, (unint64_t *)&qword_1EE721E58);
  }
  return result;
}

unint64_t sub_1A45BF6E0()
{
  unint64_t result;

  result = qword_1EE721E68;
  if (!qword_1EE721E68)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A82E0, &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721E68);
  }
  return result;
}

unint64_t sub_1A45BF724()
{
  unint64_t result;

  result = qword_1EE721E80;
  if (!qword_1EE721E80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8290, &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721E80);
  }
  return result;
}

uint64_t sub_1A45BF768(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A45BF9E0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1A45BFC5C()
{
  unint64_t result;

  result = qword_1EE721E98;
  if (!qword_1EE721E98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8240, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721E98);
  }
  return result;
}

uint64_t sub_1A45BFCA0(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1A85A0000](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A45BFCFC()
{
  unint64_t result;

  result = qword_1EE721ED8;
  if (!qword_1EE721ED8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A81F0, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721ED8);
  }
  return result;
}

uint64_t sub_1A45BFD40(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721EE0);
    v10 = sub_1A45BFCA0(a2, &qword_1EE721EA0, a3, a4);
    result = MEMORY[0x1A85A0000](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A45BFDC8(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721EF0);
    v10 = sub_1A45BFCA0(a2, &qword_1EE71C7C0, a3, a4);
    result = MEMORY[0x1A85A0000](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A45BFE50()
{
  unint64_t result;

  result = qword_1EE721F20;
  if (!qword_1EE721F20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A81A0, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721F20);
  }
  return result;
}

unint64_t sub_1A45BFE94()
{
  unint64_t result;

  result = qword_1EE721F28;
  if (!qword_1EE721F28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8178, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE721F28);
  }
  return result;
}

unint64_t sub_1A45BFED8()
{
  unint64_t result;

  result = qword_1EE721F30;
  if (!qword_1EE721F30)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed);
    atomic_store(result, (unint64_t *)&qword_1EE721F30);
  }
  return result;
}

unint64_t sub_1A45BFF1C()
{
  unint64_t result;

  result = qword_1EE721F38;
  if (!qword_1EE721F38)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned);
    atomic_store(result, (unint64_t *)&qword_1EE721F38);
  }
  return result;
}

unint64_t sub_1A45BFF60()
{
  unint64_t result;

  result = qword_1EE721F48;
  if (!qword_1EE721F48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8150, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE721F48);
  }
  return result;
}

unint64_t sub_1A45BFFA4()
{
  unint64_t result;

  result = qword_1EE721F50;
  if (!qword_1EE721F50)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed);
    atomic_store(result, (unint64_t *)&qword_1EE721F50);
  }
  return result;
}

unint64_t sub_1A45BFFE8()
{
  unint64_t result;

  result = qword_1EE721F58;
  if (!qword_1EE721F58)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned);
    atomic_store(result, (unint64_t *)&qword_1EE721F58);
  }
  return result;
}

uint64_t sub_1A45C002C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 168);
}

uint64_t sub_1A45C0034(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 464);
}

uint64_t sub_1A45C003C(uint64_t result)
{
  *(_BYTE *)(result + 464) = 0;
  return result;
}

uint64_t sub_1A45C0044(uint64_t result)
{
  *(_BYTE *)(result + 168) = 0;
  return result;
}

unint64_t sub_1A45C004C()
{
  unint64_t result;

  result = qword_1EE721F78;
  if (!qword_1EE721F78)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8100, &type metadata for REMSuggestedAttributesTrainer.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE721F78);
  }
  return result;
}

unint64_t sub_1A45C0090()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE721F80;
  if (!qword_1EE721F80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721F60);
    v2[0] = sub_1A45C0118();
    v2[1] = sub_1A45C015C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE721F80);
  }
  return result;
}

unint64_t sub_1A45C0118()
{
  unint64_t result;

  result = qword_1EE721F88;
  if (!qword_1EE721F88)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.Embedding, &type metadata for REMSuggestedAttributesTrainer.Result.Embedding);
    atomic_store(result, (unint64_t *)&qword_1EE721F88);
  }
  return result;
}

unint64_t sub_1A45C015C()
{
  unint64_t result;

  result = qword_1EE721F90;
  if (!qword_1EE721F90)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.Embedding, &type metadata for REMSuggestedAttributesTrainer.Result.Embedding);
    atomic_store(result, (unint64_t *)&qword_1EE721F90);
  }
  return result;
}

unint64_t sub_1A45C01A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE721FA0;
  if (!qword_1EE721FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721F98);
    v2[0] = sub_1A45C0228();
    v2[1] = sub_1A45C026C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE721FA0);
  }
  return result;
}

unint64_t sub_1A45C0228()
{
  unint64_t result;

  result = qword_1EE721FA8;
  if (!qword_1EE721FA8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.AnchoredBubble, &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble);
    atomic_store(result, (unint64_t *)&qword_1EE721FA8);
  }
  return result;
}

unint64_t sub_1A45C026C()
{
  unint64_t result;

  result = qword_1EE721FB0;
  if (!qword_1EE721FB0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.AnchoredBubble, &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble);
    atomic_store(result, (unint64_t *)&qword_1EE721FB0);
  }
  return result;
}

unint64_t sub_1A45C02B0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE721FB8;
  if (!qword_1EE721FB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721F68);
    v2[0] = sub_1A45C0338();
    v2[1] = sub_1A45C037C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE721FB8);
  }
  return result;
}

unint64_t sub_1A45C0338()
{
  unint64_t result;

  result = qword_1EE721FC0;
  if (!qword_1EE721FC0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.CoreBehavior, &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE721FC0);
  }
  return result;
}

unint64_t sub_1A45C037C()
{
  unint64_t result;

  result = qword_1EE721FC8;
  if (!qword_1EE721FC8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.CoreBehavior, &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE721FC8);
  }
  return result;
}

unint64_t sub_1A45C03C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE721FD8;
  if (!qword_1EE721FD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721FD0);
    v2[0] = sub_1A45C0448();
    v2[1] = sub_1A45C048C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE721FD8);
  }
  return result;
}

unint64_t sub_1A45C0448()
{
  unint64_t result;

  result = qword_1EE721FE0;
  if (!qword_1EE721FE0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.IntentionalWord, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord);
    atomic_store(result, (unint64_t *)&qword_1EE721FE0);
  }
  return result;
}

unint64_t sub_1A45C048C()
{
  unint64_t result;

  result = qword_1EE721FE8;
  if (!qword_1EE721FE8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result.IntentionalWord, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord);
    atomic_store(result, (unint64_t *)&qword_1EE721FE8);
  }
  return result;
}

unint64_t sub_1A45C04D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE721FF8;
  if (!qword_1EE721FF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721F60);
    v2[0] = sub_1A45C0118();
    v2[1] = sub_1A45C015C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE721FF8);
  }
  return result;
}

unint64_t sub_1A45C0558()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE722000;
  if (!qword_1EE722000)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721F98);
    v2[0] = sub_1A45C0228();
    v2[1] = sub_1A45C026C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE722000);
  }
  return result;
}

uint64_t sub_1A45C05E0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 168);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    v4);
  return a1;
}

uint64_t sub_1A45C064C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;

  v18 = *(_BYTE *)(a1 + 464);
  v16 = *(_OWORD *)(a1 + 416);
  v17 = *(_OWORD *)(a1 + 432);
  v14 = *(_OWORD *)(a1 + 384);
  v15 = *(_OWORD *)(a1 + 400);
  v12 = *(_OWORD *)(a1 + 352);
  v13 = *(_OWORD *)(a1 + 368);
  v10 = *(_OWORD *)(a1 + 320);
  v11 = *(_OWORD *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    v10,
    *((_QWORD *)&v10 + 1),
    v11,
    *((_QWORD *)&v11 + 1),
    v12,
    *((_QWORD *)&v12 + 1),
    v13,
    *((_QWORD *)&v13 + 1),
    v14,
    *((_QWORD *)&v14 + 1),
    v15,
    *((_QWORD *)&v15 + 1),
    v16,
    *((_QWORD *)&v16 + 1),
    v17,
    *((_QWORD *)&v17 + 1),
    *(_QWORD *)(a1 + 448),
    *(_QWORD *)(a1 + 456),
    v18);
  return a1;
}

unint64_t sub_1A45C0700()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE722008;
  if (!qword_1EE722008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721F68);
    v2[0] = sub_1A45C0338();
    v2[1] = sub_1A45C037C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE722008);
  }
  return result;
}

unint64_t sub_1A45C0788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EE722010;
  if (!qword_1EE722010)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721FD0);
    v2[0] = sub_1A45C0448();
    v2[1] = sub_1A45C048C();
    v2[2] = sub_1A45877DC();
    v2[3] = sub_1A4587820();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Result<A, B>, v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EE722010);
  }
  return result;
}

unint64_t sub_1A45C0810()
{
  unint64_t result;

  result = qword_1EE722020;
  if (!qword_1EE722020)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722020);
  }
  return result;
}

unint64_t sub_1A45C0854()
{
  unint64_t result;

  result = qword_1EE722038;
  if (!qword_1EE722038)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722038);
  }
  return result;
}

unint64_t sub_1A45C0898()
{
  unint64_t result;

  result = qword_1EE722050;
  if (!qword_1EE722050)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722050);
  }
  return result;
}

unint64_t sub_1A45C08DC()
{
  unint64_t result;

  result = qword_1EE722068;
  if (!qword_1EE722068)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722068);
  }
  return result;
}

uint64_t sub_1A45C0920(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756363417473696CLL && a2 == 0xEC00000079636172;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A46C1DE0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E00 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A46C1E20 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E40)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A45C0B30(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F69736963657270 && a2 == 0xE90000000000006ELL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6C61636572 && a2 == 0xE600000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A46C1DE0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E00 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A46C1E20 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E40)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A45C0D90(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756363417473696CLL && a2 == 0xEC00000079636172;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A46C1E60 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A46C1E80 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C755264656E696DLL && a2 == 0xEE00746E756F4365 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A46C1EA0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E00 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001A46C1E20 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A46C1EC0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E40 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x73656C7552706F74 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_1A45C1180(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1EE0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C72657473756C63 && a2 == 0xED0000736C656261 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5372657473756C63 && a2 == 0xEC00000073657A69 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6648685 && a2 == 0xE300000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E40)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A45C13C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4B74736562 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A46C1F00 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1EE0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5372657473756C63 && a2 == 0xEC00000073657A69 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 6648685 && a2 == 0xE300000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1265527149 && a2 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1266180461 && a2 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E40)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1A45C16CC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69646465626D65 && a2 == 0xE900000000000067;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465726F68636E61 && a2 == 0xEE00656C62627542 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6168656265726F63 && a2 == 0xEC000000726F6976 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F69746E65746E69 && a2 == 0xEF64726F576C616ELL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C1E40)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV14partialKeyPath3fors07PartialiJ0CyAEGAE10CodingKeysO_tFZ_0()
{
  return swift_getKeyPath();
}

unint64_t sub_1A45C1964()
{
  unint64_t result;

  result = qword_1EE722098;
  if (!qword_1EE722098)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722098);
  }
  return result;
}

unint64_t sub_1A45C19A8()
{
  unint64_t result;

  result = qword_1EE7220A0;
  if (!qword_1EE7220A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE7220A0);
  }
  return result;
}

unint64_t sub_1A45C19EC()
{
  unint64_t result;

  result = qword_1EE7220A8;
  if (!qword_1EE7220A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding);
    atomic_store(result, (unint64_t *)&qword_1EE7220A8);
  }
  return result;
}

unint64_t sub_1A45C1A30()
{
  unint64_t result;

  result = qword_1EE7220B0;
  if (!qword_1EE7220B0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble);
    atomic_store(result, (unint64_t *)&qword_1EE7220B0);
  }
  return result;
}

unint64_t sub_1A45C1A74()
{
  unint64_t result;

  result = qword_1EE7220B8;
  if (!qword_1EE7220B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord);
    atomic_store(result, (unint64_t *)&qword_1EE7220B8);
  }
  return result;
}

unint64_t sub_1A45C1AB8()
{
  unint64_t result;

  result = qword_1EE7220C8;
  if (!qword_1EE7220C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE7220C8);
  }
  return result;
}

unint64_t sub_1A45C1AFC()
{
  unint64_t result;

  result = qword_1EE7220D0;
  if (!qword_1EE7220D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding);
    atomic_store(result, (unint64_t *)&qword_1EE7220D0);
  }
  return result;
}

unint64_t sub_1A45C1B40()
{
  unint64_t result;

  result = qword_1EE7220D8;
  if (!qword_1EE7220D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble);
    atomic_store(result, (unint64_t *)&qword_1EE7220D8);
  }
  return result;
}

unint64_t sub_1A45C1B84()
{
  unint64_t result;

  result = qword_1EE7220E0;
  if (!qword_1EE7220E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord);
    atomic_store(result, (unint64_t *)&qword_1EE7220E0);
  }
  return result;
}

unint64_t sub_1A45C1BCC()
{
  unint64_t result;

  result = qword_1EE7220E8;
  if (!qword_1EE7220E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7220E8);
  }
  return result;
}

uint64_t sub_1A45C1C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A45C1C24, (uint64_t (*)(void))sub_1A45C0810);
}

unint64_t sub_1A45C1C24()
{
  unint64_t result;

  result = qword_1EE7220F0;
  if (!qword_1EE7220F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7220F0);
  }
  return result;
}

unint64_t sub_1A45C1C6C()
{
  unint64_t result;

  result = qword_1EE7220F8;
  if (!qword_1EE7220F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7220F8);
  }
  return result;
}

unint64_t sub_1A45C1CB4()
{
  unint64_t result;

  result = qword_1EE722100;
  if (!qword_1EE722100)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722100);
  }
  return result;
}

uint64_t sub_1A45C1CF8()
{
  return sub_1A4460EE4(&qword_1EE722108, &qword_1EE722110);
}

unint64_t sub_1A45C1D24(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45C1AB8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45C1D4C()
{
  unint64_t result;

  result = qword_1EE722150;
  if (!qword_1EE722150)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722150);
  }
  return result;
}

uint64_t sub_1A45C1D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A45C1DA4, (uint64_t (*)(void))sub_1A45C0854);
}

unint64_t sub_1A45C1DA4()
{
  unint64_t result;

  result = qword_1EE722158;
  if (!qword_1EE722158)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722158);
  }
  return result;
}

unint64_t sub_1A45C1DEC()
{
  unint64_t result;

  result = qword_1EE722160;
  if (!qword_1EE722160)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722160);
  }
  return result;
}

unint64_t sub_1A45C1E34()
{
  unint64_t result;

  result = qword_1EE722168;
  if (!qword_1EE722168)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722168);
  }
  return result;
}

uint64_t sub_1A45C1E78()
{
  return sub_1A4460EE4(&qword_1EE722170, &qword_1EE722178);
}

unint64_t sub_1A45C1EA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45C1AFC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45C1ECC()
{
  unint64_t result;

  result = qword_1EE7221B8;
  if (!qword_1EE7221B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7221B8);
  }
  return result;
}

uint64_t sub_1A45C1F10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A45C1F24, (uint64_t (*)(void))sub_1A45C0898);
}

unint64_t sub_1A45C1F24()
{
  unint64_t result;

  result = qword_1EE7221C0;
  if (!qword_1EE7221C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7221C0);
  }
  return result;
}

unint64_t sub_1A45C1F6C()
{
  unint64_t result;

  result = qword_1EE7221C8;
  if (!qword_1EE7221C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7221C8);
  }
  return result;
}

unint64_t sub_1A45C1FB4()
{
  unint64_t result;

  result = qword_1EE7221D0;
  if (!qword_1EE7221D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7221D0);
  }
  return result;
}

uint64_t sub_1A45C1FF8()
{
  return sub_1A4460EE4(&qword_1EE7221D8, &qword_1EE7221E0);
}

unint64_t sub_1A45C2024(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45C1B40();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45C204C()
{
  unint64_t result;

  result = qword_1EE722220;
  if (!qword_1EE722220)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722220);
  }
  return result;
}

uint64_t sub_1A45C2090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A45C20A4, (uint64_t (*)(void))sub_1A45C08DC);
}

unint64_t sub_1A45C20A4()
{
  unint64_t result;

  result = qword_1EE722228;
  if (!qword_1EE722228)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722228);
  }
  return result;
}

unint64_t sub_1A45C20EC()
{
  unint64_t result;

  result = qword_1EE722230;
  if (!qword_1EE722230)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722230);
  }
  return result;
}

unint64_t sub_1A45C2134()
{
  unint64_t result;

  result = qword_1EE722238;
  if (!qword_1EE722238)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722238);
  }
  return result;
}

uint64_t sub_1A45C2178()
{
  return sub_1A4460EE4(&qword_1EE722240, &qword_1EE722248);
}

unint64_t sub_1A45C21A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45C1B84();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45C21CC()
{
  unint64_t result;

  result = qword_1EE722288;
  if (!qword_1EE722288)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722288);
  }
  return result;
}

uint64_t sub_1A45C2210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4587F6C(a1, a2, a3, (uint64_t (*)(void))sub_1A45C2224, (uint64_t (*)(void))sub_1A45C1964);
}

unint64_t sub_1A45C2224()
{
  unint64_t result;

  result = qword_1EE722290;
  if (!qword_1EE722290)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722290);
  }
  return result;
}

unint64_t sub_1A45C226C()
{
  unint64_t result;

  result = qword_1EE722298;
  if (!qword_1EE722298)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722298);
  }
  return result;
}

unint64_t sub_1A45C22B4()
{
  unint64_t result;

  result = qword_1EE7222A0;
  if (!qword_1EE7222A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7222A0);
  }
  return result;
}

uint64_t sub_1A45C22F8()
{
  return sub_1A4460EE4(&qword_1EE7222A8, &qword_1EE7222B0);
}

unint64_t sub_1A45C2324(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45C2348();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45C2348()
{
  unint64_t result;

  result = qword_1EE7222F0;
  if (!qword_1EE7222F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters, &type metadata for REMSuggestedAttributesTrainer.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE7222F0);
  }
  return result;
}

unint64_t sub_1A45C239C()
{
  unint64_t result;

  result = qword_1EE7222F8;
  if (!qword_1EE7222F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Result, &type metadata for REMSuggestedAttributesTrainer.Result);
    atomic_store(result, (unint64_t *)&qword_1EE7222F8);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesTrainer()
{
  return objc_opt_self();
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result(uint64_t a1)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v2 = a1 + 704;
  sub_1A4496FEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_BYTE *)(a1 + 168));
  sub_1A44970E0(*(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), *(_QWORD *)(a1 + 192), *(_QWORD *)(a1 + 200), *(_QWORD *)(a1 + 208), *(_QWORD *)(a1 + 216), *(_QWORD *)(a1 + 224), *(_BYTE *)(a1 + 232));
  v16 = *(_OWORD *)(a1 + 656);
  v17 = *(_OWORD *)(a1 + 672);
  v14 = *(_OWORD *)(a1 + 624);
  v15 = *(_OWORD *)(a1 + 640);
  v12 = *(_OWORD *)(a1 + 592);
  v13 = *(_OWORD *)(a1 + 608);
  v10 = *(_OWORD *)(a1 + 560);
  v11 = *(_OWORD *)(a1 + 576);
  v8 = *(_OWORD *)(a1 + 528);
  v9 = *(_OWORD *)(a1 + 544);
  v6 = *(_OWORD *)(a1 + 496);
  v7 = *(_OWORD *)(a1 + 512);
  v4 = *(_OWORD *)(a1 + 464);
  v5 = *(_OWORD *)(a1 + 480);
  sub_1A449711C(*(_QWORD *)(a1 + 240), *(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264), *(_QWORD *)(a1 + 272), *(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_QWORD *)(a1 + 336), *(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352), *(_QWORD *)(a1 + 360), *(_QWORD *)(a1 + 368), *(_QWORD *)(a1 + 376), *(_QWORD *)(a1 + 384),
    *(_QWORD *)(a1 + 392),
    *(_QWORD *)(a1 + 400),
    *(_QWORD *)(a1 + 408),
    *(_QWORD *)(a1 + 416),
    *(_QWORD *)(a1 + 424),
    *(_QWORD *)(a1 + 432),
    *(_QWORD *)(a1 + 440),
    *(_QWORD *)(a1 + 448),
    *(_QWORD *)(a1 + 456),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    *(_QWORD *)(a1 + 688),
    *(_QWORD *)(a1 + 696),
    *(_BYTE *)(a1 + 704));
  return sub_1A44973CC(*(_QWORD *)(a1 + 712), *(_QWORD *)(a1 + 720), *(_QWORD *)(a1 + 728), *(_QWORD *)(a1 + 736), *(_QWORD *)(a1 + 744), *(_QWORD *)(a1 + 752), *(_QWORD *)(a1 + 760), *(_QWORD *)(a1 + 768), *(_BYTE *)(a1 + 776), *(_BYTE *)(v2 + 73));
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;

  v63 = a2 + 704;
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  v74 = *(_QWORD *)(a2 + 64);
  v76 = *(_QWORD *)(a2 + 72);
  v78 = *(_QWORD *)(a2 + 80);
  v80 = *(_QWORD *)(a2 + 88);
  v82 = *(_QWORD *)(a2 + 96);
  v84 = *(_QWORD *)(a2 + 104);
  v86 = *(_QWORD *)(a2 + 112);
  v88 = *(_QWORD *)(a2 + 120);
  v90 = *(_QWORD *)(a2 + 128);
  v92 = *(_QWORD *)(a2 + 136);
  v94 = *(_QWORD *)(a2 + 144);
  v96 = *(_QWORD *)(a2 + 152);
  v98 = *(_QWORD *)(a2 + 160);
  v100 = *(_BYTE *)(a2 + 168);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 56);
  sub_1A4496858(*(_QWORD *)a2, v9, v10, v4, v5, v6, v7, v11, *(_QWORD *)(a2 + 64), *(_QWORD *)(a2 + 72), *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), *(_QWORD *)(a2 + 96), *(_QWORD *)(a2 + 104), *(_QWORD *)(a2 + 112), *(_QWORD *)(a2 + 120), *(_QWORD *)(a2 + 128), *(_QWORD *)(a2 + 136), *(_QWORD *)(a2 + 144),
    *(_QWORD *)(a2 + 152),
    *(_QWORD *)(a2 + 160),
    *(_BYTE *)(a2 + 168));
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v74;
  *(_QWORD *)(a1 + 72) = v76;
  *(_QWORD *)(a1 + 80) = v78;
  *(_QWORD *)(a1 + 88) = v80;
  *(_QWORD *)(a1 + 96) = v82;
  *(_QWORD *)(a1 + 104) = v84;
  *(_QWORD *)(a1 + 112) = v86;
  *(_QWORD *)(a1 + 120) = v88;
  *(_QWORD *)(a1 + 128) = v90;
  *(_QWORD *)(a1 + 136) = v92;
  *(_QWORD *)(a1 + 144) = v94;
  *(_QWORD *)(a1 + 152) = v96;
  *(_QWORD *)(a1 + 160) = v98;
  *(_BYTE *)(a1 + 168) = v100;
  v12 = *(_QWORD *)(a2 + 176);
  v13 = *(_QWORD *)(a2 + 184);
  v14 = *(_QWORD *)(a2 + 192);
  v15 = *(_QWORD *)(a2 + 200);
  v16 = *(_QWORD *)(a2 + 208);
  v17 = *(_QWORD *)(a2 + 216);
  v18 = *(_QWORD *)(a2 + 224);
  LOBYTE(v7) = *(_BYTE *)(a2 + 232);
  sub_1A449694C(v12, v13, v14, v15, v16, v17, v18, v7);
  *(_QWORD *)(a1 + 176) = v12;
  *(_QWORD *)(a1 + 184) = v13;
  *(_QWORD *)(a1 + 192) = v14;
  *(_QWORD *)(a1 + 200) = v15;
  *(_QWORD *)(a1 + 208) = v16;
  *(_QWORD *)(a1 + 216) = v17;
  *(_QWORD *)(a1 + 224) = v18;
  *(_BYTE *)(a1 + 232) = v7;
  v101 = *(_QWORD *)(a2 + 304);
  v99 = *(_QWORD *)(a2 + 312);
  v97 = *(_QWORD *)(a2 + 320);
  v95 = *(_QWORD *)(a2 + 328);
  v93 = *(_QWORD *)(a2 + 336);
  v91 = *(_QWORD *)(a2 + 344);
  v89 = *(_QWORD *)(a2 + 352);
  v87 = *(_QWORD *)(a2 + 360);
  v85 = *(_QWORD *)(a2 + 368);
  v83 = *(_QWORD *)(a2 + 376);
  v81 = *(_QWORD *)(a2 + 384);
  v79 = *(_QWORD *)(a2 + 392);
  v77 = *(_QWORD *)(a2 + 400);
  v75 = *(_QWORD *)(a2 + 408);
  v73 = *(_QWORD *)(a2 + 416);
  v72 = *(_QWORD *)(a2 + 424);
  v71 = *(_QWORD *)(a2 + 432);
  v70 = *(_QWORD *)(a2 + 440);
  v69 = *(_QWORD *)(a2 + 448);
  v68 = *(_QWORD *)(a2 + 456);
  v67 = *(_QWORD *)(a2 + 464);
  v66 = *(_QWORD *)(a2 + 472);
  v65 = *(_QWORD *)(a2 + 480);
  v64 = *(_QWORD *)(a2 + 488);
  v36 = *(_QWORD *)(a2 + 496);
  v37 = *(_QWORD *)(a2 + 504);
  v38 = *(_QWORD *)(a2 + 512);
  v39 = *(_QWORD *)(a2 + 520);
  v40 = *(_QWORD *)(a2 + 528);
  v41 = *(_QWORD *)(a2 + 536);
  v42 = *(_QWORD *)(a2 + 544);
  v43 = *(_QWORD *)(a2 + 552);
  v44 = *(_QWORD *)(a2 + 560);
  v45 = *(_QWORD *)(a2 + 568);
  v46 = *(_QWORD *)(a2 + 576);
  v47 = *(_QWORD *)(a2 + 584);
  v48 = *(_QWORD *)(a2 + 592);
  v49 = *(_QWORD *)(a2 + 600);
  v50 = *(_QWORD *)(a2 + 608);
  v51 = *(_QWORD *)(a2 + 616);
  v52 = *(_QWORD *)(a2 + 624);
  v53 = *(_QWORD *)(a2 + 632);
  v54 = *(_QWORD *)(a2 + 640);
  v55 = *(_QWORD *)(a2 + 648);
  v56 = *(_QWORD *)(a2 + 656);
  v57 = *(_QWORD *)(a2 + 664);
  v58 = *(_QWORD *)(a2 + 672);
  v59 = *(_QWORD *)(a2 + 680);
  v60 = *(_QWORD *)(a2 + 688);
  v61 = *(_QWORD *)(a2 + 696);
  v62 = *(_BYTE *)(a2 + 704);
  v19 = *(_QWORD *)(a2 + 240);
  v20 = *(_QWORD *)(a2 + 248);
  v21 = *(_QWORD *)(a2 + 256);
  v22 = *(_QWORD *)(a2 + 264);
  v23 = *(_QWORD *)(a2 + 272);
  v24 = *(_QWORD *)(a2 + 280);
  v25 = *(_QWORD *)(a2 + 288);
  v26 = *(_QWORD *)(a2 + 296);
  sub_1A4496988(v19, v20, v21, v22, v23, v24, v25, v26, v101, v99, v97, v95, v93, v91, v89, v87, v85, v83, v81,
    v79,
    v77,
    v75,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61,
    v62);
  *(_QWORD *)(a1 + 240) = v19;
  *(_QWORD *)(a1 + 248) = v20;
  *(_QWORD *)(a1 + 256) = v21;
  *(_QWORD *)(a1 + 264) = v22;
  *(_QWORD *)(a1 + 272) = v23;
  *(_QWORD *)(a1 + 280) = v24;
  *(_QWORD *)(a1 + 288) = v25;
  *(_QWORD *)(a1 + 296) = v26;
  *(_QWORD *)(a1 + 304) = v101;
  *(_QWORD *)(a1 + 312) = v99;
  *(_QWORD *)(a1 + 320) = v97;
  *(_QWORD *)(a1 + 328) = v95;
  *(_QWORD *)(a1 + 336) = v93;
  *(_QWORD *)(a1 + 344) = v91;
  *(_QWORD *)(a1 + 352) = v89;
  *(_QWORD *)(a1 + 360) = v87;
  *(_QWORD *)(a1 + 368) = v85;
  *(_QWORD *)(a1 + 376) = v83;
  *(_QWORD *)(a1 + 384) = v81;
  *(_QWORD *)(a1 + 392) = v79;
  *(_QWORD *)(a1 + 400) = v77;
  *(_QWORD *)(a1 + 408) = v75;
  *(_QWORD *)(a1 + 416) = v73;
  *(_QWORD *)(a1 + 424) = v72;
  *(_QWORD *)(a1 + 432) = v71;
  *(_QWORD *)(a1 + 440) = v70;
  *(_QWORD *)(a1 + 448) = v69;
  *(_QWORD *)(a1 + 456) = v68;
  *(_QWORD *)(a1 + 464) = v67;
  *(_QWORD *)(a1 + 472) = v66;
  *(_QWORD *)(a1 + 480) = v65;
  *(_QWORD *)(a1 + 488) = v64;
  *(_QWORD *)(a1 + 496) = v36;
  *(_QWORD *)(a1 + 504) = v37;
  *(_QWORD *)(a1 + 512) = v38;
  *(_QWORD *)(a1 + 520) = v39;
  *(_QWORD *)(a1 + 528) = v40;
  *(_QWORD *)(a1 + 536) = v41;
  *(_QWORD *)(a1 + 544) = v42;
  *(_QWORD *)(a1 + 552) = v43;
  *(_QWORD *)(a1 + 560) = v44;
  *(_QWORD *)(a1 + 568) = v45;
  *(_QWORD *)(a1 + 576) = v46;
  *(_QWORD *)(a1 + 584) = v47;
  *(_QWORD *)(a1 + 592) = v48;
  *(_QWORD *)(a1 + 600) = v49;
  *(_QWORD *)(a1 + 608) = v50;
  *(_QWORD *)(a1 + 616) = v51;
  *(_QWORD *)(a1 + 624) = v52;
  *(_QWORD *)(a1 + 632) = v53;
  *(_QWORD *)(a1 + 640) = v54;
  *(_QWORD *)(a1 + 648) = v55;
  *(_QWORD *)(a1 + 656) = v56;
  *(_QWORD *)(a1 + 664) = v57;
  *(_QWORD *)(a1 + 672) = v58;
  *(_QWORD *)(a1 + 680) = v59;
  *(_QWORD *)(a1 + 688) = v60;
  *(_QWORD *)(a1 + 696) = v61;
  *(_BYTE *)(a1 + 704) = v62;
  v27 = *(_QWORD *)(a2 + 712);
  v28 = *(_QWORD *)(a2 + 720);
  v29 = *(_QWORD *)(a2 + 728);
  v30 = *(_QWORD *)(a2 + 736);
  v31 = *(_QWORD *)(a2 + 744);
  v32 = *(_QWORD *)(a2 + 752);
  v33 = *(_QWORD *)(a2 + 760);
  v34 = *(_QWORD *)(a2 + 768);
  LOBYTE(v99) = *(_BYTE *)(a2 + 776);
  LOBYTE(v101) = *(_BYTE *)(v63 + 73);
  sub_1A4496C38(v27, v28, v29, v30, v31, v32, v33, v34, v99, v101);
  *(_QWORD *)(a1 + 712) = v27;
  *(_QWORD *)(a1 + 720) = v28;
  *(_QWORD *)(a1 + 728) = v29;
  *(_QWORD *)(a1 + 736) = v30;
  *(_QWORD *)(a1 + 744) = v31;
  *(_QWORD *)(a1 + 752) = v32;
  *(_QWORD *)(a1 + 760) = v33;
  *(_QWORD *)(a1 + 768) = v34;
  *(_BYTE *)(a1 + 776) = v99;
  *(_BYTE *)(a1 + 777) = v101;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesTrainer.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;

  v125 = a1 + 704;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v124 = a2 + 704;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v144 = *(_QWORD *)(a2 + 64);
  v146 = *(_QWORD *)(a2 + 72);
  v148 = *(_QWORD *)(a2 + 80);
  v150 = *(_QWORD *)(a2 + 88);
  v152 = *(_QWORD *)(a2 + 96);
  v154 = *(_QWORD *)(a2 + 104);
  v156 = *(_QWORD *)(a2 + 112);
  v158 = *(_QWORD *)(a2 + 120);
  v160 = *(_QWORD *)(a2 + 128);
  v162 = *(_QWORD *)(a2 + 136);
  v164 = *(_QWORD *)(a2 + 144);
  v166 = *(_QWORD *)(a2 + 152);
  v168 = *(_QWORD *)(a2 + 160);
  v170 = *(_BYTE *)(a2 + 168);
  sub_1A4496858(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v144, v146, v148, v150, v152, v154, v156, v158, v160, v162, v164,
    v166,
    v168,
    v170);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v144;
  *(_QWORD *)(a1 + 72) = v146;
  *(_QWORD *)(a1 + 80) = v148;
  *(_QWORD *)(a1 + 88) = v150;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v152;
  *(_QWORD *)(a1 + 104) = v154;
  *(_QWORD *)(a1 + 112) = v156;
  *(_QWORD *)(a1 + 120) = v158;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v160;
  *(_QWORD *)(a1 + 136) = v162;
  *(_QWORD *)(a1 + 144) = v164;
  *(_QWORD *)(a1 + 152) = v166;
  v26 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v168;
  v27 = *(_BYTE *)(a1 + 168);
  *(_BYTE *)(a1 + 168) = v170;
  sub_1A4496FEC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    v27);
  v28 = *(_QWORD *)(a2 + 176);
  v29 = *(_QWORD *)(a2 + 184);
  v30 = *(_QWORD *)(a2 + 192);
  v31 = *(_QWORD *)(a2 + 200);
  v32 = *(_QWORD *)(a2 + 208);
  v33 = *(_QWORD *)(a2 + 216);
  v34 = *(_QWORD *)(a2 + 224);
  LOBYTE(v11) = *(_BYTE *)(a2 + 232);
  sub_1A449694C(v28, v29, v30, v31, v32, v33, v34, v11);
  v35 = *(_QWORD *)(a1 + 176);
  v36 = *(_QWORD *)(a1 + 184);
  v37 = *(_QWORD *)(a1 + 192);
  v38 = *(_QWORD *)(a1 + 200);
  v39 = *(_QWORD *)(a1 + 208);
  v40 = *(_QWORD *)(a1 + 216);
  v41 = *(_QWORD *)(a1 + 224);
  v42 = *(_BYTE *)(a1 + 232);
  *(_QWORD *)(a1 + 176) = v28;
  *(_QWORD *)(a1 + 184) = v29;
  *(_QWORD *)(a1 + 192) = v30;
  *(_QWORD *)(a1 + 200) = v31;
  *(_QWORD *)(a1 + 208) = v32;
  *(_QWORD *)(a1 + 216) = v33;
  *(_QWORD *)(a1 + 224) = v34;
  *(_BYTE *)(a1 + 232) = v11;
  sub_1A44970E0(v35, v36, v37, v38, v39, v40, v41, v42);
  v169 = *(_QWORD *)(a2 + 248);
  v171 = *(_QWORD *)(a2 + 240);
  v165 = *(_QWORD *)(a2 + 264);
  v167 = *(_QWORD *)(a2 + 256);
  v161 = *(_QWORD *)(a2 + 280);
  v163 = *(_QWORD *)(a2 + 272);
  v157 = *(_QWORD *)(a2 + 296);
  v159 = *(_QWORD *)(a2 + 288);
  v153 = *(_QWORD *)(a2 + 312);
  v155 = *(_QWORD *)(a2 + 304);
  v149 = *(_QWORD *)(a2 + 328);
  v151 = *(_QWORD *)(a2 + 320);
  v145 = *(_QWORD *)(a2 + 344);
  v147 = *(_QWORD *)(a2 + 336);
  v142 = *(_QWORD *)(a2 + 360);
  v143 = *(_QWORD *)(a2 + 352);
  v140 = *(_QWORD *)(a2 + 376);
  v141 = *(_QWORD *)(a2 + 368);
  v138 = *(_QWORD *)(a2 + 392);
  v139 = *(_QWORD *)(a2 + 384);
  v137 = *(_QWORD *)(a2 + 400);
  v136 = *(_QWORD *)(a2 + 408);
  v135 = *(_QWORD *)(a2 + 416);
  v134 = *(_QWORD *)(a2 + 424);
  v133 = *(_QWORD *)(a2 + 432);
  v132 = *(_QWORD *)(a2 + 440);
  v131 = *(_QWORD *)(a2 + 448);
  v130 = *(_QWORD *)(a2 + 456);
  v129 = *(_QWORD *)(a2 + 464);
  v128 = *(_QWORD *)(a2 + 472);
  v127 = *(_QWORD *)(a2 + 480);
  v126 = *(_QWORD *)(a2 + 488);
  v44 = *(_QWORD *)(a2 + 504);
  v43 = *(_QWORD *)(a2 + 512);
  v45 = *(_QWORD *)(a2 + 520);
  v46 = *(_QWORD *)(a2 + 528);
  v47 = *(_QWORD *)(a2 + 536);
  v48 = *(_QWORD *)(a2 + 544);
  v49 = *(_QWORD *)(a2 + 552);
  v50 = *(_QWORD *)(a2 + 560);
  v105 = *(_QWORD *)(a2 + 496);
  v106 = *(_QWORD *)(a2 + 568);
  v107 = *(_QWORD *)(a2 + 576);
  v108 = *(_QWORD *)(a2 + 584);
  v109 = *(_QWORD *)(a2 + 592);
  v110 = *(_QWORD *)(a2 + 600);
  v111 = *(_QWORD *)(a2 + 608);
  v112 = *(_QWORD *)(a2 + 616);
  v113 = *(_QWORD *)(a2 + 624);
  v114 = *(_QWORD *)(a2 + 632);
  v115 = *(_QWORD *)(a2 + 640);
  v116 = *(_QWORD *)(a2 + 648);
  v117 = *(_QWORD *)(a2 + 656);
  v118 = *(_QWORD *)(a2 + 664);
  v119 = *(_QWORD *)(a2 + 672);
  v120 = *(_QWORD *)(a2 + 680);
  v121 = *(_QWORD *)(a2 + 688);
  v122 = *(_QWORD *)(a2 + 696);
  v123 = *(_BYTE *)(a2 + 704);
  sub_1A4496988(v171, v169, v167, v165, v163, v161, v159, v157, v155, v153, v151, v149, v147, v145, v143, v142, v141, v140, v139,
    v138,
    v137,
    v136,
    v135,
    v134,
    v133,
    v132,
    v131,
    v130,
    v129,
    v128,
    v127,
    v126,
    v105,
    v44,
    v43,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v106,
    v107,
    v108,
    v109,
    v110,
    v111,
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    v120,
    v121,
    v122,
    v123);
  v51 = *(_QWORD *)(a1 + 240);
  v52 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 240) = v171;
  *(_QWORD *)(a1 + 248) = v169;
  v53 = *(_QWORD *)(a1 + 256);
  v54 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v167;
  *(_QWORD *)(a1 + 264) = v165;
  v55 = *(_QWORD *)(a1 + 272);
  v56 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v163;
  *(_QWORD *)(a1 + 280) = v161;
  v57 = *(_QWORD *)(a1 + 288);
  v58 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v159;
  *(_QWORD *)(a1 + 296) = v157;
  v59 = *(_OWORD *)(a1 + 304);
  v60 = *(_OWORD *)(a1 + 320);
  *(_QWORD *)(a1 + 304) = v155;
  *(_QWORD *)(a1 + 312) = v153;
  *(_QWORD *)(a1 + 320) = v151;
  *(_QWORD *)(a1 + 328) = v149;
  v61 = *(_OWORD *)(a1 + 336);
  v62 = *(_OWORD *)(a1 + 352);
  *(_QWORD *)(a1 + 336) = v147;
  *(_QWORD *)(a1 + 344) = v145;
  *(_QWORD *)(a1 + 352) = v143;
  *(_QWORD *)(a1 + 360) = v142;
  v63 = *(_OWORD *)(a1 + 368);
  v64 = *(_OWORD *)(a1 + 384);
  *(_QWORD *)(a1 + 368) = v141;
  *(_QWORD *)(a1 + 376) = v140;
  *(_QWORD *)(a1 + 384) = v139;
  *(_QWORD *)(a1 + 392) = v138;
  v65 = *(_OWORD *)(a1 + 400);
  v66 = *(_OWORD *)(a1 + 416);
  *(_QWORD *)(a1 + 400) = v137;
  *(_QWORD *)(a1 + 408) = v136;
  *(_QWORD *)(a1 + 416) = v135;
  *(_QWORD *)(a1 + 424) = v134;
  v67 = *(_OWORD *)(a1 + 432);
  v68 = *(_OWORD *)(a1 + 448);
  *(_QWORD *)(a1 + 432) = v133;
  *(_QWORD *)(a1 + 440) = v132;
  *(_QWORD *)(a1 + 448) = v131;
  *(_QWORD *)(a1 + 456) = v130;
  v69 = *(_OWORD *)(a1 + 464);
  v70 = *(_OWORD *)(a1 + 480);
  *(_QWORD *)(a1 + 464) = v129;
  *(_QWORD *)(a1 + 472) = v128;
  *(_QWORD *)(a1 + 480) = v127;
  *(_QWORD *)(a1 + 488) = v126;
  v71 = *(_OWORD *)(a1 + 496);
  v72 = *(_OWORD *)(a1 + 512);
  *(_QWORD *)(a1 + 496) = v105;
  *(_QWORD *)(a1 + 504) = v44;
  *(_QWORD *)(a1 + 512) = v43;
  *(_QWORD *)(a1 + 520) = v45;
  v73 = *(_OWORD *)(a1 + 528);
  v74 = *(_OWORD *)(a1 + 544);
  *(_QWORD *)(a1 + 528) = v46;
  *(_QWORD *)(a1 + 536) = v47;
  *(_QWORD *)(a1 + 544) = v48;
  *(_QWORD *)(a1 + 552) = v49;
  v75 = *(_OWORD *)(a1 + 560);
  v76 = *(_OWORD *)(a1 + 576);
  *(_QWORD *)(a1 + 560) = v50;
  *(_QWORD *)(a1 + 568) = v106;
  *(_QWORD *)(a1 + 576) = v107;
  *(_QWORD *)(a1 + 584) = v108;
  v77 = *(_OWORD *)(a1 + 592);
  v78 = *(_OWORD *)(a1 + 608);
  *(_QWORD *)(a1 + 592) = v109;
  *(_QWORD *)(a1 + 600) = v110;
  *(_QWORD *)(a1 + 608) = v111;
  *(_QWORD *)(a1 + 616) = v112;
  v79 = *(_OWORD *)(a1 + 624);
  v80 = *(_OWORD *)(a1 + 640);
  *(_QWORD *)(a1 + 624) = v113;
  *(_QWORD *)(a1 + 632) = v114;
  *(_QWORD *)(a1 + 640) = v115;
  *(_QWORD *)(a1 + 648) = v116;
  v81 = *(_OWORD *)(a1 + 656);
  v82 = *(_OWORD *)(a1 + 672);
  *(_QWORD *)(a1 + 656) = v117;
  *(_QWORD *)(a1 + 664) = v118;
  *(_QWORD *)(a1 + 672) = v119;
  *(_QWORD *)(a1 + 680) = v120;
  v83 = *(_QWORD *)(a1 + 688);
  *(_QWORD *)(a1 + 688) = v121;
  v84 = *(_QWORD *)(a1 + 696);
  *(_QWORD *)(a1 + 696) = v122;
  v85 = *(_BYTE *)(a1 + 704);
  *(_BYTE *)(a1 + 704) = v123;
  sub_1A449711C(v51, v52, v53, v54, v55, v56, v57, v58, v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63, *((uint64_t *)&v63 + 1), v64,
    *((uint64_t *)&v64 + 1),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67,
    *((uint64_t *)&v67 + 1),
    v68,
    *((uint64_t *)&v68 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v70,
    *((uint64_t *)&v70 + 1),
    v71,
    *((uint64_t *)&v71 + 1),
    v72,
    *((uint64_t *)&v72 + 1),
    v73,
    *((uint64_t *)&v73 + 1),
    v74,
    *((uint64_t *)&v74 + 1),
    v75,
    *((uint64_t *)&v75 + 1),
    v76,
    *((uint64_t *)&v76 + 1),
    v77,
    *((uint64_t *)&v77 + 1),
    v78,
    *((uint64_t *)&v78 + 1),
    v79,
    *((uint64_t *)&v79 + 1),
    v80,
    *((uint64_t *)&v80 + 1),
    v81,
    *((uint64_t *)&v81 + 1),
    v82,
    *((uint64_t *)&v82 + 1),
    v83,
    v84,
    v85);
  v86 = *(_QWORD *)(a2 + 712);
  v87 = *(_QWORD *)(a2 + 720);
  v88 = *(_QWORD *)(a2 + 728);
  v89 = *(_QWORD *)(a2 + 736);
  v90 = *(_QWORD *)(a2 + 744);
  v91 = *(_QWORD *)(a2 + 752);
  v92 = *(_QWORD *)(a2 + 760);
  v93 = *(_QWORD *)(a2 + 768);
  LOBYTE(v169) = *(_BYTE *)(a2 + 776);
  LOBYTE(v171) = *(_BYTE *)(v124 + 73);
  sub_1A4496C38(v86, v87, v88, v89, v90, v91, v92, v93, v169, v171);
  v94 = *(_QWORD *)(a1 + 712);
  v95 = *(_QWORD *)(a1 + 720);
  v96 = *(_QWORD *)(a1 + 728);
  v97 = *(_QWORD *)(a1 + 736);
  v98 = *(_QWORD *)(a1 + 744);
  v99 = *(_QWORD *)(a1 + 752);
  v100 = *(_QWORD *)(a1 + 760);
  v101 = *(_QWORD *)(a1 + 768);
  v102 = *(_BYTE *)(a1 + 776);
  v103 = *(_BYTE *)(v125 + 73);
  *(_QWORD *)(a1 + 712) = v86;
  *(_QWORD *)(a1 + 720) = v87;
  *(_QWORD *)(a1 + 728) = v88;
  *(_QWORD *)(a1 + 736) = v89;
  *(_QWORD *)(a1 + 744) = v90;
  *(_QWORD *)(a1 + 752) = v91;
  *(_QWORD *)(a1 + 760) = v92;
  *(_QWORD *)(a1 + 768) = v93;
  *(_BYTE *)(a1 + 776) = v169;
  *(_BYTE *)(v125 + 73) = v171;
  sub_1A44973CC(v94, v95, v96, v97, v98, v99, v100, v101, v102, v103);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  return a1;
}

void *__swift_memcpy792_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x318uLL);
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;

  v4 = *(_QWORD *)(a2 + 160);
  v5 = a1 + 704;
  v6 = *(_BYTE *)(a2 + 168);
  v7 = a2 + 704;
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_OWORD *)(a1 + 64);
  v17 = *(_OWORD *)(a1 + 80);
  v18 = *(_OWORD *)(a1 + 96);
  v19 = *(_OWORD *)(a1 + 112);
  v20 = *(_OWORD *)(a1 + 128);
  v21 = *(_OWORD *)(a1 + 144);
  v22 = *(_QWORD *)(a1 + 160);
  v23 = *(_BYTE *)(a1 + 168);
  v24 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v24;
  v25 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v25;
  v26 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v26;
  v27 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v27;
  v28 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v28;
  *(_QWORD *)(a1 + 160) = v4;
  *(_BYTE *)(a1 + 168) = v6;
  sub_1A4496FEC(v8, v9, v10, v11, v12, v13, v14, v15, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21,
    *((uint64_t *)&v21 + 1),
    v22,
    v23);
  v29 = *(_QWORD *)(a2 + 224);
  v30 = *(_BYTE *)(a2 + 232);
  v31 = *(_QWORD *)(a1 + 176);
  v32 = *(_QWORD *)(a1 + 184);
  v33 = *(_QWORD *)(a1 + 192);
  v34 = *(_QWORD *)(a1 + 200);
  v35 = *(_QWORD *)(a1 + 208);
  v36 = *(_QWORD *)(a1 + 216);
  v37 = *(_QWORD *)(a1 + 224);
  v38 = *(_BYTE *)(a1 + 232);
  v39 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v39;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 224) = v29;
  *(_BYTE *)(a1 + 232) = v30;
  sub_1A44970E0(v31, v32, v33, v34, v35, v36, v37, v38);
  v40 = *(_QWORD *)(a1 + 240);
  v41 = *(_QWORD *)(a1 + 248);
  v42 = *(_QWORD *)(a1 + 256);
  v43 = *(_QWORD *)(a1 + 264);
  v44 = *(_QWORD *)(a1 + 272);
  v45 = *(_QWORD *)(a1 + 280);
  v46 = *(_QWORD *)(a1 + 288);
  v47 = *(_QWORD *)(a1 + 296);
  v48 = *(_OWORD *)(a1 + 304);
  v49 = *(_OWORD *)(a1 + 320);
  v50 = *(_OWORD *)(a1 + 336);
  v51 = *(_OWORD *)(a1 + 352);
  v52 = *(_OWORD *)(a1 + 368);
  v53 = *(_OWORD *)(a1 + 384);
  v54 = *(_OWORD *)(a1 + 400);
  v55 = *(_OWORD *)(a1 + 416);
  v56 = *(_OWORD *)(a1 + 432);
  v57 = *(_OWORD *)(a1 + 448);
  v58 = *(_OWORD *)(a1 + 464);
  v59 = *(_OWORD *)(a1 + 480);
  v60 = *(_OWORD *)(a1 + 496);
  v61 = *(_OWORD *)(a1 + 512);
  v62 = *(_OWORD *)(a1 + 528);
  v63 = *(_OWORD *)(a1 + 544);
  v64 = *(_OWORD *)(a1 + 560);
  v65 = *(_OWORD *)(a1 + 576);
  v66 = *(_OWORD *)(a1 + 592);
  v67 = *(_OWORD *)(a1 + 608);
  v68 = *(_OWORD *)(a1 + 624);
  v69 = *(_OWORD *)(a1 + 640);
  v70 = *(_OWORD *)(a1 + 656);
  v71 = *(_OWORD *)(a1 + 672);
  v72 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v72;
  v73 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v73;
  v74 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v74;
  v75 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v75;
  v76 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v76;
  v77 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v77;
  v78 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v78;
  v79 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v79;
  v80 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v80;
  v81 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v81;
  v82 = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 576) = v82;
  v83 = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 608) = v83;
  v84 = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = v84;
  v85 = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 656) = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 672) = v85;
  v86 = *(_QWORD *)(a1 + 688);
  v87 = *(_QWORD *)(a1 + 696);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  v88 = *(_BYTE *)(a1 + 704);
  *(_BYTE *)(a1 + 704) = *(_BYTE *)(a2 + 704);
  sub_1A449711C(v40, v41, v42, v43, v44, v45, v46, v47, v48, *((uint64_t *)&v48 + 1), v49, *((uint64_t *)&v49 + 1), v50, *((uint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    *((uint64_t *)&v56 + 1),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59,
    *((uint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    *((uint64_t *)&v61 + 1),
    v62,
    *((uint64_t *)&v62 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v64,
    *((uint64_t *)&v64 + 1),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67,
    *((uint64_t *)&v67 + 1),
    v68,
    *((uint64_t *)&v68 + 1),
    v69,
    *((uint64_t *)&v69 + 1),
    v70,
    *((uint64_t *)&v70 + 1),
    v71,
    *((uint64_t *)&v71 + 1),
    v86,
    v87,
    v88);
  v89 = *(_BYTE *)(a2 + 776);
  v90 = *(_BYTE *)(v7 + 73);
  v91 = *(_QWORD *)(v5 + 8);
  v92 = *(_QWORD *)(a1 + 720);
  v93 = *(_QWORD *)(v5 + 24);
  v94 = *(_QWORD *)(a1 + 736);
  v95 = *(_QWORD *)(v5 + 40);
  v96 = *(_QWORD *)(a1 + 752);
  v97 = *(_QWORD *)(v5 + 56);
  v98 = *(_QWORD *)(a1 + 768);
  v99 = *(_BYTE *)(a1 + 776);
  v100 = *(_BYTE *)(v5 + 73);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)(v7 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)(v7 + 24);
  *(_OWORD *)(v5 + 40) = *(_OWORD *)(v7 + 40);
  *(_OWORD *)(v5 + 56) = *(_OWORD *)(v7 + 56);
  *(_BYTE *)(a1 + 776) = v89;
  *(_BYTE *)(v5 + 73) = v90;
  sub_1A44973CC(v91, v92, v93, v94, v95, v96, v97, v98, v99, v100);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  return a1;
}

