uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 792))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 168);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 792) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 792) = 0;
    if (a2)
      *(_BYTE *)(result + 168) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result;
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributesTrainer.Result.Embedding(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.Embedding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.Embedding()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.Embedding;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.AnchoredBubble(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.AnchoredBubble(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.AnchoredBubble()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result.CoreBehavior()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v30 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v30;
  v29 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v29;
  v28 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v28;
  v31 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v31;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  v5 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v5;
  v6 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v6;
  v7 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v7;
  v8 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v8;
  v9 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v9;
  v10 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v10;
  v11 = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  v12 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v12;
  v13 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v13;
  v14 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  v15 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v15;
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  v17 = *(_QWORD *)(a2 + 272);
  v16 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 264) = v11;
  *(_QWORD *)(a1 + 272) = v17;
  v19 = *(_QWORD *)(a2 + 288);
  v18 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 280) = v16;
  *(_QWORD *)(a1 + 288) = v19;
  v21 = *(_QWORD *)(a2 + 304);
  v20 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 296) = v18;
  *(_QWORD *)(a1 + 304) = v21;
  v22 = *(_QWORD *)(a2 + 320);
  v32 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 312) = v20;
  *(_QWORD *)(a1 + 320) = v22;
  *(_QWORD *)(a1 + 328) = v32;
  v23 = *(_QWORD *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = v23;
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  v24 = *(_OWORD *)(a2 + 416);
  v25 = *(_OWORD *)(a2 + 432);
  v26 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v26;
  *(_OWORD *)(a1 + 416) = v24;
  *(_OWORD *)(a1 + 432) = v25;
  *(_QWORD *)(a1 + 456) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributesTrainer.Result.CoreBehavior(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[26] = a2[26];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[27] = a2[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[28] = a2[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[29] = a2[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[30] = a2[30];
  a1[31] = a2[31];
  a1[32] = a2[32];
  a1[33] = a2[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[34] = a2[34];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[35] = a2[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[36] = a2[36];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[37] = a2[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[38] = a2[38];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[39] = a2[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[40] = a2[40];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[41] = a2[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[42] = a2[42];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[43] = a2[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[44] = a2[44];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[45] = a2[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[46] = a2[46];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[47] = a2[47];
  a1[48] = a2[48];
  a1[49] = a2[49];
  a1[50] = a2[50];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[51] = a2[51];
  a1[52] = a2[52];
  a1[53] = a2[53];
  a1[54] = a2[54];
  a1[55] = a2[55];
  a1[56] = a2[56];
  a1[57] = a2[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy464_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D0uLL);
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  v4 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v4;
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 464))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.CoreBehavior(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 456) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 464) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 464) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.CoreBehavior()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior;
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned;
}

uint64_t destroy for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1)
{
  return sub_1A4497428(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A4496C94(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1A4496C94(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1A4497428(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1A4497428(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.IntentionalWord(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A45C5074(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_1A45C507C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 64) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWord()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord;
}

__n128 __swift_memcpy169_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(__int128 *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[169])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 169) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.CoreBehavior(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[64])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.CoreBehavior(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.Embedding(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.Embedding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.Embedding()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A45C5390 + 4 * byte_1A46A68C6[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A45C53C4 + 4 * byte_1A46A68C1[v4]))();
}

uint64_t sub_1A45C53C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C53CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C53D4);
  return result;
}

uint64_t sub_1A45C53E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C53E8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A45C53EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C53F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble.CodingKeys;
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV14AnchoredBubbleVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV14AnchoredBubbleVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Parameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1A45C5514 + 4 * byte_1A46A68D0[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1A45C5548 + 4 * byte_1A46A68CB[v4]))();
}

uint64_t sub_1A45C5548(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5550(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C5558);
  return result;
}

uint64_t sub_1A45C5564(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C556CLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1A45C5570(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5578(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Parameters.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType;
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV9EmbeddingV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45C5608 + 4 * byte_1A46A68DA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A45C563C + 4 * byte_1A46A68D5[v4]))();
}

uint64_t sub_1A45C563C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5644(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C564CLL);
  return result;
}

uint64_t sub_1A45C5658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C5660);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45C5664(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C566C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys;
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC10ParametersV12CoreBehaviorV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A45C56D4 + 4 * byte_1A46A68E4[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A45C5708 + 4 * byte_1A46A68DF[v4]))();
}

uint64_t sub_1A45C5708(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5710(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C5718);
  return result;
}

uint64_t sub_1A45C5724(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C572CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A45C5730(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5738(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A45C57B0 + 4 * byte_1A46A68EE[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A45C57E4 + 4 * byte_1A46A68E9[v4]))();
}

uint64_t sub_1A45C57E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C57EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C57F4);
  return result;
}

uint64_t sub_1A45C5800(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C5808);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A45C580C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5814(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A45C587C + 4 * byte_1A46A68F8[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A45C58B0 + 4 * byte_1A46A68F3[v4]))();
}

uint64_t sub_1A45C58B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C58B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C58C0);
  return result;
}

uint64_t sub_1A45C58CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C58D4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A45C58D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C58E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys;
}

uint64_t _s19ReminderKitInternal29REMSuggestedAttributesTrainerC6ResultV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A45C5948 + 4 * byte_1A46A6902[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A45C597C + 4 * byte_1A46A68FD[v4]))();
}

uint64_t sub_1A45C597C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C5984(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45C598CLL);
  return result;
}

uint64_t sub_1A45C5998(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45C59A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A45C59A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45C59AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys;
}

unint64_t sub_1A45C59CC()
{
  unint64_t result;

  result = qword_1EE722368;
  if (!qword_1EE722368)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7BE8, &type metadata for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722368);
  }
  return result;
}

unint64_t sub_1A45C5A14()
{
  unint64_t result;

  result = qword_1EE722370;
  if (!qword_1EE722370)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7CA0, &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722370);
  }
  return result;
}

unint64_t sub_1A45C5A5C()
{
  unint64_t result;

  result = qword_1EE722378;
  if (!qword_1EE722378)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7D58, &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722378);
  }
  return result;
}

unint64_t sub_1A45C5AA4()
{
  unint64_t result;

  result = qword_1EE722380;
  if (!qword_1EE722380)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7E10, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722380);
  }
  return result;
}

unint64_t sub_1A45C5AEC()
{
  unint64_t result;

  result = qword_1EE722388;
  if (!qword_1EE722388)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7EC8, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722388);
  }
  return result;
}

unint64_t sub_1A45C5B34()
{
  unint64_t result;

  result = qword_1EE722390;
  if (!qword_1EE722390)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7F80, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722390);
  }
  return result;
}

unint64_t sub_1A45C5B7C()
{
  unint64_t result;

  result = qword_1EE722398;
  if (!qword_1EE722398)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8020, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE722398);
  }
  return result;
}

unint64_t sub_1A45C5BC4()
{
  unint64_t result;

  result = qword_1EE7223A0;
  if (!qword_1EE7223A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A80D8, &type metadata for REMSuggestedAttributesTrainer.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223A0);
  }
  return result;
}

unint64_t sub_1A45C5C0C()
{
  unint64_t result;

  result = qword_1EE7223A8;
  if (!qword_1EE7223A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8048, &type metadata for REMSuggestedAttributesTrainer.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223A8);
  }
  return result;
}

unint64_t sub_1A45C5C54()
{
  unint64_t result;

  result = qword_1EE7223B0;
  if (!qword_1EE7223B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8070, &type metadata for REMSuggestedAttributesTrainer.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223B0);
  }
  return result;
}

unint64_t sub_1A45C5C9C()
{
  unint64_t result;

  result = qword_1EE7223B8;
  if (!qword_1EE7223B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7EF0, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223B8);
  }
  return result;
}

unint64_t sub_1A45C5CE4()
{
  unint64_t result;

  result = qword_1EE7223C0;
  if (!qword_1EE7223C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7F18, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223C0);
  }
  return result;
}

unint64_t sub_1A45C5D2C()
{
  unint64_t result;

  result = qword_1EE7223C8;
  if (!qword_1EE7223C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7E38, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223C8);
  }
  return result;
}

unint64_t sub_1A45C5D74()
{
  unint64_t result;

  result = qword_1EE7223D0;
  if (!qword_1EE7223D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7E60, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordTuned.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223D0);
  }
  return result;
}

unint64_t sub_1A45C5DBC()
{
  unint64_t result;

  result = qword_1EE7223D8;
  if (!qword_1EE7223D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7D80, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223D8);
  }
  return result;
}

unint64_t sub_1A45C5E04()
{
  unint64_t result;

  result = qword_1EE7223E0;
  if (!qword_1EE7223E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7DA8, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWordPrescribed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223E0);
  }
  return result;
}

unint64_t sub_1A45C5E4C()
{
  unint64_t result;

  result = qword_1EE7223E8;
  if (!qword_1EE7223E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7CC8, &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223E8);
  }
  return result;
}

unint64_t sub_1A45C5E94()
{
  unint64_t result;

  result = qword_1EE7223F0;
  if (!qword_1EE7223F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7CF0, &type metadata for REMSuggestedAttributesTrainer.Result.CoreBehavior.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223F0);
  }
  return result;
}

unint64_t sub_1A45C5EDC()
{
  unint64_t result;

  result = qword_1EE7223F8;
  if (!qword_1EE7223F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7C10, &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7223F8);
  }
  return result;
}

unint64_t sub_1A45C5F24()
{
  unint64_t result;

  result = qword_1EE722400;
  if (!qword_1EE722400)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7C38, &type metadata for REMSuggestedAttributesTrainer.Result.AnchoredBubble.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722400);
  }
  return result;
}

unint64_t sub_1A45C5F6C()
{
  unint64_t result;

  result = qword_1EE722408;
  if (!qword_1EE722408)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7B58, &type metadata for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722408);
  }
  return result;
}

unint64_t sub_1A45C5FB4()
{
  unint64_t result;

  result = qword_1EE722410;
  if (!qword_1EE722410)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7B80, &type metadata for REMSuggestedAttributesTrainer.Result.Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722410);
  }
  return result;
}

unint64_t sub_1A45C5FF8()
{
  unint64_t result;

  result = qword_1EE722418;
  if (!qword_1EE722418)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A7FA8, &type metadata for REMSuggestedAttributesTrainer.Result.IntentionalWord.ContentType);
    atomic_store(result, (unint64_t *)&qword_1EE722418);
  }
  return result;
}

uint64_t sub_1A45C604C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A462EBDC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A45CB480(v5);
  *a1 = v2;
  return result;
}

uint64_t static REMHashtagLabelDataView.fetchHashtagIDs(with:store:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  uint64_t v9[2];

  v3 = v2;
  type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation();
  v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v6, sel_init);
  sub_1A4482BE4((uint64_t)v7, a1, v9);
  swift_bridgeObjectRelease();

  if (!v3)
  {
    a2 = v9[0];

  }
  return a2;
}

uint64_t sub_1A45C614C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE722428);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE722428);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMHashtagLabelDataView.HashtagSuggestions.reminderHashtagSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMHashtagLabelDataView.HashtagSuggestions.spotlightHashtagSuggestions.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMHashtagLabelDataView::HashtagSuggestions __swiftcall REMHashtagLabelDataView.HashtagSuggestions.init(reminderHashtagSuggestions:spotlightHashtagSuggestions:)(Swift::OpaquePointer reminderHashtagSuggestions, Swift::OpaquePointer spotlightHashtagSuggestions)
{
  Swift::OpaquePointer *v2;
  ReminderKitInternal::REMHashtagLabelDataView::HashtagSuggestions result;

  v2->_rawValue = reminderHashtagSuggestions._rawValue;
  v2[1]._rawValue = spotlightHashtagSuggestions._rawValue;
  result.spotlightHashtagSuggestions = spotlightHashtagSuggestions;
  result.reminderHashtagSuggestions = reminderHashtagSuggestions;
  return result;
}

uint64_t REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.hash(into:)()
{
  return sub_1A4691C98();
}

BOOL static REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A45C6238()
{
  sub_1A45C7A18();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C6260()
{
  sub_1A45C7A18();
  return sub_1A4691DC4();
}

uint64_t sub_1A45C6288()
{
  _BYTE *v0;

  if (*v0)
    return 0x65726F7473;
  else
    return 0x724F646568636163;
}

uint64_t sub_1A45C62CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45CBF74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45C62F0()
{
  sub_1A45C7990();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C6318()
{
  sub_1A45C7990();
  return sub_1A4691DC4();
}

uint64_t sub_1A45C6340()
{
  sub_1A45C79D4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C6368()
{
  sub_1A45C79D4();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722440);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722448);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722450);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C7990();
  sub_1A4691D40();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1A45C79D4();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1A45C7A18();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722470);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722478);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722480);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C7990();
  v11 = v33;
  sub_1A4691D28();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1A46917DC();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1A46914B8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1A45C79D4();
    sub_1A4691734();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1A45C7A18();
    v22 = v6;
    sub_1A4691734();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1A45C68C0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.init(from:)(a1, a2);
}

uint64_t sub_1A45C68D4(_QWORD *a1)
{
  return REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)(uint64_t a1, unsigned __int8 *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;
  uint64_t v9[2];

  v4 = *a2;
  if ((a3 & 1) != 0)
  {
    type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    sub_1A44841AC((uint64_t)v5, v4, v9);
  }
  else
  {
    type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation();
    v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    sub_1A4484204((uint64_t)v5, v4, v9);
  }

  if (v3)
    return v4;
  v4 = v9[0];
  v6 = (void *)v9[1];
  if (!((unint64_t)v9[0] >> 62))
  {
    swift_bridgeObjectRetain();
    sub_1A4691A64();
    sub_1A444AA40(0, &qword_1ED23E760);
    swift_bridgeObjectRelease();

    return v4;
  }
  sub_1A444AA40(0, &qword_1ED23E760);
  swift_bridgeObjectRetain();
  v8 = sub_1A4691644();
  swift_bridgeObjectRelease_n();

  return v8;
}

ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::Parameters __swiftcall REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.init(sortingStyle:)(ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::Parameters sortingStyle)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)sortingStyle.sortingStyle.value;
  return sortingStyle;
}

uint64_t static REMHashtagLabelDataView.fetchSmartListHashtagLabels(store:fetchStyle:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v4;
  id v5;
  uint64_t v7[3];

  v4 = *a2;
  type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4484D94((uint64_t)v5, v4, v7);

  if (!v2)
  {
    a1 = v7[0];

  }
  return a1;
}

uint64_t sub_1A45C6AC4()
{
  sub_1A45C7B44();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C6AEC()
{
  sub_1A45C7B44();
  return sub_1A4691DC4();
}

uint64_t sub_1A45C6B14()
{
  _BYTE *v0;

  if (*v0)
    return 1701670771;
  else
    return 7105633;
}

uint64_t sub_1A45C6B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45CC080(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45C6B64()
{
  sub_1A45C7ABC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C6B8C()
{
  sub_1A45C7ABC();
  return sub_1A4691DC4();
}

uint64_t sub_1A45C6BB4()
{
  sub_1A45C7B00();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C6BDC()
{
  sub_1A45C7B00();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.Operation.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722488);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722490);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722498);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C7ABC();
  sub_1A4691D40();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1A45C7B00();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1A45C7B44();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t REMHashtagLabelDataView.Operation.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7224B8);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7224C0);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7224C8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C7ABC();
  v11 = v33;
  sub_1A4691D28();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1A46917DC();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1A46914B8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMHashtagLabelDataView.Operation;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1A45C7B00();
    sub_1A4691734();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1A45C7B44();
    v22 = v6;
    sub_1A4691734();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1A45C7134@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMHashtagLabelDataView.Operation.init(from:)(a1, a2);
}

uint64_t sub_1A45C7148(_QWORD *a1)
{
  return REMHashtagLabelDataView.Operation.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.fetchReminderIDs(include:exclude:operation:store:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v9;
  id v10;
  id v11;
  uint64_t v13[2];

  v5 = v4;
  v9 = *a3;
  type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = objc_msgSend(v10, sel_init);
  sub_1A4485864((uint64_t)v11, a1, a2, v9, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (!v5)
  {
    a4 = v13[0];

  }
  return a4;
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.init(include:exclude:operation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v4;
  return result;
}

uint64_t static REMHashtagLabelDataView.fetchAllHashtagLabelSuggestionsPublisher(store:combineType:)(void *a1, char *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  char v9;

  v9 = *a2;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4690984();
  v3 = objc_allocWithZone(MEMORY[0x1E0CA6AE0]);
  v4 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1A4690B94();
  v6 = objc_msgSend(v3, sel_initWithQueryString_bundleIDs_, v4, v5);

  v7 = sub_1A45C7320(a1, &v9, v6);
  return v7;
}

uint64_t sub_1A45C7320(void *a1, char *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4A0);
  v50 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  MEMORY[0x1E0C80A78](v7);
  v49 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E6B8);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E710);
  v36 = *(_QWORD *)(v11 - 8);
  v37 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E848);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E6C8);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E498);
  v45 = *(_QWORD *)(v18 - 8);
  v46 = v18;
  MEMORY[0x1E0C80A78](v18);
  v43 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a2;
  v48 = v3;
  v47 = sub_1A45C912C(a1);
  *(_QWORD *)(swift_allocObject() + 16) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E728);
  swift_allocObject();
  v21 = a3;
  v53 = sub_1A46904B0();
  sub_1A443AD20(&qword_1ED23E4A8, &qword_1ED23E728, MEMORY[0x1E0C96108]);
  v22 = sub_1A46904C8();
  swift_release();
  if ((v20 & 1) != 0)
  {
    v52 = v47;
    v53 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E708);
    sub_1A443AD20(&qword_1ED23E700, &qword_1ED23E708, MEMORY[0x1E0C95D90]);
    sub_1A4690504();
    sub_1A443AD20(&qword_1EE722830, &qword_1ED23E6B8, MEMORY[0x1E0C95970]);
    v23 = v40;
    v24 = sub_1A46904C8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v23);
  }
  else
  {
    v53 = MEMORY[0x1E0DEE9D8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A46904A4();
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
    v25 = v37;
    sub_1A4690498();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v25);
    v53 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E708);
    sub_1A443AD20(&qword_1ED23E840, &qword_1ED23E848, MEMORY[0x1E0C964C8]);
    sub_1A443AD20(&qword_1ED23E700, &qword_1ED23E708, MEMORY[0x1E0C95D90]);
    v26 = v41;
    sub_1A4690528();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v26);
    v53 = v47;
    sub_1A443AD20(&qword_1ED23E6C0, &qword_1ED23E6C8, MEMORY[0x1E0C95A60]);
    v28 = v43;
    v27 = v44;
    sub_1A46904E0();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v27);
    sub_1A443AD20(qword_1ED23E628, &qword_1ED23E498, MEMORY[0x1E0C95698]);
    v29 = v46;
    v24 = sub_1A46904C8();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v29);
  }
  v53 = v24;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v48;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_1A45CC494;
  *(_QWORD *)(v31 + 24) = v30;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E6F8);
  sub_1A443AD20(&qword_1ED23E6F0, &qword_1ED23E6F8, MEMORY[0x1E0C95D90]);
  v32 = v49;
  sub_1A46904F8();
  swift_release();
  swift_release();
  sub_1A443AD20(&qword_1ED23E6B0, &qword_1ED23E4A0, MEMORY[0x1E0C95950]);
  v33 = v51;
  v34 = sub_1A46904C8();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v33);
  return v34;
}

uint64_t static REMHashtagLabelDataView.fetchHashtagLabelsReferencedByCustomSmartListFilters(store:fetchStyle:)(uint64_t a1, char *a2)
{
  uint64_t v2;
  char v4;
  id v5;
  uint64_t v7[3];

  v4 = *a2;
  type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation();
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4484D94((uint64_t)v5, v4, v7);

  if (!v2)
  {
    a1 = v7[0];

  }
  return a1;
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.init(hashtagLabelNamesToSearch:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation()
{
  return objc_opt_self();
}

unint64_t sub_1A45C7990()
{
  unint64_t result;

  result = qword_1EE722458;
  if (!qword_1EE722458)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9500, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722458);
  }
  return result;
}

unint64_t sub_1A45C79D4()
{
  unint64_t result;

  result = qword_1EE722460;
  if (!qword_1EE722460)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A94B0, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722460);
  }
  return result;
}

unint64_t sub_1A45C7A18()
{
  unint64_t result;

  result = qword_1EE722468;
  if (!qword_1EE722468)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9460, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722468);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation()
{
  return objc_opt_self();
}

unint64_t sub_1A45C7ABC()
{
  unint64_t result;

  result = qword_1EE7224A0;
  if (!qword_1EE7224A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9410, &type metadata for REMHashtagLabelDataView.Operation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7224A0);
  }
  return result;
}

unint64_t sub_1A45C7B00()
{
  unint64_t result;

  result = qword_1EE7224A8;
  if (!qword_1EE7224A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A93C0, &type metadata for REMHashtagLabelDataView.Operation.SomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7224A8);
  }
  return result;
}

unint64_t sub_1A45C7B44()
{
  unint64_t result;

  result = qword_1EE7224B0;
  if (!qword_1EE7224B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9370, &type metadata for REMHashtagLabelDataView.Operation.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7224B0);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation()
{
  return objc_opt_self();
}

uint64_t static REMHashtagLabelDataView.AllHashtagLabelsInvocation.supportsSecureCoding.getter()
{
  return 1;
}

ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::SortingStyle_optional __swiftcall REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ReminderKitInternal::REMHashtagLabelDataView::AllHashtagLabelsInvocation::SortingStyle_optional)rawValue;
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1A45C7BDC()
{
  sub_1A45CC414();
  return sub_1A4690B7C();
}

uint64_t sub_1A45C7C38()
{
  sub_1A45CC414();
  return sub_1A4690B40();
}

void REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.sortingStyle.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1A45C7C90()
{
  return 0x53676E6974726F73;
}

uint64_t sub_1A45C7CB4()
{
  sub_1A45C7D30();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C7CDC()
{
  sub_1A45C7D30();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  return sub_1A45C7F9C(a1, &qword_1ED23E830, (void (*)(void))sub_1A45C7D30);
}

unint64_t sub_1A45C7D30()
{
  unint64_t result;

  result = qword_1ED240240;
  if (!qword_1ED240240)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9320, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240240);
  }
  return result;
}

unint64_t sub_1A45C7D74()
{
  unint64_t result;

  result = qword_1ED23E588[0];
  if (!qword_1ED23E588[0])
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle);
    atomic_store(result, qword_1ED23E588);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A45C810C(a1, &qword_1ED23EAE8, (void (*)(void))sub_1A45C7D30, a2);
}

unint64_t sub_1A45C7DE4()
{
  unint64_t result;

  result = qword_1ED23E910;
  if (!qword_1ED23E910)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED23E910);
  }
  return result;
}

uint64_t sub_1A45C7E28@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A45C7E3C(_QWORD *a1)
{
  return REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t sub_1A45C7E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x53676E6974726F73 && a2 == 0xEC000000656C7974)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A45C7F20()
{
  sub_1A45C809C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C7F48()
{
  sub_1A45C809C();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  return sub_1A45C7F9C(a1, &qword_1EE7224D0, (void (*)(void))sub_1A45C809C);
}

uint64_t sub_1A45C7F9C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v11)(void);
  char v12;

  v11 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11();
  sub_1A4691D40();
  v12 = v9;
  sub_1A45C7D74();
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1A45C809C()
{
  unint64_t result;

  result = qword_1EE7224D8;
  if (!qword_1EE7224D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A92D0, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7224D8);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1A45C810C(a1, &qword_1EE7224E0, (void (*)(void))sub_1A45C809C, a2);
}

uint64_t sub_1A45C810C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _BYTE *v10;
  _BYTE *v12;
  uint64_t v13;
  char v14;

  v12 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A4691D28();
  if (!v4)
  {
    v10 = v12;
    sub_1A45C7DE4();
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v7);
    *v10 = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45C8238@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A45C824C(_QWORD *a1)
{
  return REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.include.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.exclude.getter()
{
  return swift_bridgeObjectRetain();
}

void REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.operation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_1A45C82A0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6564756C637865;
  if (*v0 != 1)
    v1 = 0x6F6974617265706FLL;
  if (*v0)
    return v1;
  else
    return 0x6564756C636E69;
}

uint64_t sub_1A45C82F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45CC150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45C8318()
{
  sub_1A45C8524();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C8340()
{
  sub_1A45C8524();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7224E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v13 = v1[1];
  v12 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C8524();
  sub_1A4691D40();
  v15 = v8;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
  sub_1A45BFCA0(&qword_1ED243130, &qword_1ED243F40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1A4691890();
  if (!v2)
  {
    v9 = v12;
    v15 = v13;
    v14 = 1;
    sub_1A4691890();
    LOBYTE(v15) = v9;
    v14 = 2;
    sub_1A45C8568();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A45C8524()
{
  unint64_t result;

  result = qword_1EE7224F0;
  if (!qword_1EE7224F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9280, &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7224F0);
  }
  return result;
}

unint64_t sub_1A45C8568()
{
  unint64_t result;

  result = qword_1EE7224F8;
  if (!qword_1EE7224F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.Operation, &type metadata for REMHashtagLabelDataView.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE7224F8);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  _QWORD *v14;
  char v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722500);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C8524();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
  v15 = 0;
  sub_1A45BFCA0(&qword_1ED243198, &qword_1ED243F40, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  sub_1A46917C4();
  v9 = v16;
  v15 = 1;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v10 = v16;
  v15 = 2;
  sub_1A45C8814();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v16;
  v12 = v14;
  *v14 = v9;
  v12[1] = v10;
  *((_BYTE *)v12 + 16) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1A45C8814()
{
  unint64_t result;

  result = qword_1EE722508;
  if (!qword_1EE722508)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.Operation, &type metadata for REMHashtagLabelDataView.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE722508);
  }
  return result;
}

uint64_t sub_1A45C8858@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A45C886C(_QWORD *a1)
{
  return REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.isUpToDate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

ReminderKitInternal::REMHashtagLabelDataView::HashtagLabelsReferencedByCustomSmartListFiltersInvocation::Result __swiftcall REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.init(labels:isUpToDate:)(Swift::OpaquePointer labels, Swift::Bool isUpToDate)
{
  uint64_t v2;
  ReminderKitInternal::REMHashtagLabelDataView::HashtagLabelsReferencedByCustomSmartListFiltersInvocation::Result result;

  *(Swift::OpaquePointer *)v2 = labels;
  *(_BYTE *)(v2 + 8) = isUpToDate;
  result.labels = labels;
  result.isUpToDate = isUpToDate;
  return result;
}

uint64_t sub_1A45C88C0()
{
  _BYTE *v0;

  if (*v0)
    return 0x61446F5470557369;
  else
    return 0x736C6562616CLL;
}

uint64_t sub_1A45C88FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45CC29C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45C8920()
{
  sub_1A45C8AD4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C8948()
{
  sub_1A45C8AD4();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[3];
  char v11;
  char v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722510);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[2] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C8AD4();
  sub_1A4691D40();
  v13 = v8;
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A45BFCA0(&qword_1ED23EAB8, &qword_1ED242FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v11 = 1;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A45C8AD4()
{
  unint64_t result;

  result = qword_1EE722518;
  if (!qword_1EE722518)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9230, &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722518);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  char v10;
  _BYTE v12[16];
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722520);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C8AD4();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v12[15] = 0;
  sub_1A45BFCA0(&qword_1ED23E750, &qword_1ED242FF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v13;
  v12[14] = 1;
  swift_bridgeObjectRetain();
  v10 = sub_1A4691794();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45C8CD4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.init(from:)(a1, a2);
}

uint64_t sub_1A45C8CE8(_QWORD *a1)
{
  return REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.encode(to:)(a1);
}

uint64_t static REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.hashtagLabelNamesToSearch.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1A45C8D28()
{
  return 0xD000000000000019;
}

uint64_t sub_1A45C8D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45CC390(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1A45C8D6C()
{
  sub_1A45C8EE4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45C8D94()
{
  sub_1A45C8EE4();
  return sub_1A4691DC4();
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722528);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C8EE4();
  sub_1A4691D40();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
  sub_1A45BFCA0(&qword_1ED243130, &qword_1ED243F40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1A45C8EE4()
{
  unint64_t result;

  result = qword_1EE722530;
  if (!qword_1EE722530)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A91E0, &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722530);
  }
  return result;
}

uint64_t REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722538);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45C8EE4();
  sub_1A4691D28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
    sub_1A45BFCA0(&qword_1ED243198, &qword_1ED243F40, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45C9070@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A45C9084(_QWORD *a1)
{
  return REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.encode(to:)(a1);
}

id REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1A45C912C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;

  v28 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2430E0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E720);
  v23 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E6E8);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E6D8);
  v25 = *(_QWORD *)(v10 - 8);
  v26 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 1;
  sub_1A46904A4();
  if (qword_1ED243108 != -1)
    swift_once();
  v13 = (void *)qword_1ED242E48;
  v29 = qword_1ED242E48;
  v14 = sub_1A469105C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_1A444AA40(0, (unint64_t *)&qword_1ED243E38);
  sub_1A443AD20(&qword_1ED23E718, &qword_1ED23E720, MEMORY[0x1E0C960B0]);
  sub_1A45705D0();
  v15 = v13;
  sub_1A4690558();
  sub_1A445404C((uint64_t)v3, &qword_1ED2430E0);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  v16 = swift_allocObject();
  v17 = v28;
  *(_QWORD *)(v16 + 16) = v27;
  *(_QWORD *)(v16 + 24) = v17;
  v18 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A443AD20(&qword_1ED23E6E0, &qword_1ED23E6E8, MEMORY[0x1E0C95CB8]);
  sub_1A4690540();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
  sub_1A443AD20(&qword_1ED23E6D0, &qword_1ED23E6D8, MEMORY[0x1E0C95B48]);
  v19 = v26;
  v20 = sub_1A46904C8();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v19);
  return v20;
}

uint64_t sub_1A45C944C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  _QWORD *v51;
  BOOL v52;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t result;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;

  v6 = sub_1A468FBEC();
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  MEMORY[0x1E0C80A78](v6);
  v72 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E4C8);
  MEMORY[0x1E0C80A78](v8);
  v71 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  v65 = a1;
  v66 = a3;
  v67 = a2;
  if (v10)
  {
    v79 = MEMORY[0x1E0DEE9D8];
    sub_1A445AB34(0, v10, 0);
    v11 = (uint64_t *)(a1 + 40);
    do
    {
      v13 = *(v11 - 1);
      v12 = *v11;
      swift_bridgeObjectRetain();
      v14 = (uint64_t)v71;
      sub_1A469018C();
      v15 = sub_1A4690210();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
      v77 = (_QWORD *)v13;
      v78 = v12;
      sub_1A4466118();
      v75 = sub_1A4691260();
      v76 = v16;
      v17 = v72;
      sub_1A468FBC8();
      v18 = sub_1A4691218();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v17, v74);
      swift_bridgeObjectRelease();
      sub_1A445404C(v14, &qword_1ED23E4C8);
      v21 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1A445AB34(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v79;
      }
      v23 = *(_QWORD *)(v21 + 16);
      v22 = *(_QWORD *)(v21 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_1A445AB34(v22 > 1, v23 + 1, 1);
        v21 = v79;
      }
      v11 += 2;
      *(_QWORD *)(v21 + 16) = v23 + 1;
      v24 = (_QWORD *)(v21 + 32 * v23);
      v24[4] = v18;
      v24[5] = v20;
      v24[6] = v13;
      v24[7] = v12;
      --v10;
    }
    while (v10);
    a2 = v67;
  }
  else
  {
    v21 = MEMORY[0x1E0DEE9D8];
    if (!*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
      v25 = MEMORY[0x1E0DEE9E0];
      goto LABEL_11;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C9E0);
  v25 = sub_1A46916E0();
LABEL_11:
  v77 = (_QWORD *)v25;
  v26 = 0;
  sub_1A45CC4DC(v21, 1, (uint64_t *)&v77);
  swift_bridgeObjectRelease();
  v27 = (uint64_t)v77;
  v70 = *(_QWORD *)(a2 + 16);
  if (!v70)
  {
    v58 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_53;
  }
  v64 = 0;
  v69 = a2 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  v68 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (2)
  {
    v29 = (uint64_t *)(v69 + 16 * v28);
    v30 = *v29;
    v31 = v29[1];
    ++v28;
    swift_bridgeObjectRetain();
    v32 = (uint64_t)v71;
    sub_1A469018C();
    v33 = sub_1A4690210();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
    v34 = v30;
    v77 = (_QWORD *)v30;
    v78 = v31;
    sub_1A4466118();
    v75 = sub_1A4691260();
    v76 = v35;
    v36 = v72;
    sub_1A468FBC8();
    v37 = sub_1A4691218();
    v39 = v38;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v74);
    swift_bridgeObjectRelease();
    sub_1A445404C(v32, &qword_1ED23E4C8);
    v40 = 0;
    v41 = v27 + 64;
    v42 = 1 << *(_BYTE *)(v27 + 32);
    if (v42 < 64)
      v43 = ~(-1 << v42);
    else
      v43 = -1;
    v44 = v43 & *(_QWORD *)(v27 + 64);
    v45 = (unint64_t)(v42 + 63) >> 6;
    while (v44)
    {
      v46 = __clz(__rbit64(v44));
      v44 &= v44 - 1;
      v47 = v46 | (v40 << 6);
LABEL_39:
      v51 = (_QWORD *)(*(_QWORD *)(v27 + 48) + 16 * v47);
      v52 = *v51 == v37 && v51[1] == v39;
      if (v52 || (sub_1A4691A40() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    v48 = v40 + 1;
    if (__OFADD__(v40, 1))
    {
      __break(1u);
LABEL_57:
      __break(1u);
      swift_bridgeObjectRelease();
      goto LABEL_58;
    }
    if (v48 >= v45)
      goto LABEL_45;
    v49 = *(_QWORD *)(v41 + 8 * v48);
    ++v40;
    if (v49)
      goto LABEL_38;
    v40 = v48 + 1;
    if (v48 + 1 >= v45)
      goto LABEL_45;
    v49 = *(_QWORD *)(v41 + 8 * v40);
    if (v49)
      goto LABEL_38;
    v40 = v48 + 2;
    if (v48 + 2 >= v45)
      goto LABEL_45;
    v49 = *(_QWORD *)(v41 + 8 * v40);
    if (v49)
      goto LABEL_38;
    v40 = v48 + 3;
    if (v48 + 3 >= v45)
      goto LABEL_45;
    v49 = *(_QWORD *)(v41 + 8 * v40);
    if (v49)
      goto LABEL_38;
    v40 = v48 + 4;
    if (v48 + 4 >= v45)
      goto LABEL_45;
    v49 = *(_QWORD *)(v41 + 8 * v40);
    if (v49)
    {
LABEL_38:
      v44 = (v49 - 1) & v49;
      v47 = __clz(__rbit64(v49)) + (v40 << 6);
      goto LABEL_39;
    }
    v50 = v48 + 5;
    if (v50 < v45)
    {
      v49 = *(_QWORD *)(v41 + 8 * v50);
      if (!v49)
      {
        while (1)
        {
          v40 = v50 + 1;
          if (__OFADD__(v50, 1))
            goto LABEL_57;
          if (v40 >= v45)
            goto LABEL_45;
          v49 = *(_QWORD *)(v41 + 8 * v40);
          ++v50;
          if (v49)
            goto LABEL_38;
        }
      }
      v40 = v50;
      goto LABEL_38;
    }
LABEL_45:
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v77 = (_QWORD *)v27;
    sub_1A445F784(v34, v31, v37, v39, isUniquelyReferenced_nonNull_native);
    v27 = (uint64_t)v77;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v54 = v68;
    else
      v54 = sub_1A4438920(0, v68[2] + 1, 1, v68);
    v56 = v54[2];
    v55 = v54[3];
    if (v56 >= v55 >> 1)
      v54 = sub_1A4438920((_QWORD *)(v55 > 1), v56 + 1, 1, v54);
    v54[2] = v56 + 1;
    v68 = v54;
    v57 = &v54[2 * v56];
    v57[4] = v34;
    v57[5] = v31;
LABEL_14:
    swift_bridgeObjectRelease();
    if (v28 != v70)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
  v26 = v64;
  v58 = v68;
LABEL_53:
  v77 = v58;
  swift_bridgeObjectRetain_n();
  sub_1A45C604C((uint64_t *)&v77);
  if (v26)
  {
LABEL_58:
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v59 = (uint64_t)v77;
    v60 = v65;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v61 = v66;
    *v66 = v60;
    v61[1] = v59;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1A45C9A74(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20[2];
  _QWORD *v21;

  type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A4484204((uint64_t)v3, 1, v20);

  if (v1)
    return;
  v5 = v20[0];
  v4 = (void *)v20[1];
  if ((unint64_t)v20[0] >> 62)
  {
    sub_1A444AA40(0, &qword_1ED23E760);
    swift_bridgeObjectRetain();
    v6 = sub_1A4691644();
    swift_bridgeObjectRelease_n();

    v5 = v6;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_1A46916A4();
      goto LABEL_5;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1A4691A64();
    sub_1A444AA40(0, &qword_1ED23E760);
    swift_bridgeObjectRelease();

    v6 = v5;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_5:
  v21 = a1;
  if (v7)
  {
    if (v7 < 1)
    {
      __break(1u);
      return;
    }
    v8 = 0;
    v9 = v6 & 0xC000000000000001;
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v9)
        v11 = (id)MEMORY[0x1A859ECE0](v8, v5);
      else
        v11 = *(id *)(v5 + 8 * v8 + 32);
      v12 = v11;
      v13 = objc_msgSend(v11, sel_name);
      v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v16 = v15;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1A4438920(0, v10[2] + 1, 1, v10);
      v18 = v10[2];
      v17 = v10[3];
      if (v18 >= v17 >> 1)
        v10 = sub_1A4438920((_QWORD *)(v17 > 1), v18 + 1, 1, v10);
      ++v8;
      v10[2] = v18 + 1;
      v19 = &v10[2 * v18];
      v19[4] = v14;
      v19[5] = v16;
    }
    while (v7 != v8);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease_n();
  *v21 = v10;
}

void sub_1A45C9CE8(void (*a1)(id *), uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, void *);
  void *v20;
  void (*v21)(uint64_t, void *);
  uint64_t v22;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  if (a3)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = sub_1A45A9B40;
    *(_QWORD *)(v7 + 24) = v6;
    v21 = sub_1A45CC7B8;
    v22 = v7;
    v17 = (id)MEMORY[0x1E0C809B0];
    v18 = 1107296256;
    v19 = sub_1A45C9FE4;
    v20 = &block_descriptor_14;
    v8 = _Block_copy(&v17);
    swift_retain();
    v9 = a3;
    swift_release();
    objc_msgSend(v9, sel_setHashTagCompletionHandler_, v8);
    _Block_release(v8);
    objc_msgSend(v9, sel_start);

  }
  else
  {
    swift_retain();
    swift_release();
    if (qword_1EE71C1A8 != -1)
      swift_once();
    v10 = sub_1A4690318();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE722428);
    v11 = sub_1A469030C();
    v12 = sub_1A4690FF0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1A442D000, v11, v12, "CSHashtagQuery is nil", v13, 2u);
      MEMORY[0x1A85A0114](v13, -1, -1);
    }

    v14 = (void *)objc_opt_self();
    v15 = (void *)sub_1A469087C();
    v16 = objc_msgSend(v14, sel_internalErrorWithDebugDescription_, v15);

    v17 = v16;
    LOBYTE(v18) = 1;
    a1(&v17);

  }
}

void sub_1A45C9F24(uint64_t a1, id a2, void (*a3)(id, uint64_t))
{
  id v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  if (a2)
  {
    v5 = a2;
    a3(a2, 1);

  }
  else
  {
    if (a1)
    {
      v6 = swift_bridgeObjectRetain();
      v8 = sub_1A4459BD0(v6);
      sub_1A45C604C((uint64_t *)&v8);
      swift_bridgeObjectRelease();
      v7 = v8;
    }
    else
    {
      v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    a3(v7, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A45C9FE4(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1A4690D74();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t REMHashtagLabelDataView.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMHashtagLabelDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1A45CA088()
{
  unint64_t result;

  result = qword_1EE722540;
  if (!qword_1EE722540)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.CombineType, &type metadata for REMHashtagLabelDataView.CombineType);
    atomic_store(result, (unint64_t *)&qword_1EE722540);
  }
  return result;
}

unint64_t sub_1A45CA0D0()
{
  unint64_t result;

  result = qword_1EE722548;
  if (!qword_1EE722548)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle);
    atomic_store(result, (unint64_t *)&qword_1EE722548);
  }
  return result;
}

unint64_t sub_1A45CA118()
{
  unint64_t result;

  result = qword_1EE722550;
  if (!qword_1EE722550)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.Operation, &type metadata for REMHashtagLabelDataView.Operation);
    atomic_store(result, (unint64_t *)&qword_1EE722550);
  }
  return result;
}

unint64_t sub_1A45CA160()
{
  unint64_t result;

  result = qword_1EE722558;
  if (!qword_1EE722558)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE722558);
  }
  return result;
}

unint64_t sub_1A45CA1A8()
{
  unint64_t result;

  result = qword_1EE722560;
  if (!qword_1EE722560)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE722560);
  }
  return result;
}

unint64_t sub_1A45CA1F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2429F8;
  if (!qword_1ED2429F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243C90);
    v2 = sub_1A4436344(&qword_1ED242908, (uint64_t (*)(uint64_t))type metadata accessor for REMHashtagLabel_Codable, (uint64_t)&protocol conformance descriptor for REMHashtagLabel_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2429F8);
  }
  return result;
}

unint64_t sub_1A45CA278()
{
  unint64_t result;

  result = qword_1EE7225A8;
  if (!qword_1EE7225A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE7225A8);
  }
  return result;
}

unint64_t sub_1A45CA2C8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE7225B0;
  if (!qword_1EE7225B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE71D418);
    v2 = sub_1A4436344(&qword_1EE7225B8, (uint64_t (*)(uint64_t))type metadata accessor for REMHashtagLabelDetailed_Codable, (uint64_t)&protocol conformance descriptor for REMHashtagLabelDetailed_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE7225B0);
  }
  return result;
}

unint64_t sub_1A45CA348()
{
  unint64_t result;

  result = qword_1EE722600;
  if (!qword_1EE722600)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters, &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE722600);
  }
  return result;
}

unint64_t sub_1A45CA394()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2440C8;
  if (!qword_1ED2440C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2440C0);
    v2 = sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB3D8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2440C8);
  }
  return result;
}

unint64_t sub_1A45CA414()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED2439E0;
  if (!qword_1ED2439E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2440C0);
    v2 = sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEB3B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2439E0);
  }
  return result;
}

unint64_t sub_1A45CA494()
{
  unint64_t result;

  result = qword_1EE722648;
  if (!qword_1EE722648)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle);
    atomic_store(result, (unint64_t *)&qword_1EE722648);
  }
  return result;
}

unint64_t sub_1A45CA4E4()
{
  unint64_t result;

  result = qword_1EE722650;
  if (!qword_1EE722650)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result, &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result);
    atomic_store(result, (unint64_t *)&qword_1EE722650);
  }
  return result;
}

unint64_t sub_1A45CA52C()
{
  unint64_t result;

  result = qword_1EE722698;
  if (!qword_1EE722698)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters, &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE722698);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabelDataView()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMHashtagLabelDataView()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.CombineType()
{
  return &type metadata for REMHashtagLabelDataView.CombineType;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagSuggestions()
{
  return &type metadata for REMHashtagLabelDataView.HashtagSuggestions;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation()
{
  return &type metadata for REMHashtagLabelDataView.Operation;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters;
}

uint64_t _s19ReminderKitInternal23REMHashtagLabelDataViewC26AllHashtagLabelsInvocationC10ParametersVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  if (*a1 <= 2u)
    v6 = 2;
  else
    v6 = *a1;
  v7 = v6 - 3;
  if (*a1 < 2u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters;
}

uint64_t sub_1A45CA6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters;
}

uint64_t initializeBufferWithCopyOfBuffer for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters()
{
  return &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys;
}

uint64_t _s19ReminderKitInternal23REMHashtagLabelDataViewC26AllHashtagLabelsInvocationC10ParametersVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A45CAA10 + 4 * byte_1A46A83F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A45CAA44 + 4 * byte_1A46A83F0[v4]))();
}

uint64_t sub_1A45CAA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45CAA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45CAA54);
  return result;
}

uint64_t sub_1A45CAA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45CAA68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A45CAA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45CAA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys;
}

uint64_t _s19ReminderKitInternal23REMHashtagLabelDataViewC41HashtagIDsWithHashtagLabelNamesInvocationC10ParametersV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A45CAAE0 + 4 * byte_1A46A83FA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A45CAB00 + 4 * byte_1A46A83FF[v4]))();
}

_BYTE *sub_1A45CAAE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A45CAB00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A45CAB08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A45CAB10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A45CAB18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A45CAB20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.Operation.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation.AllCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.Operation.AllCodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.Operation.SomeCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.Operation.SomeCodingKeys;
}

uint64_t _s19ReminderKitInternal23REMHashtagLabelDataViewC11CombineTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45CABB8 + 4 * byte_1A46A8409[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A45CABEC + 4 * byte_1A46A8404[v4]))();
}

uint64_t sub_1A45CABEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45CABF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45CABFCLL);
  return result;
}

uint64_t sub_1A45CAC08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45CAC10);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45CAC14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45CAC1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys()
{
  return &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys;
}

unint64_t sub_1A45CAC5C()
{
  unint64_t result;

  result = qword_1EE722758;
  if (!qword_1EE722758)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8CC8, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722758);
  }
  return result;
}

unint64_t sub_1A45CACA4()
{
  unint64_t result;

  result = qword_1EE722760;
  if (!qword_1EE722760)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8E20, &type metadata for REMHashtagLabelDataView.Operation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722760);
  }
  return result;
}

unint64_t sub_1A45CACEC()
{
  unint64_t result;

  result = qword_1EE722768;
  if (!qword_1EE722768)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8ED8, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722768);
  }
  return result;
}

unint64_t sub_1A45CAD34()
{
  unint64_t result;

  result = qword_1EE722770;
  if (!qword_1EE722770)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8F90, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722770);
  }
  return result;
}

unint64_t sub_1A45CAD7C()
{
  unint64_t result;

  result = qword_1EE722778;
  if (!qword_1EE722778)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9048, &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722778);
  }
  return result;
}

unint64_t sub_1A45CADC4()
{
  unint64_t result;

  result = qword_1EE722780;
  if (!qword_1EE722780)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9100, &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722780);
  }
  return result;
}

unint64_t sub_1A45CAE0C()
{
  unint64_t result;

  result = qword_1EE722788;
  if (!qword_1EE722788)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A91B8, &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722788);
  }
  return result;
}

unint64_t sub_1A45CAE54()
{
  unint64_t result;

  result = qword_1EE722790;
  if (!qword_1EE722790)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9128, &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722790);
  }
  return result;
}

unint64_t sub_1A45CAE9C()
{
  unint64_t result;

  result = qword_1EE722798;
  if (!qword_1EE722798)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9150, &type metadata for REMHashtagLabelDataView.HashtagIDsWithHashtagLabelNamesInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722798);
  }
  return result;
}

unint64_t sub_1A45CAEE4()
{
  unint64_t result;

  result = qword_1EE7227A0;
  if (!qword_1EE7227A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9070, &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227A0);
  }
  return result;
}

unint64_t sub_1A45CAF2C()
{
  unint64_t result;

  result = qword_1EE7227A8;
  if (!qword_1EE7227A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9098, &type metadata for REMHashtagLabelDataView.HashtagLabelsReferencedByCustomSmartListFiltersInvocation.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227A8);
  }
  return result;
}

unint64_t sub_1A45CAF74()
{
  unint64_t result;

  result = qword_1EE7227B0;
  if (!qword_1EE7227B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8FB8, &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227B0);
  }
  return result;
}

unint64_t sub_1A45CAFBC()
{
  unint64_t result;

  result = qword_1EE7227B8;
  if (!qword_1EE7227B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8FE0, &type metadata for REMHashtagLabelDataView.ReminderIDsIncludeExcludeOperationInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227B8);
  }
  return result;
}

unint64_t sub_1A45CB004()
{
  unint64_t result;

  result = qword_1EE7227C0;
  if (!qword_1EE7227C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8F00, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227C0);
  }
  return result;
}

unint64_t sub_1A45CB04C()
{
  unint64_t result;

  result = qword_1EE7227C8;
  if (!qword_1EE7227C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8F28, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsDetailedInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227C8);
  }
  return result;
}

unint64_t sub_1A45CB094()
{
  unint64_t result;

  result = qword_1ED240080;
  if (!qword_1ED240080)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8E48, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240080);
  }
  return result;
}

unint64_t sub_1A45CB0DC()
{
  unint64_t result;

  result = qword_1ED240248;
  if (!qword_1ED240248)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8E70, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240248);
  }
  return result;
}

unint64_t sub_1A45CB124()
{
  unint64_t result;

  result = qword_1EE7227D0;
  if (!qword_1EE7227D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8D40, &type metadata for REMHashtagLabelDataView.Operation.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227D0);
  }
  return result;
}

unint64_t sub_1A45CB16C()
{
  unint64_t result;

  result = qword_1EE7227D8;
  if (!qword_1EE7227D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8D68, &type metadata for REMHashtagLabelDataView.Operation.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227D8);
  }
  return result;
}

unint64_t sub_1A45CB1B4()
{
  unint64_t result;

  result = qword_1EE7227E0;
  if (!qword_1EE7227E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8CF0, &type metadata for REMHashtagLabelDataView.Operation.SomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227E0);
  }
  return result;
}

unint64_t sub_1A45CB1FC()
{
  unint64_t result;

  result = qword_1EE7227E8;
  if (!qword_1EE7227E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8D18, &type metadata for REMHashtagLabelDataView.Operation.SomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227E8);
  }
  return result;
}

unint64_t sub_1A45CB244()
{
  unint64_t result;

  result = qword_1EE7227F0;
  if (!qword_1EE7227F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8D90, &type metadata for REMHashtagLabelDataView.Operation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227F0);
  }
  return result;
}

unint64_t sub_1A45CB28C()
{
  unint64_t result;

  result = qword_1EE7227F8;
  if (!qword_1EE7227F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8DB8, &type metadata for REMHashtagLabelDataView.Operation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7227F8);
  }
  return result;
}

unint64_t sub_1A45CB2D4()
{
  unint64_t result;

  result = qword_1EE722800;
  if (!qword_1EE722800)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8BE8, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722800);
  }
  return result;
}

unint64_t sub_1A45CB31C()
{
  unint64_t result;

  result = qword_1EE722808;
  if (!qword_1EE722808)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8C10, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CachedOrStoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722808);
  }
  return result;
}

unint64_t sub_1A45CB364()
{
  unint64_t result;

  result = qword_1EE722810;
  if (!qword_1EE722810)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8B98, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722810);
  }
  return result;
}

unint64_t sub_1A45CB3AC()
{
  unint64_t result;

  result = qword_1EE722818;
  if (!qword_1EE722818)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8BC0, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.StoreCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722818);
  }
  return result;
}

unint64_t sub_1A45CB3F4()
{
  unint64_t result;

  result = qword_1EE722820;
  if (!qword_1EE722820)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8C38, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722820);
  }
  return result;
}

unint64_t sub_1A45CB43C()
{
  unint64_t result;

  result = qword_1EE722828;
  if (!qword_1EE722828)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A8C60, &type metadata for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722828);
  }
  return result;
}

uint64_t sub_1A45CB480(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_133;
    if (v3)
      return sub_1A45CBBA4(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_141;
  v90 = result;
  v87 = a1;
  if (v3 < 2)
  {
    v8 = (char *)MEMORY[0x1E0DEE9D8];
    v92 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v89 = MEMORY[0x1E0DEE9D8];
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_99:
      if (v11 >= 2)
      {
        v81 = *v87;
        do
        {
          v82 = v11 - 2;
          if (v11 < 2)
            goto LABEL_128;
          if (!v81)
            goto LABEL_140;
          v83 = *(_QWORD *)&v8[16 * v82 + 32];
          v84 = *(_QWORD *)&v8[16 * v11 + 24];
          sub_1A45CBC98((char *)(v81 + 16 * v83), (char *)(v81 + 16 * *(_QWORD *)&v8[16 * v11 + 16]), v81 + 16 * v84, v92);
          if (v1)
            break;
          if (v84 < v83)
            goto LABEL_129;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v8 = sub_1A462EBC8((uint64_t)v8);
          if (v82 >= *((_QWORD *)v8 + 2))
            goto LABEL_130;
          v85 = &v8[16 * v82 + 32];
          *(_QWORD *)v85 = v83;
          *((_QWORD *)v85 + 1) = v84;
          v86 = *((_QWORD *)v8 + 2);
          if (v11 > v86)
            goto LABEL_131;
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v86 - v11));
          *((_QWORD *)v8 + 2) = v86 - 1;
          v11 = v86 - 1;
        }
        while (v86 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v89 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1A4690C00();
    *(_QWORD *)(v7 + 16) = v6;
    v89 = v7;
    v92 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v88 = *a1 + 24;
  v8 = (char *)MEMORY[0x1E0DEE9D8];
  v91 = v3;
LABEL_15:
  v12 = v9++;
  if (v9 >= v3)
    goto LABEL_32;
  sub_1A4466118();
  v13 = sub_1A469123C();
  v9 = v12 + 2;
  if (v12 + 2 >= v3)
    goto LABEL_21;
  v14 = v88 + 16 * v12;
  do
  {
    v14 += 16;
    if ((v13 == -1) == (sub_1A469123C() != -1))
    {
      v3 = v91;
      if (v13 == -1)
        goto LABEL_24;
LABEL_32:
      if (v9 < v3)
      {
        if (__OFSUB__(v9, v12))
          goto LABEL_132;
        if (v9 - v12 < v90)
        {
          if (__OFADD__(v12, v90))
            goto LABEL_134;
          if (v12 + v90 >= v3)
            v22 = v3;
          else
            v22 = v12 + v90;
          if (v22 < v12)
          {
LABEL_135:
            __break(1u);
            goto LABEL_136;
          }
          if (v9 != v22)
          {
            sub_1A4466118();
            v23 = (_QWORD *)(v10 + 16 * v9);
            do
            {
              v24 = v12;
              v25 = v23;
              do
              {
                if (sub_1A469123C() != -1)
                  break;
                if (!v10)
                  goto LABEL_137;
                v26 = *v25;
                v27 = v25[1];
                *(_OWORD *)v25 = *((_OWORD *)v25 - 1);
                *(v25 - 1) = v27;
                *(v25 - 2) = v26;
                v25 -= 2;
                ++v24;
              }
              while (v9 != v24);
              ++v9;
              v23 += 2;
            }
            while (v9 != v22);
            v9 = v22;
          }
        }
      }
      if (v9 < v12)
        goto LABEL_127;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1A462E5B0(0, *((_QWORD *)v8 + 2) + 1, 1, v8);
      v29 = *((_QWORD *)v8 + 2);
      v28 = *((_QWORD *)v8 + 3);
      v11 = v29 + 1;
      if (v29 >= v28 >> 1)
        v8 = sub_1A462E5B0((char *)(v28 > 1), v29 + 1, 1, v8);
      *((_QWORD *)v8 + 2) = v11;
      v93 = v8 + 32;
      v30 = &v8[16 * v29 + 32];
      *(_QWORD *)v30 = v12;
      *((_QWORD *)v30 + 1) = v9;
      if (v29)
      {
        v31 = v8 + 32;
        while (1)
        {
          v32 = v11 - 1;
          if (v11 >= 4)
          {
            v37 = &v31[16 * v11];
            v38 = *((_QWORD *)v37 - 8);
            v39 = *((_QWORD *)v37 - 7);
            v43 = __OFSUB__(v39, v38);
            v40 = v39 - v38;
            if (v43)
              goto LABEL_116;
            v42 = *((_QWORD *)v37 - 6);
            v41 = *((_QWORD *)v37 - 5);
            v43 = __OFSUB__(v41, v42);
            v35 = v41 - v42;
            v36 = v43;
            if (v43)
              goto LABEL_117;
            v44 = v11 - 2;
            v45 = &v31[16 * v11 - 32];
            v47 = *(_QWORD *)v45;
            v46 = *((_QWORD *)v45 + 1);
            v43 = __OFSUB__(v46, v47);
            v48 = v46 - v47;
            if (v43)
              goto LABEL_119;
            v43 = __OFADD__(v35, v48);
            v49 = v35 + v48;
            if (v43)
              goto LABEL_122;
            if (v49 >= v40)
            {
              v67 = &v31[16 * v32];
              v69 = *(_QWORD *)v67;
              v68 = *((_QWORD *)v67 + 1);
              v43 = __OFSUB__(v68, v69);
              v70 = v68 - v69;
              if (v43)
                goto LABEL_126;
              v60 = v35 < v70;
              goto LABEL_87;
            }
          }
          else
          {
            if (v11 != 3)
            {
              v61 = *((_QWORD *)v8 + 4);
              v62 = *((_QWORD *)v8 + 5);
              v43 = __OFSUB__(v62, v61);
              v54 = v62 - v61;
              v55 = v43;
              goto LABEL_81;
            }
            v34 = *((_QWORD *)v8 + 4);
            v33 = *((_QWORD *)v8 + 5);
            v43 = __OFSUB__(v33, v34);
            v35 = v33 - v34;
            v36 = v43;
          }
          if ((v36 & 1) != 0)
            goto LABEL_118;
          v44 = v11 - 2;
          v50 = &v31[16 * v11 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v53 = __OFSUB__(v51, v52);
          v54 = v51 - v52;
          v55 = v53;
          if (v53)
            goto LABEL_121;
          v56 = &v31[16 * v32];
          v58 = *(_QWORD *)v56;
          v57 = *((_QWORD *)v56 + 1);
          v43 = __OFSUB__(v57, v58);
          v59 = v57 - v58;
          if (v43)
            goto LABEL_124;
          if (__OFADD__(v54, v59))
            goto LABEL_125;
          if (v54 + v59 >= v35)
          {
            v60 = v35 < v59;
LABEL_87:
            if (v60)
              v32 = v44;
            goto LABEL_89;
          }
LABEL_81:
          if ((v55 & 1) != 0)
            goto LABEL_120;
          v63 = &v31[16 * v32];
          v65 = *(_QWORD *)v63;
          v64 = *((_QWORD *)v63 + 1);
          v43 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          if (v43)
            goto LABEL_123;
          if (v66 < v54)
            goto LABEL_14;
LABEL_89:
          v71 = v32 - 1;
          if (v32 - 1 >= v11)
          {
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
            goto LABEL_135;
          }
          v72 = v10;
          if (!v10)
            goto LABEL_138;
          v73 = v8;
          v74 = &v31[16 * v71];
          v75 = v31;
          v76 = *(_QWORD *)v74;
          v77 = &v75[16 * v32];
          v78 = *((_QWORD *)v77 + 1);
          v79 = v72;
          sub_1A45CBC98((char *)(v72 + 16 * *(_QWORD *)v74), (char *)(v72 + 16 * *(_QWORD *)v77), v72 + 16 * v78, v92);
          if (v1)
            goto LABEL_110;
          if (v78 < v76)
            goto LABEL_113;
          if (v32 > *((_QWORD *)v73 + 2))
            goto LABEL_114;
          *(_QWORD *)v74 = v76;
          v31 = v93;
          *(_QWORD *)&v93[16 * v71 + 8] = v78;
          v80 = *((_QWORD *)v73 + 2);
          if (v32 >= v80)
            goto LABEL_115;
          v8 = v73;
          v11 = v80 - 1;
          memmove(v77, v77 + 16, 16 * (v80 - 1 - v32));
          *((_QWORD *)v73 + 2) = v80 - 1;
          v10 = v79;
          if (v80 <= 2)
            goto LABEL_14;
        }
      }
      v11 = 1;
LABEL_14:
      v3 = v91;
      if (v9 >= v91)
        goto LABEL_99;
      goto LABEL_15;
    }
    ++v9;
    v3 = v91;
  }
  while (v91 != v9);
  v9 = v91;
LABEL_21:
  if (v13 != -1)
    goto LABEL_32;
LABEL_24:
  if (v9 >= v12)
  {
    if (v12 < v9)
    {
      v15 = 16 * v9;
      v16 = 16 * v12;
      v17 = v9;
      v18 = v12;
      while (1)
      {
        if (v18 != --v17)
        {
          if (!v10)
            goto LABEL_139;
          v19 = v10 + v15;
          v20 = *(_QWORD *)(v10 + v16);
          v21 = *(_QWORD *)(v10 + v16 + 8);
          *(_OWORD *)(v10 + v16) = *(_OWORD *)(v10 + v15 - 16);
          *(_QWORD *)(v19 - 16) = v20;
          *(_QWORD *)(v19 - 8) = v21;
        }
        ++v18;
        v15 -= 16;
        v16 += 16;
        if (v18 >= v17)
          goto LABEL_32;
      }
    }
    goto LABEL_32;
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A45CBBA4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    sub_1A4466118();
    v6 = (_QWORD *)(v5 + 16 * v4);
LABEL_5:
    v7 = v12;
    v8 = v6;
    while (1)
    {
      result = sub_1A469123C();
      if (result != -1)
      {
LABEL_4:
        ++v4;
        v6 += 2;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v5)
        break;
      v9 = *v8;
      v10 = v8[1];
      *(_OWORD *)v8 = *((_OWORD *)v8 - 1);
      *(v8 - 1) = v10;
      *(v8 - 2) = v9;
      v8 -= 2;
      if (v4 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A45CBC98(char *__src, char *a2, unint64_t a3, char *a4)
{
  char *v5;
  char *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t result;
  char *v21;
  char *v22;
  char *v23;

  v5 = a2;
  v6 = __src;
  v7 = a2 - __src;
  v8 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v8 = a2 - __src;
  v9 = v8 >> 4;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 4;
  v23 = __src;
  v22 = a4;
  if (v9 >= v11 >> 4)
  {
    if (v10 >= -15)
    {
      if (a4 != a2 || &a2[16 * v12] <= a4)
        memmove(a4, a2, 16 * v12);
      v15 = &a4[16 * v12];
      v21 = v15;
      v23 = v5;
      if (v6 < v5 && v10 >= 16)
      {
        sub_1A4466118();
        v16 = (char *)(a3 - 16);
        v17 = v5;
        do
        {
          v18 = v16 + 16;
          v17 -= 16;
          if (sub_1A469123C() == -1)
          {
            if (v18 != v5 || v16 >= v5)
              *(_OWORD *)v16 = *(_OWORD *)v17;
            v23 = v17;
          }
          else
          {
            v21 = v15 - 16;
            if (v18 < v15 || v16 >= v15 || v18 != v15)
              *(_OWORD *)v16 = *((_OWORD *)v15 - 1);
            v17 = v5;
            v15 -= 16;
          }
          if (v17 <= v6)
            break;
          v16 -= 16;
          v5 = v17;
        }
        while (v15 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v7 >= -15)
  {
    v13 = a4;
    if (a4 != __src || &__src[16 * v9] <= a4)
      memmove(a4, __src, 16 * v9);
    v21 = &a4[16 * v9];
    if ((unint64_t)v5 < a3 && v7 >= 16)
    {
      sub_1A4466118();
      do
      {
        if (sub_1A469123C() == -1)
        {
          v14 = v5 + 16;
          if (v6 < v5 || v6 >= v14 || v6 != v5)
            *(_OWORD *)v6 = *(_OWORD *)v5;
        }
        else
        {
          if (v6 != v13)
            *(_OWORD *)v6 = *(_OWORD *)v13;
          v13 += 16;
          v22 = v13;
          v14 = v5;
        }
        v6 += 16;
        if (v13 >= &a4[16 * v9])
          break;
        v5 = v14;
      }
      while ((unint64_t)v14 < a3);
      v23 = v6;
    }
LABEL_43:
    sub_1A462E6A8((void **)&v23, (const void **)&v22, &v21);
    return 1;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A45CBF74(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x724F646568636163 && a2 == 0xED000065726F7453;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F7473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45CC080(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701670771 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45CC150(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564756C636E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564756C637865 && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6974617265706FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A45CC29C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736C6562616CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61446F5470557369 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45CC390(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000019 && a2 == 0x80000001A46C20E0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1A45CC414()
{
  unint64_t result;

  result = qword_1ED240250;
  if (!qword_1ED240250)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle, &type metadata for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED240250);
  }
  return result;
}

uint64_t sub_1A45CC458()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A45CC47C(void (*a1)(id *), uint64_t a2)
{
  uint64_t v2;

  sub_1A45C9CE8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1A45CC484()
{
  return swift_deallocObject();
}

uint64_t sub_1A45CC494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1A45C944C(a2, a1, a3);
}

uint64_t sub_1A45CC4B4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1A45CC4DC(uint64_t result, char a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  char v19;
  uint64_t *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *i;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  _QWORD *v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;

  v3 = *(_QWORD *)(result + 16);
  if (v3)
  {
    v6 = (_QWORD *)swift_bridgeObjectRetain();
    v8 = v6[4];
    v7 = v6[5];
    v9 = v6[6];
    v10 = v6[7];
    v49 = v6;
    v50 = a3;
    v11 = *a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13 = sub_1A443E4C8(v8, v7);
    v14 = *(_QWORD *)(v11 + 16);
    v15 = (v12 & 1) == 0;
    v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v17 = v12;
    if (*(_QWORD *)(v11 + 24) >= v16)
    {
      if ((a2 & 1) == 0)
      {
        sub_1A444A18C();
        v20 = v50;
        v21 = (_QWORD *)*v50;
        if ((v17 & 1) != 0)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          v22 = (_QWORD *)(v21[7] + 16 * v13);
          swift_bridgeObjectRelease();
          v20 = v50;
          *v22 = v9;
          v22[1] = v10;
          v23 = v3 - 1;
          if (v3 != 1)
          {
LABEL_15:
            for (i = v49 + 11; ; i += 4)
            {
              v32 = *(i - 3);
              v31 = *(i - 2);
              v33 = *(i - 1);
              v34 = *i;
              v35 = *v20;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v37 = sub_1A443E4C8(v32, v31);
              v38 = *(_QWORD *)(v35 + 16);
              v39 = (v36 & 1) == 0;
              v40 = v38 + v39;
              if (__OFADD__(v38, v39))
                break;
              v41 = v36;
              if (*(_QWORD *)(v35 + 24) < v40)
              {
                sub_1A44464F0(v40, 1);
                v42 = sub_1A443E4C8(v32, v31);
                if ((v41 & 1) != (v43 & 1))
                  goto LABEL_27;
                v37 = v42;
              }
              v20 = v50;
              v44 = (_QWORD *)*v50;
              if ((v41 & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v30 = (_QWORD *)(v44[7] + 16 * v37);
                swift_bridgeObjectRelease();
                v20 = v50;
                *v30 = v33;
                v30[1] = v34;
              }
              else
              {
                v44[(v37 >> 6) + 8] |= 1 << v37;
                v45 = (uint64_t *)(v44[6] + 16 * v37);
                *v45 = v32;
                v45[1] = v31;
                v46 = (_QWORD *)(v44[7] + 16 * v37);
                *v46 = v33;
                v46[1] = v34;
                v47 = v44[2];
                v27 = __OFADD__(v47, 1);
                v48 = v47 + 1;
                if (v27)
                  goto LABEL_26;
                v44[2] = v48;
              }
              if (!--v23)
                return swift_bridgeObjectRelease();
            }
            goto LABEL_25;
          }
          return swift_bridgeObjectRelease();
        }
LABEL_11:
        v21[(v13 >> 6) + 8] |= 1 << v13;
        v24 = (uint64_t *)(v21[6] + 16 * v13);
        *v24 = v8;
        v24[1] = v7;
        v25 = (_QWORD *)(v21[7] + 16 * v13);
        *v25 = v9;
        v25[1] = v10;
        v26 = v21[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
        {
LABEL_26:
          __break(1u);
          goto LABEL_27;
        }
        v21[2] = v28;
        v23 = v3 - 1;
        if (v3 != 1)
          goto LABEL_15;
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1A44464F0(v16, a2 & 1);
      v18 = sub_1A443E4C8(v8, v7);
      if ((v17 & 1) != (v19 & 1))
      {
LABEL_27:
        result = sub_1A4691C08();
        __break(1u);
        return result;
      }
      v13 = v18;
    }
    v20 = v50;
    v21 = (_QWORD *)*v50;
    if ((v17 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1A45CC794()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A45CC7B8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1A45C9F24(a1, a2, *(void (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_1A45CC7C0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A45CC7E4(_QWORD *a1@<X8>)
{
  sub_1A45C9A74(a1);
}

uint64_t sub_1A45CC840()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D656C626D65;
  else
    return 0x696A6F6D65;
}

uint64_t sub_1A45CC874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45D1A04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45CC898()
{
  sub_1A45CCBA8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CC8C0()
{
  sub_1A45CCBA8();
  return sub_1A4691DC4();
}

uint64_t sub_1A45CC8EC()
{
  sub_1A45CCBEC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CC914()
{
  sub_1A45CCBEC();
  return sub_1A4691DC4();
}

uint64_t sub_1A45CC93C()
{
  sub_1A45CCC30();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CC964()
{
  sub_1A45CCC30();
  return sub_1A4691DC4();
}

uint64_t REMSpotlightBadgeType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722838);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722840);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722848);
  v23 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v21 = v1[1];
  v22 = v12;
  v13 = *((_BYTE *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45CCBA8();
  sub_1A4691D40();
  if ((v13 & 1) != 0)
  {
    v25 = 1;
    sub_1A45CCBEC();
    sub_1A469180C();
    v14 = v20;
    sub_1A4691854();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v14);
  }
  else
  {
    v24 = 0;
    sub_1A45CCC30();
    sub_1A469180C();
    v15 = v18;
    sub_1A4691854();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v11, v9);
}

unint64_t sub_1A45CCBA8()
{
  unint64_t result;

  result = qword_1EE722850;
  if (!qword_1EE722850)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA4DC, &type metadata for REMSpotlightBadgeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722850);
  }
  return result;
}

unint64_t sub_1A45CCBEC()
{
  unint64_t result;

  result = qword_1EE722858;
  if (!qword_1EE722858)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA48C, &type metadata for REMSpotlightBadgeType.EmblemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722858);
  }
  return result;
}

unint64_t sub_1A45CCC30()
{
  unint64_t result;

  result = qword_1EE722860;
  if (!qword_1EE722860)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA43C, &type metadata for REMSpotlightBadgeType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722860);
  }
  return result;
}

uint64_t REMSpotlightBadgeType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  char v39;
  char v40;

  v32 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722868);
  v33 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722870);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722878);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1A45CCBA8();
  v13 = v37;
  sub_1A4691D28();
  if (v13)
    goto LABEL_6;
  v31 = v5;
  v14 = v4;
  v16 = v34;
  v15 = v35;
  v37 = v9;
  v17 = sub_1A46917DC();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v18 = sub_1A46914B8();
    swift_allocError();
    v19 = v11;
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMSpotlightBadgeType;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v8);
LABEL_6:
    v22 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_1(v22);
  }
  v38 = *(unsigned __int8 *)(v17 + 32);
  if ((v38 & 1) != 0)
  {
    v31 = v17;
    v40 = 1;
    sub_1A45CCBEC();
    sub_1A4691734();
    v25 = sub_1A4691788();
    v27 = v26;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v15);
  }
  else
  {
    v39 = 0;
    sub_1A45CCC30();
    v24 = v7;
    sub_1A4691734();
    v25 = sub_1A4691788();
    v27 = v28;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v14);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
  v22 = (uint64_t)v36;
  v29 = v32;
  *v32 = v25;
  v29[1] = v27;
  *((_BYTE *)v29 + 16) = v38;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_1A45CD034@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMSpotlightBadgeType.init(from:)(a1, a2);
}

uint64_t sub_1A45CD048(_QWORD *a1)
{
  return REMSpotlightBadgeType.encode(to:)(a1);
}

ReminderKitInternal::REMSpotlightAlarmProximity_optional __swiftcall REMSpotlightAlarmProximity.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ReminderKitInternal::REMSpotlightAlarmProximity_optional)rawValue;
}

uint64_t REMSpotlightAlarmProximity.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ReminderKitInternal::REMSpotlightAlarmProximity_optional sub_1A45CD078(Swift::Int *a1)
{
  return REMSpotlightAlarmProximity.init(rawValue:)(*a1);
}

uint64_t sub_1A45CD080()
{
  sub_1A45D2300();
  return sub_1A4690B7C();
}

uint64_t sub_1A45CD0DC()
{
  sub_1A45D2300();
  return sub_1A4690B40();
}

uint64_t sub_1A45CD128()
{
  sub_1A45D22BC();
  return sub_1A4690B7C();
}

uint64_t sub_1A45CD184()
{
  sub_1A45D22BC();
  return sub_1A4690B40();
}

uint64_t sub_1A45CD1D0()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C6369686576;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A45CD20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45D1AE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45CD230()
{
  sub_1A45CD698();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CD258()
{
  sub_1A45CD698();
  return sub_1A4691DC4();
}

uint64_t sub_1A45CD280()
{
  _BYTE *v0;

  if (*v0)
    return 0x74696D69786F7270;
  else
    return 1701667182;
}

uint64_t sub_1A45CD2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45D1BD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45CD2DC()
{
  sub_1A45CD764();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CD304()
{
  sub_1A45CD764();
  return sub_1A4691DC4();
}

uint64_t sub_1A45CD32C()
{
  return 0x746E657665;
}

uint64_t sub_1A45CD340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746E657665 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A45CD3CC()
{
  sub_1A45CD6DC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CD3F4()
{
  sub_1A45CD6DC();
  return sub_1A4691DC4();
}

uint64_t REMSpotlightLocationType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722880);
  v18 = *(_QWORD *)(v3 - 8);
  v19 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722888);
  v21 = *(_QWORD *)(v6 - 8);
  v22 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722890);
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v1;
  v20 = v1[1];
  v12 = *((char *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45CD698();
  sub_1A4691D40();
  if (v12 < 0)
  {
    v31 = 1;
    sub_1A45CD6DC();
    v13 = v25;
    sub_1A469180C();
    v30 = v23;
    sub_1A45CD720();
    v16 = v19;
    sub_1A4691890();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v16);
  }
  else
  {
    v29 = 0;
    sub_1A45CD764();
    v13 = v25;
    sub_1A469180C();
    v28 = 0;
    v14 = v22;
    v15 = v24;
    sub_1A4691854();
    if (!v15)
    {
      v27 = v12;
      v26 = 1;
      sub_1A45CD7A8();
      sub_1A4691890();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
}

unint64_t sub_1A45CD698()
{
  unint64_t result;

  result = qword_1EE722898;
  if (!qword_1EE722898)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA3EC, &type metadata for REMSpotlightLocationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722898);
  }
  return result;
}

unint64_t sub_1A45CD6DC()
{
  unint64_t result;

  result = qword_1EE7228A0;
  if (!qword_1EE7228A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA39C, &type metadata for REMSpotlightLocationType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7228A0);
  }
  return result;
}

unint64_t sub_1A45CD720()
{
  unint64_t result;

  result = qword_1EE7228A8;
  if (!qword_1EE7228A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmVehicleTriggerEvent, &type metadata for REMSpotlightAlarmVehicleTriggerEvent);
    atomic_store(result, (unint64_t *)&qword_1EE7228A8);
  }
  return result;
}

unint64_t sub_1A45CD764()
{
  unint64_t result;

  result = qword_1EE7228B0;
  if (!qword_1EE7228B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA34C, &type metadata for REMSpotlightLocationType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7228B0);
  }
  return result;
}

unint64_t sub_1A45CD7A8()
{
  unint64_t result;

  result = qword_1EE7228B8;
  if (!qword_1EE7228B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmProximity, &type metadata for REMSpotlightAlarmProximity);
    atomic_store(result, (unint64_t *)&qword_1EE7228B8);
  }
  return result;
}

uint64_t REMSpotlightLocationType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  unsigned __int8 v45;
  char v46;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7228C0);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7228C8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7228D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1A45CD698();
  v15 = v40;
  sub_1A4691D28();
  if (v15)
    goto LABEL_7;
  v16 = v38;
  v34 = v7;
  v40 = v11;
  v17 = sub_1A46917DC();
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v22 = sub_1A46914B8();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v24 = &type metadata for REMSpotlightLocationType;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v10);
LABEL_7:
    v28 = (uint64_t)v39;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  if ((*(_BYTE *)(v17 + 32) & 1) != 0)
  {
    v46 = 1;
    sub_1A45CD6DC();
    sub_1A4691734();
    sub_1A45CDC0C();
    v18 = v36;
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v18);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v10);
    v19 = 0;
    v20 = v45;
    v21 = 0x80;
  }
  else
  {
    v44 = 0;
    sub_1A45CD764();
    v25 = v9;
    sub_1A4691734();
    v43 = 0;
    v26 = v6;
    v27 = v25;
    v20 = sub_1A4691788();
    v19 = v30;
    v41 = 1;
    sub_1A45CDC50();
    sub_1A46917C4();
    v31 = v40;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v10);
    v21 = v42;
  }
  v28 = (uint64_t)v39;
  v32 = v35;
  *v35 = v20;
  v32[1] = v19;
  *((_BYTE *)v32 + 16) = v21;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

unint64_t sub_1A45CDC0C()
{
  unint64_t result;

  result = qword_1EE7228D8;
  if (!qword_1EE7228D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmVehicleTriggerEvent, &type metadata for REMSpotlightAlarmVehicleTriggerEvent);
    atomic_store(result, (unint64_t *)&qword_1EE7228D8);
  }
  return result;
}

unint64_t sub_1A45CDC50()
{
  unint64_t result;

  result = qword_1EE7228E0;
  if (!qword_1EE7228E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmProximity, &type metadata for REMSpotlightAlarmProximity);
    atomic_store(result, (unint64_t *)&qword_1EE7228E0);
  }
  return result;
}

uint64_t sub_1A45CDC94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMSpotlightLocationType.init(from:)(a1, a2);
}

uint64_t sub_1A45CDCA8(_QWORD *a1)
{
  return REMSpotlightLocationType.encode(to:)(a1);
}

void *REMSpotlightColor.remColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t REMSpotlightColor.__allocating_init(remColor:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t REMSpotlightColor.init(remColor:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t REMSpotlightColor.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  REMSpotlightColor.init(from:)(a1);
  return v2;
}

uint64_t REMSpotlightColor.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  objc_class *v9;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  _QWORD v17[5];
  void *v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7228E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45CDF94();
  sub_1A4691D28();
  if (v2)
  {
    type metadata accessor for REMSpotlightColor();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v9 = (objc_class *)type metadata accessor for REMColor_Codable();
    sub_1A450C498(&qword_1ED241AF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for REMColor_Codable, (uint64_t)&protocol conformance descriptor for REMColor_Codable);
    sub_1A469177C();
    if (v18)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v11 = v18;
    }
    else
    {
      sub_1A443E484((uint64_t)a1, (uint64_t)v17);
      v12 = sub_1A45CF50C(v17);
      v11 = objc_msgSend(objc_allocWithZone(v9), sel_initWithRed_green_blue_alpha_colorSpace_daSymbolicColorName_daHexString_ckSymbolicColorName_, 2, 0, 0, 0, v12, v13, v14, v15);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    *(_QWORD *)(v3 + 16) = v11;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1A45CDF94()
{
  unint64_t result;

  result = qword_1EE7228F0;
  if (!qword_1EE7228F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA2FC, &type metadata for REMSpotlightColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7228F0);
  }
  return result;
}

uint64_t type metadata accessor for REMSpotlightColor()
{
  return objc_opt_self();
}

uint64_t sub_1A45CDFF8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7228F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45CDF94();
  sub_1A4691D40();
  v9[1] = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242330);
  sub_1A45CF6C0();
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1A45CE100()
{
  return 0x726F6C6F436D6572;
}

uint64_t sub_1A45CE118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726F6C6F436D6572 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A45CE1AC()
{
  sub_1A45CDF94();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CE1D4()
{
  sub_1A45CDF94();
  return sub_1A4691DC4();
}

uint64_t REMSpotlightColor.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t REMSpotlightColor.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A45CE23C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for REMSpotlightColor();
  v5 = swift_allocObject();
  result = REMSpotlightColor.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A45CE290(_QWORD *a1)
{
  return sub_1A45CDFF8(a1);
}

uint64_t sub_1A45CE2B0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722C98);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45D2344();
  sub_1A4691D40();
  v12 = 0;
  sub_1A469186C();
  if (!v1)
  {
    v11 = 1;
    sub_1A469186C();
    v10 = 2;
    sub_1A469186C();
    v9 = 3;
    sub_1A469186C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1A45CE42C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45CE454 + 4 * byte_1A46A9550[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_1A45CE454()
{
  return 0x6E65657267;
}

uint64_t sub_1A45CE468()
{
  return 1702194274;
}

uint64_t sub_1A45CE478()
{
  return 0x6168706C61;
}

uint64_t sub_1A45CE48C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45D1CC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45CE4B0()
{
  sub_1A45D2344();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CE4D8()
{
  sub_1A45D2344();
  return sub_1A4691DC4();
}

void sub_1A45CE500(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1A45CF50C(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
  }
}

uint64_t sub_1A45CE52C(_QWORD *a1)
{
  return sub_1A45CE2B0(a1);
}

uint64_t REMSpotlightReminderViewProxy.priority.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t REMSpotlightReminderViewProxy.flagged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t REMSpotlightReminderViewProxy.hasAttachment.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t REMSpotlightReminderViewProxy.notes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSpotlightReminderViewProxy.hashtags.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMSpotlightReminderViewProxy.locationType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1A45CF740(v2, v3, v4);
}

uint64_t REMSpotlightReminderViewProxy.reminderID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for REMSpotlightReminderViewProxy(0) + 40);
  return sub_1A4474000(v3, a1);
}

uint64_t REMSpotlightReminderViewProxy.init(priority:flagged:hasAttachment:notes:hashtags:locationType:reminderID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v11;
  uint64_t v12;

  v11 = *(_BYTE *)(a7 + 16);
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 9) = a3;
  *(_QWORD *)(a9 + 16) = a4;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = a6;
  *(_OWORD *)(a9 + 40) = *(_OWORD *)a7;
  *(_BYTE *)(a9 + 56) = v11;
  v12 = a9 + *(int *)(type metadata accessor for REMSpotlightReminderViewProxy(0) + 40);
  return sub_1A45CF778(a8, v12);
}

uint64_t sub_1A45CE630()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45CE660 + 4 * byte_1A46A9554[*v0]))(0x797469726F697270, 0xE800000000000000);
}

uint64_t sub_1A45CE660()
{
  return 0x64656767616C66;
}

uint64_t sub_1A45CE678()
{
  return 0x6361747441736168;
}

uint64_t sub_1A45CE69C()
{
  return 0x7365746F6ELL;
}

uint64_t sub_1A45CE6B0()
{
  return 0x7367617468736168;
}

uint64_t sub_1A45CE6C4()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A45CE6E4()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A45CE700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45D1E48(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A45CE724(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1A45CE730()
{
  sub_1A45CF7C0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CE758()
{
  sub_1A45CF7C0();
  return sub_1A4691DC4();
}

uint64_t REMSpotlightReminderViewProxy.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  __int128 v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722908);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45CF7C0();
  sub_1A4691D40();
  LOBYTE(v11) = 0;
  sub_1A4691884();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1A4691860();
    LOBYTE(v11) = 2;
    sub_1A4691860();
    LOBYTE(v11) = 3;
    sub_1A4691818();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + 32);
    v13 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A44351D8(&qword_1ED23EAB8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1A4691848();
    v9 = *(_BYTE *)(v3 + 56);
    v11 = *(_OWORD *)(v3 + 40);
    v12 = v9;
    v13 = 5;
    sub_1A45CF804();
    sub_1A4691848();
    type metadata accessor for REMSpotlightReminderViewProxy(0);
    LOBYTE(v11) = 6;
    sub_1A46900FC();
    sub_1A450C498(&qword_1ED243D00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSpotlightReminderViewProxy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  __int128 v27;
  char v28;
  char v29;

  v23 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722920);
  v7 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMSpotlightReminderViewProxy(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A45CF7C0();
  v25 = v9;
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  v14 = v7;
  v15 = (uint64_t)v6;
  v17 = v23;
  v16 = v24;
  LOBYTE(v27) = 0;
  *(_QWORD *)v12 = sub_1A46917B8();
  LOBYTE(v27) = 1;
  v12[8] = sub_1A4691794() & 1;
  LOBYTE(v27) = 2;
  v12[9] = sub_1A4691794() & 1;
  LOBYTE(v27) = 3;
  *((_QWORD *)v12 + 2) = sub_1A469174C();
  *((_QWORD *)v12 + 3) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  v29 = 4;
  sub_1A44351D8(&qword_1ED23E750, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1A469177C();
  v22[0] = v27;
  *((_QWORD *)v12 + 4) = v27;
  v29 = 5;
  sub_1A45CF86C();
  v22[1] = 0;
  sub_1A469177C();
  v19 = v28;
  *(_OWORD *)(v12 + 40) = v27;
  v12[56] = v19;
  sub_1A46900FC();
  LOBYTE(v27) = 6;
  sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v20 = v25;
  sub_1A469177C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v16);
  sub_1A45CF778(v15, (uint64_t)&v12[*(int *)(v10 + 40)]);
  sub_1A4497EE8((uint64_t)v12, v17, type metadata accessor for REMSpotlightReminderViewProxy);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return sub_1A4497F2C((uint64_t)v12, type metadata accessor for REMSpotlightReminderViewProxy);
}

uint64_t sub_1A45CEDF8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1A45CEE00()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1A45CEE08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A45CEE34()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A45CEE3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1A45CF740(v2, v3, v4);
}

uint64_t sub_1A45CEE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A4474000(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_1A45CEE60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSpotlightReminderViewProxy.init(from:)(a1, a2);
}

uint64_t sub_1A45CEE74(_QWORD *a1)
{
  return REMSpotlightReminderViewProxy.encode(to:)(a1);
}

uint64_t REMSpotlightListViewProxy.badgeType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return sub_1A44D88E0();
}

uint64_t REMSpotlightListViewProxy.color.getter()
{
  return swift_retain();
}

uint64_t REMSpotlightListViewProxy.listID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for REMSpotlightListViewProxy(0) + 24);
  return sub_1A4474000(v3, a1);
}

uint64_t REMSpotlightListViewProxy.init(badgeType:color:listID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;

  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_BYTE *)(a4 + 16) = v6;
  *(_QWORD *)(a4 + 24) = a2;
  v7 = a4 + *(int *)(type metadata accessor for REMSpotlightListViewProxy(0) + 24);
  return sub_1A45CF778(a3, v7);
}

uint64_t sub_1A45CEF1C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F6C6F63;
  if (*v0 != 1)
    v1 = 0x44497473696CLL;
  if (*v0)
    return v1;
  else
    return 0x7079546567646162;
}

uint64_t sub_1A45CEF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45D216C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45CEF98()
{
  sub_1A45CF8C4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45CEFC0()
{
  sub_1A45CF8C4();
  return sub_1A4691DC4();
}

uint64_t REMSpotlightListViewProxy.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722930);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45CF8C4();
  sub_1A4691D40();
  v9 = *((_BYTE *)v3 + 16);
  v14 = *v3;
  v15 = v9;
  v13 = 0;
  sub_1A45CF908();
  sub_1A4691890();
  if (!v2)
  {
    *(_QWORD *)&v14 = *((_QWORD *)v3 + 3);
    v13 = 1;
    type metadata accessor for REMSpotlightColor();
    sub_1A450C498(&qword_1EE722948, v10, (uint64_t (*)(uint64_t))type metadata accessor for REMSpotlightColor, (uint64_t)&protocol conformance descriptor for REMSpotlightColor);
    sub_1A4691890();
    type metadata accessor for REMSpotlightListViewProxy(0);
    LOBYTE(v14) = 2;
    sub_1A46900FC();
    sub_1A450C498(&qword_1ED243D00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMSpotlightListViewProxy.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  char v23;
  char v24;

  v19 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722950);
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for REMSpotlightListViewProxy(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A45CF8C4();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  v24 = 0;
  sub_1A45CF94C();
  v14 = v20;
  sub_1A46917C4();
  v15 = v23;
  *(_OWORD *)v12 = v22;
  v12[16] = v15;
  type metadata accessor for REMSpotlightColor();
  v24 = 1;
  sub_1A450C498(&qword_1EE722960, v16, (uint64_t (*)(uint64_t))type metadata accessor for REMSpotlightColor, (uint64_t)&protocol conformance descriptor for REMSpotlightColor);
  sub_1A46917C4();
  *((_QWORD *)v12 + 3) = v22;
  sub_1A46900FC();
  LOBYTE(v22) = 2;
  sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  sub_1A469177C();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  sub_1A45CF778((uint64_t)v6, (uint64_t)&v12[*(int *)(v10 + 24)]);
  sub_1A4497EE8((uint64_t)v12, v19, type metadata accessor for REMSpotlightListViewProxy);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return sub_1A4497F2C((uint64_t)v12, type metadata accessor for REMSpotlightListViewProxy);
}

uint64_t sub_1A45CF4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return sub_1A44D88E0();
}

uint64_t sub_1A45CF4CC()
{
  return swift_retain();
}

uint64_t sub_1A45CF4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A4474000(v2 + *(int *)(a1 + 24), a2);
}

uint64_t sub_1A45CF4E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSpotlightListViewProxy.init(from:)(a1, a2);
}

uint64_t sub_1A45CF4F8(_QWORD *a1)
{
  return REMSpotlightListViewProxy.encode(to:)(a1);
}

double sub_1A45CF50C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  double v6;
  double v7;
  _BYTE v9[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722C70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45D2344();
  sub_1A4691D28();
  v9[15] = 0;
  sub_1A46917A0();
  v7 = v6;
  v9[14] = 1;
  sub_1A46917A0();
  v9[13] = 2;
  sub_1A46917A0();
  v9[12] = 3;
  sub_1A46917A0();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_1A45CF6C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE722900;
  if (!qword_1EE722900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED242330);
    v2 = sub_1A450C498(&qword_1ED242328, 255, (uint64_t (*)(uint64_t))type metadata accessor for REMColor_Codable, (uint64_t)&protocol conformance descriptor for REMColor_Codable);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE722900);
  }
  return result;
}

uint64_t sub_1A45CF740(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu)
    return sub_1A45CF754(a1, a2, a3);
  return a1;
}

uint64_t sub_1A45CF754(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0x80) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t type metadata accessor for REMSpotlightReminderViewProxy(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE722AA0);
}

uint64_t sub_1A45CF778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A45CF7C0()
{
  unint64_t result;

  result = qword_1EE722910;
  if (!qword_1EE722910)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA2AC, &type metadata for REMSpotlightReminderViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722910);
  }
  return result;
}

unint64_t sub_1A45CF804()
{
  unint64_t result;

  result = qword_1EE722918;
  if (!qword_1EE722918)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightLocationType, &type metadata for REMSpotlightLocationType);
    atomic_store(result, (unint64_t *)&qword_1EE722918);
  }
  return result;
}

uint64_t sub_1A45CF848(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu)
    return sub_1A45CF85C(a1, a2, a3);
  return a1;
}

uint64_t sub_1A45CF85C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 0x80) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1A45CF86C()
{
  unint64_t result;

  result = qword_1EE722928;
  if (!qword_1EE722928)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightLocationType, &type metadata for REMSpotlightLocationType);
    atomic_store(result, (unint64_t *)&qword_1EE722928);
  }
  return result;
}

uint64_t type metadata accessor for REMSpotlightListViewProxy(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE722B48);
}

unint64_t sub_1A45CF8C4()
{
  unint64_t result;

  result = qword_1EE722938;
  if (!qword_1EE722938)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA25C, &type metadata for REMSpotlightListViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722938);
  }
  return result;
}

unint64_t sub_1A45CF908()
{
  unint64_t result;

  result = qword_1EE722940;
  if (!qword_1EE722940)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightBadgeType, &type metadata for REMSpotlightBadgeType);
    atomic_store(result, (unint64_t *)&qword_1EE722940);
  }
  return result;
}

unint64_t sub_1A45CF94C()
{
  unint64_t result;

  result = qword_1EE722958;
  if (!qword_1EE722958)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightBadgeType, &type metadata for REMSpotlightBadgeType);
    atomic_store(result, (unint64_t *)&qword_1EE722958);
  }
  return result;
}

unint64_t sub_1A45CF994()
{
  unint64_t result;

  result = qword_1EE722968;
  if (!qword_1EE722968)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmProximity, &type metadata for REMSpotlightAlarmProximity);
    atomic_store(result, (unint64_t *)&qword_1EE722968);
  }
  return result;
}

unint64_t sub_1A45CF9DC()
{
  unint64_t result;

  result = qword_1EE722970;
  if (!qword_1EE722970)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmVehicleTriggerEvent, &type metadata for REMSpotlightAlarmVehicleTriggerEvent);
    atomic_store(result, (unint64_t *)&qword_1EE722970);
  }
  return result;
}

uint64_t sub_1A45CFA20(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A450C498(&qword_1EE722978, 255, type metadata accessor for REMSpotlightReminderViewProxy, (uint64_t)&protocol conformance descriptor for REMSpotlightReminderViewProxy);
  result = sub_1A450C498(&qword_1EE722980, 255, type metadata accessor for REMSpotlightReminderViewProxy, (uint64_t)&protocol conformance descriptor for REMSpotlightReminderViewProxy);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1A45CFA84(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A450C498(&qword_1EE722988, 255, type metadata accessor for REMSpotlightListViewProxy, (uint64_t)&protocol conformance descriptor for REMSpotlightListViewProxy);
  result = sub_1A450C498(&qword_1EE722990, 255, type metadata accessor for REMSpotlightListViewProxy, (uint64_t)&protocol conformance descriptor for REMSpotlightListViewProxy);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType()
{
  return &type metadata for REMSpotlightBadgeType;
}

ValueMetadata *type metadata accessor for REMSpotlightAlarmProximity()
{
  return &type metadata for REMSpotlightAlarmProximity;
}

ValueMetadata *type metadata accessor for REMSpotlightAlarmVehicleTriggerEvent()
{
  return &type metadata for REMSpotlightAlarmVehicleTriggerEvent;
}

uint64_t destroy for REMSpotlightLocationType(uint64_t a1)
{
  return sub_1A45CF85C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s19ReminderKitInternal24REMSpotlightLocationTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A45CF754(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMSpotlightLocationType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A45CF754(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A45CF85C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMSpotlightLocationType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A45CF85C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSpotlightLocationType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3F && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 63);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x3E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x3F;
  if (v3 >= 0x3E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for REMSpotlightLocationType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 63;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3F)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1A45CFCB8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_1A45CFCC4(uint64_t result)
{
  *(_BYTE *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_1A45CFCD4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType()
{
  return &type metadata for REMSpotlightLocationType;
}

uint64_t method lookup function for REMSpotlightColor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSpotlightColor.__allocating_init(remColor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of REMSpotlightColor.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of REMSpotlightColor.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.priority.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.flagged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.hasAttachment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.notes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.hashtags.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.locationType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of REMSpotlightReminderViewProtocol.reminderID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t initializeBufferWithCopyOfBuffer for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v7 = a2[3];
    *(_QWORD *)(v4 + 16) = a2[2];
    *(_QWORD *)(v4 + 24) = v7;
    *(_QWORD *)(v4 + 32) = a2[4];
    v8 = *((unsigned __int8 *)a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 <= 0xFB)
    {
      v10 = a2[5];
      v11 = a2[6];
      sub_1A45CF754(v10, v11, v8);
      *(_QWORD *)(v4 + 40) = v10;
      *(_QWORD *)(v4 + 48) = v11;
      *(_BYTE *)(v4 + 56) = v8;
    }
    else
    {
      *(_OWORD *)(v4 + 40) = *(_OWORD *)(a2 + 5);
      *(_BYTE *)(v4 + 56) = *((_BYTE *)a2 + 56);
    }
    v12 = *(int *)(a3 + 40);
    v13 = (void *)(v4 + v12);
    v14 = (char *)a2 + v12;
    v15 = sub_1A46900FC();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t destroy for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 <= 0xFB)
    sub_1A45CF85C(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v4);
  v5 = a1 + *(int *)(a2 + 40);
  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 <= 0xFB)
  {
    v8 = *(_QWORD *)(a2 + 40);
    v9 = *(_QWORD *)(a2 + 48);
    sub_1A45CF754(v8, v9, v7);
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = v9;
    *(_BYTE *)(a1 + 56) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  }
  v10 = *(int *)(a3 + 40);
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = sub_1A46900FC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  unsigned int v8;
  __int128 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 40);
  v7 = (_OWORD *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFBu)
  {
    if (v8 <= 0xFB)
    {
      v13 = *(_QWORD *)(a2 + 40);
      v14 = *(_QWORD *)(a2 + 48);
      sub_1A45CF754(v13, v14, *(_BYTE *)(a2 + 56));
      v15 = *(_QWORD *)(a1 + 40);
      v16 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 48) = v14;
      v17 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v8;
      sub_1A45CF85C(v15, v16, v17);
    }
    else
    {
      sub_1A45D028C(a1 + 40);
      v10 = *(_BYTE *)(a2 + 56);
      *v6 = *v7;
      *(_BYTE *)(a1 + 56) = v10;
    }
  }
  else if (v8 <= 0xFB)
  {
    v11 = *(_QWORD *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    sub_1A45CF754(v11, v12, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 40) = v11;
    *(_QWORD *)(a1 + 48) = v12;
    *(_BYTE *)(a1 + 56) = v8;
  }
  else
  {
    v9 = *v7;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *v6 = v9;
  }
  v18 = *(int *)(a3 + 40);
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = sub_1A46900FC();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  v24 = v23(v19, 1, v21);
  v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v19, v20, v21);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_13;
  }
  if (v25)
  {
LABEL_13:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v19, v20, v21);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t sub_1A45D028C(uint64_t a1)
{
  sub_1A45CF85C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t initializeWithTake for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  const void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(int *)(a3 + 40);
  v5 = (const void *)(a2 + v4);
  v6 = (void *)(a1 + v4);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = sub_1A46900FC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v6, v5, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v6, v5, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for REMSpotlightReminderViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v7 = (_OWORD *)(a2 + 40);
  v8 = *(unsigned __int8 *)(a1 + 56);
  if (v8 > 0xFB)
    goto LABEL_4;
  v9 = *(unsigned __int8 *)(a2 + 56);
  if (v9 > 0xFB)
  {
    sub_1A45D028C(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *v7;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    goto LABEL_6;
  }
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *v7;
  *(_BYTE *)(a1 + 56) = v9;
  sub_1A45CF85C(v10, v11, v8);
LABEL_6:
  v12 = *(int *)(a3 + 40);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = sub_1A46900FC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSpotlightReminderViewProxy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45D053C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for REMSpotlightReminderViewProxy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45D05D4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 24) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1A45D064C()
{
  unint64_t v0;

  sub_1A44BF2AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t dispatch thunk of REMSpotlightListViewProtocol.badgeType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of REMSpotlightListViewProtocol.color.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of REMSpotlightListViewProtocol.listID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t initializeBufferWithCopyOfBuffer for REMSpotlightListViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    v9 = *((_BYTE *)a2 + 16);
    sub_1A44D88E0();
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = a2[3];
    v10 = *(int *)(a3 + 24);
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = sub_1A46900FC();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
    swift_retain();
    if (v15(v12, 1, v13))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  return a1;
}

uint64_t destroy for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1A44D88F8();
  swift_release();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t initializeWithCopy for REMSpotlightListViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(const void *, uint64_t, uint64_t);
  uint64_t v15;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_1A44D88E0();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = a2[3];
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1A46900FC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48);
  swift_retain();
  if (v14(v11, 1, v12))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t assignWithCopy for REMSpotlightListViewProxy(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;

  v6 = *a2;
  v7 = a2[1];
  v8 = *((_BYTE *)a2 + 16);
  sub_1A44D88E0();
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_BYTE *)(a1 + 16) = v8;
  sub_1A44D88F8();
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_retain();
  swift_release();
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1A46900FC();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v7) = v14(v10, 1, v12);
  v15 = v14(v11, 1, v12);
  if (!(_DWORD)v7)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t initializeWithTake for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 24);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1A46900FC();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for REMSpotlightListViewProxy(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1A44D88F8();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1A46900FC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSpotlightListViewProxy()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45D0D00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for REMSpotlightListViewProxy()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A45D0D8C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

void sub_1A45D0E04()
{
  unint64_t v0;

  sub_1A44BF2AC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t _s19ReminderKitInternal26REMSpotlightAlarmProximityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A45D0ED0 + 4 * byte_1A46A9560[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A45D0F04 + 4 * byte_1A46A955B[v4]))();
}

uint64_t sub_1A45D0F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D0F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45D0F14);
  return result;
}

uint64_t sub_1A45D0F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45D0F28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A45D0F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D0F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightListViewProxy.CodingKeys()
{
  return &type metadata for REMSpotlightListViewProxy.CodingKeys;
}

uint64_t getEnumTagSinglePayload for REMSpotlightReminderViewProxy.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSpotlightReminderViewProxy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A45D102C + 4 * byte_1A46A956A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A45D1060 + 4 * byte_1A46A9565[v4]))();
}

uint64_t sub_1A45D1060(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D1068(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45D1070);
  return result;
}

uint64_t sub_1A45D107C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45D1084);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A45D1088(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D1090(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightReminderViewProxy.CodingKeys()
{
  return &type metadata for REMSpotlightReminderViewProxy.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightColor.CodingKeys()
{
  return &type metadata for REMSpotlightColor.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType.CodingKeys()
{
  return &type metadata for REMSpotlightLocationType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType.LocationCodingKeys()
{
  return &type metadata for REMSpotlightLocationType.LocationCodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightLocationType.VehicleCodingKeys()
{
  return &type metadata for REMSpotlightLocationType.VehicleCodingKeys;
}

uint64_t _s19ReminderKitInternal24REMSpotlightLocationTypeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45D1140 + 4 * byte_1A46A9574[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A45D1174 + 4 * byte_1A46A956F[v4]))();
}

uint64_t sub_1A45D1174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D117C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45D1184);
  return result;
}

uint64_t sub_1A45D1190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45D1198);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45D119C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D11A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType.CodingKeys()
{
  return &type metadata for REMSpotlightBadgeType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType.EmojiCodingKeys()
{
  return &type metadata for REMSpotlightBadgeType.EmojiCodingKeys;
}

uint64_t _s19ReminderKitInternal17REMSpotlightColorC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A45D1210 + 4 * byte_1A46A9579[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A45D1230 + 4 * byte_1A46A957E[v4]))();
}

_BYTE *sub_1A45D1210(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A45D1230(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A45D1238(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A45D1240(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A45D1248(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A45D1250(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightBadgeType.EmblemCodingKeys()
{
  return &type metadata for REMSpotlightBadgeType.EmblemCodingKeys;
}

unint64_t sub_1A45D1270()
{
  unint64_t result;

  result = qword_1EE722B88;
  if (!qword_1EE722B88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9C74, &type metadata for REMSpotlightBadgeType.EmblemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722B88);
  }
  return result;
}

unint64_t sub_1A45D12B8()
{
  unint64_t result;

  result = qword_1EE722B90;
  if (!qword_1EE722B90)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9D2C, &type metadata for REMSpotlightBadgeType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722B90);
  }
  return result;
}

unint64_t sub_1A45D1300()
{
  unint64_t result;

  result = qword_1EE722B98;
  if (!qword_1EE722B98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9DE4, &type metadata for REMSpotlightBadgeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722B98);
  }
  return result;
}

unint64_t sub_1A45D1348()
{
  unint64_t result;

  result = qword_1EE722BA0;
  if (!qword_1EE722BA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9E9C, &type metadata for REMSpotlightLocationType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BA0);
  }
  return result;
}

unint64_t sub_1A45D1390()
{
  unint64_t result;

  result = qword_1EE722BA8;
  if (!qword_1EE722BA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9F54, &type metadata for REMSpotlightLocationType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BA8);
  }
  return result;
}

unint64_t sub_1A45D13D8()
{
  unint64_t result;

  result = qword_1EE722BB0;
  if (!qword_1EE722BB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA00C, &type metadata for REMSpotlightLocationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BB0);
  }
  return result;
}

unint64_t sub_1A45D1420()
{
  unint64_t result;

  result = qword_1EE722BB8;
  if (!qword_1EE722BB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA0C4, &type metadata for REMSpotlightColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BB8);
  }
  return result;
}

unint64_t sub_1A45D1468()
{
  unint64_t result;

  result = qword_1EE722BC0;
  if (!qword_1EE722BC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA17C, &type metadata for REMSpotlightReminderViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BC0);
  }
  return result;
}

unint64_t sub_1A45D14B0()
{
  unint64_t result;

  result = qword_1EE722BC8;
  if (!qword_1EE722BC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA234, &type metadata for REMSpotlightListViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BC8);
  }
  return result;
}

unint64_t sub_1A45D14F8()
{
  unint64_t result;

  result = qword_1EE722BD0;
  if (!qword_1EE722BD0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA1A4, &type metadata for REMSpotlightListViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BD0);
  }
  return result;
}

unint64_t sub_1A45D1540()
{
  unint64_t result;

  result = qword_1EE722BD8;
  if (!qword_1EE722BD8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA1CC, &type metadata for REMSpotlightListViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BD8);
  }
  return result;
}

unint64_t sub_1A45D1588()
{
  unint64_t result;

  result = qword_1EE722BE0;
  if (!qword_1EE722BE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA0EC, &type metadata for REMSpotlightReminderViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BE0);
  }
  return result;
}

unint64_t sub_1A45D15D0()
{
  unint64_t result;

  result = qword_1EE722BE8;
  if (!qword_1EE722BE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA114, &type metadata for REMSpotlightReminderViewProxy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BE8);
  }
  return result;
}

unint64_t sub_1A45D1618()
{
  unint64_t result;

  result = qword_1EE722BF0;
  if (!qword_1EE722BF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA034, &type metadata for REMSpotlightColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BF0);
  }
  return result;
}

unint64_t sub_1A45D1660()
{
  unint64_t result;

  result = qword_1EE722BF8;
  if (!qword_1EE722BF8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA05C, &type metadata for REMSpotlightColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722BF8);
  }
  return result;
}

unint64_t sub_1A45D16A8()
{
  unint64_t result;

  result = qword_1EE722C00;
  if (!qword_1EE722C00)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9EC4, &type metadata for REMSpotlightLocationType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C00);
  }
  return result;
}

unint64_t sub_1A45D16F0()
{
  unint64_t result;

  result = qword_1EE722C08;
  if (!qword_1EE722C08)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9EEC, &type metadata for REMSpotlightLocationType.LocationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C08);
  }
  return result;
}

unint64_t sub_1A45D1738()
{
  unint64_t result;

  result = qword_1EE722C10;
  if (!qword_1EE722C10)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9E0C, &type metadata for REMSpotlightLocationType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C10);
  }
  return result;
}

unint64_t sub_1A45D1780()
{
  unint64_t result;

  result = qword_1EE722C18;
  if (!qword_1EE722C18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9E34, &type metadata for REMSpotlightLocationType.VehicleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C18);
  }
  return result;
}

unint64_t sub_1A45D17C8()
{
  unint64_t result;

  result = qword_1EE722C20;
  if (!qword_1EE722C20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9F7C, &type metadata for REMSpotlightLocationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C20);
  }
  return result;
}

unint64_t sub_1A45D1810()
{
  unint64_t result;

  result = qword_1EE722C28;
  if (!qword_1EE722C28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9FA4, &type metadata for REMSpotlightLocationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C28);
  }
  return result;
}

unint64_t sub_1A45D1858()
{
  unint64_t result;

  result = qword_1EE722C30;
  if (!qword_1EE722C30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9C9C, &type metadata for REMSpotlightBadgeType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C30);
  }
  return result;
}

unint64_t sub_1A45D18A0()
{
  unint64_t result;

  result = qword_1EE722C38;
  if (!qword_1EE722C38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9CC4, &type metadata for REMSpotlightBadgeType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C38);
  }
  return result;
}

unint64_t sub_1A45D18E8()
{
  unint64_t result;

  result = qword_1EE722C40;
  if (!qword_1EE722C40)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9BE4, &type metadata for REMSpotlightBadgeType.EmblemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C40);
  }
  return result;
}

unint64_t sub_1A45D1930()
{
  unint64_t result;

  result = qword_1EE722C48;
  if (!qword_1EE722C48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9C0C, &type metadata for REMSpotlightBadgeType.EmblemCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C48);
  }
  return result;
}

unint64_t sub_1A45D1978()
{
  unint64_t result;

  result = qword_1EE722C50;
  if (!qword_1EE722C50)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9D54, &type metadata for REMSpotlightBadgeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C50);
  }
  return result;
}

unint64_t sub_1A45D19C0()
{
  unint64_t result;

  result = qword_1EE722C58;
  if (!qword_1EE722C58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46A9D7C, &type metadata for REMSpotlightBadgeType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C58);
  }
  return result;
}

uint64_t sub_1A45D1A04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696A6F6D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D656C626D65 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45D1AE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C6369686576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45D1BD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D69786F7270 && a2 == 0xE900000000000079)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A45D1CC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A45D1E48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x797469726F697270 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656767616C66 && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6361747441736168 && a2 == 0xED0000746E656D68 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7367617468736168 && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000065707954 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEA00000000004449)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1A45D216C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7079546567646162 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44497473696CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1A45D22BC()
{
  unint64_t result;

  result = qword_1EE722C60;
  if (!qword_1EE722C60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmVehicleTriggerEvent, &type metadata for REMSpotlightAlarmVehicleTriggerEvent);
    atomic_store(result, (unint64_t *)&qword_1EE722C60);
  }
  return result;
}

unint64_t sub_1A45D2300()
{
  unint64_t result;

  result = qword_1EE722C68;
  if (!qword_1EE722C68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSpotlightAlarmProximity, &type metadata for REMSpotlightAlarmProximity);
    atomic_store(result, (unint64_t *)&qword_1EE722C68);
  }
  return result;
}

unint64_t sub_1A45D2344()
{
  unint64_t result;

  result = qword_1EE722C78;
  if (!qword_1EE722C78)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA654, &type metadata for REMSpotlightColor_Legacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C78);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for REMSpotlightColor_Legacy(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMSpotlightColor_Legacy(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightColor_Legacy()
{
  return &type metadata for REMSpotlightColor_Legacy;
}

uint64_t storeEnumTagSinglePayload for REMSpotlightColor_Legacy.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A45D2430 + 4 * byte_1A46A9588[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A45D2464 + 4 * byte_1A46A9583[v4]))();
}

uint64_t sub_1A45D2464(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D246C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45D2474);
  return result;
}

uint64_t sub_1A45D2480(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45D2488);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A45D248C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D2494(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSpotlightColor_Legacy.CodingKeys()
{
  return &type metadata for REMSpotlightColor_Legacy.CodingKeys;
}

unint64_t sub_1A45D24B4()
{
  unint64_t result;

  result = qword_1EE722C80;
  if (!qword_1EE722C80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA5DC, &type metadata for REMSpotlightColor_Legacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C80);
  }
  return result;
}

unint64_t sub_1A45D24FC()
{
  unint64_t result;

  result = qword_1EE722C88;
  if (!qword_1EE722C88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA54C, &type metadata for REMSpotlightColor_Legacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C88);
  }
  return result;
}

unint64_t sub_1A45D2544()
{
  unint64_t result;

  result = qword_1EE722C90;
  if (!qword_1EE722C90)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AA574, &type metadata for REMSpotlightColor_Legacy.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722C90);
  }
  return result;
}

uint64_t sub_1A45D2598@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  void (*v9)(_BYTE *, uint64_t);
  void (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-v7];
  sub_1A4690E40();
  sub_1A4690E58();
  v9 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
  v9(v6, AssociatedTypeWitness);
  v10 = (void (*)(_BYTE *, _QWORD))sub_1A4690EF4();
  v12 = v11;
  v13 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, v12, v13);
  v10(v15, 0);
  return ((uint64_t (*)(_BYTE *, uint64_t))v9)(v8, AssociatedTypeWitness);
}

uint64_t Collection<>.extendedDiff(_:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD v6[6];

  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a4;
  return Collection.extendedDiff(_:isEqual:)(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1A443AB78, (uint64_t)v6, a2, a3, a5);
}

uint64_t sub_1A45D2734(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A462EC2C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A45D4EB0(v5);
  *a1 = v2;
  return result;
}

Swift::Int __swiftcall ExtendedDiff.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

uint64_t ExtendedDiff.source.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ExtendedDiff.elements.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1A45D27DC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
}

uint64_t (*sub_1A45D27EC(uint64_t (*result)(), unint64_t *a2))()
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v2 + 32);
    if (v3 < *(_QWORD *)(v4 + 16))
    {
      v5 = v4 + 24 * v3;
      v6 = *(_BYTE *)(v5 + 48);
      *(_OWORD *)result = *(_OWORD *)(v5 + 32);
      *((_BYTE *)result + 16) = v6;
      return nullsub_1;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_1A45D2838@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *result;
  if (*result < 0 || (v4 = result[1], v5 = v2[4], *(_QWORD *)(v5 + 16) < v4))
  {
    __break(1u);
  }
  else
  {
    v6 = v2[5];
    v8 = v2[2];
    v7 = v2[3];
    v9 = v2[1];
    a2[2] = *v2;
    a2[3] = v9;
    a2[4] = v8;
    a2[5] = v7;
    a2[6] = v5;
    a2[7] = v6;
    *a2 = v3;
    a2[1] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1A45D28C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v7;
  a1[5] = v6;
  v8 = *(_QWORD *)(v7 + 16);
  a1[6] = 0;
  a1[7] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL sub_1A45D2934()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16) == 0;
}

uint64_t sub_1A45D2948@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_1A45D59B4(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

__n128 sub_1A45D297C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1A45D2994()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
}

_QWORD *sub_1A45D29A0()
{
  _OWORD *v0;
  __int128 v1;
  _QWORD *v2;
  _OWORD v4[3];

  v1 = v0[1];
  v4[0] = *v0;
  v4[1] = v1;
  v4[2] = v0[2];
  v2 = sub_1A4459AC4((uint64_t)v4);
  sub_1A45D5948((uint64_t)v4);
  return v2;
}

unint64_t sub_1A45D29E8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1A45D39E0(a1, a2, a3);
}

uint64_t Collection.extendedDiff(_:isEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v13[2];
  _QWORD v14[2];

  Collection.diff(_:identitiesEqual:contentsEqual:)(a1, a2, a3, 0, 0, a4, a5, v14);
  v13[0] = v14[0];
  v13[1] = v14[1];
  Collection.extendedDiff(from:other:identitiesEqual:contentsEqual:)(v13, a1, (uint64_t)a2, a3, 0, 0, a4, a5, a6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t Collection.extendedDiff(from:other:identitiesEqual:contentsEqual:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  unint64_t v48;
  _QWORD *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  unint64_t v56;
  _QWORD *v57;
  int64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t result;
  _QWORD v68[6];
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  __int128 v82;
  char v83;
  _QWORD v84[2];
  uint64_t v85[2];
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;

  v80 = a8;
  v78 = a6;
  v79 = a7;
  v76 = a4;
  v77 = a5;
  v74 = a2;
  v75 = a3;
  v9 = a9;
  v11 = *a1;
  v10 = a1[1];
  v89 = MEMORY[0x1E0DEE9E8];
  v90 = MEMORY[0x1E0DEE9E8];
  v12 = *(_QWORD *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v63 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_55:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v64 = swift_bridgeObjectRetain();
    v65 = sub_1A45D3534(v64);
    swift_bridgeObjectRelease();
    v66 = v90;
    *v9 = v11;
    v9[1] = v10;
    v9[2] = v63;
    v9[3] = v65;
    v9[4] = v62;
    v9[5] = v66;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v71 = a9;
  v72 = v11 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v81 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v73 = v12;
  while (1)
  {
    v18 = v89;
    if (*(_QWORD *)(v89 + 16))
    {
      v19 = sub_1A4691C80();
      v20 = -1 << *(_BYTE *)(v18 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      {
        v22 = *(_QWORD *)(v18 + 48);
        if (*(_QWORD *)(v22 + 8 * v21) == v13)
          goto LABEL_5;
        v23 = ~v20;
        while (1)
        {
          v21 = (v21 + 1) & v23;
          if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
            break;
          if (*(_QWORD *)(v22 + 8 * v21) == v13)
            goto LABEL_5;
        }
      }
    }
    v24 = v90;
    if (*(_QWORD *)(v90 + 16))
    {
      v25 = sub_1A4691C80();
      v26 = -1 << *(_BYTE *)(v24 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
      {
        v28 = *(_QWORD *)(v24 + 48);
        if (*(_QWORD *)(v28 + 8 * v27) == v13)
          goto LABEL_5;
        v29 = ~v26;
        while (1)
        {
          v27 = (v27 + 1) & v29;
          if (((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            break;
          if (*(_QWORD *)(v28 + 8 * v27) == v13)
            goto LABEL_5;
        }
      }
    }
    if (v13 >= *(_QWORD *)(v11 + 16))
      break;
    v30 = (uint64_t *)(v72 + 24 * v13);
    v32 = *v30;
    v31 = v30[1];
    LODWORD(v17) = *((unsigned __int8 *)v30 + 16);
    v84[0] = v11;
    v84[1] = v10;
    swift_bridgeObjectRetain();
    v33 = swift_bridgeObjectRetain();
    v34 = sub_1A4505CC8(v33, v18);
    *(_QWORD *)&v82 = v32;
    *((_QWORD *)&v82 + 1) = v31;
    v83 = v17;
    MEMORY[0x1E0C80A78](v34);
    v68[2] = v79;
    v68[3] = v80;
    v68[4] = v75;
    v68[5] = v76;
    v69 = v77;
    v70 = v78;
    Collection.firstMatch(_:dirtyIndices:candidate:candidateIndex:other:isEqual:)((uint64_t)v84, v34, &v82, v13, v74, (uint64_t (*)(char *, char *))sub_1A45D3838, (uint64_t)v68, (uint64_t)v85);
    swift_bridgeObjectRelease();
    v35 = v88;
    if (v88 == 2)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v81 = sub_1A4438B4C(0, v81[2] + 1, 1, v81);
      v37 = v81[2];
      v36 = v81[3];
      if (v37 >= v36 >> 1)
        v81 = sub_1A4438B4C((_QWORD *)(v36 > 1), v37 + 1, 1, v81);
      v38 = v81;
      v81[2] = v37 + 1;
      v38[v37 + 4] = v13;
      if (v17 < 2)
        v31 = 0;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v12 = v73;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v14 = sub_1A44392C4(0, v14[2] + 1, 1, v14);
      v41 = v14[2];
      v40 = v14[3];
      if (v41 >= v40 >> 1)
        v14 = sub_1A44392C4((_QWORD *)(v40 > 1), v41 + 1, 1, v14);
      v14[2] = v41 + 1;
      v42 = &v14[3 * v41];
      v42[4] = v32;
      v16 = v42 + 4;
    }
    else
    {
      if (v86 != 3)
        goto LABEL_57;
      v17 = v85[0];
      v31 = v85[1];
      v43 = v87;
      v44 = swift_isUniquelyReferenced_nonNull_native();
      if ((v35 & 1) != 0)
      {
        if ((v44 & 1) == 0)
          v81 = sub_1A4438B4C(0, v81[2] + 1, 1, v81);
        v54 = v81[2];
        v53 = v81[3];
        v55 = v53 >> 1;
        v56 = v54 + 1;
        v12 = v73;
        if (v53 >> 1 <= v54)
        {
          v81 = sub_1A4438B4C((_QWORD *)(v53 > 1), v54 + 1, 1, v81);
          v53 = v81[3];
          v55 = v53 >> 1;
        }
        v57 = v81;
        v81[2] = v56;
        v57[v54 + 4] = v13;
        v58 = v54 + 2;
        if (v55 < v58)
          v81 = sub_1A4438B4C((_QWORD *)(v53 > 1), v58, 1, v81);
        v59 = v81;
        v81[2] = v58;
        v59[v56 + 4] = v43;
        sub_1A4466454(v85, v13);
        v52 = v43;
      }
      else
      {
        if ((v44 & 1) == 0)
          v81 = sub_1A4438B4C(0, v81[2] + 1, 1, v81);
        v46 = v81[2];
        v45 = v81[3];
        v47 = v45 >> 1;
        v48 = v46 + 1;
        v12 = v73;
        if (v45 >> 1 <= v46)
        {
          v81 = sub_1A4438B4C((_QWORD *)(v45 > 1), v46 + 1, 1, v81);
          v45 = v81[3];
          v47 = v45 >> 1;
        }
        v49 = v81;
        v81[2] = v48;
        v49[v46 + 4] = v43;
        v50 = v46 + 2;
        if (v47 < v50)
          v81 = sub_1A4438B4C((_QWORD *)(v45 > 1), v50, 1, v81);
        v51 = v81;
        v81[2] = v50;
        v51[v48 + 4] = v13;
        sub_1A4466454(v85, v43);
        v52 = v13;
      }
      sub_1A4466454(v85, v52);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1A44392C4(0, v14[2] + 1, 1, v14);
      v61 = v14[2];
      v60 = v14[3];
      if (v61 >= v60 >> 1)
        v14 = sub_1A44392C4((_QWORD *)(v60 > 1), v61 + 1, 1, v14);
      v14[2] = v61 + 1;
      v15 = &v14[3 * v61];
      v15[4] = v17;
      v16 = v15 + 4;
      LOBYTE(v17) = 3;
    }
    v16[1] = v31;
    *((_BYTE *)v16 + 16) = v17;
LABEL_5:
    if (++v13 == v12)
    {
      v62 = v14;
      v9 = v71;
      v63 = v81;
      goto LABEL_55;
    }
  }
  __break(1u);
LABEL_57:
  LODWORD(v70) = 0;
  v69 = 134;
  result = sub_1A4691638();
  __break(1u);
  return result;
}

uint64_t Collection.extendedDiff(_:identitiesEqual:contentsEqual:)@<X0>(unint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v17[2];
  _QWORD v18[2];

  Collection.diff(_:identitiesEqual:contentsEqual:)(a1, a2, a3, a4, a5, a6, a7, v18);
  v17[0] = v18[0];
  v17[1] = v18[1];
  Collection.extendedDiff(from:other:identitiesEqual:contentsEqual:)(v17, a1, (uint64_t)a2, a3, (uint64_t)a4, a5, a6, a7, a8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45D322C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t (*a5)(char *, char *))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  v16 = a3(a1, a2);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17(v15, a1, AssociatedTypeWitness);
  v17(v13, a2, AssociatedTypeWitness);
  if ((v16 & 1) != 0)
  {
    if (a5)
      v18 = a5(v15, v13);
    else
      v18 = 1;
  }
  else
  {
    v18 = 0;
  }
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v13, AssociatedTypeWitness);
  v19(v15, AssociatedTypeWitness);
  return v18 & 1;
}

uint64_t Collection.firstMatch(_:dirtyIndices:candidate:candidateIndex:other:isEqual:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(char *, char *)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int16 v21;
  __int128 v23;
  __int128 v26;
  char v27;
  __int128 v28;
  char v29;
  __int128 v30;
  __int16 v31;

  v8 = a4 + 1;
  if (__OFADD__(a4, 1))
    goto LABEL_23;
  v9 = *(_QWORD *)result;
  v10 = *(_QWORD *)(*(_QWORD *)result + 16);
  if (v10 >= v8)
  {
    if (v8 == v10)
    {
LABEL_4:
      *(_OWORD *)a8 = 0u;
      *(_OWORD *)(a8 + 16) = 0u;
      *(_BYTE *)(a8 + 32) = 2;
      return result;
    }
    v23 = *a3;
    v13 = a2 + 56;
    v14 = *((_BYTE *)a3 + 16);
    while (1)
    {
      if (v8 >= v10)
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        break;
      }
      if (*(_QWORD *)(a2 + 16))
      {
        result = sub_1A4691C80();
        v15 = -1 << *(_BYTE *)(a2 + 32);
        v16 = result & ~v15;
        if (((*(_QWORD *)(v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
        {
          v17 = *(_QWORD *)(a2 + 48);
          if (*(_QWORD *)(v17 + 8 * v16) == v8)
            goto LABEL_6;
          v18 = ~v15;
          while (1)
          {
            v16 = (v16 + 1) & v18;
            if (((*(_QWORD *)(v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
              break;
            if (*(_QWORD *)(v17 + 8 * v16) == v8)
              goto LABEL_6;
          }
        }
      }
      if (v8 < 0)
        goto LABEL_21;
      if ((unint64_t)v8 >= *(_QWORD *)(v9 + 16))
        goto LABEL_22;
      v19 = v9 + 32 + 24 * v8;
      v20 = *(_BYTE *)(v19 + 16);
      v28 = v23;
      v29 = v14;
      v26 = *(_OWORD *)v19;
      v27 = v20;
      result = Collection.createMatch(_:match:other:isEqual:)((uint64_t *)&v28, (uint64_t *)&v26, a5, a6, a7, (uint64_t)&v30);
      v21 = v31;
      if ((v31 & 0xFF00) != 0x200)
      {
        *(_OWORD *)a8 = v30;
        *(_QWORD *)(a8 + 16) = v21;
        *(_QWORD *)(a8 + 24) = v8;
        *(_BYTE *)(a8 + 32) = HIBYTE(v21) & 1;
        return result;
      }
LABEL_6:
      if (++v8 == v10)
        goto LABEL_4;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45D3534(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = swift_bridgeObjectRetain();
  v11 = sub_1A44DF69C(v2, 0, v1);
  sub_1A45D2734(&v11);
  swift_bridgeObjectRelease();
  v3 = v11;
  v4 = *(_QWORD *)(v11 + 16);
  if (v4)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1A445A898(0, v4, 0);
    v5 = v11;
    v6 = *(_QWORD *)(v11 + 16);
    v7 = 40;
    do
    {
      v8 = *(_QWORD *)(v3 + v7);
      v11 = v5;
      v9 = *(_QWORD *)(v5 + 24);
      if (v6 >= v9 >> 1)
      {
        sub_1A445A898(v9 > 1, v6 + 1, 1);
        v5 = v11;
      }
      *(_QWORD *)(v5 + 16) = v6 + 1;
      *(_QWORD *)(v5 + 8 * v6 + 32) = v8;
      v7 += 16;
      ++v6;
      --v4;
    }
    while (v4);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

uint64_t Collection.createMatch(_:match:other:isEqual:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(char *, char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  char v23;
  void (*v24)(char *, uint64_t);
  __int16 v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  _QWORD v29[3];
  uint64_t (*v30)(char *, char *);

  v29[2] = a5;
  v30 = a4;
  v29[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v29 - v15;
  v17 = *a1;
  v18 = *((unsigned __int8 *)a1 + 16);
  v19 = *a2;
  v20 = *((unsigned __int8 *)a2 + 16);
  if (!v18)
  {
    if (v20 == 1)
    {
      v26 = v17;
      sub_1A45D2598((uint64_t)v29 - v15);
      sub_1A45D2598((uint64_t)v13);
      v27 = v30(v16, v13);
      v28 = *(void (**)(char *, uint64_t))(v10 + 8);
      v28(v13, AssociatedTypeWitness);
      result = ((uint64_t (*)(char *, uint64_t))v28)(v16, AssociatedTypeWitness);
      if ((v27 & 1) != 0)
      {
        *(_QWORD *)a6 = v19;
        *(_QWORD *)(a6 + 8) = v26;
        v25 = 3;
        goto LABEL_13;
      }
    }
LABEL_12:
    *(_QWORD *)a6 = 0;
    *(_QWORD *)(a6 + 8) = 0;
    v25 = 512;
    goto LABEL_13;
  }
  if (v18 != 1 || v20 != 0)
    goto LABEL_12;
  v22 = v17;
  sub_1A45D2598((uint64_t)v29 - v15);
  sub_1A45D2598((uint64_t)v13);
  v23 = v30(v16, v13);
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, AssociatedTypeWitness);
  result = ((uint64_t (*)(char *, uint64_t))v24)(v16, AssociatedTypeWitness);
  if ((v23 & 1) == 0)
    goto LABEL_12;
  *(_QWORD *)a6 = v22;
  *(_QWORD *)(a6 + 8) = v19;
  v25 = 259;
LABEL_13:
  *(_WORD *)(a6 + 16) = v25;
  return result;
}

uint64_t sub_1A45D3838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1A45D322C(a1, a2, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(uint64_t (**)(char *, char *))(v2 + 48));
}

void ExtendedDiff.Element.debugDescription.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1A45D3880()
{
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return 10313;
}

_QWORD *sub_1A45D3964(_QWORD *result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  _BYTE *v5;
  unint64_t v6;
  char v7;
  unint64_t v8;

  if (!a2)
  {
LABEL_11:
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    *result = a4;
    result[1] = a5;
    result[2] = a3;
    return (_QWORD *)a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (*(_QWORD *)(a4 + 16))
    {
      v5 = (_BYTE *)(a4 + 48);
      v6 = 1;
      while (1)
      {
        v7 = *v5;
        *(_OWORD *)a2 = *((_OWORD *)v5 - 1);
        *(_BYTE *)(a2 + 16) = v7;
        if (a3 == v6)
          goto LABEL_12;
        v8 = *(_QWORD *)(a4 + 16);
        if (v6 == v8)
        {
          a3 = v6;
          goto LABEL_12;
        }
        a2 += 24;
        v5 += 24;
        if (v6++ >= v8)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A45D39E0(unint64_t result, uint64_t a2, unint64_t a3)
{
  __int128 *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  _BYTE *v7;
  unint64_t v8;
  char v9;
  unint64_t v10;

  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  if (!a2)
  {
LABEL_11:
    a3 = 0;
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    *(_OWORD *)result = v4;
    *(_OWORD *)(result + 16) = v5;
    *(_OWORD *)(result + 32) = v6;
    *(_QWORD *)(result + 48) = a3;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = (_BYTE *)(v6 + 48);
      v8 = 1;
      while (1)
      {
        v9 = *v7;
        *(_OWORD *)a2 = *((_OWORD *)v7 - 1);
        *(_BYTE *)(a2 + 16) = v9;
        if (a3 == v8)
          goto LABEL_12;
        v10 = *(_QWORD *)(v6 + 16);
        if (v8 == v10)
        {
          a3 = v8;
          goto LABEL_12;
        }
        a2 += 24;
        v7 += 24;
        if (v8++ >= v10)
        {
          __break(1u);
          goto LABEL_11;
        }
      }
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45D3A6C(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1A45D3C68(uint64_t result, uint64_t *a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t *v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    result = sub_1A46915FC();
    v8 = 0;
    v9 = 0;
    v10 = 0;
    v4 = result | 0x8000000000000000;
    if (v6)
      goto LABEL_3;
LABEL_37:
    v11 = 0;
    a3 = 0;
LABEL_46:
    *v7 = v4;
    v7[1] = v8;
    v7[2] = v9;
    v7[3] = v11;
    v7[4] = v10;
    return a3;
  }
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 64;
  v20 = ~v19;
  v21 = -v19;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v10 = v22 & *(_QWORD *)(a4 + 64);
  v9 = v20;
  if (!a2)
    goto LABEL_37;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v23 = v9;
  v11 = 0;
  v12 = 0;
  v24 = (unint64_t)(v9 + 64) >> 6;
  while ((v4 & 0x8000000000000000) != 0)
  {
    if (!sub_1A4691620()
      || (swift_unknownObjectRelease(),
          sub_1A45D5ACC(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          v15 = v25,
          result = swift_unknownObjectRelease(),
          !v25))
    {
      a3 = v12;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
LABEL_6:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
      goto LABEL_45;
  }
  if (v10)
  {
    v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v14 = v13 | (v11 << 6);
LABEL_23:
    result = (uint64_t)*(id *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    if (!result)
      goto LABEL_44;
    v15 = result;
    goto LABEL_6;
  }
  v16 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v16 >= v24)
    goto LABEL_40;
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_22;
  v11 += 2;
  if (v16 + 1 >= v24)
  {
    v10 = 0;
    v11 = v16;
    goto LABEL_44;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
  {
LABEL_18:
    v16 = v11;
LABEL_22:
    v10 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
    goto LABEL_23;
  }
  v18 = v16 + 2;
  if (v16 + 2 >= v24)
    goto LABEL_40;
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
  {
LABEL_21:
    v16 = v18;
    goto LABEL_22;
  }
  v11 = v16 + 3;
  if (v16 + 3 >= v24)
  {
    v10 = 0;
    v11 = v16 + 2;
    goto LABEL_44;
  }
  v17 = *(_QWORD *)(v8 + 8 * v11);
  if (v17)
    goto LABEL_18;
  v18 = v16 + 4;
  if (v16 + 4 >= v24)
  {
LABEL_40:
    v10 = 0;
LABEL_44:
    a3 = v12;
    goto LABEL_45;
  }
  v17 = *(_QWORD *)(v8 + 8 * v18);
  if (v17)
    goto LABEL_21;
  while (1)
  {
    v16 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v16 >= v24)
    {
      v10 = 0;
      v11 = v24 - 1;
      goto LABEL_44;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1A45D3F30(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A46900FC();
  v41 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1A4473730((uint64_t)v10);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1A45D4278(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1A45D4474(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    v20 = 8 * v16;
    v21 = *(void **)(*(_QWORD *)(a4 + 48) + v20);
    ++v13;
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + v20);
    *v11 = v21;
    v11[1] = v22;
    if (v13 == v10)
    {
      v23 = v21;
      goto LABEL_38;
    }
    v11 += 2;
    result = v21;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1A45D4678(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v26 = -1 << *(_BYTE *)(a4 + 32);
  v27 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v15);
    v21 = *v19;
    v20 = v19[1];
    v22 = (uint64_t *)(*(_QWORD *)(a4 + 56) + 24 * v15);
    v23 = *v22;
    v24 = v22[1];
    v25 = v22[2];
    *v10 = v21;
    v10[1] = v20;
    v10[2] = v23;
    v10[3] = v24;
    v10[4] = v25;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 5;
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v26;
      result = v27;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

int64_t *sub_1A45D48A0(int64_t *result, int64_t *a2, int64_t a3, int64_t a4, int64_t a5)
{
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64x2_t v14;
  int64x2_t *v15;
  int64x2_t v16;
  _QWORD *v17;
  int64_t v18;

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
LABEL_6:
    v5 = a4;
LABEL_7:
    *result = a4;
    result[1] = a5;
    result[2] = v5;
    return (int64_t *)a3;
  }
  if (a3 < 0)
    goto LABEL_31;
  if (a5 == a4)
  {
LABEL_5:
    a3 = 0;
    goto LABEL_6;
  }
  if (a5 < a4)
    goto LABEL_32;
  if (a5 > a4)
  {
    v5 = a4 + 1;
    *a2 = a4;
    v6 = a3 - 1;
    if (a3 == 1)
      goto LABEL_7;
    v7 = a3 - 2;
    if (a3 - 2 >= (unint64_t)(~a4 + a5))
      v7 = ~a4 + a5;
    if (v7 < v6)
      v6 = v7;
    v8 = v6 + 1;
    if (v8 > 4)
    {
      v11 = v8 & 3;
      if ((v8 & 3) == 0)
        v11 = 4;
      v12 = v8 - v11;
      v9 = v8 - v11 + 1;
      v13 = v5 + v12;
      v10 = &a2[v12];
      v14 = vaddq_s64(vdupq_n_s64(v5), (int64x2_t)xmmword_1A469B0A0);
      v15 = (int64x2_t *)(a2 + 3);
      v16 = vdupq_n_s64(2uLL);
      do
      {
        v15[-1] = v14;
        *v15 = vaddq_s64(v14, v16);
        v14 = vaddq_s64(v14, vdupq_n_s64(4uLL));
        v15 += 2;
        v12 -= 4;
      }
      while (v12);
      v5 = v13;
    }
    else
    {
      v9 = 1;
      v10 = a2;
    }
    v17 = v10 + 1;
    v18 = v5;
    while (a3 != v9)
    {
      if (a5 == v18)
      {
        v5 = a5;
        a3 = a5 - a4;
        goto LABEL_7;
      }
      if (v18 >= a5)
        goto LABEL_30;
      ++v9;
      v5 = v18 + 1;
      *v17++ = v18++;
      if (a3 == v9)
        goto LABEL_7;
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A45D49D0(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1A45D4BC8(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = result;
  if ((a4 & 0xC000000000000001) == 0)
  {
    v10 = 0;
    v20 = -1 << *(_BYTE *)(a4 + 32);
    v8 = a4 + 56;
    v9 = ~v20;
    v21 = -v20;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v11 = v22 & *(_QWORD *)(a4 + 56);
    v24 = result;
    if (a2)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
    goto LABEL_46;
  }
  sub_1A46912D8();
  type metadata accessor for REMObjectID_Codable();
  sub_1A45D5A84();
  result = (_QWORD *)sub_1A4690DB0();
  v4 = v27;
  v8 = v28;
  v9 = v29;
  v10 = v30;
  v11 = v31;
  v24 = v7;
  if (!v6)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1A4691338())
        goto LABEL_45;
      type metadata accessor for REMObjectID_Codable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      return result;
    }
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
        break;
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    v15 = result;
    if (!result)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v25)
  {
LABEL_42:
    v11 = 0;
    v10 = v18;
    goto LABEL_45;
  }
  v17 = *(_QWORD *)(v8 + 8 * v16);
  if (v17)
    goto LABEL_23;
  v19 = v10 + 6;
  while (v25 != v19)
  {
    v17 = *(_QWORD *)(v8 + 8 * v19++);
    if (v17)
    {
      v16 = v19 - 1;
      goto LABEL_23;
    }
  }
  v11 = 0;
  v10 = v25 - 1;
  v9 = v23;
LABEL_46:
  *v24 = v4;
  v24[1] = v8;
  v24[2] = v9;
  v24[3] = v10;
  v24[4] = v11;
  return (_QWORD *)v12;
}

uint64_t sub_1A45D4EB0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t i;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v83 = 0;
      v84 = *a1;
      for (i = 1; i != v3; ++i)
      {
        v86 = *(_QWORD *)(v84 + 16 * i);
        v87 = v83;
        do
        {
          if (v86 >= *(_QWORD *)(v84 + v87))
            break;
          if (!v84)
            goto LABEL_140;
          v88 = (_QWORD *)(v84 + v87);
          v89 = *(_QWORD *)(v84 + v87 + 24);
          *(_OWORD *)(v84 + v87 + 16) = *(_OWORD *)(v84 + v87);
          *v88 = v86;
          v88[1] = v89;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v6 = result;
  v98 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_102:
      v90 = v12;
      v101 = v9;
      if (v13 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v13 - 2;
          if (v13 < 2)
            goto LABEL_131;
          if (!v91)
            goto LABEL_144;
          v93 = v90;
          v94 = *(_QWORD *)&v90[16 * v92 + 32];
          v95 = *(_QWORD *)&v90[16 * v13 + 24];
          sub_1A4511EE4((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v93 = sub_1A462EBC8((uint64_t)v93);
          if (v92 >= *((_QWORD *)v93 + 2))
            goto LABEL_133;
          v96 = &v93[16 * v92 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v93 + 2);
          if (v13 > v97)
            goto LABEL_134;
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          v90 = v93;
          *((_QWORD *)v93 + 2) = v97 - 1;
          v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v101 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v101 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FBC8);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v101 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 - 16;
  v100 = *a1 + 32;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v102 = v6;
  v103 = v3;
  v104 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(_QWORD *)(v11 + 16 * v10);
      v16 = *(_QWORD *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (uint64_t *)(v100 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v20 = *v17;
          v17 += 2;
          v19 = v20;
          if (v15 < v16 == v20 >= v18)
            break;
          ++v10;
          v18 = v19;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_137;
        if (v14 < v10)
        {
          v21 = (__int128 *)(v99 + 16 * v10);
          v22 = v10;
          v23 = v14;
          v24 = (__int128 *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_143;
              v25 = *v24;
              *v24 = *v21;
              *v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_135;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v26 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_138;
    if (v26 >= v3)
      v26 = v3;
    if (v26 < v14)
      break;
    if (v10 != v26)
    {
      v27 = v99 + 16 * v10;
      do
      {
        v28 = *(_QWORD *)(v11 + 16 * v10);
        v29 = v14;
        v30 = v27;
        do
        {
          if (v28 >= *(_QWORD *)v30)
            break;
          if (!v11)
            goto LABEL_141;
          v31 = *(_QWORD *)(v30 + 24);
          *(_OWORD *)(v30 + 16) = *(_OWORD *)v30;
          *(_QWORD *)v30 = v28;
          *(_QWORD *)(v30 + 8) = v31;
          v30 -= 16;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 16;
      }
      while (v10 != v26);
      v10 = v26;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v33 = *((_QWORD *)v12 + 2);
    v32 = *((_QWORD *)v12 + 3);
    v13 = v33 + 1;
    v11 = v104;
    if (v33 >= v32 >> 1)
    {
      v82 = sub_1A462E5B0((char *)(v32 > 1), v33 + 1, 1, v12);
      v11 = v104;
      v12 = v82;
    }
    *((_QWORD *)v12 + 2) = v13;
    v34 = v12 + 32;
    v35 = &v12[16 * v33 + 32];
    *(_QWORD *)v35 = v14;
    *((_QWORD *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        v36 = v13 - 1;
        if (v13 >= 4)
        {
          v41 = &v34[16 * v13];
          v42 = *((_QWORD *)v41 - 8);
          v43 = *((_QWORD *)v41 - 7);
          v47 = __OFSUB__(v43, v42);
          v44 = v43 - v42;
          if (v47)
            goto LABEL_119;
          v46 = *((_QWORD *)v41 - 6);
          v45 = *((_QWORD *)v41 - 5);
          v47 = __OFSUB__(v45, v46);
          v39 = v45 - v46;
          v40 = v47;
          if (v47)
            goto LABEL_120;
          v48 = v13 - 2;
          v49 = &v34[16 * v13 - 32];
          v51 = *(_QWORD *)v49;
          v50 = *((_QWORD *)v49 + 1);
          v47 = __OFSUB__(v50, v51);
          v52 = v50 - v51;
          if (v47)
            goto LABEL_122;
          v47 = __OFADD__(v39, v52);
          v53 = v39 + v52;
          if (v47)
            goto LABEL_125;
          if (v53 >= v44)
          {
            v71 = &v34[16 * v36];
            v73 = *(_QWORD *)v71;
            v72 = *((_QWORD *)v71 + 1);
            v47 = __OFSUB__(v72, v73);
            v74 = v72 - v73;
            if (v47)
              goto LABEL_129;
            v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v65 = *((_QWORD *)v12 + 4);
            v66 = *((_QWORD *)v12 + 5);
            v47 = __OFSUB__(v66, v65);
            v58 = v66 - v65;
            v59 = v47;
            goto LABEL_77;
          }
          v38 = *((_QWORD *)v12 + 4);
          v37 = *((_QWORD *)v12 + 5);
          v47 = __OFSUB__(v37, v38);
          v39 = v37 - v38;
          v40 = v47;
        }
        if ((v40 & 1) != 0)
          goto LABEL_121;
        v48 = v13 - 2;
        v54 = &v34[16 * v13 - 32];
        v56 = *(_QWORD *)v54;
        v55 = *((_QWORD *)v54 + 1);
        v57 = __OFSUB__(v55, v56);
        v58 = v55 - v56;
        v59 = v57;
        if (v57)
          goto LABEL_124;
        v60 = &v34[16 * v36];
        v62 = *(_QWORD *)v60;
        v61 = *((_QWORD *)v60 + 1);
        v47 = __OFSUB__(v61, v62);
        v63 = v61 - v62;
        if (v47)
          goto LABEL_127;
        if (__OFADD__(v58, v63))
          goto LABEL_128;
        if (v58 + v63 >= v39)
        {
          v64 = v39 < v63;
LABEL_83:
          if (v64)
            v36 = v48;
          goto LABEL_85;
        }
LABEL_77:
        if ((v59 & 1) != 0)
          goto LABEL_123;
        v67 = &v34[16 * v36];
        v69 = *(_QWORD *)v67;
        v68 = *((_QWORD *)v67 + 1);
        v47 = __OFSUB__(v68, v69);
        v70 = v68 - v69;
        if (v47)
          goto LABEL_126;
        if (v70 < v58)
          goto LABEL_15;
LABEL_85:
        v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11)
          goto LABEL_142;
        v76 = v12;
        v77 = &v34[16 * v75];
        v78 = *(_QWORD *)v77;
        v79 = &v34[16 * v36];
        v80 = *((_QWORD *)v79 + 1);
        sub_1A4511EE4((char *)(v11 + 16 * *(_QWORD *)v77), (char *)(v11 + 16 * *(_QWORD *)v79), v11 + 16 * v80, __dst);
        if (v1)
          goto LABEL_93;
        if (v80 < v78)
          goto LABEL_116;
        if (v36 > *((_QWORD *)v76 + 2))
          goto LABEL_117;
        *(_QWORD *)v77 = v78;
        *(_QWORD *)&v34[16 * v75 + 8] = v80;
        v81 = *((_QWORD *)v76 + 2);
        if (v36 >= v81)
          goto LABEL_118;
        v12 = v76;
        v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((_QWORD *)v76 + 2) = v81 - 1;
        v11 = v104;
        if (v81 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v102;
    v3 = v103;
    if (v10 >= v103)
    {
      v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

unint64_t sub_1A45D557C(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45D55A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1A45D55A0()
{
  unint64_t result;

  result = qword_1EE722CC0;
  if (!qword_1EE722CC0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for ExtendedDiff, &type metadata for ExtendedDiff);
    atomic_store(result, (unint64_t *)&qword_1EE722CC0);
  }
  return result;
}

unint64_t sub_1A45D55E8()
{
  unint64_t result;

  result = qword_1EE722CC8;
  if (!qword_1EE722CC8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for ExtendedDiff, &type metadata for ExtendedDiff);
    atomic_store(result, (unint64_t *)&qword_1EE722CC8);
  }
  return result;
}

uint64_t sub_1A45D562C()
{
  return sub_1A443AD20(&qword_1EE722CD0, &qword_1EE722CD8, MEMORY[0x1E0DEA228]);
}

uint64_t sub_1A45D5658()
{
  return sub_1A443AD20(&qword_1EE722CE0, &qword_1EE722CE8, MEMORY[0x1E0DEDE48]);
}

uint64_t sub_1A45D5684()
{
  return sub_1A443AD20(&qword_1EE722CF0, &qword_1EE722CF8, MEMORY[0x1E0DEC908]);
}

uint64_t destroy for ExtendedDiff()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ExtendedDiff(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ExtendedDiff(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for ExtendedDiff(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExtendedDiff(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExtendedDiff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ExtendedDiff()
{
  return &type metadata for ExtendedDiff;
}

ValueMetadata *type metadata accessor for ExtendedDiff.Element()
{
  return &type metadata for ExtendedDiff.Element;
}

uint64_t sub_1A45D5948(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A45D59B4(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1))
      v3 = a2 - 1;
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL))
      v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v4 = v3 + 1;
    if (v4 >= 5)
    {
      v7 = v4 & 3;
      if ((v4 & 3) == 0)
        v7 = 4;
      v5 = v4 - v7;
      v8 = 0uLL;
      v9 = (int64x2_t)(unint64_t)result;
      v10 = vdupq_n_s64(1uLL);
      v11 = v5;
      do
      {
        v9 = vaddq_s64(v9, v10);
        v8 = vaddq_s64(v8, v10);
        v11 -= 4;
      }
      while (v11);
      v6 = vaddvq_s64(vaddq_s64(v8, v9));
    }
    else
    {
      v5 = 0;
      v6 = result;
    }
    v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    v13 = v5 + result - a3;
    v14 = a2 - v5;
    result = v6;
    while (1)
    {
      if (!v13)
        return 0;
      if (!v12)
        break;
      ++result;
      ++v12;
      ++v13;
      if (!--v14)
        return result;
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

unint64_t sub_1A45D5A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE71D198;
  if (!qword_1EE71D198)
  {
    v1 = type metadata accessor for REMObjectID_Codable();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EE71D198);
  }
  return result;
}

unint64_t sub_1A45D5ACC()
{
  unint64_t result;

  result = qword_1EE71CF80;
  if (!qword_1EE71CF80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE71CF80);
  }
  return result;
}

uint64_t sub_1A45D5B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for Patch(319, *(_QWORD *)(a1 + 16), a3, a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1A45D5B88(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  void (*v21)(void);
  _QWORD *v22;
  _QWORD *v23;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = ((v8 + 8) & ~v8) + v9;
  if (v10 <= ((v10 + v8) & ~v8) + v9)
    v10 = ((v10 + v7) & ~(unint64_t)v7) + v9;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  v12 = v7 & 0x100000;
  v13 = v8 <= 7 && v12 == 0;
  if (v13 && (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= 0x18)
  {
    v14 = *((unsigned __int8 *)a2 + v11);
    if (v14 >= 3)
    {
      if (v11 <= 3)
        v15 = v11;
      else
        v15 = 4;
      __asm { BR              X13 }
    }
    v17 = ~v8;
    v18 = v11 + 1;
    if (v14 == 2)
    {
      *a1 = *a2;
      v20 = ((unint64_t)a2 + v8 + 8) & v17;
      v21 = *(void (**)(void))(v6 + 16);
      v21();
      ((void (*)(unint64_t, uint64_t, uint64_t))v21)((v9 + v8 + (((unint64_t)v4 + v8 + 8) & v17)) & v17, (v9 + v8 + v20) & v17, v5);
      v19 = 2;
    }
    else
    {
      if (v14 != 1)
      {
        *a1 = *a2;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v8 + 8) & v17, ((unint64_t)a2 + v8 + 8) & v17, v5);
        *((_BYTE *)v4 + v11) = 0;
        goto LABEL_24;
      }
      *a1 = *a2;
      v19 = 1;
    }
    *((_BYTE *)v4 + v11) = v19;
LABEL_24:
    v22 = (_QWORD *)(((unint64_t)v4 + v18 + 7) & 0xFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)a2 + v18 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    *(_QWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFF8);
    return v4;
  }
  v16 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v16 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
  swift_retain();
  return v4;
}

uint64_t sub_1A45D5DD0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v4 + 8) & ~v4) + v5;
  if (v6 <= ((v6 + v4) & ~v4) + v5)
    v6 = ((v6 + v4) & ~v4) + v5;
  if (v6 <= 8)
    v6 = 8;
  v7 = *(unsigned __int8 *)(result + v6);
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X14 }
  }
  v9 = ~v4;
  if (v7 == 2)
  {
    v10 = (result + v4 + 8) & v9;
    v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v14(v10, v2);
    v11 = (v5 + v4 + v10) & v9;
    v12 = v2;
    v13 = (uint64_t (*)(uint64_t, uint64_t))v14;
    return v13(v11, v12);
  }
  if (v7 != 1)
  {
    v11 = (result + v4 + 8) & v9;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    v12 = *(_QWORD *)(a2 + 16);
    return v13(v11, v12);
  }
  return result;
}

_QWORD *sub_1A45D5F28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(unint64_t, unint64_t, uint64_t);
  _QWORD *v16;
  _QWORD *v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = ((v7 + 8) & ~v7) + v8;
  if (v9 <= ((v9 + v7) & ~v7) + v8)
    v9 = ((v9 + v7) & ~v7) + v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X13 }
  }
  v13 = ~v7;
  if (v11 == 2)
  {
    *a1 = *a2;
    v15 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v15(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
    v15((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v13)) & v13, (v8 + v7 + (((unint64_t)a2 + v7 + 8) & v13)) & v13, v5);
    v14 = 2;
  }
  else
  {
    if (v11 != 1)
    {
      *a1 = *a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
      *((_BYTE *)a1 + v10) = 0;
      goto LABEL_17;
    }
    *a1 = *a2;
    v14 = 1;
  }
  *((_BYTE *)a1 + v10) = v14;
LABEL_17:
  v16 = (_QWORD *)(((unint64_t)a1 + v10 + 8) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)a2 + v10 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1A45D60F4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  unsigned int v20;
  uint64_t v21;
  char v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  if (a1 == a2)
  {
    v14 = *(_QWORD *)(v6 + 64);
    v15 = ((v7 + 8) & ~v7) + v14;
    v16 = ((v15 + v7) & ~v7) + v14;
    if (v15 > v16)
      v16 = v15;
    if (v16 <= 8)
      v11 = 8;
    else
      v11 = v16;
  }
  else
  {
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = *(_QWORD *)(v6 + 64);
    v10 = ((v8 + 8) & ~v8) + v9;
    if (v10 <= ((v10 + v8) & ~v8) + v9)
      v10 = ((v10 + v8) & ~v8) + v9;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = *((unsigned __int8 *)a1 + v11);
    if (v12 >= 3)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    v17 = ~v8;
    if (v12 == 2)
    {
      v18 = ((unint64_t)a1 + v8 + 8) & v17;
      v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v19(v18, *(_QWORD *)(a3 + 16));
      v19((v9 + v8 + v18) & v17, v5);
    }
    else if (v12 != 1)
    {
      (*(void (**)(unint64_t, _QWORD))(v6 + 8))(((unint64_t)a1 + v8 + 8) & v17, *(_QWORD *)(a3 + 16));
    }
    v20 = *((unsigned __int8 *)a2 + v11);
    if (v20 >= 3)
    {
      if (v11 <= 3)
        v21 = v11;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 2)
    {
      *a1 = *a2;
      v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
      v23(((unint64_t)a1 + v8 + 8) & v17, ((unint64_t)a2 + v8 + 8) & v17, v5);
      v23((v9 + v8 + (((unint64_t)a1 + v8 + 8) & v17)) & v17, (v9 + v8 + (((unint64_t)a2 + v8 + 8) & v17)) & v17, v5);
      v22 = 2;
      goto LABEL_31;
    }
    if (v20 == 1)
    {
      *a1 = *a2;
      v22 = 1;
LABEL_31:
      *((_BYTE *)a1 + v11) = v22;
      goto LABEL_32;
    }
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)a1 + v8 + 8) & v17, ((unint64_t)a2 + v8 + 8) & v17, v5);
    *((_BYTE *)a1 + v11) = 0;
  }
LABEL_32:
  v24 = (_QWORD *)(((unint64_t)a1 + v11 + 8) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)a2 + v11 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  *(_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1A45D6400(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  void (*v15)(unint64_t, unint64_t, uint64_t);
  _QWORD *v16;
  _QWORD *v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = ((v7 + 8) & ~v7) + v8;
  if (v9 <= ((v9 + v7) & ~v7) + v8)
    v9 = ((v9 + v7) & ~v7) + v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 3)
  {
    if (v10 <= 3)
      v12 = v10;
    else
      v12 = 4;
    __asm { BR              X13 }
  }
  v13 = ~v7;
  if (v11 == 2)
  {
    *a1 = *a2;
    v15 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
    v15(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
    v15((v8 + v7 + (((unint64_t)a1 + v7 + 8) & v13)) & v13, (v8 + v7 + (((unint64_t)a2 + v7 + 8) & v13)) & v13, v5);
    v14 = 2;
  }
  else
  {
    if (v11 != 1)
    {
      *a1 = *a2;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)a1 + v7 + 8) & v13, ((unint64_t)a2 + v7 + 8) & v13, v5);
      *((_BYTE *)a1 + v10) = 0;
      goto LABEL_17;
    }
    *a1 = *a2;
    v14 = 1;
  }
  *((_BYTE *)a1 + v10) = v14;
LABEL_17:
  v16 = (_QWORD *)(((unint64_t)a1 + v10 + 8) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)a2 + v10 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1A45D65CC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  unsigned int v20;
  uint64_t v21;
  char v22;
  void (*v23)(unint64_t, unint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  if (a1 == a2)
  {
    v14 = *(_QWORD *)(v6 + 64);
    v15 = ((v7 + 8) & ~v7) + v14;
    v16 = ((v15 + v7) & ~v7) + v14;
    if (v15 > v16)
      v16 = v15;
    if (v16 <= 8)
      v11 = 8;
    else
      v11 = v16;
  }
  else
  {
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = *(_QWORD *)(v6 + 64);
    v10 = ((v8 + 8) & ~v8) + v9;
    if (v10 <= ((v10 + v8) & ~v8) + v9)
      v10 = ((v10 + v8) & ~v8) + v9;
    if (v10 <= 8)
      v11 = 8;
    else
      v11 = v10;
    v12 = *((unsigned __int8 *)a1 + v11);
    if (v12 >= 3)
    {
      if (v11 <= 3)
        v13 = v11;
      else
        v13 = 4;
      __asm { BR              X12 }
    }
    v17 = ~v8;
    if (v12 == 2)
    {
      v18 = ((unint64_t)a1 + v8 + 8) & v17;
      v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v19(v18, *(_QWORD *)(a3 + 16));
      v19((v9 + v8 + v18) & v17, v5);
    }
    else if (v12 != 1)
    {
      (*(void (**)(unint64_t, _QWORD))(v6 + 8))(((unint64_t)a1 + v8 + 8) & v17, *(_QWORD *)(a3 + 16));
    }
    v20 = *((unsigned __int8 *)a2 + v11);
    if (v20 >= 3)
    {
      if (v11 <= 3)
        v21 = v11;
      else
        v21 = 4;
      __asm { BR              X12 }
    }
    if (v20 == 2)
    {
      *a1 = *a2;
      v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
      v23(((unint64_t)a1 + v8 + 8) & v17, ((unint64_t)a2 + v8 + 8) & v17, v5);
      v23((v9 + v8 + (((unint64_t)a1 + v8 + 8) & v17)) & v17, (v9 + v8 + (((unint64_t)a2 + v8 + 8) & v17)) & v17, v5);
      v22 = 2;
      goto LABEL_31;
    }
    if (v20 == 1)
    {
      *a1 = *a2;
      v22 = 1;
LABEL_31:
      *((_BYTE *)a1 + v11) = v22;
      goto LABEL_32;
    }
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32))(((unint64_t)a1 + v8 + 8) & v17, ((unint64_t)a2 + v8 + 8) & v17, v5);
    *((_BYTE *)a1 + v11) = 0;
  }
LABEL_32:
  v24 = (_QWORD *)(((unint64_t)a1 + v11 + 8) & 0xFFFFFFFFFFFFFFF8);
  v25 = (_QWORD *)(((unint64_t)a2 + v11 + 8) & 0xFFFFFFFFFFFFFFF8);
  *v24 = *v25;
  *(_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A45D68D8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v15;
  unsigned int v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = ((v4 + 8) & ~v4) + v5;
  v7 = ((v6 + v4) & ~v4) + v5;
  if (v6 > v7)
    v7 = v6;
  if (v7 <= 8)
    v7 = 8;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_25;
  v8 = (((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  v9 = a2 - 252;
  v10 = v8 & 0xFFFFFFF8;
  if ((v8 & 0xFFFFFFF8) != 0)
    v9 = 2;
  if (v9 >= 0x10000)
    v11 = 4;
  else
    v11 = 2;
  if (v9 < 0x100)
    v12 = 1;
  else
    v12 = v11;
  if (v12 == 4)
  {
    v13 = *(_DWORD *)((char *)a1 + v8);
    if (!v13)
      goto LABEL_25;
  }
  else if (v12 == 2)
  {
    v13 = *(unsigned __int16 *)((char *)a1 + v8);
    if (!v13)
    {
LABEL_25:
      v16 = *((unsigned __int8 *)a1 + v7);
      if (v16 >= 3)
        return (v16 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  else
  {
    v13 = *((unsigned __int8 *)a1 + v8);
    if (!v13)
      goto LABEL_25;
  }
  v15 = v13 - 1;
  if (v10)
  {
    v15 = 0;
    LODWORD(v10) = *a1;
  }
  return (v10 | v15) + 254;
}

void sub_1A45D69BC(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = ((v6 + 8) & ~v6) + v7;
  v9 = ((v8 + v6) & ~v6) + v7;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v9 = 8;
  if (a3 < 0xFE)
  {
    v12 = 0u;
    if (a2 > 0xFD)
      goto LABEL_15;
  }
  else
  {
    v10 = a3 - 252;
    if ((((v9 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v12 = 1;
    else
      v12 = v11;
    if (a2 > 0xFD)
    {
LABEL_15:
      if ((((v9 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF8)
      {
        v13 = a2 - 254;
        bzero(a1, (((v9 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8);
        *a1 = v13;
      }
      __asm { BR              X10 }
    }
  }
  __asm { BR              X11 }
}

void sub_1A45D6AC0(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 + v3) = 0;
  if (a1)
    *(_BYTE *)(v2 + a2) = -(char)a1;
}

void sub_1A45D6AE8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A45D6ADCLL);
}

uint64_t type metadata accessor for SortedPatchElement(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SortedPatchElement);
}

uint64_t sub_1A45D6B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;

  v4 = type metadata accessor for SortedPatchElement(255, a2, a3, a4);
  v7 = type metadata accessor for DoublyLinkedList(0, v4, v5, v6);
  type metadata accessor for LinkedList(0, v4, v8, v9);
  v10 = swift_bridgeObjectRetain();
  v11 = sub_1A45D8A24(v10);
  v15 = sub_1A45D8A30(v11, v12, v13, v14);
  if (!v15)
    return sub_1A4690BF4();
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = (uint64_t *)swift_retain();
    sub_1A45D6D8C(v16);
    v15 = swift_release();
  }
  MEMORY[0x1E0C80A78](v15);
  swift_retain();
  MEMORY[0x1A85A0000](&unk_1A46AAAA8, v7);
  v17 = sub_1A4690AEC();
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_1A45D6C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = type metadata accessor for Patch(0, a4, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  result = type metadata accessor for SortedPatchElement(0, a4, v11, v12);
  *(_QWORD *)(a5 + *(int *)(result + 28)) = a2;
  *(_QWORD *)(a5 + *(int *)(result + 32)) = a3;
  return result;
}

uint64_t sub_1A45D6CC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  v3 = *a1;
  v4 = (uint64_t)a1 + *(_QWORD *)(*a1 + 104);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v4 + *(int *)(v5 + 32));
  v7 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 104);
  result = swift_beginAccess();
  v9 = *(_QWORD *)(v7 + *(int *)(v5 + 32));
  v10 = v6 - v9;
  if (v6 == v9)
    return 128;
  if (__OFSUB__(v6, v9))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  if (v10 < 0)
  {
    v11 = __OFSUB__(0, v10);
    v10 = v9 - v6;
    if (v11)
      goto LABEL_13;
  }
  if (v10 == 1)
    return v9 >= v6;
  if (v9 < v6)
    return 64;
  return 65;
}

uint64_t sub_1A45D6D8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *a1;
  sub_1A45D96EC();
  v2 = *(_QWORD *)(v1 + 80);
  type metadata accessor for DoublyLinkedList(255, v2, v3, v4);
  v5 = sub_1A469138C();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEC1E0], v5);
  sub_1A4690A80();
  while (1)
  {
    sub_1A4691380();
    if (!v14)
      return swift_release();
    Strong = swift_weakLoadStrong();
    v7 = v14 + *(_QWORD *)(*(_QWORD *)v14 + 104);
    swift_beginAccess();
    if (Strong)
    {
      while (1)
      {
        v8 = Strong + *(_QWORD *)(*(_QWORD *)Strong + 104);
        swift_beginAccess();
        if (*(_QWORD *)(v8 + *(int *)(v2 + 28)) >= *(_QWORD *)(v7 + *(int *)(v2 + 28)))
          break;
        v9 = (uint64_t *)swift_retain();
        sub_1A45D6EF4(v9, v14, v10, v11);
        v12 = swift_weakLoadStrong();
        swift_release_n();
        Strong = v12;
        if (!v12)
          goto LABEL_2;
      }
      swift_release();
    }
LABEL_2:
    swift_release();
  }
}

uint64_t sub_1A45D6EF4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  char *v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  void (*v28)(char *, char *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t TupleTypeMetadata3;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v6 = *(_QWORD *)(*a1 + 80);
  v7 = *(_QWORD *)(v6 + 16);
  v8 = type metadata accessor for Patch(255, v7, a3, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v10 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v12 = (char *)&v44 - v11;
  v48 = *(_QWORD *)(v6 - 8);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v47 = (uint64_t)&v44 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v44 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v44 - v21;
  result = sub_1A45D6CC4(a1, a2);
  if ((result & 0x80) != 0)
  {
    result = sub_1A4691638();
    __break(1u);
  }
  else if ((result & 1) == 0)
  {
    v44 = v7;
    v24 = (char *)a1 + *(_QWORD *)(*a1 + 104);
    swift_beginAccess();
    v25 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
    v25(v22, v24, v6);
    v26 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 104);
    swift_beginAccess();
    v25(v20, (char *)v26, v6);
    v27 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
    v45 = *(_QWORD *)(v8 - 8);
    v28 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v28(v12, v22, v8);
    v46 = v27;
    v28(v27, v20, v8);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v25(v15, (char *)v26, v6);
        v30 = v47;
        sub_1A45D72B8(v6, 1, v31, v32, v47);
        v33 = v48;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v6);
        swift_beginAccess();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40))(v26, v30, v6);
        swift_endAccess();
      }
      else
      {
        v40 = v44;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        v42 = &v12[*(int *)(TupleTypeMetadata3 + 48)];
        v43 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v40 - 8) + 8);
        v43(&v12[*(int *)(TupleTypeMetadata3 + 64)], v40);
        v43(v42, v40);
      }
    }
    else
    {
      v34 = v44;
      v35 = &v12[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      v25(v15, (char *)v26, v6);
      v36 = v47;
      sub_1A45D72B8(v6, -1, v37, v38, v47);
      v39 = v48;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v6);
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40))(v26, v36, v6);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v35, v34);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v8);
  }
  return result;
}

uint64_t sub_1A45D72B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v9 = *(_QWORD *)(a1 + 16);
  v10 = type metadata accessor for Patch(0, v9, a3, a4);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - v11;
  sub_1A45D7354(a2, v13, (char *)&v15 - v11);
  return sub_1A45D6C48((uint64_t)v12, *(_QWORD *)(v5 + *(int *)(a1 + 28)), *(_QWORD *)(v5 + *(int *)(a1 + 32)), v9, a5);
}

uint64_t sub_1A45D7354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v23;

  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v7, v9, a2);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
      goto LABEL_9;
    v11 = *(_QWORD *)v7 + a1;
    if (!__OFADD__(*(_QWORD *)v7, a1))
      goto LABEL_10;
    __break(1u);
  }
  v12 = *(_QWORD *)v7;
  v13 = *(_QWORD *)(a2 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(&a3[*(int *)(TupleTypeMetadata2 + 48)], &v7[*(int *)(TupleTypeMetadata2 + 48)], v13);
  v11 = v12 + a1;
  if (!__OFADD__(v12, a1))
    goto LABEL_10;
  __break(1u);
LABEL_9:
  v15 = *(_QWORD *)v7;
  v16 = *(_QWORD *)(a2 + 16);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v18 = *(int *)(TupleTypeMetadata3 + 48);
  v19 = &v7[v18];
  v20 = &v7[*(int *)(TupleTypeMetadata3 + 64)];
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
  v21(&a3[v18], v19, v16);
  result = ((uint64_t (*)(char *, char *, uint64_t))v21)(&a3[*(int *)(TupleTypeMetadata3 + 64)], v20, v16);
  v11 = v15 + a1;
  if (!__OFADD__(v15, a1))
  {
LABEL_10:
    *(_QWORD *)a3 = v11;
    return swift_storeEnumTagMultiPayload();
  }
  __break(1u);
  return result;
}

BOOL sub_1A45D74E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = type metadata accessor for SortedPatchElement(0, *(_QWORD *)(v4 + 16), a3, a4);
  return *(_QWORD *)(a1 + *(int *)(v7 + 32)) < *(_QWORD *)(a2 + *(int *)(v7 + 32));
}

uint64_t String.base64EncodedHMACString(using:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722D00);
  v24 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46908DC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A469066C();
  v25 = *(_QWORD *)(v11 - 8);
  v26 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  v30 = a2;
  sub_1A44695A8(a1, a2);
  sub_1A4690660();
  sub_1A46908D0();
  v14 = sub_1A46908AC();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v17 = 0;
  if (v16 >> 60 != 15)
  {
    v29 = v14;
    v30 = v16;
    sub_1A4690690();
    sub_1A45D79AC();
    sub_1A45D79F4();
    sub_1A4690678();
    v31 = v4;
    v32 = sub_1A45D7A38();
    v18 = __swift_allocate_boxed_opaque_existential_0(&v29);
    v19 = v24;
    (*(void (**)(uint64_t *, char *, uint64_t))(v24 + 16))(v18, v6, v4);
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    sub_1A468FDF0();
    v20 = v27;
    v21 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    v17 = sub_1A468FFB8();
    sub_1A44695EC(v20, v21);
    sub_1A44D65D0(v14, v16);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
  return v17;
}

uint64_t String.base64EncodedHMACString(using:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17[3];
  uint64_t v18;
  unint64_t v19;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722D00);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A46908DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46908D0();
  v8 = sub_1A46908AC();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = 0;
  if (v10 >> 60 != 15)
  {
    v17[0] = v8;
    v17[1] = v10;
    sub_1A4690690();
    sub_1A45D79AC();
    sub_1A45D79F4();
    sub_1A4690678();
    v18 = v0;
    v19 = sub_1A45D7A38();
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
    (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(boxed_opaque_existential_0, v3, v0);
    __swift_project_boxed_opaque_existential_1(v17, v18);
    sub_1A468FDF0();
    v13 = v16[1];
    v14 = v16[2];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    v11 = sub_1A468FFB8();
    sub_1A44695EC(v13, v14);
    sub_1A44D65D0(v8, v10);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v11;
}

unint64_t sub_1A45D79AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE722D08;
  if (!qword_1EE722D08)
  {
    v1 = sub_1A4690690();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CA9930], v1);
    atomic_store(result, (unint64_t *)&qword_1EE722D08);
  }
  return result;
}

unint64_t sub_1A45D79F4()
{
  unint64_t result;

  result = qword_1EE722D10;
  if (!qword_1EE722D10)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EE722D10);
  }
  return result;
}

unint64_t sub_1A45D7A38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE722D18;
  if (!qword_1EE722D18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE722D00);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CA9470], v1);
    atomic_store(result, (unint64_t *)&qword_1EE722D18);
  }
  return result;
}

_BYTE *sub_1A45D7A84@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1A46598C8(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1A45D7AF8((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1A45D7B70((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1A45D7AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A468FCB8();
  swift_allocObject();
  result = sub_1A468FC88();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A468FFA0();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1A45D7B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1A468FCB8();
  swift_allocObject();
  result = sub_1A468FC88();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

void REMTimeOfDay.startHour.getter()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  _QWORD v23[3];

  v0 = (id)_REMGetLocalizedString();
  v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v3 = v2;

  v4 = HIBYTE(v3) & 0xF;
  v5 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v6 = HIBYTE(v3) & 0xF;
  else
    v6 = v1 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    if ((v3 & 0x1000000000000000) != 0)
    {
      sub_1A45D8530(v1, v3, 10);
LABEL_43:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v3 & 0x2000000000000000) == 0)
    {
      if ((v1 & 0x1000000000000000) != 0)
        v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v7 = (unsigned __int8 *)sub_1A46914E8();
      sub_1A45D8728(v7, v5, 10);
      goto LABEL_43;
    }
    v23[0] = v1;
    v23[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (v1 == 43)
    {
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          v8 = 10 * (BYTE1(v1) - 48) + (BYTE2(v1) - 48);
          v9 = v4 - 3;
          if (v9)
          {
            v10 = (unsigned __int8 *)v23 + 3;
            do
            {
              v11 = *v10 - 48;
              if (v11 > 9)
                break;
              v12 = 10 * v8;
              if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
                break;
              v8 = v12 + v11;
              if (__OFADD__(v12, v11))
                break;
              ++v10;
              --v9;
            }
            while (v9);
          }
        }
        goto LABEL_43;
      }
    }
    else
    {
      if (v1 != 45)
      {
        if (v4)
        {
          if ((v1 - 48) <= 9u && v4 != 1 && (BYTE1(v1) - 48) <= 9u)
          {
            v13 = 10 * (v1 - 48) + (BYTE1(v1) - 48);
            v14 = v4 - 2;
            if (v14)
            {
              v15 = (unsigned __int8 *)v23 + 2;
              do
              {
                v16 = *v15 - 48;
                if (v16 > 9)
                  break;
                v17 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
                  break;
                v13 = v17 + v16;
                if (__OFADD__(v17, v16))
                  break;
                ++v15;
                --v14;
              }
              while (v14);
            }
          }
        }
        goto LABEL_43;
      }
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          v18 = -10 * (BYTE1(v1) - 48) - (BYTE2(v1) - 48);
          v19 = v4 - 3;
          if (v19)
          {
            v20 = (unsigned __int8 *)v23 + 3;
            do
            {
              v21 = *v20 - 48;
              if (v21 > 9)
                break;
              v22 = 10 * v18;
              if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
                break;
              v18 = v22 - v21;
              if (__OFSUB__(v22, v21))
                break;
              ++v20;
              --v19;
            }
            while (v19);
          }
        }
        goto LABEL_43;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void REMTimeOfDay.endHour.getter()
{
  id v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  unsigned int v21;
  uint64_t v22;
  _QWORD v23[3];

  v0 = (id)_REMGetLocalizedString();
  v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v3 = v2;

  v4 = HIBYTE(v3) & 0xF;
  v5 = v1 & 0xFFFFFFFFFFFFLL;
  if ((v3 & 0x2000000000000000) != 0)
    v6 = HIBYTE(v3) & 0xF;
  else
    v6 = v1 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    if ((v3 & 0x1000000000000000) != 0)
    {
      sub_1A45D8530(v1, v3, 10);
LABEL_43:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v3 & 0x2000000000000000) == 0)
    {
      if ((v1 & 0x1000000000000000) != 0)
        v7 = (unsigned __int8 *)((v3 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v7 = (unsigned __int8 *)sub_1A46914E8();
      sub_1A45D8728(v7, v5, 10);
      goto LABEL_43;
    }
    v23[0] = v1;
    v23[1] = v3 & 0xFFFFFFFFFFFFFFLL;
    if (v1 == 43)
    {
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          v8 = 10 * (BYTE1(v1) - 48) + (BYTE2(v1) - 48);
          v9 = v4 - 3;
          if (v9)
          {
            v10 = (unsigned __int8 *)v23 + 3;
            do
            {
              v11 = *v10 - 48;
              if (v11 > 9)
                break;
              v12 = 10 * v8;
              if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63)
                break;
              v8 = v12 + v11;
              if (__OFADD__(v12, v11))
                break;
              ++v10;
              --v9;
            }
            while (v9);
          }
        }
        goto LABEL_43;
      }
    }
    else
    {
      if (v1 != 45)
      {
        if (v4)
        {
          if ((v1 - 48) <= 9u && v4 != 1 && (BYTE1(v1) - 48) <= 9u)
          {
            v13 = 10 * (v1 - 48) + (BYTE1(v1) - 48);
            v14 = v4 - 2;
            if (v14)
            {
              v15 = (unsigned __int8 *)v23 + 2;
              do
              {
                v16 = *v15 - 48;
                if (v16 > 9)
                  break;
                v17 = 10 * v13;
                if ((unsigned __int128)(v13 * (__int128)10) >> 64 != (10 * v13) >> 63)
                  break;
                v13 = v17 + v16;
                if (__OFADD__(v17, v16))
                  break;
                ++v15;
                --v14;
              }
              while (v14);
            }
          }
        }
        goto LABEL_43;
      }
      if (v4)
      {
        if (v4 != 1 && (BYTE1(v1) - 48) <= 9u && v4 != 2 && (BYTE2(v1) - 48) <= 9u)
        {
          v18 = -10 * (BYTE1(v1) - 48) - (BYTE2(v1) - 48);
          v19 = v4 - 3;
          if (v19)
          {
            v20 = (unsigned __int8 *)v23 + 3;
            do
            {
              v21 = *v20 - 48;
              if (v21 > 9)
                break;
              v22 = 10 * v18;
              if ((unsigned __int128)(v18 * (__int128)10) >> 64 != (10 * v18) >> 63)
                break;
              v18 = v22 - v21;
              if (__OFSUB__(v22, v21))
                break;
              ++v20;
              --v19;
            }
            while (v19);
          }
        }
        goto LABEL_43;
      }
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

BOOL static REMTimeOfDay.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMTimeOfDay.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t REMTimeOfDay.hashValue.getter()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

unsigned __int8 *sub_1A45D828C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45D8728(a1, a2, a3);
}

unsigned __int8 *sub_1A45D82A0(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1A45D82B4(a1, a2, a3);
}

unsigned __int8 *sub_1A45D82B4(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1A45D8530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1A4690A50();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1A44CC114();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1A46914E8();
  }
LABEL_7:
  v11 = sub_1A45D8728(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unint64_t sub_1A45D8618()
{
  unint64_t result;

  result = qword_1EE722D20;
  if (!qword_1EE722D20)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTimeOfDay, &type metadata for REMTimeOfDay);
    atomic_store(result, (unint64_t *)&qword_1EE722D20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for REMTimeOfDay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A45D86A8 + 4 * byte_1A46AA8F5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A45D86DC + 4 * byte_1A46AA8F0[v4]))();
}

uint64_t sub_1A45D86DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D86E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45D86ECLL);
  return result;
}

uint64_t sub_1A45D86F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45D8700);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A45D8704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45D870C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMTimeOfDay()
{
  return &type metadata for REMTimeOfDay;
}

unsigned __int8 *sub_1A45D8728(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1A45D89A8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A45D8A24(uint64_t a1)
{
  return sub_1A45D91F8(a1, sub_1A45D8B50);
}

uint64_t sub_1A45D8A30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!a1)
    return 0;
  v5 = type metadata accessor for LinkedList(0, *(_QWORD *)(v4 + 80), a3, a4);
  swift_retain();
  MEMORY[0x1A85A0000](&unk_1A46AAB10, v5);
  v6 = sub_1A4690C9C();
  swift_allocObject();
  v7 = sub_1A45D923C(v6);
  swift_retain();
  swift_release();
  if (v7)
    swift_release();
  return v7;
}

char *sub_1A45D8AEC(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)swift_allocObject();
  v5 = *(_QWORD *)v4;
  *((_QWORD *)v4 + 2) = a1;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 32))(&v4[*(_QWORD *)(v5 + 96)], a2);
  return v4;
}

uint64_t sub_1A45D8B50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)(char *, char *);
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (**v32)(char *, char *);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = sub_1A46911A0();
  v32 = *(void (***)(char *, char *))(v4 - 8);
  v33 = (char *)v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = MEMORY[0x1E0C80A78](v5);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v31 - v12;
  v35 = a1;
  v14 = sub_1A4690C78();
  swift_bridgeObjectRetain();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v14);
  sub_1A469081C();
  v15 = v36;
  v36 = a1;
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v14);
  sub_1A4690EAC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3) == 1)
  {
    swift_bridgeObjectRelease();
    v32[1](v7, v33);
    type metadata accessor for LinkedList(0, v3, v16, v17);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v19 = *(void (***)(char *, char *))(v8 + 32);
  ((void (*)(char *, char *, uint64_t))v19)(v13, v7, v3);
  v36 = v15;
  v20 = sub_1A4691698();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DECD08], v20);
  result = sub_1A4690EA0();
  v24 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v24 & 0x8000000000000000) == 0)
  {
    v32 = v19;
    v33 = v13;
    if (result == 1)
    {
      v28 = 0;
    }
    else
    {
      type metadata accessor for LinkedList(0, v3, v22, v23);
      v25 = 0;
      v26 = 0;
      do
      {
        v27 = v26 + 1;
        v36 = v15;
        sub_1A45D2598((uint64_t)v11);
        v28 = (char *)swift_allocObject();
        v29 = *(_QWORD *)v28;
        *((_QWORD *)v28 + 2) = v25;
        (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v29 + 80) - 8) + 32))(&v28[*(_QWORD *)(v29 + 96)], v11);
        v25 = v28;
        v26 = v27;
      }
      while (v24 != v27);
    }
    swift_bridgeObjectRelease();
    v30 = v33;
    v18 = v34;
    *(_QWORD *)(v34 + 16) = v28;
    ((void (*)(uint64_t, char *, uint64_t))v32)(v18 + *(_QWORD *)(*(_QWORD *)v18 + 96), v30, v3);
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45D8E10()
{
  return sub_1A45D957C();
}

uint64_t sub_1A45D8E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v7 = *(char **)(a1 + 16);
  if (v7)
  {
    v8 = *((_QWORD *)v7 + 2);
    swift_beginAccess();
    *v6 = v8;
    swift_retain();
    swift_retain();
    swift_release();
    v9 = *(_QWORD *)(a2 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a3, &v7[*(_QWORD *)(*(_QWORD *)v7 + 96)], a2);
    swift_release();
    v10 = 0;
  }
  else
  {
    v9 = *(_QWORD *)(a2 - 8);
    v10 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a3, v10, 1, a2);
}

char *sub_1A45D8F0C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 96)]);
  v1 = *((_QWORD *)v0 + 2);
  *((_QWORD *)v0 + 2) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v2 = *(_QWORD *)(v1 + 16);
      swift_retain();
      swift_release();
      v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_1A45D8F88()
{
  return sub_1A4502CAC((void (*)(void))sub_1A45D8F0C);
}

uint64_t type metadata accessor for LinkedList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LinkedList);
}

uint64_t sub_1A45D8FA0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1A45D9024@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A45D8E10();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A45D9060(uint64_t a1, uint64_t a2)
{
  return sub_1A45D98FC(a1, a2, (void (*)(_QWORD, _QWORD))type metadata accessor for LinkedList);
}

void sub_1A45D906C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for LinkedList(0, *(_QWORD *)(a4 + 80), a3, a4);
  JUMPOUT(0x1A859E308);
}

uint64_t sub_1A45D90C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for LinkedList(0, *(_QWORD *)(a4 + 80), a3, a4);
  return sub_1A4690ABC();
}

uint64_t sub_1A45D9130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1A45D917C(a1, a2);
  return v4;
}

char *sub_1A45D917C(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;

  v5 = *(_QWORD *)v2;
  swift_weakInit();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 104)], a2);
  *((_QWORD *)v2 + 2) = a1;
  if (a1)
    swift_weakAssign();
  return v2;
}

uint64_t sub_1A45D91EC(uint64_t a1)
{
  return sub_1A45D91F8(a1, sub_1A45D923C);
}

uint64_t sub_1A45D91F8(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  swift_allocObject();
  return a2(a1);
}

uint64_t sub_1A45D923C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = sub_1A46911A0();
  v29 = *(_QWORD *)(v4 - 8);
  v30 = (void (*)(char *, char *, uint64_t))v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  v9 = MEMORY[0x1E0C80A78](v5);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v31 = (char *)&v29 - v12;
  swift_weakInit();
  v33 = a1;
  v13 = sub_1A4690C78();
  swift_bridgeObjectRetain();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF20], v13);
  sub_1A469081C();
  v14 = v34;
  v34 = a1;
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v13);
  sub_1A4690EAC();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3) == 1)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v29 + 8))(v7, v30);
    swift_weakDestroy();
    type metadata accessor for DoublyLinkedList(0, v3, v15, v16);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v18 = v31;
  v19 = v7;
  v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v31, v19, v3);
  v34 = v14;
  v21 = sub_1A4691698();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DECD08], v21);
  result = sub_1A4690EA0();
  v25 = result - 1;
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((v25 & 0x8000000000000000) == 0)
  {
    if (result == 1)
    {
      swift_bridgeObjectRelease();
      v17 = v32;
      v20(&v32[*(_QWORD *)(*(_QWORD *)v32 + 104)], v18, v3);
      *((_QWORD *)v17 + 2) = 0;
    }
    else
    {
      v30 = v20;
      type metadata accessor for DoublyLinkedList(0, v3, v23, v24);
      v26 = 0;
      v27 = 0;
      do
      {
        v34 = v14;
        swift_retain();
        sub_1A45D2598((uint64_t)v11);
        v28 = swift_allocObject();
        sub_1A45D917C(v27, (uint64_t)v11);
        if (v27)
        {
          swift_weakAssign();
          swift_release();
        }
        ++v26;
        v27 = v28;
      }
      while (v25 != v26);
      swift_bridgeObjectRelease();
      v17 = v32;
      v30(&v17[*(_QWORD *)(*(_QWORD *)v17 + 104)], v31, v3);
      *((_QWORD *)v17 + 2) = v28;
      swift_weakAssign();
    }
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45D9560()
{
  return sub_1A45D957C();
}

uint64_t sub_1A45D957C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  return sub_1A46913A4();
}

uint64_t sub_1A45D95F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = (_QWORD *)(a1 + 16);
  swift_beginAccess();
  v7 = *(_QWORD **)(a1 + 16);
  if (v7)
  {
    v8 = v7[2];
    swift_beginAccess();
    *v6 = v8;
    swift_retain();
    swift_retain();
    swift_release();
    v9 = (char *)v7 + *(_QWORD *)(*v7 + 104);
    swift_beginAccess();
    v10 = *(_QWORD *)(a2 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(a3, v9, a2);
    swift_release();
    v11 = 0;
  }
  else
  {
    v10 = *(_QWORD *)(a2 - 8);
    v11 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v11, 1, a2);
}

uint64_t sub_1A45D96EC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  v4 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v3 + 16) = v4;
  *(_QWORD *)(v3 + 24) = v2;
  type metadata accessor for DoublyLinkedList(0, v4, v5, v6);
  swift_retain();
  return sub_1A46913A4();
}

uint64_t sub_1A45D9770@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v4 = (_QWORD *)(a1 + 16);
  result = swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = *(_QWORD *)(v6 + 16);
    swift_beginAccess();
    *v4 = v7;
    swift_retain();
    swift_retain();
    result = swift_release();
  }
  *a2 = v6;
  return result;
}

char *sub_1A45D9804()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)v0;
  swift_weakDestroy();
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 104)]);
  v2 = *((_QWORD *)v0 + 2);
  *((_QWORD *)v0 + 2) = 0;
  if (v2)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v3 = *(_QWORD *)(v2 + 16);
      swift_retain();
      swift_release();
      v2 = v3;
    }
    while (v3);
  }
  swift_release();
  return v0;
}

uint64_t sub_1A45D988C()
{
  return sub_1A4502CAC((void (*)(void))sub_1A45D9804);
}

uint64_t type metadata accessor for DoublyLinkedList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DoublyLinkedList);
}

void sub_1A45D98A4()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45D98B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A45D9560();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1A45D98F0(uint64_t a1, uint64_t a2)
{
  return sub_1A45D98FC(a1, a2, (void (*)(_QWORD, _QWORD))type metadata accessor for DoublyLinkedList);
}

uint64_t sub_1A45D98FC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v3;

  a3(0, *(_QWORD *)(a1 + 80));
  v3 = sub_1A45D9A08();
  swift_release();
  return v3;
}

void sub_1A45D9944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for DoublyLinkedList(0, *(_QWORD *)(a4 + 80), a3, a4);
  JUMPOUT(0x1A859E308);
}

uint64_t sub_1A45D999C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for DoublyLinkedList(0, *(_QWORD *)(a4 + 80), a3, a4);
  return sub_1A4690ABC();
}

uint64_t sub_1A45D9A0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A45D9A30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1A45D9770(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1A45D9A38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A45D95F4(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1A45D9A40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A45D9A64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1A45D8E2C(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 16), a1);
}

uint64_t NSDateFormatter.testing_string(from:)()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = v0;
  v2 = (void *)sub_1A4690030();
  v3 = objc_msgSend(v1, sel_stringFromDate_, v2);

  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4466118();
  v4 = sub_1A4691224();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1A45D9B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE722D28);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE722D28);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void static REMSuggestedAttributesFeatureExtractor.train(in:parameters:)(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE v9[8];
  uint64_t v10;
  uint64_t v11;
  id v12;
  __int128 v13[3];
  char v14;

  v4 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v4;
  v13[2] = *(_OWORD *)(a1 + 32);
  v14 = *(_BYTE *)(a1 + 48);
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  sub_1A448637C((uint64_t)v5, v13, v9);

  if (!v2)
  {
    v6 = v9[0];
    v7 = v10;
    v8 = v11;

    *(_BYTE *)a2 = v6;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v8;
  }
}

uint64_t static REMSuggestedAttributesFeatureExtractor.supportsSecureCoding.getter()
{
  return 1;
}

id REMSuggestedAttributesFeatureExtractor.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id REMSuggestedAttributesFeatureExtractor.init(coder:)(void *a1)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_init);

  return v3;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.success.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.featureString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Result __swiftcall REMSuggestedAttributesFeatureExtractor.Result.init(success:featureString:)(Swift::Bool success, Swift::String featureString)
{
  uint64_t v2;
  ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Result result;

  *(_BYTE *)v2 = success;
  *(Swift::String *)(v2 + 8) = featureString;
  result.featureString = featureString;
  result.success = success;
  return result;
}

uint64_t sub_1A45D9D70()
{
  _BYTE *v0;

  if (*v0)
    return 0x5365727574616566;
  else
    return 0x73736563637573;
}

uint64_t sub_1A45D9DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45DB938(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45D9DDC()
{
  sub_1A45D9F54();
  return sub_1A4691DB8();
}

uint64_t sub_1A45D9E04()
{
  sub_1A45D9F54();
  return sub_1A4691DC4();
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722D40);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45D9F54();
  sub_1A4691D40();
  v12 = 0;
  sub_1A4691860();
  if (!v2)
  {
    v11 = 1;
    sub_1A4691854();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1A45D9F54()
{
  unint64_t result;

  result = qword_1EE722D48;
  if (!qword_1EE722D48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AB028, &type metadata for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722D48);
  }
  return result;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Result.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722D50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45D9F54();
  sub_1A4691D28();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_1A4691794();
    v15 = 1;
    v11 = sub_1A4691788();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_BYTE *)a2 = v9 & 1;
    *(_QWORD *)(a2 + 8) = v11;
    *(_QWORD *)(a2 + 16) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45DA0EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesFeatureExtractor.Result.init(from:)(a1, a2);
}

uint64_t sub_1A45DA100(_QWORD *a1)
{
  return REMSuggestedAttributesFeatureExtractor.Result.encode(to:)(a1);
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 6;
  return (ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional)intValue;
}

void *static REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.allCases.getter()
{
  return &unk_1E4C0FD58;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45DA200 + 4 * byte_1A46AAB80[*v0]))(0x694674757074756FLL, 0xEE00656D614E656CLL);
}

uint64_t sub_1A45DA200()
{
  return 0x6C706D615378616DLL;
}

unint64_t sub_1A45DA224()
{
  return 0xD000000000000012;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45DA2C4 + 4 * byte_1A46AAB86[*v0]))(0x694674757074756FLL, 0xEE00656D614E656CLL);
}

uint64_t sub_1A45DA2C4()
{
  return 0x6C706D615378616DLL;
}

unint64_t sub_1A45DA2E8()
{
  return 0xD000000000000012;
}

void sub_1A45DA34C(char *a1)
{
  sub_1A4668950(*a1);
}

void sub_1A45DA358()
{
  char *v0;

  sub_1A4636100(*v0);
}

void sub_1A45DA360(uint64_t a1)
{
  char *v1;

  sub_1A46365E4(a1, *v1);
}

void sub_1A45DA368(uint64_t a1)
{
  char *v1;

  sub_1A4638338(a1, *v1);
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional sub_1A45DA370(Swift::String *a1)
{
  return REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A45DA37C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional sub_1A45DA3A4@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters::CodingKeys_optional result;
  char v5;

  result.value = REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A45DA3D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FD58;
}

uint64_t sub_1A45DA3E8()
{
  sub_1A45DB19C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45DA410()
{
  sub_1A45DB19C();
  return sub_1A4691DC4();
}

uint64_t static REMSuggestedAttributesFeatureExtractor.Parameters.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.outputFileName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.maxSampleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.minimumSampleCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.randomSeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.numOfIntentWords.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.includeTitleVector.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

void __swiftcall REMSuggestedAttributesFeatureExtractor.Parameters.init(outputFileName:maxSampleCount:minimumSampleCount:randomSeed:numOfIntentWords:includeTitleVector:)(ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters *__return_ptr retstr, Swift::String_optional outputFileName, Swift::Int_optional maxSampleCount, Swift::Int_optional minimumSampleCount, Swift::Int_optional randomSeed, Swift::Int_optional numOfIntentWords, Swift::Bool_optional includeTitleVector)
{
  Swift::Int value;
  Swift::Bool v8;
  Swift::Int v9;
  Swift::Int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  Swift::Int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  uint64_t v24;
  Swift::Int v25;
  Swift::Bool is_nil;
  void *object;
  uint64_t countAndFlagsBits;

  is_nil = randomSeed.is_nil;
  value = randomSeed.value;
  v8 = minimumSampleCount.is_nil;
  v9 = minimumSampleCount.value;
  object = outputFileName.value._object;
  countAndFlagsBits = outputFileName.value._countAndFlagsBits;
  if (maxSampleCount.is_nil)
    v11 = 100;
  else
    v11 = maxSampleCount.value;
  if (qword_1EE71C1B0 != -1)
    swift_once();
  v12 = sub_1A4690318();
  __swift_project_value_buffer(v12, (uint64_t)qword_1EE722D28);
  v13 = sub_1A469030C();
  v14 = sub_1A4691008();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v13, v14, "maxSampleCount: %{public}ld", v15, 0xCu);
    MEMORY[0x1A85A0114](v15, -1, -1);
  }

  if (v8)
    v16 = 30;
  else
    v16 = v9;
  v17 = sub_1A469030C();
  v18 = sub_1A4691008();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v19 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v17, v18, "minimumSampleCount: %{public}ld", v19, 0xCu);
    MEMORY[0x1A85A0114](v19, -1, -1);
  }

  if (is_nil)
    value = sub_1A458A85C(0x7FFFFFFFFFFFFFFFuLL);
  v20 = sub_1A469030C();
  v21 = sub_1A4691008();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v22 = 134349056;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v20, v21, "randomSeed: %{public}ld", v22, 0xCu);
    MEMORY[0x1A85A0114](v22, -1, -1);
  }

  v23 = (void *)0xED00006E6F736A2ELL;
  if (object)
    v23 = object;
  v24 = 0x7365727574616566;
  if (object)
    v24 = countAndFlagsBits;
  retstr->outputFileName._countAndFlagsBits = v24;
  retstr->outputFileName._object = v23;
  v25 = 10;
  if (!numOfIntentWords.is_nil)
    v25 = numOfIntentWords.value;
  retstr->maxSampleCount = v11;
  retstr->minimumSampleCount = v16;
  retstr->randomSeed = value;
  retstr->numOfIntentWords = v25;
  retstr->includeTitleVector = includeTitleVector.value;
}

__n128 REMSuggestedAttributesFeatureExtractor.Parameters.init(partial:)@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  Swift::Int v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  int v26;
  Swift::Int v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  Swift::Bool_optional includeTitleVector;
  Swift::String_optional v33;
  void *object;
  Swift::Bool v35;
  __n128 result;
  __int128 v37;
  Swift::Int_optional numOfIntentWords;
  Swift::Int v39;
  Swift::Int v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  ReminderKitInternal::REMSuggestedAttributesFeatureExtractor::Parameters v45;
  Swift::Int_optional v46;
  Swift::Int_optional v47;
  Swift::Int_optional v48;

  v3 = *a1;
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v4 = swift_retain();
    v5 = sub_1A443EC78(v4);
    if ((v6 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v5, (uint64_t)&v45);
    else
      memset(&v45, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  if (swift_dynamicCast())
  {
    v41 = v44;
    v42 = v43;
  }
  else
  {
    v41 = 0;
    v42 = 0;
    v43 = 0;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = swift_retain();
    v8 = sub_1A443EC78(v7);
    if ((v9 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v8, (uint64_t)&v45);
    else
      memset(&v45, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  v10 = swift_dynamicCast();
  if (v10)
  {
    v40 = v43;
  }
  else
  {
    v40 = 0;
    v43 = 0;
  }
  v11 = v10 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = swift_retain();
    v13 = sub_1A443EC78(v12);
    if ((v14 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v13, (uint64_t)&v45);
    else
      memset(&v45, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  v15 = swift_dynamicCast();
  if (v15)
  {
    v39 = v43;
  }
  else
  {
    v39 = 0;
    v43 = 0;
  }
  v16 = v15 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = swift_retain();
    v18 = sub_1A443EC78(v17);
    if ((v19 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v18, (uint64_t)&v45);
    else
      memset(&v45, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  v20 = swift_dynamicCast();
  if (v20)
  {
    v21 = v43;
  }
  else
  {
    v21 = 0;
    v43 = 0;
  }
  v22 = v20 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v23 = swift_retain();
    v24 = sub_1A443EC78(v23);
    if ((v25 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v24, (uint64_t)&v45);
    else
      memset(&v45, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
    swift_bridgeObjectRetain();
  }
  v26 = swift_dynamicCast();
  if (v26)
  {
    v27 = v43;
  }
  else
  {
    v27 = 0;
    LOBYTE(v43) = 0;
  }
  v28 = v26 ^ 1;
  swift_bridgeObjectRelease();
  swift_release();
  swift_getKeyPath();
  if (*(_QWORD *)(v3 + 16))
  {
    v29 = swift_retain();
    v30 = sub_1A443EC78(v29);
    if ((v31 & 1) != 0)
      sub_1A44311F0(*(_QWORD *)(v3 + 56) + 32 * v30, (uint64_t)&v45);
    else
      memset(&v45, 0, 32);
    swift_release();
  }
  else
  {
    memset(&v45, 0, 32);
  }
  if (swift_dynamicCast())
    includeTitleVector.value = v43;
  else
    includeTitleVector.value = 2;
  swift_bridgeObjectRelease();
  swift_release();
  numOfIntentWords.is_nil = v28;
  numOfIntentWords.value = v27;
  v33.value._object = v41;
  v33.value._countAndFlagsBits = v42;
  v47.value = v39;
  v46.value = v40;
  v46.is_nil = v11;
  v47.is_nil = v16;
  v48.value = v21;
  v48.is_nil = v22;
  REMSuggestedAttributesFeatureExtractor.Parameters.init(outputFileName:maxSampleCount:minimumSampleCount:randomSeed:numOfIntentWords:includeTitleVector:)(&v45, v33, v46, v47, v48, numOfIntentWords, includeTitleVector);
  object = v45.outputFileName._object;
  v35 = v45.includeTitleVector;
  result = *(__n128 *)&v45.maxSampleCount;
  v37 = *(_OWORD *)&v45.randomSeed;
  *(_QWORD *)a2 = v45.outputFileName._countAndFlagsBits;
  *(_QWORD *)(a2 + 8) = object;
  *(__n128 *)(a2 + 16) = result;
  *(_OWORD *)(a2 + 32) = v37;
  *(_BYTE *)(a2 + 48) = v35;
  return result;
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722D58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v1 + 16);
  v14 = *(_QWORD *)(v1 + 24);
  v15 = v7;
  v8 = *(_QWORD *)(v1 + 32);
  v12 = *(_QWORD *)(v1 + 40);
  v13 = v8;
  v11[1] = *(unsigned __int8 *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45DB19C();
  sub_1A4691D40();
  v22 = 0;
  v9 = v16;
  sub_1A4691854();
  if (!v9)
  {
    v21 = 1;
    sub_1A4691878();
    v20 = 2;
    sub_1A4691878();
    v19 = 3;
    sub_1A4691878();
    v18 = 4;
    sub_1A4691878();
    v17 = 5;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMSuggestedAttributesFeatureExtractor.Parameters.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722D68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45DB19C();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = 0;
  v9 = sub_1A4691788();
  v11 = v10;
  v24 = 1;
  swift_bridgeObjectRetain();
  v19 = sub_1A46917AC();
  v23 = 2;
  v18 = sub_1A46917AC();
  v22 = 3;
  v17 = sub_1A46917AC();
  v21 = 4;
  v16 = sub_1A46917AC();
  v20 = 5;
  v13 = sub_1A4691794();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  v14 = v18;
  *(_QWORD *)(a2 + 16) = v19;
  *(_QWORD *)(a2 + 24) = v14;
  v15 = v16;
  *(_QWORD *)(a2 + 32) = v17;
  *(_QWORD *)(a2 + 40) = v15;
  *(_BYTE *)(a2 + 48) = v13 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45DB058@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMSuggestedAttributesFeatureExtractor.Parameters.init(from:)(a1, a2);
}

uint64_t sub_1A45DB06C(_QWORD *a1)
{
  return REMSuggestedAttributesFeatureExtractor.Parameters.encode(to:)(a1);
}

uint64_t sub_1A45DB080()
{
  return swift_getKeyPath();
}

id REMSuggestedAttributesFeatureExtractor.__allocating_init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSuggestedAttributesFeatureExtractor.init(fetchResultTokenToDiffAgainst:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithFetchResultTokenToDiffAgainst_, a1);

  return v3;
}

id REMSuggestedAttributesFeatureExtractor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A45DB19C()
{
  unint64_t result;

  result = qword_1EE722D60;
  if (!qword_1EE722D60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722D60);
  }
  return result;
}

unint64_t sub_1A45DB1E4()
{
  unint64_t result;

  result = qword_1EE722D70;
  if (!qword_1EE722D70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722D70);
  }
  return result;
}

unint64_t sub_1A45DB228(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A45DB254();
  result = sub_1A45DB19C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45DB254()
{
  unint64_t result;

  result = qword_1EE722D78;
  if (!qword_1EE722D78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722D78);
  }
  return result;
}

unint64_t sub_1A45DB29C()
{
  unint64_t result;

  result = qword_1EE722D80;
  if (!qword_1EE722D80)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722D80);
  }
  return result;
}

unint64_t sub_1A45DB2E4()
{
  unint64_t result;

  result = qword_1EE722D88;
  if (!qword_1EE722D88)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722D88);
  }
  return result;
}

unint64_t sub_1A45DB32C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE722D90;
  if (!qword_1EE722D90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE722D98);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE722D90);
  }
  return result;
}

unint64_t sub_1A45DB380(uint64_t a1)
{
  unint64_t result;

  result = sub_1A45DB3A4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A45DB3A4()
{
  unint64_t result;

  result = qword_1EE722DD8;
  if (!qword_1EE722DD8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE722DD8);
  }
  return result;
}

unint64_t sub_1A45DB3F8()
{
  unint64_t result;

  result = qword_1EE722DE0;
  if (!qword_1EE722DE0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Result, &type metadata for REMSuggestedAttributesFeatureExtractor.Result);
    atomic_store(result, (unint64_t *)&qword_1EE722DE0);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesFeatureExtractor()
{
  return objc_opt_self();
}

uint64_t destroy for REMSuggestedAttributesFeatureExtractor.Result()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal38REMSuggestedAttributesFeatureExtractorC6ResultVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesFeatureExtractor.Result(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesFeatureExtractor.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Result()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Result;
}

uint64_t initializeWithCopy for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Parameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Parameters()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A45DB714 + 4 * byte_1A46AAB91[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A45DB748 + 4 * byte_1A46AAB8C[v4]))();
}

uint64_t sub_1A45DB748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DB750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45DB758);
  return result;
}

uint64_t sub_1A45DB764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45DB76CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A45DB770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DB778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A45DB7E0 + 4 * byte_1A46AAB9B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A45DB814 + 4 * byte_1A46AAB96[v4]))();
}

uint64_t sub_1A45DB814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DB81C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45DB824);
  return result;
}

uint64_t sub_1A45DB830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45DB838);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A45DB83C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DB844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys()
{
  return &type metadata for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys;
}

unint64_t sub_1A45DB864()
{
  unint64_t result;

  result = qword_1EE722E50;
  if (!qword_1EE722E50)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AB000, &type metadata for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722E50);
  }
  return result;
}

unint64_t sub_1A45DB8AC()
{
  unint64_t result;

  result = qword_1EE722E58;
  if (!qword_1EE722E58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AAF70, &type metadata for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722E58);
  }
  return result;
}

unint64_t sub_1A45DB8F4()
{
  unint64_t result;

  result = qword_1EE722E60;
  if (!qword_1EE722E60)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AAF98, &type metadata for REMSuggestedAttributesFeatureExtractor.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722E60);
  }
  return result;
}

uint64_t sub_1A45DB938(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5365727574616566 && a2 == 0xED0000676E697274)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t InitiallyEmptyCurrentValueSubject.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  InitiallyEmptyCurrentValueSubject.init()();
  return v0;
}

uint64_t InitiallyEmptyCurrentValueSubject.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = sub_1A46911A0();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - v4;
  sub_1A4690480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v5, 1, 1, v2);
  *(_QWORD *)(v1 + 16) = sub_1A469048C();
  return v1;
}

uint64_t InitiallyEmptyCurrentValueSubject.send(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = sub_1A46911A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - v6;
  v8 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  sub_1A4690474();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t InitiallyEmptyCurrentValueSubject.send(completion:)()
{
  return sub_1A469045C();
}

uint64_t InitiallyEmptyCurrentValueSubject.send(subscription:)()
{
  return sub_1A4690468();
}

uint64_t InitiallyEmptyCurrentValueSubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = a3;
  v18 = a1;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  sub_1A46911A0();
  v7 = *(_QWORD *)(v5 + 88);
  v8 = sub_1A4690480();
  MEMORY[0x1A85A0000](MEMORY[0x1E0C95FB8], v8);
  v9 = sub_1A4690378();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  v19 = v3[2];
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v6;
  v13[3] = v7;
  v14 = v17;
  v13[4] = a2;
  v13[5] = v14;
  swift_retain();
  sub_1A46904D4();
  swift_release();
  swift_release();
  sub_1A469036C();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1A45DBD84()
{
  return swift_deallocObject();
}

uint64_t sub_1A45DBD94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1A46911A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t InitiallyEmptyCurrentValueSubject.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t InitiallyEmptyCurrentValueSubject.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1A45DBE1C()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45DBE38(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1A45DBE40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return InitiallyEmptyCurrentValueSubject.receive<A>(subscriber:)(a1, a2, a3);
}

uint64_t sub_1A45DBE60()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for InitiallyEmptyCurrentValueSubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for InitiallyEmptyCurrentValueSubject);
}

uint64_t method lookup function for InitiallyEmptyCurrentValueSubject()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InitiallyEmptyCurrentValueSubject.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t Error.rem_errorDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v31;
  __int128 v32;
  __int128 v33;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v31 - v8, v2, a1);
  v11 = sub_1A4691A04();
  if (v11)
  {
    v12 = (void *)v11;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, a1);
  }
  else
  {
    v12 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v9, a1);
  }
  v14 = (void *)sub_1A468FE5C();

  v15 = objc_msgSend(v14, sel_userInfo);
  v16 = sub_1A4690708();

  v17 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17 != 1)
  {
    if (!v17)
    {
      v10(v7, v2, a1);
      v18 = sub_1A46908E8();
LABEL_16:

      return v18;
    }
    goto LABEL_15;
  }
  v19 = objc_msgSend(v14, sel_userInfo);
  v20 = sub_1A4690708();

  v21 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  if (*(_QWORD *)(v20 + 16) && (v23 = sub_1A443E4C8(v21, v22), (v24 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v20 + 56) + 32 * v23, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_1A4496084((uint64_t)&v32);
    goto LABEL_15;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    v29 = objc_msgSend(v14, sel_description);
    v18 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    goto LABEL_16;
  }
  v25 = objc_msgSend(v14, sel_domain);
  v26 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v28 = v27;

  *(_QWORD *)&v32 = v26;
  *((_QWORD *)&v32 + 1) = v28;
  sub_1A4690984();
  v31 = objc_msgSend(v14, sel_code);
  sub_1A46918D8();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  sub_1A4690984();

  swift_bridgeObjectRelease();
  return v32;
}

uint64_t Optional<A>.rem_errorDescription.getter(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v5;

  if (!a1)
    return 7104878;
  swift_getErrorValue();
  v2 = a1;
  v3 = Error.rem_errorDescription.getter(v5);

  return v3;
}

BOOL Error.isREMError(withErrorCode:)(id a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  id v20;
  uint64_t v21;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a2);
  v8 = sub_1A4691A04();
  if (v8)
  {
    v9 = (void *)v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a2);
  }
  else
  {
    v9 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a2);
  }
  v11 = (void *)sub_1A468FE5C();

  v12 = objc_msgSend(v11, sel_domain);
  v13 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v15 = v14;

  if (v13 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v18 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {

      return 0;
    }
  }
  v20 = objc_msgSend(v11, sel_code);

  return v20 == a1;
}

void CodableError.init(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;

  v4 = (void *)sub_1A468FE5C();
  v5 = objc_msgSend(v4, sel_domain);
  v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v29 = v7;

  v28 = objc_msgSend(v4, sel_code);
  v8 = objc_msgSend(v4, sel_userInfo);
  v9 = sub_1A4690708();

  v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  if (*(_QWORD *)(v9 + 16) && (v12 = sub_1A443E4C8(v10, v11), (v13 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v9 + 56) + 32 * v12, (uint64_t)&v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v33 + 1))
    {
      v14 = swift_dynamicCast();
      if (v14)
        v15 = v30;
      else
        v15 = 0;
      if (v14)
        v16 = v31;
      else
        v16 = 0;
      goto LABEL_12;
    }
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1A4496084((uint64_t)&v32);
  v15 = 0;
  v16 = 0;
LABEL_12:
  v17 = objc_msgSend(v4, sel_userInfo);
  v18 = sub_1A4690708();

  v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  if (*(_QWORD *)(v18 + 16) && (v21 = sub_1A443E4C8(v19, v20), (v22 & 1) != 0))
  {
    sub_1A44311F0(*(_QWORD *)(v18 + 56) + 32 * v21, (uint64_t)&v32);
  }
  else
  {
    v32 = 0u;
    v33 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v33 + 1))
  {
    sub_1A4496084((uint64_t)&v32);
    goto LABEL_20;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_20:
    v26 = (uint64_t)v28;
    v25 = v29;
    *(_QWORD *)&v32 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
    v23 = sub_1A46908E8();
    v24 = v27;

    goto LABEL_21;
  }

  v23 = v30;
  v24 = v31;
  v26 = (uint64_t)v28;
  v25 = v29;
LABEL_21:
  *a2 = v6;
  a2[1] = v25;
  a2[2] = v26;
  a2[3] = v15;
  a2[4] = v16;
  a2[5] = v23;
  a2[6] = v24;
}

uint64_t CodableError.domain.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CodableError.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t CodableError.localizedDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CodableError.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CodableError.errorUserInfo.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _OWORD v16[2];
  __int128 v17;
  uint64_t v18;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[6];
  v4 = MEMORY[0x1E0DEE9E0];
  v5 = MEMORY[0x1E0DEA968];
  if (v1)
  {
    v6 = v0[3];
    v7 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v9 = v8;
    v18 = v5;
    *(_QWORD *)&v17 = v6;
    *((_QWORD *)&v17 + 1) = v1;
    sub_1A444A940(&v17, v16);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1A445DFA4(v16, v7, v9, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v3)
  {
    v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = v12;
    v18 = v5;
    *(_QWORD *)&v17 = v2;
    *((_QWORD *)&v17 + 1) = v3;
    sub_1A444A940(&v17, v16);
    swift_bridgeObjectRetain();
    v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1A445DFA4(v16, v11, v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1A45DC870()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45DC89C + 4 * byte_1A46AB150[*v0]))(0x6E69616D6F64, 0xE600000000000000);
}

uint64_t sub_1A45DC89C()
{
  return 0x646F43726F727265;
}

unint64_t sub_1A45DC8B8()
{
  return 0xD000000000000014;
}

unint64_t sub_1A45DC8D8()
{
  return 0xD000000000000010;
}

uint64_t sub_1A45DC8F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A45DD208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45DC918()
{
  sub_1A45DCDE0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45DC940()
{
  sub_1A45DCDE0();
  return sub_1A4691DC4();
}

uint64_t CodableError.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[6];
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E440);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v15[4] = v1[3];
  v15[5] = v8;
  v9 = v1[4];
  v15[2] = v1[5];
  v15[3] = v9;
  v15[1] = v1[6];
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_1A45DCDE0();
  sub_1A4691D40();
  v19 = 0;
  sub_1A4691854();
  if (!v2)
  {
    v18 = 1;
    sub_1A4691878();
    v17 = 2;
    sub_1A4691818();
    v16 = 3;
    sub_1A4691818();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t CodableError.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23E438);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45DCDE0();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v9 = sub_1A4691788();
  v11 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v24 = sub_1A46917AC();
  v26 = 2;
  v22 = sub_1A469174C();
  v23 = v13;
  v25 = 3;
  swift_bridgeObjectRetain();
  v14 = sub_1A469174C();
  v16 = v15;
  v17 = *(void (**)(char *, uint64_t))(v6 + 8);
  v18 = v14;
  v17(v8, v5);
  swift_bridgeObjectRetain();
  *a2 = v9;
  a2[1] = v11;
  v19 = v23;
  v20 = v22;
  a2[2] = v24;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  a2[6] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45DCD60()
{
  sub_1A45DD3B8();
  return sub_1A4691C20();
}

uint64_t sub_1A45DCD88()
{
  sub_1A45DD3B8();
  return sub_1A4691C14();
}

uint64_t sub_1A45DCDB8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return CodableError.init(from:)(a1, a2);
}

uint64_t sub_1A45DCDCC(_QWORD *a1)
{
  return CodableError.encode(to:)(a1);
}

unint64_t sub_1A45DCDE0()
{
  unint64_t result;

  result = qword_1ED240050;
  if (!qword_1ED240050)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AB324, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240050);
  }
  return result;
}

uint64_t destroy for CodableError()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CodableError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CodableError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CodableError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableError()
{
  return &type metadata for CodableError;
}

uint64_t storeEnumTagSinglePayload for CodableError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A45DD0B0 + 4 * byte_1A46AB159[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A45DD0E4 + 4 * byte_1A46AB154[v4]))();
}

uint64_t sub_1A45DD0E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DD0EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45DD0F4);
  return result;
}

uint64_t sub_1A45DD100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45DD108);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A45DD10C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DD114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CodableError.CodingKeys()
{
  return &type metadata for CodableError.CodingKeys;
}

unint64_t sub_1A45DD134()
{
  unint64_t result;

  result = qword_1EE722E68;
  if (!qword_1EE722E68)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AB2FC, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722E68);
  }
  return result;
}

unint64_t sub_1A45DD17C()
{
  unint64_t result;

  result = qword_1ED240060;
  if (!qword_1ED240060)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AB26C, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240060);
  }
  return result;
}

unint64_t sub_1A45DD1C4()
{
  unint64_t result;

  result = qword_1ED240058;
  if (!qword_1ED240058)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AB294, &type metadata for CodableError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240058);
  }
  return result;
}

uint64_t sub_1A45DD208(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A46C2260 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2280)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1A45DD3B8()
{
  unint64_t result;

  result = qword_1EE722E70;
  if (!qword_1EE722E70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for CodableError, &type metadata for CodableError);
    atomic_store(result, (unint64_t *)&qword_1EE722E70);
  }
  return result;
}

ReminderKitInternal::REMMigrationResultState_optional __swiftcall REMMigrationResultState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMMigrationResultState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 8;
  if (v3 < 8)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMMigrationResultState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A45DD488 + 4 * byte_1A46AB380[*v0]))(0xD000000000000012, 0x80000001A46BCAE0);
}

uint64_t sub_1A45DD488(uint64_t a1)
{
  return a1 - 2;
}

uint64_t sub_1A45DD4FC()
{
  return 0x6574656C706D6F63;
}

void sub_1A45DD514(char *a1)
{
  sub_1A466BB30(*a1);
}

unint64_t sub_1A45DD524()
{
  unint64_t result;

  result = qword_1EE722E78;
  if (!qword_1EE722E78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMMigrationResultState, &type metadata for REMMigrationResultState);
    atomic_store(result, (unint64_t *)&qword_1EE722E78);
  }
  return result;
}

void sub_1A45DD568()
{
  char *v0;

  sub_1A46376B0(0, *v0);
}

void sub_1A45DD574(uint64_t a1)
{
  char *v1;

  sub_1A4637300(a1, *v1);
}

void sub_1A45DD57C(uint64_t a1)
{
  char *v1;

  sub_1A46376B0(a1, *v1);
}

ReminderKitInternal::REMMigrationResultState_optional sub_1A45DD584(Swift::String *a1)
{
  return REMMigrationResultState.init(rawValue:)(*a1);
}

uint64_t sub_1A45DD590@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMMigrationResultState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t storeEnumTagSinglePayload for REMMigrationResultState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A45DD600 + 4 * byte_1A46AB38D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A45DD634 + 4 * byte_1A46AB388[v4]))();
}

uint64_t sub_1A45DD634(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DD63C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45DD644);
  return result;
}

uint64_t sub_1A45DD650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45DD658);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A45DD65C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45DD664(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMMigrationResultState()
{
  return &type metadata for REMMigrationResultState;
}

uint64_t _sSo17REMAccountStorageC19ReminderKitInternalE25loggable_supportedVersionSSvg_0()
{
  id v0;
  uint64_t v1;

  v0 = (id)rem_loggableSupportedVersionFrom();
  v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v1;
}

uint64_t sub_1A45DD6E8()
{
  id v0;
  uint64_t v1;

  v0 = (id)rem_loggableSupportedVersionFrom();
  v1 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  return v1;
}

uint64_t dispatch thunk of REMSupportedVersionLoggable.loggable_supportedVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A45DD73C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE722E80);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE722E80);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static REMFileDigester.sha512Sum(url:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v2;

  result = _s19ReminderKitInternal15REMFileDigesterO21sha512SumWithFileSize3urlSS_SitSg10Foundation3URLV_tFZ_0(a1);
  if (!v2)
    return 0;
  return result;
}

id sub_1A45DD7EC(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A468FED4();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForReadingFromURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1A468FF7C();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1A468FE68();

    swift_willThrow();
    v9 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

void sub_1A45DD900(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v4[0] = 0;
  if (objc_msgSend(a1, sel_closeAndReturnError_, v4))
  {
    v1 = v4[0];
  }
  else
  {
    v2 = v4[0];
    v3 = (void *)sub_1A468FE68();

    swift_willThrow();
  }
}

uint64_t sub_1A45DD9CC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1A4690654();
  sub_1A4436344(&qword_1ED23F688, (uint64_t (*)(uint64_t))MEMORY[0x1E0CA9348], MEMORY[0x1E0CA9340]);
  result = sub_1A4690684();
  v2 = *(_QWORD *)(result + 16);
  if (v1 == v2)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v1 >= v2)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v3 = v1;
  if (v1 < 0)
    goto LABEL_14;
  if (!v2)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  sub_1A45DE634();
  do
  {
    sub_1A4690A2C();
    if (sub_1A4690954() <= 1)
    {
      sub_1A4690984();
      swift_bridgeObjectRelease();
    }
    sub_1A4690984();
    ++v3;
    swift_bridgeObjectRelease();
  }
  while (v2 != v3);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s19ReminderKitInternal15REMFileDigesterO21sha512SumWithFileSize3urlSS_SitSg10Foundation3URLV_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v2 = sub_1A4690654();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46906B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A468FF7C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v33 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v27 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v27 - v15;
  sub_1A468FF28();
  sub_1A45DE5E4();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v34(v16, a1, v8);
  v17 = sub_1A45DD7EC((uint64_t)v16);
  v27[0] = v4;
  v33 = (char *)v5;
  v27[1] = v14;
  v27[2] = v9;
  v27[3] = v8;
  v28 = v6;
  v31 = a1;
  v18 = v17;
  v19 = v35;
  v20 = sub_1A46906A8();
  v21 = (void *)MEMORY[0x1A859F880](v20);
  sub_1A4690FC0();
  v32 = v18;
  v23 = v33;
  if (v22 >> 60 != 15)
    __asm { BR              X9 }
  objc_autoreleasePoolPop(v21);
  v25 = v27[0];
  sub_1A469069C();
  v26 = sub_1A45DD9CC();
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v25, v30);
  (*(void (**)(char *, char *))(v28 + 8))(v19, v23);
  sub_1A45DD900(v18);

  sub_1A468FF10();
  return v26;
}

ValueMetadata *type metadata accessor for REMFileDigester()
{
  return &type metadata for REMFileDigester;
}

unint64_t sub_1A45DE5E4()
{
  unint64_t result;

  result = qword_1ED23F6D0;
  if (!qword_1ED23F6D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED23F6D0);
  }
  return result;
}

uint64_t sub_1A45DE620(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A44695A8(a1, a2);
  return a1;
}

unint64_t sub_1A45DE634()
{
  unint64_t result;

  result = qword_1ED23F7D8;
  if (!qword_1ED23F7D8)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEDEA0], MEMORY[0x1E0DEDE70]);
    atomic_store(result, (unint64_t *)&qword_1ED23F7D8);
  }
  return result;
}

uint64_t Bool.yesno.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 7562617;
  else
    return 28526;
}

uint64_t sub_1A45DE69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE722E98);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE722E98);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t OrderedDictionary.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A4690BF4();
  swift_getTupleTypeMetadata2();
  sub_1A4690BF4();
  result = sub_1A4690738();
  *a1 = v2;
  a1[1] = result;
  return result;
}

void OrderedDictionary.subscript.getter()
{
  JUMPOUT(0x1A859E008);
}

void sub_1A45DE7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for OrderedDictionary(0, *(_QWORD *)(a3 + a2 - 24), *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8));
  OrderedDictionary.subscript.getter();
}

uint64_t sub_1A45DE820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = *(_QWORD *)(a4 + a3 - 24);
  v7 = *(_QWORD *)(a4 + a3 - 16);
  v8 = *(_QWORD *)(a4 + a3 - 8);
  v9 = sub_1A46911A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v19 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v19 - v14, a3, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  v17 = type metadata accessor for OrderedDictionary(0, v6, v7, v8);
  return OrderedDictionary.subscript.setter(v13, (uint64_t)v15, v17);
}

uint64_t OrderedDictionary.subscript.setter(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, uint64_t);
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  char *v23;

  v6 = *(_QWORD *)(a3 + 24);
  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v23 = a1;
  v18(v14, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v6) == 1)
  {
    v19 = *(void (**)(char *, uint64_t))(v8 + 8);
    v19(v14, v7);
    OrderedDictionary.removeValue(forKey:)(a2, a3, v11);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
    v19(v23, v7);
    return ((uint64_t (*)(char *, uint64_t))v19)(v11, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v6);
    OrderedDictionary.updateValue(_:forKey:)((uint64_t)v17, a2, a3, (uint64_t)v11);
    (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
    v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v23, v7);
    v21(v11, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v6);
  }
}

uint64_t OrderedDictionary.updateValue(_:forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;

  v32 = a1;
  v34 = a4;
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v33 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 24);
  v12 = sub_1A46911A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v29 - v17;
  v30 = v4;
  v19 = *(_QWORD *)(v4 + 8);
  v20 = *(_QWORD *)(a3 + 32);
  v21 = a2;
  v31 = v20;
  MEMORY[0x1A859E008](a2, v19, v7, v11);
  v22 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v18, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v24 = v33;
    v23(v33, v21, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v16, v32, v11);
    v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v25((uint64_t)v16, 0, 1, v11);
    sub_1A469078C();
    sub_1A46907BC();
    v23(v24, v21, v7);
    sub_1A4690C78();
    sub_1A4690C3C();
    return v25(v34, 1, 1, v11);
  }
  else
  {
    v27 = v34;
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v34, v18, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v33, v21, v7);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v16, v32, v11);
    v28 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56);
    v28(v16, 0, 1, v11);
    sub_1A469078C();
    sub_1A46907BC();
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v28)(v27, 0, 1, v11);
  }
}

uint64_t OrderedDictionary.removeValue(forKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  uint8_t *v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char v47;

  v44 = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v43 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v42 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = sub_1A46911A0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v41 - v16;
  MEMORY[0x1E0C80A78](v15);
  v45 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v3;
  v19 = a1;
  v20 = a1;
  v22 = v21;
  MEMORY[0x1A859E008](v20, v3[1], v6, v9, *(_QWORD *)(a2 + 32));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v44, 1, 1, v9);
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v24(v45, v17, v9);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v19, v6);
    v25 = v22;
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
    v26(v14, 1, 1, v9);
    sub_1A469078C();
    sub_1A46907BC();
    v46 = *v41;
    v27 = sub_1A4690C78();
    MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v27);
    sub_1A4690ED0();
    if ((v47 & 1) != 0)
    {
      v28 = v45;
      if (qword_1EE71C1C0 != -1)
        swift_once();
      v29 = sub_1A4690318();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EE722E98);
      v30 = sub_1A469030C();
      v31 = sub_1A4690FFC();
      v32 = os_log_type_enabled(v30, v31);
      v33 = v44;
      if (v32)
      {
        v34 = v26;
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_1A442D000, v30, v31, "OrderedDictionary array dictionary inconsistent", v35, 2u);
        v36 = v35;
        v26 = v34;
        MEMORY[0x1A85A0114](v36, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v9);
      v37 = v33;
      v38 = 1;
    }
    else
    {
      v39 = v42;
      sub_1A4690C48();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v6);
      v40 = v44;
      v24(v44, v45, v9);
      v37 = v40;
      v38 = 0;
    }
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v26)(v37, v38, 1, v9);
  }
}

void (*OrderedDictionary.subscript.modify(_QWORD *a1, uint64_t a2, _QWORD *a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;

  v7 = malloc(0x50uLL);
  *a1 = v7;
  *v7 = a3;
  v7[1] = v3;
  v8 = a3[3];
  v9 = sub_1A46911A0();
  v7[2] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v7[3] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v7[4] = malloc(v11);
  v12 = malloc(v11);
  v13 = a3[2];
  v7[5] = v12;
  v7[6] = v13;
  v14 = *(_QWORD *)(v13 - 8);
  v7[7] = v14;
  v15 = *(_QWORD *)(v14 + 64);
  v7[8] = malloc(v15);
  v7[9] = malloc(v15);
  (*(void (**)(void))(v14 + 16))();
  MEMORY[0x1A859E008](a2, *(_QWORD *)(v3 + 8), v13, v8, a3[4]);
  return sub_1A45DF1D4;
}

void sub_1A45DF1D4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (void *)(*a1)[8];
  v4 = (void *)(*a1)[9];
  if ((a2 & 1) != 0)
  {
    v5 = v2[7];
    v11 = v2[6];
    v7 = (char *)v2[4];
    v6 = (char *)v2[5];
    v8 = v2[2];
    v9 = v2[3];
    v10 = *v2;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v11);
    OrderedDictionary.subscript.setter(v7, (uint64_t)v3, v10);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    v7 = (char *)v2[4];
    v6 = (char *)v2[5];
    OrderedDictionary.subscript.setter(v6, (uint64_t)v4, *v2);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);
  free(v2);
}

uint64_t OrderedDictionary.values.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1A4690C78();
  swift_bridgeObjectRetain();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v0);
  v1 = sub_1A4690A98();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A45DF360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v23;

  v12 = sub_1A46911A0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - v14;
  MEMORY[0x1A859E008](a1, a2, a3, a4, a5);
  v16 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    if (qword_1EE71C1C0 != -1)
      swift_once();
    v17 = sub_1A4690318();
    __swift_project_value_buffer(v17, (uint64_t)qword_1EE722E98);
    v18 = sub_1A469030C();
    v19 = sub_1A4690FFC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1A442D000, v18, v19, "OrderedDictionary unknown key", v20, 2u);
      MEMORY[0x1A85A0114](v20, -1, -1);
    }

    v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a6, v15, a4);
    v21 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a6, v21, 1, a4);
}

Swift::Void __swiftcall OrderedDictionary.removeAll()()
{
  sub_1A4690C78();
  sub_1A4690C6C();
  sub_1A469078C();
  sub_1A4690780();
}

uint64_t OrderedDictionary.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v32 = a5;
  v9 = sub_1A46911A0();
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x1E0C80A78](v9);
  v36 = (uint64_t)&v30 - v10;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v13 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v30 - v16;
  v35 = a2;
  v39 = a4;
  OrderedDictionary.init()(&v40);
  v18 = v40;
  v19 = v41;
  v42 = v40;
  v43 = v41;
  if (MEMORY[0x1A859E4AC](a1, TupleTypeMetadata2))
  {
    v20 = 0;
    v33 = &v17[*(int *)(TupleTypeMetadata2 + 48)];
    v34 = v17;
    while (1)
    {
      v21 = sub_1A4690C0C();
      sub_1A4690BD0();
      if ((v21 & 1) != 0)
      {
        v22 = v34;
        (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v34, a1+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v20, TupleTypeMetadata2);
        v23 = v20 + 1;
        if (__OFADD__(v20, 1))
          goto LABEL_10;
      }
      else
      {
        result = sub_1A469147C();
        v22 = v34;
        if (v31 != 8)
        {
          __break(1u);
          return result;
        }
        v40 = result;
        (*(void (**)(char *, uint64_t *, uint64_t))(v12 + 16))(v34, &v40, TupleTypeMetadata2);
        swift_unknownObjectRelease();
        v23 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          result = swift_bridgeObjectRelease();
          v18 = v42;
          v19 = v43;
          goto LABEL_13;
        }
      }
      v24 = (uint64_t)&v15[*(int *)(TupleTypeMetadata2 + 48)];
      v25 = v35;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v15, v22, v35);
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v24, v33, a3);
      v26 = type metadata accessor for OrderedDictionary(0, v25, a3, v39);
      v27 = v36;
      OrderedDictionary.updateValue(_:forKey:)(v24, (uint64_t)v15, v26, v36);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v27, v38);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, TupleTypeMetadata2);
      ++v20;
      if (v23 == MEMORY[0x1A859E4AC](a1, TupleTypeMetadata2))
        goto LABEL_11;
    }
  }
  result = swift_bridgeObjectRelease();
LABEL_13:
  v29 = v32;
  *v32 = v18;
  v29[1] = v19;
  return result;
}

uint64_t sub_1A45DF834@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return OrderedDictionary.init(dictionaryLiteral:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t OrderedDictionary.description.getter()
{
  uint64_t v0;

  v0 = sub_1A4690C78();
  swift_bridgeObjectRetain();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v0);
  sub_1A4690A98();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  sub_1A4690828();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return 2651;
}

void sub_1A45DF968(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  _QWORD *v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD v27[2];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;

  v28 = a5;
  v29 = a6;
  v10 = sub_1A46911A0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v27 - v13;
  v15 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27[1] = a1;
  MEMORY[0x1A859E008](a1, a2, a3, a4, v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a4) == 1)
  {
    v18 = v29;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (qword_1EE71C1C0 != -1)
      swift_once();
    v19 = sub_1A4690318();
    __swift_project_value_buffer(v19, (uint64_t)qword_1EE722E98);
    v20 = sub_1A469030C();
    v21 = sub_1A4690FFC();
    v22 = v18;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1A442D000, v20, v21, "OrderedDictionary unknown key", v23, 2u);
      MEMORY[0x1A85A0114](v23, -1, -1);
    }

    *v22 = 0;
    v22[1] = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a4);
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_1A4691A10();
    sub_1A4690984();
    sub_1A4691A10();
    v24 = v30;
    v25 = v31;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, a4);
    v26 = v29;
    *v29 = v24;
    v26[1] = v25;
  }
}

uint64_t OrderedDictionary.startIndex.getter()
{
  return 0;
}

void OrderedDictionary.endIndex.getter()
{
  JUMPOUT(0x1A859E4ACLL);
}

void OrderedDictionary.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v7 = sub_1A4690318();
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a4[3];
  v11 = sub_1A46911A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - v13;
  v15 = *(_QWORD *)(v4 + 8);
  v16 = a4[2];
  sub_1A4690CA8();
  MEMORY[0x1A859E008](a1, v15, v16, v10, a4[4]);
  v17 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v10) == 1)
  {
    v19 = v23;
    v18 = v24;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    if (qword_1EE71C1C0 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v18, (uint64_t)qword_1EE722E98);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v9, v20, v18);
    v21 = MEMORY[0x1E0DEE9D8];
    sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
    sub_1A443CDB8(v21);
    sub_1A4510F48((uint64_t)"OrderedDictionary unknown key", 29, 2);
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v25, v14, v10);
  }
}

uint64_t sub_1A45DFD78()
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>);
  return sub_1A4690E10();
}

_QWORD *sub_1A45DFDC8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45E01DC(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB508]);
}

uint64_t sub_1A45DFDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>, a3);
  return sub_1A4690E1C();
}

uint64_t sub_1A45DFE38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>, a4);
  return sub_1A4690DF8();
}

uint64_t sub_1A45DFE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>, a3);
  return sub_1A4690E34();
}

void sub_1A45DFEF0()
{
  OrderedDictionary.endIndex.getter();
}

uint64_t sub_1A45DFF04(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

void (*sub_1A45DFF14(uint64_t **a1, uint64_t *a2, _QWORD *a3))(uint64_t *a1, uint64_t a2)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  char *v11;
  void (*v12)(_QWORD *);
  uint64_t v13;
  uint64_t v14;

  v6 = (uint64_t *)malloc(0x40uLL);
  *a1 = v6;
  v7 = a3[2];
  v8 = a3[3];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6[4] = TupleTypeMetadata2;
  v10 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6[5] = v10;
  v11 = (char *)malloc(*(_QWORD *)(v10 + 64));
  v6[6] = (uint64_t)v11;
  v12 = sub_1A45E0048(v6, *a2, a3);
  v14 = v13;
  v6[7] = (uint64_t)v12;
  (*(void (**)(char *))(*(_QWORD *)(v7 - 8) + 16))(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], v14, v8);
  return sub_1A45DFFF4;
}

void sub_1A45DFFF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*a1 + 40) + 8))(*(_QWORD *)(*a1 + 48), *(_QWORD *)(*a1 + 32));
  v4 = *(void **)(v3 + 48);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v3, a2);
  free(v4);
  free((void *)v3);
}

void (*sub_1A45E0048(uint64_t *a1, uint64_t a2, _QWORD *a3))(_QWORD *a1)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  void *v8;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a1 = TupleTypeMetadata2;
  v7 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  a1[1] = v7;
  v8 = malloc(*(_QWORD *)(v7 + 64));
  a1[2] = (uint64_t)v8;
  OrderedDictionary.subscript.getter((uint64_t)v8, (uint64_t)v8 + *(int *)(TupleTypeMetadata2 + 48), a2, a3);
  return sub_1A4580EA8;
}

uint64_t sub_1A45E00E0(uint64_t a1)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>, a1);
  return sub_1A4690E28();
}

uint64_t sub_1A45E0134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45E05C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_1A45E0158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45E05C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

uint64_t sub_1A45E0180()
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>);
  return sub_1A4690E04();
}

_QWORD *sub_1A45E01D0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1A45E01DC(a1, a2, a3, (_QWORD *(*)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DEB500]);
}

_QWORD *sub_1A45E01DC(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, _QWORD *, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  v7 = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>);
  result = a4(&v9, a1, a2, v7, MEMORY[0x1E0DEB458]);
  *a1 = v9;
  return result;
}

uint64_t sub_1A45E0240(uint64_t a1)
{
  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>, a1);
  return sub_1A4690E88();
}

uint64_t sub_1A45E0274(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>, a1);
  v1 = sub_1A45E076C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1A45E02D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1A45DF360(a1, v2[6], v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for OrderedDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for OrderedDictionary);
}

void sub_1A45E0300(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  sub_1A45DF968(a1, v2[6], v2[2], v2[3], v2[4], a2);
}

void sub_1A45E0320()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45E0330(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>);
  return MEMORY[0x1A85A0000](MEMORY[0x1E0DEDE40], a1, &v3);
}

void sub_1A45E0378()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45E0388(uint64_t a1)
{
  uint64_t v3;

  v3 = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedDictionary<A, B>);
  return MEMORY[0x1A85A0000](MEMORY[0x1E0DEDE28], a1, &v3);
}

void sub_1A45E03D0()
{
  JUMPOUT(0x1A85A0000);
}

uint64_t sub_1A45E03E8()
{
  return 24;
}

__n128 sub_1A45E03F4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1A45E0408()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A45E0410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  void (*v16)(char *, uint64_t);
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_1A4690F6C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v17 - v9;
  v11 = sub_1A469084C();
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, v4);
  v12(v8, a2, v4);
  if ((v11 & 1) == 0)
  {
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    result = ((uint64_t (*)(char *, uint64_t))v16)(v10, v4);
    goto LABEL_5;
  }
  v13 = sub_1A469084C();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1A45E0598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45E05C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEA4B0], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3D0]);
}

uint64_t sub_1A45E05AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A45E05C0(a1, a2, a3, a4, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x1E0DEB848], (uint64_t (*)(char *, char *, uint64_t, uint64_t))MEMORY[0x1E0DEA3C0]);
}

uint64_t sub_1A45E05C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  uint64_t (*v23)(char *, char *, uint64_t, uint64_t);

  v23 = a6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v22 - v17;
  v19 = sub_1A469084C();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
  if ((v19 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
    goto LABEL_5;
  }
  v20 = v23(v18, &v15[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  if ((v20 & 1) == 0)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t NSManagedObjectContext.rem_performAndWait<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = v4;
  v21 = a4;
  v22 = sub_1A46911A0();
  v9 = *(_QWORD *)(v22 - 8);
  v10 = MEMORY[0x1E0C80A78](v22);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))((char *)&v21 - v13, 1, 1, a3);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A45E0A58;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_1A4452D50;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44697A0;
  aBlock[3] = &block_descriptor_15;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel_performBlockAndWait_, v18);
  _Block_release(v18);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v20 = v22;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v22);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, a3);
    if ((_DWORD)result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v21, v12, a3);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v20);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[8];

  v22 = a2;
  v21 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v6 = sub_1A4691D10();
  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  v14 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))((char *)&v20 - v12, 1, 1, v6);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = v13;
  v16 = v22;
  v15[4] = a1;
  v15[5] = v16;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1A45E0DE8;
  *(_QWORD *)(v17 + 24) = v15;
  aBlock[4] = sub_1A44A61D0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A44697A0;
  aBlock[3] = &block_descriptor_13_1;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend((id)aBlock[7], sel_performBlockAndWait_, v18);
  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v18 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v6);
    if ((_DWORD)result != 1)
    {
      sub_1A44E65C0(v6, (uint64_t)aBlock, v21);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1A45E0994(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = sub_1A46911A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v13 - v10;
  a2(v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v11, 0, 1, a4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 40))(a1, v11, v7);
}

uint64_t sub_1A45E0A48()
{
  return swift_deallocObject();
}

uint64_t sub_1A45E0A58()
{
  uint64_t v0;

  return sub_1A45E0994(*(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1A45E0A64()
{
  return swift_deallocObject();
}

uint64_t sub_1A45E0CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED243A28);
  v8 = sub_1A4691D10();
  v9 = sub_1A46911A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v14[-v11];
  v15 = a4;
  v16 = a2;
  v17 = a3;
  sub_1A44E6940((void (*)(_BYTE *))sub_1A45E0E04, (uint64_t)&v14[-v11]);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v12, 0, 1, v8);
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v10 + 40))(a1, v12, v9);
}

uint64_t sub_1A45E0DD8()
{
  return swift_deallocObject();
}

uint64_t sub_1A45E0DE8()
{
  uint64_t *v0;

  return sub_1A45E0CC8(v0[3], v0[4], v0[5], v0[2]);
}

uint64_t sub_1A45E0DF4()
{
  return swift_deallocObject();
}

uint64_t sub_1A45E0E04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 24))();
  if (v2)
    *a1 = v2;
  return result;
}

uint64_t static REMRemindersListDataView.fetchCustomSmartList(store:smartList:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:shouldFetchManualOrderingID:diffingAgainst:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, char *a7@<X6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v15;
  uint64_t v16;
  char *v17;
  char v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t result;
  __int128 v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  NSObject *v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  _QWORD *v44;
  void *v45;
  id v46;
  NSObject *v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  id v51;
  id v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t *v59;
  _QWORD *v60;
  int v61;
  NSObject *v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  id v70;
  NSObject *v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _OWORD v77[3];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  id v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  void *v92;
  id v93;
  uint64_t v94;

  *((_QWORD *)&v75 + 1) = a1;
  LODWORD(v74) = a8;
  LODWORD(v73) = a5;
  v72 = a9;
  *(_QWORD *)&v75 = a10;
  v15 = (int *)type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a3) = *a3;
  v18 = *a7;
  v19 = objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  v20 = a2;
  v21 = REMSmartList_Codable.init(_:)(v20);
  sub_1A4497EE8(a4, (uint64_t)&v17[v15[6]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a6, (uint64_t)&v17[v15[8]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(_QWORD *)v17 = v21;
  v17[8] = (char)a3;
  v17[v15[7]] = v73;
  v17[v15[9]] = v18;
  v17[v15[10]] = v74;
  v22 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation());
  v23 = objc_msgSend(v22, sel_initWithFetchResultTokenToDiffAgainst_, (_QWORD)v75);
  v24 = v76;
  sub_1A4477B08((unint64_t)v23, (uint64_t)&v84);
  if (v24)
  {

    return sub_1A4497F2C((uint64_t)v17, type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters);
  }
  else
  {
    v67 = 0;

    v77[0] = v84;
    v77[1] = v85;
    v81 = v90;
    v82 = v91;
    v83 = v92;
    v77[2] = v86;
    v78 = v87;
    v79 = v88;
    v80 = v89;
    v65 = v85;
    v66 = *((_QWORD *)&v84 + 1);
    v63 = BYTE9(v85);
    v64 = BYTE8(v85);
    v26 = v86;
    v27 = (void *)*((_QWORD *)&v89 + 1);
    v28 = v90;
    v29 = v91;
    v69 = v84;
    swift_bridgeObjectRetain();
    v76 = v26;
    swift_bridgeObjectRetain();
    v73 = *((_QWORD *)&v26 + 1);
    swift_bridgeObjectRetain();
    v30 = v27;
    v74 = *((_QWORD *)&v28 + 1);
    v75 = v29;
    sub_1A44962FC((void *)v28);
    if (qword_1ED243118 != -1)
      swift_once();
    v31 = sub_1A4690318();
    v71 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED241540);
    v68 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70 = v30;
    sub_1A44962FC((void *)v28);
    v62 = v68;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70 = v70;
    v68 = (id)v28;
    sub_1A44962FC((void *)v28);
    v32 = sub_1A469030C();
    v33 = sub_1A4691008();
    v34 = v33;
    v71 = v32;
    if (os_log_type_enabled(v32, v33))
    {
      v35 = swift_slowAlloc();
      v61 = v34;
      v36 = v35;
      v37 = (_QWORD *)swift_slowAlloc();
      v60 = v37;
      *(_DWORD *)v36 = 138412546;
      v38 = v62;
      v39 = -[NSObject objectID](v62, sel_objectID);
      v93 = v39;
      v59 = &v94;
      sub_1A46911D0();
      *v37 = v39;

      *(_WORD *)(v36 + 12) = 2048;
      v62 = (v36 + 14);
      v40 = v69;
      v41 = v70;
      v58 = *(void **)(v69 + 16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1A4496404(v68);
      v93 = v58;
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = v40;
      swift_bridgeObjectRelease();
      v43 = v68;
      sub_1A4496404(v68);
      _os_log_impl(&dword_1A442D000, v71, (os_log_type_t)v61, "DATAVIEW RESULT {name: REMRemindersListDataView_CustomSmartListInvocation, smartList.objectID: %@, reminder.count: %ld}", (uint8_t *)v36, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      v44 = v60;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v44, -1, -1);
      MEMORY[0x1A85A0114](v36, -1, -1);
      v45 = v43;
    }
    else
    {
      v46 = v70;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v42 = v69;
      swift_bridgeObjectRelease();
      v45 = v68;
      sub_1A4496404(v68);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A4496404(v45);
      v47 = v62;

      v71 = v47;
    }

    sub_1A4497F2C((uint64_t)v17, type metadata accessor for REMRemindersListDataView.CustomSmartListInvocation.Parameters);
    v48 = v78;
    v49 = v79;
    v50 = v80;
    v51 = v83;
    v52 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A449C5CC((uint64_t)v77);
    v53 = v72;
    v54 = v66;
    *v72 = v42;
    v53[1] = v54;
    v53[2] = v65;
    *((_BYTE *)v53 + 24) = v64;
    *((_BYTE *)v53 + 25) = v63;
    v55 = v73;
    v53[4] = v76;
    v53[5] = v55;
    v53[6] = v70;
    v53[7] = v45;
    v56 = v75;
    v53[8] = v74;
    *(_OWORD *)(v53 + 9) = __PAIR128__(*((unint64_t *)&v75 + 1), v56);
    *(_OWORD *)(v53 + 11) = v48;
    *(_OWORD *)(v53 + 13) = v49;
    v53[15] = v50;
    v53[16] = v51;
  }
  return result;
}

uint64_t REMRemindersListDataView.FetchConfiguration.init(sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char *a5@<X4>, _BYTE *a6@<X8>)
{
  char v10;
  int *Configuration;
  uint64_t result;

  v10 = *a5;
  *a6 = *a1;
  Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  sub_1A44683E0(a2, (uint64_t)&a6[Configuration[5]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  a6[Configuration[6]] = a3;
  result = sub_1A44683E0(a4, (uint64_t)&a6[Configuration[7]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  a6[Configuration[8]] = v10;
  return result;
}

__n128 static REMRemindersListDataView.fetchList_Sections(store:list:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  objc_class *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  __n128 result;
  char v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  char v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  objc_super v42;
  uint64_t v43;

  v30 = a3;
  v31 = a4;
  v32 = a1;
  v7 = type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (objc_class *)type metadata accessor for REMList_Codable();
  v11 = objc_allocWithZone(v10);
  v12 = a2;
  v13 = objc_msgSend(v12, sel_store);
  v14 = objc_msgSend(v12, sel_account);
  v15 = objc_msgSend(v12, sel_storage);
  v42.receiver = v11;
  v42.super_class = v10;
  v16 = objc_msgSendSuper2(&v42, sel_initWithStore_account_storage_, v13, v14, v15);

  v17 = v16;
  v18 = objc_msgSend(v12, sel_parentList);
  objc_msgSend(v17, sel_setParentList_, v18);

  sub_1A4497EE8(v30, (uint64_t)v9 + *(int *)(v7 + 20), type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *v9 = v17;
  v19 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ListSectionsInvocation());
  v20 = objc_msgSend(v19, sel_initWithFetchResultTokenToDiffAgainst_, v31);
  v21 = v43;
  sub_1A447BD28(v20, (unint64_t)v9, &v33);

  sub_1A4497F2C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.ListSectionsInvocation.Parameters);
  if (!v21)
  {
    v23 = v35;
    v24 = v36;
    v25 = v41;
    result = v34;
    v26 = v37;
    v27 = v38;
    v28 = v39;
    v29 = v40;
    *(_QWORD *)a5 = v33;
    *(__n128 *)(a5 + 8) = result;
    *(_BYTE *)(a5 + 24) = v23;
    *(_BYTE *)(a5 + 25) = v24;
    *(_OWORD *)(a5 + 32) = v26;
    *(_OWORD *)(a5 + 48) = v27;
    *(_OWORD *)(a5 + 64) = v28;
    *(_OWORD *)(a5 + 80) = v29;
    *(_QWORD *)(a5 + 96) = v25;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchCustomSmartList_Sections(store:smartList:shouldFetchManualOrderingID:configuration:diffingAgainst:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[8];
  void *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  void *v56;
  uint64_t v57;

  v45 = a1;
  v11 = type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  v15 = REMSmartList_Codable.init(_:)(a2);
  sub_1A4497EE8(a4, (uint64_t)&v13[*(int *)(v11 + 24)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *(_QWORD *)v13 = v15;
  v13[8] = a3;
  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a5);
  v17 = v57;
  sub_1A447B2C8((unint64_t)v16, (uint64_t)&v48);

  if (v17)
    return sub_1A4497F2C((uint64_t)v13, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  sub_1A4497F2C((uint64_t)v13, type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsInvocation.Parameters);
  v46[6] = v54;
  v46[7] = v55;
  v47 = v56;
  v46[2] = v50;
  v46[3] = v51;
  v46[4] = v52;
  v46[5] = v53;
  v46[0] = v48;
  v46[1] = v49;
  v44 = v49;
  v45 = *((_QWORD *)&v48 + 1);
  v42 = BYTE9(v49);
  v43 = BYTE8(v49);
  v39 = v48;
  v38 = *((_QWORD *)&v50 + 1);
  v40 = v50;
  v19 = v51;
  v34 = v52;
  v35 = *((_QWORD *)&v51 + 1);
  v57 = *((_QWORD *)&v52 + 1);
  v32 = *((_QWORD *)&v53 + 1);
  v20 = v53;
  v33 = v54;
  v36 = v55;
  v41 = 0;
  v21 = *((_QWORD *)&v55 + 1);
  v22 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v37 = (id)v19;
  sub_1A44962FC(*((void **)&v19 + 1));
  v23 = v22;
  v24 = v32;
  swift_bridgeObjectRetain();
  v25 = v33;
  swift_bridgeObjectRetain();
  v26 = *((_QWORD *)&v33 + 1);
  swift_bridgeObjectRetain();
  v27 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1A454A698((uint64_t)v46);
  v28 = v45;
  *(_QWORD *)a6 = v39;
  *(_QWORD *)(a6 + 8) = v28;
  *(_QWORD *)(a6 + 16) = v44;
  *(_BYTE *)(a6 + 24) = v43;
  *(_BYTE *)(a6 + 25) = v42;
  v29 = v38;
  *(_QWORD *)(a6 + 32) = v40;
  *(_QWORD *)(a6 + 40) = v29;
  v30 = v35;
  *(_QWORD *)(a6 + 48) = v37;
  *(_QWORD *)(a6 + 56) = v30;
  v31 = v57;
  *(_QWORD *)(a6 + 64) = v34;
  *(_QWORD *)(a6 + 72) = v31;
  *(_QWORD *)(a6 + 80) = v20;
  *(_QWORD *)(a6 + 88) = v24;
  *(_QWORD *)(a6 + 96) = v25;
  *(_QWORD *)(a6 + 104) = v26;
  *(_QWORD *)(a6 + 112) = v27;
  *(_QWORD *)(a6 + 120) = v21;
  *(_QWORD *)(a6 + 128) = v22;
  return result;
}

void static REMRemindersListDataView.fetchListRepresentationOfTemplate_Sections(store:templateObjectID:configuration:diffingAgainst:)(uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  objc_class *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[8];
  void *v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  void *v62;
  objc_super v63;
  uint64_t v64;

  v50 = a4;
  v51 = a1;
  v8 = sub_1A46900FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *a3;
  LODWORD(v48) = a3[1];
  LODWORD(v47) = a3[2];
  v12 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v46 = objc_allocWithZone(v12);
  v13 = a2;
  v14 = objc_msgSend(v13, sel_uuid);
  sub_1A46900F0();

  v15 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v16 = objc_msgSend(v13, sel_entityName);
  if (!v16)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v16 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v63.receiver = v46;
  v63.super_class = v12;
  v17 = objc_msgSendSuper2(&v63, sel_initWithUUID_entityName_, v15, v16);

  v18 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TemplateSectionsInvocation());
  v19 = objc_msgSend(v18, sel_initWithFetchResultTokenToDiffAgainst_, v50);
  v20 = v19;
  if ((_DWORD)v47)
    v21 = 0x10000;
  else
    v21 = 0;
  v22 = v64;
  sub_1A447C9DC((unint64_t)v19, v17, v49 | ((_DWORD)v48 << 8) | v21, (uint64_t)&v54);

  if (!v22)
  {
    v52[0] = v54;
    v52[1] = v55;
    v52[2] = v56;
    v52[3] = v57;
    v52[4] = v58;
    v52[5] = v59;
    v52[6] = v60;
    v52[7] = v61;
    v43 = v62;
    v53 = v62;
    v64 = *((_QWORD *)&v54 + 1);
    v47 = v54;
    v51 = v55;
    v49 = BYTE9(v55);
    LODWORD(v50) = BYTE8(v55);
    v48 = v56;
    v23 = v57;
    v40 = v58;
    v41 = *((_QWORD *)&v57 + 1);
    v36 = *((_QWORD *)&v59 + 1);
    v42 = v59;
    v37 = v60;
    v38 = v61;
    v39 = *((_QWORD *)&v58 + 1);
    v45 = *((_QWORD *)&v61 + 1);
    v46 = (id)*((_QWORD *)&v56 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = (id)v23;
    sub_1A44962FC(*((void **)&v23 + 1));
    v24 = v43;
    v25 = v43;
    v26 = v36;
    swift_bridgeObjectRetain();
    v27 = v37;
    swift_bridgeObjectRetain();
    v28 = *((_QWORD *)&v37 + 1);
    swift_bridgeObjectRetain();
    v29 = v38;
    swift_bridgeObjectRetain();
    v30 = v45;
    swift_bridgeObjectRetain();
    sub_1A454A698((uint64_t)v52);
    v31 = v64;
    *(_QWORD *)a5 = v47;
    *(_QWORD *)(a5 + 8) = v31;
    *(_QWORD *)(a5 + 16) = v51;
    *(_BYTE *)(a5 + 24) = v50;
    *(_BYTE *)(a5 + 25) = v49;
    v32 = v46;
    *(_QWORD *)(a5 + 32) = v48;
    *(_QWORD *)(a5 + 40) = v32;
    v33 = v41;
    *(_QWORD *)(a5 + 48) = v44;
    *(_QWORD *)(a5 + 56) = v33;
    v34 = v39;
    *(_QWORD *)(a5 + 64) = v40;
    *(_QWORD *)(a5 + 72) = v34;
    *(_QWORD *)(a5 + 80) = v42;
    *(_QWORD *)(a5 + 88) = v26;
    *(_QWORD *)(a5 + 96) = v27;
    *(_QWORD *)(a5 + 104) = v28;
    *(_QWORD *)(a5 + 112) = v29;
    *(_QWORD *)(a5 + 120) = v30;
    *(_QWORD *)(a5 + 128) = v24;
  }
}

void static REMRemindersListDataView.fetchListRepresentationOfTemplate(with:store:sortingStyle:fetchSubtasks:fetchManualOrderingID:diffingAgainst:)(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  id v33;
  void *v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  _BOOL4 v38;
  void *v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  id v54;
  __int128 v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  _QWORD *v62;
  int v63;
  id v64;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  void *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  _OWORD v81[5];
  __int128 v82;
  __int128 v83;
  __int128 v84;
  id v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  void *v94;
  objc_super v95;
  id v96;
  uint64_t v97;

  v78 = a2;
  v77 = a6;
  LODWORD(v80) = a5;
  v11 = sub_1A46900FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v76) = *a3;
  LODWORD(v75) = *a4;
  v15 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v16 = objc_allocWithZone(v15);
  v17 = a1;
  v18 = objc_msgSend(v17, sel_uuid);
  sub_1A46900F0();

  v19 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v20 = objc_msgSend(v17, sel_entityName);
  if (!v20)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v20 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v95.receiver = v16;
  v95.super_class = v15;
  v21 = objc_msgSendSuper2(&v95, sel_initWithUUID_entityName_, v19, v20);

  v22 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TemplateInvocation());
  v23 = objc_msgSend(v22, sel_initWithFetchResultTokenToDiffAgainst_, v77);
  v24 = v23;
  if ((v80 & 1) != 0)
    v25 = 0x10000;
  else
    v25 = 0;
  v80 = v21;
  v26 = v79;
  sub_1A447D450((unint64_t)v23, v21, v25 | v76 | ((_DWORD)v75 << 8), (uint64_t)&v86);
  if (v26)
  {

  }
  else
  {
    v65 = a7;
    v70 = 0;

    v81[0] = v86;
    v81[1] = v87;
    v81[2] = v88;
    v81[3] = v89;
    v81[4] = v90;
    v82 = v91;
    v83 = v92;
    v84 = v93;
    v85 = v94;
    v27 = *((_QWORD *)&v86 + 1);
    v68 = *((_QWORD *)&v87 + 1);
    v69 = v87;
    v66 = BYTE1(v88);
    v67 = v88;
    v28 = *((_QWORD *)&v88 + 1);
    v29 = v89;
    v31 = v90;
    v30 = v91;
    v75 = (id)v86;
    v76 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v77 = v29;
    swift_bridgeObjectRetain();
    v73 = (void *)*((_QWORD *)&v29 + 1);
    v78 = v30;
    v79 = *((_QWORD *)&v31 + 1);
    sub_1A44962FC(*((void **)&v29 + 1));
    if (qword_1ED243118 != -1)
      swift_once();
    v32 = sub_1A4690318();
    v72 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED241540);
    v33 = v17;
    v75 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = v73;
    sub_1A44962FC(v73);
    v64 = v33;
    v75 = v75;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A44962FC(v34);
    v35 = sub_1A469030C();
    v36 = sub_1A4691008();
    v37 = v36;
    v72 = v35;
    v38 = os_log_type_enabled(v35, v36);
    v39 = v34;
    v74 = v28;
    v71 = v31;
    if (v38)
    {
      v40 = swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      v62 = v41;
      *(_DWORD *)v40 = 138412546;
      v63 = v37;
      v42 = v64;
      v96 = v64;
      v61[1] = &v97;
      v43 = v64;
      sub_1A46911D0();
      *v41 = v42;

      *(_WORD *)(v40 + 12) = 2048;
      v64 = (id)(v40 + 14);
      v44 = v76;
      v61[0] = *(_QWORD *)(v76 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v75;

      sub_1A4496404(v39);
      v96 = (id)v61[0];
      sub_1A46911D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1A4496404(v39);
      _os_log_impl(&dword_1A442D000, v72, (os_log_type_t)v63, "DATAVIEW RESULT {name: REMRemindersListDataView_TemplateInvocation, templateObjectID: %@, reminder.count: %ld}", (uint8_t *)v40, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      v46 = v62;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v46, -1, -1);
      MEMORY[0x1A85A0114](v40, -1, -1);
      v47 = v44;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v76;
      swift_bridgeObjectRelease();
      v49 = v75;

      sub_1A4496404(v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      v50 = v64;
      sub_1A4496404(v34);
      v47 = v48;
    }
    v51 = v65;

    v52 = *((_QWORD *)&v82 + 1);
    v53 = v83;
    v55 = v84;
    v54 = v85;
    v56 = v85;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A4543BAC((uint64_t)v81);
    *(_QWORD *)v51 = v75;
    *(_QWORD *)(v51 + 8) = v47;
    v57 = v68;
    *(_QWORD *)(v51 + 16) = v69;
    *(_QWORD *)(v51 + 24) = v57;
    *(_BYTE *)(v51 + 32) = v67;
    *(_BYTE *)(v51 + 33) = v66;
    v58 = v77;
    *(_QWORD *)(v51 + 40) = v74;
    *(_QWORD *)(v51 + 48) = v58;
    v59 = v71;
    *(_QWORD *)(v51 + 56) = v73;
    *(_QWORD *)(v51 + 64) = v59;
    v60 = v78;
    *(_QWORD *)(v51 + 72) = v79;
    *(_QWORD *)(v51 + 80) = v60;
    *(_QWORD *)(v51 + 88) = v52;
    *(_OWORD *)(v51 + 96) = v53;
    *(_OWORD *)(v51 + 112) = v55;
    *(_QWORD *)(v51 + 128) = v54;
  }
}

uint64_t sub_1A45E22E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED241540);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED241540);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

ReminderKitInternal::REMRemindersListDataView::SortingDirection_optional __swiftcall REMRemindersListDataView.SortingDirection.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (ReminderKitInternal::REMRemindersListDataView::SortingDirection_optional)rawValue;
}

uint64_t REMRemindersListDataView.SortingDirection.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1A45E2394()
{
  sub_1A460E13C();
  return sub_1A4690B7C();
}

uint64_t sub_1A45E23F0()
{
  sub_1A460E13C();
  return sub_1A4690B40();
}

void REMRemindersListDataView.SortingStyle.init(remSortingStyle:)(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  id v57;
  char v58;

  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v6 = v5;
  if (v4 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v9 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_15:

    v20 = 0x80;
    goto LABEL_16;
  }
  v10 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v12 = v11;
  if (v10 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_18;
  }
  v15 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v15 & 1) != 0)
  {
LABEL_18:

    v20 = -127;
    goto LABEL_16;
  }
  v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v18 = v17;
  if (v16 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_20:

    v20 = 0;
    goto LABEL_16;
  }
  v21 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    goto LABEL_20;
  v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v24 = v23;
  if (v22 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
LABEL_25:

    v20 = 1;
    goto LABEL_16;
  }
  v26 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) != 0)
    goto LABEL_25;
  v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v29 = v28;
  if (v27 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v29 == v30)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:

    v20 = 32;
    goto LABEL_16;
  }
  v31 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_30;
  v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v34 = v33;
  if (v32 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v34 == v35)
  {
    swift_bridgeObjectRelease_n();
LABEL_35:

    v20 = 33;
    goto LABEL_16;
  }
  v36 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v36 & 1) != 0)
    goto LABEL_35;
  v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v39 = v38;
  if (v37 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v39 == v40)
  {
    swift_bridgeObjectRelease_n();
LABEL_40:

    v20 = 64;
    goto LABEL_16;
  }
  v41 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v41 & 1) != 0)
    goto LABEL_40;
  v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v44 = v43;
  if (v42 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v44 == v45)
  {
    swift_bridgeObjectRelease_n();
LABEL_45:

    v20 = 65;
    goto LABEL_16;
  }
  v46 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v46 & 1) != 0)
    goto LABEL_45;
  v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v49 = v48;
  if (v47 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v49 == v50)
  {
    swift_bridgeObjectRelease_n();
LABEL_50:

    v20 = 96;
    goto LABEL_16;
  }
  v51 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v51 & 1) != 0)
    goto LABEL_50;
  v52 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v54 = v53;
  v58 = 97;
  if (v52 != _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() || v54 != v55)
  {
    if ((sub_1A4691A40() & 1) != 0)
      v56 = 97;
    else
      v56 = 0x80;
    v58 = v56;
  }
  v57 = a1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = v58;
LABEL_16:
  *a2 = v20;
}

void REMRemindersListDataView.SortingStyle.sortDirection.getter(char *a1@<X8>)
{
  _BYTE *v1;
  char v2;

  v2 = *v1 & 1;
  if ((char)*v1 < 0)
    v2 = 2;
  *a1 = v2;
}

uint64_t REMRemindersListDataView.SortingStyle.flipped()()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45E29B4 + 4 * byte_1A46AB820[*v0 >> 5]))();
}

void sub_1A45E29B4(BOOL *a1@<X8>)
{
  char v1;

  *a1 = (v1 & 1) == 0;
}

void sub_1A45E29C4(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1 & 1 ^ 0x21;
}

uint64_t REMRemindersListDataView.SortingStyle.cloned(withSortingDirection:)()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45E2A14 + 4 * byte_1A46AB825[*v0 >> 5]))();
}

void sub_1A45E2A14(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

void sub_1A45E2A1C(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1 | 0x20;
}

void sub_1A45E2A28(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1 | 0x40;
}

void sub_1A45E2A34(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1 | 0x60;
}

uint64_t REMRemindersListDataView.SortingStyle.isEqualIgnoringDirection(_:)()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45E2A64 + 4 * byte_1A46AB82A[*v0 >> 5]))();
}

BOOL sub_1A45E2A64@<W0>(unsigned int a1@<W8>)
{
  return a1 < 0x20;
}

BOOL sub_1A45E2A88@<W0>(char a1@<W8>)
{
  return (a1 & 0xE0) == 32;
}

BOOL sub_1A45E2A98@<W0>(char a1@<W8>)
{
  return (a1 & 0xE0) == 64;
}

BOOL sub_1A45E2AA8@<W0>(char a1@<W8>)
{
  return (a1 & 0xE0) == 96;
}

id REMRemindersListDataView.SortingStyle.remSortingStyle.getter()
{
  return (id)sub_1A45FC94C();
}

void static REMRemindersListDataView.SortingStyle.fallbackForREMList.getter(_BYTE *a1@<X8>)
{
  *a1 = -127;
}

void static REMRemindersListDataView.SortingStyle.fallbackForCustomSmartList.getter(_BYTE *a1@<X8>)
{
  *a1 = 64;
}

void *static REMRemindersListDataView.SortingStyle.allCases.getter()
{
  return &unk_1E4C0FB20;
}

uint64_t REMRemindersListDataView.SortingStyle.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)())((char *)sub_1A45E2B30 + 4 * byte_1A46AB82F[*v0 >> 5]))();
}

uint64_t sub_1A45E2B30()
{
  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

void REMRemindersListDataView.SortingStyle.hash(into:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1A45E2BD8()
{
  sub_1A4691C98();
  return sub_1A4691C98();
}

void REMRemindersListDataView.SortingStyle.hashValue.getter()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A45E2C64()
{
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t sub_1A45E2CD4(_QWORD *a1)
{
  return REMRemindersListDataView.SortingStyle.init(from:)(a1);
}

uint64_t REMRemindersListDataView.SortingStyle.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F700);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FC9E0();
  sub_1A4691D28();
  if (!v1)
  {
    sub_1A45FCA24();
    sub_1A46917C4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1A45E2E24()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  *v0 = 0x80;
  JUMPOUT(0x1A45E2DDCLL);
}

void sub_1A45E2E40()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  *v0 = -127;
  JUMPOUT(0x1A45E2DDCLL);
}

void sub_1A45E2E5C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 82) = 1;
  sub_1A45FCA68();
  sub_1A46917C4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_BYTE *)(v5 - 81);
  JUMPOUT(0x1A45E2DDCLL);
}

void sub_1A45E2EB4()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 72) = 1;
  sub_1A45FCA68();
  sub_1A46917C4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_BYTE *)(v5 - 71) | 0x20;
  JUMPOUT(0x1A45E2DDCLL);
}

void sub_1A45E2F10()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 70) = 1;
  sub_1A45FCA68();
  sub_1A46917C4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_BYTE *)(v5 - 69) | 0x40;
  JUMPOUT(0x1A45E2DDCLL);
}

void sub_1A45E2F6C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 68) = 1;
  sub_1A45FCA68();
  sub_1A46917C4();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_BYTE *)(v5 - 67) | 0x60;
  JUMPOUT(0x1A45E2DDCLL);
}

void sub_1A45E2FC8(_QWORD *a1)
{
  REMRemindersListDataView.SortingStyle.encode(to:)(a1);
}

void REMRemindersListDataView.SortingStyle.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  int v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E38);
  MEMORY[0x1E0C80A78](v3);
  v4 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FC9E0();
  sub_1A4691D40();
  __asm { BR              X10 }
}

uint64_t sub_1A45E3094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 65) = 2;
  *(_BYTE *)(v5 - 66) = 0;
  sub_1A45FCAAC();
  sub_1A4691890();
  if (!v2)
  {
    *(_BYTE *)(v5 - 65) = v4 & 1;
    *(_BYTE *)(v5 - 66) = 1;
    sub_1A45FCAF0();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
}

void sub_1A45E3190()
{
  unsigned __int8 *v0;
  int v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A45E31C8()
{
  sub_1A4691C98();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

void sub_1A45E3238(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FB20;
}

uint64_t sub_1A45E3248()
{
  sub_1A45FC94C();
  return _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
}

ReminderKitInternal::REMRemindersListDataView::FetchSubtasks_optional __swiftcall REMRemindersListDataView.FetchSubtasks.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMRemindersListDataView::FetchSubtasks_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t REMRemindersListDataView.FetchSubtasks.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 28271;
  if (*v0 != 1)
    v1 = 0x746E756F63;
  if (*v0)
    return v1;
  else
    return 6710895;
}

uint64_t sub_1A45E3318()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45E33A0()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45E3404()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMRemindersListDataView::FetchSubtasks_optional sub_1A45E3488(Swift::String *a1)
{
  return REMRemindersListDataView.FetchSubtasks.init(rawValue:)(*a1);
}

void sub_1A45E3494(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE200000000000000;
  v5 = 28271;
  if (v2 != 1)
  {
    v5 = 0x746E756F63;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 6710895;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A45E34DC()
{
  sub_1A460E0F8();
  return sub_1A4690B70();
}

uint64_t sub_1A45E3538()
{
  sub_1A460E0F8();
  return sub_1A4690B34();
}

uint64_t sub_1A45E3584(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466B140(*a1, *a2);
}

uint64_t sub_1A45E3594(_QWORD *a1)
{
  return REMRemindersListDataView.ShowCompleted.init(from:)(a1);
}

uint64_t REMRemindersListDataView.ShowCompleted.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v5);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F708);
  MEMORY[0x1E0C80A78](v4);
  v2 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCB34();
  sub_1A4691D28();
  if (!v6)
  {
    sub_1A45FCB78();
    sub_1A46917C4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1A45E38B8(_QWORD *a1)
{
  REMRemindersListDataView.ShowCompleted.encode(to:)(a1);
}

void REMRemindersListDataView.ShowCompleted.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v11 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v11);
  v4 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E40);
  v8 = *(_QWORD *)(v7 - 8);
  v12 = v7;
  v13 = v8;
  MEMORY[0x1E0C80A78](v7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCB34();
  sub_1A4691D40();
  sub_1A4497EE8(v2, (uint64_t)v6, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  v9 = (char *)sub_1A45E3A18 + 4 * byte_1A46AB852[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A45E3A18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v4 - 120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v3, v5);
  *(_BYTE *)(v4 - 88) = 2;
  *(_BYTE *)(v4 - 65) = 0;
  sub_1A45FCBBC();
  v6 = *(_QWORD *)(v4 - 112);
  v7 = *(_QWORD *)(v4 - 104);
  sub_1A4691890();
  if (!v6)
  {
    *(_BYTE *)(v4 - 88) = 1;
    sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A4691890();
  }
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v7);
}

void REMRemindersListDataView.FetchConfiguration.sortingStyle.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t REMRemindersListDataView.FetchConfiguration.showCompleted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Configuration;

  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  return sub_1A4497EE8(v1 + *(int *)(Configuration + 20), a1, type metadata accessor for REMRemindersListDataView.ShowCompleted);
}

uint64_t REMRemindersListDataView.FetchConfiguration.countCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMRemindersListDataView.FetchConfiguration(0) + 24));
}

uint64_t REMRemindersListDataView.FetchConfiguration.remindersPrefetch.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t Configuration;

  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  return sub_1A4497EE8(v1 + *(int *)(Configuration + 28), a1, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
}

uint64_t REMRemindersListDataView.FetchConfiguration.fetchSubtasks.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t sub_1A45E3CCC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E3D04 + 4 * byte_1A46AB856[*v0]))(0x53676E6974726F73, 0xEC000000656C7974);
}

uint64_t sub_1A45E3D04()
{
  return 0x706D6F43776F6873;
}

uint64_t sub_1A45E3D28()
{
  return 0x6D6F43746E756F63;
}

unint64_t sub_1A45E3D4C()
{
  return 0xD000000000000011;
}

uint64_t sub_1A45E3D68()
{
  return 0x6275536863746566;
}

uint64_t sub_1A45E3D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460A2E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E3DB0()
{
  sub_1A45FCC00();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E3DD8()
{
  sub_1A45FCC00();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.FetchConfiguration.encode(to:)(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t Configuration;
  _BYTE v11[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F330);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCC00();
  sub_1A4691D40();
  v11[15] = *v3;
  v11[14] = 0;
  sub_1A45FCC44();
  sub_1A4691890();
  if (!v2)
  {
    Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
    v11[13] = 1;
    type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
    sub_1A4436344(&qword_1ED240AD0, type metadata accessor for REMRemindersListDataView.ShowCompleted, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ShowCompleted);
    sub_1A4691890();
    v11[12] = 2;
    sub_1A4691860();
    v11[11] = 3;
    type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    sub_1A4436344(&qword_1ED242BC0, type metadata accessor for REMRemindersListDataView.RemindersPrefetch, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.RemindersPrefetch);
    sub_1A4691890();
    v11[10] = v3[*(int *)(Configuration + 32)];
    v11[9] = 4;
    sub_1A45FCC88();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListDataView.FetchConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *Configuration;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v18 = a2;
  v19 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  MEMORY[0x1E0C80A78](v19);
  v20 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  MEMORY[0x1E0C80A78](v21);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F720);
  v6 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  MEMORY[0x1E0C80A78](Configuration);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCC00();
  v22 = v8;
  v12 = (uint64_t)v24;
  sub_1A4691D28();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = a1;
  v13 = v6;
  v30 = 0;
  sub_1A45FCCCC();
  v14 = v22;
  sub_1A46917C4();
  *v11 = v31;
  v29 = 1;
  sub_1A4436344(&qword_1ED23F598, type metadata accessor for REMRemindersListDataView.ShowCompleted, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ShowCompleted);
  sub_1A46917C4();
  sub_1A44683E0((uint64_t)v5, (uint64_t)&v11[Configuration[5]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  v28 = 2;
  v11[Configuration[6]] = sub_1A4691794() & 1;
  v27 = 3;
  sub_1A4436344(&qword_1ED23F5B8, type metadata accessor for REMRemindersListDataView.RemindersPrefetch, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.RemindersPrefetch);
  v15 = (uint64_t)v20;
  sub_1A46917C4();
  sub_1A44683E0(v15, (uint64_t)&v11[Configuration[7]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  v25 = 4;
  sub_1A45FCD10();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v23);
  v11[Configuration[8]] = v26;
  sub_1A4497EE8((uint64_t)v11, v18, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_1A4497F2C((uint64_t)v11, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
}

uint64_t sub_1A45E4408@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.FetchConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1A45E441C(_QWORD *a1)
{
  return REMRemindersListDataView.FetchConfiguration.encode(to:)(a1);
}

uint64_t sub_1A45E4434()
{
  sub_1A45FCE64();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E445C()
{
  sub_1A45FCE64();
  return sub_1A4691DC4();
}

uint64_t sub_1A45E4484()
{
  sub_1A45FCDDC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E44AC()
{
  sub_1A45FCDDC();
  return sub_1A4691DC4();
}

uint64_t sub_1A45E44D4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E4508 + 4 * byte_1A46AB85B[*v0]))(0x6C6562614C6C6C61, 0xE900000000000073);
}

uint64_t sub_1A45E4508()
{
  return 0x736C6562614C6F6ELL;
}

uint64_t sub_1A45E4520()
{
  return 6581857;
}

uint64_t sub_1A45E4530()
{
  return 29295;
}

uint64_t sub_1A45E453C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460A578(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E4560()
{
  sub_1A45FCD54();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E4588()
{
  sub_1A45FCD54();
  return sub_1A4691DC4();
}

uint64_t sub_1A45E45B0()
{
  sub_1A45FCE20();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E45D8()
{
  sub_1A45FCE20();
  return sub_1A4691DC4();
}

uint64_t sub_1A45E4600()
{
  _BYTE *v0;

  if (*v0)
    return 0x6564756C637865;
  else
    return 0x6564756C636E69;
}

uint64_t sub_1A45E4628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460A714(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E464C()
{
  sub_1A45FCD98();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E4674()
{
  sub_1A45FCD98();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.HashtagLabelPredicate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722EB0);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722EB8);
  v32 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722EC0);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v29 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722EC8);
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722ED0);
  v39 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  v38 = v1[1];
  v15 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCD54();
  sub_1A4691D40();
  if (!v15)
  {
    v21 = v32;
    LOBYTE(v42) = 2;
    sub_1A45FCDDC();
    v22 = v33;
    sub_1A469180C();
    v42 = v14;
    v41 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
    sub_1A45BFCA0(&qword_1ED243130, &qword_1ED243F40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    v23 = v34;
    v24 = v40;
    sub_1A4691890();
    if (!v24)
    {
      v42 = v38;
      v41 = 1;
      sub_1A4691890();
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  }
  v16 = v40;
  if (v15 != 1)
  {
    if (v14 | v38)
    {
      LOBYTE(v42) = 1;
      sub_1A45FCE20();
      v25 = v29;
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v31);
    }
    else
    {
      LOBYTE(v42) = 0;
      sub_1A45FCE64();
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v11);
  }
  LOBYTE(v42) = 3;
  sub_1A45FCD98();
  v17 = v11;
  v18 = v35;
  sub_1A469180C();
  v42 = v14;
  v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
  sub_1A45BFCA0(&qword_1ED243130, &qword_1ED243F40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  v19 = v37;
  sub_1A4691890();
  if (!v16)
  {
    v42 = v38;
    v41 = 1;
    sub_1A4691890();
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v13, v17);
}

uint64_t REMRemindersListDataView.HashtagLabelPredicate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;

  v27 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F00);
  v23[2] = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v30 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F08);
  v5 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  v26 = v5;
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F10);
  v23[3] = *(_QWORD *)(v7 - 8);
  v23[4] = v7;
  MEMORY[0x1E0C80A78](v7);
  v28 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F18);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F20);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A45FCD54();
  v16 = v32;
  sub_1A4691D28();
  if (!v16)
  {
    v23[0] = v10;
    v23[1] = v9;
    v32 = v12;
    v17 = sub_1A46917DC();
    if (*(_QWORD *)(v17 + 16) == 1)
      __asm { BR              X10 }
    v18 = v11;
    v19 = sub_1A46914B8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMRemindersListDataView.HashtagLabelPredicate;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v14, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

uint64_t sub_1A45E5200@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.HashtagLabelPredicate.init(from:)(a1, a2);
}

uint64_t sub_1A45E5214(_QWORD *a1)
{
  return REMRemindersListDataView.HashtagLabelPredicate.encode(to:)(a1);
}

id REMRemindersListDataView.ReminderLite.objectID.getter()
{
  id *v0;

  return *v0;
}

uint64_t REMRemindersListDataView.ReminderLite.isCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t REMRemindersListDataView.ReminderLite.subtaskCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t REMRemindersListDataView.ReminderLite.subtasks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.ReminderLite.init(objectID:isCompleted:subtaskCount:subtasks:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_BYTE *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = a4;
  return result;
}

uint64_t REMRemindersListDataView.ReminderLite.init(objectID:isCompleted:subtasks:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  if (a3)
    v4 = *(_QWORD *)(a3 + 16);
  else
    v4 = 0;
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2 & 1;
  *(_QWORD *)(a4 + 16) = v4;
  *(_QWORD *)(a4 + 24) = a3;
  return result;
}

uint64_t sub_1A45E5280()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E52B0 + 4 * byte_1A46AB863[*v0]))(0x44497463656A626FLL, 0xE800000000000000);
}

uint64_t sub_1A45E52B0()
{
  return 0x656C706D6F437369;
}

uint64_t sub_1A45E52D0()
{
  return 0x436B736174627573;
}

uint64_t sub_1A45E52F0()
{
  return 0x736B736174627573;
}

uint64_t sub_1A45E5304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460A7F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E5328()
{
  sub_1A45FCEA8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E5350()
{
  sub_1A45FCEA8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ReminderLite.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F768);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v15 = *((unsigned __int8 *)v1 + 8);
  v9 = v1[2];
  v13 = v1[3];
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCEA8();
  sub_1A4691D40();
  v17 = v8;
  v16 = 0;
  type metadata accessor for REMObjectID_Codable();
  sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A4691890();
  if (!v2)
  {
    v10 = v13;
    LOBYTE(v17) = 1;
    sub_1A4691860();
    LOBYTE(v17) = 2;
    sub_1A4691878();
    v17 = v10;
    v16 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.ReminderLite.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  char v11;
  void *v12;
  uint64_t v13;
  char v14;
  void *v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E30);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCEA8();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMObjectID_Codable();
    v14 = 0;
    sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    v9 = v15;
    LOBYTE(v15) = 1;
    v10 = v9;
    v11 = sub_1A4691794();
    LOBYTE(v15) = 2;
    v13 = sub_1A46917AC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    v14 = 3;
    sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v12 = v15;
    *(_QWORD *)a2 = v10;
    *(_BYTE *)(a2 + 8) = v11 & 1;
    *(_QWORD *)(a2 + 16) = v13;
    *(_QWORD *)(a2 + 24) = v12;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
}

void sub_1A45E57DC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMRemindersListDataView.ReminderLite.init(from:)(a1, a2);
}

uint64_t sub_1A45E57F0(_QWORD *a1)
{
  return REMRemindersListDataView.ReminderLite.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.CountByCompleted.completed.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t REMRemindersListDataView.CountByCompleted.incomplete.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

ReminderKitInternal::REMRemindersListDataView::CountByCompleted __swiftcall REMRemindersListDataView.CountByCompleted.init(completed:incomplete:)(Swift::Int completed, Swift::Int incomplete)
{
  Swift::Int *v2;
  ReminderKitInternal::REMRemindersListDataView::CountByCompleted result;

  *v2 = completed;
  v2[1] = incomplete;
  result.incomplete = incomplete;
  result.completed = completed;
  return result;
}

ReminderKitInternal::REMRemindersListDataView::CountByCompleted __swiftcall REMRemindersListDataView.CountByCompleted.init(reminders:)(Swift::OpaquePointer reminders)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  _BYTE *v11;
  Swift::Int v12;
  ReminderKitInternal::REMRemindersListDataView::CountByCompleted result;

  v2 = v1;
  v3 = *((_QWORD *)reminders._rawValue + 2);
  if (!v3)
  {
    reminders._rawValue = (void *)swift_bridgeObjectRelease();
    v5 = 0;
    v6 = 0;
LABEL_20:
    *v2 = v6;
    v2[1] = v5;
    goto LABEL_24;
  }
  v4 = 0;
  v5 = 0;
  v6 = 0;
  while (1)
  {
    v7 = (char *)reminders._rawValue + 32 * v4 + 32;
    v8 = *((_QWORD *)v7 + 3);
    if (v7[8] == 1)
      break;
    v9 = __OFADD__(v5++, 1);
    if (v9)
      goto LABEL_23;
LABEL_9:
    if (v8)
    {
      v10 = *(_QWORD *)(v8 + 16);
      if (v10)
      {
        v11 = (_BYTE *)(v8 + 40);
        do
        {
          if (*v11 == 1)
          {
            v9 = __OFADD__(v6++, 1);
            if (v9)
            {
              __break(1u);
              goto LABEL_18;
            }
          }
          else
          {
            v9 = __OFADD__(v5++, 1);
            if (v9)
            {
              __break(1u);
              goto LABEL_22;
            }
          }
          v11 += 32;
          --v10;
        }
        while (v10);
      }
    }
    if (++v4 == v3)
    {
LABEL_18:
      reminders._rawValue = (void *)swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  v9 = __OFADD__(v6++, 1);
  if (!v9)
    goto LABEL_9;
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  result.incomplete = v12;
  result.completed = (Swift::Int)reminders._rawValue;
  return result;
}

void static REMRemindersListDataView.CountByCompleted.zero.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

BOOL static REMRemindersListDataView.CountByCompleted.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1A45E5914()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C706D6F636E69;
  else
    return 0x6574656C706D6F63;
}

uint64_t sub_1A45E5958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460A9D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E597C()
{
  sub_1A45FCF74();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E59A4()
{
  sub_1A45FCF74();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.CountByCompleted.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F530);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCF74();
  sub_1A4691D40();
  v11 = 0;
  sub_1A4691878();
  if (!v2)
  {
    v10 = 1;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.CountByCompleted.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCF74();
  sub_1A4691D28();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_1A46917AC();
    v13 = 1;
    v10 = sub_1A46917AC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45E5C34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMRemindersListDataView.CountByCompleted.init(from:)(a1, a2);
}

uint64_t sub_1A45E5C48(_QWORD *a1)
{
  return REMRemindersListDataView.CountByCompleted.encode(to:)(a1);
}

uint64_t sub_1A45E5C60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E5C98 + 4 * byte_1A46AB867[a1]))(0x7265646E696D6572, 0xE900000000000073);
}

unint64_t sub_1A45E5CAC()
{
  return 0xD000000000000021;
}

uint64_t sub_1A45E5D00()
{
  unsigned __int8 *v0;

  return sub_1A45E5C60(*v0);
}

uint64_t sub_1A45E5D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460AAE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E5D2C()
{
  sub_1A45FCFB8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E5D54()
{
  sub_1A45FCFB8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.FlatModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7B8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v22 = *((unsigned __int8 *)v1 + 24);
  v16 = *((unsigned __int8 *)v1 + 25);
  v10 = v1[4];
  v14 = v1[5];
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCFB8();
  sub_1A4691D40();
  v19 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
  sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v14;
    v11 = v15;
    v19 = v18;
    v20 = v17;
    v21 = v22;
    v23 = 1;
    sub_1A45FCFFC();
    sub_1A4691848();
    LOBYTE(v19) = 2;
    sub_1A4691824();
    v19 = v11;
    v23 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v19 = v12;
    v23 = 4;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.FlatModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D60);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FCFB8();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
  v23 = 0;
  sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v19;
  v23 = 1;
  sub_1A45FD040();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  v17 = v20;
  v18 = v19;
  v10 = v21;
  LOBYTE(v19) = 2;
  v15 = sub_1A4691758();
  v22 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v23 = 3;
  v16 = sub_1A4498364();
  sub_1A46917C4();
  v23 = 4;
  v14 = v19;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v18;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v17;
  *(_BYTE *)(a2 + 24) = v22;
  *(_BYTE *)(a2 + 25) = v15;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45E62FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.FlatModel.init(from:)(a1, a2);
}

uint64_t sub_1A45E6310(_QWORD *a1)
{
  return REMRemindersListDataView.FlatModel.encode(to:)(a1);
}

id REMRemindersListDataView.GroupModel.groupList.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

id REMRemindersListDataView.ListsModel.Sublist.listID.getter()
{
  id *v0;

  return *v0;
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.listName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMRemindersListDataView.ListsModel.Sublist.listColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.isCustomSmartList.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.init(listID:listName:listColor:reminders:isCustomSmartList:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_BYTE *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1A45E63C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E63EC + 4 * byte_1A46AB86C[*v0]))(0x44497473696CLL, 0xE600000000000000);
}

uint64_t sub_1A45E63EC()
{
  return 0x656D614E7473696CLL;
}

uint64_t sub_1A45E6404()
{
  return 0x6F6C6F437473696CLL;
}

uint64_t sub_1A45E6420()
{
  return 0x7265646E696D6572;
}

unint64_t sub_1A45E6440()
{
  return 0xD000000000000011;
}

uint64_t sub_1A45E645C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460AD04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E6480()
{
  sub_1A45FD084();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E64A8()
{
  sub_1A45FD084();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FC20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v10 = v1[3];
  v15 = v1[4];
  v16 = v10;
  v14[1] = *((unsigned __int8 *)v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD084();
  sub_1A4691D40();
  v20 = v9;
  v19 = 0;
  type metadata accessor for REMObjectID_Codable();
  sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A4691890();
  if (!v2)
  {
    v11 = v15;
    v12 = v16;
    LOBYTE(v20) = 1;
    sub_1A4691854();
    v20 = v12;
    v19 = 2;
    type metadata accessor for REMColor_Codable();
    sub_1A4436344(&qword_1ED242328, (uint64_t (*)(uint64_t))type metadata accessor for REMColor_Codable, (uint64_t)&protocol conformance descriptor for REMColor_Codable);
    sub_1A4691848();
    v20 = v11;
    v19 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
    LOBYTE(v20) = 4;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.ListsModel.Sublist.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FBF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD084();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMObjectID_Codable();
    v27 = 0;
    sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    v9 = v28;
    LOBYTE(v28) = 1;
    v10 = v9;
    v11 = sub_1A4691788();
    v13 = v12;
    v25 = v11;
    type metadata accessor for REMColor_Codable();
    v27 = 2;
    sub_1A4436344(&qword_1ED241AF8, (uint64_t (*)(uint64_t))type metadata accessor for REMColor_Codable, (uint64_t)&protocol conformance descriptor for REMColor_Codable);
    swift_bridgeObjectRetain();
    sub_1A469177C();
    v14 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    v26 = 0;
    v27 = 3;
    v22 = sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
    v24 = v14;
    v23 = v14;
    v15 = v26;
    sub_1A46917C4();
    if (v15)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

      swift_bridgeObjectRelease();
      v17 = v26;
      v18 = v24;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();

      if (!v17)
    }
    else
    {
      v16 = (uint64_t)v28;
      LOBYTE(v28) = 4;
      v22 = v16;
      swift_bridgeObjectRetain();
      v19 = sub_1A4691794();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v20 = v25;
      *(_QWORD *)a2 = v10;
      *(_QWORD *)(a2 + 8) = v20;
      v21 = v24;
      *(_QWORD *)(a2 + 16) = v13;
      *(_QWORD *)(a2 + 24) = v21;
      *(_QWORD *)(a2 + 32) = v22;
      *(_BYTE *)(a2 + 40) = v19 & 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
  }
}

void sub_1A45E6B04(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMRemindersListDataView.ListsModel.Sublist.init(from:)(a1, a2);
}

uint64_t sub_1A45E6B18(_QWORD *a1)
{
  return REMRemindersListDataView.ListsModel.Sublist.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.ListsModel.hasCompletedReminders.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1A45E6B38(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E6B68 + 4 * byte_1A46AB871[a1]))(0x7370756F7267, 0xE600000000000000);
}

unint64_t sub_1A45E6B68()
{
  return 0xD000000000000017;
}

uint64_t sub_1A45E6BD4()
{
  unsigned __int8 *v0;

  return sub_1A45E6B38(*v0);
}

uint64_t sub_1A45E6BDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460AF24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E6C00()
{
  sub_1A45FD0C8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E6C28()
{
  sub_1A45FD0C8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ListsModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FC18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v19 = v1[1];
  v9 = *((unsigned __int8 *)v1 + 16);
  v17 = *((unsigned __int8 *)v1 + 17);
  v18 = v9;
  v10 = v1[3];
  v15 = v1[4];
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD0C8();
  sub_1A4691D40();
  v21 = v8;
  v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241700);
  sub_1A457EC10(&qword_1ED23FC08, &qword_1ED241700, (uint64_t (*)(void))sub_1A45FD10C, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v15;
    v11 = v16;
    LOBYTE(v21) = 1;
    sub_1A469183C();
    LOBYTE(v21) = 2;
    sub_1A4691824();
    v21 = v11;
    v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v21 = v12;
    v20 = 4;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.ListsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FBE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD0C8();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241700);
  v21 = 0;
  sub_1A457EC10(&qword_1ED23FBC0, &qword_1ED241700, (uint64_t (*)(void))sub_1A45FD150, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v22;
  LOBYTE(v22) = 1;
  swift_bridgeObjectRetain();
  v10 = sub_1A4691770();
  v20 = v11;
  LOBYTE(v22) = 2;
  v17 = sub_1A4691758();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v21 = 3;
  v18 = sub_1A4498364();
  v19 = v12;
  sub_1A46917C4();
  v21 = 4;
  v16 = v22;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v20 & 1;
  *(_BYTE *)(a2 + 17) = v17;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45E7170@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ListsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45E7184(_QWORD *a1)
{
  return REMRemindersListDataView.ListsModel.encode(to:)(a1);
}

void *REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 48);
  v2 = v1;
  return v1;
}

__n128 REMRemindersListDataView.FlaggedModel.init(flatModel:flaggedSmartList:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  __n128 result;

  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 8);
  *(_BYTE *)(a3 + 24) = v3;
  *(_BYTE *)(a3 + 25) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 48) = a2;
  return result;
}

uint64_t sub_1A45E71F0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x65646F4D74616C66;
}

uint64_t sub_1A45E7234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B110(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E7258()
{
  sub_1A45FD194();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E7280()
{
  sub_1A45FD194();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.FlaggedModel.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F798);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v2;
  v7 = *((_QWORD *)v2 + 2);
  v8 = *((_BYTE *)v2 + 24);
  v9 = *((_BYTE *)v2 + 25);
  v13 = *((_QWORD *)v2 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD194();
  sub_1A4691D40();
  v17 = v14;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v2[2];
  v22 = 0;
  sub_1A45FD1D8();
  v10 = v15;
  sub_1A4691890();
  if (!v10)
  {
    *(_QWORD *)&v17 = v13;
    v22 = 1;
    type metadata accessor for REMSmartList_Codable();
    sub_1A4436344(&qword_1ED242478, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.FlaggedModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F300);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD194();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = 0;
  sub_1A45FD21C();
  sub_1A46917C4();
  v9 = v22;
  v18 = v24;
  v19 = v23;
  v29 = v25;
  v17 = v26;
  v10 = v28;
  v20 = v27;
  type metadata accessor for REMSmartList_Codable();
  v30 = 1;
  sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
  v21 = v9;
  v11 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v22;
  v13 = v19;
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v18;
  *(_BYTE *)(a2 + 24) = v29;
  *(_BYTE *)(a2 + 25) = v17;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v12;
  v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45E76B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.FlaggedModel.init(from:)(a1, a2);
}

uint64_t sub_1A45E76CC(_QWORD *a1)
{
  return REMRemindersListDataView.FlaggedModel.encode(to:)(a1);
}

void *REMRemindersListDataView.AssignedModel.assignedSmartList.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  return v1;
}

__n128 REMRemindersListDataView.AssignedModel.init(listsModel:assignedSmartList:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = v4;
  *(_BYTE *)(a3 + 17) = v5;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_1A45E7730()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000011;
  else
    return 0x646F4D737473696CLL;
}

uint64_t sub_1A45E7774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B208(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E7798()
{
  sub_1A45FD260();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E77C0()
{
  sub_1A45FD260();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.AssignedModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  int v19;
  char v20;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F28);
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v7 = v2[1];
  v9 = *((_BYTE *)v2 + 16);
  v19 = *((unsigned __int8 *)v2 + 17);
  v12[0] = v2[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD260();
  sub_1A4691D40();
  v14 = v8;
  v15 = v7;
  v16 = v9;
  v17 = v19;
  v18 = *(_OWORD *)(v2 + 3);
  v20 = 0;
  sub_1A45FD2A4();
  v10 = v12[1];
  sub_1A4691890();
  if (!v10)
  {
    v14 = v12[0];
    v20 = 1;
    type metadata accessor for REMSmartList_Codable();
    sub_1A4436344(&qword_1ED242478, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.AssignedModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD260();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  sub_1A45FD2E8();
  sub_1A46917C4();
  v9 = v21;
  v27 = v23;
  v17 = v24;
  v10 = v26;
  v18 = v22;
  v19 = v25;
  type metadata accessor for REMSmartList_Codable();
  v28 = 1;
  sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
  v20 = v9;
  v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v21;
  v13 = v18;
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 17) = v17;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v12;
  v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45E7BE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.AssignedModel.init(from:)(a1, a2);
}

uint64_t sub_1A45E7BF4(_QWORD *a1)
{
  return REMRemindersListDataView.AssignedModel.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.TaggedModel.flatModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 25);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 25) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TaggedModel.allHashtagLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TaggedModel.smartListHashtagLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TaggedModel.smartListHashtagLabelsUpToDate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

void *REMRemindersListDataView.TaggedModel.taggedSmartList.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 72);
  v2 = v1;
  return v1;
}

void *REMRemindersListDataView.TaggedModel.manualOrderingID.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1A44962FC(v2);
}

__n128 REMRemindersListDataView.TaggedModel.init(flatModel:allHashtagLabels:smartListHashtagLabels:smartListHashtagLabelsUpToDate:taggedSmartList:manualOrderingID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;
  char v8;
  __n128 result;
  __int128 v10;

  v7 = *(_BYTE *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a7 = *(_QWORD *)a1;
  *(_OWORD *)(a7 + 8) = *(_OWORD *)(a1 + 8);
  *(_BYTE *)(a7 + 24) = v7;
  *(_BYTE *)(a7 + 25) = v8;
  *(_OWORD *)(a7 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a7 + 48) = a2;
  *(_QWORD *)(a7 + 56) = a3;
  *(_BYTE *)(a7 + 64) = a4;
  *(_QWORD *)(a7 + 72) = a5;
  result = *(__n128 *)a6;
  v10 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 80) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 96) = v10;
  return result;
}

uint64_t sub_1A45E7CF0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45E7D28 + 4 * byte_1A46AB876[a1]))(0x65646F4D74616C66, 0xE90000000000006CLL);
}

unint64_t sub_1A45E7D28()
{
  return 0xD000000000000010;
}

uint64_t sub_1A45E7DAC()
{
  unsigned __int8 *v0;

  return sub_1A45E7CF0(*v0);
}

uint64_t sub_1A45E7DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E7DD8()
{
  sub_1A45FD32C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E7E00()
{
  sub_1A45FD32C();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.TaggedModel.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  int v35;
  char v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F50);
  v29 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *v2;
  v7 = *((_QWORD *)v2 + 2);
  v8 = *((_BYTE *)v2 + 24);
  v9 = *((_BYTE *)v2 + 25);
  v10 = *((_QWORD *)v2 + 6);
  v26 = *((_QWORD *)v2 + 7);
  v27 = v10;
  v35 = *((unsigned __int8 *)v2 + 64);
  v11 = *((_QWORD *)v2 + 9);
  v24 = *((_QWORD *)v2 + 10);
  v25 = v11;
  v12 = *((_QWORD *)v2 + 12);
  v21 = *((_QWORD *)v2 + 11);
  v22 = v12;
  v23 = *((_QWORD *)v2 + 13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD32C();
  v13 = v6;
  sub_1A4691D40();
  v31 = v28;
  v32 = v7;
  LOBYTE(v33) = v8;
  BYTE1(v33) = v9;
  v34 = v2[2];
  v36 = 0;
  sub_1A45FD1D8();
  v14 = v30;
  sub_1A4691890();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v6, v4);
  v17 = v25;
  v16 = v26;
  v18 = v24;
  v19 = v29;
  *(_QWORD *)&v31 = v27;
  v36 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243C90);
  sub_1A45CA1F8();
  sub_1A4691890();
  *(_QWORD *)&v31 = v16;
  v36 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A45BFCA0(&qword_1ED23EAB8, &qword_1ED242FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  LOBYTE(v31) = 3;
  sub_1A4691860();
  *(_QWORD *)&v31 = v17;
  v36 = 4;
  type metadata accessor for REMSmartList_Codable();
  sub_1A4436344(&qword_1ED242478, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
  sub_1A4691848();
  *(_QWORD *)&v31 = v18;
  *((_QWORD *)&v31 + 1) = v21;
  v32 = v22;
  v33 = v23;
  v36 = 5;
  sub_1A45FD370();
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v13, v4);
}

void REMRemindersListDataView.TaggedModel.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  void *v26;
  _QWORD v27[2];
  uint64_t v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  char v48;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD32C();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v48 = 0;
    sub_1A45FD21C();
    sub_1A46917C4();
    v9 = (uint64_t)v41;
    v37 = v42;
    v38 = a2;
    v36 = v43;
    v47 = v44;
    v35 = BYTE1(v44);
    v10 = v45;
    v11 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243C90);
    v48 = 1;
    sub_1A4496754();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v32 = v11;
    v33 = v9;
    v12 = (uint64_t)v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    v48 = 2;
    sub_1A45BFCA0(&qword_1ED23E750, &qword_1ED242FF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    v31 = 0;
    sub_1A46917C4();
    v34 = v12;
    v13 = v41;
    LOBYTE(v41) = 3;
    swift_bridgeObjectRetain();
    v14 = sub_1A4691794();
    v40 = v13;
    LODWORD(v9) = v14;
    type metadata accessor for REMSmartList_Codable();
    v48 = 4;
    sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
    sub_1A469177C();
    LODWORD(v30) = v9;
    v15 = v41;
    v48 = 5;
    sub_1A45FD3B4();
    v39 = v15;
    sub_1A469177C();
    LODWORD(v31) = v30 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v16 = v41;
    v28 = v42;
    v29 = v41;
    v17 = v43;
    v18 = v44;
    swift_bridgeObjectRetain();
    v30 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v39 = v39;
    v20 = v16;
    v21 = v28;
    sub_1A44962FC(v20);
    swift_bridgeObjectRelease();
    v27[1] = v10;
    swift_bridgeObjectRelease();
    v22 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v39;

    v25 = v37;
    v24 = v38;
    *v38 = v22;
    v24[1] = v25;
    v24[2] = v36;
    *((_BYTE *)v24 + 24) = v47;
    *((_BYTE *)v24 + 25) = v35;
    v24[4] = v10;
    v24[5] = v32;
    v24[6] = v19;
    v24[7] = v40;
    *((_BYTE *)v24 + 64) = v31;
    v26 = v29;
    v24[9] = v30;
    v24[10] = v26;
    v24[11] = v21;
    v24[12] = v17;
    v24[13] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A4496404(v26);
  }
}

void sub_1A45E8718(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  REMRemindersListDataView.TaggedModel.init(from:)(a1, a2);
}

uint64_t sub_1A45E872C(_QWORD *a1)
{
  return REMRemindersListDataView.TaggedModel.encode(to:)(a1);
}

id REMRemindersListDataView.TemplateModel.listRepresentationOfTemplate.getter()
{
  id *v0;

  return *v0;
}

uint64_t REMRemindersListDataView.TemplateModel.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 33);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 25) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.TemplateModel.init(listRepresentationOfTemplate:model:manualOrderingID:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __int128 v5;
  uint64_t v6;
  char v7;
  char v8;

  *(_OWORD *)(a4 + 16) = *(_OWORD *)(a2 + 1);
  *(_OWORD *)(a4 + 40) = *((_OWORD *)a2 + 2);
  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 56) = *(_OWORD *)a3;
  v6 = *a2;
  v7 = *((_BYTE *)a2 + 24);
  v8 = *((_BYTE *)a2 + 25);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 32) = v7;
  *(_BYTE *)(a4 + 33) = v8;
  *(_OWORD *)(a4 + 72) = v5;
  return result;
}

unint64_t sub_1A45E87DC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000010;
  if (*v0 == 1)
    v1 = 0x6C65646F6DLL;
  if (*v0)
    return v1;
  else
    return 0xD00000000000001CLL;
}

uint64_t sub_1A45E8838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B58C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E885C()
{
  sub_1A45FD3F8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E8884()
{
  sub_1A45FD3F8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.TemplateModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int v31;
  char v32;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v23 = v1[2];
  v24 = v8;
  v22 = v1[3];
  v31 = *((unsigned __int8 *)v1 + 32);
  v21 = *((unsigned __int8 *)v1 + 33);
  v25 = *(_OWORD *)(v1 + 5);
  v10 = v1[7];
  v19 = v1[8];
  v20 = v10;
  v11 = v1[9];
  v17 = v1[10];
  v18 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD3F8();
  sub_1A4691D40();
  v26 = v9;
  v32 = 0;
  type metadata accessor for REMList_Codable();
  sub_1A4436344(&qword_1ED243DB8, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
  sub_1A4691890();
  if (!v2)
  {
    v13 = v17;
    v12 = v18;
    v15 = v19;
    v14 = v20;
    v26 = v24;
    v27 = v23;
    v28 = v22;
    LOBYTE(v29) = v31;
    BYTE1(v29) = v21;
    v30 = v25;
    v32 = 1;
    sub_1A45FD1D8();
    sub_1A4691890();
    v26 = v14;
    v27 = v15;
    v28 = v12;
    v29 = v13;
    v32 = 2;
    sub_1A45FD370();
    sub_1A4691848();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.TemplateModel.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  char v41;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD3F8();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMList_Codable();
    v41 = 0;
    sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    sub_1A46917C4();
    v9 = v34;
    v41 = 1;
    sub_1A45FD21C();
    v10 = v9;
    sub_1A46917C4();
    v11 = v34;
    v30 = v35;
    v31 = v10;
    v29 = v36;
    v40 = v37;
    v28 = BYTE1(v37);
    v12 = v38;
    v13 = v39;
    v41 = 2;
    sub_1A45FD3B4();
    v33 = v11;
    swift_bridgeObjectRetain();
    v32 = v12;
    v14 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v34;
    v16 = v35;
    v26 = v36;
    v27 = v34;
    v25 = v37;
    v31 = v31;
    v17 = v33;
    swift_bridgeObjectRetain();
    v18 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = v15;
    v20 = v16;
    v21 = v25;
    sub_1A44962FC(v19);
    v22 = v31;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)a2 = v22;
    *(_QWORD *)(a2 + 8) = v17;
    v23 = v29;
    *(_QWORD *)(a2 + 16) = v30;
    *(_QWORD *)(a2 + 24) = v23;
    *(_BYTE *)(a2 + 32) = v40;
    *(_BYTE *)(a2 + 33) = v28;
    *(_QWORD *)(a2 + 40) = v18;
    *(_QWORD *)(a2 + 48) = v14;
    *(_QWORD *)(a2 + 56) = v27;
    *(_QWORD *)(a2 + 64) = v20;
    *(_QWORD *)(a2 + 72) = v26;
    *(_QWORD *)(a2 + 80) = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_1A4496404(v27);
  }
}

void sub_1A45E8E48(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMRemindersListDataView.TemplateModel.init(from:)(a1, a2);
}

uint64_t sub_1A45E8E5C(_QWORD *a1)
{
  return REMRemindersListDataView.TemplateModel.encode(to:)(a1);
}

BOOL static REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t sub_1A45E8EB0()
{
  sub_1A45FD480();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E8ED8()
{
  sub_1A45FD480();
  return sub_1A4691DC4();
}

uint64_t sub_1A45E8F00()
{
  _BYTE *v0;

  if (*v0)
    return 0x664F6C6C61;
  else
    return 0xD000000000000014;
}

uint64_t sub_1A45E8F3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B6D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E8F60()
{
  sub_1A45FD43C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E8F88()
{
  sub_1A45FD43C();
  return sub_1A4691DC4();
}

uint64_t sub_1A45E8FB0()
{
  sub_1A45FD4C4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E8FD8()
{
  sub_1A45FD4C4();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F90);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722F98);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722FA0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD43C();
  sub_1A4691D40();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1A45FD480();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1A45FD4C4();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722FC0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722FC8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722FD0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD43C();
  v11 = v33;
  sub_1A4691D28();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1A46917DC();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1A46914B8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1A45FD480();
    sub_1A4691734();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1A45FD4C4();
    v22 = v6;
    sub_1A4691734();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1A45E9530@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.init(from:)(a1, a2);
}

uint64_t sub_1A45E9544(_QWORD *a1)
{
  return REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.formattingStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.init(date:formattingStyle:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t sub_1A45E95E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x697474616D726F66;
  else
    return 1702125924;
}

uint64_t sub_1A45E9628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B7B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E964C()
{
  sub_1A45FD51C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E9674()
{
  sub_1A45FD51C();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722FD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD51C();
  sub_1A4691D40();
  v10[15] = 0;
  sub_1A46900B4();
  sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A4691890();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3
                       + *(int *)(type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0)
                                + 20));
    v10[13] = 1;
    sub_1A45FD560();
    sub_1A4691890();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v20 = a2;
  v24 = sub_1A46900B4();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v22 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE722FF0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD51C();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a1;
  v19 = v5;
  v11 = (uint64_t)v10;
  v12 = v21;
  v27 = 0;
  sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v14 = v22;
  v13 = v23;
  v15 = v24;
  sub_1A46917C4();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v25 = 1;
  sub_1A45FD5A4();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v13);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = v26;
  sub_1A4497EE8(v11, v20, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_1A4497F2C(v11, type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate);
}

uint64_t sub_1A45E9A9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.DateBucketsModel.RepresentativeDate.init(from:)(a1, a2);
}

uint64_t sub_1A45E9AB0(_QWORD *a1)
{
  return REMRemindersListDataView.DateBucketsModel.RepresentativeDate.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.Diff.insertedReminderObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.Diff.updatedListObjectIDs.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL REMRemindersListDataView.Diff.isEmpty.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[1];
  v3 = v0[2];
  v2 = v0[3];
  v4 = v0[4];
  if ((*v0 & 0xC000000000000001) != 0)
  {
    if (sub_1A4691308())
      return 0;
  }
  else if (*(_QWORD *)(*v0 + 16))
  {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (sub_1A4691308())
      return 0;
  }
  else if (*(_QWORD *)(v1 + 16))
  {
    return 0;
  }
  if ((v3 & 0xC000000000000001) == 0)
  {
    if (!*(_QWORD *)(v3 + 16))
      goto LABEL_13;
    return 0;
  }
  if (sub_1A4691308())
    return 0;
LABEL_13:
  if ((v2 & 0xC000000000000001) != 0)
  {
    if (sub_1A4691308())
      return 0;
  }
  else if (*(_QWORD *)(v2 + 16))
  {
    return 0;
  }
  return *(_QWORD *)(v4 + 16) == 0;
}

uint64_t REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1A45E9BCC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A45E9C08 + 4 * byte_1A46AB87C[a1]))(0xD000000000000018, 0x80000001A46C24C0);
}

uint64_t sub_1A45E9C08()
{
  uint64_t v0;

  return v0 + 5;
}

uint64_t sub_1A45E9C5C()
{
  unsigned __int8 *v0;

  return sub_1A45E9BCC(*v0);
}

uint64_t sub_1A45E9C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460B8B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45E9C88()
{
  sub_1A45FD5E8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45E9CB0()
{
  sub_1A45FD5E8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.Diff.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v10 = v1[3];
  v15 = v1[4];
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD5E8();
  sub_1A4691D40();
  v20 = v9;
  v19 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  sub_1A45CA414();
  sub_1A4691890();
  if (!v2)
  {
    v12 = v16;
    v11 = v17;
    v20 = v18;
    v19 = 1;
    sub_1A4691890();
    v20 = v11;
    v19 = 2;
    sub_1A4691890();
    v20 = v12;
    v19 = 3;
    sub_1A4691890();
    v20 = v15;
    v19 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
    sub_1A45BFCA0(&qword_1ED243130, &qword_1ED243F40, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.Diff.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD5E8();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440C0);
  v23 = 0;
  sub_1A45CA394();
  sub_1A46917C4();
  v22 = a2;
  v9 = v24;
  v23 = 1;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v20 = v9;
  v10 = v24;
  v23 = 2;
  swift_bridgeObjectRetain();
  v19[1] = 0;
  sub_1A46917C4();
  v21 = v10;
  v11 = v24;
  v23 = 3;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v12 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243F40);
  v23 = 4;
  sub_1A45BFCA0(&qword_1ED243198, &qword_1ED243F40, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  v19[0] = v12;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v13 = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v24;
  swift_bridgeObjectRetain();
  v16 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v22;
  *v22 = v13;
  v17[1] = v16;
  v18 = v19[0];
  v17[2] = v11;
  v17[3] = v18;
  v17[4] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45EA348@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersListDataView.Diff.init(from:)(a1, a2);
}

uint64_t sub_1A45EA35C(_QWORD *a1)
{
  return REMRemindersListDataView.Diff.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.Result.model.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t REMRemindersListDataView.Result.diff.getter@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  v7 = v3[4];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *REMRemindersListDataView.Result.latestFetchResultToken.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 32));
  v3 = v2;
  return v2;
}

__n128 REMRemindersListDataView.Result.init(model:diff:latestFetchResultToken:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 result;
  __int128 v15;

  v9 = *(_QWORD *)(a2 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, a1, a4);
  v12 = type metadata accessor for REMRemindersListDataView.Result(0, a4, v10, v11);
  v13 = a5 + *(int *)(v12 + 28);
  result = *(__n128 *)a2;
  v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v13 = *(_OWORD *)a2;
  *(_OWORD *)(v13 + 16) = v15;
  *(_QWORD *)(v13 + 32) = v9;
  *(_QWORD *)(a5 + *(int *)(v12 + 32)) = a3;
  return result;
}

double static REMRemindersListDataView.fetchList(store:list:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:diffingAgainst:)@<D0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>)
{
  int *v12;
  uint64_t v13;
  char *v14;
  char v15;
  objc_class *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  os_log_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  __int128 v79;
  uint64_t v80[3];
  unsigned __int8 v81;
  unsigned __int8 v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  void *v89;
  void *v90;
  objc_super v91;
  uint64_t v92;

  v78 = a8;
  *(_QWORD *)&v79 = a1;
  v75 = a4;
  v76 = a6;
  LODWORD(v77) = a5;
  v73 = a9;
  v12 = (int *)type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v74 = *a7;
  v16 = (objc_class *)type metadata accessor for REMList_Codable();
  v17 = objc_allocWithZone(v16);
  v18 = a2;
  v19 = objc_msgSend(v18, sel_store);
  v20 = objc_msgSend(v18, sel_account);
  v21 = objc_msgSend(v18, sel_storage);
  v91.receiver = v17;
  v91.super_class = v16;
  v22 = objc_msgSendSuper2(&v91, sel_initWithStore_account_storage_, v19, v20, v21);

  v23 = v22;
  v24 = objc_msgSend(v18, sel_parentList);
  objc_msgSend(v23, sel_setParentList_, v24);

  sub_1A4497EE8(v75, (uint64_t)&v14[v12[6]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(v76, (uint64_t)&v14[v12[8]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(_QWORD *)v14 = v23;
  v14[8] = v15;
  v14[v12[7]] = v77;
  v14[v12[9]] = v74;
  v25 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ListInvocation());
  v26 = objc_msgSend(v25, sel_initWithFetchResultTokenToDiffAgainst_, v78);
  v27 = v92;
  sub_1A4486EB0((uint64_t)v26, (uint64_t)v14, v80);

  if (v27)
  {
    sub_1A4497F2C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters);
  }
  else
  {
    v68 = 0;
    v76 = v80[2];
    v77 = v80[1];
    LODWORD(v75) = v81;
    v74 = v82;
    v30 = v83;
    v29 = v84;
    v72 = v85;
    v71 = v86;
    v70 = v87;
    v79 = v88;
    v31 = v89;
    v69 = v90;
    v32 = qword_1ED243118;
    v92 = v80[0];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = v31;
    if (v32 != -1)
      swift_once();
    v34 = sub_1A4690318();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED241540);
    v35 = v18;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v36 = v33;
    v37 = v35;
    v78 = v36;
    v38 = sub_1A469030C();
    v39 = sub_1A4691008();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v64 = v29;
      v43 = (_QWORD *)v42;
      v66 = v42;
      *(_DWORD *)v41 = 138412546;
      v67 = v38;
      v44 = objc_msgSend(v37, sel_objectID);
      v45 = v92;
      v65 = v40;
      v46 = v30;
      v47 = v44;
      v80[0] = (uint64_t)v44;
      sub_1A46911D0();
      *v43 = v47;

      *(_WORD *)(v41 + 12) = 2048;
      v48 = *(_QWORD *)(v45 + 16);
      v49 = v78;

      v29 = v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v80[0] = v48;
      v30 = v46;
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v50 = v67;
      _os_log_impl(&dword_1A442D000, v67, (os_log_type_t)v65, "DATAVIEW RESULT {name: REMRemindersListDataView_ListInvocation, list.objectID: %@, reminder.count: %ld}", (uint8_t *)v41, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      v51 = v66;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v51, -1, -1);
      MEMORY[0x1A85A0114](v41, -1, -1);

    }
    else
    {

      v52 = v78;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v53 = v73;
    v54 = v29;
    sub_1A4497F2C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.ListInvocation.Parameters);
    v55 = v69;
    v56 = v69;
    v57 = v72;
    swift_bridgeObjectRetain();
    v58 = v71;
    swift_bridgeObjectRetain();
    v59 = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    v60 = v78;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v61 = v92;
    swift_bridgeObjectRelease();
    v62 = v77;
    *(_QWORD *)v53 = v61;
    *(_QWORD *)(v53 + 8) = v62;
    *(_QWORD *)(v53 + 16) = v76;
    *(_BYTE *)(v53 + 24) = v75;
    *(_BYTE *)(v53 + 25) = v74;
    *(_QWORD *)(v53 + 32) = v30;
    *(_QWORD *)(v53 + 40) = v54;
    *(_QWORD *)(v53 + 48) = v60;
    *(_QWORD *)(v53 + 56) = v57;
    *(_QWORD *)(v53 + 64) = v58;
    *(_QWORD *)(v53 + 72) = v59;
    result = *(double *)&v79;
    *(_OWORD *)(v53 + 80) = v79;
    *(_QWORD *)(v53 + 96) = v55;
  }
  return result;
}

void static REMRemindersListDataView.fetchListRepresentationOfDownloadedPublicTemplate(with:store:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  int v30;
  _BOOL4 v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  os_log_t v48;
  _QWORD *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  _QWORD *v59;
  os_log_t v60;
  id v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  uint64_t v75;
  _QWORD v76[2];
  unsigned __int8 v77;
  unsigned __int8 v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  void *v86;
  objc_super v87;
  uint64_t v88;

  v88 = a2;
  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v9 = objc_allocWithZone(v8);
  v10 = a1;
  v11 = objc_msgSend(v10, sel_uuid);
  sub_1A46900F0();

  v12 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = objc_msgSend(v10, sel_entityName);
  if (!v13)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v87.receiver = v9;
  v87.super_class = v8;
  v14 = objc_msgSendSuper2(&v87, sel_initWithUUID_entityName_, v12, v13);

  v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.PublicTemplateInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A4487B24(v15, (uint64_t)v14, &v75);
  if (v2)
  {

  }
  else
  {

    v16 = v75;
    v70 = v76[0];
    v69 = v76[1];
    v68 = v77;
    v67 = v78;
    v17 = v79;
    v18 = v80;
    v19 = v81;
    v66 = v82;
    v65 = v83;
    v64 = v84;
    v74 = v85;
    v63 = v86;
    v20 = qword_1ED243118;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v19;
    if (v20 != -1)
      swift_once();
    v22 = sub_1A4690318();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED241540);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v23 = v21;
    v24 = v10;
    v72 = v17;
    v25 = v24;
    v26 = v23;
    v27 = v25;
    v28 = v26;
    v29 = sub_1A469030C();
    v30 = sub_1A4691008();
    v31 = os_log_type_enabled(v29, (os_log_type_t)v30);
    v71 = 0;
    v73 = v28;
    if (v31)
    {
      v58 = v30;
      v60 = v29;
      v61 = v14;
      v32 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v32 = 138412802;
      v75 = (uint64_t)v27;
      v34 = v27;
      sub_1A46911D0();
      v59 = v33;
      *v33 = v27;

      *(_WORD *)(v32 + 12) = 2048;
      v35 = *(_QWORD *)(v16 + 16);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v75 = v35;
      v57 = v76;
      v36 = v73;
      sub_1A46911D0();

      v62 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2048;
      v37 = MEMORY[0x1E0DEE9D8];
      v75 = MEMORY[0x1E0DEE9D8];
      v38 = *(_QWORD *)(v16 + 16);
      if (v38)
      {
        swift_bridgeObjectRetain();
        v39 = 72;
        do
        {
          v40 = swift_bridgeObjectRetain();
          sub_1A44594FC(v40);
          v39 += 48;
          --v38;
        }
        while (v38);
        v41 = v36;
        swift_bridgeObjectRelease();
        v37 = v75;
      }
      else
      {
        v41 = v36;
      }
      v44 = v88;
      v45 = *(_QWORD *)(v37 + 16);

      v46 = v62;
      swift_bridgeObjectRelease();
      v47 = v72;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v75 = v45;
      sub_1A46911D0();

      v43 = v46;
      swift_bridgeObjectRelease();
      v42 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v60;
      _os_log_impl(&dword_1A442D000, v60, (os_log_type_t)v58, "DATAVIEW RESULT {name: REMRemindersListDataView_PublicTemplateInvocation, publicTemplateObjectID: %@, section.count (including sectionless): %ld, reminder.count: %ld}", (uint8_t *)v32, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240E20);
      v49 = v59;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v49, -1, -1);
      MEMORY[0x1A85A0114](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v42 = v72;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v43 = v18;
      v44 = v88;
    }
    v50 = v63;
    v51 = v63;
    v52 = v66;
    swift_bridgeObjectRetain();
    v53 = v65;
    swift_bridgeObjectRetain();
    v54 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = v73;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = v70;
    *(_QWORD *)v44 = v16;
    *(_QWORD *)(v44 + 8) = v56;
    *(_QWORD *)(v44 + 16) = v69;
    *(_BYTE *)(v44 + 24) = v68;
    *(_BYTE *)(v44 + 25) = v67;
    *(_QWORD *)(v44 + 32) = v42;
    *(_QWORD *)(v44 + 40) = v43;
    *(_QWORD *)(v44 + 48) = v55;
    *(_QWORD *)(v44 + 56) = v52;
    *(_QWORD *)(v44 + 64) = v53;
    *(_QWORD *)(v44 + 72) = v54;
    *(_OWORD *)(v44 + 80) = v74;
    *(_QWORD *)(v44 + 96) = v50;
  }
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO0E5ModelV5model4listAeC04FlatH0V_So7REMListCtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  char v4;
  __n128 result;

  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 8);
  *(_BYTE *)(a3 + 24) = v3;
  *(_BYTE *)(a3 + 25) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a3 + 32) = result;
  *(_QWORD *)(a3 + 48) = a2;
  return result;
}

uint64_t Array<A>.reminders.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = 72;
    do
    {
      v5 = swift_bridgeObjectRetain();
      sub_1A44594FC(v5);
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchGroup(store:group:sortingStyle:showCompleted:countCompleted:remindersPrefetch:fetchSubtasks:includePinnedSublists:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W7>, uint64_t a8@<X8>, uint64_t a9)
{
  int *v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  __n128 result;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  char v45;
  char v46;
  __n128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  objc_super v53;
  uint64_t v54;

  v40 = a5;
  v41 = a7;
  v38 = a4;
  v39 = a6;
  v42 = a9;
  v43 = a1;
  v12 = (int *)type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *a3;
  v15 = (objc_class *)type metadata accessor for REMList_Codable();
  v16 = objc_allocWithZone(v15);
  v17 = a2;
  v18 = objc_msgSend(v17, sel_store);
  v19 = objc_msgSend(v17, sel_account);
  v20 = objc_msgSend(v17, sel_storage);
  v53.receiver = v16;
  v53.super_class = v15;
  v21 = objc_msgSendSuper2(&v53, sel_initWithStore_account_storage_, v18, v19, v20);

  v22 = v21;
  v23 = objc_msgSend(v17, sel_parentList);
  objc_msgSend(v22, sel_setParentList_, v23);

  sub_1A4497EE8(v38, (uint64_t)&v14[v12[6]], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(v39, (uint64_t)&v14[v12[8]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(_QWORD *)v14 = v22;
  v14[8] = v37;
  v14[v12[7]] = v40;
  v14[v12[9]] = v41;
  v24 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.GroupInvocation());
  v25 = objc_msgSend(v24, sel_initWithFetchResultTokenToDiffAgainst_, v42);
  v26 = v54;
  sub_1A44887AC((uint64_t)v25, (uint64_t)v14, v44);

  sub_1A4497F2C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.GroupInvocation.Parameters);
  if (!v26)
  {
    v28 = v44[1];
    v29 = v45;
    v30 = v46;
    v31 = v50;
    v32 = v51;
    v33 = v52;
    result = v47;
    v34 = v48;
    v35 = v49;
    *(_QWORD *)a8 = v44[0];
    *(_QWORD *)(a8 + 8) = v28;
    *(_BYTE *)(a8 + 16) = v29;
    *(_BYTE *)(a8 + 17) = v30;
    *(__n128 *)(a8 + 24) = result;
    *(_QWORD *)(a8 + 40) = v32;
    *(_OWORD *)(a8 + 48) = v34;
    *(_OWORD *)(a8 + 64) = v35;
    *(_QWORD *)(a8 + 80) = v31;
    *(_QWORD *)(a8 + 88) = v33;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchFlagged(store:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  __n128 result;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  char v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;

  v7 = type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(a1, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.FlaggedInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A44893F8((uint64_t)v10, (unint64_t)v9, &v21);

  sub_1A4497F2C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.FlaggedInvocation.Parameters);
  if (!v3)
  {
    v12 = v23;
    v13 = v24;
    v14 = v26;
    v15 = v29;
    v16 = v30;
    result = v22;
    v17 = v25;
    v18 = v27;
    v19 = v28;
    *(_QWORD *)a3 = v21;
    *(__n128 *)(a3 + 8) = result;
    *(_BYTE *)(a3 + 24) = v12;
    *(_BYTE *)(a3 + 25) = v13;
    *(_OWORD *)(a3 + 32) = v17;
    *(_QWORD *)(a3 + 48) = v14;
    *(_OWORD *)(a3 + 56) = v18;
    *(_OWORD *)(a3 + 72) = v19;
    *(_QWORD *)(a3 + 88) = v15;
    *(_QWORD *)(a3 + 96) = v16;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchFlagged(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)@<X0>(_BYTE *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int *Configuration;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v17;

  Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  v13 = MEMORY[0x1E0C80A78](Configuration);
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1A4497EE8(a2, (uint64_t)&v15[*(int *)(v13 + 20)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a4, (uint64_t)&v15[Configuration[7]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *v15 = (_BYTE)a1;
  v15[Configuration[6]] = a3;
  v15[Configuration[8]] = 0;
  static REMRemindersListDataView.fetchFlagged(store:configuration:diffingAgainst:)((uint64_t)v15, a5, a6);
  return sub_1A4497F2C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
}

__n128 static REMRemindersListDataView.fetchAll(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)@<Q0>(_BYTE *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  char *v16;
  uint64_t v17;
  __n128 result;
  char *v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char *v27[2];
  char v28;
  char v29;
  __n128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v12 = type metadata accessor for REMRemindersListDataView.AllInvocation.Parameters(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1A4497EE8(a2, (uint64_t)&v15[*(int *)(v13 + 20)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a4, (uint64_t)&v15[*(int *)(v12 + 28)], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *v15 = (_BYTE)a1;
  v15[*(int *)(v12 + 24)] = a3;
  v16 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AllInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a5);
  v17 = v35;
  sub_1A448A0CC(v16, (uint64_t)v15, v27);

  sub_1A4497F2C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.AllInvocation.Parameters);
  if (!v17)
  {
    v19 = v27[1];
    v20 = v28;
    v21 = v29;
    v22 = v33;
    v23 = v34;
    result = v30;
    v24 = v31;
    v25 = v32;
    *(char **)a6 = v27[0];
    *(_QWORD *)(a6 + 8) = v19;
    *(_BYTE *)(a6 + 16) = v20;
    *(_BYTE *)(a6 + 17) = v21;
    *(__n128 *)(a6 + 24) = result;
    *(_OWORD *)(a6 + 40) = v24;
    *(_OWORD *)(a6 + 56) = v25;
    *(_QWORD *)(a6 + 72) = v22;
    *(_QWORD *)(a6 + 80) = v23;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchAssigned(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:currentUserShareParticipantIDsOverride:)@<Q0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  id v20;
  uint64_t v21;
  __n128 result;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  _QWORD v31[2];
  uint64_t v32[2];
  char v33;
  char v34;
  __n128 v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v31[1] = a1;
  v15 = (int *)type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  sub_1A4497EE8(a3, (uint64_t)&v18[*(int *)(v16 + 20)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a5, (uint64_t)&v18[v15[7]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *v18 = (_BYTE)a2;
  v18[v15[6]] = a4;
  *(_QWORD *)&v18[v15[8]] = a7;
  v19 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AssignedInvocation());
  swift_bridgeObjectRetain();
  v20 = objc_msgSend(v19, sel_initWithFetchResultTokenToDiffAgainst_, a6);
  v21 = v41;
  sub_1A448A12C((uint64_t)v20, (unint64_t)v18, v32);

  sub_1A4497F2C((uint64_t)v18, type metadata accessor for REMRemindersListDataView.AssignedInvocation.Parameters);
  if (!v21)
  {
    v23 = v32[1];
    v24 = v33;
    v25 = v34;
    v26 = v36;
    v27 = v39;
    v28 = v40;
    result = v35;
    v29 = v37;
    v30 = v38;
    *(_QWORD *)a8 = v32[0];
    *(_QWORD *)(a8 + 8) = v23;
    *(_BYTE *)(a8 + 16) = v24;
    *(_BYTE *)(a8 + 17) = v25;
    *(__n128 *)(a8 + 24) = result;
    *(_QWORD *)(a8 + 40) = v26;
    *(_OWORD *)(a8 + 48) = v29;
    *(_OWORD *)(a8 + 64) = v30;
    *(_QWORD *)(a8 + 80) = v27;
    *(_QWORD *)(a8 + 88) = v28;
  }
  return result;
}

double static REMRemindersListDataView.fetchAssigned(store:configuration:diffingAgainst:currentUserShareParticipantIDsOverride:)@<D0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *Configuration;
  double result;
  char v12;

  v12 = *a2;
  Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  *(_QWORD *)&result = static REMRemindersListDataView.fetchAssigned(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:currentUserShareParticipantIDsOverride:)(a1, &v12, (uint64_t)&a2[Configuration[5]], a2[Configuration[6]], (uint64_t)&a2[Configuration[7]], a3, a4, a5).n128_u64[0];
  return result;
}

uint64_t static REMRemindersListDataView.fetchSearch(store:objectIDs:sortingStyle:showCompleted:countCompleted:diffingAgainst:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, char **a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  void *v32;
  void *v33;
  objc_class *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  uint64_t result;
  void (*v41)(char **, _QWORD);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char v49;
  char v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char **v56;
  char **v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70[2];
  char v71;
  char v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  char *v76;
  char *v77;
  objc_super v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 v81;
  unint64_t v82;

  v63 = a6;
  v61 = a5;
  v60 = a4;
  v64 = a1;
  v10 = sub_1A46900FC();
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for REMRemindersListDataView.SearchInvocation.Parameters(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = *a3;
  v67 = a2 & 0xC000000000000001;
  v57 = a7;
  v62 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v14;
  v58 = v16;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v17 = sub_1A4691308();
    v18 = MEMORY[0x1E0DEE9D8];
    if (!v17)
      goto LABEL_19;
    v19 = v17;
    v82 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    v79 = sub_1A46912CC();
    v80 = v20;
    v81 = 1;
    if ((v19 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
  }
  v19 = *(_QWORD *)(a2 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (!v19)
  {
LABEL_19:
    v42 = sub_1A446CF04(v18);
    swift_bridgeObjectRelease();
    v43 = v59;
    v44 = (uint64_t)v62;
    sub_1A4497EE8(v60, (uint64_t)&v62[*(int *)(v59 + 24)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
    *(_QWORD *)v44 = v42;
    *(_BYTE *)(v44 + 8) = v58;
    *(_BYTE *)(v44 + *(int *)(v43 + 28)) = v61 & 1;
    v45 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.SearchInvocation());
    v46 = (char *)objc_msgSend(v45, sel_initWithFetchResultTokenToDiffAgainst_, v63);
    v47 = v65;
    sub_1A448ADD0(v46, v44, v70);

    result = sub_1A4497F2C(v44, type metadata accessor for REMRemindersListDataView.SearchInvocation.Parameters);
    if (!v47)
    {
      v48 = v70[1];
      v49 = v71;
      v50 = v72;
      v51 = v76;
      v52 = v77;
      v53 = v73;
      v54 = v74;
      v55 = v75;
      v56 = v57;
      *v57 = v70[0];
      v56[1] = v48;
      *((_BYTE *)v56 + 16) = v49;
      *((_BYTE *)v56 + 17) = v50;
      *(_OWORD *)(v56 + 3) = v53;
      *(_OWORD *)(v56 + 5) = v54;
      *(_OWORD *)(v56 + 7) = v55;
      v56[9] = v51;
      v56[10] = v52;
    }
    return result;
  }
  v82 = MEMORY[0x1E0DEE9D8];
  sub_1A469153C();
  v79 = sub_1A44C1554(a2);
  v80 = v21;
  v81 = v22 & 1;
LABEL_7:
  v23 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v23 = a2;
  v66 = v23;
  while (1)
  {
    while (1)
    {
      sub_1A44C130C(v79, v80, v81, a2);
      v33 = v32;
      v34 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      v35 = objc_allocWithZone(v34);
      v36 = v33;
      v37 = objc_msgSend(v36, sel_uuid);
      sub_1A46900F0();

      v38 = (void *)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v12, v69);
      v39 = objc_msgSend(v36, sel_entityName);
      if (!v39)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v39 = (id)sub_1A469087C();
        swift_bridgeObjectRelease();
      }
      v78.receiver = v35;
      v78.super_class = v34;
      objc_msgSendSuper2(&v78, sel_initWithUUID_entityName_, v38, v39, v57);

      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      result = sub_1A4691524();
      if (v67)
        break;
      v24 = v79;
      v25 = v80;
      v26 = v81;
      v27 = sub_1A44C1224(v79, v80, v81, a2);
      v29 = v28;
      v31 = v30;
      sub_1A44A39BC(v24, v25, v26);
      v79 = v27;
      v80 = v29;
      v81 = v31 & 1;
      if (!--v19)
        goto LABEL_18;
    }
    if ((v81 & 1) == 0)
      break;
    if (sub_1A46912E4())
      swift_isUniquelyReferenced_nonNull_native();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E090);
    v41 = (void (*)(char **, _QWORD))sub_1A4690D98();
    sub_1A4691350();
    v41(v70, 0);
    if (!--v19)
    {
LABEL_18:
      sub_1A44A39BC(v79, v80, v81);
      v18 = v82;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

uint64_t static REMRemindersListDataView.fetchSearch_Flat(store:objectIDs:configuration:diffingAgainst:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  void *v29;
  void *v30;
  objc_class *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t result;
  void (*v38)(uint64_t *, _QWORD);
  uint64_t v39;
  uint64_t *v40;
  id v41;
  id v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  char v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  objc_super v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  unint64_t v76;

  v57 = a4;
  v55 = a3;
  v58 = a1;
  v8 = sub_1A46900FC();
  v61 = *(_QWORD *)(v8 - 8);
  v62 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for REMRemindersListDataView.SearchFlatInvocation.Parameters(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v60 = a2 & 0xC000000000000001;
  v53 = a5;
  v56 = (uint64_t *)((char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = v12;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v14 = sub_1A4691308();
    v15 = MEMORY[0x1E0DEE9D8];
    if (!v14)
      goto LABEL_19;
    v16 = v14;
    v76 = MEMORY[0x1E0DEE9D8];
    sub_1A469153C();
    v73 = sub_1A46912CC();
    v74 = v17;
    v75 = 1;
    if ((v16 & 0x8000000000000000) == 0)
      goto LABEL_7;
    __break(1u);
  }
  v16 = *(_QWORD *)(a2 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v16)
  {
LABEL_19:
    v39 = sub_1A446CF04(v15);
    swift_bridgeObjectRelease();
    v40 = v56;
    sub_1A4497EE8(v55, (uint64_t)v56 + *(int *)(v54 + 20), type metadata accessor for REMRemindersListDataView.FetchConfiguration);
    *v40 = v39;
    v41 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.SearchFlatInvocation());
    v42 = objc_msgSend(v41, sel_initWithFetchResultTokenToDiffAgainst_, v57);
    sub_1A448BB18((uint64_t)v42, (uint64_t)v40, &v63);

    result = sub_1A4497F2C((uint64_t)v40, type metadata accessor for REMRemindersListDataView.SearchFlatInvocation.Parameters);
    if (!v5)
    {
      v43 = v65;
      v44 = v66;
      v45 = v70;
      v46 = v71;
      v47 = v64;
      v48 = v67;
      v49 = v68;
      v50 = v69;
      v51 = v53;
      *v53 = v63;
      *(_OWORD *)(v51 + 1) = v47;
      *((_BYTE *)v51 + 24) = v43;
      *((_BYTE *)v51 + 25) = v44;
      *((_OWORD *)v51 + 2) = v48;
      *((_OWORD *)v51 + 3) = v49;
      *((_OWORD *)v51 + 4) = v50;
      v51[10] = v45;
      v51[11] = v46;
    }
    return result;
  }
  v76 = MEMORY[0x1E0DEE9D8];
  sub_1A469153C();
  v73 = sub_1A44C1554(a2);
  v74 = v18;
  v75 = v19 & 1;
LABEL_7:
  v20 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0)
    v20 = a2;
  v59 = v20;
  while (1)
  {
    while (1)
    {
      sub_1A44C130C(v73, v74, v75, a2);
      v30 = v29;
      v31 = (objc_class *)type metadata accessor for REMObjectID_Codable();
      v32 = objc_allocWithZone(v31);
      v33 = v30;
      v34 = objc_msgSend(v33, sel_uuid);
      sub_1A46900F0();

      v35 = (void *)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v62);
      v36 = objc_msgSend(v33, sel_entityName);
      if (!v36)
      {
        _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v36 = (id)sub_1A469087C();
        swift_bridgeObjectRelease();
      }
      v72.receiver = v32;
      v72.super_class = v31;
      objc_msgSendSuper2(&v72, sel_initWithUUID_entityName_, v35, v36);

      sub_1A4691518();
      sub_1A4691548();
      sub_1A4691554();
      result = sub_1A4691524();
      if (v60)
        break;
      v21 = v73;
      v22 = v74;
      v23 = v75;
      v24 = sub_1A44C1224(v73, v74, v75, a2);
      v26 = v25;
      v28 = v27;
      sub_1A44A39BC(v21, v22, v23);
      v73 = v24;
      v74 = v26;
      v75 = v28 & 1;
      if (!--v16)
        goto LABEL_18;
    }
    if ((v75 & 1) == 0)
      break;
    if (sub_1A46912E4())
      swift_isUniquelyReferenced_nonNull_native();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E090);
    v38 = (void (*)(uint64_t *, _QWORD))sub_1A4690D98();
    sub_1A4691350();
    v38(&v63, 0);
    if (!--v16)
    {
LABEL_18:
      sub_1A44A39BC(v73, v74, v75);
      v15 = v76;
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

__n128 static REMRemindersListDataView.fetchSiriFoundInApps(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:diffingAgainst:)@<Q0>(_BYTE *a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  id v16;
  uint64_t v17;
  __n128 result;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  __n128 v27;
  char v28;
  char v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v12 = type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation.Parameters(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1A4497EE8(a2, (uint64_t)&v15[*(int *)(v13 + 20)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a4, (uint64_t)&v15[*(int *)(v12 + 28)], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *v15 = (_BYTE)a1;
  v15[*(int *)(v12 + 24)] = a3;
  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a5);
  v17 = v35;
  sub_1A448BB5C((uint64_t)v16, (uint64_t)v15, &v26);

  sub_1A4497F2C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.SiriFoundInAppsInvocation.Parameters);
  if (!v17)
  {
    v19 = v28;
    v20 = v29;
    v21 = v33;
    v22 = v34;
    result = v27;
    v23 = v30;
    v24 = v31;
    v25 = v32;
    *(_QWORD *)a6 = v26;
    *(__n128 *)(a6 + 8) = result;
    *(_BYTE *)(a6 + 24) = v19;
    *(_BYTE *)(a6 + 25) = v20;
    *(_OWORD *)(a6 + 32) = v23;
    *(_OWORD *)(a6 + 48) = v24;
    *(_OWORD *)(a6 + 64) = v25;
    *(_QWORD *)(a6 + 80) = v21;
    *(_QWORD *)(a6 + 88) = v22;
  }
  return result;
}

_QWORD *static REMRemindersListDataView.fetchTagged(store:hashtagLabelPredicate:sortingStyle:showCompleted:countCompleted:remindersPrefetch:smartListHashtagLabelsFetchStyle:shouldFetchManualOrderingID:diffingAgainst:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, _BYTE *a7@<X6>, int a8@<W7>, _QWORD *a9@<X8>, uint64_t a10)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  _QWORD *result;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[10];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  LODWORD(v54) = a8;
  v51 = a4;
  v52 = a6;
  LODWORD(v53) = a5;
  v56 = a1;
  v50 = a9;
  v55 = a10;
  v13 = (int *)type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)a2;
  v17 = *(_QWORD *)(a2 + 8);
  v19 = *a3;
  LOBYTE(a7) = *a7;
  LOBYTE(a3) = *(_BYTE *)(a2 + 16);
  sub_1A4497EE8(v51, (uint64_t)&v16[*(int *)(v14 + 24)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(v52, (uint64_t)&v16[v13[8]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *(_QWORD *)v16 = v18;
  *((_QWORD *)v16 + 1) = v17;
  v16[16] = (char)a3;
  v16[17] = v19;
  v16[v13[7]] = v53;
  v16[v13[9]] = (char)a7;
  v16[v13[10]] = v54;
  v20 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TaggedInvocation());
  sub_1A45FD638(v18, v17, a3);
  v21 = objc_msgSend(v20, sel_initWithFetchResultTokenToDiffAgainst_, v55);
  v22 = v68;
  sub_1A448C878((unint64_t)v21, (uint64_t)v16, (uint64_t)&v58);

  if (v22)
    return (_QWORD *)sub_1A4497F2C((uint64_t)v16, type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters);
  sub_1A4497F2C((uint64_t)v16, type metadata accessor for REMRemindersListDataView.TaggedInvocation.Parameters);
  v57[6] = v64;
  v57[7] = v65;
  v57[8] = v66;
  v57[9] = v67;
  v57[2] = v60;
  v57[3] = v61;
  v57[4] = v62;
  v57[5] = v63;
  v57[0] = v58;
  v57[1] = v59;
  v68 = v58;
  v52 = v59;
  v53 = *((_QWORD *)&v58 + 1);
  LODWORD(v51) = BYTE8(v59);
  v43 = v61;
  v44 = *((_QWORD *)&v60 + 1);
  v48 = v62;
  v49 = BYTE9(v59);
  v46 = v60;
  v47 = *((_QWORD *)&v62 + 1);
  v39 = (void *)v63;
  v56 = v64;
  v54 = *((_QWORD *)&v63 + 1);
  v55 = *((_QWORD *)&v64 + 1);
  v24 = *((_QWORD *)&v65 + 1);
  v40 = v65;
  v41 = *((_QWORD *)&v61 + 1);
  v25 = *((_QWORD *)&v66 + 1);
  v42 = v66;
  v26 = (void *)*((_QWORD *)&v67 + 1);
  v45 = v67;
  v27 = *((id *)&v62 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = v39;
  sub_1A44962FC(v39);
  v29 = v26;
  v30 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = v45;
  swift_bridgeObjectRetain();
  result = sub_1A45FD66C(v57);
  v33 = v50;
  v34 = v53;
  *v50 = v68;
  v33[1] = v34;
  v33[2] = v52;
  *((_BYTE *)v33 + 24) = v51;
  *((_BYTE *)v33 + 25) = v49;
  v35 = v44;
  v33[4] = v46;
  v33[5] = v35;
  v36 = v41;
  v33[6] = v43;
  v33[7] = v36;
  *((_BYTE *)v33 + 64) = v48;
  v33[9] = v47;
  v33[10] = v28;
  v37 = v56;
  v33[11] = v54;
  v33[12] = v37;
  v33[13] = v55;
  v33[14] = v30;
  v33[15] = v24;
  v33[16] = v31;
  v33[17] = v25;
  v33[18] = v32;
  v33[19] = v26;
  return result;
}

double static REMRemindersListDataView.fetchTodayNotification(store:diffingAgainst:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1A45EC82C(a1, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.TodayNotificationInvocation, (void (*)(uint64_t *__return_ptr))sub_1A448D308, a2).n128_u64[0];
  return result;
}

__n128 static REMRemindersListDataView._debugCountAssigned(store:diffingAgainst:currentUserShareParticipantIDsOverride:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  __n128 result;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __n128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.DEBUG_AssignedCountInvocation());
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v8, sel_initWithFetchResultTokenToDiffAgainst_, a1);
  sub_1A448D344((uint64_t)v9, a2, &v14);
  swift_bridgeObjectRelease();

  if (!v4)
  {
    v11 = v17;
    v12 = v18;
    result = v15;
    v13 = v16;
    *(_QWORD *)a3 = v14;
    *(__n128 *)(a3 + 8) = result;
    *(_OWORD *)(a3 + 24) = v13;
    *(_QWORD *)(a3 + 40) = v11;
    *(_QWORD *)(a3 + 48) = v12;
  }
  return result;
}

double static REMRemindersListDataView._debugFetchPhantomReminders(store:diffingAgainst:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1A45EC82C(a1, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.DEBUG_PhantomRemindersInvocation, (void (*)(uint64_t *__return_ptr))sub_1A448DEB4, a2).n128_u64[0];
  return result;
}

__n128 sub_1A45EC82C@<Q0>(uint64_t a1@<X1>, uint64_t (*a2)(_QWORD)@<X2>, void (*a3)(uint64_t *__return_ptr)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  id v7;
  __n128 result;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __n128 v17;
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v7 = objc_msgSend(objc_allocWithZone((Class)a2(0)), sel_initWithFetchResultTokenToDiffAgainst_, a1);
  a3(&v16);

  if (!v4)
  {
    v9 = v18;
    v10 = v19;
    v11 = v23;
    v12 = v24;
    result = v17;
    v13 = v20;
    v14 = v21;
    v15 = v22;
    *(_QWORD *)a4 = v16;
    *(__n128 *)(a4 + 8) = result;
    *(_BYTE *)(a4 + 24) = v9;
    *(_BYTE *)(a4 + 25) = v10;
    *(_OWORD *)(a4 + 32) = v13;
    *(_OWORD *)(a4 + 48) = v14;
    *(_OWORD *)(a4 + 64) = v15;
    *(_QWORD *)(a4 + 80) = v11;
    *(_QWORD *)(a4 + 88) = v12;
  }
  return result;
}

uint64_t sub_1A45EC8EC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C6E6F6974636573;
  else
    return 0x656E6F6974636573;
}

uint64_t sub_1A45EC934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460BAA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45EC958()
{
  sub_1A45FD758();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EC980()
{
  sub_1A45FD758();
  return sub_1A4691DC4();
}

uint64_t sub_1A45EC9A8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4E79616C70736964;
  if (*v0 != 1)
    v1 = 0x6163696E6F6E6163;
  if (*v0)
    return v1;
  else
    return 0x496E6F6974636573;
}

uint64_t sub_1A45ECA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460BBBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45ECA40()
{
  sub_1A45FD7E0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45ECA68()
{
  sub_1A45FD7E0();
  return sub_1A4691DC4();
}

uint64_t sub_1A45ECA90()
{
  sub_1A45FD79C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45ECAB8()
{
  sub_1A45FD79C();
  return sub_1A4691DC4();
}

void REMRemindersListDataView.SectionLite.SectionType.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F788);
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F780);
  v7 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  v26 = v7;
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F778);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)v1;
  v13 = *(_QWORD *)(v1 + 8);
  v21[3] = *(_QWORD *)(v1 + 16);
  v21[4] = v13;
  v15 = *(_QWORD *)(v1 + 24);
  v21[1] = *(_QWORD *)(v1 + 32);
  v21[2] = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD758();
  sub_1A4691D40();
  if (v14)
  {
    v16 = v10;
    v32 = 0;
    sub_1A45FD7E0();
    v17 = v14;
    v18 = v24;
    sub_1A469180C();
    v28 = v17;
    v31 = 0;
    type metadata accessor for REMObjectID_Codable();
    sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    v19 = v25;
    v20 = v27;
    sub_1A4691890();
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v19);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);

    }
    else
    {
      v30 = 1;
      sub_1A4691854();
      v29 = 2;
      sub_1A4691818();

      (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v19);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v9);
    }
  }
  else
  {
    v33 = 1;
    sub_1A45FD79C();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t REMRemindersListDataView.SectionLite.SectionType.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;

  v41 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F2F0);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F2E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F2E0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1A45FD758();
  v14 = v44;
  sub_1A4691D28();
  if (!v14)
  {
    v15 = v42;
    v38 = v6;
    v44 = v10;
    v16 = sub_1A46917DC();
    v17 = (char *)v16;
    v18 = v9;
    if (*(_QWORD *)(v16 + 16) == 1)
    {
      if ((*(_BYTE *)(v16 + 32) & 1) != 0)
      {
        v50 = 1;
        sub_1A45FD79C();
        sub_1A4691734();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v40);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v9);
        v19 = 0;
        v20 = 0;
        v21 = 0;
        v22 = 0;
        v23 = 0;
      }
      else
      {
        v49 = 0;
        sub_1A45FD7E0();
        v28 = v8;
        sub_1A4691734();
        v30 = v18;
        type metadata accessor for REMObjectID_Codable();
        v48 = 0;
        sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
        v31 = v5;
        sub_1A46917C4();
        v42 = v17;
        v19 = v45;
        v47 = 1;
        v32 = sub_1A4691788();
        v21 = v33;
        v34 = v32;
        v46 = 2;
        v35 = sub_1A469174C();
        v36 = v31;
        v22 = v35;
        v23 = v37;
        (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v36);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v30);
        v20 = v34;
      }
      v24 = v41;
      *v41 = v19;
      v24[1] = v20;
      v24[2] = v21;
      v24[3] = v22;
      v24[4] = v23;
    }
    else
    {
      v25 = sub_1A46914B8();
      swift_allocError();
      v27 = v26;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
      *v27 = &type metadata for REMRemindersListDataView.SectionLite.SectionType;
      sub_1A4691740();
      sub_1A46914A0();
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_1A45ED260@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersListDataView.SectionLite.SectionType.init(from:)(a1, a2);
}

void sub_1A45ED274(_QWORD *a1)
{
  REMRemindersListDataView.SectionLite.SectionType.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.SectionLite.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1A454A5D8(v2);
}

uint64_t REMRemindersListDataView.SectionLite.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.SectionLite.init(type:reminders:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *(_QWORD *)(a1 + 32);
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v5;
  *(_QWORD *)(a3 + 32) = v3;
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

BOOL REMRemindersListDataView.SectionLite.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16) == 0;
}

uint64_t sub_1A45ED2D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265646E696D6572;
  else
    return 1701869940;
}

uint64_t sub_1A45ED310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460BD58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45ED334()
{
  sub_1A45FD824();
  return sub_1A4691DB8();
}

uint64_t sub_1A45ED35C()
{
  sub_1A45FD824();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.SectionLite.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F790);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v13 = v1[1];
  v14 = v8;
  v9 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD824();
  sub_1A4691D40();
  v15 = v14;
  v16 = v13;
  v17 = v9;
  v18 = 0;
  sub_1A45FD868();
  sub_1A4691890();
  if (!v2)
  {
    *(_QWORD *)&v15 = v12;
    v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.SectionLite.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F2F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD824();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v33 = 0;
  sub_1A45FD8AC();
  sub_1A46917C4();
  v9 = v28;
  v24 = v29;
  v10 = v30;
  v22 = a2;
  v23 = v31;
  v11 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
  v33 = 1;
  v26 = (void *)v9;
  v27 = v10;
  v12 = v9;
  v13 = v24;
  v14 = v23;
  v25 = v11;
  sub_1A454A5D8(v12);
  sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v27;
  v15 = v28;
  v17 = v25;
  v18 = v26;
  sub_1A454A5D8((uint64_t)v26);
  swift_bridgeObjectRetain();
  sub_1A454A610(v18);
  v19 = v22;
  *v22 = v18;
  v19[1] = v13;
  v19[2] = v16;
  v19[3] = v14;
  v19[4] = v17;
  v19[5] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1A454A610(v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45ED7AC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersListDataView.SectionLite.init(from:)(a1, a2);
}

uint64_t sub_1A45ED7C0(_QWORD *a1)
{
  return REMRemindersListDataView.SectionLite.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.SectionsModel.sections.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.SectionsModel.remindersCount.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 24);
  result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t REMRemindersListDataView.SectionsModel.prefetchedReminders.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelV9reminders0J5Count33hasIncompleteOrCompletedReminders010prefetchedP00q3DueP0AESayAC0A4LiteVG_AC0k2ByO0VSgSbSgSayAA19REMReminder_CodableCGATtcfC_0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  unsigned __int8 v6;
  __n128 result;

  v6 = a2[1].n128_u8[0];
  *(_QWORD *)a6 = a1;
  result = *a2;
  *(__n128 *)(a6 + 8) = *a2;
  *(_BYTE *)(a6 + 24) = v6;
  *(_BYTE *)(a6 + 25) = a3;
  *(_QWORD *)(a6 + 32) = a4;
  *(_QWORD *)(a6 + 40) = a5;
  return result;
}

uint64_t sub_1A45ED824(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45ED858 + 4 * byte_1A46AB881[a1]))(0x736E6F6974636573, 0xE800000000000000);
}

uint64_t sub_1A45ED858()
{
  return 0x7265646E696D6572;
}

unint64_t sub_1A45ED87C()
{
  return 0xD000000000000021;
}

uint64_t sub_1A45ED8D0()
{
  unsigned __int8 *v0;

  return sub_1A45ED824(*v0);
}

uint64_t sub_1A45ED8D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460BE44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45ED8FC()
{
  sub_1A45FD8F0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45ED924()
{
  sub_1A45FD8F0();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.SectionsModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v22 = *((unsigned __int8 *)v1 + 24);
  v16 = *((unsigned __int8 *)v1 + 25);
  v10 = v1[4];
  v14 = v1[5];
  v15 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD8F0();
  sub_1A4691D40();
  v19 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240DF0);
  sub_1A457EC10((unint64_t *)&unk_1ED23F6B8, &qword_1ED240DF0, (uint64_t (*)(void))sub_1A45FD934, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v14;
    v11 = v15;
    v19 = v18;
    v20 = v17;
    v21 = v22;
    v23 = 1;
    sub_1A45FCFFC();
    sub_1A4691848();
    LOBYTE(v19) = 2;
    sub_1A4691824();
    v19 = v11;
    v23 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v19 = v12;
    v23 = 4;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.SectionsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F308);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD8F0();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240DF0);
  v23 = 0;
  sub_1A457EC10(&qword_1ED23F298, &qword_1ED240DF0, (uint64_t (*)(void))sub_1A45FD978, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v19;
  v23 = 1;
  sub_1A45FD040();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  v17 = v20;
  v18 = v19;
  v10 = v21;
  LOBYTE(v19) = 2;
  v15 = sub_1A4691758();
  v22 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v23 = 3;
  v16 = sub_1A4498364();
  sub_1A46917C4();
  v23 = 4;
  v14 = v19;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = v18;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v17;
  *(_BYTE *)(a2 + 24) = v22;
  *(_BYTE *)(a2 + 25) = v15;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45EDECC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.SectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45EDEE0(_QWORD *a1)
{
  return REMRemindersListDataView.SectionsModel.encode(to:)(a1);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO0E5ModelV5modelAC04FlatH0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_BYTE *)(v1 + 24);
  v3 = *(_BYTE *)(v1 + 25);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 24) = v2;
  *(_BYTE *)(a1 + 25) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

id REMRemindersListDataView.ListSectionsModel.list.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t sub_1A45EDF58()
{
  _BYTE *v0;

  if (*v0)
    return 1953720684;
  else
    return 0x736E6F6974636573;
}

uint64_t sub_1A45EDF98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C06C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45EDFBC()
{
  sub_1A45FD9BC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EDFE4()
{
  sub_1A45FD9BC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ListSectionsModel.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  char v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F770);
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v2;
  v7 = *((_QWORD *)v2 + 2);
  v8 = *((_BYTE *)v2 + 24);
  v9 = *((_BYTE *)v2 + 25);
  v13 = *((_QWORD *)v2 + 6);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD9BC();
  sub_1A4691D40();
  v17 = v14;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v2[2];
  v22 = 0;
  sub_1A45FDA00();
  v10 = v15;
  sub_1A4691890();
  if (!v10)
  {
    *(_QWORD *)&v17 = v13;
    v22 = 1;
    type metadata accessor for REMList_Codable();
    sub_1A4436344(&qword_1ED243DB8, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.ListSectionsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F2D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FD9BC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v30 = 0;
  sub_1A45FDA44();
  sub_1A46917C4();
  v9 = v22;
  v18 = v24;
  v19 = v23;
  v29 = v25;
  v17 = v26;
  v10 = v28;
  v20 = v27;
  type metadata accessor for REMList_Codable();
  v30 = 1;
  sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
  v21 = v9;
  v11 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v22;
  v13 = v19;
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v18;
  *(_BYTE *)(a2 + 24) = v29;
  *(_BYTE *)(a2 + 25) = v17;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v12;
  v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45EE41C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ListSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45EE430(_QWORD *a1)
{
  return REMRemindersListDataView.ListSectionsModel.encode(to:)(a1);
}

id REMRemindersListDataView.CustomSmartListSectionsModel.smartList.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

uint64_t sub_1A45EE458()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x73694C7472616D73;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x736E6F6974636573;
}

uint64_t sub_1A45EE4C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C170(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45EE4EC()
{
  sub_1A45FDA88();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EE514()
{
  sub_1A45FDA88();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.CustomSmartListSectionsModel.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723008);
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v2;
  v7 = *((_QWORD *)v2 + 2);
  v8 = *((_BYTE *)v2 + 24);
  v9 = *((_BYTE *)v2 + 25);
  v10 = *((_QWORD *)v2 + 6);
  v25 = *((_QWORD *)v2 + 7);
  v26 = v10;
  v11 = *((_QWORD *)v2 + 8);
  v23 = *((_QWORD *)v2 + 9);
  v24 = v11;
  v22 = *((_QWORD *)v2 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDA88();
  sub_1A4691D40();
  v30 = v27;
  v31 = v7;
  LOBYTE(v32) = v8;
  BYTE1(v32) = v9;
  v12 = v2[2];
  v13 = v4;
  v33 = v12;
  v34 = 0;
  sub_1A45FDA00();
  v14 = v29;
  sub_1A4691890();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  v17 = v22;
  v16 = v23;
  v19 = v24;
  v18 = v25;
  v20 = v28;
  *(_QWORD *)&v30 = v26;
  v34 = 1;
  type metadata accessor for REMSmartList_Codable();
  sub_1A4436344(&qword_1ED242478, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
  sub_1A4691890();
  *(_QWORD *)&v30 = v18;
  *((_QWORD *)&v30 + 1) = v19;
  v31 = v16;
  v32 = v17;
  v34 = 2;
  sub_1A45FD370();
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v13);
}

void REMRemindersListDataView.CustomSmartListSectionsModel.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723018);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDA88();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v40 = 0;
    sub_1A45FDA44();
    sub_1A46917C4();
    v9 = v33;
    v31 = v34;
    v32 = a2;
    v30 = v35;
    v39 = v36;
    v29 = BYTE1(v36);
    v10 = v37;
    v11 = v38;
    type metadata accessor for REMSmartList_Codable();
    v40 = 1;
    sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v28 = v10;
    v12 = v33;
    v40 = 2;
    sub_1A45FD3B4();
    v27 = v12;
    v26 = 0;
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v33;
    v26 = v34;
    v23 = v36;
    v24 = v35;
    swift_bridgeObjectRetain();
    v14 = v28;
    swift_bridgeObjectRetain();
    v15 = v11;
    swift_bridgeObjectRetain();
    v16 = v27;
    v17 = v13;
    v25 = v13;
    v18 = v13;
    v20 = v23;
    v19 = v24;
    sub_1A44962FC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v22 = v31;
    v21 = v32;
    *v32 = v9;
    v21[1] = v22;
    v21[2] = v30;
    *((_BYTE *)v21 + 24) = v39;
    *((_BYTE *)v21 + 25) = v29;
    v21[4] = v14;
    v21[5] = v15;
    v21[6] = v16;
    v21[7] = v17;
    v21[8] = v26;
    v21[9] = v19;
    v21[10] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A4496404(v25);
  }
}

void sub_1A45EEAF4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  REMRemindersListDataView.CustomSmartListSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45EEB08(_QWORD *a1)
{
  return REMRemindersListDataView.CustomSmartListSectionsModel.encode(to:)(a1);
}

void *_s19ReminderKitInternal24REMRemindersListDataViewO011CustomSmartE5ModelV16manualOrderingIDSo09REMManualL0CAAE06ManuallM0VSgvg_0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)v1[7];
  v3 = v1[8];
  v4 = v1[9];
  v5 = v1[10];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1A44962FC(v2);
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO011CustomSmartE5ModelV5model05smartE016manualOrderingIDAeC04FlatJ0V_So08REMSmartE0CSo09REMManualN0CAAE06ManualnO0VSgtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __n128 result;
  __int128 v5;
  char v6;
  char v7;

  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a4 + 32) = *(_OWORD *)(a1 + 32);
  result = *(__n128 *)a3;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 56) = *(_OWORD *)a3;
  v6 = *(_BYTE *)(a1 + 24);
  v7 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a4 = *(_QWORD *)a1;
  *(_BYTE *)(a4 + 24) = v6;
  *(_BYTE *)(a4 + 25) = v7;
  *(_QWORD *)(a4 + 48) = a2;
  *(_OWORD *)(a4 + 72) = v5;
  return result;
}

uint64_t sub_1A45EEB78()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD00000000000001CLL;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x736E6F6974636573;
}

uint64_t sub_1A45EEBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C2F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45EEC10()
{
  sub_1A45FDACC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EEC38()
{
  sub_1A45FDACC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.TemplateSectionsModel.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  char v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723020);
  v28 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *v2;
  v7 = *((_QWORD *)v2 + 2);
  v8 = *((_BYTE *)v2 + 24);
  v9 = *((_BYTE *)v2 + 25);
  v10 = *((_QWORD *)v2 + 6);
  v25 = *((_QWORD *)v2 + 7);
  v26 = v10;
  v11 = *((_QWORD *)v2 + 8);
  v23 = *((_QWORD *)v2 + 9);
  v24 = v11;
  v22 = *((_QWORD *)v2 + 10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDACC();
  sub_1A4691D40();
  v30 = v27;
  v31 = v7;
  LOBYTE(v32) = v8;
  BYTE1(v32) = v9;
  v12 = v2[2];
  v13 = v4;
  v33 = v12;
  v34 = 0;
  sub_1A45FDA00();
  v14 = v29;
  sub_1A4691890();
  if (v14)
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  v17 = v22;
  v16 = v23;
  v19 = v24;
  v18 = v25;
  v20 = v28;
  *(_QWORD *)&v30 = v26;
  v34 = 1;
  type metadata accessor for REMList_Codable();
  sub_1A4436344(&qword_1ED243DB8, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
  sub_1A4691890();
  *(_QWORD *)&v30 = v18;
  *((_QWORD *)&v30 + 1) = v19;
  v31 = v16;
  v32 = v17;
  v34 = 2;
  sub_1A45FD370();
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v6, v13);
}

void REMRemindersListDataView.TemplateSectionsModel.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  char v40;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723030);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDACC();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v40 = 0;
    sub_1A45FDA44();
    sub_1A46917C4();
    v9 = v33;
    v31 = v34;
    v32 = a2;
    v30 = v35;
    v39 = v36;
    v29 = BYTE1(v36);
    v10 = v37;
    v11 = v38;
    type metadata accessor for REMList_Codable();
    v40 = 1;
    sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v28 = v10;
    v12 = v33;
    v40 = 2;
    sub_1A45FD3B4();
    v27 = v12;
    v26 = 0;
    sub_1A469177C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v33;
    v26 = v34;
    v23 = v36;
    v24 = v35;
    swift_bridgeObjectRetain();
    v14 = v28;
    swift_bridgeObjectRetain();
    v15 = v11;
    swift_bridgeObjectRetain();
    v16 = v27;
    v17 = v13;
    v25 = v13;
    v18 = v13;
    v20 = v23;
    v19 = v24;
    sub_1A44962FC(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v22 = v31;
    v21 = v32;
    *v32 = v9;
    v21[1] = v22;
    v21[2] = v30;
    *((_BYTE *)v21 + 24) = v39;
    *((_BYTE *)v21 + 25) = v29;
    v21[4] = v14;
    v21[5] = v15;
    v21[6] = v16;
    v21[7] = v17;
    v21[8] = v26;
    v21[9] = v19;
    v21[10] = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1A4496404(v25);
  }
}

void sub_1A45EF218(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  REMRemindersListDataView.TemplateSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45EF22C(_QWORD *a1)
{
  return REMRemindersListDataView.TemplateSectionsModel.encode(to:)(a1);
}

uint64_t sub_1A45EF240()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D536D6F74737563;
  if (*v0 != 1)
    v1 = 0x797265636F7267;
  if (*v0)
    return v1;
  else
    return 0x72616C75676572;
}

uint64_t sub_1A45EF2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C45C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45EF2CC()
{
  sub_1A45FDB10();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EF2F4()
{
  sub_1A45FDB10();
  return sub_1A4691DC4();
}

uint64_t sub_1A45EF31C()
{
  sub_1A45FDB98();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EF344()
{
  sub_1A45FDB98();
  return sub_1A4691DC4();
}

uint64_t sub_1A45EF36C()
{
  sub_1A45FDB54();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EF394()
{
  sub_1A45FDB54();
  return sub_1A4691DC4();
}

uint64_t sub_1A45EF3BC()
{
  sub_1A45FDBDC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EF3E4()
{
  sub_1A45FDBDC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.ListType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723038);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723040);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723048);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723050);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDB10();
  sub_1A4691D40();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_1A45FDB98();
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_1A45FDB54();
      v16 = v21;
      sub_1A469180C();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_1A45FDBDC();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.ListType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723078);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723080);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723088);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723090);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDB10();
  v13 = v41;
  sub_1A4691D28();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_1A46917DC();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_1A46914B8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v25 = &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_1A45FDB98();
      v20 = v9;
      sub_1A4691734();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_1A45FDB54();
      v28 = v15;
      sub_1A4691734();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_1A45FDBDC();
    sub_1A4691734();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_1A45EFAB8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMRemindersListDataView.ListsSectionsModel.List.ListType.init(from:)(a1, a2);
}

uint64_t sub_1A45EFACC(_QWORD *a1)
{
  return REMRemindersListDataView.ListsSectionsModel.List.ListType.encode(to:)(a1);
}

id REMRemindersListDataView.ListsSectionsModel.List.listID.getter()
{
  id *v0;

  return *v0;
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.listName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *REMRemindersListDataView.ListsSectionsModel.List.listColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void REMRemindersListDataView.ListsSectionsModel.List.listType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.init(listID:listName:listColor:listType:sections:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7;

  v7 = *a5;
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_BYTE *)(a7 + 32) = v7;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_1A45EFB5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45EFB88 + 4 * byte_1A46AB886[*v0]))(0x44497473696CLL, 0xE600000000000000);
}

uint64_t sub_1A45EFB88()
{
  return 0x656D614E7473696CLL;
}

uint64_t sub_1A45EFBA0()
{
  return 0x6F6C6F437473696CLL;
}

uint64_t sub_1A45EFBBC()
{
  return 0x657079547473696CLL;
}

uint64_t sub_1A45EFBD4()
{
  return 0x736E6F6974636573;
}

uint64_t sub_1A45EFBEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45EFC10()
{
  sub_1A45FDC20();
  return sub_1A4691DB8();
}

uint64_t sub_1A45EFC38()
{
  sub_1A45FDC20();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FA18);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v16 = v1[3];
  v15 = *((unsigned __int8 *)v1 + 32);
  v14 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDC20();
  sub_1A4691D40();
  v20 = v9;
  v19 = 0;
  type metadata accessor for REMObjectID_Codable();
  sub_1A4436344(&qword_1ED243370, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  sub_1A4691890();
  if (!v2)
  {
    v10 = v16;
    v11 = v15;
    v12 = v14;
    LOBYTE(v20) = 1;
    sub_1A4691854();
    v20 = v10;
    v19 = 2;
    type metadata accessor for REMColor_Codable();
    sub_1A4436344(&qword_1ED242328, (uint64_t (*)(uint64_t))type metadata accessor for REMColor_Codable, (uint64_t)&protocol conformance descriptor for REMColor_Codable);
    sub_1A4691848();
    LOBYTE(v20) = v11;
    v19 = 3;
    sub_1A45FDC64();
    sub_1A4691890();
    v20 = v12;
    v19 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240DF0);
    sub_1A457EC10((unint64_t *)&unk_1ED23F6B8, &qword_1ED240DF0, (uint64_t (*)(void))sub_1A45FD934, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void REMRemindersListDataView.ListsSectionsModel.List.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void *v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F948);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDC20();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for REMObjectID_Codable();
    v25 = 0;
    sub_1A4436344(&qword_1ED243F80, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    v9 = v26;
    LOBYTE(v26) = 1;
    v10 = v9;
    v11 = sub_1A4691788();
    v13 = v12;
    v24 = v11;
    type metadata accessor for REMColor_Codable();
    v25 = 2;
    sub_1A4436344(&qword_1ED241AF8, (uint64_t (*)(uint64_t))type metadata accessor for REMColor_Codable, (uint64_t)&protocol conformance descriptor for REMColor_Codable);
    swift_bridgeObjectRetain();
    sub_1A469177C();
    v23 = v13;
    v14 = v26;
    v25 = 3;
    sub_1A45FDCA8();
    v22 = v14;
    v21 = v14;
    sub_1A46917C4();
    HIDWORD(v20) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240DF0);
    v25 = 4;
    sub_1A457EC10(&qword_1ED23F298, &qword_1ED240DF0, (uint64_t (*)(void))sub_1A45FD978, MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v15 = v26;
    v16 = v10;
    v17 = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v18 = v24;
    *(_QWORD *)a2 = v16;
    *(_QWORD *)(a2 + 8) = v18;
    v19 = v22;
    *(_QWORD *)(a2 + 16) = v17;
    *(_QWORD *)(a2 + 24) = v19;
    *(_BYTE *)(a2 + 32) = BYTE4(v20);
    *(_QWORD *)(a2 + 40) = v15;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
}

void sub_1A45F0298(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  REMRemindersListDataView.ListsSectionsModel.List.init(from:)(a1, a2);
}

uint64_t sub_1A45F02AC(_QWORD *a1)
{
  return REMRemindersListDataView.ListsSectionsModel.List.encode(to:)(a1);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelV6groups23completedRemindersCount012hasCompletedL0010prefetchedL00p3DueL0AESayAE7SublistVG_SiSgSbSgSayAA19REMReminder_CodableCGARtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3 & 1;
  *(_BYTE *)(a7 + 17) = a4;
  *(_QWORD *)(a7 + 24) = a5;
  *(_QWORD *)(a7 + 32) = a6;
  return result;
}

uint64_t sub_1A45F02DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F030C + 4 * byte_1A46AB88B[a1]))(0x737473696CLL, 0xE500000000000000);
}

unint64_t sub_1A45F030C()
{
  return 0xD000000000000017;
}

uint64_t sub_1A45F0378()
{
  unsigned __int8 *v0;

  return sub_1A45F02DC(*v0);
}

uint64_t sub_1A45F0380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C7F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F03A4()
{
  sub_1A45FDCEC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F03CC()
{
  sub_1A45FDCEC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FA20);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v19 = v1[1];
  v9 = *((unsigned __int8 *)v1 + 16);
  v17 = *((unsigned __int8 *)v1 + 17);
  v18 = v9;
  v10 = v1[3];
  v15 = v1[4];
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDCEC();
  sub_1A4691D40();
  v21 = v8;
  v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241500);
  sub_1A457EC10(&qword_1ED23F9F8, &qword_1ED241500, (uint64_t (*)(void))sub_1A45FDD30, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    v12 = v15;
    v11 = v16;
    LOBYTE(v21) = 1;
    sub_1A469183C();
    LOBYTE(v21) = 2;
    sub_1A4691824();
    v21 = v11;
    v20 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v21 = v12;
    v20 = 4;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.ListsSectionsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F950);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDCEC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241500);
  v21 = 0;
  sub_1A457EC10(&qword_1ED23F940, &qword_1ED241500, (uint64_t (*)(void))sub_1A45FDD74, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v22;
  LOBYTE(v22) = 1;
  swift_bridgeObjectRetain();
  v10 = sub_1A4691770();
  v20 = v11;
  LOBYTE(v22) = 2;
  v17 = sub_1A4691758();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v21 = 3;
  v18 = sub_1A4498364();
  v19 = v12;
  sub_1A46917C4();
  v21 = 4;
  v16 = v22;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_BYTE *)(a2 + 16) = v20 & 1;
  *(_BYTE *)(a2 + 17) = v17;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45F0914@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ListsSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F0928(_QWORD *a1)
{
  return REMRemindersListDataView.ListsSectionsModel.encode(to:)(a1);
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelV05listsI0AC05ListsI0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *v1;
  v3 = v1[1];
  v4 = *((_BYTE *)v1 + 16);
  v5 = *((_BYTE *)v1 + 17);
  v6 = v1[3];
  v7 = v1[4];
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 17) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelV05listsI005groupE0AeC05ListsI0V_So7REMListCtcfC_0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 17);
  *(_QWORD *)a3 = *(_QWORD *)a1;
  *(_QWORD *)(a3 + 8) = v3;
  *(_BYTE *)(a3 + 16) = v4;
  *(_BYTE *)(a3 + 17) = v5;
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

uint64_t sub_1A45F09B4()
{
  _BYTE *v0;

  if (*v0)
    return 0x70756F7267;
  else
    return 0x746365537473696CLL;
}

uint64_t sub_1A45F09F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460C9E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F0A18()
{
  sub_1A45FDDB8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F0A40()
{
  sub_1A45FDDB8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.GroupSectionsModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  __int128 v18;
  int v19;
  char v20;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7230A8);
  v13 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  v7 = v2[1];
  v9 = *((_BYTE *)v2 + 16);
  v19 = *((unsigned __int8 *)v2 + 17);
  v12[0] = v2[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDDB8();
  sub_1A4691D40();
  v14 = v8;
  v15 = v7;
  v16 = v9;
  v17 = v19;
  v18 = *(_OWORD *)(v2 + 3);
  v20 = 0;
  sub_1A45FDDFC();
  v10 = v12[1];
  sub_1A4691890();
  if (!v10)
  {
    v14 = v12[0];
    v20 = 1;
    type metadata accessor for REMList_Codable();
    sub_1A4436344(&qword_1ED243DB8, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
}

uint64_t REMRemindersListDataView.GroupSectionsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7230C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDDB8();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  sub_1A45FDE40();
  sub_1A46917C4();
  v9 = v21;
  v27 = v23;
  v17 = v24;
  v10 = v26;
  v18 = v22;
  v19 = v25;
  type metadata accessor for REMList_Codable();
  v28 = 1;
  sub_1A4436344(&qword_1ED243DC0, (uint64_t (*)(uint64_t))type metadata accessor for REMList_Codable, (uint64_t)&protocol conformance descriptor for REMList_Codable);
  v20 = v9;
  v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v21;
  v13 = v18;
  *(_QWORD *)a2 = v20;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = v27;
  *(_BYTE *)(a2 + 17) = v17;
  *(_QWORD *)(a2 + 24) = v11;
  *(_QWORD *)(a2 + 32) = v10;
  *(_QWORD *)(a2 + 40) = v12;
  v14 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45F0E60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.GroupSectionsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F0E74(_QWORD *a1)
{
  return REMRemindersListDataView.GroupSectionsModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchAll_Sections(store:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __n128 result;
  char *v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  char *v20[2];
  char v21;
  char v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v7 = type metadata accessor for REMRemindersListDataView.AllSectionsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(a1, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v10 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AllSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A448EB60(v10, (uint64_t)v9, v20);

  sub_1A4497F2C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.AllSectionsInvocation.Parameters);
  if (!v3)
  {
    v12 = v20[1];
    v13 = v21;
    v14 = v22;
    v15 = v26;
    v16 = v27;
    result = v23;
    v17 = v24;
    v18 = v25;
    *(char **)a3 = v20[0];
    *(_QWORD *)(a3 + 8) = v12;
    *(_BYTE *)(a3 + 16) = v13;
    *(_BYTE *)(a3 + 17) = v14;
    *(__n128 *)(a3 + 24) = result;
    *(_OWORD *)(a3 + 40) = v17;
    *(_OWORD *)(a3 + 56) = v18;
    *(_QWORD *)(a3 + 72) = v15;
    *(_QWORD *)(a3 + 80) = v16;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchGroup_Sections(store:group:includePinnedSublists:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  __n128 result;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[2];
  char v36;
  char v37;
  __n128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  objc_super v43;
  uint64_t v44;

  v33 = a5;
  v34 = a1;
  v31 = a4;
  v32 = a3;
  v8 = type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for REMList_Codable();
  v12 = objc_allocWithZone(v11);
  v13 = a2;
  v14 = objc_msgSend(v13, sel_store);
  v15 = objc_msgSend(v13, sel_account);
  v16 = objc_msgSend(v13, sel_storage);
  v43.receiver = v12;
  v43.super_class = v11;
  v17 = objc_msgSendSuper2(&v43, sel_initWithStore_account_storage_, v14, v15, v16);

  v18 = v17;
  v19 = objc_msgSend(v13, sel_parentList);
  objc_msgSend(v18, sel_setParentList_, v19);

  sub_1A4497EE8(v31, (uint64_t)&v10[*(int *)(v8 + 24)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *(_QWORD *)v10 = v18;
  v10[8] = v32;
  v20 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation());
  v21 = objc_msgSend(v20, sel_initWithFetchResultTokenToDiffAgainst_, v33);
  v22 = v44;
  sub_1A448EBC0((uint64_t)v21, (unint64_t)v10, v35);

  sub_1A4497F2C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.GroupSectionsInvocation.Parameters);
  if (!v22)
  {
    v24 = v35[1];
    v25 = v36;
    v26 = v37;
    v27 = v42;
    result = v38;
    v28 = v39;
    v29 = v40;
    v30 = v41;
    *(_QWORD *)a6 = v35[0];
    *(_QWORD *)(a6 + 8) = v24;
    *(_BYTE *)(a6 + 16) = v25;
    *(_BYTE *)(a6 + 17) = v26;
    *(__n128 *)(a6 + 24) = result;
    *(_OWORD *)(a6 + 40) = v28;
    *(_OWORD *)(a6 + 56) = v29;
    *(_OWORD *)(a6 + 72) = v30;
    *(_QWORD *)(a6 + 88) = v27;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchAppIntents_Sections(store:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Configuration;
  uint64_t v9;
  _BYTE *v10;
  char *v11;
  __n128 result;
  char *v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char *v21[2];
  char v22;
  char v23;
  __n128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  MEMORY[0x1E0C80A78](Configuration);
  v10 = (char *)&v21[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  swift_storeEnumTagMultiPayload();
  *v10 = 0x80;
  v10[*(int *)(Configuration + 24)] = 0;
  v10[*(int *)(Configuration + 32)] = 0;
  sub_1A4497EE8((uint64_t)v10, (uint64_t)v7, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v11 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a1);
  sub_1A448F840(v11, (uint64_t)v7, v21);

  sub_1A4497F2C((uint64_t)v7, type metadata accessor for REMRemindersListDataView.AppIntentsSectionsInvocation.Parameters);
  sub_1A4497F2C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  if (!v2)
  {
    v13 = v21[1];
    v14 = v22;
    v15 = v23;
    v16 = v27;
    v17 = v28;
    result = v24;
    v18 = v25;
    v19 = v26;
    *(char **)a2 = v21[0];
    *(_QWORD *)(a2 + 8) = v13;
    *(_BYTE *)(a2 + 16) = v14;
    *(_BYTE *)(a2 + 17) = v15;
    *(__n128 *)(a2 + 24) = result;
    *(_OWORD *)(a2 + 40) = v18;
    *(_OWORD *)(a2 + 56) = v19;
    *(_QWORD *)(a2 + 72) = v16;
    *(_QWORD *)(a2 + 80) = v17;
  }
  return result;
}

BOOL static REMRemindersListDataView.TodayGroupModel.Group.GroupType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.GroupType.hash(into:)()
{
  return sub_1A4691C98();
}

uint64_t sub_1A45F13C8()
{
  sub_1A45FDF94();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F13F0()
{
  sub_1A45FDF94();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F1418()
{
  sub_1A45FE060();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F1440()
{
  sub_1A45FE060();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F1468()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F1494 + 4 * byte_1A46AB890[*v0]))(0x7961646F74, 0xE500000000000000);
}

uint64_t sub_1A45F1494()
{
  return 0x6F5465726F666562;
}

uint64_t sub_1A45F14B8()
{
  return 0x6C6C417961646F74;
}

uint64_t sub_1A45F14D8()
{
  return 0x676E696E726F6DLL;
}

uint64_t sub_1A45F14F0()
{
  return 0x6F6F6E7265746661;
}

uint64_t sub_1A45F150C()
{
  return 0x746867696E6F74;
}

uint64_t sub_1A45F1524()
{
  return 0x79627261656ELL;
}

uint64_t sub_1A45F1538()
{
  return 0x7974706D65;
}

uint64_t sub_1A45F1548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460CAE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F156C()
{
  sub_1A45FDE84();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F1594()
{
  sub_1A45FDE84();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F15BC()
{
  sub_1A45FDEC8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F15E4()
{
  sub_1A45FDEC8();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F160C()
{
  sub_1A45FDFD8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F1634()
{
  sub_1A45FDFD8();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F165C()
{
  sub_1A45FDF0C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F1684()
{
  sub_1A45FDF0C();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F16AC()
{
  sub_1A45FE01C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F16D4()
{
  sub_1A45FE01C();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F16FC()
{
  sub_1A45FE0A4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F1724()
{
  sub_1A45FE0A4();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F174C()
{
  sub_1A45FDF50();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F1774()
{
  sub_1A45FDF50();
  return sub_1A4691DC4();
}

void REMRemindersListDataView.TodayGroupModel.Group.GroupType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23FFE8);
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F508);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F518);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F520);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v26 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F510);
  v24 = *(_QWORD *)(v11 - 8);
  v25 = v11;
  MEMORY[0x1E0C80A78](v11);
  v23 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4F8);
  v21 = *(_QWORD *)(v13 - 8);
  v22 = v13;
  MEMORY[0x1E0C80A78](v13);
  v20 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4E8);
  v18 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4F0);
  MEMORY[0x1E0C80A78](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F500);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  MEMORY[0x1E0C80A78](v16);
  v17 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FDE84();
  sub_1A4691D40();
  __asm { BR              X9 }
}

uint64_t sub_1A45F1A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 72) = 0;
  sub_1A45FE0A4();
  v5 = *(_QWORD *)(v4 - 104);
  sub_1A469180C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 112) + 8))(v1, v5);
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.GroupType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  _QWORD *v56;
  char *v57;

  v51 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23FFB8);
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECC0);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v54 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECD0);
  v44 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  MEMORY[0x1E0C80A78](v6);
  v53 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECD8);
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v50 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECC8);
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECB0);
  v38 = *(_QWORD *)(v11 - 8);
  v39 = v11;
  MEMORY[0x1E0C80A78](v11);
  v49 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECA0);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v48 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECA8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECB8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v56 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_1A45FDE84();
  v23 = v57;
  sub_1A4691D28();
  if (!v23)
  {
    v31[2] = v17;
    v31[0] = v15;
    v31[1] = v14;
    v32 = v19;
    v33 = v18;
    v57 = v21;
    v24 = sub_1A46917DC();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_1A46914B8();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v27 = &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType;
    v28 = v33;
    v29 = v57;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x1E0DEC450], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
}

uint64_t sub_1A45F2408@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.TodayGroupModel.Group.GroupType.init(from:)(a1, a2);
}

void sub_1A45F241C(_QWORD *a1)
{
  REMRemindersListDataView.TodayGroupModel.Group.GroupType.encode(to:)(a1);
}

void REMRemindersListDataView.TodayGroupModel.Group.groupType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.reminders.getter()
{
  return swift_bridgeObjectRetain();
}

ReminderKitInternal::REMRemindersListDataView::TodayGroupModel::Group __swiftcall REMRemindersListDataView.TodayGroupModel.Group.init(groupType:reminders:)(ReminderKitInternal::REMRemindersListDataView::TodayGroupModel::Group::GroupType groupType, Swift::OpaquePointer reminders)
{
  uint64_t v2;
  ReminderKitInternal::REMRemindersListDataView::TodayGroupModel::Group result;

  *(_BYTE *)v2 = *(_BYTE *)groupType;
  *(Swift::OpaquePointer *)(v2 + 8) = reminders;
  result.reminders = reminders;
  result.groupType = groupType;
  return result;
}

uint64_t sub_1A45F2454()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265646E696D6572;
  else
    return 0x70795470756F7267;
}

uint64_t sub_1A45F2494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460CE3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F24B8()
{
  sub_1A45FE0E8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F24E0()
{
  sub_1A45FE0E8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F528);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v10[0] = *((_QWORD *)v1 + 1);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE0E8();
  sub_1A4691D40();
  v13 = v8;
  v12 = 0;
  sub_1A45FE12C();
  sub_1A4691890();
  if (!v2)
  {
    v10[1] = v10[0];
    v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23ECE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE0E8();
  sub_1A4691D28();
  if (!v2)
  {
    v14 = 0;
    sub_1A45FE170();
    sub_1A46917C4();
    v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    v13 = 1;
    sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *(_BYTE *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45F2830@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.TodayGroupModel.Group.init(from:)(a1, a2);
}

uint64_t sub_1A45F2844(_QWORD *a1)
{
  return REMRemindersListDataView.TodayGroupModel.Group.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.TodayGroupModel.groups.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 REMRemindersListDataView.TodayGroupModel.remindersCount.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 24);
  result = *(__n128 *)(v1 + 8);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

void *REMRemindersListDataView.TodayGroupModel.currentLocation.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t REMRemindersListDataView.TodayGroupModel.prefetchedReminders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TodayGroupModel.prefetchedDueReminders.getter()
{
  return swift_bridgeObjectRetain();
}

void *REMRemindersListDataView.TodayGroupModel.todaySmartList.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

__n128 REMRemindersListDataView.TodayGroupModel.init(groups:remindersCount:currentLocation:prefetchedReminders:prefetchedDueReminders:todaySmartList:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  unsigned __int8 v7;
  __n128 result;

  v7 = a2[1].n128_u8[0];
  *(_QWORD *)a7 = a1;
  result = *a2;
  *(__n128 *)(a7 + 8) = *a2;
  *(_BYTE *)(a7 + 24) = v7;
  *(_QWORD *)(a7 + 32) = a3;
  *(_QWORD *)(a7 + 40) = a4;
  *(_QWORD *)(a7 + 48) = a5;
  *(_QWORD *)(a7 + 56) = a6;
  return result;
}

uint64_t REMRemindersListDataView.TodayGroupModel.todayReminders.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)v0 + 40;
  result = MEMORY[0x1E0DEE9D8];
  while (*(_BYTE *)(v2 - 8))
  {
    v2 += 16;
    if (!--v1)
      return result;
  }
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TodayGroupModel.nearbyReminders.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)v0 + 40;
  result = MEMORY[0x1E0DEE9D8];
  while (*(_BYTE *)(v2 - 8) != 6)
  {
    v2 += 16;
    if (!--v1)
      return result;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A45F29A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F29D8 + 4 * byte_1A46AB8A8[a1]))(0x7370756F7267, 0xE600000000000000);
}

uint64_t sub_1A45F29D8()
{
  return 0x7265646E696D6572;
}

uint64_t sub_1A45F29FC()
{
  return 0x4C746E6572727563;
}

unint64_t sub_1A45F2A20()
{
  return 0xD000000000000013;
}

unint64_t sub_1A45F2A3C()
{
  return 0xD000000000000016;
}

uint64_t sub_1A45F2A5C()
{
  return 0x616D537961646F74;
}

uint64_t sub_1A45F2A80()
{
  unsigned __int8 *v0;

  return sub_1A45F29A8(*v0);
}

uint64_t sub_1A45F2A88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460CF3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F2AAC()
{
  sub_1A45FE1B4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F2AD4()
{
  sub_1A45FE1B4();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.TodayGroupModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int v27;
  char v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F7A8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v22 = v1[2];
  v23 = v8;
  v27 = *((unsigned __int8 *)v1 + 24);
  v10 = v1[4];
  v20 = v1[5];
  v21 = v10;
  v11 = v1[6];
  v18 = v1[7];
  v19 = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE1B4();
  v12 = v4;
  sub_1A4691D40();
  v24 = v9;
  v28 = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED240318);
  sub_1A457EC10(qword_1ED23F448, qword_1ED240318, (uint64_t (*)(void))sub_1A45FE1F8, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = v20;
  v14 = v21;
  v15 = v19;
  v24 = v23;
  v25 = v22;
  v26 = v27;
  v28 = 1;
  sub_1A45FCFFC();
  sub_1A4691848();
  v24 = v14;
  v28 = 2;
  type metadata accessor for REMStructuredLocation_Codable();
  sub_1A4436344(&qword_1ED2436E8, (uint64_t (*)(uint64_t))type metadata accessor for REMStructuredLocation_Codable, (uint64_t)&protocol conformance descriptor for REMStructuredLocation_Codable);
  sub_1A4691848();
  v24 = v13;
  v28 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  sub_1A449CE48();
  sub_1A4691890();
  v24 = v15;
  v28 = 4;
  sub_1A4691890();
  v24 = v18;
  v28 = 5;
  type metadata accessor for REMSmartList_Codable();
  sub_1A4436344(&qword_1ED242478, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
  sub_1A4691848();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t REMRemindersListDataView.TodayGroupModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  int v10;
  id v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  unsigned __int8 v30;
  int v31;
  char v32;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F310);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE1B4();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED240318);
  v32 = 0;
  sub_1A457EC10(&qword_1ED23EC98, qword_1ED240318, (uint64_t (*)(void))sub_1A45FE23C, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  v9 = v28;
  v32 = 1;
  sub_1A45FD040();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  v26 = v29;
  v27 = v28;
  v10 = v30;
  type metadata accessor for REMStructuredLocation_Codable();
  v32 = 2;
  sub_1A4436344(&qword_1ED2436F0, (uint64_t (*)(uint64_t))type metadata accessor for REMStructuredLocation_Codable, (uint64_t)&protocol conformance descriptor for REMStructuredLocation_Codable);
  sub_1A469177C();
  v31 = v10;
  v12 = v28;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v32 = 3;
  v13 = sub_1A4498364();
  v22 = v12;
  v14 = v12;
  v23 = v13;
  v24 = v14;
  sub_1A46917C4();
  v32 = 4;
  v21 = v28;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  v15 = (uint64_t)v28;
  type metadata accessor for REMSmartList_Codable();
  v32 = 5;
  sub_1A4436344(&qword_1ED241BC8, (uint64_t (*)(uint64_t))type metadata accessor for REMSmartList_Codable, (uint64_t)&protocol conformance descriptor for REMSmartList_Codable);
  v25 = v15;
  swift_bridgeObjectRetain();
  sub_1A469177C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v16 = v28;
  v17 = v28;
  v18 = v27;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v18;
  v19 = v25;
  *(_QWORD *)(a2 + 16) = v26;
  *(_BYTE *)(a2 + 24) = v31;
  v20 = v21;
  *(_QWORD *)(a2 + 32) = v22;
  *(_QWORD *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45F327C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.TodayGroupModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F3290(_QWORD *a1)
{
  return REMRemindersListDataView.TodayGroupModel.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.sectionOrdering.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.init(sectionOrdering:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1A45F32B4()
{
  return 0x4F6E6F6974636573;
}

uint64_t sub_1A45F32D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4F6E6F6974636573 && a2 == 0xEF676E6972656472)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A45F3390()
{
  sub_1A45FE280();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F33B8()
{
  sub_1A45FE280();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7230E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE280();
  sub_1A4691D40();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D958);
  sub_1A457EC10(&qword_1EE7230F0, &qword_1EE71D958, (uint64_t (*)(void))sub_1A45FE2C4, MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t REMRemindersListDataView.TodaySectionOrderingModel.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE280();
  sub_1A4691D28();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D958);
    sub_1A457EC10(&qword_1EE723108, &qword_1EE71D958, (uint64_t (*)(void))sub_1A45FE308, MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A45F3650@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return REMRemindersListDataView.TodaySectionOrderingModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F3664(_QWORD *a1)
{
  return REMRemindersListDataView.TodaySectionOrderingModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchToday_Groups(store:grouped:currentLocation:today:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, id a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  __n128 result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _QWORD v29[2];
  uint64_t v30;
  __n128 v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v29[1] = a1;
  v13 = type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    objc_allocWithZone((Class)type metadata accessor for REMStructuredLocation_Codable());
    a3 = REMStructuredLocation_Codable.init(_:)(a3);
  }
  v16 = &v15[*(int *)(v13 + 24)];
  v17 = sub_1A46900B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, a4, v17);
  sub_1A4497EE8(a5, (uint64_t)&v15[*(int *)(v13 + 28)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *v15 = a2 & 1;
  *((_QWORD *)v15 + 1) = a3;
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TodayGroupInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a6);
  v19 = v40;
  sub_1A448F8A0((uint64_t)v18, (unint64_t)v15, &v30);

  sub_1A4497F2C((uint64_t)v15, type metadata accessor for REMRemindersListDataView.TodayGroupInvocation.Parameters);
  if (!v19)
  {
    v21 = v32;
    v22 = v33;
    v23 = v35;
    v24 = v38;
    v25 = v39;
    result = v31;
    v26 = v34;
    v27 = v36;
    v28 = v37;
    *(_QWORD *)a7 = v30;
    *(__n128 *)(a7 + 8) = result;
    *(_BYTE *)(a7 + 24) = v21;
    *(_QWORD *)(a7 + 32) = v22;
    *(_OWORD *)(a7 + 40) = v26;
    *(_QWORD *)(a7 + 56) = v23;
    *(_OWORD *)(a7 + 64) = v27;
    *(_OWORD *)(a7 + 80) = v28;
    *(_QWORD *)(a7 + 96) = v24;
    *(_QWORD *)(a7 + 104) = v25;
  }
  return result;
}

void static REMRemindersListDataView.fetchTodaySectionOrdering(store:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t v4;
  uint64_t v5[2];

  v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.TodaySectionOrderingInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, 0);
  sub_1A44905C8((uint64_t)v3, v5);

  if (!v1)
  {
    v4 = v5[0];

    *a1 = v4;
  }
}

uint64_t REMRemindersListDataView.DatesModel.Group.reminders.getter()
{
  return sub_1A45F44D0((void (*)(_QWORD))type metadata accessor for REMRemindersListDataView.DatesModel.Group);
}

uint64_t REMRemindersListDataView.DatesModel.Group.isToday.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for REMRemindersListDataView.DatesModel.Group(0) + 24));
}

uint64_t REMRemindersListDataView.DatesModel.Group.init(date:reminders:isToday:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for REMRemindersListDataView.DatesModel.Group(0);
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  *(_BYTE *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t sub_1A45F3928()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265646E696D6572;
  if (*v0 != 1)
    v1 = 0x7961646F547369;
  if (*v0)
    return v1;
  else
    return 1702125924;
}

uint64_t sub_1A45F3980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F39A4()
{
  sub_1A45FE360();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F39CC()
{
  sub_1A45FE360();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.DatesModel.Group.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723118);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE360();
  sub_1A4691D40();
  v12 = 0;
  sub_1A46900B4();
  sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A4691890();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for REMRemindersListDataView.DatesModel.Group(0) + 20));
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
    v10[14] = 2;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t REMRemindersListDataView.DatesModel.Group.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v18 = a2;
  v19 = sub_1A46900B4();
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723128);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for REMRemindersListDataView.DatesModel.Group(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE360();
  v21 = v7;
  v11 = v23;
  sub_1A4691D28();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = (uint64_t)v10;
  v27 = 0;
  sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v14 = v19;
  v13 = v20;
  sub_1A46917C4();
  v23 = v3;
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
  v26 = 1;
  sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  *(_QWORD *)(v12 + *(int *)(v8 + 20)) = v24;
  v25 = 2;
  v15 = sub_1A4691794();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v21, v22);
  *(_BYTE *)(v12 + *(int *)(v8 + 24)) = v15 & 1;
  sub_1A4497EE8(v12, v18, type metadata accessor for REMRemindersListDataView.DatesModel.Group);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A4497F2C(v12, type metadata accessor for REMRemindersListDataView.DatesModel.Group);
}

uint64_t sub_1A45F3EAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.DatesModel.Group.init(from:)(a1, a2);
}

uint64_t sub_1A45F3EC0(_QWORD *a1)
{
  return REMRemindersListDataView.DatesModel.Group.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.DatesModel.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.DatesModel.completedRemindersCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t REMRemindersListDataView.DatesModel.prefetchedReminders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.DatesModel.prefetchedDueReminders.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall REMRemindersListDataView.DatesModel.init(groups:completedRemindersCount:prefetchedReminders:prefetchedDueReminders:)(ReminderKitInternal::REMRemindersListDataView::DatesModel *__return_ptr retstr, Swift::OpaquePointer groups, Swift::Int_optional completedRemindersCount, Swift::OpaquePointer prefetchedReminders, Swift::OpaquePointer prefetchedDueReminders)
{
  retstr->groups = groups;
  retstr->completedRemindersCount.value = completedRemindersCount.value;
  retstr->completedRemindersCount.is_nil = completedRemindersCount.is_nil;
  retstr->prefetchedReminders = prefetchedReminders;
  retstr->prefetchedDueReminders = prefetchedDueReminders;
}

uint64_t sub_1A45F3F0C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F3F3C + 4 * byte_1A46AB8AE[a1]))(0x7370756F7267, 0xE600000000000000);
}

unint64_t sub_1A45F3F3C()
{
  return 0xD000000000000017;
}

uint64_t sub_1A45F3F90()
{
  unsigned __int8 *v0;

  return sub_1A45F3F0C(*v0);
}

uint64_t sub_1A45F3F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D364(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F3FBC()
{
  sub_1A45FE3A4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F3FE4()
{
  sub_1A45FE3A4();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.DatesModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723130);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v17 = v1[1];
  v16 = *((unsigned __int8 *)v1 + 16);
  v9 = v1[3];
  v14 = v1[4];
  v15 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE3A4();
  sub_1A4691D40();
  v19 = v8;
  v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723140);
  sub_1A45FE3E8();
  sub_1A4691890();
  if (!v2)
  {
    v11 = v14;
    v10 = v15;
    LOBYTE(v19) = 1;
    sub_1A469183C();
    v19 = v10;
    v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v19 = v11;
    v18 = 3;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.DatesModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723158);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE3A4();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723140);
  v20 = 0;
  sub_1A45FE464();
  sub_1A46917C4();
  v9 = v21;
  LOBYTE(v21) = 1;
  swift_bridgeObjectRetain();
  v10 = sub_1A4691770();
  v17 = v11;
  v18 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v20 = 2;
  v19 = sub_1A4498364();
  sub_1A46917C4();
  v20 = 3;
  v16 = v21;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v18;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v14;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45F4498@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.DatesModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F44AC(_QWORD *a1)
{
  return REMRemindersListDataView.DatesModel.encode(to:)(a1);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter()
{
  return sub_1A45F44D0((void (*)(_QWORD))type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
}

uint64_t sub_1A45F44D0(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.init(date:reminders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A45F7944(a1, a2, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day, a3);
}

uint64_t sub_1A45F4500()
{
  sub_1A45FE4F4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F4528()
{
  sub_1A45FE4F4();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.encode(to:)(_QWORD *a1)
{
  return sub_1A45F7A84(a1, &qword_1ED23F9B8, (void (*)(void))sub_1A45FE4F4, (uint64_t)&type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A45F7C64(a1, &qword_1ED23F8C0, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day, (void (*)(void))sub_1A45FE4F4, a2);
}

uint64_t sub_1A45F45B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Day.init(from:)(a1, a2);
}

uint64_t sub_1A45F45CC(_QWORD *a1)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Day.encode(to:)(a1);
}

uint64_t sub_1A45F45E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F4610 + 4 * byte_1A46AB8B2[*v0]))(0x65754474736170, 0xE700000000000000);
}

uint64_t sub_1A45F4610()
{
  return 0x657669467478656ELL;
}

uint64_t sub_1A45F4630()
{
  return 7954788;
}

uint64_t sub_1A45F4640()
{
  return 0x68746E6F6DLL;
}

uint64_t sub_1A45F4654()
{
  return 1918985593;
}

uint64_t sub_1A45F4664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D4F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F4688()
{
  sub_1A45FE54C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F46B0()
{
  sub_1A45FE54C();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F46D8()
{
  sub_1A45FE694();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F4700()
{
  sub_1A45FE694();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F4728()
{
  sub_1A45FE650();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F4750()
{
  sub_1A45FE650();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F4778()
{
  sub_1A45FE6D8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F47A0()
{
  sub_1A45FE6D8();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F47C8()
{
  return 1937334628;
}

uint64_t sub_1A45F47D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A45F485C()
{
  sub_1A45FE71C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F4884()
{
  sub_1A45FE71C();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F48AC()
{
  sub_1A45FE590();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F48D4()
{
  sub_1A45FE590();
  return sub_1A4691DC4();
}

void REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9D0);
  v35 = *(_QWORD *)(v2 - 8);
  v36 = v2;
  MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9D8);
  v32 = *(_QWORD *)(v4 - 8);
  v33 = v4;
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9C8);
  v23 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
  MEMORY[0x1E0C80A78](v24);
  v25 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9E8);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x1E0C80A78](v8);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A46900B4();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v39 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v23 - v14;
  MEMORY[0x1E0C80A78](v13);
  v37 = (char *)&v23 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9E0);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9C0);
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE54C();
  v44 = v21;
  sub_1A4691D40();
  sub_1A4497EE8(v43, (uint64_t)v19, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
  v22 = (char *)sub_1A45F4C1C + 4 * byte_1A46AB8B7[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A45F4C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v3;
  *(_BYTE *)(v4 - 72) = 0;
  sub_1A45FE71C();
  v7 = *(_QWORD *)(v4 - 112);
  v6 = *(_QWORD *)(v4 - 104);
  sub_1A469180C();
  *(_QWORD *)(v4 - 72) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241418);
  sub_1A45FE5D4();
  sub_1A4691890();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 136) + 8))(v7, v6);
  return swift_bridgeObjectRelease();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  _QWORD v38[7];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;

  v58 = a2;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8D8);
  v47 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v56 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8E0);
  v46 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v54 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8D0);
  v40 = *(_QWORD *)(v5 - 8);
  v41 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8F0);
  v45 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v51 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8E8);
  v38[6] = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v49 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8C8);
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(0);
  v12 = MEMORY[0x1E0C80A78](v57);
  v48 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v38 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v38 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)v38 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v38 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v38 - v26;
  v28 = a1[3];
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v28);
  sub_1A45FE54C();
  v55 = v11;
  v29 = v60;
  sub_1A4691D28();
  if (!v29)
  {
    v38[1] = v25;
    v38[2] = v19;
    v38[3] = v22;
    v38[4] = v16;
    v60 = 0;
    v38[5] = v27;
    v30 = v57;
    v31 = v53;
    v32 = v55;
    v33 = sub_1A46917DC();
    if (*(_QWORD *)(v33 + 16) == 1)
      __asm { BR              X10 }
    v34 = sub_1A46914B8();
    swift_allocError();
    v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v36 = v30;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x1E0DEC450], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v32, v31);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
}

uint64_t sub_1A45F5D24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.init(from:)(a1, a2);
}

void sub_1A45F5D38(_QWORD *a1)
{
  REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.encode(to:)(a1);
}

uint64_t sub_1A45F5D50()
{
  sub_1A45FE7DC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F5D78()
{
  sub_1A45FE7DC();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v22 = *((unsigned __int8 *)v1 + 24);
  v10 = v1[4];
  v15 = v1[5];
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE7DC();
  sub_1A4691D40();
  v19 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241420);
  sub_1A45FE820();
  sub_1A4691890();
  if (!v2)
  {
    v12 = v15;
    v11 = v16;
    v19 = v18;
    v20 = v17;
    v21 = v22;
    v23 = 1;
    sub_1A45FCFFC();
    sub_1A4691848();
    v19 = v11;
    v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v19 = v12;
    v23 = 3;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE7DC();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241420);
  v23 = 0;
  sub_1A45FE89C();
  sub_1A46917C4();
  v9 = v19;
  v23 = 1;
  sub_1A45FD040();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  v16 = v20;
  v17 = v19;
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v23 = 2;
  v18 = sub_1A4498364();
  sub_1A46917C4();
  v23 = 3;
  v15 = v19;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v17;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v12;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45F6278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F628C(_QWORD *a1)
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchScheduled_Flat(store:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  __n128 result;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  __n128 v20;
  char v21;
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v7 = type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(a1, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v10 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a2);
  sub_1A449107C((uint64_t)v10, (uint64_t)v9, &v19);

  sub_1A4497F2C((uint64_t)v9, type metadata accessor for REMRemindersListDataView.ScheduledFlatInvocation.Parameters);
  if (!v3)
  {
    v12 = v21;
    v13 = v22;
    v14 = v26;
    v15 = v27;
    result = v20;
    v16 = v23;
    v17 = v24;
    v18 = v25;
    *(_QWORD *)a3 = v19;
    *(__n128 *)(a3 + 8) = result;
    *(_BYTE *)(a3 + 24) = v12;
    *(_BYTE *)(a3 + 25) = v13;
    *(_OWORD *)(a3 + 32) = v16;
    *(_OWORD *)(a3 + 48) = v17;
    *(_OWORD *)(a3 + 64) = v18;
    *(_QWORD *)(a3 + 80) = v14;
    *(_QWORD *)(a3 + 88) = v15;
  }
  return result;
}

uint64_t sub_1A45F63C4()
{
  return 0x7961646F74;
}

uint64_t sub_1A45F63D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7961646F74 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A45F6464()
{
  sub_1A45FE970();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F648C()
{
  sub_1A45FE970();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F64B4()
{
  sub_1A45FE9B4();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F64DC()
{
  sub_1A45FE9B4();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F6504()
{
  _BYTE *v0;

  if (*v0)
    return 0x737961776C61;
  else
    return 0x64656465654E7361;
}

uint64_t sub_1A45F653C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F6560()
{
  sub_1A45FE92C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F6588()
{
  sub_1A45FE92C();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ScheduledTodayGroup.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char v29;
  char v30;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723180);
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v23 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1A46900B4();
  v22 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723188);
  v4 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723190);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE92C();
  sub_1A4691D40();
  sub_1A4497EE8(v27, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    v29 = 0;
    sub_1A45FE9B4();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  }
  else
  {
    v16 = v22;
    v17 = v25;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v9, v25);
    v30 = 1;
    sub_1A45FE970();
    v18 = v23;
    sub_1A469180C();
    sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    v19 = v26;
    sub_1A4691890();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v19);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v28, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t REMRemindersListDataView.ScheduledTodayGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  char v40;

  v38 = a1;
  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231B8);
  v4 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  v33 = v4;
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231C0);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v35 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v29 - v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE92C();
  v18 = v37;
  sub_1A4691D28();
  if (!v18)
  {
    v29 = v12;
    v19 = v35;
    v20 = v36;
    v37 = v9;
    v21 = sub_1A46917DC();
    if (*(_QWORD *)(v21 + 16) == 1)
    {
      if ((*(_BYTE *)(v21 + 32) & 1) != 0)
      {
        v35 = (char *)v21;
        v40 = 1;
        sub_1A45FE970();
        sub_1A4691734();
        sub_1A46900B4();
        sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
        v26 = v32;
        sub_1A46917C4();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v26);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 0, 1, v27);
        sub_1A44683E0((uint64_t)v15, (uint64_t)v17, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
      }
      else
      {
        v39 = 0;
        sub_1A45FE9B4();
        sub_1A4691734();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v31);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v17, 1, 1, v28);
      }
      sub_1A44683E0((uint64_t)v17, v34, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
    }
    else
    {
      v22 = sub_1A46914B8();
      swift_allocError();
      v24 = v23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
      *v24 = v29;
      sub_1A4691740();
      sub_1A46914A0();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

uint64_t sub_1A45F6D14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.ScheduledTodayGroup.init(from:)(a1, a2);
}

uint64_t sub_1A45F6D28(_QWORD *a1)
{
  return REMRemindersListDataView.ScheduledTodayGroup.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchScheduled_ByDay(store:includeTodayGroup:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  __n128 result;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21[2];
  char v22;
  __n128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v9 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(a1, (uint64_t)v11, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  sub_1A4497EE8(a2, (uint64_t)&v11[*(int *)(v9 + 20)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a3);
  sub_1A44910C0((uint64_t)v12, (unint64_t)v11, v21);

  sub_1A4497F2C((uint64_t)v11, type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters);
  if (!v4)
  {
    v14 = v21[1];
    v15 = v22;
    v16 = v26;
    v17 = v27;
    result = v23;
    v18 = v24;
    v19 = v25;
    *(_QWORD *)a4 = v21[0];
    *(_QWORD *)(a4 + 8) = v14;
    *(_BYTE *)(a4 + 16) = v15;
    *(__n128 *)(a4 + 24) = result;
    *(_OWORD *)(a4 + 40) = v18;
    *(_OWORD *)(a4 + 56) = v19;
    *(_QWORD *)(a4 + 72) = v16;
    *(_QWORD *)(a4 + 80) = v17;
  }
  return result;
}

uint64_t sub_1A45F6E78()
{
  _BYTE *v0;

  if (*v0)
    return 0x746361706D6F63;
  else
    return 0x72616C75676572;
}

uint64_t sub_1A45F6EAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D7EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F6ED0()
{
  sub_1A45FE9F8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F6EF8()
{
  sub_1A45FE9F8();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F6F20()
{
  sub_1A45FEA3C();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F6F48()
{
  sub_1A45FEA3C();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F6F70()
{
  sub_1A45FEA80();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F6F98()
{
  sub_1A45FEA80();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.ScheduledByDateBucketsStyle.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F900);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F908);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F8F8);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE9F8();
  sub_1A4691D40();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1A45FEA3C();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1A45FEA80();
    sub_1A469180C();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t REMRemindersListDataView.ScheduledByDateBucketsStyle.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F998);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F9A0);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F990);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FE9F8();
  v11 = v33;
  sub_1A4691D28();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1A46917DC();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1A46914B8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v21 = &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1A45FEA3C();
    sub_1A4691734();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1A45FEA80();
    v22 = v6;
    sub_1A4691734();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1A45F74F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return REMRemindersListDataView.ScheduledByDateBucketsStyle.init(from:)(a1, a2);
}

uint64_t sub_1A45F7504(_QWORD *a1)
{
  return REMRemindersListDataView.ScheduledByDateBucketsStyle.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchScheduled_ByDateBuckets(store:style:today:configuration:diffingAgainst:)@<Q0>(char *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  _BYTE *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  __n128 result;
  char v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  __n128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v10 = type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation.Parameters(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = &v13[*(int *)(v11 + 20)];
  v16 = sub_1A46900B4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a2, v16);
  sub_1A4497EE8(a3, (uint64_t)&v13[*(int *)(v10 + 24)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  *v13 = v14;
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a4);
  v18 = v34;
  sub_1A4491CF0(v17, (uint64_t)v13, &v26);

  sub_1A4497F2C((uint64_t)v13, type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsInvocation.Parameters);
  if (!v18)
  {
    v20 = v28;
    v21 = v32;
    v22 = v33;
    result = v27;
    v23 = v29;
    v24 = v30;
    v25 = v31;
    *(_QWORD *)a5 = v26;
    *(__n128 *)(a5 + 8) = result;
    *(_BYTE *)(a5 + 24) = v20;
    *(_OWORD *)(a5 + 32) = v23;
    *(_OWORD *)(a5 + 48) = v24;
    *(_OWORD *)(a5 + 64) = v25;
    *(_QWORD *)(a5 + 80) = v21;
    *(_QWORD *)(a5 + 88) = v22;
  }
  return result;
}

__n128 static REMRemindersListDataView.fetchScheduled(store:sortingStyle:showCompleted:countCompleted:remindersPrefetch:alwaysIncludeTodayGroup:diffingAgainst:)@<Q0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *Configuration;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  __n128 result;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];
  char v41;
  __n128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  int v47;

  v38 = a1;
  v36 = a8;
  v37 = a7;
  v47 = a6;
  v12 = type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Configuration = (int *)type metadata accessor for REMRemindersListDataView.FetchConfiguration(0);
  v19 = MEMORY[0x1E0C80A78](Configuration);
  v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  sub_1A4497EE8(a3, (uint64_t)&v21[*(int *)(v19 + 20)], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a5, (uint64_t)&v21[Configuration[7]], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  *v21 = (_BYTE)a2;
  v21[Configuration[6]] = a4;
  v21[Configuration[8]] = 2;
  if ((v47 & 1) != 0)
  {
    sub_1A46900A8();
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v17, 0, 1, v22);
  }
  else
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v17, 1, 1, v23);
  }
  v24 = v39;
  v25 = v37;
  sub_1A4497EE8((uint64_t)v17, (uint64_t)v14, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  sub_1A4497EE8((uint64_t)v21, (uint64_t)&v14[*(int *)(v12 + 20)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v26 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, v25);
  sub_1A44910C0((uint64_t)v26, (unint64_t)v14, v40);

  sub_1A4497F2C((uint64_t)v14, type metadata accessor for REMRemindersListDataView.ScheduledByDayInvocation.Parameters);
  sub_1A4497F2C((uint64_t)v17, type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup);
  sub_1A4497F2C((uint64_t)v21, type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  if (!v24)
  {
    v28 = v40[1];
    v29 = v41;
    v30 = v45;
    v31 = v46;
    result = v42;
    v32 = v43;
    v33 = v44;
    v34 = v36;
    *v36 = v40[0];
    v34[1] = v28;
    *((_BYTE *)v34 + 16) = v29;
    *(__n128 *)(v34 + 3) = result;
    *(_OWORD *)(v34 + 5) = v32;
    *(_OWORD *)(v34 + 7) = v33;
    v34[9] = v30;
    v34[10] = v31;
  }
  return result;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO16DateBucketsModelO014RepresentativeH0V4date10Foundation0H0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter()
{
  return sub_1A45F44D0((void (*)(_QWORD))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.init(date:reminders:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A45F7944(a1, a2, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day, a3);
}

uint64_t sub_1A45F7944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;

  v8 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = a3(0);
  *(_QWORD *)(a4 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_1A45F79A4()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265646E696D6572;
  else
    return 1702125924;
}

uint64_t sub_1A45F79DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D8DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F7A00()
{
  sub_1A45FEAD8();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F7A28()
{
  sub_1A45FEAD8();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.encode(to:)(_QWORD *a1)
{
  return sub_1A45F7A84(a1, &qword_1EE7231D8, (void (*)(void))sub_1A45FEAD8, (uint64_t)&type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
}

uint64_t sub_1A45F7A84(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v15 = a5;
  v8 = v5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v16 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1A4691D40();
  v19 = 0;
  sub_1A46900B4();
  sub_1A4436344(&qword_1ED243168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A4691890();
  if (!v6)
  {
    v17 = *(_QWORD *)(v8 + *(int *)(v15(0) + 20));
    v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
    sub_1A457EC10(&qword_1ED23F6B0, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCEEC, MEMORY[0x1E0DEAF10]);
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v10);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A45F7C64(a1, &qword_1EE7231E8, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day, (void (*)(void))sub_1A45FEAD8, a2);
}

uint64_t sub_1A45F7C64@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(void);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;

  v32 = a4;
  v26 = a5;
  v31 = sub_1A46900B4();
  v28 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v11 = (void (*)(void))((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = a3;
  v12 = a3(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v25 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v32();
  v32 = v11;
  v15 = v33;
  sub_1A4691D28();
  if (v15)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v12;
  v33 = v9;
  v16 = (uint64_t)v14;
  v17 = v28;
  v36 = 0;
  sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v18 = v29;
  v19 = v30;
  v21 = v31;
  v20 = v32;
  sub_1A46917C4();
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v16, v18, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242D48);
  v35 = 1;
  sub_1A457EC10(&qword_1ED242D50, &qword_1ED242D48, (uint64_t (*)(void))sub_1A45FCF30, MEMORY[0x1E0DEAF40]);
  sub_1A46917C4();
  (*(void (**)(void (*)(void), uint64_t))(v33 + 8))(v20, v19);
  v22 = v26;
  *(_QWORD *)(v16 + *(int *)(v25 + 20)) = v34;
  v23 = v27;
  sub_1A4497EE8(v16, v22, v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1A4497F2C(v16, v23);
}

uint64_t sub_1A45F7F28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Day.init(from:)(a1, a2);
}

uint64_t sub_1A45F7F3C(_QWORD *a1)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Day.encode(to:)(a1);
}

uint64_t sub_1A45F7F50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F7F78 + 4 * byte_1A46AB8C1[*v0]))(7954788, 0xE300000000000000);
}

uint64_t sub_1A45F7F78()
{
  return 0x6576655374736170;
}

uint64_t sub_1A45F7F9C()
{
  return 0x7269685474736170;
}

uint64_t sub_1A45F7FC0()
{
  return 0x68746E6F6DLL;
}

uint64_t sub_1A45F7FD4()
{
  return 1918985593;
}

uint64_t sub_1A45F7FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460D9C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F8008()
{
  sub_1A45FEB30();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F8030()
{
  sub_1A45FEB30();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F8058()
{
  sub_1A45FED00();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F8080()
{
  sub_1A45FED00();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F80A8()
{
  _BYTE *v0;

  if (*v0)
    return 1937334628;
  else
    return 0x7461447472617473;
}

uint64_t sub_1A45F80E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460DC04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F8104()
{
  sub_1A45FEC34();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F812C()
{
  sub_1A45FEC34();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F8154()
{
  sub_1A45FECBC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F817C()
{
  sub_1A45FECBC();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F81A4()
{
  sub_1A45FEC78();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F81CC()
{
  sub_1A45FEC78();
  return sub_1A4691DC4();
}

uint64_t sub_1A45F81F4()
{
  _BYTE *v0;

  if (*v0)
    return 1937334628;
  else
    return 0xD000000000000012;
}

uint64_t sub_1A45F822C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460DCF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F8250()
{
  sub_1A45FEB74();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F8278()
{
  sub_1A45FEB74();
  return sub_1A4691DC4();
}

void REMRemindersListDataView.CompletedDateBucketsModel.Bucket.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231F0);
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(0);
  MEMORY[0x1E0C80A78](v27);
  v35 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231F8);
  v33 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723200);
  v30 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  MEMORY[0x1E0C80A78](v7);
  v29 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723208);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v25 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A46900B4();
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v23 - v14;
  MEMORY[0x1E0C80A78](v13);
  v39 = (char *)&v23 - v15;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723210);
  v23 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v16 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723218);
  v44 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v21 = (char *)&v23 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FEB30();
  v46 = v21;
  sub_1A4691D40();
  sub_1A4497EE8(v45, (uint64_t)v19, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
  v22 = (char *)sub_1A45F8608 + 4 * byte_1A46AB8C6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A45F8608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1A44683E0(v2, v1, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
  *(_BYTE *)(v3 - 72) = 0;
  sub_1A45FED00();
  v4 = *(_QWORD *)(v3 - 112);
  v5 = *(_QWORD *)(v3 - 104);
  sub_1A469180C();
  sub_1A4436344(&qword_1EE723250, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
  v6 = *(_QWORD *)(v3 - 296);
  sub_1A4691890();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 304) + 8))(v0, v6);
  sub_1A4497F2C(v1, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v4, v5);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Bucket.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  _QWORD v35[8];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;

  v35[6] = a2;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723280);
  v44 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v52 = (char *)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723288);
  v43 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v48 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723290);
  v42 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v47 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723298);
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v46 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7232A0);
  v35[7] = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v45 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7232A8);
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(0);
  v11 = MEMORY[0x1E0C80A78](v49);
  v37 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v35 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v35 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v35 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v35 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v35 - v25;
  v27 = a1[3];
  v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1A45FEB30();
  v28 = v55;
  sub_1A4691D28();
  if (!v28)
  {
    v35[1] = v24;
    v35[2] = v21;
    v35[3] = v18;
    v35[4] = v15;
    v35[5] = 0;
    v55 = v26;
    v29 = v51;
    v30 = sub_1A46917DC();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = sub_1A46914B8();
    swift_allocError();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8);
    *v33 = v49;
    sub_1A4691740();
    sub_1A46914A0();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v29);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

void sub_1A45F91CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)(v2 - 90) = 1;
  sub_1A45FECBC();
  v3 = *(_QWORD *)(v2 - 176);
  v4 = *(_QWORD *)(v2 - 280);
  sub_1A4691734();
  if (!v4)
  {
    *(_QWORD *)(v2 - 280) = v1;
    sub_1A46900B4();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    *(_BYTE *)(v2 - 91) = 0;
    sub_1A4436344((unint64_t *)&unk_1ED243010, v5, MEMORY[0x1E0CB08C0]);
    v6 = *(_QWORD *)(v2 - 304);
    v7 = *(_QWORD *)(v2 - 240);
    sub_1A46917C4();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723258);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723240);
    *(_BYTE *)(v2 - 92) = 1;
    sub_1A45FED44();
    sub_1A46917C4();
    v8 = *(_QWORD *)(v2 - 144);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 216) + 8))(v3, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v2 - 280), v0);
    swift_storeEnumTagMultiPayload();
    v9 = *(_QWORD *)(v2 - 112);
    v10 = *(_QWORD *)(v2 - 104);
    sub_1A44683E0(v6, v10, (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    sub_1A44683E0(v10, *(_QWORD *)(v2 - 272), (uint64_t (*)(_QWORD))type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    __swift_destroy_boxed_opaque_existential_1(v9);
    JUMPOUT(0x1A45F91A8);
  }
  JUMPOUT(0x1A45F9180);
}

uint64_t sub_1A45F9870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Bucket.init(from:)(a1, a2);
}

void sub_1A45F9884(_QWORD *a1)
{
  REMRemindersListDataView.CompletedDateBucketsModel.Bucket.encode(to:)(a1);
}

__n128 _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV7buckets14remindersCount19prefetchedReminders0o3DueP0AESayAE6BucketOG_AC0N11ByCompletedVSgSayAA19REMReminder_CodableCGARtcfC_0@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unsigned __int8 v5;
  __n128 result;

  v5 = a2[1].n128_u8[0];
  *(_QWORD *)a5 = a1;
  result = *a2;
  *(__n128 *)(a5 + 8) = *a2;
  *(_BYTE *)(a5 + 24) = v5;
  *(_QWORD *)(a5 + 32) = a3;
  *(_QWORD *)(a5 + 40) = a4;
  return result;
}

uint64_t sub_1A45F98B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45F98E8 + 4 * byte_1A46AB8D6[*v0]))(0x7374656B637562, 0xE700000000000000);
}

uint64_t sub_1A45F98E8()
{
  return 0x7265646E696D6572;
}

unint64_t sub_1A45F990C()
{
  return 0xD000000000000013;
}

unint64_t sub_1A45F9928()
{
  return 0xD000000000000016;
}

uint64_t sub_1A45F9948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A460DDCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A45F996C()
{
  sub_1A45FEDC0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45F9994()
{
  sub_1A45FEDC0();
  return sub_1A4691DC4();
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7232C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v17 = v1[2];
  v18 = v8;
  v22 = *((unsigned __int8 *)v1 + 24);
  v10 = v1[4];
  v15 = v1[5];
  v16 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FEDC0();
  sub_1A4691D40();
  v19 = v9;
  v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7232D8);
  sub_1A45FEE04();
  sub_1A4691890();
  if (!v2)
  {
    v12 = v15;
    v11 = v16;
    v19 = v18;
    v20 = v17;
    v21 = v22;
    v23 = 1;
    sub_1A45FCFFC();
    sub_1A4691848();
    v19 = v11;
    v23 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
    sub_1A449CE48();
    sub_1A4691890();
    v19 = v12;
    v23 = 3;
    sub_1A4691890();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7232F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FEDC0();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7232D8);
  v23 = 0;
  sub_1A45FEE80();
  sub_1A46917C4();
  v9 = v19;
  v23 = 1;
  sub_1A45FD040();
  swift_bridgeObjectRetain();
  sub_1A469177C();
  v16 = v20;
  v17 = v19;
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E10);
  v23 = 2;
  v18 = sub_1A4498364();
  sub_1A46917C4();
  v23 = 3;
  v15 = v19;
  swift_bridgeObjectRetain();
  sub_1A46917C4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = v17;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v12;
  v13 = v15;
  *(_QWORD *)(a2 + 16) = v16;
  *(_BYTE *)(a2 + 24) = v22;
  *(_QWORD *)(a2 + 32) = v13;
  *(_QWORD *)(a2 + 40) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45F9E94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.init(from:)(a1, a2);
}

uint64_t sub_1A45F9EA8(_QWORD *a1)
{
  return REMRemindersListDataView.CompletedDateBucketsModel.encode(to:)(a1);
}

__n128 static REMRemindersListDataView.fetchCompleted_ByDateBuckets(store:today:calendar:configuration:diffingAgainst:)@<Q0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  __n128 result;
  char v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  __n128 v26;
  char v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v11 = type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A46900B4();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v15 = &v13[*(int *)(v11 + 20)];
  v16 = sub_1A46902AC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a2, v16);
  sub_1A4497EE8(a3, (uint64_t)&v13[*(int *)(v11 + 24)], type metadata accessor for REMRemindersListDataView.FetchConfiguration);
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation()), sel_initWithFetchResultTokenToDiffAgainst_, a4);
  sub_1A4491D50(v17, (uint64_t)v13, &v25);

  sub_1A4497F2C((uint64_t)v13, type metadata accessor for REMRemindersListDataView.CompletedByDateBucketsInvocation.Parameters);
  if (!v5)
  {
    v19 = v27;
    v20 = v31;
    v21 = v32;
    result = v26;
    v22 = v28;
    v23 = v29;
    v24 = v30;
    *(_QWORD *)a5 = v25;
    *(__n128 *)(a5 + 8) = result;
    *(_BYTE *)(a5 + 24) = v19;
    *(_OWORD *)(a5 + 32) = v22;
    *(_OWORD *)(a5 + 48) = v23;
    *(_OWORD *)(a5 + 64) = v24;
    *(_QWORD *)(a5 + 80) = v20;
    *(_QWORD *)(a5 + 88) = v21;
  }
  return result;
}

uint64_t static REMRemindersListDataView.fetchRecentlyDeleted(store:accountID:deletedDaysFromNow:countCompleted:remindersPrefetch:diffingAgainst:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  objc_class *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  __int128 v59;
  char v60;
  char v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  objc_super v67;
  uint64_t v68;

  v57 = a3;
  v54 = a6;
  v52 = a5;
  v53 = a4;
  v46 = a2;
  v55 = a1;
  v45 = a7;
  v48 = sub_1A46900FC();
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters(0);
  MEMORY[0x1E0C80A78](v49);
  v10 = (_QWORD **)((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1A4690294();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1A46902AC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  MEMORY[0x1E0C80A78](v19);
  v68 = (uint64_t)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1A46900B4();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A46900A8();
  sub_1A469027C();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x1E0CB1130], v11);
  if (((unint64_t)v57 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v57 = v22;
    sub_1A4690264();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v24 = (objc_class *)type metadata accessor for REMObjectID_Codable();
    v25 = objc_allocWithZone(v24);
    v26 = v46;
    v27 = objc_msgSend(v26, sel_uuid);
    sub_1A46900F0();

    v28 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
    v29 = objc_msgSend(v26, sel_entityName);
    if (!v29)
    {
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v29 = (id)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    v67.receiver = v25;
    v67.super_class = v24;
    v30 = objc_msgSendSuper2(&v67, sel_initWithUUID_entityName_, v28, v29, v45);

    v31 = v49;
    v32 = v68;
    sub_1A452A364(v68, (uint64_t)v10 + *(int *)(v49 + 20));
    sub_1A4497EE8(v52, (uint64_t)v10 + *(int *)(v31 + 24), type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    *v10 = v30;
    *((_BYTE *)v10 + *(int *)(v31 + 28)) = v53 & 1;
    v33 = objc_allocWithZone((Class)type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation());
    v34 = objc_msgSend(v33, sel_initWithFetchResultTokenToDiffAgainst_, v54);
    v35 = v56;
    sub_1A4492A9C((uint64_t)v34, (uint64_t)v10, &v58);
    if (v35)
    {

      sub_1A4497F2C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters);
      sub_1A445404C(v32, &qword_1ED243190);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v57, v51);
    }
    else
    {

      sub_1A4497F2C((uint64_t)v10, type metadata accessor for REMRemindersListDataView.RecentlyDeletedInvocation.Parameters);
      sub_1A445404C(v32, &qword_1ED243190);
      result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v57, v51);
      v36 = v60;
      v37 = v61;
      v38 = v65;
      v39 = v66;
      v40 = v59;
      v41 = v62;
      v42 = v63;
      v43 = v64;
      v44 = v45;
      *v45 = v58;
      *(_OWORD *)(v44 + 1) = v40;
      *((_BYTE *)v44 + 24) = v36;
      *((_BYTE *)v44 + 25) = v37;
      *((_OWORD *)v44 + 2) = v41;
      *((_OWORD *)v44 + 3) = v42;
      *((_OWORD *)v44 + 4) = v43;
      v44[10] = v38;
      v44[11] = v39;
    }
  }
  return result;
}

uint64_t sub_1A45FA48C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A466B030(*a1, *a2);
}

uint64_t sub_1A45FA498()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45FA538()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45FA5B4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45FA650@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460DF9C();
  *a1 = result;
  return result;
}

void sub_1A45FA67C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE900000000000065;
  v5 = 0x7461447265746661;
  if (v2 != 1)
  {
    v5 = 0xD000000000000012;
    v4 = 0x80000001A46BCBC0;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1702060386;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A45FA6DC()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x7461447265746661;
  if (*v0 != 1)
    v1 = 0xD000000000000012;
  if (*v0)
    return v1;
  else
    return 1702060386;
}

uint64_t sub_1A45FA738@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460DF9C();
  *a1 = result;
  return result;
}

uint64_t sub_1A45FA75C()
{
  sub_1A45FCB34();
  return sub_1A4691DB8();
}

uint64_t sub_1A45FA784()
{
  sub_1A45FCB34();
  return sub_1A4691DC4();
}

void sub_1A45FA7AC(char *a1)
{
  sub_1A466AEFC(*a1);
}

void sub_1A45FA7B8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45FA7FC()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A45FA860()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45FA894()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A45FA8E4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45FA924()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45FA988@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460E0B4();
  *a1 = result;
  return result;
}

uint64_t sub_1A45FA9BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45FA9E4 + 4 * byte_1A46AB8E6[*v0]))();
}

void sub_1A45FA9E4(_QWORD *a1@<X8>)
{
  *a1 = 28271;
  a1[1] = 0xE200000000000000;
}

void sub_1A45FA9F4(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746661;
  a1[1] = 0xE500000000000000;
}

void sub_1A45FAA0C(_QWORD *a1@<X8>)
{
  *a1 = 0x73696C776F6C6C61;
  a1[1] = 0xE900000000000074;
}

uint64_t sub_1A45FAA2C()
{
  sub_1A460DFE4();
  return sub_1A4690B70();
}

uint64_t sub_1A45FAA88()
{
  sub_1A460DFE4();
  return sub_1A4690B34();
}

uint64_t sub_1A45FAAD4(char *a1, char *a2)
{
  return sub_1A466B400(*a1, *a2);
}

uint64_t sub_1A45FAAE0()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45FAB64()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A45FABC4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45FAC44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A45FACA0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1702060386;
  if (*v1)
    v2 = 0x6572694474726F73;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xED00006E6F697463;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A45FACE4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6572694474726F73;
  else
    return 1702060386;
}

uint64_t sub_1A45FAD24@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1A45FAD84()
{
  sub_1A45FC9E0();
  return sub_1A4691DB8();
}

uint64_t sub_1A45FADAC()
{
  sub_1A45FC9E0();
  return sub_1A4691DC4();
}

void sub_1A45FADD4(char *a1)
{
  sub_1A466B228(*a1);
}

void sub_1A45FADE0()
{
  char *v0;

  sub_1A463620C(*v0);
}

void sub_1A45FADE8()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45FAE24()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A45FAEB8(uint64_t a1)
{
  char *v1;

  sub_1A4637950(a1, *v1);
}

uint64_t sub_1A45FAEC0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460E028();
  *a1 = result;
  return result;
}

uint64_t sub_1A45FAEEC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45FAF1C + 4 * byte_1A46AB8F0[*v0]))();
}

void sub_1A45FAF1C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C61756E616DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1A45FAF34(_QWORD *a1@<X8>)
{
  *a1 = 0x4479616C70736964;
  a1[1] = 0xEB00000000657461;
}

void sub_1A45FAF58(_QWORD *a1@<X8>)
{
  *a1 = 0x797469726F697270;
  a1[1] = 0xE800000000000000;
}

void sub_1A45FAF74(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "creationDate");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1A45FAF98(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1A45FAFB0()
{
  sub_1A460A29C();
  return sub_1A4690B70();
}

uint64_t sub_1A45FB00C()
{
  sub_1A460A29C();
  return sub_1A4690B34();
}

void sub_1A45FB058(char *a1)
{
  sub_1A466ADB0(*a1);
}

void sub_1A45FB064()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45FB0A8()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A45FB118()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45FB14C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A45FB1A8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A4691C8C();
  __asm { BR              X9 }
}

uint64_t sub_1A45FB1E8()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A45FB258@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460E0B4();
  *a1 = result;
  return result;
}

uint64_t sub_1A45FB28C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45FB2B4 + 4 * byte_1A46AB902[*v0]))();
}

void sub_1A45FB2B4(_QWORD *a1@<X8>)
{
  *a1 = 0x746E756F63;
  a1[1] = 0xE500000000000000;
}

void sub_1A45FB2CC(_QWORD *a1@<X8>)
{
  *a1 = 0x7461446E69676562;
  a1[1] = 0xE900000000000065;
}

void sub_1A45FB2EC(_QWORD *a1@<X8>)
{
  *a1 = 0x65746144646E65;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1A45FB308()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A45FB330 + 4 * byte_1A46AB906[*v0]))(1702060386, 0xE400000000000000);
}

uint64_t sub_1A45FB330()
{
  return 0x746E756F63;
}

uint64_t sub_1A45FB344()
{
  return 0x7461446E69676562;
}

uint64_t sub_1A45FB360()
{
  return 0x65746144646E65;
}

uint64_t sub_1A45FB378@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460E0B4();
  *a1 = result;
  return result;
}

uint64_t sub_1A45FB3A4()
{
  sub_1A45FEEFC();
  return sub_1A4691DB8();
}

uint64_t sub_1A45FB3CC()
{
  sub_1A45FEEFC();
  return sub_1A4691DC4();
}

void sub_1A45FB3F4(char *a1)
{
  sub_1A466AC44(*a1);
}

void sub_1A45FB400()
{
  char *v0;

  sub_1A4636304(*v0);
}

void sub_1A45FB408()
{
  __asm { BR              X10 }
}

uint64_t sub_1A45FB43C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A45FB4A8(uint64_t a1)
{
  char *v1;

  sub_1A4637A44(a1, *v1);
}

uint64_t sub_1A45FB4B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A460E0B4();
  *a1 = result;
  return result;
}

uint64_t sub_1A45FB4E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45FB50C + 4 * byte_1A46AB90E[*v0]))();
}

void sub_1A45FB50C(_QWORD *a1@<X8>)
{
  *a1 = 0x6C616974696E69;
  a1[1] = 0xE700000000000000;
}

void sub_1A45FB528(_QWORD *a1@<X8>)
{
  *a1 = 0x4964657461647075;
  a1[1] = 0xEF6465747265736ELL;
}

void sub_1A45FB550(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001A46BCC40;
}

uint64_t sub_1A45FB570()
{
  sub_1A460E070();
  return sub_1A4690B70();
}

uint64_t sub_1A45FB5CC()
{
  sub_1A460E070();
  return sub_1A4690B34();
}

uint64_t REMRemindersListDataView.RemindersPrefetch.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD v21[5];
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  char v33;

  v27 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED2422A0);
  v3 = MEMORY[0x1E0C80A78](v24);
  v21[4] = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v25 = (char *)v21 - v5;
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v22);
  v23 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v26 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v21 - v10;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F718);
  MEMORY[0x1E0C80A78](v30);
  v12 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v21 - v16;
  v18 = a1[3];
  v31 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_1A45FEEFC();
  v19 = v32;
  sub_1A4691D28();
  if (!v19)
  {
    v21[2] = v15;
    v21[3] = v11;
    v32 = v17;
    v33 = 0;
    sub_1A45FEF40();
    sub_1A46917C4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
}

void sub_1A45FB8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t))(v1 + 8))(v0);
  v3 = *(_QWORD *)(v2 - 88);
  swift_storeEnumTagMultiPayload();
  sub_1A44683E0(v3, *(_QWORD *)(v2 - 128), type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  JUMPOUT(0x1A45FB870);
}

void sub_1A45FB9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;

  *(_BYTE *)(v6 - 67) = 1;
  v8 = sub_1A46917AC();
  if (!v3)
  {
    *(_QWORD *)(v6 - 200) = v8;
    *(_BYTE *)(v6 - 68) = 2;
    sub_1A4436344((unint64_t *)&unk_1ED243010, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v9 = v2;
    sub_1A46917C4();
    *(_BYTE *)(v6 - 69) = 3;
    sub_1A46917C4();
    v10 = a2;
    *(_QWORD *)(v6 - 208) = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v11 = *(_QWORD **)(v6 - 192);
    *v11 = *(_QWORD *)(v6 - 200);
    sub_1A4436344((unint64_t *)&qword_1ED243CF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v12 = *(_QWORD *)(v6 - 136);
    v13 = sub_1A469084C();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v10);
    if ((v13 & 1) != 0)
    {
      *(_QWORD *)(v6 - 104) = (char *)v11 + *(_QWORD *)(v6 - 208);
      v14 = *(_QWORD *)(v6 - 144);
      v15 = *(_QWORD *)(v6 - 152);
      v16 = v14 + *(int *)(v15 + 48);
      *(_QWORD *)(v6 - 200) = v16;
      v17 = *(_QWORD **)(v6 - 120);
      v18 = (void (*)(uint64_t, uint64_t, uint64_t))v17[4];
      v18(v14, *(_QWORD *)(v6 - 184), v9);
      v18(v16, v12, v9);
      v19 = *(_QWORD *)(v6 - 176);
      v20 = v19 + *(int *)(v15 + 48);
      v21 = (void (*)(uint64_t, uint64_t, uint64_t))v17[2];
      v21(v19, v14, v9);
      v22 = *(_QWORD *)(v6 - 200);
      v21(v20, v22, v9);
      v23 = *(_QWORD *)(v6 - 160);
      v18(v23, v19, v9);
      v24 = (void (*)(uint64_t, uint64_t))v17[1];
      v24(v20, v9);
      v25 = v19 + *(int *)(*(_QWORD *)(v6 - 152) + 48);
      v18(v19, *(_QWORD *)(v6 - 144), v9);
      v18(v25, v22, v9);
      v18(v23 + *(int *)(*(_QWORD *)(v6 - 168) + 36), v25, v9);
      v24(v19, v9);
      sub_1A45FEF84(v23, *(_QWORD *)(v6 - 104));
      v26 = *(_QWORD *)(v6 - 192);
      swift_storeEnumTagMultiPayload();
      sub_1A44683E0(v26, *(_QWORD *)(v6 - 88), type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
      JUMPOUT(0x1A45FB988);
    }
    __break(1u);
    JUMPOUT(0x1A45FBC1CLL);
  }
  JUMPOUT(0x1A45FB868);
}

void REMRemindersListDataView.RemindersPrefetch.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v2 = v1;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  MEMORY[0x1E0C80A78](v11);
  v12 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242A88);
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A45FEEFC();
  sub_1A4691D40();
  sub_1A4497EE8(v2, (uint64_t)v7, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  v9 = (char *)sub_1A45FBD88 + 4 * byte_1A46AB912[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A45FBD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v2 - 81) = 1;
  *(_BYTE *)(v2 - 82) = 0;
  sub_1A45FEFCC();
  v3 = *(_QWORD *)(v2 - 96);
  sub_1A4691890();
  if (!v3)
  {
    *(_BYTE *)(v2 - 83) = 1;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

uint64_t sub_1A45FBFCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return REMRemindersListDataView.RemindersPrefetch.init(from:)(a1, a2);
}

void sub_1A45FBFE0(_QWORD *a1)
{
  REMRemindersListDataView.RemindersPrefetch.encode(to:)(a1);
}

uint64_t type metadata accessor for REMRemindersListDataView.RemindersPrefetch(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED242BC8);
}

uint64_t type metadata accessor for REMRemindersListDataView.FetchConfiguration(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED242C70);
}

BOOL _s19ReminderKitInternal24REMRemindersListDataViewO11SectionLiteV0H4TypeO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  char v15;
  void *v16;
  void *v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v8 = (void *)*a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  if (!*(_QWORD *)a1)
  {
    if (!v8)
    {
      sub_1A454A610(0);
      v16 = 0;
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  if (!v8)
  {
LABEL_13:
    sub_1A454A5D8(*a2);
    sub_1A454A5D8((uint64_t)v2);
    sub_1A454A610(v2);
    v17 = v8;
LABEL_20:
    sub_1A454A610(v17);
    return 0;
  }
  sub_1A44E82AC();
  v22 = v11;
  sub_1A454A5D8((uint64_t)v8);
  sub_1A454A5D8((uint64_t)v2);
  v21 = v10;
  v12 = v7;
  v13 = v2;
  v20 = v9;
  v14 = v8;
  v15 = sub_1A4691140();

  if ((v15 & 1) == 0 || (v3 != v12 || v5 != v20) && (sub_1A4691A40() & 1) == 0)
  {
LABEL_19:
    sub_1A454A610(v2);
    v17 = v8;
    goto LABEL_20;
  }
  if (v6)
  {
    if (v22)
    {
      if (v4 == v21 && v6 == v22)
      {
        sub_1A454A610(v2);
        v16 = v8;
LABEL_16:
        sub_1A454A610(v16);
        return 1;
      }
      v19 = sub_1A4691A40();
      sub_1A454A610(v2);
      sub_1A454A610(v8);
      return (v19 & 1) != 0;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  sub_1A454A610(v2);
  sub_1A454A610(v8);
  if (v22)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO12SortingStyleO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)sub_1A45FC364 + 4 * byte_1A46AB916[*a1 >> 5]))();
}

BOOL sub_1A45FC364@<W0>(unsigned int a1@<W8>)
{
  int v1;

  return a1 < 0x20 && ((a1 ^ v1) & 1) == 0;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO13ShowCompletedO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v12 = sub_1A46900B4();
  MEMORY[0x1E0C80A78](v12);
  v4 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23EBE0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 + *(int *)(v7 + 48) - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4497EE8(a1, (uint64_t)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for REMRemindersListDataView.ShowCompleted);
  sub_1A4497EE8(a2, (uint64_t)v9, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  v10 = (char *)sub_1A45FC520 + 4 * byte_1A46AB91B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A45FC520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  sub_1A4497EE8(v0, v3, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(v1 + 8))(v3, *(_QWORD *)(v5 - 88));
    sub_1A445404C(v0, &qword_1ED23EBE0);
    v6 = 0;
  }
  else
  {
    v7 = *(_QWORD *)(v5 - 88);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v4, v7);
    v6 = sub_1A4690078();
    v8 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
    v8(v2, v7);
    v8(v3, v7);
    sub_1A4497F2C(v0, type metadata accessor for REMRemindersListDataView.ShowCompleted);
  }
  return v6 & 1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO21HashtagLabelPredicateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      sub_1A45FD638(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 0);
      sub_1A45FD638(v3, v2, 0);
      if ((sub_1A4464338(v3, v6) & 1) != 0)
      {
        v8 = sub_1A4464338(v2, v5);
        sub_1A4600490(v3, v2, 0);
        v9 = v6;
        v10 = v5;
        v11 = 0;
        goto LABEL_9;
      }
      sub_1A4600490(v3, v2, 0);
      v17 = v6;
      v18 = v5;
      v19 = 0;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v4 == 1)
  {
    if (v7 == 1)
    {
      sub_1A45FD638(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), 1u);
      sub_1A45FD638(v3, v2, 1u);
      if ((sub_1A4464338(v3, v6) & 1) != 0)
      {
        v8 = sub_1A4464338(v2, v5);
        sub_1A4600490(v3, v2, 1u);
        v9 = v6;
        v10 = v5;
        v11 = 1;
LABEL_9:
        sub_1A4600490(v9, v10, v11);
        return v8 & 1;
      }
      sub_1A4600490(v3, v2, 1u);
      v17 = v6;
      v18 = v5;
      v19 = 1;
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (!(v3 | v2))
  {
    if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_1A4600490(*(_QWORD *)a1, v2, 2u);
      sub_1A4600490(0, 0, 2u);
      return 1;
    }
    goto LABEL_24;
  }
  if (v7 != 2 || v6 != 1 || v5 != 0)
  {
LABEL_24:
    sub_1A45FD638(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_1A45FD638(v3, v2, v4);
    sub_1A4600490(v3, v2, v4);
    v17 = v6;
    v18 = v5;
    v19 = v7;
LABEL_25:
    sub_1A4600490(v17, v18, v19);
    return 0;
  }
  sub_1A4600490(*(_QWORD *)a1, v2, 2u);
  v15 = 1;
  sub_1A4600490(1, 0, 2u);
  return v15;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO4DiffV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a1[4];
  v6 = a2[1];
  v8 = a2[2];
  v7 = a2[3];
  v9 = a2[4];
  sub_1A4464060(*a1, *a2);
  if ((v10 & 1) != 0
    && (sub_1A4464060(v2, v6), (v11 & 1) != 0)
    && (sub_1A4464060(v4, v8), (v12 & 1) != 0)
    && (sub_1A4464060(v3, v7), (v13 & 1) != 0))
  {
    return sub_1A4464338(v5, v9);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1A45FC94C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A45FC96C + 4 * byte_1A46AB91F[*v0 >> 5]))();
}

uint64_t sub_1A45FC96C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
    v1 = MEMORY[0x1E0D84A50];
  else
    v1 = MEMORY[0x1E0D84A58];
  return *(_QWORD *)v1;
}

unint64_t sub_1A45FC9E0()
{
  unint64_t result;

  result = qword_1ED242AB0;
  if (!qword_1ED242AB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1DE0, &type metadata for REMRemindersListDataView.SortingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AB0);
  }
  return result;
}

unint64_t sub_1A45FCA24()
{
  unint64_t result;

  result = qword_1ED23F570;
  if (!qword_1ED23F570)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1DB8, &type metadata for REMRemindersListDataView.SortingStyle.Base);
    atomic_store(result, (unint64_t *)&qword_1ED23F570);
  }
  return result;
}

unint64_t sub_1A45FCA68()
{
  unint64_t result;

  result = qword_1ED23F5A8;
  if (!qword_1ED23F5A8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingDirection, &type metadata for REMRemindersListDataView.SortingDirection);
    atomic_store(result, (unint64_t *)&qword_1ED23F5A8);
  }
  return result;
}

unint64_t sub_1A45FCAAC()
{
  unint64_t result;

  result = qword_1ED240A98;
  if (!qword_1ED240A98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1D90, &type metadata for REMRemindersListDataView.SortingStyle.Base);
    atomic_store(result, (unint64_t *)&qword_1ED240A98);
  }
  return result;
}

unint64_t sub_1A45FCAF0()
{
  unint64_t result;

  result = qword_1ED23F020;
  if (!qword_1ED23F020)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingDirection, &type metadata for REMRemindersListDataView.SortingDirection);
    atomic_store(result, (unint64_t *)&qword_1ED23F020);
  }
  return result;
}

unint64_t sub_1A45FCB34()
{
  unint64_t result;

  result = qword_1ED242AD8;
  if (!qword_1ED242AD8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1D40, &type metadata for REMRemindersListDataView.ShowCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AD8);
  }
  return result;
}

unint64_t sub_1A45FCB78()
{
  unint64_t result;

  result = qword_1ED23F590;
  if (!qword_1ED23F590)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1D18, &type metadata for REMRemindersListDataView.ShowCompleted.Base);
    atomic_store(result, (unint64_t *)&qword_1ED23F590);
  }
  return result;
}

unint64_t sub_1A45FCBBC()
{
  unint64_t result;

  result = qword_1ED240AC8;
  if (!qword_1ED240AC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1CF0, &type metadata for REMRemindersListDataView.ShowCompleted.Base);
    atomic_store(result, (unint64_t *)&qword_1ED240AC8);
  }
  return result;
}

unint64_t sub_1A45FCC00()
{
  unint64_t result;

  result = qword_1ED240BA0;
  if (!qword_1ED240BA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1CA0, &type metadata for REMRemindersListDataView.FetchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240BA0);
  }
  return result;
}

unint64_t sub_1A45FCC44()
{
  unint64_t result;

  result = qword_1ED240AA0;
  if (!qword_1ED240AA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingStyle, &type metadata for REMRemindersListDataView.SortingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED240AA0);
  }
  return result;
}

unint64_t sub_1A45FCC88()
{
  unint64_t result;

  result = qword_1ED240AA8;
  if (!qword_1ED240AA8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.FetchSubtasks, &type metadata for REMRemindersListDataView.FetchSubtasks);
    atomic_store(result, (unint64_t *)&qword_1ED240AA8);
  }
  return result;
}

unint64_t sub_1A45FCCCC()
{
  unint64_t result;

  result = qword_1ED23F578;
  if (!qword_1ED23F578)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingStyle, &type metadata for REMRemindersListDataView.SortingStyle);
    atomic_store(result, (unint64_t *)&qword_1ED23F578);
  }
  return result;
}

unint64_t sub_1A45FCD10()
{
  unint64_t result;

  result = qword_1ED23F580;
  if (!qword_1ED23F580)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.FetchSubtasks, &type metadata for REMRemindersListDataView.FetchSubtasks);
    atomic_store(result, (unint64_t *)&qword_1ED23F580);
  }
  return result;
}

unint64_t sub_1A45FCD54()
{
  unint64_t result;

  result = qword_1EE722ED8;
  if (!qword_1EE722ED8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1C50, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722ED8);
  }
  return result;
}

unint64_t sub_1A45FCD98()
{
  unint64_t result;

  result = qword_1EE722EE0;
  if (!qword_1EE722EE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1C00, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722EE0);
  }
  return result;
}

unint64_t sub_1A45FCDDC()
{
  unint64_t result;

  result = qword_1EE722EE8;
  if (!qword_1EE722EE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1BB0, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722EE8);
  }
  return result;
}

unint64_t sub_1A45FCE20()
{
  unint64_t result;

  result = qword_1EE722EF0;
  if (!qword_1EE722EF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1B60, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722EF0);
  }
  return result;
}

unint64_t sub_1A45FCE64()
{
  unint64_t result;

  result = qword_1EE722EF8;
  if (!qword_1EE722EF8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1B10, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722EF8);
  }
  return result;
}

unint64_t sub_1A45FCEA8()
{
  unint64_t result;

  result = qword_1ED242A90;
  if (!qword_1ED242A90)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1AC0, &type metadata for REMRemindersListDataView.ReminderLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242A90);
  }
  return result;
}

unint64_t sub_1A45FCEEC()
{
  unint64_t result;

  result = qword_1ED23F558;
  if (!qword_1ED23F558)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ReminderLite, &type metadata for REMRemindersListDataView.ReminderLite);
    atomic_store(result, (unint64_t *)&qword_1ED23F558);
  }
  return result;
}

unint64_t sub_1A45FCF30()
{
  unint64_t result;

  result = qword_1ED242AA8;
  if (!qword_1ED242AA8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ReminderLite, &type metadata for REMRemindersListDataView.ReminderLite);
    atomic_store(result, (unint64_t *)&qword_1ED242AA8);
  }
  return result;
}

unint64_t sub_1A45FCF74()
{
  unint64_t result;

  result = qword_1ED23F3F8;
  if (!qword_1ED23F3F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1A70, &type metadata for REMRemindersListDataView.CountByCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23F3F8);
  }
  return result;
}

unint64_t sub_1A45FCFB8()
{
  unint64_t result;

  result = qword_1ED242D30;
  if (!qword_1ED242D30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1A20, &type metadata for REMRemindersListDataView.FlatModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242D30);
  }
  return result;
}

unint64_t sub_1A45FCFFC()
{
  unint64_t result;

  result = qword_1ED23F5A0;
  if (!qword_1ED23F5A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.CountByCompleted, &type metadata for REMRemindersListDataView.CountByCompleted);
    atomic_store(result, (unint64_t *)&qword_1ED23F5A0);
  }
  return result;
}

unint64_t sub_1A45FD040()
{
  unint64_t result;

  result = qword_1ED242B90;
  if (!qword_1ED242B90)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.CountByCompleted, &type metadata for REMRemindersListDataView.CountByCompleted);
    atomic_store(result, (unint64_t *)&qword_1ED242B90);
  }
  return result;
}

unint64_t sub_1A45FD084()
{
  unint64_t result;

  result = qword_1ED241648;
  if (!qword_1ED241648)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B19D0, &type metadata for REMRemindersListDataView.ListsModel.Sublist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241648);
  }
  return result;
}

unint64_t sub_1A45FD0C8()
{
  unint64_t result;

  result = qword_1ED241630;
  if (!qword_1ED241630)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1980, &type metadata for REMRemindersListDataView.ListsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241630);
  }
  return result;
}

unint64_t sub_1A45FD10C()
{
  unint64_t result;

  result = qword_1ED23FC00;
  if (!qword_1ED23FC00)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsModel.Sublist, &type metadata for REMRemindersListDataView.ListsModel.Sublist);
    atomic_store(result, (unint64_t *)&qword_1ED23FC00);
  }
  return result;
}

unint64_t sub_1A45FD150()
{
  unint64_t result;

  result = qword_1ED23FBA0;
  if (!qword_1ED23FBA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsModel.Sublist, &type metadata for REMRemindersListDataView.ListsModel.Sublist);
    atomic_store(result, (unint64_t *)&qword_1ED23FBA0);
  }
  return result;
}

unint64_t sub_1A45FD194()
{
  unint64_t result;

  result = qword_1ED240A80;
  if (!qword_1ED240A80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1930, &type metadata for REMRemindersListDataView.FlaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A80);
  }
  return result;
}

unint64_t sub_1A45FD1D8()
{
  unint64_t result;

  result = qword_1ED23F670;
  if (!qword_1ED23F670)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.FlatModel, &type metadata for REMRemindersListDataView.FlatModel);
    atomic_store(result, (unint64_t *)&qword_1ED23F670);
  }
  return result;
}

unint64_t sub_1A45FD21C()
{
  unint64_t result;

  result = qword_1ED240CE8;
  if (!qword_1ED240CE8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.FlatModel, &type metadata for REMRemindersListDataView.FlatModel);
    atomic_store(result, (unint64_t *)&qword_1ED240CE8);
  }
  return result;
}

unint64_t sub_1A45FD260()
{
  unint64_t result;

  result = qword_1EE722F30;
  if (!qword_1EE722F30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B18E0, &type metadata for REMRemindersListDataView.AssignedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722F30);
  }
  return result;
}

unint64_t sub_1A45FD2A4()
{
  unint64_t result;

  result = qword_1EE722F38;
  if (!qword_1EE722F38)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsModel, &type metadata for REMRemindersListDataView.ListsModel);
    atomic_store(result, (unint64_t *)&qword_1EE722F38);
  }
  return result;
}

unint64_t sub_1A45FD2E8()
{
  unint64_t result;

  result = qword_1EE722F48;
  if (!qword_1EE722F48)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsModel, &type metadata for REMRemindersListDataView.ListsModel);
    atomic_store(result, (unint64_t *)&qword_1EE722F48);
  }
  return result;
}

unint64_t sub_1A45FD32C()
{
  unint64_t result;

  result = qword_1EE722F58;
  if (!qword_1EE722F58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1890, &type metadata for REMRemindersListDataView.TaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722F58);
  }
  return result;
}

unint64_t sub_1A45FD370()
{
  unint64_t result;

  result = qword_1EE722F60;
  if (!qword_1EE722F60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMManualOrdering.ManualOrderingID, &type metadata for REMManualOrdering.ManualOrderingID);
    atomic_store(result, (unint64_t *)&qword_1EE722F60);
  }
  return result;
}

unint64_t sub_1A45FD3B4()
{
  unint64_t result;

  result = qword_1EE722F70;
  if (!qword_1EE722F70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMManualOrdering.ManualOrderingID, &type metadata for REMManualOrdering.ManualOrderingID);
    atomic_store(result, (unint64_t *)&qword_1EE722F70);
  }
  return result;
}

unint64_t sub_1A45FD3F8()
{
  unint64_t result;

  result = qword_1EE722F80;
  if (!qword_1EE722F80)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1840, &type metadata for REMRemindersListDataView.TemplateModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722F80);
  }
  return result;
}

unint64_t sub_1A45FD43C()
{
  unint64_t result;

  result = qword_1EE722FA8;
  if (!qword_1EE722FA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B17F0, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722FA8);
  }
  return result;
}

unint64_t sub_1A45FD480()
{
  unint64_t result;

  result = qword_1EE722FB0;
  if (!qword_1EE722FB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B17A0, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722FB0);
  }
  return result;
}

unint64_t sub_1A45FD4C4()
{
  unint64_t result;

  result = qword_1EE722FB8;
  if (!qword_1EE722FB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1750, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722FB8);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED23F7E0);
}

unint64_t sub_1A45FD51C()
{
  unint64_t result;

  result = qword_1EE722FE0;
  if (!qword_1EE722FE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1700, &type metadata for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE722FE0);
  }
  return result;
}

unint64_t sub_1A45FD560()
{
  unint64_t result;

  result = qword_1EE722FE8;
  if (!qword_1EE722FE8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE722FE8);
  }
  return result;
}

unint64_t sub_1A45FD5A4()
{
  unint64_t result;

  result = qword_1EE722FF8;
  if (!qword_1EE722FF8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE722FF8);
  }
  return result;
}

unint64_t sub_1A45FD5E8()
{
  unint64_t result;

  result = qword_1ED242D10;
  if (!qword_1ED242D10)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B16B0, &type metadata for REMRemindersListDataView.Diff.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242D10);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for REMRemindersListDataView.Result);
}

uint64_t sub_1A45FD638(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

_QWORD *sub_1A45FD66C(_QWORD *a1)
{
  void *v2;
  void *v4;
  void *v5;

  v2 = (void *)a1[9];
  v4 = (void *)a1[10];
  v5 = (void *)a1[19];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1A4496404(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return a1;
}

unint64_t sub_1A45FD758()
{
  unint64_t result;

  result = qword_1ED240A28;
  if (!qword_1ED240A28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1660, &type metadata for REMRemindersListDataView.SectionLite.SectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A28);
  }
  return result;
}

unint64_t sub_1A45FD79C()
{
  unint64_t result;

  result = qword_1ED240A50;
  if (!qword_1ED240A50)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1610, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A50);
  }
  return result;
}

unint64_t sub_1A45FD7E0()
{
  unint64_t result;

  result = qword_1EE723000;
  if (!qword_1EE723000)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B15C0, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723000);
  }
  return result;
}

unint64_t sub_1A45FD824()
{
  unint64_t result;

  result = qword_1ED240A68;
  if (!qword_1ED240A68)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1570, &type metadata for REMRemindersListDataView.SectionLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A68);
  }
  return result;
}

unint64_t sub_1A45FD868()
{
  unint64_t result;

  result = qword_1ED23F560;
  if (!qword_1ED23F560)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SectionLite.SectionType, &type metadata for REMRemindersListDataView.SectionLite.SectionType);
    atomic_store(result, (unint64_t *)&qword_1ED23F560);
  }
  return result;
}

unint64_t sub_1A45FD8AC()
{
  unint64_t result;

  result = qword_1ED23F008;
  if (!qword_1ED23F008)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SectionLite.SectionType, &type metadata for REMRemindersListDataView.SectionLite.SectionType);
    atomic_store(result, (unint64_t *)&qword_1ED23F008);
  }
  return result;
}

unint64_t sub_1A45FD8F0()
{
  unint64_t result;

  result = qword_1ED240AB0;
  if (!qword_1ED240AB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1520, &type metadata for REMRemindersListDataView.SectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240AB0);
  }
  return result;
}

unint64_t sub_1A45FD934()
{
  unint64_t result;

  result = qword_1ED23F568;
  if (!qword_1ED23F568)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SectionLite, &type metadata for REMRemindersListDataView.SectionLite);
    atomic_store(result, (unint64_t *)&qword_1ED23F568);
  }
  return result;
}

unint64_t sub_1A45FD978()
{
  unint64_t result;

  result = qword_1ED23F010;
  if (!qword_1ED23F010)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SectionLite, &type metadata for REMRemindersListDataView.SectionLite);
    atomic_store(result, (unint64_t *)&qword_1ED23F010);
  }
  return result;
}

unint64_t sub_1A45FD9BC()
{
  unint64_t result;

  result = qword_1ED240968;
  if (!qword_1ED240968)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B14D0, &type metadata for REMRemindersListDataView.ListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240968);
  }
  return result;
}

unint64_t sub_1A45FDA00()
{
  unint64_t result;

  result = qword_1ED23F588;
  if (!qword_1ED23F588)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SectionsModel, &type metadata for REMRemindersListDataView.SectionsModel);
    atomic_store(result, (unint64_t *)&qword_1ED23F588);
  }
  return result;
}

unint64_t sub_1A45FDA44()
{
  unint64_t result;

  result = qword_1ED23F018;
  if (!qword_1ED23F018)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SectionsModel, &type metadata for REMRemindersListDataView.SectionsModel);
    atomic_store(result, (unint64_t *)&qword_1ED23F018);
  }
  return result;
}

unint64_t sub_1A45FDA88()
{
  unint64_t result;

  result = qword_1EE723010;
  if (!qword_1EE723010)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1480, &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723010);
  }
  return result;
}

unint64_t sub_1A45FDACC()
{
  unint64_t result;

  result = qword_1EE723028;
  if (!qword_1EE723028)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1430, &type metadata for REMRemindersListDataView.TemplateSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723028);
  }
  return result;
}

unint64_t sub_1A45FDB10()
{
  unint64_t result;

  result = qword_1EE723058;
  if (!qword_1EE723058)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B13E0, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723058);
  }
  return result;
}

unint64_t sub_1A45FDB54()
{
  unint64_t result;

  result = qword_1EE723060;
  if (!qword_1EE723060)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1390, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723060);
  }
  return result;
}

unint64_t sub_1A45FDB98()
{
  unint64_t result;

  result = qword_1EE723068;
  if (!qword_1EE723068)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1340, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723068);
  }
  return result;
}

unint64_t sub_1A45FDBDC()
{
  unint64_t result;

  result = qword_1EE723070;
  if (!qword_1EE723070)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B12F0, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723070);
  }
  return result;
}

unint64_t sub_1A45FDC20()
{
  unint64_t result;

  result = qword_1ED241450;
  if (!qword_1ED241450)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B12A0, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241450);
  }
  return result;
}

unint64_t sub_1A45FDC64()
{
  unint64_t result;

  result = qword_1EE723098;
  if (!qword_1EE723098)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel.List.ListType, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType);
    atomic_store(result, (unint64_t *)&qword_1EE723098);
  }
  return result;
}

unint64_t sub_1A45FDCA8()
{
  unint64_t result;

  result = qword_1EE7230A0;
  if (!qword_1EE7230A0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel.List.ListType, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType);
    atomic_store(result, (unint64_t *)&qword_1EE7230A0);
  }
  return result;
}

unint64_t sub_1A45FDCEC()
{
  unint64_t result;

  result = qword_1ED241468;
  if (!qword_1ED241468)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1250, &type metadata for REMRemindersListDataView.ListsSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241468);
  }
  return result;
}

unint64_t sub_1A45FDD30()
{
  unint64_t result;

  result = qword_1ED23F9F0;
  if (!qword_1ED23F9F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel.List, &type metadata for REMRemindersListDataView.ListsSectionsModel.List);
    atomic_store(result, (unint64_t *)&qword_1ED23F9F0);
  }
  return result;
}

unint64_t sub_1A45FDD74()
{
  unint64_t result;

  result = qword_1ED23F918;
  if (!qword_1ED23F918)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel.List, &type metadata for REMRemindersListDataView.ListsSectionsModel.List);
    atomic_store(result, (unint64_t *)&qword_1ED23F918);
  }
  return result;
}

unint64_t sub_1A45FDDB8()
{
  unint64_t result;

  result = qword_1EE7230B0;
  if (!qword_1EE7230B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1200, &type metadata for REMRemindersListDataView.GroupSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7230B0);
  }
  return result;
}

unint64_t sub_1A45FDDFC()
{
  unint64_t result;

  result = qword_1EE7230B8;
  if (!qword_1EE7230B8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel, &type metadata for REMRemindersListDataView.ListsSectionsModel);
    atomic_store(result, (unint64_t *)&qword_1EE7230B8);
  }
  return result;
}

unint64_t sub_1A45FDE40()
{
  unint64_t result;

  result = qword_1EE7230C8;
  if (!qword_1EE7230C8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel, &type metadata for REMRemindersListDataView.ListsSectionsModel);
    atomic_store(result, (unint64_t *)&qword_1EE7230C8);
  }
  return result;
}

unint64_t sub_1A45FDE84()
{
  unint64_t result;

  result = qword_1ED240598;
  if (!qword_1ED240598)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B11B0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240598);
  }
  return result;
}

unint64_t sub_1A45FDEC8()
{
  unint64_t result;

  result = qword_1ED241930;
  if (!qword_1ED241930)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1160, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241930);
  }
  return result;
}

unint64_t sub_1A45FDF0C()
{
  unint64_t result;

  result = qword_1EE7230D0;
  if (!qword_1EE7230D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1110, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7230D0);
  }
  return result;
}

unint64_t sub_1A45FDF50()
{
  unint64_t result;

  result = qword_1ED2405D8;
  if (!qword_1ED2405D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B10C0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405D8);
  }
  return result;
}

unint64_t sub_1A45FDF94()
{
  unint64_t result;

  result = qword_1ED2405F0;
  if (!qword_1ED2405F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1070, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405F0);
  }
  return result;
}

unint64_t sub_1A45FDFD8()
{
  unint64_t result;

  result = qword_1ED2405C0;
  if (!qword_1ED2405C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B1020, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405C0);
  }
  return result;
}

unint64_t sub_1A45FE01C()
{
  unint64_t result;

  result = qword_1ED240580;
  if (!qword_1ED240580)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0FD0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240580);
  }
  return result;
}

unint64_t sub_1A45FE060()
{
  unint64_t result;

  result = qword_1ED240558;
  if (!qword_1ED240558)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0F80, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240558);
  }
  return result;
}

unint64_t sub_1A45FE0A4()
{
  unint64_t result;

  result = qword_1EE7230D8;
  if (!qword_1EE7230D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0F30, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7230D8);
  }
  return result;
}

unint64_t sub_1A45FE0E8()
{
  unint64_t result;

  result = qword_1ED240608;
  if (!qword_1ED240608)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0EE0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240608);
  }
  return result;
}

unint64_t sub_1A45FE12C()
{
  unint64_t result;

  result = qword_1ED23F3E8;
  if (!qword_1ED23F3E8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodayGroupModel.Group.GroupType, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType);
    atomic_store(result, (unint64_t *)&qword_1ED23F3E8);
  }
  return result;
}

unint64_t sub_1A45FE170()
{
  unint64_t result;

  result = qword_1ED23EC70;
  if (!qword_1ED23EC70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodayGroupModel.Group.GroupType, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType);
    atomic_store(result, (unint64_t *)&qword_1ED23EC70);
  }
  return result;
}

unint64_t sub_1A45FE1B4()
{
  unint64_t result;

  result = qword_1ED240AD8;
  if (!qword_1ED240AD8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0E90, &type metadata for REMRemindersListDataView.TodayGroupModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240AD8);
  }
  return result;
}

unint64_t sub_1A45FE1F8()
{
  unint64_t result;

  result = qword_1ED23F3F0;
  if (!qword_1ED23F3F0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodayGroupModel.Group, &type metadata for REMRemindersListDataView.TodayGroupModel.Group);
    atomic_store(result, (unint64_t *)&qword_1ED23F3F0);
  }
  return result;
}

unint64_t sub_1A45FE23C()
{
  unint64_t result;

  result = qword_1ED23EC78;
  if (!qword_1ED23EC78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodayGroupModel.Group, &type metadata for REMRemindersListDataView.TodayGroupModel.Group);
    atomic_store(result, (unint64_t *)&qword_1ED23EC78);
  }
  return result;
}

unint64_t sub_1A45FE280()
{
  unint64_t result;

  result = qword_1EE7230E8;
  if (!qword_1EE7230E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0E40, &type metadata for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7230E8);
  }
  return result;
}

unint64_t sub_1A45FE2C4()
{
  unint64_t result;

  result = qword_1EE7230F8;
  if (!qword_1EE7230F8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSmartListSection.PredefinedSectionType.Today, &type metadata for REMSmartListSection.PredefinedSectionType.Today);
    atomic_store(result, (unint64_t *)&qword_1EE7230F8);
  }
  return result;
}

unint64_t sub_1A45FE308()
{
  unint64_t result;

  result = qword_1EE723110;
  if (!qword_1EE723110)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSmartListSection.PredefinedSectionType.Today, &type metadata for REMSmartListSection.PredefinedSectionType.Today);
    atomic_store(result, (unint64_t *)&qword_1EE723110);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.DatesModel.Group(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE7233B0);
}

unint64_t sub_1A45FE360()
{
  unint64_t result;

  result = qword_1EE723120;
  if (!qword_1EE723120)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0DF0, &type metadata for REMRemindersListDataView.DatesModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723120);
  }
  return result;
}

unint64_t sub_1A45FE3A4()
{
  unint64_t result;

  result = qword_1EE723138;
  if (!qword_1EE723138)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0DA0, &type metadata for REMRemindersListDataView.DatesModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723138);
  }
  return result;
}

unint64_t sub_1A45FE3E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE723148;
  if (!qword_1EE723148)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE723140);
    v2 = sub_1A4436344(&qword_1EE723150, type metadata accessor for REMRemindersListDataView.DatesModel.Group, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.DatesModel.Group);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE723148);
  }
  return result;
}

unint64_t sub_1A45FE464()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE723160;
  if (!qword_1EE723160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE723140);
    v2 = sub_1A4436344(&qword_1EE723168, type metadata accessor for REMRemindersListDataView.DatesModel.Group, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.DatesModel.Group);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE723160);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED241170);
}

unint64_t sub_1A45FE4F4()
{
  unint64_t result;

  result = qword_1ED241158;
  if (!qword_1ED241158)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0D50, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241158);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1ED241280);
}

unint64_t sub_1A45FE54C()
{
  unint64_t result;

  result = qword_1ED241200;
  if (!qword_1ED241200)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0D00, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241200);
  }
  return result;
}

unint64_t sub_1A45FE590()
{
  unint64_t result;

  result = qword_1EE723170;
  if (!qword_1EE723170)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0CB0, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723170);
  }
  return result;
}

unint64_t sub_1A45FE5D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED23F980;
  if (!qword_1ED23F980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED241418);
    v2 = sub_1A4436344(&qword_1ED23F968, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED23F980);
  }
  return result;
}

unint64_t sub_1A45FE650()
{
  unint64_t result;

  result = qword_1ED241240;
  if (!qword_1ED241240)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0C60, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241240);
  }
  return result;
}

unint64_t sub_1A45FE694()
{
  unint64_t result;

  result = qword_1ED241218;
  if (!qword_1ED241218)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0C10, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241218);
  }
  return result;
}

unint64_t sub_1A45FE6D8()
{
  unint64_t result;

  result = qword_1EE723178;
  if (!qword_1EE723178)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0BC0, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723178);
  }
  return result;
}

unint64_t sub_1A45FE71C()
{
  unint64_t result;

  result = qword_1ED241258;
  if (!qword_1ED241258)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0B70, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241258);
  }
  return result;
}

unint64_t sub_1A45FE760()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED23F8A8;
  if (!qword_1ED23F8A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED241418);
    v2 = sub_1A4436344(&qword_1ED23F880, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledDateBucketsModel.Day);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED23F8A8);
  }
  return result;
}

unint64_t sub_1A45FE7DC()
{
  unint64_t result;

  result = qword_1ED241140;
  if (!qword_1ED241140)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0B20, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241140);
  }
  return result;
}

unint64_t sub_1A45FE820()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED23F988;
  if (!qword_1ED23F988)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED241420);
    v2 = sub_1A4436344(&qword_1ED23F970, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED23F988);
  }
  return result;
}

unint64_t sub_1A45FE89C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED23F8B0;
  if (!qword_1ED23F8B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED241420);
    v2 = sub_1A4436344(&qword_1ED23F888, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED23F8B0);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup(uint64_t a1)
{
  return sub_1A4468368(a1, (uint64_t *)&unk_1EE723460);
}

unint64_t sub_1A45FE92C()
{
  unint64_t result;

  result = qword_1EE723198;
  if (!qword_1EE723198)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0AD0, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723198);
  }
  return result;
}

unint64_t sub_1A45FE970()
{
  unint64_t result;

  result = qword_1EE7231A8;
  if (!qword_1EE7231A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0A80, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7231A8);
  }
  return result;
}

unint64_t sub_1A45FE9B4()
{
  unint64_t result;

  result = qword_1EE7231B0;
  if (!qword_1EE7231B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0A30, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7231B0);
  }
  return result;
}

unint64_t sub_1A45FE9F8()
{
  unint64_t result;

  result = qword_1ED241328;
  if (!qword_1ED241328)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B09E0, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241328);
  }
  return result;
}

unint64_t sub_1A45FEA3C()
{
  unint64_t result;

  result = qword_1EE7231D0;
  if (!qword_1EE7231D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0990, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7231D0);
  }
  return result;
}

unint64_t sub_1A45FEA80()
{
  unint64_t result;

  result = qword_1ED241350;
  if (!qword_1ED241350)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0940, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241350);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE7234C8);
}

unint64_t sub_1A45FEAD8()
{
  unint64_t result;

  result = qword_1EE7231E0;
  if (!qword_1EE7231E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B08F0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7231E0);
  }
  return result;
}

uint64_t type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1)
{
  return sub_1A4468368(a1, qword_1EE723570);
}

unint64_t sub_1A45FEB30()
{
  unint64_t result;

  result = qword_1EE723220;
  if (!qword_1EE723220)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B08A0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723220);
  }
  return result;
}

unint64_t sub_1A45FEB74()
{
  unint64_t result;

  result = qword_1EE723230;
  if (!qword_1EE723230)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0850, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723230);
  }
  return result;
}

unint64_t sub_1A45FEBB8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE723248;
  if (!qword_1EE723248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE723240);
    v2 = sub_1A4436344(&qword_1EE723250, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE723248);
  }
  return result;
}

unint64_t sub_1A45FEC34()
{
  unint64_t result;

  result = qword_1EE723260;
  if (!qword_1EE723260)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0800, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723260);
  }
  return result;
}

unint64_t sub_1A45FEC78()
{
  unint64_t result;

  result = qword_1EE723268;
  if (!qword_1EE723268)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B07B0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723268);
  }
  return result;
}

unint64_t sub_1A45FECBC()
{
  unint64_t result;

  result = qword_1EE723270;
  if (!qword_1EE723270)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0760, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723270);
  }
  return result;
}

unint64_t sub_1A45FED00()
{
  unint64_t result;

  result = qword_1EE723278;
  if (!qword_1EE723278)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0710, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723278);
  }
  return result;
}

unint64_t sub_1A45FED44()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE7232B8;
  if (!qword_1EE7232B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE723240);
    v2 = sub_1A4436344(&qword_1EE7232C0, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CompletedDateBucketsModel.Day);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE7232B8);
  }
  return result;
}

unint64_t sub_1A45FEDC0()
{
  unint64_t result;

  result = qword_1EE7232D0;
  if (!qword_1EE7232D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B06C0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7232D0);
  }
  return result;
}

unint64_t sub_1A45FEE04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE7232E0;
  if (!qword_1EE7232E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7232D8);
    v2 = sub_1A4436344(&qword_1EE7232E8, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF10], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE7232E0);
  }
  return result;
}

unint64_t sub_1A45FEE80()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE7232F8;
  if (!qword_1EE7232F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7232D8);
    v2 = sub_1A4436344(&qword_1EE723300, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket, (uint64_t)&protocol conformance descriptor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE7232F8);
  }
  return result;
}

unint64_t sub_1A45FEEFC()
{
  unint64_t result;

  result = qword_1ED242B98;
  if (!qword_1ED242B98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0670, &type metadata for REMRemindersListDataView.RemindersPrefetch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242B98);
  }
  return result;
}

unint64_t sub_1A45FEF40()
{
  unint64_t result;

  result = qword_1ED23F5B0;
  if (!qword_1ED23F5B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0648, &type metadata for REMRemindersListDataView.RemindersPrefetch.Base);
    atomic_store(result, (unint64_t *)&qword_1ED23F5B0);
  }
  return result;
}

uint64_t sub_1A45FEF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A45FEFCC()
{
  unint64_t result;

  result = qword_1ED242BB0;
  if (!qword_1ED242BB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0620, &type metadata for REMRemindersListDataView.RemindersPrefetch.Base);
    atomic_store(result, (unint64_t *)&qword_1ED242BB0);
  }
  return result;
}

unint64_t sub_1A45FF014()
{
  unint64_t result;

  result = qword_1EE723308;
  if (!qword_1EE723308)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingDirection, &type metadata for REMRemindersListDataView.SortingDirection);
    atomic_store(result, (unint64_t *)&qword_1EE723308);
  }
  return result;
}

unint64_t sub_1A45FF05C()
{
  unint64_t result;

  result = qword_1EE723310;
  if (!qword_1EE723310)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingStyle, &type metadata for REMRemindersListDataView.SortingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE723310);
  }
  return result;
}

unint64_t sub_1A45FF0A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE723318;
  if (!qword_1EE723318)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE723320);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE723318);
  }
  return result;
}

unint64_t sub_1A45FF0F4()
{
  unint64_t result;

  result = qword_1EE723328;
  if (!qword_1EE723328)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.FetchSubtasks, &type metadata for REMRemindersListDataView.FetchSubtasks);
    atomic_store(result, (unint64_t *)&qword_1EE723328);
  }
  return result;
}

unint64_t sub_1A45FF13C()
{
  unint64_t result;

  result = qword_1EE723330;
  if (!qword_1EE723330)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle);
    atomic_store(result, (unint64_t *)&qword_1EE723330);
  }
  return result;
}

unint64_t sub_1A45FF184()
{
  unint64_t result;

  result = qword_1EE723338;
  if (!qword_1EE723338)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ListsSectionsModel.List.ListType, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType);
    atomic_store(result, (unint64_t *)&qword_1EE723338);
  }
  return result;
}

unint64_t sub_1A45FF1CC()
{
  unint64_t result;

  result = qword_1EE723340;
  if (!qword_1EE723340)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.TodayGroupModel.Group.GroupType, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType);
    atomic_store(result, (unint64_t *)&qword_1EE723340);
  }
  return result;
}

unint64_t sub_1A45FF214()
{
  unint64_t result;

  result = qword_1EE723348;
  if (!qword_1EE723348)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.ScheduledByDateBucketsStyle, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle);
    atomic_store(result, (unint64_t *)&qword_1EE723348);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView()
{
  return &type metadata for REMRemindersListDataView;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingDirection()
{
  return &type metadata for REMRemindersListDataView.SortingDirection;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.SortingStyle(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7C)
    goto LABEL_17;
  if (a2 + 132 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 132) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 132;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 132;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 132;
  }
LABEL_17:
  v6 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v6 >= 0x7B)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.SortingStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 132 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 132) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7C)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7B)
    return ((uint64_t (*)(void))((char *)&loc_1A45FF368 + 4 * byte_1A46AB929[v4]))();
  *a1 = a2 - 124;
  return ((uint64_t (*)(void))((char *)sub_1A45FF39C + 4 * byte_1A46AB924[v4]))();
}

uint64_t sub_1A45FF39C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45FF3A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A45FF3ACLL);
  return result;
}

uint64_t sub_1A45FF3C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A45FF3CCLL);
  *(_BYTE *)result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1A45FF3D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45FF3D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A45FF3E4(_BYTE *a1)
{
  int v1;

  v1 = (char)*a1;
  if (v1 >= 0)
    return *a1 >> 5;
  else
    return v1 & 1 | 4u;
}

_BYTE *sub_1A45FF400(_BYTE *result, unsigned int a2)
{
  if (a2 < 4)
    *result = *result & 1 | (32 * a2);
  else
    *result = a2 & 1 | 0x80;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle()
{
  return &type metadata for REMRemindersListDataView.SortingStyle;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FetchSubtasks()
{
  return &type metadata for REMRemindersListDataView.FetchSubtasks;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.ShowCompleted(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1A46900B4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.ShowCompleted(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
    return swift_bridgeObjectRelease();
  if (!(_DWORD)result)
  {
    v3 = sub_1A46900B4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

_QWORD *initializeWithCopy for REMRemindersListDataView.ShowCompleted(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1A46900B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithCopy for REMRemindersListDataView.ShowCompleted(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ShowCompleted);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1A46900B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for REMRemindersListDataView.ShowCompleted(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1A46900B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for REMRemindersListDataView.ShowCompleted(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ShowCompleted);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1A46900B4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1A45FF828()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.FetchConfiguration(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *v8 = *v9;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_1A46900B4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    v14 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (_QWORD *)((char *)a2 + v14);
    v17 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *v15 = *v16;
      v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
      v19 = (char *)v15 + v18;
      v20 = (char *)v16 + v18;
      v21 = sub_1A46900B4();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      v22(v19, v20, v21);
      v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
      v22(&v19[*(int *)(v23 + 36)], &v20[*(int *)(v23 + 36)], v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  return v4;
}

uint64_t destroy for REMRemindersListDataView.FetchConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v6 = sub_1A46900B4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
  }
  v7 = a1 + *(int *)(a2 + 28);
  type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v9 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v10 = sub_1A46900B4();
    v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
    v12(v9, v10);
    v11 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8) + 36);
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v11, v10);
  }
  return result;
}

_BYTE *initializeWithCopy for REMRemindersListDataView.FetchConfiguration(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *v7 = *v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v11 = sub_1A46900B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *v13 = *v14;
    v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v17 = (char *)v13 + v16;
    v18 = (char *)v14 + v16;
    v19 = sub_1A46900B4();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
    v20(&v17[*(int *)(v21 + 36)], &v18[*(int *)(v21 + 36)], v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *assignWithCopy for REMRemindersListDataView.FetchConfiguration(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  *a1 = *a2;
  if (a1 == a2)
  {
    a1[a3[6]] = a2[a3[6]];
    goto LABEL_12;
  }
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  sub_1A4497F2C((uint64_t)&a1[v6], type metadata accessor for REMRemindersListDataView.ShowCompleted);
  v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *v7 = *v8;
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  if (!EnumCaseMultiPayload)
  {
    v11 = sub_1A46900B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    goto LABEL_9;
  }
  memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_9:
  a1[a3[6]] = a2[a3[6]];
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  sub_1A4497F2C((uint64_t)&a1[v12], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
  v15 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *v13 = *v14;
    v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v17 = (char *)v13 + v16;
    v18 = (char *)v14 + v16;
    v19 = sub_1A46900B4();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
    v20(&v17[*(int *)(v21 + 36)], &v18[*(int *)(v21 + 36)], v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
LABEL_12:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *initializeWithTake for REMRemindersListDataView.FetchConfiguration(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = sub_1A46900B4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  v11 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *v12 = *v13;
    v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v16 = (char *)v12 + v15;
    v17 = (char *)v13 + v15;
    v18 = sub_1A46900B4();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
    v19(v16, v17, v18);
    v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
    v19(&v16[*(int *)(v20 + 36)], &v17[*(int *)(v20 + 36)], v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

_BYTE *assignWithTake for REMRemindersListDataView.FetchConfiguration(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;

  *a1 = *a2;
  if (a1 == a2)
  {
    a1[a3[6]] = a2[a3[6]];
  }
  else
  {
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    sub_1A4497F2C((uint64_t)&a1[v6], type metadata accessor for REMRemindersListDataView.ShowCompleted);
    v9 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = sub_1A46900B4();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    v11 = a3[7];
    a1[a3[6]] = a2[a3[6]];
    v12 = &a1[v11];
    v13 = &a2[v11];
    sub_1A4497F2C((uint64_t)&a1[v11], type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    v14 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *v12 = *v13;
      v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
      v16 = (char *)v12 + v15;
      v17 = (char *)v13 + v15;
      v18 = sub_1A46900B4();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
      v19(v16, v17, v18);
      v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
      v19(&v16[*(int *)(v20 + 36)], &v17[*(int *)(v20 + 36)], v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.FetchConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4600284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v6 = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 254)
  {
    v8 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(unsigned __int8 *)(a1 + a3[6]);
  if (v10 >= 2)
    return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.FetchConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4600340(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = type metadata accessor for REMRemindersListDataView.ShowCompleted(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + a4[6]) = a2 + 1;
      return result;
    }
    v10 = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[7];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

uint64_t sub_1A46003DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for REMRemindersListDataView.ShowCompleted(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for REMRemindersListDataView.RemindersPrefetch(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for REMRemindersListDataView.HashtagLabelPredicate(uint64_t a1)
{
  return sub_1A4600490(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1A4600490(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 1u)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO21HashtagLabelPredicateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A45FD638(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.HashtagLabelPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1A45FD638(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1A4600490(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.HashtagLabelPredicate(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1A4600490(v4, v5, v6);
  return a1;
}

uint64_t sub_1A46005A4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1A46005BC(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate;
}

uint64_t destroy for REMRemindersListDataView.ReminderLite(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.ReminderLite(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.ReminderLite(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.ReminderLite(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ReminderLite()
{
  return &type metadata for REMRemindersListDataView.ReminderLite;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CountByCompleted()
{
  return &type metadata for REMRemindersListDataView.CountByCompleted;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlatModel()
{
  return &type metadata for REMRemindersListDataView.FlatModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListModel()
{
  return &type metadata for REMRemindersListDataView.ListModel;
}

id *sub_1A4600780(id *a1)
{
  destroy for REMRemindersListDataView.ReminderLite(a1);
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CustomSmartListModel()
{
  return &type metadata for REMRemindersListDataView.CustomSmartListModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.GroupModel()
{
  return &type metadata for REMRemindersListDataView.GroupModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel()
{
  return &type metadata for REMRemindersListDataView.ListsModel;
}

uint64_t destroy for REMRemindersListDataView.ListsModel.Sublist(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.ListsModel.Sublist(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = v3;
  swift_bridgeObjectRetain();
  v7 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.ListsModel.Sublist(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for REMRemindersListDataView.ListsModel.Sublist(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.ListsModel.Sublist(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.ListsModel.Sublist(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel.Sublist()
{
  return &type metadata for REMRemindersListDataView.ListsModel.Sublist;
}

uint64_t assignWithCopy for REMRemindersListDataView.FlaggedModel(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 48);
  v6 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = v6;

  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.FlaggedModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlaggedModel()
{
  return &type metadata for REMRemindersListDataView.FlaggedModel;
}

uint64_t assignWithCopy for REMRemindersListDataView.AssignedModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 40);
  v6 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = v6;

  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.AssignedModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.AssignedModel()
{
  return &type metadata for REMRemindersListDataView.AssignedModel;
}

void destroy for REMRemindersListDataView.TaggedModel(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v2 = *(void **)(a1 + 80);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for REMRemindersListDataView.TaggedModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __int128 v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v6;
  v8 = (_OWORD *)(a2 + 80);
  v7 = *(void **)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v6;
  if (v7)
  {
    *(_QWORD *)(a1 + 80) = v7;
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    v10 = *(_QWORD *)(a2 + 96);
    v11 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = v10;
    *(_QWORD *)(a1 + 104) = v11;
    v12 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = v8[1];
    *(_OWORD *)(a1 + 80) = *v8;
    *(_OWORD *)(a1 + 96) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TaggedModel(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  _OWORD *v8;
  void *v9;
  void *v10;
  _OWORD *v11;
  id v12;
  id v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(void **)(a1 + 72);
  v6 = *(void **)(a2 + 72);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = v6;

  v8 = (_OWORD *)(a1 + 80);
  v9 = *(void **)(a1 + 80);
  v11 = (_OWORD *)(a2 + 80);
  v10 = *(void **)(a2 + 80);
  if (v9)
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 80) = v10;
      v12 = v10;

      *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A4600780((id *)(a1 + 80));
      v14 = *(_OWORD *)(a2 + 96);
      *v8 = *v11;
      *(_OWORD *)(a1 + 96) = v14;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 80) = v10;
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v13 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 96);
    *v8 = *v11;
    *(_OWORD *)(a1 + 96) = v15;
  }
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for REMRemindersListDataView.TaggedModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v4 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v5 = *(void **)(a1 + 80);
  v6 = *(_QWORD *)(a2 + 80);
  if (!v5)
    goto LABEL_5;
  if (!v6)
  {
    sub_1A4600780((id *)(a1 + 80));
LABEL_5:
    v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 80) = v6;

  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.TaggedModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.TaggedModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TaggedModel()
{
  return &type metadata for REMRemindersListDataView.TaggedModel;
}

uint64_t destroy for REMRemindersListDataView.TemplateModel(uint64_t a1)
{
  uint64_t result;
  void *v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(void **)(a1 + 56);
  if (v3)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for REMRemindersListDataView.TemplateModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _OWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  __int128 v13;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v8 = (_OWORD *)(a2 + 56);
  v7 = *(void **)(a2 + 56);
  v9 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_QWORD *)(a1 + 56) = v7;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    v10 = *(_QWORD *)(a2 + 72);
    v11 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v11;
    v12 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = v8[1];
    *(_OWORD *)(a1 + 56) = *v8;
    *(_OWORD *)(a1 + 72) = v13;
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TemplateModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  __int128 v7;
  _OWORD *v8;
  void *v9;
  void *v10;
  _OWORD *v11;
  id v12;
  id v13;
  __int128 v14;
  __int128 v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = (_OWORD *)(a1 + 56);
  v9 = *(void **)(a1 + 56);
  v11 = (_OWORD *)(a2 + 56);
  v10 = *(void **)(a2 + 56);
  if (v9)
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 56) = v10;
      v12 = v10;

      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A4600780((id *)(a1 + 56));
      v14 = *(_OWORD *)(a2 + 72);
      *v8 = *v11;
      *(_OWORD *)(a1 + 72) = v14;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 56) = v10;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v13 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 72);
    *v8 = *v11;
    *(_OWORD *)(a1 + 72) = v15;
  }
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.TemplateModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 56);
  v6 = *(_QWORD *)(a2 + 56);
  if (!v5)
    goto LABEL_5;
  if (!v6)
  {
    sub_1A4600780((id *)(a1 + 56));
LABEL_5:
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v6;

  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateModel()
{
  return &type metadata for REMRemindersListDataView.TemplateModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A46900B4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.DateBucketsModel.RepresentativeDate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A46016AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.DateBucketsModel.RepresentativeDate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4601730(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A46900B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1A46017A8()
{
  return sub_1A46055C8();
}

uint64_t destroy for REMRemindersListDataView.Diff()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMRemindersListDataView.Diff(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMRemindersListDataView.Diff(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.Diff(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.Diff()
{
  return &type metadata for REMRemindersListDataView.Diff;
}

uint64_t sub_1A4601978()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A46019F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void **v12;
  void *v13;
  id v14;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    v10[2] = v11[2];
    v10[3] = v11[3];
    v10[4] = v11[4];
    v12 = (void **)(((unint64_t)v11 + 47) & 0xFFFFFFFFFFFFF8);
    v13 = *v12;
    *(_QWORD *)(((unint64_t)v10 + 47) & 0xFFFFFFFFFFFFF8) = *v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v13;
  }
  return v4;
}

void sub_1A4601B18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1A4601B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  id v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  v7[3] = v8[3];
  v7[4] = v8[4];
  v9 = (void **)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFF8);
  v10 = *v9;
  *(_QWORD *)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFF8) = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v10;
  return a1;
}

uint64_t sub_1A4601C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[3] = v8[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(void **)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = v10;
  v12 = v10;

  return a1;
}

uint64_t sub_1A4601D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(_OWORD *)v8;
  v10 = *(_OWORD *)(v8 + 16);
  *(_QWORD *)(v7 + 32) = *(_QWORD *)(v8 + 32);
  *(_OWORD *)v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  *(_QWORD *)((v7 + 47) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 47) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1A4601DB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void *v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  v7[2] = v8[2];
  swift_bridgeObjectRelease();
  v7[3] = v8[3];
  swift_bridgeObjectRelease();
  v7[4] = v8[4];
  swift_bridgeObjectRelease();
  v9 = (void **)(((unint64_t)v7 + 47) & 0xFFFFFFFFFFFFFFF8);
  v10 = *v9;
  *v9 = *(void **)(((unint64_t)v8 + 47) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1A4601E7C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A4601F00 + 4 * byte_1A46AB92E[v10]))();
  }
}

void sub_1A4601F84(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) + 47) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A4602080()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A4602100);
}

void sub_1A4602088(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A4602090);
  JUMPOUT(0x1A4602100);
}

void sub_1A46020D0()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A4602100);
}

void sub_1A46020D8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A4602100);
}

uint64_t sub_1A46020E0(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A4602100);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A46020FCLL);
    JUMPOUT(0x1A46020ECLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.RemindersPrefetch(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1A46900B4();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
    v11(&v8[*(int *)(v12 + 36)], &v9[*(int *)(v12 + 36)], v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.RemindersPrefetch(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v4 = sub_1A46900B4();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
    v6(v3, v4);
    v5 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8) + 36);
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v4);
  }
  return result;
}

_QWORD *initializeWithCopy for REMRemindersListDataView.RemindersPrefetch(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A46900B4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v10(v7, v8, v9);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
    v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithCopy for REMRemindersListDataView.RemindersPrefetch(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A46900B4();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
      v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

_QWORD *initializeWithTake for REMRemindersListDataView.RemindersPrefetch(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1A46900B4();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
    v10(v7, v8, v9);
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
    v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *assignWithTake for REMRemindersListDataView.RemindersPrefetch(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.RemindersPrefetch);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED241558) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1A46900B4();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
      v10(v7, v8, v9);
      v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED243DF8);
      v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1A4602640()
{
  unint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v2 = MEMORY[0x1E0DE9D38] + 64;
  v3 = MEMORY[0x1E0DE9D38] + 64;
  sub_1A44F56AC();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v4 = &v1;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t destroy for REMRemindersListDataView.SectionLite(id *a1)
{
  if (*a1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for REMRemindersListDataView.SectionLite(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  __int128 v10;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    v5 = *(_QWORD *)(a2 + 8);
    v6 = *(_QWORD *)(a2 + 16);
    *a1 = v4;
    a1[1] = v5;
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    a1[2] = v6;
    a1[3] = v7;
    a1[4] = v8;
    v9 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v10;
    a1[4] = *(_QWORD *)(a2 + 32);
  }
  a1[5] = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for REMRemindersListDataView.SectionLite(_QWORD *a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = (void *)*a1;
  v5 = *(void **)a2;
  if (*a1)
  {
    if (v5)
    {
      *a1 = v5;
      v6 = v5;

      a1[1] = *((_QWORD *)a2 + 1);
      a1[2] = *((_QWORD *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[3] = *((_QWORD *)a2 + 3);
      a1[4] = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A445404C((uint64_t)a1, &qword_1EE723350);
      v8 = *((_QWORD *)a2 + 4);
      v9 = a2[1];
      *(_OWORD *)a1 = *a2;
      *((_OWORD *)a1 + 1) = v9;
      a1[4] = v8;
    }
  }
  else if (v5)
  {
    *a1 = v5;
    a1[1] = *((_QWORD *)a2 + 1);
    a1[2] = *((_QWORD *)a2 + 2);
    a1[3] = *((_QWORD *)a2 + 3);
    a1[4] = *((_QWORD *)a2 + 4);
    v7 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = *a2;
    v11 = a2[1];
    a1[4] = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v10;
    *((_OWORD *)a1 + 1) = v11;
  }
  a1[5] = *((_QWORD *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.SectionLite(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(void **)a1;
  if (!*(_QWORD *)a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_1A445404C(a1, &qword_1EE723350);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite()
{
  return &type metadata for REMRemindersListDataView.SectionLite;
}

id *destroy for REMRemindersListDataView.SectionLite.SectionType(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for REMRemindersListDataView.SectionLite.SectionType(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  __int128 v9;

  v3 = *(void **)a2;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  else
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = v3;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = *(_QWORD *)(a2 + 24);
    v7 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = v7;
    v8 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.SectionLite.SectionType(uint64_t a1, __int128 *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  __int128 v8;
  __int128 v9;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      v7 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v8 = *a2;
    v9 = a2[1];
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_OWORD *)a1 = v8;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
  *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.SectionLite.SectionType(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(void **)a1;
  if (*(_QWORD *)a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.SectionLite.SectionType(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.SectionLite.SectionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1A4602C40(uint64_t result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 24) = 0u;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *(_QWORD *)result = v2;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwca_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionsModel()
{
  return &type metadata for REMRemindersListDataView.SectionsModel;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwca_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = v5;

  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9ListModelVwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1A4602FC0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListSectionsModel()
{
  return &type metadata for REMRemindersListDataView.ListSectionsModel;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsModel()
{
  return &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwxx_0(uint64_t a1)
{
  void *v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v2 = *(void **)(a1 + 56);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  __int128 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = (_OWORD *)(a2 + 56);
  v6 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = v5;
  if (v6)
  {
    *(_QWORD *)(a1 + 56) = v6;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    v9 = *(_QWORD *)(a2 + 72);
    v10 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = v9;
    *(_QWORD *)(a1 + 80) = v10;
    v11 = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = v7[1];
    *(_OWORD *)(a1 + 56) = *v7;
    *(_OWORD *)(a1 + 72) = v12;
  }
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwca_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  _OWORD *v8;
  void *v9;
  void *v10;
  _OWORD *v11;
  id v12;
  id v13;
  __int128 v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a2 + 48);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v5;
  v7 = v5;

  v8 = (_OWORD *)(a1 + 56);
  v9 = *(void **)(a1 + 56);
  v11 = (_OWORD *)(a2 + 56);
  v10 = *(void **)(a2 + 56);
  if (v9)
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 56) = v10;
      v12 = v10;

      *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1A4600780((id *)(a1 + 56));
      v14 = *(_OWORD *)(a2 + 72);
      *v8 = *v11;
      *(_OWORD *)(a1 + 72) = v14;
    }
  }
  else if (v10)
  {
    *(_QWORD *)(a1 + 56) = v10;
    *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v13 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 72);
    *v8 = *v11;
    *(_OWORD *)(a1 + 72) = v15;
  }
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO20CustomSmartListModelVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);

  v5 = *(void **)(a1 + 56);
  v6 = *(_QWORD *)(a2 + 56);
  if (!v5)
    goto LABEL_5;
  if (!v6)
  {
    sub_1A4600780((id *)(a1 + 56));
LABEL_5:
    v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    return a1;
  }
  *(_QWORD *)(a1 + 56) = v6;

  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr1E4C31509V15GroupInvocationC6ResultVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s14descr1E4C31509V15GroupInvocationC6ResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateSectionsModel()
{
  return &type metadata for REMRemindersListDataView.TemplateSectionsModel;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel;
}

uint64_t destroy for REMRemindersListDataView.ListsSectionsModel.List(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.ListsSectionsModel.List(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = v3;
  swift_bridgeObjectRetain();
  v7 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.ListsSectionsModel.List(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.ListsSectionsModel.List(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType;
}

void _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwxx_0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a2 + 40);
  v6 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  v7 = v5;

  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10GroupModelVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.GroupSectionsModel()
{
  return &type metadata for REMRemindersListDataView.GroupSectionsModel;
}

void destroy for REMRemindersListDataView.TodayGroupModel(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for REMRemindersListDataView.TodayGroupModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(void **)(a2 + 32);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v3;
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TodayGroupModel(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 32);
  v6 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = v6;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 56);
  v9 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = v9;

  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.TodayGroupModel(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);

  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.TodayGroupModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.TodayGroupModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel;
}

uint64_t initializeBufferWithCopyOfBuffer for REMRemindersListDataView.TodayGroupModel.Group(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.TodayGroupModel.Group(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.TodayGroupModel.Group(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodaySectionOrderingModel()
{
  return &type metadata for REMRemindersListDataView.TodaySectionOrderingModel;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10ListsModelVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for REMRemindersListDataView.DatesModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.DatesModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.DatesModel(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DatesModel()
{
  return &type metadata for REMRemindersListDataView.DatesModel;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.DatesModel.Group(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900B4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t initializeWithCopy for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for REMRemindersListDataView.DatesModel.Group(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.DatesModel.Group()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.DatesModel.Group()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4603FF0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.ScheduledDateBucketsModel.Day()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.ScheduledDateBucketsModel.Day()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A46040C0()
{
  return sub_1A46055C8();
}

uint64_t initializeBufferWithCopyOfBuffer for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A4604120 + 4 * byte_1A46AB93D[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_4;
    case 1:
    case 3:
    case 4:
      v3 = sub_1A46900B4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241138);
      goto LABEL_4;
    case 2:
      v4 = sub_1A46900B4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
LABEL_4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket()
{
  char *v0;

  v0 = (char *)sub_1A4604394 + 4 * byte_1A46AB947[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1A4604394()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A4497F2C(result, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    v2 = (char *)&loc_1A460454C + 4 * byte_1A46AB94C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

char *initializeWithTake for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      v8 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241138);
      *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
      goto LABEL_5;
    case 2u:
      v6 = sub_1A46900B4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
      *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1A4497F2C((uint64_t)a1, type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        v8 = sub_1A46900B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241138);
        *(_QWORD *)&a1[*(int *)(v9 + 48)] = *(_QWORD *)&a2[*(int *)(v9 + 48)];
        goto LABEL_6;
      case 2u:
        v6 = sub_1A46900B4();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(0);
        *(_QWORD *)&a1[*(int *)(v7 + 20)] = *(_QWORD *)&a2[*(int *)(v7 + 20)];
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1A46049E8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;

  v6 = MEMORY[0x1E0DE9D18] + 64;
  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v7 = &v5;
    result = type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day(319);
    if (v2 <= 0x3F)
    {
      v8 = *(_QWORD *)(result - 8) + 64;
      swift_getTupleTypeLayout2();
      v9 = &v4;
      swift_getTupleTypeLayout2();
      v10 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for REMRemindersListDataView.ScheduledTodayGroup(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1A46900B4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for REMRemindersListDataView.ScheduledTodayGroup(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1A46900B4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for REMRemindersListDataView.ScheduledTodayGroup(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1A46900B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for REMRemindersListDataView.ScheduledTodayGroup(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1A46900B4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1A445404C((uint64_t)a1, &qword_1EE7231A0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1A46900B4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for REMRemindersListDataView.ScheduledTodayGroup(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1A46900B4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for REMRemindersListDataView.ScheduledTodayGroup(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1A46900B4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1A445404C((uint64_t)a1, &qword_1EE7231A0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1A46900B4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.ScheduledTodayGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4604F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.ScheduledTodayGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A4604FF8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1A460504C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1A4605088(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7231A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO9FlatModelVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelVwca_0(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel;
}

uint64_t *_s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A46900B4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO10DatesModelV5GroupVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25ScheduledDateBucketsModelV3DayVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for REMRemindersListDataView.CompletedDateBucketsModel.Day()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1A46900B4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for REMRemindersListDataView.CompletedDateBucketsModel.Day()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1A46900B4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1A46055C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A46900B4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1A4605684 + 4 * byte_1A46AB959[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v5 = sub_1A46900B4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
      goto LABEL_6;
    case 1:
    case 2:
    case 3:
      v3 = sub_1A46900B4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      v4 = &qword_1EE723258;
      goto LABEL_5;
    case 4:
      v6 = sub_1A46900B4();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
      v4 = (uint64_t *)&unk_1EE723228;
LABEL_5:
      __swift_instantiateConcreteTypeFromMangledName(v4);
LABEL_6:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for REMRemindersListDataView.CompletedDateBucketsModel.Bucket()
{
  char *v0;

  v0 = (char *)sub_1A4605964 + 4 * byte_1A46AB963[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A4605964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE723258) + 48);
  *(_QWORD *)(v0 + v3) = *(_QWORD *)(v1 + v3);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

void sub_1A4605A04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  JUMPOUT(0x1A46059D4);
}

uint64_t assignWithCopy for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A4497F2C(result, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    v2 = (char *)&loc_1A4605A94 + 4 * byte_1A46AB968[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1A4605B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v1, v2);
  type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  JUMPOUT(0x1A4605B04);
}

void initializeWithTake for REMRemindersListDataView.CompletedDateBucketsModel.Bucket()
{
  char *v0;

  v0 = (char *)sub_1A4605BAC + 4 * byte_1A46AB96D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1A4605BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723258);
  *(_QWORD *)(v0 + *(int *)(v3 + 48)) = *(_QWORD *)(v1 + *(int *)(v3 + 48));
  swift_storeEnumTagMultiPayload();
  return v0;
}

void sub_1A4605C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  JUMPOUT(0x1A4605C1CLL);
}

uint64_t assignWithTake for REMRemindersListDataView.CompletedDateBucketsModel.Bucket(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1A4497F2C(result, type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket);
    v2 = (char *)&loc_1A4605CDC + 4 * byte_1A46AB972[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void sub_1A4605D7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v0, v1, v2);
  type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(0);
  JUMPOUT(0x1A4605D4CLL);
}

uint64_t sub_1A4605DAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;

  result = type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day(319);
  if (v1 <= 0x3F)
  {
    v8 = *(_QWORD *)(result - 8) + 64;
    result = sub_1A46900B4();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v9 = &v7;
      swift_getTupleTypeLayout2();
      v10 = &v6;
      swift_getTupleTypeLayout2();
      v11 = &v5;
      result = type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate(319);
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v12 = &v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ShowCompleted.CodingError()
{
  return &type metadata for REMRemindersListDataView.ShowCompleted.CodingError;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle.CodingError()
{
  return &type metadata for REMRemindersListDataView.SortingStyle.CodingError;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.RemindersPrefetch.Base()
{
  return &type metadata for REMRemindersListDataView.RemindersPrefetch.Base;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.RemindersPrefetch.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.RemindersPrefetch.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DatesModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DatesModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DatesModel.Group.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DatesModel.Group.CodingKeys;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25CompletedDateBucketsModelV6BucketO13DayCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A46060C0 + 4 * byte_1A46AB977[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A46060E0 + 4 * byte_1A46AB97C[v4]))();
}

_BYTE *sub_1A46060C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A46060E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A46060E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A46060F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A46060F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4606100(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO15TodayGroupModelV5GroupV9GroupTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A4606190 + 4 * byte_1A46AB986[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A46061C4 + 4 * byte_1A46AB981[v4]))();
}

uint64_t sub_1A46061C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46061CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A46061D4);
  return result;
}

uint64_t sub_1A46061E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A46061E8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A46061EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46061F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys()
{
  return &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.GroupSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.GroupSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TemplateSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListSectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListSectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys()
{
  return &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.Diff.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.Diff.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys()
{
  return &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TemplateModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TemplateModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.TaggedModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.TaggedModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.AssignedModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.AssignedModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlaggedModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.FlaggedModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ListsModel.Sublist.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ListsModel.Sublist.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FlatModel.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.FlatModel.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.CountByCompleted.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.CountByCompleted.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ReminderLite.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ReminderLite.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys()
{
  return &type metadata for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO25CompletedDateBucketsModelV6BucketO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A46064FC + 4 * byte_1A46AB990[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A4606530 + 4 * byte_1A46AB98B[v4]))();
}

uint64_t sub_1A4606530(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4606538(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4606540);
  return result;
}

uint64_t sub_1A460654C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4606554);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A4606558(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4606560(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.FetchConfiguration.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.FetchConfiguration.CodingKeys;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO17RemindersPrefetchO4BaseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A46065C8 + 4 * byte_1A46AB99A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A46065FC + 4 * byte_1A46AB995[v4]))();
}

uint64_t sub_1A46065FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4606604(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A460660CLL);
  return result;
}

uint64_t sub_1A4606618(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4606620);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A4606624(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A460662C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ShowCompleted.Base()
{
  return &type metadata for REMRemindersListDataView.ShowCompleted.Base;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO13FetchSubtasksOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4606694 + 4 * byte_1A46AB9A4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A46066C8 + 4 * byte_1A46AB99F[v4]))();
}

uint64_t sub_1A46066C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46066D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A46066D8);
  return result;
}

uint64_t sub_1A46066E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A46066ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A46066F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46066F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.ShowCompleted.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.ShowCompleted.CodingKeys;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO15TodayGroupModelV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A4606760 + 4 * byte_1A46AB9AE[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A4606794 + 4 * byte_1A46AB9A9[v4]))();
}

uint64_t sub_1A4606794(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A460679C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A46067A4);
  return result;
}

uint64_t sub_1A46067B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A46067B8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A46067BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46067C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle.Base()
{
  return &type metadata for REMRemindersListDataView.SortingStyle.Base;
}

uint64_t _s19ReminderKitInternal24REMRemindersListDataViewO16SortingDirectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A460682C + 4 * byte_1A46AB9B8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4606860 + 4 * byte_1A46AB9B3[v4]))();
}

uint64_t sub_1A4606860(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4606868(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4606870);
  return result;
}

uint64_t sub_1A460687C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4606884);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4606888(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4606890(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMRemindersListDataView.SortingStyle.CodingKeys()
{
  return &type metadata for REMRemindersListDataView.SortingStyle.CodingKeys;
}

unint64_t sub_1A46068B0()
{
  unint64_t result;

  result = qword_1EE7235A8;
  if (!qword_1EE7235A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD6E8, &type metadata for REMRemindersListDataView.SortingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235A8);
  }
  return result;
}

unint64_t sub_1A46068F8()
{
  unint64_t result;

  result = qword_1EE7235B0;
  if (!qword_1EE7235B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD788, &type metadata for REMRemindersListDataView.SortingStyle.Base);
    atomic_store(result, (unint64_t *)&qword_1EE7235B0);
  }
  return result;
}

unint64_t sub_1A4606940()
{
  unint64_t result;

  result = qword_1EE7235B8;
  if (!qword_1EE7235B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD878, &type metadata for REMRemindersListDataView.ShowCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235B8);
  }
  return result;
}

unint64_t sub_1A4606988()
{
  unint64_t result;

  result = qword_1EE7235C0;
  if (!qword_1EE7235C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD918, &type metadata for REMRemindersListDataView.ShowCompleted.Base);
    atomic_store(result, (unint64_t *)&qword_1EE7235C0);
  }
  return result;
}

unint64_t sub_1A46069D0()
{
  unint64_t result;

  result = qword_1EE7235C8;
  if (!qword_1EE7235C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD9D0, &type metadata for REMRemindersListDataView.FetchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235C8);
  }
  return result;
}

unint64_t sub_1A4606A18()
{
  unint64_t result;

  result = qword_1EE7235D0;
  if (!qword_1EE7235D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADA88, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235D0);
  }
  return result;
}

unint64_t sub_1A4606A60()
{
  unint64_t result;

  result = qword_1EE7235D8;
  if (!qword_1EE7235D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADB40, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235D8);
  }
  return result;
}

unint64_t sub_1A4606AA8()
{
  unint64_t result;

  result = qword_1EE7235E0;
  if (!qword_1EE7235E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADC98, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235E0);
  }
  return result;
}

unint64_t sub_1A4606AF0()
{
  unint64_t result;

  result = qword_1EE7235E8;
  if (!qword_1EE7235E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADD50, &type metadata for REMRemindersListDataView.ReminderLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235E8);
  }
  return result;
}

unint64_t sub_1A4606B38()
{
  unint64_t result;

  result = qword_1EE7235F0;
  if (!qword_1EE7235F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADE08, &type metadata for REMRemindersListDataView.CountByCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235F0);
  }
  return result;
}

unint64_t sub_1A4606B80()
{
  unint64_t result;

  result = qword_1EE7235F8;
  if (!qword_1EE7235F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADEC0, &type metadata for REMRemindersListDataView.FlatModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7235F8);
  }
  return result;
}

unint64_t sub_1A4606BC8()
{
  unint64_t result;

  result = qword_1EE723600;
  if (!qword_1EE723600)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADF78, &type metadata for REMRemindersListDataView.ListsModel.Sublist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723600);
  }
  return result;
}

unint64_t sub_1A4606C10()
{
  unint64_t result;

  result = qword_1EE723608;
  if (!qword_1EE723608)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE030, &type metadata for REMRemindersListDataView.ListsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723608);
  }
  return result;
}

unint64_t sub_1A4606C58()
{
  unint64_t result;

  result = qword_1EE723610;
  if (!qword_1EE723610)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE0E8, &type metadata for REMRemindersListDataView.FlaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723610);
  }
  return result;
}

unint64_t sub_1A4606CA0()
{
  unint64_t result;

  result = qword_1EE723618;
  if (!qword_1EE723618)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE1A0, &type metadata for REMRemindersListDataView.AssignedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723618);
  }
  return result;
}

unint64_t sub_1A4606CE8()
{
  unint64_t result;

  result = qword_1EE723620;
  if (!qword_1EE723620)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE258, &type metadata for REMRemindersListDataView.TaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723620);
  }
  return result;
}

unint64_t sub_1A4606D30()
{
  unint64_t result;

  result = qword_1EE723628;
  if (!qword_1EE723628)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE310, &type metadata for REMRemindersListDataView.TemplateModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723628);
  }
  return result;
}

unint64_t sub_1A4606D78()
{
  unint64_t result;

  result = qword_1EE723630;
  if (!qword_1EE723630)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE468, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723630);
  }
  return result;
}

unint64_t sub_1A4606DC0()
{
  unint64_t result;

  result = qword_1EE723638;
  if (!qword_1EE723638)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE520, &type metadata for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723638);
  }
  return result;
}

unint64_t sub_1A4606E08()
{
  unint64_t result;

  result = qword_1EE723640;
  if (!qword_1EE723640)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE5D8, &type metadata for REMRemindersListDataView.Diff.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723640);
  }
  return result;
}

unint64_t sub_1A4606E50()
{
  unint64_t result;

  result = qword_1EE723648;
  if (!qword_1EE723648)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE6E0, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723648);
  }
  return result;
}

unint64_t sub_1A4606E98()
{
  unint64_t result;

  result = qword_1EE723650;
  if (!qword_1EE723650)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE798, &type metadata for REMRemindersListDataView.SectionLite.SectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723650);
  }
  return result;
}

unint64_t sub_1A4606EE0()
{
  unint64_t result;

  result = qword_1EE723658;
  if (!qword_1EE723658)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE850, &type metadata for REMRemindersListDataView.SectionLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723658);
  }
  return result;
}

unint64_t sub_1A4606F28()
{
  unint64_t result;

  result = qword_1EE723660;
  if (!qword_1EE723660)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE908, &type metadata for REMRemindersListDataView.SectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723660);
  }
  return result;
}

unint64_t sub_1A4606F70()
{
  unint64_t result;

  result = qword_1EE723668;
  if (!qword_1EE723668)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE9C0, &type metadata for REMRemindersListDataView.ListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723668);
  }
  return result;
}

unint64_t sub_1A4606FB8()
{
  unint64_t result;

  result = qword_1EE723670;
  if (!qword_1EE723670)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEA78, &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723670);
  }
  return result;
}

unint64_t sub_1A4607000()
{
  unint64_t result;

  result = qword_1EE723678;
  if (!qword_1EE723678)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEB30, &type metadata for REMRemindersListDataView.TemplateSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723678);
  }
  return result;
}

unint64_t sub_1A4607048()
{
  unint64_t result;

  result = qword_1EE723680;
  if (!qword_1EE723680)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AECD8, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723680);
  }
  return result;
}

unint64_t sub_1A4607090()
{
  unint64_t result;

  result = qword_1EE723688;
  if (!qword_1EE723688)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AED90, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723688);
  }
  return result;
}

unint64_t sub_1A46070D8()
{
  unint64_t result;

  result = qword_1EE723690;
  if (!qword_1EE723690)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEE48, &type metadata for REMRemindersListDataView.ListsSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723690);
  }
  return result;
}

unint64_t sub_1A4607120()
{
  unint64_t result;

  result = qword_1EE723698;
  if (!qword_1EE723698)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEF00, &type metadata for REMRemindersListDataView.GroupSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723698);
  }
  return result;
}

unint64_t sub_1A4607168()
{
  unint64_t result;

  result = qword_1EE7236A0;
  if (!qword_1EE7236A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF238, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236A0);
  }
  return result;
}

unint64_t sub_1A46071B0()
{
  unint64_t result;

  result = qword_1EE7236A8;
  if (!qword_1EE7236A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF2F0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236A8);
  }
  return result;
}

unint64_t sub_1A46071F8()
{
  unint64_t result;

  result = qword_1EE7236B0;
  if (!qword_1EE7236B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF3A8, &type metadata for REMRemindersListDataView.TodayGroupModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236B0);
  }
  return result;
}

unint64_t sub_1A4607240()
{
  unint64_t result;

  result = qword_1EE7236B8;
  if (!qword_1EE7236B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF460, &type metadata for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236B8);
  }
  return result;
}

unint64_t sub_1A4607288()
{
  unint64_t result;

  result = qword_1EE7236C0;
  if (!qword_1EE7236C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF518, &type metadata for REMRemindersListDataView.DatesModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236C0);
  }
  return result;
}

unint64_t sub_1A46072D0()
{
  unint64_t result;

  result = qword_1EE7236C8;
  if (!qword_1EE7236C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF5D0, &type metadata for REMRemindersListDataView.DatesModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236C8);
  }
  return result;
}

unint64_t sub_1A4607318()
{
  unint64_t result;

  result = qword_1EE7236D0;
  if (!qword_1EE7236D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF688, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236D0);
  }
  return result;
}

unint64_t sub_1A4607360()
{
  unint64_t result;

  result = qword_1EE7236D8;
  if (!qword_1EE7236D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF740, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236D8);
  }
  return result;
}

unint64_t sub_1A46073A8()
{
  unint64_t result;

  result = qword_1EE7236E0;
  if (!qword_1EE7236E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF7F8, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236E0);
  }
  return result;
}

unint64_t sub_1A46073F0()
{
  unint64_t result;

  result = qword_1EE7236E8;
  if (!qword_1EE7236E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF8B0, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236E8);
  }
  return result;
}

unint64_t sub_1A4607438()
{
  unint64_t result;

  result = qword_1EE7236F0;
  if (!qword_1EE7236F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF968, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236F0);
  }
  return result;
}

unint64_t sub_1A4607480()
{
  unint64_t result;

  result = qword_1EE7236F8;
  if (!qword_1EE7236F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFA20, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7236F8);
  }
  return result;
}

unint64_t sub_1A46074C8()
{
  unint64_t result;

  result = qword_1EE723700;
  if (!qword_1EE723700)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFAD8, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723700);
  }
  return result;
}

unint64_t sub_1A4607510()
{
  unint64_t result;

  result = qword_1EE723708;
  if (!qword_1EE723708)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFB90, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723708);
  }
  return result;
}

unint64_t sub_1A4607558()
{
  unint64_t result;

  result = qword_1EE723710;
  if (!qword_1EE723710)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFC48, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723710);
  }
  return result;
}

unint64_t sub_1A46075A0()
{
  unint64_t result;

  result = qword_1EE723718;
  if (!qword_1EE723718)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFD50, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723718);
  }
  return result;
}

unint64_t sub_1A46075E8()
{
  unint64_t result;

  result = qword_1EE723720;
  if (!qword_1EE723720)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFEA8, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723720);
  }
  return result;
}

unint64_t sub_1A4607630()
{
  unint64_t result;

  result = qword_1EE723728;
  if (!qword_1EE723728)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFF60, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723728);
  }
  return result;
}

unint64_t sub_1A4607678()
{
  unint64_t result;

  result = qword_1EE723730;
  if (!qword_1EE723730)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0018, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723730);
  }
  return result;
}

unint64_t sub_1A46076C0()
{
  unint64_t result;

  result = qword_1EE723738;
  if (!qword_1EE723738)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B00D0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723738);
  }
  return result;
}

unint64_t sub_1A4607708()
{
  unint64_t result;

  result = qword_1EE723740;
  if (!qword_1EE723740)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0188, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723740);
  }
  return result;
}

unint64_t sub_1A4607750()
{
  unint64_t result;

  result = qword_1EE723748;
  if (!qword_1EE723748)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0240, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723748);
  }
  return result;
}

unint64_t sub_1A4607798()
{
  unint64_t result;

  result = qword_1EE723750;
  if (!qword_1EE723750)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B02F8, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723750);
  }
  return result;
}

unint64_t sub_1A46077E0()
{
  unint64_t result;

  result = qword_1EE723758;
  if (!qword_1EE723758)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B03B0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723758);
  }
  return result;
}

unint64_t sub_1A4607828()
{
  unint64_t result;

  result = qword_1EE723760;
  if (!qword_1EE723760)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0468, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723760);
  }
  return result;
}

unint64_t sub_1A4607870()
{
  unint64_t result;

  result = qword_1EE723768;
  if (!qword_1EE723768)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0558, &type metadata for REMRemindersListDataView.RemindersPrefetch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723768);
  }
  return result;
}

unint64_t sub_1A46078B8()
{
  unint64_t result;

  result = qword_1EE723770;
  if (!qword_1EE723770)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B05F8, &type metadata for REMRemindersListDataView.RemindersPrefetch.Base);
    atomic_store(result, (unint64_t *)&qword_1EE723770);
  }
  return result;
}

unint64_t sub_1A4607900()
{
  unint64_t result;

  result = qword_1ED242BA8;
  if (!qword_1ED242BA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0490, &type metadata for REMRemindersListDataView.RemindersPrefetch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242BA8);
  }
  return result;
}

unint64_t sub_1A4607948()
{
  unint64_t result;

  result = qword_1ED242BA0;
  if (!qword_1ED242BA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B04B8, &type metadata for REMRemindersListDataView.RemindersPrefetch.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242BA0);
  }
  return result;
}

unint64_t sub_1A4607990()
{
  unint64_t result;

  result = qword_1EE723778;
  if (!qword_1EE723778)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B03D8, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723778);
  }
  return result;
}

unint64_t sub_1A46079D8()
{
  unint64_t result;

  result = qword_1EE723780;
  if (!qword_1EE723780)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0400, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723780);
  }
  return result;
}

unint64_t sub_1A4607A20()
{
  unint64_t result;

  result = qword_1EE723788;
  if (!qword_1EE723788)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0268, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723788);
  }
  return result;
}

unint64_t sub_1A4607A68()
{
  unint64_t result;

  result = qword_1EE723790;
  if (!qword_1EE723790)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0290, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723790);
  }
  return result;
}

unint64_t sub_1A4607AB0()
{
  unint64_t result;

  result = qword_1EE723798;
  if (!qword_1EE723798)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B01B0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723798);
  }
  return result;
}

unint64_t sub_1A4607AF8()
{
  unint64_t result;

  result = qword_1EE7237A0;
  if (!qword_1EE7237A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B01D8, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastSevenDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237A0);
  }
  return result;
}

unint64_t sub_1A4607B40()
{
  unint64_t result;

  result = qword_1EE7237A8;
  if (!qword_1EE7237A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B00F8, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237A8);
  }
  return result;
}

unint64_t sub_1A4607B88()
{
  unint64_t result;

  result = qword_1EE7237B0;
  if (!qword_1EE7237B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0120, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.PastThirtyDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237B0);
  }
  return result;
}

unint64_t sub_1A4607BD0()
{
  unint64_t result;

  result = qword_1EE7237B8;
  if (!qword_1EE7237B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0040, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237B8);
  }
  return result;
}

unint64_t sub_1A4607C18()
{
  unint64_t result;

  result = qword_1EE7237C0;
  if (!qword_1EE7237C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0068, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237C0);
  }
  return result;
}

unint64_t sub_1A4607C60()
{
  unint64_t result;

  result = qword_1EE7237C8;
  if (!qword_1EE7237C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFF88, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237C8);
  }
  return result;
}

unint64_t sub_1A4607CA8()
{
  unint64_t result;

  result = qword_1EE7237D0;
  if (!qword_1EE7237D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFFB0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237D0);
  }
  return result;
}

unint64_t sub_1A4607CF0()
{
  unint64_t result;

  result = qword_1EE7237D8;
  if (!qword_1EE7237D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0320, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237D8);
  }
  return result;
}

unint64_t sub_1A4607D38()
{
  unint64_t result;

  result = qword_1EE7237E0;
  if (!qword_1EE7237E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0348, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237E0);
  }
  return result;
}

unint64_t sub_1A4607D80()
{
  unint64_t result;

  result = qword_1EE7237E8;
  if (!qword_1EE7237E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFED0, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237E8);
  }
  return result;
}

unint64_t sub_1A4607DC8()
{
  unint64_t result;

  result = qword_1EE7237F0;
  if (!qword_1EE7237F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFEF8, &type metadata for REMRemindersListDataView.CompletedDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237F0);
  }
  return result;
}

unint64_t sub_1A4607E10()
{
  unint64_t result;

  result = qword_1ED241360;
  if (!qword_1ED241360)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFDC8, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241360);
  }
  return result;
}

unint64_t sub_1A4607E58()
{
  unint64_t result;

  result = qword_1ED241358;
  if (!qword_1ED241358)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFDF0, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241358);
  }
  return result;
}

unint64_t sub_1A4607EA0()
{
  unint64_t result;

  result = qword_1ED241348;
  if (!qword_1ED241348)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFD78, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241348);
  }
  return result;
}

unint64_t sub_1A4607EE8()
{
  unint64_t result;

  result = qword_1ED241340;
  if (!qword_1ED241340)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFDA0, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CompactCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241340);
  }
  return result;
}

unint64_t sub_1A4607F30()
{
  unint64_t result;

  result = qword_1ED241338;
  if (!qword_1ED241338)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFE18, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241338);
  }
  return result;
}

unint64_t sub_1A4607F78()
{
  unint64_t result;

  result = qword_1ED241330;
  if (!qword_1ED241330)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFE40, &type metadata for REMRemindersListDataView.ScheduledByDateBucketsStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241330);
  }
  return result;
}

unint64_t sub_1A4607FC0()
{
  unint64_t result;

  result = qword_1EE7237F8;
  if (!qword_1EE7237F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFC70, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7237F8);
  }
  return result;
}

unint64_t sub_1A4608008()
{
  unint64_t result;

  result = qword_1EE723800;
  if (!qword_1EE723800)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFC98, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AsNeededCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723800);
  }
  return result;
}

unint64_t sub_1A4608050()
{
  unint64_t result;

  result = qword_1EE723808;
  if (!qword_1EE723808)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFBB8, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723808);
  }
  return result;
}

unint64_t sub_1A4608098()
{
  unint64_t result;

  result = qword_1EE723810;
  if (!qword_1EE723810)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFBE0, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.AlwaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723810);
  }
  return result;
}

unint64_t sub_1A46080E0()
{
  unint64_t result;

  result = qword_1EE723818;
  if (!qword_1EE723818)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFCC0, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723818);
  }
  return result;
}

unint64_t sub_1A4608128()
{
  unint64_t result;

  result = qword_1EE723820;
  if (!qword_1EE723820)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFCE8, &type metadata for REMRemindersListDataView.ScheduledTodayGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723820);
  }
  return result;
}

unint64_t sub_1A4608170()
{
  unint64_t result;

  result = qword_1ED241150;
  if (!qword_1ED241150)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFB00, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241150);
  }
  return result;
}

unint64_t sub_1A46081B8()
{
  unint64_t result;

  result = qword_1ED241148;
  if (!qword_1ED241148)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFB28, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241148);
  }
  return result;
}

unint64_t sub_1A4608200()
{
  unint64_t result;

  result = qword_1ED241268;
  if (!qword_1ED241268)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF990, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241268);
  }
  return result;
}

unint64_t sub_1A4608248()
{
  unint64_t result;

  result = qword_1ED241260;
  if (!qword_1ED241260)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF9B8, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.PastDueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241260);
  }
  return result;
}

unint64_t sub_1A4608290()
{
  unint64_t result;

  result = qword_1ED241278;
  if (!qword_1ED241278)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF8D8, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241278);
  }
  return result;
}

unint64_t sub_1A46082D8()
{
  unint64_t result;

  result = qword_1ED241270;
  if (!qword_1ED241270)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF900, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.NextFiveDaysCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241270);
  }
  return result;
}

unint64_t sub_1A4608320()
{
  unint64_t result;

  result = qword_1ED241228;
  if (!qword_1ED241228)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF820, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241228);
  }
  return result;
}

unint64_t sub_1A4608368()
{
  unint64_t result;

  result = qword_1ED241220;
  if (!qword_1ED241220)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF848, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.DayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241220);
  }
  return result;
}

unint64_t sub_1A46083B0()
{
  unint64_t result;

  result = qword_1ED241250;
  if (!qword_1ED241250)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF768, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241250);
  }
  return result;
}

unint64_t sub_1A46083F8()
{
  unint64_t result;

  result = qword_1ED241248;
  if (!qword_1ED241248)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF790, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.MonthCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241248);
  }
  return result;
}

unint64_t sub_1A4608440()
{
  unint64_t result;

  result = qword_1ED241238;
  if (!qword_1ED241238)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF6B0, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241238);
  }
  return result;
}

unint64_t sub_1A4608488()
{
  unint64_t result;

  result = qword_1ED241230;
  if (!qword_1ED241230)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF6D8, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.YearCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241230);
  }
  return result;
}

unint64_t sub_1A46084D0()
{
  unint64_t result;

  result = qword_1ED241210;
  if (!qword_1ED241210)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFA48, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241210);
  }
  return result;
}

unint64_t sub_1A4608518()
{
  unint64_t result;

  result = qword_1ED241208;
  if (!qword_1ED241208)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AFA70, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241208);
  }
  return result;
}

unint64_t sub_1A4608560()
{
  unint64_t result;

  result = qword_1ED241168;
  if (!qword_1ED241168)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF5F8, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241168);
  }
  return result;
}

unint64_t sub_1A46085A8()
{
  unint64_t result;

  result = qword_1ED241160;
  if (!qword_1ED241160)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF620, &type metadata for REMRemindersListDataView.ScheduledDateBucketsModel.Day.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241160);
  }
  return result;
}

unint64_t sub_1A46085F0()
{
  unint64_t result;

  result = qword_1EE723828;
  if (!qword_1EE723828)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF540, &type metadata for REMRemindersListDataView.DatesModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723828);
  }
  return result;
}

unint64_t sub_1A4608638()
{
  unint64_t result;

  result = qword_1EE723830;
  if (!qword_1EE723830)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF568, &type metadata for REMRemindersListDataView.DatesModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723830);
  }
  return result;
}

unint64_t sub_1A4608680()
{
  unint64_t result;

  result = qword_1EE723838;
  if (!qword_1EE723838)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF488, &type metadata for REMRemindersListDataView.DatesModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723838);
  }
  return result;
}

unint64_t sub_1A46086C8()
{
  unint64_t result;

  result = qword_1EE723840;
  if (!qword_1EE723840)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF4B0, &type metadata for REMRemindersListDataView.DatesModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723840);
  }
  return result;
}

unint64_t sub_1A4608710()
{
  unint64_t result;

  result = qword_1EE723848;
  if (!qword_1EE723848)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF3D0, &type metadata for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723848);
  }
  return result;
}

unint64_t sub_1A4608758()
{
  unint64_t result;

  result = qword_1EE723850;
  if (!qword_1EE723850)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF3F8, &type metadata for REMRemindersListDataView.TodaySectionOrderingModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723850);
  }
  return result;
}

unint64_t sub_1A46087A0()
{
  unint64_t result;

  result = qword_1ED240AE8;
  if (!qword_1ED240AE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF318, &type metadata for REMRemindersListDataView.TodayGroupModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240AE8);
  }
  return result;
}

unint64_t sub_1A46087E8()
{
  unint64_t result;

  result = qword_1ED240AE0;
  if (!qword_1ED240AE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF340, &type metadata for REMRemindersListDataView.TodayGroupModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240AE0);
  }
  return result;
}

unint64_t sub_1A4608830()
{
  unint64_t result;

  result = qword_1ED240618[0];
  if (!qword_1ED240618[0])
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF260, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys);
    atomic_store(result, qword_1ED240618);
  }
  return result;
}

unint64_t sub_1A4608878()
{
  unint64_t result;

  result = qword_1ED240610;
  if (!qword_1ED240610)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF288, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240610);
  }
  return result;
}

unint64_t sub_1A46088C0()
{
  unint64_t result;

  result = qword_1ED240578;
  if (!qword_1ED240578)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF158, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240578);
  }
  return result;
}

unint64_t sub_1A4608908()
{
  unint64_t result;

  result = qword_1ED240570;
  if (!qword_1ED240570)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF180, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240570);
  }
  return result;
}

unint64_t sub_1A4608950()
{
  unint64_t result;

  result = qword_1ED240568;
  if (!qword_1ED240568)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF108, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240568);
  }
  return result;
}

unint64_t sub_1A4608998()
{
  unint64_t result;

  result = qword_1ED240560;
  if (!qword_1ED240560)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF130, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.BeforeTodayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240560);
  }
  return result;
}

unint64_t sub_1A46089E0()
{
  unint64_t result;

  result = qword_1ED240590;
  if (!qword_1ED240590)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF0B8, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240590);
  }
  return result;
}

unint64_t sub_1A4608A28()
{
  unint64_t result;

  result = qword_1ED240588;
  if (!qword_1ED240588)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF0E0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TodayAllDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240588);
  }
  return result;
}

unint64_t sub_1A4608A70()
{
  unint64_t result;

  result = qword_1ED2405D0;
  if (!qword_1ED2405D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF068, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405D0);
  }
  return result;
}

unint64_t sub_1A4608AB8()
{
  unint64_t result;

  result = qword_1ED2405C8;
  if (!qword_1ED2405C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF090, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.MorningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405C8);
  }
  return result;
}

unint64_t sub_1A4608B00()
{
  unint64_t result;

  result = qword_1ED240600;
  if (!qword_1ED240600)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF018, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240600);
  }
  return result;
}

unint64_t sub_1A4608B48()
{
  unint64_t result;

  result = qword_1ED2405F8;
  if (!qword_1ED2405F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF040, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.AfternoonCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405F8);
  }
  return result;
}

unint64_t sub_1A4608B90()
{
  unint64_t result;

  result = qword_1ED2405E8;
  if (!qword_1ED2405E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEFC8, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405E8);
  }
  return result;
}

unint64_t sub_1A4608BD8()
{
  unint64_t result;

  result = qword_1ED2405E0;
  if (!qword_1ED2405E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEFF0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.TonightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405E0);
  }
  return result;
}

unint64_t sub_1A4608C20()
{
  unint64_t result;

  result = qword_1ED2405B8;
  if (!qword_1ED2405B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEF78, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405B8);
  }
  return result;
}

unint64_t sub_1A4608C68()
{
  unint64_t result;

  result = qword_1ED2405B0;
  if (!qword_1ED2405B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEFA0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.NearbyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405B0);
  }
  return result;
}

unint64_t sub_1A4608CB0()
{
  unint64_t result;

  result = qword_1ED241888[0];
  if (!qword_1ED241888[0])
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEF28, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys);
    atomic_store(result, qword_1ED241888);
  }
  return result;
}

unint64_t sub_1A4608CF8()
{
  unint64_t result;

  result = qword_1ED241938;
  if (!qword_1ED241938)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEF50, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241938);
  }
  return result;
}

unint64_t sub_1A4608D40()
{
  unint64_t result;

  result = qword_1ED2405A8;
  if (!qword_1ED2405A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF1A8, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405A8);
  }
  return result;
}

unint64_t sub_1A4608D88()
{
  unint64_t result;

  result = qword_1ED2405A0;
  if (!qword_1ED2405A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AF1D0, &type metadata for REMRemindersListDataView.TodayGroupModel.Group.GroupType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2405A0);
  }
  return result;
}

unint64_t sub_1A4608DD0()
{
  unint64_t result;

  result = qword_1EE723858;
  if (!qword_1EE723858)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEE70, &type metadata for REMRemindersListDataView.GroupSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723858);
  }
  return result;
}

unint64_t sub_1A4608E18()
{
  unint64_t result;

  result = qword_1EE723860;
  if (!qword_1EE723860)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEE98, &type metadata for REMRemindersListDataView.GroupSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723860);
  }
  return result;
}

unint64_t sub_1A4608E60()
{
  unint64_t result;

  result = qword_1ED241478;
  if (!qword_1ED241478)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEDB8, &type metadata for REMRemindersListDataView.ListsSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241478);
  }
  return result;
}

unint64_t sub_1A4608EA8()
{
  unint64_t result;

  result = qword_1ED241470;
  if (!qword_1ED241470)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEDE0, &type metadata for REMRemindersListDataView.ListsSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241470);
  }
  return result;
}

unint64_t sub_1A4608EF0()
{
  unint64_t result;

  result = qword_1ED241460;
  if (!qword_1ED241460)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AED00, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241460);
  }
  return result;
}

unint64_t sub_1A4608F38()
{
  unint64_t result;

  result = qword_1ED241458;
  if (!qword_1ED241458)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AED28, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241458);
  }
  return result;
}

unint64_t sub_1A4608F80()
{
  unint64_t result;

  result = qword_1EE723868;
  if (!qword_1EE723868)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEBF8, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723868);
  }
  return result;
}

unint64_t sub_1A4608FC8()
{
  unint64_t result;

  result = qword_1EE723870;
  if (!qword_1EE723870)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEC20, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.RegularCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723870);
  }
  return result;
}

unint64_t sub_1A4609010()
{
  unint64_t result;

  result = qword_1EE723878;
  if (!qword_1EE723878)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEBA8, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723878);
  }
  return result;
}

unint64_t sub_1A4609058()
{
  unint64_t result;

  result = qword_1EE723880;
  if (!qword_1EE723880)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEBD0, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CustomSmartListCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723880);
  }
  return result;
}

unint64_t sub_1A46090A0()
{
  unint64_t result;

  result = qword_1EE723888;
  if (!qword_1EE723888)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEB58, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723888);
  }
  return result;
}

unint64_t sub_1A46090E8()
{
  unint64_t result;

  result = qword_1EE723890;
  if (!qword_1EE723890)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEB80, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.GroceryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723890);
  }
  return result;
}

unint64_t sub_1A4609130()
{
  unint64_t result;

  result = qword_1EE723898;
  if (!qword_1EE723898)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEC48, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723898);
  }
  return result;
}

unint64_t sub_1A4609178()
{
  unint64_t result;

  result = qword_1EE7238A0;
  if (!qword_1EE7238A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEC70, &type metadata for REMRemindersListDataView.ListsSectionsModel.List.ListType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238A0);
  }
  return result;
}

unint64_t sub_1A46091C0()
{
  unint64_t result;

  result = qword_1EE7238A8;
  if (!qword_1EE7238A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEAA0, &type metadata for REMRemindersListDataView.TemplateSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238A8);
  }
  return result;
}

unint64_t sub_1A4609208()
{
  unint64_t result;

  result = qword_1EE7238B0;
  if (!qword_1EE7238B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEAC8, &type metadata for REMRemindersListDataView.TemplateSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238B0);
  }
  return result;
}

unint64_t sub_1A4609250()
{
  unint64_t result;

  result = qword_1EE7238B8;
  if (!qword_1EE7238B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE9E8, &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238B8);
  }
  return result;
}

unint64_t sub_1A4609298()
{
  unint64_t result;

  result = qword_1EE7238C0;
  if (!qword_1EE7238C0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AEA10, &type metadata for REMRemindersListDataView.CustomSmartListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238C0);
  }
  return result;
}

unint64_t sub_1A46092E0()
{
  unint64_t result;

  result = qword_1ED240978;
  if (!qword_1ED240978)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE930, &type metadata for REMRemindersListDataView.ListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240978);
  }
  return result;
}

unint64_t sub_1A4609328()
{
  unint64_t result;

  result = qword_1ED240970;
  if (!qword_1ED240970)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE958, &type metadata for REMRemindersListDataView.ListSectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240970);
  }
  return result;
}

unint64_t sub_1A4609370()
{
  unint64_t result;

  result = qword_1ED240AC0;
  if (!qword_1ED240AC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE878, &type metadata for REMRemindersListDataView.SectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240AC0);
  }
  return result;
}

unint64_t sub_1A46093B8()
{
  unint64_t result;

  result = qword_1ED240AB8;
  if (!qword_1ED240AB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE8A0, &type metadata for REMRemindersListDataView.SectionsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240AB8);
  }
  return result;
}

unint64_t sub_1A4609400()
{
  unint64_t result;

  result = qword_1ED240A78;
  if (!qword_1ED240A78)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE7C0, &type metadata for REMRemindersListDataView.SectionLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A78);
  }
  return result;
}

unint64_t sub_1A4609448()
{
  unint64_t result;

  result = qword_1ED240A70;
  if (!qword_1ED240A70)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE7E8, &type metadata for REMRemindersListDataView.SectionLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A70);
  }
  return result;
}

unint64_t sub_1A4609490()
{
  unint64_t result;

  result = qword_1ED240A48;
  if (!qword_1ED240A48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE650, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A48);
  }
  return result;
}

unint64_t sub_1A46094D8()
{
  unint64_t result;

  result = qword_1ED240A40;
  if (!qword_1ED240A40)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE678, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A40);
  }
  return result;
}

unint64_t sub_1A4609520()
{
  unint64_t result;

  result = qword_1ED240A60;
  if (!qword_1ED240A60)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE600, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A60);
  }
  return result;
}

unint64_t sub_1A4609568()
{
  unint64_t result;

  result = qword_1ED240A58;
  if (!qword_1ED240A58)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE628, &type metadata for REMRemindersListDataView.SectionLite.SectionType.SectionlessCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A58);
  }
  return result;
}

unint64_t sub_1A46095B0()
{
  unint64_t result;

  result = qword_1ED240A38;
  if (!qword_1ED240A38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE708, &type metadata for REMRemindersListDataView.SectionLite.SectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A38);
  }
  return result;
}

unint64_t sub_1A46095F8()
{
  unint64_t result;

  result = qword_1ED240A30;
  if (!qword_1ED240A30)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE730, &type metadata for REMRemindersListDataView.SectionLite.SectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A30);
  }
  return result;
}

unint64_t sub_1A4609640()
{
  unint64_t result;

  result = qword_1ED242D20;
  if (!qword_1ED242D20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE548, &type metadata for REMRemindersListDataView.Diff.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242D20);
  }
  return result;
}

unint64_t sub_1A4609688()
{
  unint64_t result;

  result = qword_1ED242D18;
  if (!qword_1ED242D18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE570, &type metadata for REMRemindersListDataView.Diff.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242D18);
  }
  return result;
}

unint64_t sub_1A46096D0()
{
  unint64_t result;

  result = qword_1EE7238C8;
  if (!qword_1EE7238C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE490, &type metadata for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238C8);
  }
  return result;
}

unint64_t sub_1A4609718()
{
  unint64_t result;

  result = qword_1EE7238D0;
  if (!qword_1EE7238D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE4B8, &type metadata for REMRemindersListDataView.DateBucketsModel.RepresentativeDate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238D0);
  }
  return result;
}

unint64_t sub_1A4609760()
{
  unint64_t result;

  result = qword_1EE7238D8;
  if (!qword_1EE7238D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE388, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238D8);
  }
  return result;
}

unint64_t sub_1A46097A8()
{
  unint64_t result;

  result = qword_1EE7238E0;
  if (!qword_1EE7238E0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE3B0, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.RestOfUnlessFirstDayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238E0);
  }
  return result;
}

unint64_t sub_1A46097F0()
{
  unint64_t result;

  result = qword_1EE7238E8;
  if (!qword_1EE7238E8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE338, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238E8);
  }
  return result;
}

unint64_t sub_1A4609838()
{
  unint64_t result;

  result = qword_1EE7238F0;
  if (!qword_1EE7238F0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE360, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.AllOfCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238F0);
  }
  return result;
}

unint64_t sub_1A4609880()
{
  unint64_t result;

  result = qword_1EE7238F8;
  if (!qword_1EE7238F8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE3D8, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7238F8);
  }
  return result;
}

unint64_t sub_1A46098C8()
{
  unint64_t result;

  result = qword_1EE723900;
  if (!qword_1EE723900)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE400, &type metadata for REMRemindersListDataView.DateBucketsModel.DateFormattingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723900);
  }
  return result;
}

unint64_t sub_1A4609910()
{
  unint64_t result;

  result = qword_1EE723908;
  if (!qword_1EE723908)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE280, &type metadata for REMRemindersListDataView.TemplateModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723908);
  }
  return result;
}

unint64_t sub_1A4609958()
{
  unint64_t result;

  result = qword_1EE723910;
  if (!qword_1EE723910)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE2A8, &type metadata for REMRemindersListDataView.TemplateModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723910);
  }
  return result;
}

unint64_t sub_1A46099A0()
{
  unint64_t result;

  result = qword_1EE723918;
  if (!qword_1EE723918)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE1C8, &type metadata for REMRemindersListDataView.TaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723918);
  }
  return result;
}

unint64_t sub_1A46099E8()
{
  unint64_t result;

  result = qword_1EE723920;
  if (!qword_1EE723920)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE1F0, &type metadata for REMRemindersListDataView.TaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723920);
  }
  return result;
}

unint64_t sub_1A4609A30()
{
  unint64_t result;

  result = qword_1EE723928;
  if (!qword_1EE723928)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE110, &type metadata for REMRemindersListDataView.AssignedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723928);
  }
  return result;
}

unint64_t sub_1A4609A78()
{
  unint64_t result;

  result = qword_1EE723930;
  if (!qword_1EE723930)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE138, &type metadata for REMRemindersListDataView.AssignedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723930);
  }
  return result;
}

unint64_t sub_1A4609AC0()
{
  unint64_t result;

  result = qword_1ED240A90;
  if (!qword_1ED240A90)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE058, &type metadata for REMRemindersListDataView.FlaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A90);
  }
  return result;
}

unint64_t sub_1A4609B08()
{
  unint64_t result;

  result = qword_1ED240A88;
  if (!qword_1ED240A88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AE080, &type metadata for REMRemindersListDataView.FlaggedModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240A88);
  }
  return result;
}

unint64_t sub_1A4609B50()
{
  unint64_t result;

  result = qword_1ED241640;
  if (!qword_1ED241640)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADFA0, &type metadata for REMRemindersListDataView.ListsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241640);
  }
  return result;
}

unint64_t sub_1A4609B98()
{
  unint64_t result;

  result = qword_1ED241638;
  if (!qword_1ED241638)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADFC8, &type metadata for REMRemindersListDataView.ListsModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241638);
  }
  return result;
}

unint64_t sub_1A4609BE0()
{
  unint64_t result;

  result = qword_1ED241658;
  if (!qword_1ED241658)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADEE8, &type metadata for REMRemindersListDataView.ListsModel.Sublist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241658);
  }
  return result;
}

unint64_t sub_1A4609C28()
{
  unint64_t result;

  result = qword_1ED241650;
  if (!qword_1ED241650)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADF10, &type metadata for REMRemindersListDataView.ListsModel.Sublist.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241650);
  }
  return result;
}

unint64_t sub_1A4609C70()
{
  unint64_t result;

  result = qword_1ED242D40;
  if (!qword_1ED242D40)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADE30, &type metadata for REMRemindersListDataView.FlatModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242D40);
  }
  return result;
}

unint64_t sub_1A4609CB8()
{
  unint64_t result;

  result = qword_1ED242D38;
  if (!qword_1ED242D38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADE58, &type metadata for REMRemindersListDataView.FlatModel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242D38);
  }
  return result;
}

unint64_t sub_1A4609D00()
{
  unint64_t result;

  result = qword_1ED23F408;
  if (!qword_1ED23F408)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADD78, &type metadata for REMRemindersListDataView.CountByCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23F408);
  }
  return result;
}

unint64_t sub_1A4609D48()
{
  unint64_t result;

  result = qword_1ED23F400;
  if (!qword_1ED23F400)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADDA0, &type metadata for REMRemindersListDataView.CountByCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED23F400);
  }
  return result;
}

unint64_t sub_1A4609D90()
{
  unint64_t result;

  result = qword_1ED242AA0;
  if (!qword_1ED242AA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADCC0, &type metadata for REMRemindersListDataView.ReminderLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AA0);
  }
  return result;
}

unint64_t sub_1A4609DD8()
{
  unint64_t result;

  result = qword_1ED242A98;
  if (!qword_1ED242A98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADCE8, &type metadata for REMRemindersListDataView.ReminderLite.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242A98);
  }
  return result;
}

unint64_t sub_1A4609E20()
{
  unint64_t result;

  result = qword_1EE723938;
  if (!qword_1EE723938)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADBB8, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723938);
  }
  return result;
}

unint64_t sub_1A4609E68()
{
  unint64_t result;

  result = qword_1EE723940;
  if (!qword_1EE723940)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADBE0, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AllLabelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723940);
  }
  return result;
}

unint64_t sub_1A4609EB0()
{
  unint64_t result;

  result = qword_1EE723948;
  if (!qword_1EE723948)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADB68, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723948);
  }
  return result;
}

unint64_t sub_1A4609EF8()
{
  unint64_t result;

  result = qword_1EE723950;
  if (!qword_1EE723950)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADB90, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.NoLabelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723950);
  }
  return result;
}

unint64_t sub_1A4609F40()
{
  unint64_t result;

  result = qword_1EE723958;
  if (!qword_1EE723958)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADAB0, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723958);
  }
  return result;
}

unint64_t sub_1A4609F88()
{
  unint64_t result;

  result = qword_1EE723960;
  if (!qword_1EE723960)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADAD8, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.AndCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723960);
  }
  return result;
}

unint64_t sub_1A4609FD0()
{
  unint64_t result;

  result = qword_1EE723968;
  if (!qword_1EE723968)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD9F8, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723968);
  }
  return result;
}

unint64_t sub_1A460A018()
{
  unint64_t result;

  result = qword_1EE723970;
  if (!qword_1EE723970)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADA20, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.OrCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723970);
  }
  return result;
}

unint64_t sub_1A460A060()
{
  unint64_t result;

  result = qword_1EE723978;
  if (!qword_1EE723978)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADC08, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723978);
  }
  return result;
}

unint64_t sub_1A460A0A8()
{
  unint64_t result;

  result = qword_1EE723980;
  if (!qword_1EE723980)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46ADC30, &type metadata for REMRemindersListDataView.HashtagLabelPredicate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723980);
  }
  return result;
}

unint64_t sub_1A460A0F0()
{
  unint64_t result;

  result = qword_1ED240BB0;
  if (!qword_1ED240BB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD940, &type metadata for REMRemindersListDataView.FetchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240BB0);
  }
  return result;
}

unint64_t sub_1A460A138()
{
  unint64_t result;

  result = qword_1ED240BA8;
  if (!qword_1ED240BA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD968, &type metadata for REMRemindersListDataView.FetchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240BA8);
  }
  return result;
}

unint64_t sub_1A460A180()
{
  unint64_t result;

  result = qword_1ED242AE8;
  if (!qword_1ED242AE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD7B0, &type metadata for REMRemindersListDataView.ShowCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AE8);
  }
  return result;
}

unint64_t sub_1A460A1C8()
{
  unint64_t result;

  result = qword_1ED242AE0;
  if (!qword_1ED242AE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD7D8, &type metadata for REMRemindersListDataView.ShowCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AE0);
  }
  return result;
}

unint64_t sub_1A460A210()
{
  unint64_t result;

  result = qword_1ED242AC0;
  if (!qword_1ED242AC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD620, &type metadata for REMRemindersListDataView.SortingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AC0);
  }
  return result;
}

unint64_t sub_1A460A258()
{
  unint64_t result;

  result = qword_1ED242AB8;
  if (!qword_1ED242AB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD648, &type metadata for REMRemindersListDataView.SortingStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED242AB8);
  }
  return result;
}

unint64_t sub_1A460A29C()
{
  unint64_t result;

  result = qword_1ED242AC8;
  if (!qword_1ED242AC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD710, &type metadata for REMRemindersListDataView.SortingStyle.Base);
    atomic_store(result, (unint64_t *)&qword_1ED242AC8);
  }
  return result;
}

uint64_t sub_1A460A2E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x53676E6974726F73 && a2 == 0xEC000000656C7974;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x706D6F43776F6873 && a2 == 0xED0000646574656CLL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F43746E756F63 && a2 == 0xEE00646574656C70 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A46C22D0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6275536863746566 && a2 == 0xED0000736B736174)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460A578(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6562614C6C6C61 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6562614C6F6ELL && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6581857 && a2 == 0xE300000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 29295 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A460A714(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564756C636E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564756C637865 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460A7F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44497463656A626FLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706D6F437369 && a2 == 0xEB00000000646574 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x436B736174627573 && a2 == 0xEC000000746E756FLL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736B736174627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A460A9D8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6574656C706D6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C706D6F636E69 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460AAE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A46C22F0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460AD04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44497473696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E7473696CLL && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F437473696CLL && a2 == 0xE900000000000072 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A46C2360)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460AF24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A46C2380 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A46C23A0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460B110(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65646F4D74616C66 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C23C0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460B208(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646F4D737473696CLL && a2 == 0xEA00000000006C65;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001A46C23E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460B300(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65646F4D74616C66 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2400 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2420 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001A46C2440 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D53646567676174 && a2 == 0xEF7473694C747261 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2460)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A460B58C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A46C2480 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2460)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A460B6D0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x80000001A46C24A0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x664F6C6C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460B7B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697474616D726F66 && a2 == 0xEF656C797453676ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460B8B8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001A46C24C0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001A46C24E0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A46C2500 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A46C2520 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001A46C2540)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460BAA8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656E6F6974636573 && a2 == 0xE900000000000064;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6E6F6974636573 && a2 == 0xEB00000000737365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460BBBC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x496E6F6974636573 && a2 == 0xE900000000000044;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6163696E6F6E6163 && a2 == 0xED0000656D614E6CLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A460BD58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460BE44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001A46C22F0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460C06C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F6974636573 && a2 == 0xED00006C65646F4DLL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1953720684 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460C170(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F6974636573 && a2 == 0xED00006C65646F4DLL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73694C7472616D73 && a2 == 0xE900000000000074 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2460)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A460C2F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x736E6F6974636573 && a2 == 0xED00006C65646F4DLL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001A46C2480 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2460)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A460C45C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616C75676572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D536D6F74737563 && a2 == 0xEF7473694C747261 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797265636F7267 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A460C5D4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x44497473696CLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E7473696CLL && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C6F437473696CLL && a2 == 0xE900000000000072 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657079547473696CLL && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x736E6F6974636573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460C7F4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737473696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A46C2380 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001A46C23A0 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460C9E0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746365537473696CLL && a2 == 0xEC000000736E6F69;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70756F7267 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460CAE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7961646F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F5465726F666562 && a2 == 0xEB00000000796164 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6C417961646F74 && a2 == 0xEB00000000796144 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696E726F6DLL && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F6F6E7265746661 && a2 == 0xE90000000000006ELL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746867696E6F74 && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x79627261656ELL && a2 == 0xE600000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1A460CE3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x70795470756F7267 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460CF3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4C746E6572727563 && a2 == 0xEF6E6F697461636FLL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x616D537961646F74 && a2 == 0xEE007473694C7472)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1A460D214(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961646F547369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A460D364(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7370756F7267 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001A46C2380 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A460D4F8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65754474736170 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657669467478656ELL && a2 == 0xEC00000073796144 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7954788 && a2 == 0xE300000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1918985593 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460D704(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656465654E7361 && a2 == 0xE800000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737961776C61 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460D7EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x72616C75676572 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746361706D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460D8DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460D9C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7954788 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576655374736170 && a2 == 0xED0000737961446ELL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7269685474736170 && a2 == 0xEE00737961447974 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x68746E6F6DLL && a2 == 0xE500000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1918985593 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A460DC04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460DCF0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A46C2570 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1937334628 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A460DDCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7374656B637562 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265646E696D6572 && a2 == 0xEE00746E756F4373 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001A46C2320 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001A46C2340)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A460DF9C()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1A460DFE4()
{
  unint64_t result;

  result = qword_1ED242AF0;
  if (!qword_1ED242AF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46AD8A0, &type metadata for REMRemindersListDataView.ShowCompleted.Base);
    atomic_store(result, (unint64_t *)&qword_1ED242AF0);
  }
  return result;
}

uint64_t sub_1A460E028()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_1A460E070()
{
  unint64_t result;

  result = qword_1ED242BB8;
  if (!qword_1ED242BB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B0580, &type metadata for REMRemindersListDataView.RemindersPrefetch.Base);
    atomic_store(result, (unint64_t *)&qword_1ED242BB8);
  }
  return result;
}

uint64_t sub_1A460E0B4()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1A460E0F8()
{
  unint64_t result;

  result = qword_1ED242AD0;
  if (!qword_1ED242AD0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.FetchSubtasks, &type metadata for REMRemindersListDataView.FetchSubtasks);
    atomic_store(result, (unint64_t *)&qword_1ED242AD0);
  }
  return result;
}

unint64_t sub_1A460E13C()
{
  unint64_t result;

  result = qword_1ED240AF0;
  if (!qword_1ED240AF0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMRemindersListDataView.SortingDirection, &type metadata for REMRemindersListDataView.SortingDirection);
    atomic_store(result, (unint64_t *)&qword_1ED240AF0);
  }
  return result;
}

uint64_t sub_1A460E23C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1A445A8D8(0, v1, 0);
  v2 = v23;
  result = sub_1A45156A8(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    result = swift_beginAccess();
    v13 = *(_QWORD *)(v12 + 120);
    v15 = *(_QWORD *)(v23 + 16);
    v14 = *(_QWORD *)(v23 + 24);
    if (v15 >= v14 >> 1)
      result = sub_1A445A8D8(v14 > 1, v15 + 1, 1);
    *(_QWORD *)(v23 + 16) = v15 + 1;
    *(_QWORD *)(v23 + 8 * v15 + 32) = v13;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v16 = *(_QWORD *)(v8 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v8 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A460E44C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE723988);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE723988);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t RDIntentClusterModel.TuningSnapshot.bestK.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t RDIntentClusterModel.TuningSnapshot.intentionalWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RDIntentClusterModel.TuningSnapshot.kmeansTuningHistory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 32);
  v2 = *(_QWORD *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t RDIntentClusterModel.ModelSnapshot.intentionalWords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RDIntentClusterModel.ModelSnapshot.kmeansMetrics.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[2];
  v3 = v1[3];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

unint64_t static RDIntentClusterModel.modelFilename.getter()
{
  return 0xD000000000000029;
}

uint64_t static RDIntentClusterModel.modelByTraining(_:writeTo:k:embedding:randomGenerator:filename:)(_QWORD *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t isUniquelyReferenced_nonNull_native, unint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  _QWORD *v31;
  uint64_t result;
  _QWORD *v33;
  NSObject *v34;
  uint64_t v35;
  _BOOL4 v36;
  uint8_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _BOOL8 v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t *v74;
  __int128 v75;
  uint64_t v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  objc_class *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD v107[2];
  __int128 v108;
  uint64_t v109;
  _QWORD *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  _QWORD *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  _QWORD *v126;
  _QWORD *p_isa;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;

  v9 = v8;
  v120 = a8;
  v119 = a7;
  v123 = a3;
  v115 = a1;
  v121 = sub_1A468FF7C();
  v14 = *(_QWORD *)(v121 - 8);
  v15 = MEMORY[0x1E0C80A78](v121);
  v116 = (char *)v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v117 = (char *)v107 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (_QWORD *)((char *)v107 - v20);
  MEMORY[0x1E0C80A78](v19);
  v122 = (char *)v107 - v22;
  v23 = sub_1A44BB618(a2);
  LOBYTE(v130) = 1;
  type metadata accessor for PointCloud();
  swift_allocObject();
  v24 = PointCloud.init(points:distanceCalculator:)(v23, (char *)&v130);
  swift_beginAccess();
  if (*(_QWORD *)(v24 + 40) < a4)
  {
    v25 = objc_opt_self();
    *(_QWORD *)&v130 = 0;
    *((_QWORD *)&v130 + 1) = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    v129 = *(_QWORD *)(v24 + 40);
    sub_1A46918D8();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v26 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    -[NSObject internalErrorWithDebugDescription:](v25, sel_internalErrorWithDebugDescription_, v26);

    swift_willThrow();
LABEL_7:
    swift_release();
    return (uint64_t)v25;
  }
  if (qword_1EE71C1D0 != -1)
LABEL_51:
    swift_once();
  v27 = sub_1A4690318();
  v118 = __swift_project_value_buffer(v27, (uint64_t)qword_1EE723988);
  v25 = sub_1A469030C();
  v28 = sub_1A4691008();
  v29 = os_log_type_enabled(v25, v28);
  v113 = v14;
  v126 = (_QWORD *)isUniquelyReferenced_nonNull_native;
  if (v29)
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v30 = 134349056;
    *(_QWORD *)&v130 = a4;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v25, v28, "running k-Mean with k = %{public}ld", v30, 0xCu);
    MEMORY[0x1A85A0114](v30, -1, -1);
  }

  sub_1A443E484(a6, (uint64_t)&v130);
  type metadata accessor for KMeans();
  swift_allocObject();
  swift_retain();
  v31 = KMeans.init(k:pointCloud:maxIter:tolerance:randomGenerator:)(a4, v24, 100, (uint64_t)&v130, 0.0001);
  if (v9)
    goto LABEL_7;
  v33 = v31;
  v110 = 0;
  swift_retain();
  v34 = sub_1A469030C();
  v35 = sub_1A4691008();
  v36 = os_log_type_enabled(v34, (os_log_type_t)v35);
  v114 = v33;
  if (v36)
  {
    v37 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v37 = 134349056;
    swift_beginAccess();
    *(_QWORD *)&v130 = v114[15];
    v33 = v114;
    sub_1A46911D0();
    swift_release();
    _os_log_impl(&dword_1A442D000, v34, (os_log_type_t)v35, "k-Mean mse: %{public}f", v37, 0xCu);
    MEMORY[0x1A85A0114](v37, -1, -1);

  }
  else
  {

    swift_release();
  }
  v109 = v24;
  v38 = *(_QWORD *)(v33[12] + 16);
  v107[0] = v21;
  v125 = v38;
  if (!v38)
  {
    v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v128 = MEMORY[0x1E0DEE9E0];
LABEL_31:
    swift_beginAccess();
    v66 = v33 + 13;
    v64 = v33[13];
    v65 = v66[1];
    v67 = v126;
    if (v21[2] && *(_QWORD *)(v65 + 16) && *(_QWORD *)(v64 + 16))
    {
      v68 = v64;
      v70 = v21[4];
      v69 = v21[5];
      v112 = v68 + 32;
      v71 = v65;
      v72 = *(_QWORD *)(v65 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v124 = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v73 = 0;
      v74 = v21 + 7;
      v125 = v71;
      v111 = v71 + 40;
      *(_QWORD *)&v75 = 136315650;
      v108 = v75;
      v107[1] = MEMORY[0x1E0DEE9B8] + 8;
      p_isa = v21;
      while (1)
      {
        v76 = *(_QWORD *)(v112 + 8 * v73);
        swift_bridgeObjectRetain();
        v77 = sub_1A469030C();
        v78 = sub_1A4691008();
        if (os_log_type_enabled(v77, v78))
        {
          v79 = swift_slowAlloc();
          v80 = swift_slowAlloc();
          *(_QWORD *)&v130 = v80;
          *(_DWORD *)v79 = v108;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v79 + 4) = sub_1A4431120(v70, v69, (uint64_t *)&v130);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v79 + 12) = 2050;
          *(_QWORD *)(v79 + 14) = v72;
          *(_WORD *)(v79 + 22) = 2050;
          *(_QWORD *)(v79 + 24) = v76;
          _os_log_impl(&dword_1A442D000, v77, v78, "Cluster %s has %{public}ld samples with variance %{public}f", (uint8_t *)v79, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1A85A0114](v80, -1, -1);
          v81 = v79;
          v67 = v126;
          MEMORY[0x1A85A0114](v81, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v82 = v73 + 1;
        v21 = p_isa;
        v83 = p_isa[2];
        if (v73 + 1 == v83)
          break;
        if (v73 + 1 >= v83)
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        v84 = *(_QWORD *)(v125 + 16);
        if (v82 == v84)
          break;
        if (v82 >= v84)
          goto LABEL_53;
        v85 = *(_QWORD *)(v124 + 16);
        if (v82 == v85)
          break;
        v70 = *(v74 - 1);
        v69 = *v74;
        v72 = *(_QWORD *)(v111 + 8 * v73);
        swift_bridgeObjectRetain();
        v74 += 2;
        ++v73;
        if (v82 >= v85)
        {
          __break(1u);
          goto LABEL_45;
        }
      }
    }
    else
    {
LABEL_45:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v125 = 0x80000001A46C2590;
    swift_bridgeObjectRetain();
    v86 = v122;
    sub_1A468FEF8();
    swift_bridgeObjectRelease();
    sub_1A46107A8();
    v87 = v110;
    sub_1A46107E4(v128);
    v126 = v87;
    swift_bridgeObjectRelease();
    v88 = v67;
    v89 = v67[3];
    v90 = v67[4];
    __swift_project_boxed_opaque_existential_1(v88, v89);
    v91 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v90);
    v25 = v21;
    v92 = v88[3];
    v93 = v88[4];
    __swift_project_boxed_opaque_existential_1(v88, v92);
    (*(void (**)(uint64_t, uint64_t))(v93 + 16))(v92, v93);
    v94 = v126;
    sub_1A4690F78();
    if (v94)
    {
      swift_release();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v113 + 8))(v86, v121);
      swift_bridgeObjectRelease();
    }
    else
    {
      p_isa = &v25->isa;
      swift_release();

      v95 = v113;
      v96 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
      v97 = v107[0];
      v98 = v121;
      v96((char *)v107[0], v123, v121);
      sub_1A443E484((uint64_t)v88, (uint64_t)&v130);
      v99 = v117;
      sub_1A468FEF8();
      v100 = (uint64_t)v116;
      v96(v116, (uint64_t)v99, v98);
      v101 = (objc_class *)sub_1A4610428(v100);
      v102 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
      v102(v97, v98);
      v102((uint64_t)v99, v98);
      v25 = swift_allocObject();
      v25[2].isa = v101;
      sub_1A44D3510(&v130, (uint64_t)&v25[3]);
      v102((uint64_t)v122, v98);
      swift_release();
      v103 = v114[13];
      v104 = v114[14];
      v105 = v114[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v106 = v115;
      *v115 = p_isa;
      v106[1] = v103;
      v106[2] = v104;
      v106[3] = v105;
    }
    return (uint64_t)v25;
  }
  v39 = swift_bridgeObjectRetain();
  v24 = 0;
  v21 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v128 = MEMORY[0x1E0DEE9E0];
  v40 = 32;
  v124 = v39;
  while (1)
  {
    p_isa = (_QWORD *)v40;
    a4 = *(_QWORD *)(v39 + v40);
    *(_QWORD *)&v130 = v24;
    swift_retain();
    *(_QWORD *)&v130 = sub_1A46918D8();
    *((_QWORD *)&v130 + 1) = v42;
    swift_bridgeObjectRetain();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    v43 = v130;
    v44 = v126[3];
    v45 = v126[4];
    __swift_project_boxed_opaque_existential_1(v126, v44);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 56);
    v47 = swift_retain();
    v46(v47, v44, v45);
    swift_release();
    v130 = v43;
    swift_bridgeObjectRetain();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v48 = *((_QWORD *)&v130 + 1);
    v14 = v130;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v21 = sub_1A4438920(0, v21[2] + 1, 1, v21);
    v50 = v21[2];
    v49 = v21[3];
    if (v50 >= v49 >> 1)
      v21 = sub_1A4438920((_QWORD *)(v49 > 1), v50 + 1, 1, v21);
    v21[2] = v50 + 1;
    v9 = v21;
    v51 = &v21[2 * v50];
    v51[4] = v14;
    v51[5] = v48;
    swift_retain();
    v52 = v128;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v130 = v52;
    a6 = sub_1A443E4C8(v14, v48);
    v54 = *(_QWORD *)(v52 + 16);
    v55 = (v53 & 1) == 0;
    v56 = v54 + v55;
    if (__OFADD__(v54, v55))
    {
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v21 = v53;
    if (*(_QWORD *)(v52 + 24) < v56)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_1A444A344();
LABEL_26:
    v59 = (_QWORD *)v130;
    v128 = v130;
    if ((v21 & 1) != 0)
    {
      v41 = *(_QWORD *)(v130 + 56);
      swift_release();
      *(_QWORD *)(v41 + 8 * a6) = a4;
    }
    else
    {
      *(_QWORD *)(v130 + 8 * (a6 >> 6) + 64) |= 1 << a6;
      v60 = (uint64_t *)(v59[6] + 16 * a6);
      *v60 = v14;
      v60[1] = v48;
      *(_QWORD *)(v59[7] + 8 * a6) = a4;
      v61 = v59[2];
      v62 = __OFADD__(v61, 1);
      v63 = v61 + 1;
      if (v62)
        goto LABEL_50;
      v59[2] = v63;
      swift_bridgeObjectRetain();
    }
    ++v24;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = (uint64_t)(p_isa + 3);
    v39 = v124;
    v21 = v9;
    if (v125 == v24)
    {
      swift_bridgeObjectRelease();
      v33 = v114;
      goto LABEL_31;
    }
  }
  sub_1A4446814(v56, v43);
  v57 = sub_1A443E4C8(v14, v48);
  if ((v21 & 1) == (v58 & 1))
  {
    a6 = v57;
    goto LABEL_26;
  }
LABEL_54:
  result = sub_1A4691C08();
  __break(1u);
  return result;
}

uint64_t RDIntentClusterModel.__allocating_init(url:embedding:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void (*v15)(uint64_t, uint64_t);
  id v16;
  void (*v17)(uint64_t, uint64_t);
  _QWORD v19[2];

  v4 = v2;
  v7 = sub_1A468FF7C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v19 - v12;
  sub_1A468FEF8();
  sub_1A46107A8();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  v14 = sub_1A4610428((uint64_t)v11);
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
    v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v15(a1, v7);
    v15((uint64_t)v13, v7);
  }
  else
  {
    v16 = v14;
    v17 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v17(a1, v7);
    v17((uint64_t)v13, v7);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v16;
    sub_1A44D3510(a2, v4 + 24);
  }
  return v4;
}

uint64_t static RDIntentClusterModel.modelByTuning(_:writeTo:minK:maxK:maxIter:embedding:randomGenerator:filename:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t isUniquelyReferenced_nonNull_native, uint64_t *a6, uint64_t *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint8_t *v41;
  uint8_t *v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t result;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  id v123;
  id v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  _QWORD *v129;
  unint64_t v130;
  char v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  _QWORD v139[2];
  __int128 v140;
  uint64_t v141;
  void (*v142)(char *, uint64_t);
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166[2];

  v162 = a7;
  v159 = a3;
  v147 = a1;
  v153 = sub_1A468FF7C();
  v151 = *(_QWORD *)(v153 - 8);
  v14 = MEMORY[0x1E0C80A78](v153);
  v148 = (char *)v139 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v150 = (char *)v139 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v149 = (char *)v139 - v19;
  MEMORY[0x1E0C80A78](v18);
  v154 = (char *)v139 - v20;
  v158 = sub_1A46900B4();
  v21 = *(_QWORD *)(v158 - 8);
  v22 = MEMORY[0x1E0C80A78](v158);
  v24 = (char *)v139 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v157 = (char *)v139 - v25;
  sub_1A46900A8();
  LOBYTE(v166[0]) = 1;
  type metadata accessor for PointCloud();
  swift_allocObject();
  v26 = swift_bridgeObjectRetain();
  v27 = PointCloud.init(points:distanceCalculator:)(v26, (char *)v166);
  swift_beginAccess();
  v28 = *(_QWORD *)(v27 + 40);
  if (__OFADD__(v28, 1))
    goto LABEL_76;
  v146 = v8;
  if (v28 >= a4)
    v29 = a4;
  else
    v29 = v28;
  if (v28 + 1 >= isUniquelyReferenced_nonNull_native)
    v30 = isUniquelyReferenced_nonNull_native;
  else
    v30 = v28 + 1;
  sub_1A443E484(a8, (uint64_t)v166);
  type metadata accessor for KMeansAutoTuner();
  swift_allocObject();
  v31 = swift_retain();
  v32 = v164;
  v34 = KMeansAutoTuner.init(pointCloud:mathod:minK:maxK:maxIter:randomGenerator:)(v31, v33, v29, v30, (uint64_t)a6, (uint64_t)v166);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v157, v158);
    swift_release();
    return isUniquelyReferenced_nonNull_native;
  }
  else
  {
    a6 = (uint64_t *)v34;
    v164 = a4;
    v152 = 0;
    sub_1A46900A8();
    sub_1A4690018();
    v9 = v35;
    a8 = *(_QWORD *)(v21 + 8);
    ((void (*)(char *, uint64_t))a8)(v24, v158);
    if (qword_1EE71C1D0 != -1)
      goto LABEL_80;
    while (1)
    {
      v36 = sub_1A4690318();
      v156 = __swift_project_value_buffer(v36, (uint64_t)qword_1EE723988);
      v37 = sub_1A469030C();
      v38 = sub_1A4691008();
      v39 = os_log_type_enabled(v37, v38);
      v155 = a6;
      v40 = isUniquelyReferenced_nonNull_native;
      if (v39)
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v41 = 134349056;
        *(_QWORD *)&v166[0] = v9;
        sub_1A46911D0();
        _os_log_impl(&dword_1A442D000, v37, v38, "Intent Cluster Model auto tuned in %{public}f seconds", v41, 0xCu);
        v42 = v41;
        a6 = v155;
        MEMORY[0x1A85A0114](v42, -1, -1);
      }

      swift_retain();
      v43 = sub_1A469030C();
      v44 = sub_1A4691008();
      v45 = os_log_type_enabled(v43, v44);
      v46 = v164;
      v142 = (void (*)(char *, uint64_t))a8;
      if (v45)
      {
        v47 = swift_slowAlloc();
        *(_DWORD *)v47 = 134349568;
        *(_QWORD *)&v166[0] = v46;
        sub_1A46911D0();
        *(_WORD *)(v47 + 12) = 2050;
        *(_QWORD *)&v166[0] = v40;
        sub_1A46911D0();
        *(_WORD *)(v47 + 22) = 2050;
        *(_QWORD *)&v166[0] = v155[2];
        sub_1A46911D0();
        swift_release();
        _os_log_impl(&dword_1A442D000, v43, v44, "auto tuned k-Mean with k in [%{public}ld, %{public}ld), found best k = %{public}ld", (uint8_t *)v47, 0x20u);
        v48 = v47;
        a6 = v155;
        MEMORY[0x1A85A0114](v48, -1, -1);

      }
      else
      {

        swift_release();
      }
      swift_retain_n();
      v49 = sub_1A469030C();
      v50 = sub_1A4691008();
      v51 = os_log_type_enabled(v49, v50);
      v145 = v27;
      if (v51)
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        *(_QWORD *)&v166[0] = v53;
        *(_DWORD *)v52 = 136446210;
        v54 = swift_bridgeObjectRetain();
        v55 = v152;
        v56 = sub_1A460E23C(v54);
        v152 = v55;
        swift_bridgeObjectRelease();
        v57 = MEMORY[0x1A859E404](v56, MEMORY[0x1E0DEB070]);
        v59 = v58;
        swift_bridgeObjectRelease();
        v165 = sub_1A4431120(v57, v59, (uint64_t *)v166);
        a6 = v155;
        sub_1A46911D0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v49, v50, "Mean Squared Error History: %{public}s", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v53, -1, -1);
        MEMORY[0x1A85A0114](v52, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v60 = a6[3];
      if (!*(_QWORD *)(v60 + 16))
        break;
      v61 = sub_1A443E654(a6[2]);
      if ((v62 & 1) == 0)
        goto LABEL_82;
      v63 = *(_QWORD **)(*(_QWORD *)(v60 + 56) + 8 * v61);
      v64 = v63[12];
      v161 = *(_QWORD *)(v64 + 16);
      v143 = v63;
      if (v161)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        a8 = 0;
        v65 = (uint64_t *)MEMORY[0x1E0DEE9D8];
        v164 = MEMORY[0x1E0DEE9E0];
        v66 = 32;
        v160 = v64;
        while (1)
        {
          v163 = (uint64_t *)v66;
          v68 = *(_QWORD *)(v64 + v66);
          *(_QWORD *)&v166[0] = a8;
          swift_retain();
          *(_QWORD *)&v166[0] = sub_1A46918D8();
          *((_QWORD *)&v166[0] + 1) = v69;
          swift_bridgeObjectRetain();
          sub_1A4690984();
          swift_bridgeObjectRelease();
          v70 = *((_QWORD *)&v166[0] + 1);
          v71 = *(_QWORD *)&v166[0];
          v72 = v162[3];
          v73 = v162[4];
          __swift_project_boxed_opaque_existential_1(v162, v72);
          v74 = *(void (**)(uint64_t, uint64_t, uint64_t))(v73 + 56);
          v75 = swift_retain();
          v74(v75, v72, v73);
          swift_release();
          v166[0] = __PAIR128__(v70, v71);
          swift_bridgeObjectRetain();
          sub_1A4690984();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v27 = *((_QWORD *)&v166[0] + 1);
          v76 = *(_QWORD *)&v166[0];
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v65 = sub_1A4438920(0, v65[2] + 1, 1, v65);
          v78 = v65[2];
          v77 = v65[3];
          if (v78 >= v77 >> 1)
            v65 = sub_1A4438920((_QWORD *)(v77 > 1), v78 + 1, 1, v65);
          v65[2] = v78 + 1;
          a6 = v65;
          v79 = &v65[2 * v78];
          v79[4] = v76;
          v79[5] = v27;
          swift_retain();
          v80 = v164;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v166[0] = v80;
          v82 = sub_1A443E4C8(v76, v27);
          v83 = *(_QWORD *)(v80 + 16);
          v84 = (v81 & 1) == 0;
          v85 = v83 + v84;
          if (__OFADD__(v83, v84))
            break;
          v86 = v81;
          if (*(_QWORD *)(v80 + 24) >= v85)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_1A444A344();
          }
          else
          {
            sub_1A4446814(v85, isUniquelyReferenced_nonNull_native);
            v87 = sub_1A443E4C8(v76, v27);
            if ((v86 & 1) != (v88 & 1))
              goto LABEL_84;
            v82 = v87;
          }
          v89 = *(_QWORD **)&v166[0];
          v164 = *(_QWORD *)&v166[0];
          if ((v86 & 1) != 0)
          {
            v67 = *(_QWORD *)(*(_QWORD *)&v166[0] + 56);
            swift_release();
            *(_QWORD *)(v67 + 8 * v82) = v68;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)&v166[0] + 8 * (v82 >> 6) + 64) |= 1 << v82;
            v90 = (uint64_t *)(v89[6] + 16 * v82);
            *v90 = v76;
            v90[1] = v27;
            *(_QWORD *)(v89[7] + 8 * v82) = v68;
            v91 = v89[2];
            v92 = __OFADD__(v91, 1);
            v93 = v91 + 1;
            if (v92)
              goto LABEL_75;
            v89[2] = v93;
            swift_bridgeObjectRetain();
          }
          ++a8;
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v66 = (uint64_t)(v163 + 3);
          v64 = v160;
          v65 = a6;
          if (v161 == a8)
          {
            swift_bridgeObjectRelease();
            v63 = v143;
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
      }
      else
      {
        swift_retain();
        v65 = (uint64_t *)MEMORY[0x1E0DEE9D8];
        v164 = MEMORY[0x1E0DEE9E0];
LABEL_40:
        swift_beginAccess();
        v94 = v63[13];
        v95 = v63[14];
        v96 = v65[2];
        a6 = v162;
        v163 = v65;
        if (v96 && *(_QWORD *)(v95 + 16) && *(_QWORD *)(v94 + 16))
        {
          v97 = v65[4];
          v27 = v65[5];
          v160 = v94 + 32;
          isUniquelyReferenced_nonNull_native = *(_QWORD *)(v95 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v161 = v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          a8 = 0;
          a6 = v65 + 7;
          v144 = v95 + 40;
          *(_QWORD *)&v98 = 136315650;
          v140 = v98;
          v139[1] = MEMORY[0x1E0DEE9B8] + 8;
          v141 = v95;
          while (1)
          {
            v9 = *(_QWORD *)(v160 + 8 * a8);
            swift_bridgeObjectRetain();
            v99 = sub_1A469030C();
            v100 = sub_1A4691008();
            if (os_log_type_enabled(v99, v100))
            {
              v101 = swift_slowAlloc();
              v102 = swift_slowAlloc();
              *(_QWORD *)&v166[0] = v102;
              *(_DWORD *)v101 = v140;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v101 + 4) = sub_1A4431120(v97, v27, (uint64_t *)v166);
              swift_bridgeObjectRelease_n();
              *(_WORD *)(v101 + 12) = 2050;
              *(_QWORD *)(v101 + 14) = isUniquelyReferenced_nonNull_native;
              *(_WORD *)(v101 + 22) = 2050;
              *(_QWORD *)(v101 + 24) = v9;
              _os_log_impl(&dword_1A442D000, v99, v100, "Cluster %s has %{public}ld samples with variance %{public}f", (uint8_t *)v101, 0x20u);
              swift_arrayDestroy();
              v103 = v102;
              v95 = v141;
              MEMORY[0x1A85A0114](v103, -1, -1);
              v104 = v101;
              v65 = v163;
              MEMORY[0x1A85A0114](v104, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            v105 = a8 + 1;
            v106 = v65[2];
            if (a8 + 1 == v106)
              break;
            if (a8 + 1 >= v106)
              goto LABEL_77;
            v107 = *(_QWORD *)(v95 + 16);
            if (v105 == v107)
              break;
            if (v105 >= v107)
              goto LABEL_78;
            v108 = *(_QWORD *)(v161 + 16);
            if (v105 == v108)
              break;
            v97 = *(a6 - 1);
            v27 = *a6;
            isUniquelyReferenced_nonNull_native = *(_QWORD *)(v144 + 8 * a8);
            swift_bridgeObjectRetain();
            a6 += 2;
            ++a8;
            if (v105 >= v108)
            {
              __break(1u);
              goto LABEL_54;
            }
          }
          a6 = v162;
        }
        else
        {
LABEL_54:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v162 = (uint64_t *)0x80000001A46C2590;
        swift_bridgeObjectRetain();
        v109 = v154;
        sub_1A468FEF8();
        swift_bridgeObjectRelease();
        sub_1A46107A8();
        v110 = v152;
        sub_1A46107E4(v164);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = (uint64_t)a6;
        v111 = a6[3];
        v112 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 32);
        __swift_project_boxed_opaque_existential_1((_QWORD *)isUniquelyReferenced_nonNull_native, v111);
        v113 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v111, v112);
        v114 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 24);
        v115 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 32);
        __swift_project_boxed_opaque_existential_1((_QWORD *)isUniquelyReferenced_nonNull_native, v114);
        (*(void (**)(uint64_t, uint64_t))(v115 + 16))(v114, v115);
        sub_1A4690F78();
        if (v110)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v151 + 8))(v109, v153);
          swift_bridgeObjectRelease();
          v142(v157, v158);
          return isUniquelyReferenced_nonNull_native;
        }
        swift_release();

        v117 = v151;
        v118 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
        v119 = v149;
        v120 = v153;
        v118(v149, v159, v153);
        sub_1A443E484(isUniquelyReferenced_nonNull_native, (uint64_t)v166);
        v121 = v150;
        sub_1A468FEF8();
        v122 = (uint64_t)v148;
        v118(v148, (uint64_t)v121, v120);
        v123 = sub_1A4610428(v122);
        v152 = 0;
        v124 = v123;
        v125 = *(void (**)(char *, uint64_t))(v117 + 8);
        v125(v119, v120);
        v125(v121, v120);
        isUniquelyReferenced_nonNull_native = swift_allocObject();
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v124;
        sub_1A44D3510(v166, isUniquelyReferenced_nonNull_native + 24);
        v126 = v155[4];
        a8 = v155[5];
        v27 = (uint64_t)v163;
        if (a8 < v126)
          goto LABEL_83;
        v161 = v155[2];
        v162 = (uint64_t *)v125;
        if (v126 == a8)
        {
          swift_release();
          swift_release();
          v127 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_73:
          v137 = v147;
          swift_release();
          ((void (*)(char *, uint64_t))v162)(v154, v120);
          v142(v157, v158);
          v138 = v161;
          *v137 = v161;
          v137[1] = v27;
          v137[2] = v126;
          v137[3] = a8;
          v137[4] = v138;
          v137[5] = (uint64_t)v127;
          return isUniquelyReferenced_nonNull_native;
        }
        v128 = v155[3];
        v127 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        a6 = (uint64_t *)v126;
        v164 = v126;
        while ((uint64_t)a6 < a8)
        {
          if (*(_QWORD *)(v128 + 16))
          {
            v130 = sub_1A443E654((uint64_t)a6);
            if ((v131 & 1) != 0)
            {
              v132 = *(_QWORD **)(*(_QWORD *)(v128 + 56) + 8 * v130);
              swift_beginAccess();
              v133 = v132[13];
              v134 = v132[14];
              v9 = v132[15];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v127 = sub_1A4438F7C(0, v127[2] + 1, 1, v127);
              v136 = v127[2];
              v135 = v127[3];
              if (v136 >= v135 >> 1)
                v127 = sub_1A4438F7C((_QWORD *)(v135 > 1), v136 + 1, 1, v127);
              v127[2] = v136 + 1;
              v129 = &v127[3 * v136];
              v129[4] = v133;
              v129[5] = v134;
              v129[6] = v9;
              v27 = (uint64_t)v163;
              v126 = v164;
            }
          }
          a6 = (uint64_t *)((char *)a6 + 1);
          if ((uint64_t *)a8 == a6)
          {
            swift_release();
            swift_release();
            v120 = v153;
            goto LABEL_73;
          }
        }
      }
      __break(1u);
LABEL_80:
      swift_once();
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    result = sub_1A4691C08();
    __break(1u);
  }
  return result;
}

id sub_1A4610428(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1A468FED4();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_embeddingWithContentsOfURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_1A468FF7C();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_1A468FE68();

    swift_willThrow();
    v9 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t RDIntentClusterModel.predict(for:)()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v0 = sub_1A4690F9C();
  swift_bridgeObjectRelease();
  if (qword_1EE71C1D0 != -1)
    swift_once();
  v1 = sub_1A4690318();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EE723988);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A469030C();
  v3 = sub_1A4691008();
  if (!os_log_type_enabled(v2, v3))
  {

    swift_bridgeObjectRelease_n();
    if (*(_QWORD *)(v0 + 16))
      goto LABEL_5;
LABEL_7:
    v9 = 0;
    goto LABEL_8;
  }
  v4 = (uint8_t *)swift_slowAlloc();
  v5 = swift_slowAlloc();
  v11 = v5;
  *(_DWORD *)v4 = 136315138;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E028);
  v7 = MEMORY[0x1A859E404](v0, v6);
  sub_1A4431120(v7, v8, &v11);
  sub_1A46911D0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A442D000, v2, v3, "RDIntentClusterModel closest intent %s", v4, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1A85A0114](v5, -1, -1);
  MEMORY[0x1A85A0114](v4, -1, -1);

  if (!*(_QWORD *)(v0 + 16))
    goto LABEL_7;
LABEL_5:
  v9 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
LABEL_8:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t RDIntentClusterModel.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return v0;
}

uint64_t RDIntentClusterModel.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

unint64_t sub_1A46107A8()
{
  unint64_t result;

  result = qword_1EE7239A0;
  if (!qword_1EE7239A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7239A0);
  }
  return result;
}

uint64_t sub_1A46107E4(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  __swift_instantiateConcreteTypeFromMangledName(qword_1EE7239A8);
  result = sub_1A46916BC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v26 = a1;
  v5 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v24 = (unint64_t)(v6 + 63) >> 6;
  v25 = result + 64;
  if ((v7 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v9 | (v4 << 6); ; i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(v26 + 48) + 16 * i);
    v16 = *v14;
    v15 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * i);
    result = swift_beginAccess();
    v18 = *(_QWORD *)(v17 + 16);
    *(_QWORD *)(v25 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v19 = (_QWORD *)(v3[6] + 16 * i);
    *v19 = v16;
    v19[1] = v15;
    *(_QWORD *)(v3[7] + 8 * i) = v18;
    v20 = v3[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v11 >= v24)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v23 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v24)
        return (uint64_t)v3;
      v12 = *(_QWORD *)(v23 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v24)
          return (uint64_t)v3;
        v12 = *(_QWORD *)(v23 + 8 * v4);
        if (!v12)
          break;
      }
    }
LABEL_18:
    v8 = (v12 - 1) & v12;
  }
  v13 = v11 + 3;
  if (v13 >= v24)
    return (uint64_t)v3;
  v12 = *(_QWORD *)(v23 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v24)
      return (uint64_t)v3;
    v12 = *(_QWORD *)(v23 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RDIntentClusterModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for RDIntentClusterModel()
{
  return swift_lookUpClassMethod();
}

uint64_t destroy for RDIntentClusterModel.TuningSnapshot()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RDIntentClusterModel.TuningSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RDIntentClusterModel.TuningSnapshot(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RDIntentClusterModel.TuningSnapshot(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RDIntentClusterModel.TuningSnapshot()
{
  return &type metadata for RDIntentClusterModel.TuningSnapshot;
}

_QWORD *initializeWithCopy for RDIntentClusterModel.ModelSnapshot(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RDIntentClusterModel.ModelSnapshot(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for RDIntentClusterModel.ModelSnapshot(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for RDIntentClusterModel.ModelSnapshot()
{
  return &type metadata for RDIntentClusterModel.ModelSnapshot;
}

uint64_t sub_1A4610C9C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(uint64_t *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_QWORD *)(a3 + 8 * v7 + 32);
      v13 = v11;
      result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v14 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1A445A898(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v14;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_1A445A898(v9 > 1, v10 + 1, 1);
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_QWORD *)(v8 + 8 * v10 + 32) = v11;
        v6 = v12;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1A4610DDC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t *);
  uint64_t v13;
  uint64_t v14;

  v5 = *(_QWORD *)(a3 + 16);
  if (v5)
  {
    v6 = (uint64_t (*)(uint64_t *))result;
    v7 = 0;
    v8 = MEMORY[0x1E0DEE9D8];
    v12 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(_QWORD *)(a3 + 16))
    {
      v11 = *(_QWORD *)(a3 + 8 * v7 + 32);
      v13 = v11;
      result = v6(&v13);
      if (v3)
      {
        swift_release();
        goto LABEL_14;
      }
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v14 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1A445A898(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v14;
        }
        v10 = *(_QWORD *)(v8 + 16);
        v9 = *(_QWORD *)(v8 + 24);
        if (v10 >= v9 >> 1)
        {
          result = sub_1A445A898(v9 > 1, v10 + 1, 1);
          v8 = v14;
        }
        *(_QWORD *)(v8 + 16) = v10 + 1;
        *(_QWORD *)(v8 + 8 * v10 + 32) = v11;
        v6 = v12;
      }
      if (v5 == ++v7)
        goto LABEL_14;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t Series.__allocating_init(_:defaultValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;

  v3 = v2;
  swift_allocObject();
  v6 = sub_1A461238C(a1, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a2);
  return v6;
}

uint64_t sub_1A4610F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1A4610FE0(a1, a2);
  return v4;
}

uint64_t sub_1A4610FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _QWORD v31[2];
  __int128 v32;

  v26 = a1;
  v24 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = sub_1A46911A0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = sub_1A46911A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - v14;
  *(_QWORD *)&v32 = a1;
  v25 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF48], v25);
  v16 = MEMORY[0x1E0DEB458];
  sub_1A4690E28();
  v32 = v30;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  v18 = sub_1A446E8D8();
  v31[0] = v16;
  v31[1] = v18;
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8A0], v17, v31);
  v19 = sub_1A4690C9C();
  sub_1A4504738(v19, &v30);
  *(_OWORD *)(v27 + 16) = v30;
  *(_QWORD *)&v32 = sub_1A46906C0();
  *(_QWORD *)&v30 = v26;
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v25);
  sub_1A4690AA4();
  swift_bridgeObjectRelease();
  v28 = v29;
  sub_1A469168C();
  sub_1A4691668();
  sub_1A4691680();
  while (1)
  {
    sub_1A4691674();
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v15, 1, TupleTypeMetadata2) == 1)break;
    v20 = *(_QWORD *)v15;
    v21 = *(_QWORD *)(v4 - 8);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v7, &v15[*(int *)(TupleTypeMetadata2 + 48)], v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v7, 0, 1, v4);
    v29 = v20;
    sub_1A469078C();
    sub_1A46907BC();
  }
  swift_bridgeObjectRelease();
  v22 = v27;
  *(_QWORD *)(v27 + 32) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v22 + *(_QWORD *)(*(_QWORD *)v22 + 104), v24, v4);
  return v22;
}

uint64_t sub_1A4611304(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  sub_1A4611358(a1, a2, a3);
  return v6;
}

char *sub_1A4611358(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v26[2];
  uint64_t v27;
  char *v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v31;
  __int128 v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v27 = a3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = sub_1A46911A0();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v11 = sub_1A46911A0();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v26 - v12;
  v14 = *a2;
  v15 = a2[1];
  *((_QWORD *)v3 + 2) = *a2;
  *((_QWORD *)v3 + 3) = v15;
  v28 = v3;
  v16 = v14;
  v26[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38 = sub_1A46906C0();
  v34 = v16;
  v35 = v15;
  *(_QWORD *)&v32 = a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723AB0);
  v18 = sub_1A4690C78();
  v19 = sub_1A4612810();
  v20 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v18);
  sub_1A4691BF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v32 = v29;
  v33 = v30;
  v34 = v17;
  v35 = v18;
  v36 = v19;
  v37 = v20;
  sub_1A4691464();
  sub_1A4691440();
  while (1)
  {
    *(_QWORD *)&v29 = v17;
    *((_QWORD *)&v29 + 1) = v18;
    v30 = v19;
    v31 = v20;
    sub_1A4691458();
    sub_1A469144C();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v13, 1, TupleTypeMetadata2) == 1)break;
    v21 = *(_QWORD *)v13;
    v22 = *(_QWORD *)(v6 - 8);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, &v13[*(int *)(TupleTypeMetadata2 + 48)], v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v6);
    *(_QWORD *)&v29 = v21;
    sub_1A469078C();
    sub_1A46907BC();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v27;
  v24 = v28;
  *((_QWORD *)v28 + 4) = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(&v24[*(_QWORD *)(*(_QWORD *)v24 + 104)], v23, v6);
  return v24;
}

uint64_t sub_1A4611618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = *(_QWORD *)v2;
  v7 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v8 = sub_1A46911A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - v10;
  if (!*(_QWORD *)(*((_QWORD *)v2 + 3) + 16))
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, &v2[*(_QWORD *)(v6 + 104)], v7);
  sub_1A443E654(a1);
  if ((v12 & 1) == 0)
  {
    v6 = *(_QWORD *)v2;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, &v2[*(_QWORD *)(v6 + 104)], v7);
  }
  v13 = *((_QWORD *)v2 + 4);
  v17 = a1;
  MEMORY[0x1A859E008](&v17, v13, MEMORY[0x1E0DEB418], v7, MEMORY[0x1E0DEB428]);
  v14 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v11, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, &v3[*(_QWORD *)(*(_QWORD *)v3 + 104)], v7);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1A4611788()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t *sub_1A4611794()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  return v0;
}

uint64_t sub_1A46117F0()
{
  sub_1A4611794();
  return swift_deallocClassInstance();
}

uint64_t Series.index.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 40);
  *a1 = *(_QWORD *)(v1 + 32);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A461183C(uint64_t a1, __int128 *a2)
{
  uint64_t result;
  __int128 v5;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  v5 = *a2;
  *(_OWORD *)(result + 32) = *a2;
  *(_BYTE *)(result + 24) = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) == *(_QWORD *)(v5 + 16);
  return result;
}

uint64_t sub_1A461189C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  __int128 v5;

  sub_1A4504738(a2, &v5);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  v4 = v5;
  *(_OWORD *)(result + 32) = v5;
  *(_BYTE *)(result + 24) = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 16) == *(_QWORD *)(v4 + 16);
  return result;
}

uint64_t Series.init(_:defaultValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = sub_1A461238C(a1, a2);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a2);
  return v5;
}

uint64_t Series.__allocating_init(_:index:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  v6 = sub_1A46125F8(a1, a2, a3, a4);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a3);
  return v6;
}

uint64_t Series.init(_:index:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3;
  v6 = sub_1A4612504(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 8))(a3);
  return v6;
}

uint64_t Series.__allocating_init(_:index:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  sub_1A4504738(a2, &v10);
  v9 = v10;
  v7 = sub_1A46125F8(a1, (uint64_t)&v9, a3, v6);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a3);
  return v7;
}

uint64_t sub_1A4611A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  char v6;

  if (*((_BYTE *)v2 + 24) == 1)
    return sub_1A4611618(a1, a2);
  v5 = *v2;
  if (*(_QWORD *)(v2[5] + 16) && (sub_1A443E654(a1), (v6 & 1) != 0))
    return sub_1A4611618(a1, a2);
  else
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 16))(a2, v2[2] + *(_QWORD *)(*(_QWORD *)v2[2] + 104));
}

uint64_t sub_1A4611AE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = *(_QWORD *)v1;
  swift_bridgeObjectRetain();
  v6 = sub_1A4610C9C((uint64_t)sub_1A4612650, v1, a1);
  if (*(_BYTE *)(v1 + 24) == 1)
    v7 = *(_QWORD *)(v1 + 16) + 16;
  else
    v7 = v1 + 32;
  if (*(_QWORD *)(v6 + 16) == *(_QWORD *)(*(_QWORD *)v7 + 16))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    type metadata accessor for Series(0, *(_QWORD *)(v3 + 80), v4, v5);
    v9 = swift_retain();
    return sub_1A461189C(v9, v6);
  }
}

uint64_t sub_1A4611BA4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)v1;
  v3 = *a1;
  v4 = a1[1];
  v6 = v1 + 32;
  v5 = *(_QWORD *)(v1 + 32);
  if (*(_QWORD *)(*a1 + 16) >= *(_QWORD *)(v5 + 16))
  {
    v10 = *(_QWORD *)(v1 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1A4612250(v5, v10, v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1A4610DDC((uint64_t)sub_1A4612650, v1, v3);
  }
  if (*(_BYTE *)(v1 + 24) == 1)
    v6 = *(_QWORD *)(v1 + 16) + 16;
  if (*(_QWORD *)(v9 + 16) == *(_QWORD *)(*(_QWORD *)v6 + 16))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    type metadata accessor for Series(0, *(_QWORD *)(v2 + 80), v7, v8);
    v12 = swift_retain();
    return sub_1A461189C(v12, v9);
  }
}

uint64_t sub_1A4611CF4(uint64_t result, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  int64_t *v6;
  uint64_t v7;
  int64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;

  v6 = (int64_t *)result;
  v7 = *v4;
  if (*((_BYTE *)v4 + 24) == 1)
  {
    if (*(_QWORD *)(*(_QWORD *)(v4[2] + 16) + 16) <= a2)
      return swift_retain();
    type metadata accessor for Series(0, *(_QWORD *)(v7 + 80), a3, a4);
    v8 = sub_1A445A21C(v6, a2);
    v9 = swift_retain();
    v10 = (uint64_t)v8;
    return sub_1A461189C(v9, v10);
  }
  if (!__OFSUB__(a2, result))
  {
    v11 = v4[4];
    v12 = *(_QWORD *)(v11 + 16);
    if (v12 < a2 - result)
    {
      v13 = sub_1A445A21C((int64_t *)result, a2);
      v14 = sub_1A4611AE8((uint64_t)v13);
      swift_release();
      return v14;
    }
    if (!v12)
    {
      v16 = MEMORY[0x1E0DEE9D8];
LABEL_24:
      type metadata accessor for Series(0, *(_QWORD *)(v7 + 80), a3, a4);
      v9 = swift_retain();
      v10 = v16;
      return sub_1A461189C(v9, v10);
    }
    v21 = *v4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v15 = 0;
    v16 = MEMORY[0x1E0DEE9D8];
    while (v15 < *(_QWORD *)(v11 + 16))
    {
      v19 = *(_QWORD *)(v11 + 8 * v15 + 32);
      if (v19 >= (uint64_t)v6 && v19 < a2)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
          result = sub_1A445A898(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v18 = *(_QWORD *)(v16 + 16);
        v17 = *(_QWORD *)(v16 + 24);
        if (v18 >= v17 >> 1)
          result = sub_1A445A898(v17 > 1, v18 + 1, 1);
        *(_QWORD *)(v16 + 16) = v18 + 1;
        *(_QWORD *)(v16 + 8 * v18 + 32) = v19;
      }
      if (v12 == ++v15)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v21;
        goto LABEL_24;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4611F14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1A46906CC();
  v10 = result;
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      v8 = *(_QWORD *)(v5 + 8 * v7++ + 32);
      sub_1A4611618(v8, (uint64_t)v3);
      sub_1A4690C78();
      sub_1A4690C3C();
    }
    while (v6 != v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t sub_1A4612004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_1A4611F14(a1);
  v1 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
  v2 = sub_1A469159C();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEC908], v2);
  return sub_1A4691398();
}

uint64_t sub_1A461208C()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 24) == 1)
    v1 = *(_QWORD *)(v0 + 16) + 16;
  else
    v1 = v0 + 32;
  return *(_QWORD *)(*(_QWORD *)v1 + 16);
}

uint64_t Series.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Series.__deallocating_deinit()
{
  Series.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1A4612108@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1A4612004(a1);
  result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_1A4612144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for Series(0, *(_QWORD *)(a1 + 80), a3, a4);
  v4 = sub_1A45D9A08();
  swift_release();
  return v4;
}

void sub_1A461218C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Series(0, *(_QWORD *)(a4 + 80), a3, a4);
  JUMPOUT(0x1A859E308);
}

uint64_t sub_1A46121E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Series(0, *(_QWORD *)(a4 + 80), a3, a4);
  return sub_1A4690ABC();
}

unint64_t sub_1A4612250(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v5 = v4;
  v6 = *(_QWORD *)(result + 16);
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  v8 = 0;
  v9 = result + 32;
  v10 = MEMORY[0x1E0DEE9D8];
  do
  {
    if (v8 <= v6)
      v11 = v6;
    else
      v11 = v8;
    v12 = v8;
    while (1)
    {
      if (v11 == v12)
      {
        __break(1u);
        return result;
      }
      if (*(_QWORD *)(a4 + 16))
      {
        v13 = *(_QWORD *)(v9 + 8 * v12);
        result = sub_1A443E654(v13);
        if ((v14 & 1) != 0)
          break;
      }
      if (v6 == ++v12)
        return v10;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    v17 = v5;
    if ((result & 1) == 0)
      result = sub_1A445A898(0, *(_QWORD *)(v10 + 16) + 1, 1);
    v16 = *(_QWORD *)(v10 + 16);
    v15 = *(_QWORD *)(v10 + 24);
    if (v16 >= v15 >> 1)
      result = sub_1A445A898(v15 > 1, v16 + 1, 1);
    v8 = v12 + 1;
    *(_QWORD *)(v10 + 16) = v16 + 1;
    *(_QWORD *)(v10 + 8 * v16 + 32) = v13;
    v5 = v17;
  }
  while (v6 - 1 != v12);
  return v10;
}

uint64_t sub_1A461238C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  __int128 v22;

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SeriesMaterial(0, v6, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v12 = swift_allocObject();
  v13 = swift_bridgeObjectRetain();
  sub_1A4610FE0(v13, (uint64_t)v9);
  *(_QWORD *)(v3 + 16) = v12;
  *(_QWORD *)&v21 = a1;
  v14 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF48], v14);
  v15 = MEMORY[0x1E0DEB458];
  sub_1A4690E28();
  swift_bridgeObjectRelease();
  v21 = v22;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  v17 = sub_1A446E8D8();
  v20[0] = v15;
  v20[1] = v17;
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEB8A0], v16, v20);
  v18 = sub_1A4690C9C();
  sub_1A4504738(v18, &v22);
  *(_OWORD *)(v3 + 32) = v22;
  *(_BYTE *)(v3 + 24) = 1;
  return v3;
}

uint64_t sub_1A4612504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v4 = v3;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v11;
  v13 = v11[1];
  type metadata accessor for SeriesMaterial(0, v7, v14, v15);
  v18[0] = v12;
  v18[1] = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  v16 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A4611358(a1, v18, (uint64_t)v10);
  *(_QWORD *)(v4 + 16) = v16;
  *(_QWORD *)(v4 + 32) = v12;
  *(_QWORD *)(v4 + 40) = v13;
  *(_BYTE *)(v4 + 24) = 1;
  return v4;
}

uint64_t sub_1A46125F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for Series(0, *(_QWORD *)(v4 + 80), a3, a4);
  swift_allocObject();
  return sub_1A4612504(a1, a2, a3);
}

uint64_t sub_1A4612650(uint64_t *a1)
{
  return sub_1A4612674(a1) & 1;
}

uint64_t type metadata accessor for Series(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Series);
}

uint64_t sub_1A4612674(uint64_t *a1)
{
  uint64_t v1;
  char v2;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 40) + 16))
    sub_1A443E654(*a1);
  else
    v2 = 0;
  return v2 & 1;
}

uint64_t sub_1A46126B4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for SeriesMaterial(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SeriesMaterial);
}

uint64_t sub_1A4612748()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for Series()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Series.__allocating_init(_:defaultValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of Series.__allocating_init(_:index:defaultValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Series.iloc(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of Series.iloc(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Series.values.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Series.makeIterator()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Series.size.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

unint64_t sub_1A4612810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE723AB8;
  if (!qword_1EE723AB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE723AB0);
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for OrderedSet<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EE723AB8);
  }
  return result;
}

uint64_t sub_1A461285C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE723AC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE723AC0);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void REMAlarmProximity.description.getter(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_1A4690318();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 > 2)
  {
    v7 = v4;
    if (qword_1EE71C1D8 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1EE723AC0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1A443CDB8(MEMORY[0x1E0DEE9D8]);
    sub_1A443CDB8(v9);
    sub_1A4510F48((uint64_t)"unknown proximity", 17, 2);
    __break(1u);
  }
}

uint64_t sub_1A4612A20(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  double v13;
  double v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v2 = a2;
  if (a2 >> 62)
    goto LABEL_27;
  v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1A46916A4())
  {
    v5 = 0;
    v20 = v4;
    v21 = v2 & 0xC000000000000001;
    v19 = v2;
    v18 = v2 + 32;
    while (1)
    {
      if (v21)
      {
        v8 = MEMORY[0x1A859ECE0](v5, v19);
        v9 = __OFADD__(v5++, 1);
        if (v9)
          goto LABEL_25;
      }
      else
      {
        v8 = *(_QWORD *)(v18 + 8 * v5);
        swift_retain();
        v9 = __OFADD__(v5++, 1);
        if (v9)
          goto LABEL_25;
      }
      swift_beginAccess();
      v2 = *(_QWORD *)(a1 + 24);
      if ((v2 & 0x8000000000000000) != 0)
        goto LABEL_26;
      if (v2)
        break;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_5:
      type metadata accessor for RDVector();
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v6;
      v2 = v6[2];
      swift_release();
      *(_QWORD *)(v7 + 24) = v2;
      swift_release();
      a1 = v7;
      if (v5 == v20)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    v10 = a1 + 16;
    v11 = v8 + 16;
    swift_beginAccess();
    swift_beginAccess();
    v12 = 0;
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v12 < *(_QWORD *)(*(_QWORD *)v10 + 16))
    {
      if (v12 >= *(_QWORD *)(*(_QWORD *)v11 + 16))
        goto LABEL_24;
      v13 = *(double *)(*(_QWORD *)v10 + 8 * v12 + 32);
      v14 = *(double *)(*(_QWORD *)v11 + 8 * v12 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1A4438D64(0, v6[2] + 1, 1, v6);
      v16 = v6[2];
      v15 = v6[3];
      if (v16 >= v15 >> 1)
        v6 = sub_1A4438D64((_QWORD *)(v15 > 1), v16 + 1, 1, v6);
      ++v12;
      v6[2] = v16 + 1;
      *(double *)&v6[v16 + 4] = v13 + v14;
      if (v2 == v12)
        goto LABEL_5;
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_retain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t RDVector.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_allocObject();
  v3 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = v3;
  return result;
}

uint64_t Array<A>.average()(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_1A46916A4();
  if (!result)
    goto LABEL_11;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v5 = MEMORY[0x1A859ECE0](0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v5 = *(_QWORD *)(a1 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v6 = *(_QWORD *)(v5 + 24);
    type metadata accessor for RDVector();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 24) = v6;
    *(_QWORD *)(inited + 16) = sub_1A44A6400(v6, 0.0);
    v8 = sub_1A4612A20(inited, a1);
    swift_release();
    swift_release();
    if (v2)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1A46916A4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v10 = / infix(_:_:)(v8, (double)v9);
    swift_release();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t - infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  double v10;
  double v11;
  unint64_t v12;
  unint64_t v13;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (v5)
  {
    v6 = a1 + 16;
    v7 = a2 + 16;
    swift_beginAccess();
    result = swift_beginAccess();
    v8 = 0;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v8 < *(_QWORD *)(*(_QWORD *)v6 + 16))
    {
      if (v8 >= *(_QWORD *)(*(_QWORD *)v7 + 16))
        goto LABEL_15;
      v10 = *(double *)(*(_QWORD *)v6 + 8 * v8 + 32);
      v11 = *(double *)(*(_QWORD *)v7 + 8 * v8 + 32);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A4438D64(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v13 = v9[2];
      v12 = v9[3];
      if (v13 >= v12 >> 1)
      {
        result = (uint64_t)sub_1A4438D64((_QWORD *)(v12 > 1), v13 + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      ++v8;
      v9[2] = v13 + 1;
      *(double *)&v9[v13 + 4] = v10 - v11;
      if (v5 == v8)
        goto LABEL_13;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_13:
  type metadata accessor for RDVector();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v9;
  *(_QWORD *)(result + 24) = v9[2];
  return result;
}

uint64_t Array<A>.truncatedLoggingDescription()(unint64_t a1)
{
  unint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_28;
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 5)
    v3 = 5;
  else
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0 && v3)
    {
      type metadata accessor for RDVector();
      v4 = 0;
      do
      {
        v5 = v4 + 1;
        sub_1A4691470();
        v4 = v5;
      }
      while (v3 != v5);
    }
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1A46916B0();
      v6 = v7;
      v2 = v8;
      v10 = v9;
      swift_bridgeObjectRelease_n();
      v3 = v10 >> 1;
    }
    else
    {
      v6 = (v1 & 0xFFFFFFFFFFFFFF8) + 32;
    }
    v11 = v3 - v2;
    if (__OFSUB__(v3, v2))
      goto LABEL_30;
    if (!v11)
      break;
    v28[0] = MEMORY[0x1E0DEE9D8];
    v1 = (unint64_t)v28;
    sub_1A445A8BC(0, v11 & ~(v11 >> 63), 0);
    if ((v11 & 0x8000000000000000) == 0)
    {
      v12 = v28[0];
      if (v3 <= v2)
        v13 = v2;
      else
        v13 = v3;
      v14 = v13 - v2;
      v15 = (unint64_t *)(v6 + 8 * v2);
      while (v14)
      {
        v1 = *v15;
        swift_retain();
        v16 = sub_1A46135FC();
        v2 = v17;
        swift_release();
        v28[0] = v12;
        v19 = *(_QWORD *)(v12 + 16);
        v18 = *(_QWORD *)(v12 + 24);
        if (v19 >= v18 >> 1)
        {
          v1 = (unint64_t)v28;
          sub_1A445A8BC(v18 > 1, v19 + 1, 1);
          v12 = v28[0];
        }
        *(_QWORD *)(v12 + 16) = v19 + 1;
        v20 = v12 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v16;
        *(_QWORD *)(v20 + 40) = v2;
        --v14;
        ++v15;
        if (!--v11)
        {
          swift_unknownObjectRelease();
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      v3 = sub_1A46916A4();
      swift_bridgeObjectRetain();
      v25 = sub_1A46916A4();
      swift_bridgeObjectRelease();
      if ((v25 & 0x8000000000000000) == 0)
        goto LABEL_32;
      __break(1u);
LABEL_30:
      __break(1u);
    }
    __break(1u);
LABEL_32:
    if (v3 >= 5)
      v26 = 5;
    else
      v26 = v3;
    if (v3 >= 0)
      v3 = v26;
    else
      v3 = 5;
    swift_bridgeObjectRetain();
    v27 = sub_1A46916A4();
    result = swift_bridgeObjectRelease();
    if (v27 < v3)
    {
      __break(1u);
      return result;
    }
  }
  swift_unknownObjectRelease();
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_26:
  v28[0] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v21 = sub_1A4690828();
  v23 = v22;
  swift_bridgeObjectRelease();
  v28[0] = v21;
  v28[1] = v23;
  swift_bridgeObjectRetain();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  return v28[0];
}

uint64_t sub_1A4613290()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 24);
}

uint64_t RDVector.init(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(a1 + 16);
  return v1;
}

uint64_t RDVector.__allocating_init(dimension:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 24) = a1;
  if (a1 < 0)
  {
    result = sub_1A469162C();
    __break(1u);
  }
  else
  {
    v3 = v2;
    if (a1)
    {
      v4 = sub_1A4690C00();
      *(_QWORD *)(v4 + 16) = a1;
      bzero((void *)(v4 + 32), 8 * a1);
    }
    else
    {
      v4 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v3 + 16) = v4;
    return v3;
  }
  return result;
}

uint64_t RDVector.init(dimension:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(v1 + 24) = a1;
  if (a1 < 0)
  {
    result = sub_1A469162C();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      v3 = sub_1A4690C00();
      *(_QWORD *)(v3 + 16) = a1;
      bzero((void *)(v3 + 32), 8 * a1);
    }
    else
    {
      v3 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)(v1 + 16) = v3;
    return v1;
  }
  return result;
}

uint64_t sub_1A461345C(unint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(*(_QWORD *)(v1 + 16) + 16) <= a1)
LABEL_5:
    __break(1u);
  return result;
}

uint64_t sub_1A46134B8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  result = swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 1;
  if ((*(_QWORD *)(v2 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    return 0;
  if (v3 == 1)
    return 1;
  for (i = 5; ; ++i)
  {
    v5 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(v2 + 8 * i) & 0x7FFFFFFFFFFFFFFFLL;
    result = v6 == 0;
    if (v6)
      v7 = 1;
    else
      v7 = v5 == v3;
    if (v7)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A4613544()
{
  return sub_1A4691C98();
}

uint64_t sub_1A461356C()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1A859E404](v0, MEMORY[0x1E0DEB070]);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x726F746365564452;
}

uint64_t sub_1A46135FC()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  if (*(_QWORD *)(v1 + 16) >= 5uLL)
    v2 = 5;
  else
    v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A445A8BC(0, v2, 0);
    v3 = 0;
    v4 = 8 * v2;
    v5 = MEMORY[0x1E0DEB100];
    do
    {
      v6 = *(_QWORD *)(v1 + v3 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A20);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1A4695C10;
      *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEB070];
      *(_QWORD *)(v7 + 64) = v5;
      *(_QWORD *)(v7 + 32) = v6;
      v8 = sub_1A46908C4();
      v10 = v9;
      v12 = *(_QWORD *)(v15 + 16);
      v11 = *(_QWORD *)(v15 + 24);
      if (v12 >= v11 >> 1)
        sub_1A445A8BC(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = v15 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      v3 += 8;
    }
    while (v4 != v3);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  sub_1A4690828();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  swift_bridgeObjectRelease();
  sub_1A4690984();
  return 2636374;
}

uint64_t sub_1A46137F4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F69736E656D6964;
  else
    return 1635017060;
}

uint64_t sub_1A461382C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4614854(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A4613850()
{
  sub_1A4614444();
  return sub_1A4691DB8();
}

uint64_t sub_1A4613878()
{
  sub_1A4614444();
  return sub_1A4691DC4();
}

uint64_t RDVector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RDVector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A46138E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[4];
  char v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723AD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4614444();
  sub_1A4691D40();
  swift_beginAccess();
  v10[1] = *(_QWORD *)(v3 + 16);
  v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
  sub_1A4614488(&qword_1EE721EA8, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (!v2)
  {
    swift_beginAccess();
    v11 = 1;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A4613A58()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t RDVector.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  RDVector.init(from:)(a1);
  return v2;
}

uint64_t RDVector.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723AE8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4614444();
  sub_1A4691D28();
  if (v2)
  {
    type metadata accessor for RDVector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
    v11[15] = 0;
    sub_1A4614488(&qword_1EE721EC0, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    *(_QWORD *)(v1 + 16) = v12;
    v11[14] = 1;
    v10 = sub_1A46917AC();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 24) = v10;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1A4613CAC()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = swift_bridgeObjectRetain();
  MEMORY[0x1A859E404](v0, MEMORY[0x1E0DEB070]);
  sub_1A4690984();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x726F746365564452;
}

uint64_t sub_1A4613D40(uint64_t *a1, uint64_t *a2)
{
  return == infix(_:_:)(*a1, *a2);
}

uint64_t == infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  double v9;
  double v10;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;

  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 24);
  result = swift_beginAccess();
  if (v4 != *(_QWORD *)(a2 + 24))
    return 0;
  if (v4 < 0)
    goto LABEL_24;
  if (!v4)
    return 1;
  v6 = a2 + 16;
  swift_beginAccess();
  result = swift_beginAccess();
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!*(_QWORD *)(*(_QWORD *)v6 + 16))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  v9 = *(double *)(v7 + 32);
  v10 = *(double *)(*(_QWORD *)v6 + 32);
  result = v9 == v10;
  if (v9 == v10 && v4 != 1)
  {
    v12 = 0;
    v13 = v7 + 40;
    while (v12 + 1 < v8)
    {
      if ((unint64_t)(v12 + 1) >= *(_QWORD *)(*(_QWORD *)v6 + 16))
        goto LABEL_23;
      v14 = *(double *)(v13 + 8 * v12);
      v15 = *(double *)(*(_QWORD *)v6 + 8 * v12 + 40);
      result = v14 == v15;
      if (v14 != v15 || v4 - 2 == v12++)
        return result;
    }
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1A4613E80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for RDVector();
  v5 = swift_allocObject();
  result = RDVector.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1A4613ED4(_QWORD *a1)
{
  return sub_1A46138E0(a1);
}

uint64_t sub_1A4613EF4()
{
  sub_1A4691C8C();
  sub_1A4691C98();
  return sub_1A4691CC8();
}

uint64_t + infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  double v10;
  double v11;
  unint64_t v12;
  unint64_t v13;

  result = swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 < 0)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (v5)
  {
    v6 = a1 + 16;
    v7 = a2 + 16;
    swift_beginAccess();
    result = swift_beginAccess();
    v8 = 0;
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v8 < *(_QWORD *)(*(_QWORD *)v6 + 16))
    {
      if (v8 >= *(_QWORD *)(*(_QWORD *)v7 + 16))
        goto LABEL_15;
      v10 = *(double *)(*(_QWORD *)v6 + 8 * v8 + 32);
      v11 = *(double *)(*(_QWORD *)v7 + 8 * v8 + 32);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A4438D64(0, v9[2] + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      v13 = v9[2];
      v12 = v9[3];
      if (v13 >= v12 >> 1)
      {
        result = (uint64_t)sub_1A4438D64((_QWORD *)(v12 > 1), v13 + 1, 1, v9);
        v9 = (_QWORD *)result;
      }
      ++v8;
      v9[2] = v13 + 1;
      *(double *)&v9[v13 + 4] = v10 + v11;
      if (v5 == v8)
        goto LABEL_13;
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_13:
  type metadata accessor for RDVector();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v9;
  *(_QWORD *)(result + 24) = v9[2];
  return result;
}

uint64_t / infix(_:_:)(uint64_t a1, double a2)
{
  float64x2_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  float64x2_t v11;
  float64x2_t *v12;
  float64x2_t *v13;
  unint64_t v14;
  float64x2_t v15;
  uint64_t v16;
  double v17;
  uint64_t result;

  swift_beginAccess();
  v3 = (float64x2_t *)sub_1A44A6400(*(_QWORD *)(a1 + 24), 0.0);
  swift_beginAccess();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_16:
      v3 = (float64x2_t *)sub_1A46143E0(v3);
    v6 = 0;
    v7 = *(_QWORD *)&v3[1].f64[0];
    v8 = v5 - 1;
    if (v7 < v5 - 1)
      v8 = *(_QWORD *)&v3[1].f64[0];
    if (v8 >= 6 && (unint64_t)v3 - v4 >= 0x20)
    {
      v9 = v8 + 1;
      v10 = (v8 + 1) & 3;
      if (!v10)
        v10 = 4;
      v6 = v9 - v10;
      v11 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0);
      v12 = (float64x2_t *)(v4 + 48);
      v13 = v3 + 3;
      v14 = v6;
      do
      {
        v15 = vdivq_f64(*v12, v11);
        v13[-1] = vdivq_f64(v12[-1], v11);
        *v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
    }
    do
    {
      if (v6 >= v7)
      {
        __break(1u);
        goto LABEL_16;
      }
      v16 = v6;
      v17 = *(double *)(v4 + 8 * v6++ + 32) / a2;
      v3[2].f64[v16] = v17;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
  }
  type metadata accessor for RDVector();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *(float64_t *)(result + 24) = v3[1].f64[0];
  return result;
}

uint64_t Array<A>.sum()(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_1A46916A4();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1A859ECE0](0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(_QWORD *)(a1 + 32);
    swift_retain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v5 = *(_QWORD *)(v4 + 24);
    type metadata accessor for RDVector();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 24) = v5;
    *(_QWORD *)(v6 + 16) = sub_1A44A6400(v5, 0.0);
    v7 = sub_1A4612A20(v6, a1);
    swift_release();
    swift_release();
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for RDVector()
{
  return objc_opt_self();
}

_QWORD *sub_1A4614350(_QWORD *a1)
{
  return sub_1A4438B4C(0, a1[2], 0, a1);
}

_QWORD *sub_1A4614364(_QWORD *a1)
{
  return sub_1A4438E70(0, a1[2], 0, a1);
}

void sub_1A4614378(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1A46916A4();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1A859ECECLL);
}

_QWORD *sub_1A46143E0(_QWORD *a1)
{
  return sub_1A4438D64(0, a1[2], 0, a1);
}

uint64_t sub_1A46143F4(unint64_t a1)
{
  return sub_1A4439740(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_1A4614408(_QWORD *a1)
{
  return sub_1A4438920(0, a1[2], 0, a1);
}

_QWORD *sub_1A461441C(_QWORD *a1)
{
  return sub_1A4438C58(0, a1[2], 0, a1);
}

_QWORD *sub_1A4614430(_QWORD *a1)
{
  return sub_1A443A498(0, a1[2], 0, a1);
}

unint64_t sub_1A4614444()
{
  unint64_t result;

  result = qword_1EE723AE0;
  if (!qword_1EE723AE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B21D4, &type metadata for RDVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723AE0);
  }
  return result;
}

uint64_t sub_1A4614488(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE721EA0);
    v8 = a2;
    result = MEMORY[0x1A85A0000](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A46144EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE723AF0;
  if (!qword_1EE723AF0)
  {
    v1 = type metadata accessor for RDVector();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for RDVector, v1);
    atomic_store(result, (unint64_t *)&qword_1EE723AF0);
  }
  return result;
}

uint64_t sub_1A4614530@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A461457C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return result;
}

uint64_t sub_1A46145C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return result;
}

uint64_t method lookup function for RDVector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RDVector.data.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of RDVector.dimension.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of RDVector.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RDVector.__allocating_init(dimension:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of RDVector.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of RDVector.isZero()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of RDVector.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RDVector.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of RDVector.truncatedLoggingDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of RDVector.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RDVector.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of RDVector.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t storeEnumTagSinglePayload for RDVector.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A46146FC + 4 * byte_1A46B1FF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4614730 + 4 * asc_1A46B1FF0[v4]))();
}

uint64_t sub_1A4614730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4614738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4614740);
  return result;
}

uint64_t sub_1A461474C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4614754);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A4614758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4614760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RDVector.CodingKeys()
{
  return &type metadata for RDVector.CodingKeys;
}

unint64_t sub_1A4614780()
{
  unint64_t result;

  result = qword_1EE723C18;
  if (!qword_1EE723C18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B21AC, &type metadata for RDVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723C18);
  }
  return result;
}

unint64_t sub_1A46147C8()
{
  unint64_t result;

  result = qword_1EE723C20;
  if (!qword_1EE723C20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B211C, &type metadata for RDVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723C20);
  }
  return result;
}

unint64_t sub_1A4614810()
{
  unint64_t result;

  result = qword_1EE723C28;
  if (!qword_1EE723C28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2144, &type metadata for RDVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723C28);
  }
  return result;
}

uint64_t sub_1A4614854(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69736E656D6964 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1A4614940(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A4436344(&qword_1ED242760, type metadata accessor for REMSuggestedAttributeInput, (uint64_t)&protocol conformance descriptor for REMSuggestedAttributeInput);
  static PartialDecodable.partialDecode<A>(key:in:)(v1, v3, a1);
}

void static PartialDecodable.partialDecode<A>(key:in:)(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  int v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;

  v6 = sub_1A46914B8();
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v11 = type metadata accessor for Partial(0, a1, v9, v10);
  a3[3] = v11;
  sub_1A46917E8();
  v24 = a2;
  MEMORY[0x1A85A0000](&protocol conformance descriptor for <A> Partial<A>, v11, &v24);
  v12 = v22;
  sub_1A46917C4();
  if (v12)
  {
    __swift_deallocate_boxed_opaque_existential_0((uint64_t)a3);
    v23 = v12;
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
    if (swift_dynamicCast())
    {
      v14 = v21;
      v15 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v8, v6);
      if (v15 == *MEMORY[0x1E0DEC460])
      {

        (*(void (**)(char *, uint64_t))(v14 + 96))(v8, v6);
        v16 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48)];
        a3[3] = v11;
        Partial.init()(a3);
        v17 = sub_1A46914AC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      else if (v15 == *MEMORY[0x1E0DEC448])
      {

        (*(void (**)(char *, uint64_t))(v14 + 96))(v8, v6);
        v18 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242A38) + 48)];
        a3[3] = v11;
        Partial.init()(a3);
        v19 = sub_1A46914AC();
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
      }
    }

  }
}

uint64_t type metadata accessor for Partial(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Partial);
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1A85A0114);
  return result;
}

void sub_1A4614C6C(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A46179F4();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4614CE0(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A46179B0();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4614D54(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A461796C();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4614DC8(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A4617928();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4614E3C(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A46178E4();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4614EB0(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A46178A0();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4614F24(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A461785C();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

uint64_t Partial.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD v11[4];

  v4 = *a1;
  v5 = *v2;
  v10 = a1;
  v6 = sub_1A4691500();
  swift_retain();
  MEMORY[0x1A859E008](v11, &v10, v5, v6, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEBE98]);
  swift_release();
  if (v11[3])
  {
    type metadata accessor for Partial(0, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v4 + 8), v7, v8);
    result = swift_dynamicCast();
    if ((_DWORD)result)
    {
      *a2 = (uint64_t)v10;
      return result;
    }
  }
  else
  {
    sub_1A445404C((uint64_t)v11, &qword_1ED243E68);
  }
  return Partial.init()(a2);
}

{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD *v11;
  __int128 v12;
  uint64_t v13;
  _OWORD v14[2];

  v4 = *a1;
  v5 = *v2;
  v11 = a1;
  v6 = sub_1A4691500();
  swift_retain();
  MEMORY[0x1A859E008](&v12, &v11, v5, v6, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEBE98]);
  swift_release();
  v7 = (_QWORD *)MEMORY[0x1E0DEE2A8];
  if (v13)
  {
    sub_1A444A940(&v12, v14);
    sub_1A444A940(v14, &v12);
    type metadata accessor for Partial(0, *(_QWORD *)(*(_QWORD *)(*v7 + v4 + 8) + 16), v8, v9);
    result = swift_dynamicCast();
    if ((result & 1) != 0)
    {
      *a2 = (uint64_t)v11;
      return result;
    }
  }
  else
  {
    sub_1A445404C((uint64_t)&v12, &qword_1ED243E68);
  }
  return Partial.init()(a2);
}

uint64_t Partial.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v10;
  _QWORD v11[4];

  v4 = *a1;
  v5 = *v2;
  v10 = a1;
  v6 = sub_1A4691500();
  swift_retain();
  MEMORY[0x1A859E008](v11, &v10, v5, v6, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEBE98]);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E68);
  v7 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v4 + 8);
  v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, v8 ^ 1u, 1, v7);
}

{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _OWORD v22[2];

  v4 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v18 - v7;
  v9 = *v2;
  v19 = v6;
  v10 = sub_1A4691500();
  swift_retain();
  MEMORY[0x1A859E008](&v20, &v19, v9, v10, MEMORY[0x1E0DEE9B8] + 8, MEMORY[0x1E0DEBE98]);
  swift_release();
  if (!v21)
  {
    sub_1A445404C((uint64_t)&v20, &qword_1ED243E68);
    v11 = *(_QWORD *)(v4 + 16);
    v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
LABEL_6:
    v15 = a2;
    v16 = 1;
    return v14(v15, v16, 1, v11);
  }
  sub_1A444A940(&v20, v22);
  sub_1A444A940(v22, &v20);
  v11 = *(_QWORD *)(v4 + 16);
  v12 = swift_dynamicCast();
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v12 & 1) == 0)
  {
    v14((uint64_t)v8, 1, 1, v11);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    goto LABEL_6;
  }
  v14((uint64_t)v8, 0, 1, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v8, v11);
  v15 = a2;
  v16 = 0;
  return v14(v15, v16, 1, v11);
}

void sub_1A4615320(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A4617818();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

void sub_1A4615394(uint64_t a1@<X4>, uint64_t *a2@<X8>)
{
  unint64_t v4;

  v4 = sub_1A46177D4();
  static PartialDecodable.partialDecode<A>(key:in:)(a1, v4, a2);
}

uint64_t Partial.init(backing:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Partial.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1A4691500();
  swift_getTupleTypeMetadata2();
  sub_1A4690BF4();
  result = sub_1A4690738();
  *a1 = result;
  return result;
}

void Partial<A>.init(dictionary:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v21[2];

  v21[1] = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    v9 = (void *)objc_opt_self();
    v20 = 0;
    v10 = a1;
    v11 = objc_msgSend(v9, sel_dataWithJSONObject_options_error_, v10, 0, &v20);
    v12 = v20;
    if (v11)
    {
      v13 = sub_1A468FFC4();
      v15 = v14;

      sub_1A468FB74();
      swift_allocObject();
      sub_1A468FB68();
      v18 = type metadata accessor for Partial(0, a2, v16, v17);
      v21[0] = a3;
      MEMORY[0x1A85A0000](&protocol conformance descriptor for <A> Partial<A>, v18, v21);
      sub_1A468FB5C();

      sub_1A44695EC(v13, v15);
      swift_release();
      if (!v4)
        *a4 = (uint64_t)v20;
    }
    else
    {
      v19 = v12;
      sub_1A468FE68();

      swift_willThrow();
    }
  }
  else
  {
    sub_1A4691500();
    swift_getTupleTypeMetadata2();
    sub_1A4690BF4();
    *a4 = sub_1A4690738();
  }
}

uint64_t Partial<A>.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t (*v27)(char *, unint64_t, uint64_t);
  uint64_t *v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  BOOL v41;
  uint64_t v42;
  uint64_t *v43;
  void (*v44)(char *, _QWORD *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  __int128 v69[2];
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[6];
  uint64_t v73;

  v58 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v64 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v60 = (char *)&v49 - v8;
  v68 = sub_1A4691500();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v63 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = *(_QWORD *)(v63 + 64);
  v11 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v59 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v67 = (uint64_t *)((char *)&v49 - v13);
  MEMORY[0x1E0C80A78](v12);
  v65 = (char *)&v49 - v14;
  v54 = a3;
  v57 = a2;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v16 = sub_1A46917E8();
  v17 = *(_QWORD *)(v16 - 8);
  v61 = v16;
  v62 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v49 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v20 = v66;
  sub_1A4691D28();
  if (v20)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v55 = AssociatedConformanceWitness;
  v50 = v10;
  v66 = 0;
  v56 = v19;
  v51 = MEMORY[0x1E0DEE9B8] + 8;
  v73 = sub_1A46906C0();
  v57 = sub_1A4615E14(v57, v54);
  if (MEMORY[0x1A859E4AC](v57, TupleTypeMetadata2))
  {
    v54 = AssociatedTypeWitness;
    v21 = 0;
    v52 = &v65[*(int *)(TupleTypeMetadata2 + 48)];
    v22 = v63;
    v23 = v64;
    v24 = v57;
    v53 = a1;
    while (1)
    {
      v25 = sub_1A4690C0C();
      sub_1A4690BD0();
      if ((v25 & 1) != 0)
      {
        v26 = v24
            + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))
            + *(_QWORD *)(v22 + 72) * v21;
        v27 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v22 + 16);
        v28 = (uint64_t *)v65;
        result = v27(v65, v26, TupleTypeMetadata2);
        v30 = v54;
      }
      else
      {
        result = sub_1A469147C();
        v30 = v54;
        if (v50 != 8)
          goto LABEL_21;
        v72[0] = result;
        v44 = *(void (**)(char *, _QWORD *, uint64_t))(v22 + 16);
        v28 = (uint64_t *)v65;
        v44(v65, v72, TupleTypeMetadata2);
        result = swift_unknownObjectRelease();
      }
      v31 = v21 + 1;
      if (__OFADD__(v21, 1))
        break;
      v32 = (char *)v67 + *(int *)(TupleTypeMetadata2 + 48);
      v33 = *v28;
      *v67 = v33;
      v34 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      v34(v32, v52, v30);
      v35 = &v59[*(int *)(TupleTypeMetadata2 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v35, v32, v30);
      v36 = v60;
      v34(v60, v35, v30);
      v71 = v33;
      swift_retain_n();
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED242870);
      if ((swift_dynamicCast() & 1) == 0)
      {
        v70 = 0;
        memset(v69, 0, sizeof(v69));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1A445404C((uint64_t)v69, &qword_1EE723C30);
        v45 = sub_1A4691DAC();
        v47 = v46;
        sub_1A461711C();
        swift_allocError();
        *v48 = v45;
        v48[1] = v47;
        swift_willThrow();
        swift_release();
        (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v30);
        (*(void (**)(_QWORD *, uint64_t))(v63 + 8))(v67, TupleTypeMetadata2);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v56, v61);
LABEL_18:
        a1 = v53;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      sub_1A44D3510(v69, (uint64_t)v72);
      __swift_project_boxed_opaque_existential_1(v72, v72[3]);
      swift_getDynamicType();
      v37 = v56;
      v38 = v66;
      (*(void (**)(__int128 *__return_ptr, char *, char *, uint64_t, uint64_t))(v72[4] + 8))(v69, v36, v56, v30, v55);
      v39 = v61;
      if (v38)
      {
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v36, v30);
        (*(void (**)(_QWORD *, uint64_t))(v63 + 8))(v67, TupleTypeMetadata2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v39);
        goto LABEL_18;
      }
      v66 = 0;
      v71 = v33;
      sub_1A469078C();
      sub_1A46907BC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
      v40 = v36;
      v23 = v64;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v30);
      v22 = v63;
      (*(void (**)(_QWORD *, uint64_t))(v63 + 8))(v67, TupleTypeMetadata2);
      v24 = v57;
      ++v21;
      v41 = v31 == MEMORY[0x1A859E4AC](v57, TupleTypeMetadata2);
      a1 = v53;
      v42 = v62;
      v43 = v58;
      if (v41)
        goto LABEL_15;
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  else
  {
    v39 = v61;
    v42 = v62;
    v43 = v58;
LABEL_15:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v56, v39);
    *v43 = v73;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return result;
}

uint64_t sub_1A4615E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char *TupleTypeMetadata2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v14[-v7];
  swift_checkMetadataState();
  sub_1A4690F54();
  v15 = a1;
  v16 = a2;
  v17 = v2;
  sub_1A4691500();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = sub_1A449F0A4((void (*)(char *, char *))sub_1A4617A38, (uint64_t)v14, AssociatedTypeWitness, TupleTypeMetadata2, MEMORY[0x1E0DEDCE8], AssociatedConformanceWitness, MEMORY[0x1E0DEDD18], v11);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v12;
}

uint64_t sub_1A4615FA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return Partial<A>.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

uint64_t PartialOverride._full.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t PartialOverride._partials.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PartialOverride.init(full:partials:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a4, a1);
  result = type metadata accessor for PartialOverride(0, a3, v7, v8);
  *(_QWORD *)(a4 + *(int *)(result + 28)) = a2;
  return result;
}

uint64_t PartialOverride.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[16];
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v5 = v4;
  v10 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8);
  v11 = sub_1A46911A0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v21[-v13];
  v24 = *(_QWORD *)(v5 + *(int *)(a2 + 28));
  v22 = a3;
  v23 = a1;
  type metadata accessor for Partial(255, *(_QWORD *)(a2 + 16), v15, v16);
  v17 = sub_1A4690C78();
  swift_bridgeObjectRetain();
  v18 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v17);
  Sequence.firstMap<A>(_:)((void (*)(char *))sub_1A461716C, (uint64_t)v21, v17, v10, v18, (uint64_t)v14);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v19 + 32))(a4, v14, v10);
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  return swift_getAtKeyPath();
}

uint64_t PartialOverride.subscript.getter@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  int v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _BYTE v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a2;
  v3 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8);
  v34 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v33 - v8;
  v10 = *(_QWORD *)(v3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v7);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v33 - v16;
  v19 = *(int *)(v18 + 28);
  v35 = v2;
  v40 = *(_QWORD *)(v2 + v19);
  v38 = v20;
  v39 = v15;
  type metadata accessor for Partial(255, *(_QWORD *)(v18 + 16), v20, v21);
  v22 = sub_1A4690C78();
  swift_bridgeObjectRetain();
  v23 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v22);
  Sequence.firstMap<A>(_:)((void (*)(char *))sub_1A461718C, (uint64_t)v37, v22, v10, v23, (uint64_t)v9);
  swift_bridgeObjectRelease();
  v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v24(v9, 1, v10) == 1)
  {
    v25 = *(void (**)(char *, uint64_t))(v34 + 8);
    v25(v9, v3);
    swift_getAtKeyPath();
    v26 = v24(v6, 1, v10);
    v27 = v36;
    if (v26 == 1)
    {
      v25(v6, v3);
      v28 = 1;
    }
    else
    {
      v31 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v31(v14, v6, v10);
      v31(v27, v14, v10);
      v28 = 0;
    }
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v29(v17, v9, v10);
    v30 = v36;
    v29(v36, v17, v10);
    v28 = 0;
    v27 = v30;
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v27, v28, 1, v10);
}

uint64_t sub_1A46163FC(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_QWORD *, uint64_t))
{
  uint64_t v6;

  v6 = type metadata accessor for Partial(0, *(_QWORD *)(*a2 + *MEMORY[0x1E0DEE2A8]), a3, (uint64_t)a4);
  swift_bridgeObjectRetain();
  a4(a2, v6);
  return swift_bridgeObjectRelease();
}

uint64_t PartialOverride.subscript.getter@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  _QWORD v22[2];

  v5 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a1 + 8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v22 - v7;
  v22[1] = *(_QWORD *)(v2 + *(int *)(v9 + 28));
  type metadata accessor for Partial(255, *(_QWORD *)(v9 + 16), v10, v11);
  v12 = sub_1A4690C78();
  v15 = (char *)type metadata accessor for Partial(0, v5, v13, v14);
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v12);
  v18 = sub_1A449F0A4((void (*)(char *, char *))sub_1A46171AC, (uint64_t)a1, v12, v15, MEMORY[0x1E0DEDCE8], v16, MEMORY[0x1E0DEDD18], v17);
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
  result = type metadata accessor for PartialOverride(0, v5, v19, v20);
  *(_QWORD *)(a2 + *(int *)(result + 28)) = v18;
  return result;
}

uint64_t sub_1A46165E0@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  type metadata accessor for Partial(0, *(_QWORD *)(*a1 + *MEMORY[0x1E0DEE2A8]), a2, a3);
  swift_bridgeObjectRetain();
  Partial.subscript.getter(a1, a4);
  return swift_bridgeObjectRelease();
}

void static Optional<A>.partialDecode<A>(key:in:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  uint64_t v15;
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *boxed_opaque_existential_0;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;

  v31 = a1;
  v30 = a4;
  v6 = sub_1A46914B8();
  v28 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a2;
  v9 = sub_1A46911A0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v28 - v11;
  sub_1A46917E8();
  v34 = a3;
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEE9A0], v9, &v34);
  v13 = v32;
  sub_1A46917C4();
  if (v13)
  {
    v33 = v13;
    v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
    if (swift_dynamicCast())
    {
      v15 = v28;
      v16 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v8, v6);
      if (v16 == *MEMORY[0x1E0DEC460])
      {

        (*(void (**)(char *, uint64_t))(v15 + 96))(v8, v6);
        v17 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48)];
        v18 = sub_1A46914AC();
        v19 = v30;
        *(_OWORD *)v30 = 0u;
        *((_OWORD *)v19 + 1) = 0u;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      }
      else if (v16 == *MEMORY[0x1E0DEC448])
      {

        (*(void (**)(char *, uint64_t))(v15 + 96))(v8, v6);
        v25 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242A38) + 48)];
        v26 = sub_1A46914AC();
        v27 = v30;
        *(_OWORD *)v30 = 0u;
        *((_OWORD *)v27 + 1) = 0u;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v8, v6);
      }
    }

  }
  else
  {
    v20 = v29;
    v21 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v29) == 1)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v22 = v30;
      *(_OWORD *)v30 = 0u;
      *((_OWORD *)v22 + 1) = 0u;
    }
    else
    {
      v23 = v30;
      v30[3] = v20;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
      (*(void (**)(uint64_t *, char *, uint64_t))(v21 + 32))(boxed_opaque_existential_0, v12, v20);
    }
  }
}

void sub_1A4616940(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t *a4@<X8>)
{
  static Optional<A>.partialDecode<A>(key:in:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 16), a4);
}

uint64_t static KeyPath<>.partialDecode<A>(key:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(a4 + 8))(a1, a2, a3, a5, *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + v5 + 8), a4);
}

uint64_t sub_1A46169A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static KeyPath<>.partialDecode<A>(key:in:)(a1, a2, a3, *(_QWORD *)(a6 - 8), a4);
}

void static PartialPrimitive<>.partialDecode<A>(key:in:)(uint64_t a1@<X2>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  int v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v18 = a2;
  v5 = sub_1A46914B8();
  v17 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(a3 + 24) = a1;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)a3);
  sub_1A46917E8();
  v8 = v19;
  sub_1A46917C4();
  if (v8)
  {
    __swift_deallocate_boxed_opaque_existential_0(a3);
    v20 = v8;
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED243A28);
    if (swift_dynamicCast())
    {
      v10 = v17;
      v11 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v7, v5);
      if (v11 == *MEMORY[0x1E0DEC460])
      {

        (*(void (**)(char *, uint64_t))(v10 + 96))(v7, v5);
        v12 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EE71D1A8) + 48)];
        v13 = sub_1A46914AC();
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
      }
      else if (v11 == *MEMORY[0x1E0DEC448])
      {

        (*(void (**)(char *, uint64_t))(v10 + 96))(v7, v5);
        v14 = &v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED242A38) + 48)];
        v15 = sub_1A46914AC();
        *(_OWORD *)a3 = 0u;
        *(_OWORD *)(a3 + 16) = 0u;
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v5);
      }
    }

  }
}

uint64_t sub_1A4616BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  char *v9;

  sub_1A4691500();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = (char *)a4 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *a4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 48))(a1, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(v9, a1, AssociatedTypeWitness);
}

void sub_1A4616CC0(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEDA90], a2);
}

void sub_1A4616CE8(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEDB78], a2);
}

void sub_1A4616D10(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEDBF8], a2);
}

void sub_1A4616D38(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEDC90], a2);
}

void sub_1A4616D60(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEB448], a2);
}

void sub_1A4616D88(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEBBC8], a2);
}

void sub_1A4616DB0(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEDE98], a2);
}

void sub_1A4616DD8(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEE098], a2);
}

void sub_1A4616E00(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEE128], a2);
}

void sub_1A4616E28(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEE1C0], a2);
}

void sub_1A4616E50(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEB1C0], a2);
}

void sub_1A4616E78(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEB0A8], a2);
}

void sub_1A4616EA0(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEA9A0], a2);
}

void sub_1A4616EC8(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, MEMORY[0x1E0DEAFC0], a2);
}

void sub_1A4616EF0(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  sub_1A4616F38(a1, a2, (uint64_t)&protocol conformance descriptor for <A> [A], MEMORY[0x1E0DEAF40], a3);
}

void sub_1A4616F14(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  sub_1A4616F38(a1, a2, (uint64_t)&protocol conformance descriptor for <> Set<A>, MEMORY[0x1E0DEB3D8], a3);
}

void sub_1A4616F38(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *(_QWORD *)(a2 - 8);
  v8 = v11;
  MEMORY[0x1A85A0000](a3, a1, &v11);
  v10 = v8;
  v9 = MEMORY[0x1A85A0000](a4, a1, &v10);
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, v9, a5);
}

void sub_1A4616FE8(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];
  _QWORD v9[2];

  v6 = *(_QWORD *)(a2 - 16);
  v9[0] = *(_QWORD *)(a2 - 8);
  v5 = v9[0];
  v9[1] = v6;
  MEMORY[0x1A85A0000](&protocol conformance descriptor for <> [A : B], a1, v9);
  v8[0] = v5;
  v8[1] = v6;
  v7 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0D8], a1, v8);
  static PartialPrimitive<>.partialDecode<A>(key:in:)(a1, v7, a3);
}

void sub_1A461709C(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1A4436344(&qword_1EE723C40, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  static PartialDecodable.partialDecode<A>(key:in:)(v1, v3, a1);
}

unint64_t sub_1A461711C()
{
  unint64_t result;

  result = qword_1EE723C38;
  if (!qword_1EE723C38)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for PropertyDoesNotConformToPartialDecodableValue, &type metadata for PropertyDoesNotConformToPartialDecodableValue);
    atomic_store(result, (unint64_t *)&qword_1EE723C38);
  }
  return result;
}

uint64_t type metadata accessor for PartialOverride(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PartialOverride);
}

uint64_t sub_1A461716C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A46163FC(a1, *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 16), (void (*)(_QWORD *, uint64_t))Partial.subscript.getter);
}

uint64_t sub_1A461718C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A46163FC(a1, *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 16), (void (*)(_QWORD *, uint64_t))Partial.subscript.getter);
}

uint64_t sub_1A46171AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  _QWORD *v3;

  return sub_1A46165E0(v3, a1, a2, a3);
}

uint64_t sub_1A46171C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <A> [A], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A4617208(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  v5 = *a3;
  result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> Set<A>, a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1A4617248(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t result;
  __int128 v5;

  v5 = *a3;
  result = MEMORY[0x1A85A0000](&protocol conformance descriptor for <> [A : B], a2, &v5);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

ValueMetadata *type metadata accessor for PropertyDoesNotConformToPartialDecodableValue()
{
  return &type metadata for PropertyDoesNotConformToPartialDecodableValue;
}

uint64_t sub_1A4617298()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1A4617310(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1A46173C4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4617404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1A4617464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A46174D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A4617534(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1A46175B0 + 4 * byte_1A46B2230[v10]))();
  }
}

void sub_1A4617634(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1A4617728()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1A461779CLL);
}

void sub_1A4617730(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1A4617738);
  JUMPOUT(0x1A461779CLL);
}

void sub_1A4617778()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A461779CLL);
}

void sub_1A4617780()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1A461779CLL);
}

uint64_t sub_1A4617788(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1A461779CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1A4617798);
    JUMPOUT(0x1A4617794);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t dispatch thunk of static PartialDecodable.partialKeyPath(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of static PartialDecodableValue.partialDecode<A>(key:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

unint64_t sub_1A46177D4()
{
  unint64_t result;

  result = qword_1EE723C48;
  if (!qword_1EE723C48)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesFeatureExtractor.Parameters, &type metadata for REMSuggestedAttributesFeatureExtractor.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE723C48);
  }
  return result;
}

unint64_t sub_1A4617818()
{
  unint64_t result;

  result = qword_1EE723C50;
  if (!qword_1EE723C50)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters, &type metadata for REMSuggestedAttributesTrainer.Parameters);
    atomic_store(result, (unint64_t *)&qword_1EE723C50);
  }
  return result;
}

unint64_t sub_1A461785C()
{
  unint64_t result;

  result = qword_1EE723C58;
  if (!qword_1EE723C58)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.IntentionalWord, &type metadata for REMSuggestedAttributesTrainer.Parameters.IntentionalWord);
    atomic_store(result, (unint64_t *)&qword_1EE723C58);
  }
  return result;
}

unint64_t sub_1A46178A0()
{
  unint64_t result;

  result = qword_1EE723C60;
  if (!qword_1EE723C60)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble, &type metadata for REMSuggestedAttributesTrainer.Parameters.AnchoredBubble);
    atomic_store(result, (unint64_t *)&qword_1EE723C60);
  }
  return result;
}

unint64_t sub_1A46178E4()
{
  unint64_t result;

  result = qword_1EE723C68;
  if (!qword_1EE723C68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.Embedding, &type metadata for REMSuggestedAttributesTrainer.Parameters.Embedding);
    atomic_store(result, (unint64_t *)&qword_1EE723C68);
  }
  return result;
}

unint64_t sub_1A4617928()
{
  unint64_t result;

  result = qword_1EE723C70;
  if (!qword_1EE723C70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesTrainer.Parameters.CoreBehavior, &type metadata for REMSuggestedAttributesTrainer.Parameters.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1EE723C70);
  }
  return result;
}

unint64_t sub_1A461796C()
{
  unint64_t result;

  result = qword_1EE723C78;
  if (!qword_1EE723C78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request, &type metadata for REMSuggestedAttributesHarvester.Request);
    atomic_store(result, (unint64_t *)&qword_1EE723C78);
  }
  return result;
}

unint64_t sub_1A46179B0()
{
  unint64_t result;

  result = qword_1ED242928;
  if (!qword_1ED242928)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.Embedding, &type metadata for REMSuggestedAttributesHarvester.Request.Embedding);
    atomic_store(result, (unint64_t *)&qword_1ED242928);
  }
  return result;
}

unint64_t sub_1A46179F4()
{
  unint64_t result;

  result = qword_1ED242918;
  if (!qword_1ED242918)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesHarvester.Request.CoreBehavior, &type metadata for REMSuggestedAttributesHarvester.Request.CoreBehavior);
    atomic_store(result, (unint64_t *)&qword_1ED242918);
  }
  return result;
}

uint64_t sub_1A4617A38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1A4616BF0(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t REMOrderedIdentifierMap.reorder<A>(objects:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v5 = sub_1A4690C78();
  swift_getTupleTypeMetadata2();
  v6 = MEMORY[0x1E0DEAF38];
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v5);
  v7 = v2;
  sub_1A4690A98();
  v8 = sub_1A4690C78();
  MEMORY[0x1A85A0000](v6, v8);
  sub_1A4690798();
  if (!v2)
  {
    v14 = a1;
    sub_1A46906CC();
    swift_bridgeObjectRetain();
    v9 = objc_msgSend(v15, sel_orderedIdentifiers);
    v10 = MEMORY[0x1E0DEA968];
    sub_1A4690BA0();

    MEMORY[0x1E0C80A78](v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    sub_1A4618024();
    sub_1A4690AD4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v16;
    v12 = swift_bridgeObjectRetain();
    LOBYTE(v10) = MEMORY[0x1A859DFB4](v12, v10, a2, MEMORY[0x1E0DEA978]);
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      MEMORY[0x1E0C80A78](v14);
      swift_bridgeObjectRetain();
      MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF60], v5);
      sub_1A469150C();
      sub_1A4690C30();
      v7 = v16;
    }
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A4617D24@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v9 = objc_msgSend(*a1, sel_remObjectID);
  v10 = objc_msgSend(v9, sel_uuid);

  sub_1A46900F0();
  v11 = sub_1A46900CC();
  v13 = v12;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v11;
  a2[1] = v13;
  a2[2] = (uint64_t)v8;
  return swift_unknownObjectRetain();
}

uint64_t sub_1A4617E1C@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1A4617D24(a1, a2);
}

uint64_t sub_1A4617E34(void **a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;

  v1 = *a1;
  v2 = (void *)objc_opt_self();
  sub_1A4691410();
  sub_1A4690984();
  v3 = objc_msgSend(v1, sel_remObjectID, 0, 0xE000000000000000);
  v4 = objc_msgSend(v3, sel_description);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A4690984();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel_invalidParameterErrorWithDescription_, v5);

  return swift_willThrow();
}

uint64_t sub_1A4617F5C(void **a1)
{
  return sub_1A4617E34(a1);
}

uint64_t sub_1A4617F74()
{
  uint64_t result;
  uint64_t v1;

  sub_1A469078C();
  result = sub_1A4690720();
  if (v1)
  {
    sub_1A4690C78();
    return sub_1A4690C3C();
  }
  return result;
}

uint64_t sub_1A461800C()
{
  return sub_1A4617F74();
}

unint64_t sub_1A4618024()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE723C80[0];
  if (!qword_1EE723C80[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED242FF0);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, qword_1EE723C80);
  }
  return result;
}

BOOL sub_1A4618070(id *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v19[2];
  uint64_t v20;

  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(*a1, sel_remObjectID);
  v11 = objc_msgSend(v10, sel_uuid);

  sub_1A46900F0();
  v12 = sub_1A46900CC();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = *a2;
  v19[0] = v12;
  v19[1] = v14;
  MEMORY[0x1A859E008](&v20, v19, v15, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  v16 = v20;
  if (v20)
    swift_unknownObjectRelease();
  return v16 != 0;
}

BOOL sub_1A46181A4(id *a1)
{
  uint64_t v1;

  return sub_1A4618070(a1, *(uint64_t **)(v1 + 24), *(_QWORD *)(v1 + 16));
}

uint64_t REMOrderedIdentifierMap.reorder<A>(objects:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v8 = _s24ObjectWithNonNilObjectIDCMa(0, a2, a3, a4);
  v9 = sub_1A46906CC();
  v27 = v9;
  v26 = sub_1A46906CC();
  v10 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1A859E4AC](v10, a2))
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v11 = 4;
  while (1)
  {
    v15 = v11 - 4;
    v16 = sub_1A4690C0C();
    sub_1A4690BD0();
    if ((v16 & 1) == 0)
      break;
    v13 = *(uint64_t **)(a1 + 8 * v11);
    swift_unknownObjectRetain();
    v17 = v11 - 3;
    if (__OFADD__(v15, 1))
      goto LABEL_11;
LABEL_7:
    v18 = objc_msgSend(v13, sel_remObjectID);
    if (v18)
    {
      v12 = (uint64_t)v18;
      v25 = v13;
      v13 = (uint64_t *)swift_allocObject();
      v14 = *v13;
      v13[2] = v12;
      (*(void (**)(char *, _QWORD **))(*(_QWORD *)(*(_QWORD *)(v14 + 80) - 8) + 32))((char *)v13 + *(_QWORD *)(v14 + 96), &v25);
    }
    v25 = v13;
    sub_1A4690C78();
    sub_1A4690C3C();
    ++v11;
    if (v17 == MEMORY[0x1A859E4AC](a1, a2))
      goto LABEL_12;
  }
  v13 = (uint64_t *)sub_1A469147C();
  v17 = v11 - 3;
  if (!__OFADD__(v15, 1))
    goto LABEL_7;
LABEL_11:
  __break(1u);
LABEL_12:
  swift_bridgeObjectRelease();
  v9 = v27;
  v5 = v4;
LABEL_14:
  v19 = REMOrderedIdentifierMap.reorder<A>(objects:)(v9, v8);
  if (v5)
  {
    v20 = v26;
  }
  else
  {
    v21 = v19;
    v22 = swift_bridgeObjectRelease();
    v27 = v21;
    v25 = (_QWORD *)v21;
    MEMORY[0x1E0C80A78](v22);
    v23 = sub_1A4690C78();
    swift_bridgeObjectRetain();
    MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v23);
    sub_1A4690A98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = sub_1A4690BE8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t _s24ObjectWithNonNilObjectIDCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s24ObjectWithNonNilObjectIDCMn);
}

id sub_1A4618490(uint64_t a1)
{
  return *(id *)(a1 + 16);
}

uint64_t sub_1A4618498()
{
  id *v0;
  _QWORD *v1;

  v1 = *v0;

  (*(void (**)(char *))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v0 + *((_QWORD *)*v0 + 12));
  return swift_deallocClassInstance();
}

uint64_t sub_1A46184E8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  return swift_unknownObjectRetain();
}

_QWORD *REMGroceryLocaleMapping.requiredLocaleIds(for:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t inited;
  Swift::String base;
  _QWORD v11[2];
  ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting v12;

  v3 = v2[1];
  v11[0] = *v2;
  v11[1] = v3;
  v4 = v11;
  REMGroceryLocaleMapping.localeSetting(for:)(&v12, *(Swift::String *)&a1);
  if (!v5)
  {
    base = v12.base;
    countAndFlagsBits = v12.meta._countAndFlagsBits;
    object = v12.meta._object;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243000);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A4696430;
    *(Swift::String *)(inited + 32) = base;
    *(_QWORD *)(inited + 48) = countAndFlagsBits;
    *(_QWORD *)(inited + 56) = object;
    swift_bridgeObjectRelease();
    v4 = (_QWORD *)sub_1A446C748(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  return v4;
}

uint64_t REMGroceryLocaleMapping.init(url:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  v5 = sub_1A468FF88();
  if (v2)
  {
    v9 = sub_1A468FF7C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  else
  {
    v7 = v5;
    v8 = v6;
    sub_1A468FB74();
    swift_allocObject();
    sub_1A468FB68();
    sub_1A4621518();
    sub_1A468FB5C();
    v10 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
    swift_release();
    result = sub_1A44695EC(v7, v8);
    *a2 = v12;
    a2[1] = v13;
  }
  return result;
}

uint64_t static REMGroceryLocaleMapping.loadV1(url:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  _BYTE v19[32];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  result = sub_1A468FF88();
  if (!v1)
  {
    v5 = result;
    v6 = v4;
    v7 = (void *)objc_opt_self();
    v8 = (void *)sub_1A468FFAC();
    v17 = 0;
    v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 2, &v17);

    v10 = v17;
    if (v9)
    {
      sub_1A4691278();
      swift_unknownObjectRelease();
      sub_1A44311F0((uint64_t)v19, (uint64_t)&v17);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240048);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v11 = sub_1A4621344(v16);
        swift_bridgeObjectRelease();
        sub_1A44695EC(v5, v6);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        *a1 = 1;
        a1[1] = v11;
      }
      else
      {
        v17 = 0;
        v18 = 0xE000000000000000;
        sub_1A4691410();
        sub_1A4690984();
        sub_1A468FE80();
        sub_1A4690984();
        swift_bridgeObjectRelease();
        v13 = v17;
        v14 = v18;
        sub_1A462155C();
        swift_allocError();
        *(_QWORD *)v15 = v13;
        *(_QWORD *)(v15 + 8) = v14;
        *(_BYTE *)(v15 + 16) = 1;
        swift_willThrow();
        sub_1A44695EC(v5, v6);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      }
    }
    else
    {
      v12 = v10;
      sub_1A468FE68();

      swift_willThrow();
      return sub_1A44695EC(v5, v6);
    }
  }
  return result;
}

uint64_t sub_1A4618A18(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1A462ECB8();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1A461B3FC(v6);
  return sub_1A4691524();
}

uint64_t sub_1A4618A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE723D08);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE723D08);
  if (qword_1EE71C090 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE75B8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void sub_1A4618B20()
{
  qword_1ED240F58 = MEMORY[0x1E0DEE9E8];
}

id REMGroceryDummyModel.__allocating_init(labels:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19ReminderKitInternal20REMGroceryDummyModel_labels] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

id REMGroceryDummyModel.init(labels:)(uint64_t a1)
{
  char *v1;
  objc_class *ObjectType;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v1[OBJC_IVAR____TtC19ReminderKitInternal20REMGroceryDummyModel_labels] = a1;
  v5.receiver = v1;
  v5.super_class = ObjectType;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t REMGroceryDummyModel.predict(_:thresholds:)()
{
  uint64_t v0;

  return sub_1A44BFD9C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E0DEE9D8]);
}

uint64_t REMGroceryDummyModel.labels.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL static REMGroceryDummyModel.isSupported(localeIdentifier:)(uint64_t a1, void *a2)
{
  Swift::Bool v2;
  uint64_t v3;
  Swift::String v6;
  _QWORD v8[2];

  if (qword_1ED240F68 != -1)
    swift_once();
  if ((sub_1A4462344(a1, (uint64_t)a2, qword_1ED240F58) & 1) == 0)
  {
    sub_1A4618CC4(v8);
    if (v3)
      return v2;
    if (v8[1])
    {
      v6._countAndFlagsBits = a1;
      v6._object = a2;
      v2 = REMGroceryLocaleMapping.isSupported(localeIdentifier:)(v6);
      swift_bridgeObjectRelease();
      return v2;
    }
  }
  return 0;
}

void sub_1A4618CC4(_QWORD *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t inited;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t ObjCClassFromMetadata;
  id v33;
  id v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  MEMORY[0x1E0C80A78](v3);
  v52 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A468FF7C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v44 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v44 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - v14;
  type metadata accessor for REMTrialClient();
  inited = swift_initStackObject();
  *(_DWORD *)(inited + 24) = 304;
  v17 = objc_msgSend((id)objc_opt_self(), sel_clientWithIdentifier_, 304);
  *(_QWORD *)(inited + 16) = v17;
  sub_1A44FA418(v55);
  if (!v1)
  {

LABEL_7:
    v31 = v55[1];
    *a1 = v55[0];
    a1[1] = v31;
    return;
  }
  v49 = v6;
  v50 = v15;
  if (qword_1EE71C1E0 != -1)
    swift_once();
  v18 = sub_1A4690318();
  __swift_project_value_buffer(v18, (uint64_t)qword_1EE723D08);
  v19 = v1;
  v20 = v1;
  v21 = sub_1A469030C();
  v22 = sub_1A4690FF0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v47 = a1;
    v24 = (uint8_t *)v23;
    v25 = swift_slowAlloc();
    v45 = v11;
    v26 = v25;
    v55[0] = v25;
    *(_DWORD *)v24 = 136315138;
    v46 = inited;
    swift_getErrorValue();
    v27 = Error.rem_errorDescription.getter(v54);
    v53 = sub_1A4431120(v27, v28, v55);
    sub_1A46911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A442D000, v21, v22, "localeSetting { error: %s }", v24, 0xCu);
    swift_arrayDestroy();
    v29 = v26;
    v11 = v45;
    MEMORY[0x1A85A0114](v29, -1, -1);
    v30 = v24;
    a1 = v47;
    MEMORY[0x1A85A0114](v30, -1, -1);

  }
  else
  {

  }
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v33 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v34 = objc_msgSend(v33, sel_resourceURL);

  v36 = v49;
  v35 = v50;
  v37 = v51;
  if (v34)
  {
    sub_1A468FF1C();

    v38 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
    v39 = (uint64_t)v52;
    v38(v52, v37, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56))(v39, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v39, 1, v5) != 1)
    {
      v38(v35, (char *)v39, v5);
      sub_1A468FEEC();
      sub_1A468FEEC();
      v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40(v37, v5);
      v41 = (uint64_t)v48;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v48, v11, v5);
      REMGroceryLocaleMapping.init(url:)(v41, v55);
      swift_release();
      v40(v11, v5);
      v40(v35, v5);
      goto LABEL_7;
    }
  }
  else
  {
    v39 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v52, 1, 1, v5);
  }
  sub_1A445404C(v39, &qword_1ED243160);
  v42 = (void *)objc_opt_self();
  v43 = (void *)sub_1A469087C();
  objc_msgSend(v42, sel_internalErrorWithDebugDescription_, v43);

  swift_willThrow();
  swift_release();
}

Swift::Bool __swiftcall REMGroceryLocaleMapping.isSupported(localeIdentifier:)(Swift::String localeIdentifier)
{
  uint64_t v1;
  uint64_t v2;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  Swift::String v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  object = localeIdentifier._object;
  countAndFlagsBits = localeIdentifier._countAndFlagsBits;
  v5 = sub_1A46901F8();
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A4690210();
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A4690120();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v2 + 8);
  swift_bridgeObjectRetain();
  v37 = countAndFlagsBits;
  v38 = (unint64_t)object;
  sub_1A4690114();
  v19 = Locale.Components.rem_languageAndScriptWithRegion()();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    sub_1A443E4C8(v19._countAndFlagsBits, (uint64_t)v19._object);
    v21 = v20;
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
      goto LABEL_3;
  }
  sub_1A469012C();
  if ((sub_1A461B020() & 1) == 0)
  {
    sub_1A4690204();
    sub_1A46901D4();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v7, v40);
    v24 = sub_1A4690144();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v24) == 1)
    {
      sub_1A445404C((uint64_t)v10, &qword_1ED240F98);
      if (qword_1EE71C1E0 != -1)
        swift_once();
      v26 = sub_1A4690318();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EE723D08);
      v27 = v38;
      swift_bridgeObjectRetain_n();
      v28 = sub_1A469030C();
      v29 = sub_1A4690FF0();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v44 = v31;
        *(_DWORD *)v30 = 136315138;
        swift_bridgeObjectRetain();
        v43 = sub_1A4431120(v37, v27, &v44);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v28, v29, "REMTrialClient: cannot identify the language identifier for locale: %s", v30, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v31, -1, -1);
        MEMORY[0x1A85A0114](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
LABEL_20:
        v22 = 0;
        return v22 & 1;
      }
      swift_bridgeObjectRelease_n();

    }
    else
    {
      v32 = sub_1A4690138();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
      if (*(_QWORD *)(v18 + 16))
      {
        sub_1A443E4C8(v32, v34);
        if ((v35 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_3:
          swift_bridgeObjectRelease();
          v22 = 1;
          return v22 & 1;
        }
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
    goto LABEL_20;
  }
  if (*(_QWORD *)(v18 + 16))
  {
    sub_1A443E4C8(0x746E61482D687ALL, 0xE700000000000000);
    v22 = v23;
  }
  else
  {
    v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v42);
  return v22 & 1;
}

BOOL static REMGroceryDummyModel.isGrocerySupported(localeIdentifier:)(uint64_t a1, void *a2)
{
  Swift::String v4;
  Swift::Bool v5;
  _QWORD v7[2];

  if (qword_1ED240F68 != -1)
    swift_once();
  if ((sub_1A4462344(a1, (uint64_t)a2, qword_1ED240F58) & 1) != 0)
    return 0;
  sub_1A4618CC4(v7);
  if (!v7[1])
  {
    return 0;
  }
  else
  {
    v4._countAndFlagsBits = a1;
    v4._object = a2;
    v5 = REMGroceryLocaleMapping.isSupported(localeIdentifier:)(v4);
    swift_bridgeObjectRelease();
  }
  return v5;
}

_QWORD *static REMGroceryDummyModel.modelBaseLocale(for:)(uint64_t a1, void *a2)
{
  _QWORD *countAndFlagsBits;
  uint64_t v3;
  Swift::String v7;
  uint64_t v8;
  _QWORD v9[2];
  ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting v10;

  sub_1A4618CC4(&v10);
  if (!v3)
  {
    if (v10.base._object)
    {
      v9[0] = v10.base._countAndFlagsBits;
      v9[1] = v10.base._object;
      countAndFlagsBits = v9;
      v7._countAndFlagsBits = a1;
      v7._object = a2;
      REMGroceryLocaleMapping.localeSetting(for:)(&v10, v7);
      swift_bridgeObjectRelease();
      if (!v8)
      {
        countAndFlagsBits = (_QWORD *)v10.base._countAndFlagsBits;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      return 0;
    }
  }
  return countAndFlagsBits;
}

uint64_t static REMGroceryDummyModel.groceryLanguagesForSettings()()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  char *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  char v39;
  unint64_t v40;
  uint64_t v41;
  _BOOL8 v42;
  uint64_t v43;
  char v44;
  char v45;
  unint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int64_t v57;
  uint64_t v58;
  unint64_t i;
  int64_t v60;
  unint64_t v61;
  int64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  void (*v78)(char *, unint64_t, uint64_t);
  uint64_t v79;
  char *v80;
  char v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  _QWORD *v94;
  _QWORD *v95;
  _QWORD *v96;
  _QWORD *v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  char *v117;
  _QWORD *v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;

  v1 = v0;
  v2 = sub_1A4690210();
  v3 = *(_QWORD **)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v101 - v7;
  sub_1A4618CC4(&v119);
  if (v0)
    return v1;
  if (!v120)
    return MEMORY[0x1E0DEE9D8];
  v114 = v8;
  v116 = v2;
  v117 = v6;
  v102 = 0;
  v10 = 0;
  v119 = MEMORY[0x1E0DEE9D8];
  v11 = v120 + 64;
  v12 = 1 << *(_BYTE *)(v120 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v120 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  v16 = MEMORY[0x1E0DEE9E0];
  v118 = v3;
  v17 = v120;
  v111 = v15;
  v112 = v120 + 64;
LABEL_7:
  v104 = v16;
  while (v14)
  {
    v18 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v19 = v18 | (v10 << 6);
LABEL_9:
    v20 = *(_QWORD *)(v17 + 56);
    v21 = v20 + 48 * v19;
    v1 = *(_QWORD *)(v21 + 40);
    if (v1)
    {
      v26 = (uint64_t *)(v20 + 48 * v19);
      v27 = v26[1];
      v113 = *v26;
      v28 = *(_QWORD *)(v21 + 32);
      v29 = *(_QWORD *)(v16 + 16);
      swift_bridgeObjectRetain();
      if (v29)
      {
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v30 = sub_1A443E4C8(v28, v1);
        if ((v31 & 1) != 0)
        {
          v32 = *(_QWORD **)(*(_QWORD *)(v16 + 56) + 8 * v30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_31;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_31:
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v32 = sub_1A4438920(0, v32[2] + 1, 1, v32);
      v34 = v32[2];
      v33 = v32[3];
      v115 = (unint64_t)v32;
      if (v34 >= v33 >> 1)
        v115 = (unint64_t)sub_1A4438920((_QWORD *)(v33 > 1), v34 + 1, 1, (_QWORD *)v115);
      v35 = v115;
      *(_QWORD *)(v115 + 16) = v34 + 1;
      v36 = v35 + 16 * v34;
      *(_QWORD *)(v36 + 32) = v113;
      *(_QWORD *)(v36 + 40) = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v104;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v121 = v37;
      v40 = sub_1A443E4C8(v28, v1);
      v41 = *(_QWORD *)(v37 + 16);
      v42 = (v39 & 1) == 0;
      v43 = v41 + v42;
      if (__OFADD__(v41, v42))
        goto LABEL_98;
      if (*(_QWORD *)(v37 + 24) >= v43)
      {
        v3 = v118;
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
LABEL_41:
          v16 = v121;
          if ((v39 & 1) != 0)
          {
            v48 = *(_QWORD *)(v121 + 56);
            swift_bridgeObjectRelease();
            *(_QWORD *)(v48 + 8 * v40) = v115;
          }
          else
          {
            *(_QWORD *)(v121 + 8 * (v40 >> 6) + 64) |= 1 << v40;
            v49 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v40);
            *v49 = v28;
            v49[1] = v1;
            *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v40) = v115;
            v50 = *(_QWORD *)(v16 + 16);
            v51 = __OFADD__(v50, 1);
            v52 = v50 + 1;
            if (v51)
            {
              __break(1u);
LABEL_104:
              swift_once();
              while (1)
              {
                v1 = qword_1EE7247A0;
                if (!(v37 >> 62))
                  break;
                swift_retain();
                swift_bridgeObjectRetain();
                v100 = sub_1A46916A4();
                swift_bridgeObjectRelease();
                if ((v100 & 0x8000000000000000) == 0)
                  goto LABEL_92;
                __break(1u);
LABEL_107:
                swift_bridgeObjectRetain_n();
                v88 = (uint64_t)sub_1A445A638(v1);
                swift_bridgeObjectRelease();
LABEL_88:
                v121 = v88;
                v89 = v102;
                sub_1A4618A18((uint64_t *)&v121);
                if (v89)
                  goto LABEL_109;
                swift_bridgeObjectRelease();
                v37 = v121;
                swift_bridgeObjectRelease();
                v119 = v37;
                if (qword_1EE71C230 != -1)
                  goto LABEL_104;
              }
              swift_retain();
LABEL_92:
              sub_1A4465854(0, 0, v1);
              v1 = v119;
              swift_bridgeObjectRelease();
              return v1;
            }
            *(_QWORD *)(v16 + 16) = v52;
            swift_bridgeObjectRetain();
          }
          v15 = v111;
          v11 = v112;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        v37 = (unint64_t)&v121;
        v45 = v39;
        sub_1A4447634();
      }
      else
      {
        v44 = isUniquelyReferenced_nonNull_native;
        v45 = v39;
        sub_1A44415F8(v43, v44);
        v37 = v121;
        v46 = sub_1A443E4C8(v28, v1);
        v3 = v118;
        if ((v45 & 1) != (v47 & 1))
        {
          sub_1A4691C08();
          __break(1u);
LABEL_109:
          result = swift_release();
          __break(1u);
          return result;
        }
        v40 = v46;
      }
      v39 = v45;
      goto LABEL_41;
    }
  }
  v22 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v23 = v114;
  if (v22 >= v15)
    goto LABEL_47;
  v24 = *(_QWORD *)(v11 + 8 * v22);
  ++v10;
  if (v24)
    goto LABEL_24;
  v10 = v22 + 1;
  if (v22 + 1 >= v15)
    goto LABEL_47;
  v24 = *(_QWORD *)(v11 + 8 * v10);
  if (v24)
    goto LABEL_24;
  v10 = v22 + 2;
  if (v22 + 2 >= v15)
    goto LABEL_47;
  v24 = *(_QWORD *)(v11 + 8 * v10);
  if (v24)
  {
LABEL_24:
    v14 = (v24 - 1) & v24;
    v19 = __clz(__rbit64(v24)) + (v10 << 6);
    goto LABEL_9;
  }
  v25 = v22 + 3;
  if (v25 < v15)
  {
    v24 = *(_QWORD *)(v11 + 8 * v25);
    if (!v24)
    {
      while (1)
      {
        v10 = v25 + 1;
        if (__OFADD__(v25, 1))
          break;
        if (v10 >= v15)
          goto LABEL_47;
        v24 = *(_QWORD *)(v11 + 8 * v10);
        ++v25;
        if (v24)
          goto LABEL_24;
      }
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    v10 = v25;
    goto LABEL_24;
  }
LABEL_47:
  swift_release();
  v53 = *(_QWORD *)(v16 + 64);
  v103 = v16 + 64;
  v54 = 1 << *(_BYTE *)(v16 + 32);
  if (v54 < 64)
    v55 = ~(-1 << v54);
  else
    v55 = -1;
  v56 = v55 & v53;
  v105 = (unint64_t)(v54 + 63) >> 6;
  swift_bridgeObjectRetain();
  v57 = 0;
  v58 = v116;
  if (!v56)
    goto LABEL_52;
LABEL_51:
  v109 = (v56 - 1) & v56;
  for (i = __clz(__rbit64(v56)) | (v57 << 6); ; i = __clz(__rbit64(v61)) + (v57 << 6))
  {
    v63 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * i);
    v65 = *v63;
    v64 = v63[1];
    v66 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * i);
    type metadata accessor for REMGroceryLanguage();
    v67 = swift_allocObject();
    v68 = v66;
    v69 = v67;
    *(_QWORD *)(v67 + 16) = v65;
    *(_QWORD *)(v67 + 24) = v64;
    v111 = *(_QWORD *)(v68 + 16);
    if (v111)
    {
      v107 = v67;
      v108 = v57;
      v110 = v68 + 32;
      swift_bridgeObjectRetain();
      v106 = v68;
      swift_bridgeObjectRetain();
      v70 = 0;
      v71 = MEMORY[0x1E0DEE9E8];
      v72 = v58;
      do
      {
        v73 = *(_QWORD *)(v110 + 16 * v70 + 8);
        swift_bridgeObjectRetain_n();
        v113 = v73;
        sub_1A469012C();
        sub_1A4436344(&qword_1EE71D0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
        swift_bridgeObjectRetain();
        v74 = sub_1A46907E0();
        v75 = -1 << *(_BYTE *)(v71 + 32);
        v76 = v74 & ~v75;
        if (((*(_QWORD *)(v71 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8)) >> v76) & 1) != 0)
        {
          v112 = v70;
          v115 = ~v75;
          v77 = v3[9];
          v78 = (void (*)(char *, unint64_t, uint64_t))v3[2];
          do
          {
            v79 = v116;
            v80 = v117;
            v78(v117, *(_QWORD *)(v71 + 48) + v77 * v76, v116);
            sub_1A4436344(&qword_1EE71D100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
            v81 = sub_1A4690864();
            v82 = (void (*)(char *, uint64_t))v3[1];
            v82(v80, v79);
            if ((v81 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v72 = v116;
              v23 = v114;
              v70 = v112;
              v82(v114, v116);
              goto LABEL_69;
            }
            v23 = v114;
            v76 = (v76 + 1) & v115;
            v3 = v118;
          }
          while (((*(_QWORD *)(v71 + 56 + ((v76 >> 3) & 0xFFFFFFFFFFFFF8)) >> v76) & 1) != 0);
          swift_bridgeObjectRelease();
          v83 = v116;
          v84 = (uint64_t)v117;
          v70 = v112;
        }
        else
        {
          swift_bridgeObjectRelease();
          v78 = (void (*)(char *, unint64_t, uint64_t))v3[2];
          v83 = v72;
          v84 = (uint64_t)v117;
        }
        v85 = swift_isUniquelyReferenced_nonNull_native();
        v78((char *)v84, (unint64_t)v23, v83);
        v121 = v71;
        sub_1A461EEC0(v84, v76, v85);
        v71 = v121;
        swift_bridgeObjectRelease();
        v72 = v83;
        ((void (*)(char *, uint64_t))v3[1])(v23, v83);
LABEL_69:
        swift_bridgeObjectRelease();
        ++v70;
        v3 = v118;
      }
      while (v70 != v111);
      v58 = v72;
      v86 = swift_bridgeObjectRelease();
      v16 = v104;
      v87 = v71;
      v69 = v107;
      v57 = v108;
    }
    else
    {
      v86 = swift_bridgeObjectRetain();
      v87 = MEMORY[0x1E0DEE9E8];
    }
    *(_QWORD *)(v69 + 32) = v87;
    MEMORY[0x1A859E3E0](v86);
    v1 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v1 >= *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1A4690BDC();
    sub_1A4690C18();
    sub_1A4690BB8();
    v56 = v109;
    if (v109)
      goto LABEL_51;
LABEL_52:
    v60 = v57 + 1;
    if (__OFADD__(v57, 1))
      goto LABEL_95;
    if (v60 >= v105)
      break;
    v61 = *(_QWORD *)(v103 + 8 * v60);
    ++v57;
    if (!v61)
    {
      v57 = v60 + 1;
      if (v60 + 1 >= v105)
        break;
      v61 = *(_QWORD *)(v103 + 8 * v57);
      if (!v61)
      {
        v57 = v60 + 2;
        if (v60 + 2 >= v105)
          break;
        v61 = *(_QWORD *)(v103 + 8 * v57);
        if (!v61)
        {
          v62 = v60 + 3;
          if (v62 >= v105)
            break;
          v61 = *(_QWORD *)(v103 + 8 * v62);
          if (!v61)
          {
            while (1)
            {
              v57 = v62 + 1;
              if (__OFADD__(v62, 1))
                break;
              if (v57 >= v105)
                goto LABEL_83;
              v61 = *(_QWORD *)(v103 + 8 * v57);
              ++v62;
              if (v61)
                goto LABEL_65;
            }
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            swift_bridgeObjectRetain();
            v90 = sub_1A46916A4();
            swift_bridgeObjectRelease();
            if (!v90)
              goto LABEL_100;
LABEL_85:
            if ((v1 & 0x8000000000000000) != 0 || (v1 & 0x4000000000000000) != 0)
              goto LABEL_107;
            v88 = v1 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain_n();
            goto LABEL_88;
          }
          v57 = v62;
        }
      }
    }
LABEL_65:
    v109 = (v61 - 1) & v61;
  }
LABEL_83:
  swift_release();
  v1 = v119;
  if (v119 >> 62)
    goto LABEL_99;
  if (*(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_85;
LABEL_100:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_1A46B2760;
  if (qword_1EE71C230 != -1)
    swift_once();
  *(_QWORD *)(v91 + 32) = qword_1EE7247A0;
  type metadata accessor for REMGroceryLanguage();
  swift_allocObject();
  swift_retain();
  v92 = sub_1A4657210(0x736E61482D687ALL, 0xE700000000000000, (uint64_t)&unk_1E4C130F8);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 40) = v92;
  swift_allocObject();
  v93 = sub_1A4657210(28261, 0xE200000000000000, (uint64_t)&unk_1E4C13128);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 48) = v93;
  swift_allocObject();
  v94 = sub_1A4657210(29286, 0xE200000000000000, (uint64_t)&unk_1E4C13158);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 56) = v94;
  swift_allocObject();
  v95 = sub_1A4657210(25956, 0xE200000000000000, (uint64_t)&unk_1E4C13198);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 64) = v95;
  swift_allocObject();
  v96 = sub_1A4657210(24938, 0xE200000000000000, (uint64_t)&unk_1E4C131C8);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 72) = v96;
  swift_allocObject();
  v97 = sub_1A4657210(28523, 0xE200000000000000, (uint64_t)&unk_1E4C131F8);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 80) = v97;
  swift_allocObject();
  v98 = sub_1A4657210(0x3931345F7365, 0xE600000000000000, (uint64_t)&unk_1E4C13228);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 88) = v98;
  swift_allocObject();
  v99 = sub_1A4657210(0x53455F7365, 0xE500000000000000, (uint64_t)&unk_1E4C13258);
  swift_arrayDestroy();
  *(_QWORD *)(v91 + 96) = v99;
  v121 = v91;
  sub_1A4690BB8();
  v1 = v121;
  swift_bridgeObjectRelease();
  return v1;
}

void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMGroceryLocaleMapping.localeSetting(for:)(ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting *__return_ptr retstr, Swift::String a2)
{
  uint64_t v2;
  uint64_t v3;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  Swift::String v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t *v47;
  ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting *v48;
  unint64_t v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  ReminderKitInternal::REMGroceryLocaleMapping::LocaleSetting *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  char *v58;

  v53 = retstr;
  v3 = v2;
  object = a2._object;
  countAndFlagsBits = a2._countAndFlagsBits;
  v6 = sub_1A46901F8();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F98);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A4690210();
  v54 = *(_QWORD *)(v12 - 8);
  v55 = v12;
  MEMORY[0x1E0C80A78](v12);
  v58 = (char *)v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A4690120();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v3 + 8);
  swift_bridgeObjectRetain();
  v50[0] = countAndFlagsBits;
  v50[1] = object;
  sub_1A4690114();
  v19 = Locale.Components.rem_languageAndScriptWithRegion()();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v20 = sub_1A443E4C8(v19._countAndFlagsBits, (uint64_t)v19._object);
    if ((v21 & 1) != 0)
    {
      v22 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 48 * v20);
      v24 = *v22;
      v23 = (void *)v22[1];
      v26 = v22[2];
      v25 = (void *)v22[3];
      v28 = v22[4];
      v27 = (void *)v22[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease_n();
LABEL_15:
      v48 = v53;
      v53->base._countAndFlagsBits = v24;
      v48->base._object = v23;
      v48->meta._countAndFlagsBits = v26;
      v48->meta._object = v25;
      v48->ui.value._countAndFlagsBits = v28;
      v48->ui.value._object = v27;
      return;
    }
    swift_bridgeObjectRelease();
  }
  v29 = v58;
  sub_1A469012C();
  if ((sub_1A461B020() & 1) != 0)
  {
    v30 = v54;
    if (*(_QWORD *)(v18 + 16))
    {
      v31 = sub_1A443E4C8(0x746E61482D687ALL, 0xE700000000000000);
      if ((v32 & 1) != 0)
      {
        v33 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 48 * v31);
        v24 = *v33;
        v23 = (void *)v33[1];
        v26 = v33[2];
        v25 = (void *)v33[3];
        v28 = v33[4];
        v27 = (void *)v33[5];
        v34 = *(void (**)(char *, uint64_t))(v30 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v29, v55);
        goto LABEL_15;
      }
    }
    sub_1A462155C();
    swift_allocError();
    *(_QWORD *)v39 = 0xD000000000000011;
    v37 = 0x80000001A46C27F0;
    v40 = 2;
    v41 = v55;
  }
  else
  {
    sub_1A4690204();
    sub_1A46901D4();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v8, v52);
    v35 = sub_1A4690144();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v11, 1, v35) == 1)
    {
      sub_1A445404C((uint64_t)v11, &qword_1ED240F98);
      v56 = 0;
      v57 = 0xE000000000000000;
      sub_1A4691410();
      swift_bridgeObjectRelease();
      v56 = 0xD000000000000010;
      v57 = 0x80000001A46C27D0;
      sub_1A4690984();
      v38 = v56;
      v37 = v57;
      sub_1A462155C();
      swift_allocError();
      v40 = 0;
      *(_QWORD *)v39 = v38;
    }
    else
    {
      v42 = sub_1A4690138();
      v44 = v43;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v35);
      if (*(_QWORD *)(v18 + 16))
      {
        swift_bridgeObjectRetain();
        v45 = sub_1A443E4C8(v42, v44);
        if ((v46 & 1) != 0)
        {
          v47 = (uint64_t *)(*(_QWORD *)(v18 + 56) + 48 * v45);
          v24 = *v47;
          v23 = (void *)v47[1];
          v26 = v47[2];
          v25 = (void *)v47[3];
          v28 = v47[4];
          v27 = (void *)v47[5];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v55);
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
      }
      v56 = 0x65676175676E614CLL;
      v57 = 0xEA0000000000203ALL;
      sub_1A4690984();
      swift_bridgeObjectRelease();
      v49 = v56;
      v37 = v57;
      sub_1A462155C();
      swift_allocError();
      *(_QWORD *)v39 = v49;
      v40 = 2;
    }
    v30 = v54;
    v41 = v55;
  }
  *(_QWORD *)(v39 + 8) = v37;
  *(_BYTE *)(v39 + 16) = v40;
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v41);
}

id REMGroceryDummyModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void REMGroceryDummyModel.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id REMGroceryDummyModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A461AC7C()
{
  uint64_t v0;

  return sub_1A44BFD9C(*(uint64_t (**)(uint64_t))(v0 + 8), v0, MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1A461AC94()
{
  return swift_bridgeObjectRetain();
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.base.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.meta.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.ui.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A461AD2C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1635018093;
  if (*v0 != 1)
    v1 = 26997;
  if (*v0)
    return v1;
  else
    return 1702060386;
}

uint64_t sub_1A461AD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4621B6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A461AD90()
{
  sub_1A46215A0();
  return sub_1A4691DB8();
}

uint64_t sub_1A461ADB8()
{
  sub_1A46215A0();
  return sub_1A4691DC4();
}

uint64_t REMGroceryLocaleMapping.LocaleSetting.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46215A0();
  sub_1A4691D28();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_1A4691788();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1A4691788();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_1A469174C();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A461B00C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMGroceryLocaleMapping.LocaleSetting.init(from:)(a1, a2);
}

uint64_t sub_1A461B020()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F10);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A46901F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A4690180();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4690204();
  sub_1A46901EC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v2, 1, v7) == 1)
  {
    sub_1A445404C((uint64_t)v2, &qword_1ED240F10);
    v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v2, v7);
    if (sub_1A4690138() == 1953390920 && v12 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      v11 = 1;
    }
    else
    {
      v11 = sub_1A4691A40();
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11 & 1;
}

uint64_t sub_1A461B1D0()
{
  _BYTE *v0;

  if (*v0)
    return 0x676E697070616DLL;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_1A461B204@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A4621C88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A461B228()
{
  sub_1A46215E4();
  return sub_1A4691DB8();
}

uint64_t sub_1A461B250()
{
  sub_1A46215E4();
  return sub_1A4691DC4();
}

uint64_t REMGroceryLocaleMapping.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46215E4();
  sub_1A4691D28();
  if (!v2)
  {
    v14 = 0;
    v9 = sub_1A46917AC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED240F70);
    v13 = 1;
    sub_1A4621628();
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A461B3E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return REMGroceryLocaleMapping.init(from:)(a1, a2);
}

uint64_t sub_1A461B3FC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _BOOL4 v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void *v76;
  void *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void *v85;
  void *v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v94;
  unint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  unint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  BOOL v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  unint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;

  v2 = v1;
  v4 = sub_1A4690210();
  v165 = *(_QWORD *)(v4 - 8);
  v166 = v4;
  MEMORY[0x1E0C80A78](v4);
  v164 = (char *)&v151 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[1];
  result = sub_1A46918CC();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_164;
    if (v6)
      return sub_1A461C0F8(0, v6, 1, a1);
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_172;
  v156 = result;
  v151 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    v172 = MEMORY[0x1E0DEE9D8];
    v161 = (char *)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_130:
      if (v15 >= 2)
      {
        v145 = *v151;
        do
        {
          v146 = v15 - 2;
          if (v15 < 2)
            goto LABEL_159;
          if (!v145)
            goto LABEL_171;
          v147 = *(_QWORD *)&v11[16 * v146 + 32];
          v148 = *(_QWORD *)&v11[16 * v15 + 24];
          sub_1A461C42C((char *)(v145 + 8 * v147), (char *)(v145 + 8 * *(_QWORD *)&v11[16 * v15 + 16]), v145 + 8 * v148, v161);
          if (v2)
            break;
          if (v148 < v147)
            goto LABEL_160;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v11 = sub_1A462EBC8((uint64_t)v11);
          if (v146 >= *((_QWORD *)v11 + 2))
            goto LABEL_161;
          v149 = &v11[16 * v146 + 32];
          *(_QWORD *)v149 = v147;
          *((_QWORD *)v149 + 1) = v148;
          v150 = *((_QWORD *)v11 + 2);
          if (v15 > v150)
            goto LABEL_162;
          memmove(&v11[16 * v15 + 16], &v11[16 * v15 + 32], 16 * (v150 - v15));
          *((_QWORD *)v11 + 2) = v150 - 1;
          v15 = v150 - 1;
        }
        while (v150 > 2);
      }
LABEL_141:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1A4690BB8();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = v8 >> 1;
    type metadata accessor for REMGroceryLanguage();
    v10 = sub_1A4690C00();
    *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v161 = (char *)((v10 & 0xFFFFFFFFFFFFFF8) + 32);
    v172 = v10;
  }
  v12 = 0;
  v13 = *a1;
  v14 = *a1 + 16;
  v152 = *a1 - 8;
  v153 = v14;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v159 = v6;
  v167 = v13;
LABEL_15:
  v16 = v12 + 1;
  if (v12 + 1 >= v6)
    goto LABEL_53;
  v17 = *(_QWORD *)(v13 + 8 * v16);
  v158 = v12;
  v18 = *(_QWORD *)(v13 + 8 * v12);
  v19 = *(_QWORD *)(v17 + 24);
  v162 = v17;
  if (!v19)
  {
    swift_retain();
    swift_retain();
    v25 = (id)_REMGetLocalizedString();
    v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v19 = v28;
    goto LABEL_20;
  }
  v20 = *(_QWORD *)(v17 + 16);
  swift_retain();
  v21 = v18;
  swift_retain();
  swift_bridgeObjectRetain();
  v22 = v164;
  sub_1A469018C();
  v23 = (void *)sub_1A4690150();
  (*(void (**)(char *, uint64_t))(v165 + 8))(v22, v166);
  v24 = (void *)sub_1A469087C();
  v25 = objc_msgSend(v23, sel_localizedStringForLanguage_context_, v24, 3);

  if (v25)
  {
    v20 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v27 = v26;
    swift_bridgeObjectRelease();
    v19 = v27;
    v18 = v21;
LABEL_20:

    goto LABEL_22;
  }
  v18 = v21;
LABEL_22:
  v170 = v20;
  v171 = v19;
  v29 = *(_QWORD *)(v18 + 24);
  if (v29)
  {
    v30 = v11;
    v163 = v18;
    v31 = *(_QWORD *)(v18 + 16);
    swift_bridgeObjectRetain();
    v32 = v164;
    sub_1A469018C();
    v33 = (void *)sub_1A4690150();
    (*(void (**)(char *, uint64_t))(v165 + 8))(v32, v166);
    v34 = (void *)sub_1A469087C();
    v35 = objc_msgSend(v33, sel_localizedStringForLanguage_context_, v34, 3);

    if (!v35)
    {
      v11 = v30;
      goto LABEL_28;
    }
    v31 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v37 = v36;
    swift_bridgeObjectRelease();
    v29 = v37;
    v11 = v30;
  }
  else
  {
    v35 = (id)_REMGetLocalizedString();
    v31 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v29 = v38;
  }

LABEL_28:
  v168 = v31;
  v169 = v29;
  v160 = sub_1A4466118();
  v163 = sub_1A469123C();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v158;
  v6 = v159;
  v16 = v158 + 2;
  if (v158 + 2 >= v159)
    goto LABEL_45;
  v154 = v11;
  v155 = v2;
  v39 = v153 + 8 * v158;
  while (1)
  {
    v162 = v16;
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(_QWORD *)(*(_QWORD *)v39 + 24);
    if (v41)
    {
      v42 = *(_QWORD *)(*(_QWORD *)v39 + 16);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v43 = v164;
      sub_1A469018C();
      v44 = (void *)sub_1A4690150();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v43, v166);
      v45 = (void *)sub_1A469087C();
      v46 = objc_msgSend(v44, sel_localizedStringForLanguage_context_, v45, 3);

      if (!v46)
        goto LABEL_35;
      v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v48 = v47;
      swift_bridgeObjectRelease();
      v41 = v48;
    }
    else
    {
      swift_retain();
      swift_retain();
      v46 = (id)_REMGetLocalizedString();
      v42 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v41 = v49;
    }

LABEL_35:
    v170 = v42;
    v171 = v41;
    v50 = *(_QWORD *)(v40 + 24);
    if (!v50)
    {
      v55 = (id)_REMGetLocalizedString();
      v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v50 = v58;
      goto LABEL_39;
    }
    v51 = *(_QWORD *)(v40 + 16);
    swift_bridgeObjectRetain();
    v52 = v164;
    sub_1A469018C();
    v53 = (void *)sub_1A4690150();
    (*(void (**)(char *, uint64_t))(v165 + 8))(v52, v166);
    v54 = (void *)sub_1A469087C();
    v55 = objc_msgSend(v53, sel_localizedStringForLanguage_context_, v54, 3);

    if (v55)
    {
      v51 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v57 = v56;
      swift_bridgeObjectRelease();
      v50 = v57;
      v13 = v167;
LABEL_39:

      goto LABEL_41;
    }
    v13 = v167;
LABEL_41:
    v59 = v163 == -1;
    v168 = v51;
    v169 = v50;
    v60 = sub_1A469123C();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v59 == (v60 != -1))
      break;
    v16 = v162 + 1;
    v39 += 8;
    v6 = v159;
    if (v159 == v162 + 1)
    {
      v16 = v159;
      v11 = v154;
      v2 = v155;
      v12 = v158;
      goto LABEL_45;
    }
  }
  v11 = v154;
  v2 = v155;
  v12 = v158;
  v6 = v159;
  v16 = v162;
LABEL_45:
  if (v163 != -1)
  {
LABEL_53:
    if (v16 >= v6)
      goto LABEL_82;
    if (__OFSUB__(v16, v12))
      goto LABEL_163;
    if (v16 - v12 >= v156)
      goto LABEL_82;
    v66 = v12 + v156;
    if (__OFADD__(v12, v156))
      goto LABEL_165;
    if (v66 >= v6)
      v66 = v6;
    if (v66 < v12)
    {
LABEL_166:
      __break(1u);
      goto LABEL_167;
    }
    if (v16 == v66)
      goto LABEL_82;
    v157 = v66;
    v158 = v12;
    v154 = v11;
    v155 = v2;
    v67 = (uint64_t *)(v152 + 8 * v16);
LABEL_64:
    v69 = *(_QWORD *)(v13 + 8 * v16);
    v70 = v158;
    v160 = (unint64_t)v67;
    v162 = v16;
    while (1)
    {
      v71 = *v67;
      v72 = *(_QWORD *)(v69 + 24);
      if (!v72)
        break;
      v73 = *(_QWORD *)(v69 + 16);
      swift_retain();
      v74 = v71;
      swift_retain();
      swift_bridgeObjectRetain();
      v75 = v164;
      sub_1A469018C();
      v76 = (void *)sub_1A4690150();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v75, v166);
      v77 = (void *)sub_1A469087C();
      v78 = objc_msgSend(v76, sel_localizedStringForLanguage_context_, v77, 3);

      if (v78)
      {
        v73 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v80 = v79;
        swift_bridgeObjectRelease();
        v72 = v80;
        v71 = v74;
        v13 = v167;
LABEL_69:

        goto LABEL_71;
      }
      v71 = v74;
      v13 = v167;
LABEL_71:
      v170 = v73;
      v171 = v72;
      v82 = *(_QWORD *)(v71 + 24);
      if (!v82)
      {
        v87 = (id)_REMGetLocalizedString();
        v83 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v82 = v90;
        goto LABEL_75;
      }
      v163 = v71;
      v83 = *(_QWORD *)(v71 + 16);
      swift_bridgeObjectRetain();
      v84 = v164;
      sub_1A469018C();
      v85 = (void *)sub_1A4690150();
      (*(void (**)(char *, uint64_t))(v165 + 8))(v84, v166);
      v86 = (void *)sub_1A469087C();
      v87 = objc_msgSend(v85, sel_localizedStringForLanguage_context_, v86, 3);

      if (v87)
      {
        v83 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v89 = v88;
        swift_bridgeObjectRelease();
        v82 = v89;
        v13 = v167;
LABEL_75:

        goto LABEL_77;
      }
      v13 = v167;
LABEL_77:
      v168 = v83;
      v169 = v82;
      sub_1A4466118();
      v91 = sub_1A469123C();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v91 != -1)
      {
        v68 = v162;
LABEL_63:
        v16 = v68 + 1;
        v67 = (uint64_t *)(v160 + 8);
        if (v16 != v157)
          goto LABEL_64;
        v16 = v157;
        v12 = v158;
        v11 = v154;
        v2 = v155;
LABEL_82:
        if (v16 < v12)
          goto LABEL_158;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v162 = v16;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v11 = sub_1A462E5B0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
        v95 = *((_QWORD *)v11 + 2);
        v94 = *((_QWORD *)v11 + 3);
        v15 = v95 + 1;
        if (v95 >= v94 >> 1)
          v11 = sub_1A462E5B0((char *)(v94 > 1), v95 + 1, 1, v11);
        *((_QWORD *)v11 + 2) = v15;
        v96 = v11 + 32;
        v97 = &v11[16 * v95 + 32];
        v98 = v162;
        *(_QWORD *)v97 = v12;
        *((_QWORD *)v97 + 1) = v98;
        if (v95)
        {
          while (2)
          {
            v99 = v15 - 1;
            if (v15 >= 4)
            {
              v104 = &v96[16 * v15];
              v105 = *((_QWORD *)v104 - 8);
              v106 = *((_QWORD *)v104 - 7);
              v110 = __OFSUB__(v106, v105);
              v107 = v106 - v105;
              if (v110)
                goto LABEL_147;
              v109 = *((_QWORD *)v104 - 6);
              v108 = *((_QWORD *)v104 - 5);
              v110 = __OFSUB__(v108, v109);
              v102 = v108 - v109;
              v103 = v110;
              if (v110)
                goto LABEL_148;
              v111 = v15 - 2;
              v112 = &v96[16 * v15 - 32];
              v114 = *(_QWORD *)v112;
              v113 = *((_QWORD *)v112 + 1);
              v110 = __OFSUB__(v113, v114);
              v115 = v113 - v114;
              if (v110)
                goto LABEL_150;
              v110 = __OFADD__(v102, v115);
              v116 = v102 + v115;
              if (v110)
                goto LABEL_153;
              if (v116 >= v107)
              {
                v134 = &v96[16 * v99];
                v136 = *(_QWORD *)v134;
                v135 = *((_QWORD *)v134 + 1);
                v110 = __OFSUB__(v135, v136);
                v137 = v135 - v136;
                if (v110)
                  goto LABEL_157;
                v127 = v102 < v137;
              }
              else
              {
LABEL_101:
                if ((v103 & 1) != 0)
                  goto LABEL_149;
                v111 = v15 - 2;
                v117 = &v96[16 * v15 - 32];
                v119 = *(_QWORD *)v117;
                v118 = *((_QWORD *)v117 + 1);
                v120 = __OFSUB__(v118, v119);
                v121 = v118 - v119;
                v122 = v120;
                if (v120)
                  goto LABEL_152;
                v123 = &v96[16 * v99];
                v125 = *(_QWORD *)v123;
                v124 = *((_QWORD *)v123 + 1);
                v110 = __OFSUB__(v124, v125);
                v126 = v124 - v125;
                if (v110)
                  goto LABEL_155;
                if (__OFADD__(v121, v126))
                  goto LABEL_156;
                if (v121 + v126 < v102)
                  goto LABEL_113;
                v127 = v102 < v126;
              }
              if (v127)
                v99 = v111;
            }
            else
            {
              if (v15 == 3)
              {
                v101 = *((_QWORD *)v11 + 4);
                v100 = *((_QWORD *)v11 + 5);
                v110 = __OFSUB__(v100, v101);
                v102 = v100 - v101;
                v103 = v110;
                goto LABEL_101;
              }
              v128 = *((_QWORD *)v11 + 4);
              v129 = *((_QWORD *)v11 + 5);
              v110 = __OFSUB__(v129, v128);
              v121 = v129 - v128;
              v122 = v110;
LABEL_113:
              if ((v122 & 1) != 0)
                goto LABEL_151;
              v130 = &v96[16 * v99];
              v132 = *(_QWORD *)v130;
              v131 = *((_QWORD *)v130 + 1);
              v110 = __OFSUB__(v131, v132);
              v133 = v131 - v132;
              if (v110)
                goto LABEL_154;
              if (v133 < v121)
                goto LABEL_14;
            }
            v138 = v99 - 1;
            if (v99 - 1 >= v15)
            {
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
              goto LABEL_166;
            }
            if (!v13)
              goto LABEL_169;
            v139 = v13;
            v140 = &v96[16 * v138];
            v141 = *(_QWORD *)v140;
            v142 = &v96[16 * v99];
            v143 = *((_QWORD *)v142 + 1);
            sub_1A461C42C((char *)(v139 + 8 * *(_QWORD *)v140), (char *)(v139 + 8 * *(_QWORD *)v142), v139 + 8 * v143, v161);
            if (v2)
              goto LABEL_141;
            if (v143 < v141)
              goto LABEL_144;
            if (v99 > *((_QWORD *)v11 + 2))
              goto LABEL_145;
            *(_QWORD *)v140 = v141;
            *(_QWORD *)&v96[16 * v138 + 8] = v143;
            v144 = *((_QWORD *)v11 + 2);
            if (v99 >= v144)
              goto LABEL_146;
            v15 = v144 - 1;
            memmove(&v96[16 * v99], v142 + 16, 16 * (v144 - 1 - v99));
            *((_QWORD *)v11 + 2) = v144 - 1;
            v13 = v167;
            if (v144 <= 2)
              goto LABEL_14;
            continue;
          }
        }
        v15 = 1;
LABEL_14:
        v6 = v159;
        v12 = v162;
        if (v162 >= v159)
          goto LABEL_130;
        goto LABEL_15;
      }
      v68 = v162;
      if (!v13)
        goto LABEL_168;
      v92 = *v67;
      v69 = v67[1];
      *v67 = v69;
      v67[1] = v92;
      --v67;
      if (v68 == ++v70)
        goto LABEL_63;
    }
    swift_retain();
    swift_retain();
    v78 = (id)_REMGetLocalizedString();
    v73 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v72 = v81;
    goto LABEL_69;
  }
  if (v16 >= v12)
  {
    if (v12 < v16)
    {
      v61 = (uint64_t *)(v152 + 8 * v16);
      v62 = v16;
      v63 = v12;
      v64 = (uint64_t *)(v13 + 8 * v12);
      while (1)
      {
        if (v63 != --v62)
        {
          if (!v13)
            goto LABEL_170;
          v65 = *v64;
          *v64 = *v61;
          *v61 = v65;
        }
        ++v63;
        --v61;
        ++v64;
        if (v63 >= v62)
          goto LABEL_53;
      }
    }
    goto LABEL_53;
  }
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A461C0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v36 = a1;
  v47 = sub_1A4690210();
  v42 = *(_QWORD *)(v47 - 8);
  result = MEMORY[0x1E0C80A78](v47);
  v41 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = a2;
  v39 = a3;
  if (a3 != a2)
  {
    v38 = *a4;
    v9 = (_QWORD *)(v38 + 8 * v39 - 8);
LABEL_5:
    v10 = *(_QWORD *)(v38 + 8 * v39);
    v11 = v36;
    v37 = v9;
    while (1)
    {
      v12 = *v9;
      v13 = *(_QWORD *)(v10 + 24);
      if (!v13)
        break;
      v14 = *(_QWORD *)(v10 + 16);
      swift_retain();
      v15 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      v16 = v41;
      sub_1A469018C();
      v17 = (void *)sub_1A4690150();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v47);
      v18 = (void *)sub_1A469087C();
      v19 = objc_msgSend(v17, sel_localizedStringForLanguage_context_, v18, 3);

      if (v19)
      {
        v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v21 = v20;
        swift_bridgeObjectRelease();
        v13 = v21;
        v12 = v15;
LABEL_10:

        goto LABEL_12;
      }
      v12 = v15;
LABEL_12:
      v45 = v14;
      v46 = v13;
      v23 = *(_QWORD *)(v12 + 24);
      if (v23)
      {
        v40 = v12;
        v24 = *(_QWORD *)(v12 + 16);
        swift_bridgeObjectRetain();
        v25 = v41;
        sub_1A469018C();
        v26 = (void *)sub_1A4690150();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v47);
        v27 = (void *)sub_1A469087C();
        v28 = objc_msgSend(v26, sel_localizedStringForLanguage_context_, v27, 3);

        if (!v28)
          goto LABEL_17;
        v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v30 = v29;
        swift_bridgeObjectRelease();
        v23 = v30;
      }
      else
      {
        v28 = (id)_REMGetLocalizedString();
        v24 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v23 = v31;
      }

LABEL_17:
      v43 = v24;
      v44 = v23;
      sub_1A4466118();
      v32 = sub_1A469123C();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (v32 != -1)
        goto LABEL_4;
      if (!v38)
      {
        __break(1u);
        return result;
      }
      v33 = *v9;
      v10 = v9[1];
      *v9 = v10;
      v9[1] = v33;
      --v9;
      if (v39 == ++v11)
      {
LABEL_4:
        v9 = v37 + 1;
        if (++v39 == v35)
          return result;
        goto LABEL_5;
      }
    }
    swift_retain();
    swift_retain();
    v19 = (id)_REMGetLocalizedString();
    v14 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = v22;
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_1A461C42C(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t result;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;

  v8 = sub_1A4690210();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x1E0C80A78](v8);
  v74 = a3;
  v75 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2 - a1;
  v11 = a2 - a1 + 7;
  if (a2 - a1 >= 0)
    v11 = a2 - a1;
  v12 = v11 >> 3;
  v13 = a3 - (_QWORD)a2;
  v14 = v13 / 8;
  v86 = a1;
  v85 = a4;
  if (v11 >> 3 >= v13 / 8)
  {
    if (v13 < -7)
      goto LABEL_64;
    if (a4 != a2 || &a2[8 * v14] <= a4)
      memmove(a4, a2, 8 * v14);
    v41 = &a4[8 * v14];
    v84 = v41;
    v86 = a2;
    if (v13 < 8 || a1 >= a2)
    {
LABEL_63:
      sub_1A462E9D4((void **)&v86, (const void **)&v85, &v84);
      return 1;
    }
    v42 = (char *)(v74 - 8);
    v43 = a2;
    v71 = a4;
    v78 = a1;
    while (1)
    {
      v79 = a2;
      v74 = (unint64_t)v41;
      v44 = *((_QWORD *)v41 - 1);
      v45 = *((_QWORD *)v43 - 1);
      v72 = v43 - 8;
      v73 = v41 - 8;
      v46 = *(_QWORD *)(v44 + 24);
      if (v46)
      {
        v47 = *(_QWORD *)(v44 + 16);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v48 = v75;
        sub_1A469018C();
        v49 = (void *)sub_1A4690150();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v48, v77);
        v50 = (void *)sub_1A469087C();
        v51 = objc_msgSend(v49, sel_localizedStringForLanguage_context_, v50, 3);

        if (!v51)
          goto LABEL_45;
        v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v53 = v52;
        swift_bridgeObjectRelease();
        v46 = v53;
      }
      else
      {
        swift_retain();
        swift_retain();
        v51 = (id)_REMGetLocalizedString();
        v47 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v46 = v54;
      }

LABEL_45:
      v82 = v47;
      v83 = v46;
      v55 = *(_QWORD *)(v45 + 24);
      if (!v55)
      {
        v60 = (id)_REMGetLocalizedString();
        v56 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v55 = v63;
        goto LABEL_49;
      }
      v56 = *(_QWORD *)(v45 + 16);
      swift_bridgeObjectRetain();
      v57 = v75;
      sub_1A469018C();
      v58 = (void *)sub_1A4690150();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v77);
      v59 = (void *)sub_1A469087C();
      v60 = objc_msgSend(v58, sel_localizedStringForLanguage_context_, v59, 3);

      if (v60)
      {
        v56 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v62 = v61;
        swift_bridgeObjectRelease();
        v55 = v62;
        a4 = v71;
LABEL_49:

        goto LABEL_51;
      }
      a4 = v71;
LABEL_51:
      v64 = v42 + 8;
      v80 = v56;
      v81 = v55;
      sub_1A4466118();
      v65 = sub_1A469123C();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v65 == -1)
      {
        v68 = v78;
        v41 = (char *)v74;
        v43 = v72;
        if (v64 != v79 || v42 >= v79)
          *(_QWORD *)v42 = *(_QWORD *)v72;
        v86 = v43;
        if (v41 <= a4)
          goto LABEL_63;
      }
      else
      {
        v66 = v73;
        v84 = v73;
        v68 = v78;
        v67 = v79;
        if ((unint64_t)v64 < v74 || (unint64_t)v42 >= v74 || v64 != (char *)v74)
          *(_QWORD *)v42 = *(_QWORD *)v73;
        v43 = v67;
        v41 = v66;
        if (v66 <= a4)
          goto LABEL_63;
      }
      v42 -= 8;
      a2 = v43;
      if (v43 <= v68)
        goto LABEL_63;
    }
  }
  if (v10 >= -7)
  {
    if (a4 != a1 || &a1[8 * v12] <= a4)
      memmove(a4, a1, 8 * v12);
    v73 = &a4[8 * v12];
    v84 = v73;
    if (v10 >= 8 && (unint64_t)a2 < v74)
    {
      while (1)
      {
        v78 = a1;
        v79 = a2;
        v15 = *(_QWORD *)a2;
        v16 = *(_QWORD *)a4;
        v17 = *(_QWORD *)(v15 + 24);
        if (!v17)
          break;
        v18 = a4;
        v19 = *(_QWORD *)(v15 + 16);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v20 = v75;
        sub_1A469018C();
        v21 = (void *)sub_1A4690150();
        (*(void (**)(char *, uint64_t))(v76 + 8))(v20, v77);
        v22 = (void *)sub_1A469087C();
        v23 = objc_msgSend(v21, sel_localizedStringForLanguage_context_, v22, 3);

        if (v23)
        {
          v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v25 = v24;
          swift_bridgeObjectRelease();
          v17 = v25;
          a4 = v18;
LABEL_14:

          goto LABEL_16;
        }
        a4 = v18;
LABEL_16:
        v82 = v19;
        v83 = v17;
        v27 = *(_QWORD *)(v16 + 24);
        if (v27)
        {
          v28 = a4;
          v29 = *(_QWORD *)(v16 + 16);
          swift_bridgeObjectRetain();
          v30 = v75;
          sub_1A469018C();
          v31 = (void *)sub_1A4690150();
          (*(void (**)(char *, uint64_t))(v76 + 8))(v30, v77);
          v32 = (void *)sub_1A469087C();
          v33 = objc_msgSend(v31, sel_localizedStringForLanguage_context_, v32, 3);

          if (!v33)
          {
            a4 = v28;
            goto LABEL_22;
          }
          v29 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v35 = v34;
          swift_bridgeObjectRelease();
          v27 = v35;
          a4 = v28;
        }
        else
        {
          v33 = (id)_REMGetLocalizedString();
          v29 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v27 = v36;
        }

LABEL_22:
        v80 = v29;
        v81 = v27;
        sub_1A4466118();
        v37 = sub_1A469123C();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v37 == -1)
        {
          v39 = v78;
          v40 = v79 + 8;
          if (v78 < v79 || v78 >= v40 || v78 != v79)
            *(_QWORD *)v78 = *(_QWORD *)v79;
        }
        else
        {
          v39 = v78;
          v38 = v79;
          if (v78 != a4)
            *(_QWORD *)v78 = *(_QWORD *)a4;
          a4 += 8;
          v85 = a4;
          v40 = v38;
        }
        a1 = v39 + 8;
        v86 = a1;
        if (a4 < v73)
        {
          a2 = v40;
          if ((unint64_t)v40 < v74)
            continue;
        }
        goto LABEL_63;
      }
      swift_retain();
      swift_retain();
      v23 = (id)_REMGetLocalizedString();
      v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v17 = v26;
      goto LABEL_14;
    }
    goto LABEL_63;
  }
LABEL_64:
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A461CB2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4D0);
  v3 = sub_1A46913BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_37;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v0;
  v32 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8)
      break;
    v17 = (_QWORD *)(v2 + 56);
    v18 = *(_QWORD *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_31;
      v18 = *(_QWORD *)(v32 + 8 * v11);
      if (!v18)
      {
        v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          v1 = v31;
          goto LABEL_33;
        }
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            v11 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_39;
            if (v11 >= v8)
              goto LABEL_31;
            v18 = *(_QWORD *)(v32 + 8 * v11);
            ++v19;
            if (v18)
              goto LABEL_21;
          }
        }
        v11 = v19;
      }
    }
LABEL_21:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v20;
    v22 = v20[1];
    sub_1A4691C8C();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  swift_release();
  v1 = v31;
  v17 = (_QWORD *)(v2 + 56);
LABEL_33:
  v30 = 1 << *(_BYTE *)(v2 + 32);
  if (v30 > 63)
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v30;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_37:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A461CDF0(uint64_t a1)
{
  return sub_1A461D8F4(a1, &qword_1EE71E050);
}

uint64_t sub_1A461CDFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D60);
  result = sub_1A46913BC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_1A4691C80();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A461D07C(uint64_t a1)
{
  return sub_1A461D8F4(a1, &qword_1EE71E010);
}

uint64_t sub_1A461D088()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D80);
  result = sub_1A46913BC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1A4691C8C();
      sub_1A4691C98();
      result = sub_1A4691CC8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A461D330()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D78);
  result = sub_1A46913BC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1A4691C8C();
      sub_1A4691C98();
      result = sub_1A4691CC8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A461D5D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  _QWORD *v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D68);
  v3 = sub_1A46913BC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v29 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v28 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    while (1)
    {
      if (v7)
      {
        v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v13 = v12 | (v10 << 6);
      }
      else
      {
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v28)
          goto LABEL_33;
        v15 = v29[v14];
        ++v10;
        if (!v15)
        {
          v10 = v14 + 1;
          if (v14 + 1 >= v28)
            goto LABEL_33;
          v15 = v29[v10];
          if (!v15)
          {
            v10 = v14 + 2;
            if (v14 + 2 >= v28)
              goto LABEL_33;
            v15 = v29[v10];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v28)
              {
LABEL_33:
                swift_release();
                v1 = v27;
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero(v29, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v29 = -1 << v26;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v15 = v29[v16];
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_39;
                  if (v10 >= v28)
                    goto LABEL_33;
                  v15 = v29[v10];
                  ++v16;
                  if (v15)
                    goto LABEL_23;
                }
              }
              v10 = v16;
            }
          }
        }
LABEL_23:
        v7 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v13);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      sub_1A4691C8C();
      sub_1A4690948();
      v18 = sub_1A4691CC8();
      result = swift_bridgeObjectRelease();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = v18 & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v8 + 8 * v21);
        }
        while (v25 == -1);
        v11 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v17;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A461D8E8(uint64_t a1)
{
  return sub_1A461D8F4(a1, (uint64_t *)&unk_1EE71EEE0);
}

uint64_t sub_1A461D8F4(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1A46913BC();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1A4691134();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1A461DB8C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E008);
  result = sub_1A46913BC();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1A4691C8C();
      sub_1A4691C98();
      result = sub_1A4691CC8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A461DE34(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1A46913BC();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1A4436344(v45, v44, v46);
      result = sub_1A46907E0();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_1A461E194(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A461CB2C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A461F114();
      goto LABEL_22;
    }
    sub_1A461FE80();
  }
  v11 = *v4;
  sub_1A4691C8C();
  sub_1A4690948();
  result = sub_1A4691CC8();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1A4691A40(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1A4691BFC();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1A4691A40();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void sub_1A461E32C(uint64_t a1, unint64_t a2, char a3)
{
  sub_1A461ED30(a1, a2, a3, &qword_1EE71E050, (unint64_t *)&qword_1ED2421C8);
}

uint64_t sub_1A461E348(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A461CDFC();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A461F2B0();
      goto LABEL_14;
    }
    sub_1A4620108();
  }
  v8 = *v3;
  result = sub_1A4691C80();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1A4691BFC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A461E468(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1A46900FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A461DE34(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], &qword_1EE723D88, (unint64_t *)&qword_1ED23FE90, MEMORY[0x1E0CB09C8]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1A461FC5C((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], &qword_1EE723D88);
      goto LABEL_12;
    }
    sub_1A4621028(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], &qword_1EE723D88, (unint64_t *)&qword_1ED23FE90, MEMORY[0x1E0CB09C8]);
  }
  v13 = *v3;
  sub_1A4436344((unint64_t *)&qword_1ED23FE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v14 = sub_1A46907E0();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1A4436344((unint64_t *)&qword_1ED23FEA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v19 = sub_1A4690864();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1A4691BFC();
  __break(1u);
  return result;
}

void sub_1A461E6BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  v8 = v6 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A461D8F4(v8, &qword_1EE71E010);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1A461F914(&qword_1EE71E010);
      goto LABEL_14;
    }
    sub_1A4620B34(v8, &qword_1EE71E010);
  }
  v9 = *v3;
  v10 = sub_1A4691134();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for REMObjectID_Codable();
    v12 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
    v13 = sub_1A4691140();

    if ((v13 & 1) != 0)
    {
LABEL_13:
      sub_1A4691BFC();
      __break(1u);
    }
    else
    {
      v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v15 = *(id *)(*(_QWORD *)(v9 + 48) + 8 * a2);
        v16 = sub_1A4691140();

        if ((v16 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v17 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * a2) = a1;
  v18 = *(_QWORD *)(v17 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v20;
}

uint64_t sub_1A461E850(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A461D088();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A461F444();
      goto LABEL_14;
    }
    sub_1A4620368();
  }
  v8 = *v3;
  sub_1A4691C8C();
  sub_1A4691C98();
  result = sub_1A4691CC8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for REMReminderPriorityLevel(0);
      result = sub_1A4691BFC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A461E99C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1A461D330();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1A461F5D8();
      goto LABEL_14;
    }
    sub_1A46205E0();
  }
  v8 = *v3;
  sub_1A4691C8C();
  sub_1A4691C98();
  result = sub_1A4691CC8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_1A4691BFC();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1A461EAE8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1A461D5D8();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1A461F76C();
LABEL_22:
      v25 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * a2) = v6;
      v26 = *(_QWORD *)(v25 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (!v27)
      {
        *(_QWORD *)(v25 + 16) = v28;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1A4620858();
  }
  v9 = *v3;
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  sub_1A4691C8C();
  sub_1A4690948();
  v10 = sub_1A4691CC8();
  result = swift_bridgeObjectRelease();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  a2 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v12 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v14 = v13;
  if (v12 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v14 == v15)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v17 = sub_1A4691A40();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    v18 = ~v11;
    do
    {
      a2 = (a2 + 1) & v18;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v19 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v21 = v20;
      if (v19 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v21 == v22)
        goto LABEL_25;
      v24 = sub_1A4691A40();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v24 & 1) == 0);
  }
LABEL_26:
  type metadata accessor for Dataclass(0);
  result = sub_1A4691BFC();
  __break(1u);
  return result;
}

void sub_1A461ED14(uint64_t a1, unint64_t a2, char a3)
{
  sub_1A461ED30(a1, a2, a3, (uint64_t *)&unk_1EE71EEE0, (unint64_t *)&qword_1ED2440D8);
}

void sub_1A461ED30(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A461D8F4(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1A461F914(a4);
      goto LABEL_14;
    }
    sub_1A4620B34(v11, a4);
  }
  v12 = *v5;
  v13 = sub_1A4691134();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1A444AA40(0, a5);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_1A4691140();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_1A4691BFC();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_1A4691140();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_1A461EEC0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1A4690210();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1A461DE34(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], &qword_1EE723D58, &qword_1EE71D0F8, MEMORY[0x1E0CB0E58]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1A461FC5C((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38], &qword_1EE723D58);
      goto LABEL_12;
    }
    sub_1A4621028(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], &qword_1EE723D58, &qword_1EE71D0F8, MEMORY[0x1E0CB0E58]);
  }
  v13 = *v3;
  sub_1A4436344(&qword_1EE71D0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
  v14 = sub_1A46907E0();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1A4436344(&qword_1EE71D100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
      v19 = sub_1A4690864();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1A4691BFC();
  __break(1u);
  return result;
}

void *sub_1A461F114()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4D0);
  v2 = *v0;
  v3 = sub_1A46913B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A461F2B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D60);
  v2 = *v0;
  v3 = sub_1A46913B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A461F444()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D80);
  v2 = *v0;
  v3 = sub_1A46913B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A461F5D8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D78);
  v2 = *v0;
  v3 = sub_1A46913B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1A461F76C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D68);
  v2 = *v0;
  v3 = sub_1A46913B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1A461F914(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1A46913B0();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A461FAB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E008);
  v2 = *v0;
  v3 = sub_1A46913B0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A461FC5C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1A46913B0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1A461FE80()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4D0);
  v3 = sub_1A46913BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain_n();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v29)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v0;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v11 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_21:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A4691C8C();
    swift_bridgeObjectRetain();
    sub_1A4690948();
    result = sub_1A4691CC8();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1A4620108()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D60);
  result = sub_1A46913BC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_1A4691C80();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A4620368()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D80);
  result = sub_1A46913BC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1A4691C8C();
    sub_1A4691C98();
    result = sub_1A4691CC8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A46205E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D78);
  result = sub_1A46913BC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1A4691C8C();
    sub_1A4691C98();
    result = sub_1A4691CC8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A4620858()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D68);
  v3 = sub_1A46913BC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v27 = v0;
  v28 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_33;
      v15 = *(_QWORD *)(v28 + 8 * v10);
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_33;
        v15 = *(_QWORD *)(v28 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_23:
    v7 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v13);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    sub_1A4691C8C();
    v18 = v17;
    sub_1A4690948();
    v19 = sub_1A4691CC8();
    result = swift_bridgeObjectRelease();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = v19 & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v8 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v8 + 8 * v22);
      }
      while (v26 == -1);
      v11 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v11) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v15 = *(_QWORD *)(v28 + 8 * v16);
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v29)
      goto LABEL_33;
    v15 = *(_QWORD *)(v28 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A4620B34(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1A46913BC();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1A4691134();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A4620DA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71E008);
  result = sub_1A46913BC();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1A4691C8C();
    sub_1A4691C98();
    result = sub_1A4691CC8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
    result = swift_retain();
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A4621028(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1A46913BC();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1A4436344(v40, v39, v41);
    result = sub_1A46907E0();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A4621344(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723D70);
  result = sub_1A46916BC();
  v3 = (_QWORD *)result;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = result + 64;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * i);
    v20 = *v19;
    result = v19[1];
    *(_QWORD *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v17;
    v21[1] = v18;
    v22 = (_QWORD *)(v3[7] + 48 * i);
    *v22 = v20;
    v22[1] = result;
    v22[2] = v20;
    v22[3] = result;
    v22[4] = 0;
    v22[5] = 0;
    v23 = v3[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    swift_bridgeObjectRetain_n();
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v9)
        return (uint64_t)v3;
      v14 = *(_QWORD *)(v5 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v9)
          return (uint64_t)v3;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v8 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v9)
    return (uint64_t)v3;
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v9)
      return (uint64_t)v3;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1A4621518()
{
  unint64_t result;

  result = qword_1ED240F50;
  if (!qword_1ED240F50)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMGroceryLocaleMapping, &type metadata for REMGroceryLocaleMapping);
    atomic_store(result, (unint64_t *)&qword_1ED240F50);
  }
  return result;
}

unint64_t sub_1A462155C()
{
  unint64_t result;

  result = qword_1EE723D20;
  if (!qword_1EE723D20)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMGroceryModelError, &type metadata for REMGroceryModelError);
    atomic_store(result, (unint64_t *)&qword_1EE723D20);
  }
  return result;
}

unint64_t sub_1A46215A0()
{
  unint64_t result;

  result = qword_1ED240F18;
  if (!qword_1ED240F18)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2A94, &type metadata for REMGroceryLocaleMapping.LocaleSetting.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240F18);
  }
  return result;
}

unint64_t sub_1A46215E4()
{
  unint64_t result;

  result = qword_1ED240F38;
  if (!qword_1ED240F38)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2A44, &type metadata for REMGroceryLocaleMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240F38);
  }
  return result;
}

unint64_t sub_1A4621628()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED240F78;
  if (!qword_1ED240F78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED240F70);
    v2 = sub_1A4621694();
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED240F78);
  }
  return result;
}

unint64_t sub_1A4621694()
{
  unint64_t result;

  result = qword_1ED240F30;
  if (!qword_1ED240F30)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMGroceryLocaleMapping.LocaleSetting, &type metadata for REMGroceryLocaleMapping.LocaleSetting);
    atomic_store(result, (unint64_t *)&qword_1ED240F30);
  }
  return result;
}

ValueMetadata *type metadata accessor for REMGroceryModelError()
{
  return &type metadata for REMGroceryModelError;
}

uint64_t dispatch thunk of REMGroceryModel.predict(_:thresholds:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A4621778;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1A4621778(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of REMGroceryModel.labels.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for REMGroceryDummyModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMGroceryDummyModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMGroceryDummyModel.__allocating_init(labels:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

ValueMetadata *type metadata accessor for REMGroceryLocaleMapping()
{
  return &type metadata for REMGroceryLocaleMapping;
}

ValueMetadata *type metadata accessor for REMGroceryLocaleMapping.LocaleSetting()
{
  return &type metadata for REMGroceryLocaleMapping.LocaleSetting;
}

uint64_t storeEnumTagSinglePayload for REMGroceryLocaleMapping.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A4621870 + 4 * byte_1A46B2775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A46218A4 + 4 * byte_1A46B2770[v4]))();
}

uint64_t sub_1A46218A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46218AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A46218B4);
  return result;
}

uint64_t sub_1A46218C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A46218C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A46218CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46218D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMGroceryLocaleMapping.CodingKeys()
{
  return &type metadata for REMGroceryLocaleMapping.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMGroceryLocaleMapping.LocaleSetting.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A462193C + 4 * byte_1A46B277F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A4621970 + 4 * byte_1A46B277A[v4]))();
}

uint64_t sub_1A4621970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4621978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4621980);
  return result;
}

uint64_t sub_1A462198C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4621994);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A4621998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46219A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMGroceryLocaleMapping.LocaleSetting.CodingKeys()
{
  return &type metadata for REMGroceryLocaleMapping.LocaleSetting.CodingKeys;
}

unint64_t sub_1A46219C0()
{
  unint64_t result;

  result = qword_1EE723D48;
  if (!qword_1EE723D48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2964, &type metadata for REMGroceryLocaleMapping.LocaleSetting.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723D48);
  }
  return result;
}

unint64_t sub_1A4621A08()
{
  unint64_t result;

  result = qword_1EE723D50;
  if (!qword_1EE723D50)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2A1C, &type metadata for REMGroceryLocaleMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723D50);
  }
  return result;
}

unint64_t sub_1A4621A50()
{
  unint64_t result;

  result = qword_1ED240F48;
  if (!qword_1ED240F48)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B298C, &type metadata for REMGroceryLocaleMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240F48);
  }
  return result;
}

unint64_t sub_1A4621A98()
{
  unint64_t result;

  result = qword_1ED240F40;
  if (!qword_1ED240F40)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B29B4, &type metadata for REMGroceryLocaleMapping.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240F40);
  }
  return result;
}

unint64_t sub_1A4621AE0()
{
  unint64_t result;

  result = qword_1ED240F28;
  if (!qword_1ED240F28)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B28D4, &type metadata for REMGroceryLocaleMapping.LocaleSetting.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240F28);
  }
  return result;
}

unint64_t sub_1A4621B28()
{
  unint64_t result;

  result = qword_1ED240F20;
  if (!qword_1ED240F20)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B28FC, &type metadata for REMGroceryLocaleMapping.LocaleSetting.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED240F20);
  }
  return result;
}

uint64_t sub_1A4621B6C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635018093 && a2 == 0xE400000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 26997 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A4621C88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697070616DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1A4621D78(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1A4621DD8(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1A4621E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE723D90);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE723D90);
  if (qword_1ED243128 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256898);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void REMStore.clearGroceryLocalCorrectionsOfListsOwnedByCurrentUser(completion:)(void (*a1)(id, uint64_t), uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t ObjCClassFromMetadata;
  void *v16;
  id v17;
  uint64_t aBlock;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_daemonController);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    swift_retain_n();
    v10 = (void *)sub_1A469087C();
    v22 = sub_1A4622204;
    v23 = v8;
    v11 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v19 = 1107296256;
    v20 = sub_1A45A47DC;
    v21 = &block_descriptor_16;
    v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v22 = sub_1A45A9F64;
    v23 = v9;
    aBlock = v11;
    v19 = 1107296256;
    v20 = sub_1A45A4824;
    v21 = &block_descriptor_6_1;
    v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v10, v12, v13);
    _Block_release(v13);
    _Block_release(v12);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v14 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v16 = (void *)sub_1A469087C();
    v17 = objc_msgSend(v14, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v16);

    a1(v17, 1);
  }
}

void sub_1A4622120(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v8[4] = sub_1A4626460;
  v8[5] = v6;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A4621DD8;
  v8[3] = &block_descriptor_207;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_clearGroceryLocalCorrectionsOfListsOwnedByCurrentUserWithCompletion_, v7);
  _Block_release(v7);
}

uint64_t sub_1A46221E0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1A4622204(void *a1)
{
  uint64_t v1;

  sub_1A4622120(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t REMStore.clearGroceryLocalCorrectionsOfListsOwnedByCurrentUser()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1A4622224()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A46222BC;
  return sub_1A4691BB4();
}

uint64_t sub_1A46222BC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4622328()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4622334()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4622368(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  char *v20;
  void *v21;
  void *v22;
  const void *v23;
  void *v24;
  uint64_t ObjCClassFromMetadata;
  void *v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  id aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E58);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)&v29 - v9, a1, v4);
  v11(v8, (uint64_t)v10, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v10, v4);
  v14 = objc_msgSend(a2, sel_daemonController);
  if (v14)
  {
    v15 = v14;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1A462644C;
    *(_QWORD *)(v16 + 24) = v13;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_1A462644C;
    *(_QWORD *)(v17 + 24) = v13;
    swift_retain_n();
    v30 = sub_1A469087C();
    v35 = sub_1A46265BC;
    v36 = v16;
    v18 = (void *)MEMORY[0x1E0C809B0];
    aBlock = (id)MEMORY[0x1E0C809B0];
    v32 = 1107296256;
    v33 = sub_1A45A47DC;
    v34 = &block_descriptor_198;
    v19 = _Block_copy(&aBlock);
    v20 = v8;
    swift_retain();
    swift_release();
    v35 = sub_1A45A9F64;
    v36 = v17;
    aBlock = v18;
    v32 = 1107296256;
    v33 = sub_1A45A4824;
    v34 = &block_descriptor_201;
    v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v22 = (void *)v30;
    objc_msgSend(v15, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v30, v19, v21);
    v23 = v21;
    v8 = v20;
    _Block_release(v23);
    _Block_release(v19);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v24 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v26 = (void *)sub_1A469087C();
    v27 = objc_msgSend(v24, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v26);

    aBlock = v27;
    sub_1A4690CCC();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1A46226A0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4622368(a1, *(void **)(v1 + 16));
}

uint64_t sub_1A46226A8(void *a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E58);
    return sub_1A4690CCC();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E58);
    return sub_1A4690CD8();
  }
}

uint64_t sub_1A4622708(void *a1, uint64_t a2, const void *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  id v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CC08);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = _Block_copy(a3);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = a1;
  v10 = sub_1A4690D08();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = &unk_1EE723DF8;
  v11[5] = v9;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = &unk_1EE723E08;
  v12[5] = v11;
  v13 = a1;
  sub_1A4625F58((uint64_t)v7, (uint64_t)&unk_1EE723E18, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1A4622824(const void *a1, void *a2)
{
  uint64_t v2;
  id v4;

  *(_QWORD *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = _Block_copy(a1);
  v4 = a2;
  return swift_task_switch();
}

uint64_t sub_1A462286C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[2];
  v2 = swift_task_alloc();
  v0[4] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_1A4622904;
  return sub_1A4691BB4();
}

uint64_t sub_1A4622904()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4622970()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);

  (*(void (**)(uint64_t, _QWORD))(v1 + 16))(v1, 0);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A46229B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;

  v1 = *(void **)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);

  swift_task_dealloc();
  v3 = (void *)sub_1A468FE5C();

  (*(void (**)(uint64_t, void *))(v2 + 16))(v2, v3);
  _Block_release(*(const void **)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void REMStore.fetchSuggestedSectionNamesFromGroceryClassifier(withGroceryLocaleID:completion:)(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t), uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t ObjectType;
  id v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t ObjCClassFromMetadata;
  void *v21;
  id v22;
  uint64_t aBlock;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t (*v27)(uint64_t);
  _QWORD *v28;

  v5 = v4;
  ObjectType = swift_getObjectType();
  v11 = objc_msgSend(v5, sel_daemonController);
  if (v11)
  {
    v12 = v11;
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a1;
    v13[3] = a2;
    v13[4] = a3;
    v13[5] = a4;
    v13[6] = ObjectType;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a3;
    *(_QWORD *)(v14 + 24) = a4;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1A469087C();
    v27 = sub_1A4622DC0;
    v28 = v13;
    v16 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_1A45A47DC;
    v26 = &block_descriptor_17;
    v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v27 = sub_1A45A9F64;
    v28 = (_QWORD *)v14;
    aBlock = v16;
    v24 = 1107296256;
    v25 = sub_1A45A4824;
    v26 = &block_descriptor_20;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v15, v17, v18);
    _Block_release(v18);
    _Block_release(v17);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v19 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v21 = (void *)sub_1A469087C();
    v22 = objc_msgSend(v19, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v21);

    a3(v22, 1);
  }
}

void sub_1A4622CB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD v15[6];

  v12 = (void *)sub_1A469087C();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a4;
  v13[5] = a5;
  v13[6] = a6;
  v15[4] = sub_1A46263C8;
  v15[5] = v13;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1A46230C8;
  v15[3] = &block_descriptor_184;
  v14 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_fetchSuggestedSectionNamesFromGroceryClassifierWithGroceryLocaleID_completion_, v12, v14);
  _Block_release(v14);

}

uint64_t sub_1A4622DC0(uint64_t a1)
{
  return sub_1A4626220(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A4622CB8);
}

void sub_1A4622DCC(void *a1, id a2, uint64_t a3, unint64_t a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  id v10;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  if (a2)
  {
    v9 = 1;
    v10 = a2;
  }
  else
  {
    v10 = a1;
    if (a1)
    {
      swift_bridgeObjectRetain();
      v9 = 0;
    }
    else
    {
      if (qword_1EE71C1F0 != -1)
        swift_once();
      v14 = sub_1A4690318();
      __swift_project_value_buffer(v14, (uint64_t)qword_1EE723D90);
      swift_bridgeObjectRetain_n();
      v15 = sub_1A469030C();
      v16 = sub_1A4690FFC();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v24 = v23;
        *(_DWORD *)v17 = 136315394;
        v25 = a7;
        swift_getMetatypeMetadata();
        v18 = sub_1A46908E8();
        v25 = sub_1A4431120(v18, v19, &v24);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        swift_bridgeObjectRetain();
        v25 = sub_1A4431120(a3, a4, &v24);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A442D000, v15, v16, "%s#fetchSuggestedSectionNamesFromGroceryClassifier : 'sectionNames' and 'error' were both nil {groceryLocaleID: %s}", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v23, -1, -1);
        MEMORY[0x1A85A0114](v17, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v20 = (void *)objc_opt_self();
      v25 = 0;
      v26 = 0xE000000000000000;
      sub_1A4691410();
      sub_1A4690984();
      sub_1A4690984();
      sub_1A4690984();
      v21 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v20, sel_internalErrorWithDebugDescription_, v21);

      v9 = 1;
    }
  }
  v22 = a2;
  a5(v10, v9);
  sub_1A46263D8(v10, v9);
}

uint64_t sub_1A46230C8(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1A4690BA0();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t REMStore.fetchSuggestedSectionNamesFromGroceryClassifier(withGroceryLocaleID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1A4623164()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v5 = (_QWORD *)swift_task_alloc();
  v0[7] = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  *v5 = v0;
  v5[1] = sub_1A4623224;
  return sub_1A4691BB4();
}

uint64_t sub_1A4623224()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4623290()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A46232C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E50);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v10 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v11 + v10, (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  REMStore.fetchSuggestedSectionNamesFromGroceryClassifier(withGroceryLocaleID:completion:)(a3, a4, (void (*)(id, uint64_t))sub_1A4626334, v11);
  return swift_release();
}

uint64_t sub_1A46233BC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1A46232C4(a1, v1[2], v1[3], v1[4]);
}

void REMStore.fetchSuggestedSectionsForReminders(withReminderTitles:fromGroceryClassifierWithGroceryLocaleIDs:maxSuggestionsCountPerReminderTitle:confidenceScoreThreshold:shouldUseGlobalCorrections:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, void (*a7)(id, uint64_t), uint64_t a8)
{
  void *v8;
  void *v9;
  uint64_t ObjectType;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  void *v28;
  id v29;
  uint64_t aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;

  v9 = v8;
  ObjectType = swift_getObjectType();
  v18 = objc_msgSend(v9, sel_daemonController);
  if (v18)
  {
    v19 = v18;
    v20 = swift_allocObject();
    *(_DWORD *)(v20 + 16) = a5;
    *(_BYTE *)(v20 + 20) = BYTE4(a5) & 1;
    *(_QWORD *)(v20 + 24) = a3;
    *(_BYTE *)(v20 + 32) = a4 & 1;
    *(_QWORD *)(v20 + 40) = a1;
    *(_QWORD *)(v20 + 48) = a2;
    *(_BYTE *)(v20 + 56) = a6 & 1;
    *(_QWORD *)(v20 + 64) = a7;
    *(_QWORD *)(v20 + 72) = a8;
    *(_QWORD *)(v20 + 80) = ObjectType;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a7;
    *(_QWORD *)(v21 + 24) = a8;
    swift_retain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = (void *)sub_1A469087C();
    v35 = sub_1A4623880;
    v36 = v20;
    v23 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v32 = 1107296256;
    v33 = sub_1A45A47DC;
    v34 = &block_descriptor_31;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v35 = sub_1A45A9F64;
    v36 = v21;
    aBlock = v23;
    v32 = 1107296256;
    v33 = sub_1A45A4824;
    v34 = &block_descriptor_34;
    v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v22, v24, v25);
    _Block_release(v25);
    _Block_release(v24);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v26 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v28 = (void *)sub_1A469087C();
    v29 = objc_msgSend(v26, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v28);

    a7(v29, 1);
  }
}

void sub_1A4623698(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v15;
  id v16;
  double v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  void *v23;
  _QWORD *v24;
  void *v25;
  _QWORD aBlock[6];

  if ((a2 & 0x100000000) != 0)
  {
    v18 = 0;
    v19 = a9;
    v20 = a10;
    if ((a4 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a3);
    goto LABEL_6;
  }
  v15 = a2;
  v16 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  LODWORD(v17) = v15;
  v18 = objc_msgSend(v16, sel_initWithFloat_, v17);
  v19 = a9;
  v20 = a10;
  if ((a4 & 1) == 0)
    goto LABEL_5;
LABEL_3:
  v21 = 0;
LABEL_6:
  v22 = (void *)sub_1A4690D5C();
  v23 = (void *)sub_1A4690B94();
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a6;
  v24[3] = a8;
  v24[4] = v19;
  v24[5] = v20;
  aBlock[4] = sub_1A462631C;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A45A47D8;
  aBlock[3] = &block_descriptor_175;
  v25 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_fetchSuggestedSectionsForRemindersWithReminderTitles_fromGroceryClassifierWithGroceryLocaleIDs_maxSuggestionsCountPerReminderTitle_confidenceScoreThreshold_shouldUseGlobalCorrections_completion_, v22, v23, v21, v18, a7 & 1, v25);

  _Block_release(v25);
}

uint64_t sub_1A462384C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A4623880(void *a1)
{
  uint64_t v1;

  sub_1A4623698(a1, *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_BYTE *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80));
}

void sub_1A46238CC(void *a1, id a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v26;
  os_log_type_t type;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  if (a2)
  {
    v8 = 1;
    v9 = a2;
  }
  else
  {
    v9 = a1;
    if (a1)
    {
      v10 = a1;
      v8 = 0;
    }
    else
    {
      if (qword_1EE71C1F0 != -1)
        swift_once();
      v13 = sub_1A4690318();
      __swift_project_value_buffer(v13, (uint64_t)qword_1EE723D90);
      swift_bridgeObjectRetain_n();
      v14 = sub_1A469030C();
      v15 = sub_1A4690FFC();
      if (os_log_type_enabled(v14, v15))
      {
        type = v15;
        v16 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v28 = v26;
        v29 = a6;
        *(_DWORD *)v16 = 136315394;
        swift_getMetatypeMetadata();
        v17 = sub_1A46908E8();
        v29 = sub_1A4431120(v17, v18, &v28);
        sub_1A46911D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v16 + 12) = 2080;
        v19 = swift_bridgeObjectRetain();
        v20 = MEMORY[0x1A859E404](v19, MEMORY[0x1E0DEA968]);
        v22 = v21;
        swift_bridgeObjectRelease();
        v29 = sub_1A4431120(v20, v22, &v28);
        sub_1A46911D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A442D000, v14, type, "%s#fetchSuggestedSectionsForReminders : 'suggestions' and 'error' were both nil {groceryLocaleIDs: %s}", (uint8_t *)v16, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85A0114](v26, -1, -1);
        MEMORY[0x1A85A0114](v16, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v23 = (void *)objc_opt_self();
      v29 = 0;
      v30 = 0xE000000000000000;
      sub_1A4691410();
      sub_1A4690984();
      MEMORY[0x1A859E404](a3, MEMORY[0x1E0DEA968]);
      sub_1A4690984();
      swift_bridgeObjectRelease();
      sub_1A4690984();
      v24 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v9 = objc_msgSend(v23, sel_internalErrorWithDebugDescription_, v24);

      v8 = 1;
    }
  }
  v25 = a2;
  a4(v9, v8);
  sub_1A456F210(v9);
}

uint64_t REMStore.fetchSuggestedSectionsForReminders(withReminderTitles:fromGroceryClassifierWithGroceryLocaleIDs:maxSuggestionsCountPerReminderTitle:confidenceScoreThreshold:shouldUseGlobalCorrections:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 89) = a6;
  *(_BYTE *)(v7 + 88) = a4;
  *(_QWORD *)(v7 + 32) = a2;
  *(_QWORD *)(v7 + 40) = a3;
  *(_QWORD *)(v7 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1A4623C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_BYTE *)(v0 + 89);
  v4 = *(_BYTE *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v6;
  v7 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v6 + 16) = v1;
  *(_OWORD *)(v6 + 24) = v7;
  *(_QWORD *)(v6 + 40) = v5;
  *(_BYTE *)(v6 + 48) = v4 & 1;
  *(_DWORD *)(v6 + 52) = v2;
  *(_BYTE *)(v6 + 56) = BYTE4(v2) & 1;
  *(_BYTE *)(v6 + 57) = v3;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v8;
  sub_1A444AA40(0, &qword_1EE723DC0);
  *v8 = v0;
  v8[1] = sub_1A4623D1C;
  return sub_1A4691BB4();
}

uint64_t sub_1A4623D1C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4623D88()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A4623DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, int a8)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;

  v22 = a8;
  v20 = a5;
  v21 = a2;
  v12 = a6 & 1;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E48);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  REMStore.fetchSuggestedSectionsForReminders(withReminderTitles:fromGroceryClassifierWithGroceryLocaleIDs:maxSuggestionsCountPerReminderTitle:confidenceScoreThreshold:shouldUseGlobalCorrections:completion:)(a3, a4, v20, v12, a7 | ((HIDWORD(a7) & 1) << 32), v22, (void (*)(id, uint64_t))sub_1A46262C8, v17);
  return swift_release();
}

uint64_t sub_1A4623ED8(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4623DBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(unsigned int *)(v1 + 52) | ((unint64_t)*(unsigned __int8 *)(v1 + 56) << 32), *(unsigned __int8 *)(v1 + 57));
}

uint64_t sub_1A4623F08(void *a1, char a2)
{
  id v2;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E48);
    return sub_1A4690CCC();
  }
  else
  {
    v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E48);
    return sub_1A4690CD8();
  }
}

void REMStore.fetchGroceryLocalCorrectionsOfList(with:completion:)(void *a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  void *v3;
  id v7;
  void *v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t ObjCClassFromMetadata;
  void *v18;
  id v19;
  uint64_t aBlock;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;

  v7 = objc_msgSend(v3, sel_daemonController);
  if (v7)
  {
    v8 = v7;
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = a3;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    *(_QWORD *)(v10 + 24) = a3;
    swift_retain_n();
    v11 = a1;
    v12 = (void *)sub_1A469087C();
    v24 = sub_1A46242B8;
    v25 = v9;
    v13 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v21 = 1107296256;
    v22 = sub_1A45A47DC;
    v23 = &block_descriptor_45;
    v14 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v24 = sub_1A45A669C;
    v25 = (_QWORD *)v10;
    aBlock = v13;
    v21 = 1107296256;
    v22 = sub_1A45A4824;
    v23 = &block_descriptor_48;
    v15 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v12, v14, v15);
    _Block_release(v15);
    _Block_release(v14);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v16 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v18 = (void *)sub_1A469087C();
    v19 = objc_msgSend(v16, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v18);

    a2(v19, 1);
  }
}

void sub_1A46241E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[4] = sub_1A46262B4;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A45A47D8;
  v10[3] = &block_descriptor_166;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_fetchGroceryLocalCorrectionsOfListWithObjectID_completion_, a2, v9);
  _Block_release(v9);
}

void sub_1A46242B8(void *a1)
{
  uint64_t *v1;

  sub_1A46241E4(a1, v1[2], v1[3], v1[4]);
}

void sub_1A46242C4(void *a1, id a2, void (*a3)(id, BOOL))
{
  id v5;
  id v7;
  id v8;

  v5 = a2;
  if (!a2)
  {
    v7 = a1;
    v5 = a1;
  }
  v8 = a2;
  a3(v5, a2 != 0);
  sub_1A456F210(v5);
}

uint64_t REMStore.fetchGroceryLocalCorrectionsOfList(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1A4624348()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;

  v1 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723DD0);
  *v2 = v0;
  v2[1] = sub_1A46243FC;
  return sub_1A4691BB4();
}

uint64_t sub_1A46243FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4624468(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  id v20;
  char *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  id aBlock;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  _QWORD *v38;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E40);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v13((char *)&v31 - v11, a1, v6);
  v13(v10, (uint64_t)v12, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, v12, v6);
  v16 = objc_msgSend(a2, sel_daemonController);
  if (v16)
  {
    v17 = v16;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a3;
    v18[3] = sub_1A462629C;
    v18[4] = v15;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = sub_1A462629C;
    *(_QWORD *)(v19 + 24) = v15;
    swift_retain_n();
    v20 = a3;
    v32 = sub_1A469087C();
    v37 = sub_1A46264AC;
    v38 = v18;
    v21 = v10;
    v22 = (void *)MEMORY[0x1E0C809B0];
    aBlock = (id)MEMORY[0x1E0C809B0];
    v34 = 1107296256;
    v35 = sub_1A45A47DC;
    v36 = &block_descriptor_157;
    v23 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v37 = sub_1A45A9F64;
    v38 = (_QWORD *)v19;
    aBlock = v22;
    v34 = 1107296256;
    v35 = sub_1A45A4824;
    v36 = &block_descriptor_160;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    v10 = v21;
    swift_release();
    v25 = (void *)v32;
    objc_msgSend(v17, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v32, v23, v24);
    _Block_release(v24);
    _Block_release(v23);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v26 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v28 = (void *)sub_1A469087C();
    v29 = objc_msgSend(v26, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v28);

    aBlock = v29;
    sub_1A4690CCC();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

uint64_t sub_1A46247AC(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4624468(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1A46247B4(void *a1, char a2)
{
  id v2;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E40);
    return sub_1A4690CCC();
  }
  else
  {
    v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E40);
    return sub_1A4690CD8();
  }
}

void REMStore.fetchShouldSuggestConvertToGrocery(for:withGroceryLocaleID:completion:)(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t), uint64_t a5)
{
  void *v5;
  id v11;
  void *v12;
  _QWORD *v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t ObjCClassFromMetadata;
  void *v22;
  id v23;
  uint64_t aBlock;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t (*v28)(uint64_t);
  _QWORD *v29;

  v11 = objc_msgSend(v5, sel_daemonController);
  if (v11)
  {
    v12 = v11;
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a1;
    v13[3] = a2;
    v13[4] = a3;
    v13[5] = a4;
    v13[6] = a5;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a4;
    *(_QWORD *)(v14 + 24) = a5;
    swift_retain_n();
    v15 = a1;
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1A469087C();
    v28 = sub_1A4624BB8;
    v29 = v13;
    v17 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v25 = 1107296256;
    v26 = sub_1A45A47DC;
    v27 = &block_descriptor_59;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v28 = sub_1A45A9F64;
    v29 = (_QWORD *)v14;
    aBlock = v17;
    v25 = 1107296256;
    v26 = sub_1A45A4824;
    v27 = &block_descriptor_62;
    v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v16, v18, v19);
    _Block_release(v19);
    _Block_release(v18);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v20 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v22 = (void *)sub_1A469087C();
    v23 = objc_msgSend(v20, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v22);

    a4(v23, 1);
  }
}

void sub_1A4624AA4(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  v9 = objc_msgSend(a2, sel_objectID);
  v10 = (void *)sub_1A469087C();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a5;
  *(_QWORD *)(v11 + 24) = a6;
  v13[4] = sub_1A4626234;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A4621D78;
  v13[3] = &block_descriptor_143;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_fetchShouldSuggestConvertToGroceryWithObjectID_usingGroceryClassifierWithGroceryLocaleID_completion_, v9, v10, v12);
  _Block_release(v12);

}

uint64_t sub_1A4624BB8(uint64_t a1)
{
  return sub_1A4626220(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1A4624AA4);
}

uint64_t REMStore.fetchShouldSuggestConvertToGrocery(for:withGroceryLocaleID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1A4624BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v6 = *(_OWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v6;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1A4624CA4;
  return sub_1A4691BB4();
}

uint64_t sub_1A4624CA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A4624D10()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_1A4624D20()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A4624D58(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  unint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  char *v28;
  void *v29;
  uint64_t ObjCClassFromMetadata;
  void *v31;
  id v32;
  char *v33;
  uint64_t v35;
  char *v36;
  id aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t (*v41)(uint64_t);
  _QWORD *v42;

  v35 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E38);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - v13;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v15((char *)&v35 - v13, a1, v9);
  v36 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15(v36, (uint64_t)v14, v9);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v16, v14, v9);
  v18 = objc_msgSend(a2, sel_daemonController);
  if (v18)
  {
    v19 = v18;
    v20 = (_QWORD *)swift_allocObject();
    v21 = v35;
    v20[2] = a3;
    v20[3] = v21;
    v20[4] = a5;
    v20[5] = sub_1A4626178;
    v20[6] = v17;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_1A4626178;
    *(_QWORD *)(v22 + 24) = v17;
    swift_retain_n();
    v23 = a3;
    swift_bridgeObjectRetain();
    v24 = (void *)sub_1A469087C();
    v41 = sub_1A4624BB8;
    v42 = v20;
    v25 = (void *)MEMORY[0x1E0C809B0];
    aBlock = (id)MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_1A45A47DC;
    v40 = &block_descriptor_134_0;
    v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v41 = sub_1A45A9F64;
    v42 = (_QWORD *)v22;
    aBlock = v25;
    v38 = 1107296256;
    v39 = sub_1A45A4824;
    v40 = &block_descriptor_137;
    v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v19, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v24, v26, v27);
    _Block_release(v27);
    _Block_release(v26);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    v28 = v36;
  }
  else
  {
    v29 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v31 = (void *)sub_1A469087C();
    v32 = objc_msgSend(v29, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v31);

    aBlock = v32;
    v33 = v36;
    sub_1A4690CCC();
    swift_release();
    v28 = v33;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v28, v9);
}

uint64_t sub_1A46250B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4624D58(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1A46250BC(void *a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E38);
    return sub_1A4690CCC();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E38);
    return sub_1A4690CD8();
  }
}

Swift::Void __swiftcall REMStore.requestShouldSuggestConvertToGrocery(for:)(REMList *a1)
{
  void *v1;
  uint64_t ObjectType;
  REMListGroceryContext *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  REMList *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  REMListGroceryContext *v14;
  uint64_t aBlock;
  uint64_t v16;
  void *v17;
  void *v18;
  void (*v19)(void *);
  uint64_t v20;

  ObjectType = swift_getObjectType();
  v4 = -[REMList groceryContext](a1, sel_groceryContext);
  if (v4)
  {
    v14 = v4;
    if ((-[REMListGroceryContext shouldCategorizeGroceryItems](v4, sel_shouldCategorizeGroceryItems) & 1) != 0
      || (v5 = objc_msgSend(v1, sel_daemonController)) == 0)
    {

    }
    else
    {
      v6 = v5;
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = a1;
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = ObjectType;
      v9 = a1;
      v10 = (void *)sub_1A469087C();
      v19 = sub_1A46253B8;
      v20 = v7;
      v11 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v16 = 1107296256;
      v17 = sub_1A45A47DC;
      v18 = &block_descriptor_73;
      v12 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v19 = sub_1A46253D0;
      v20 = v8;
      aBlock = v11;
      v16 = 1107296256;
      v17 = sub_1A45A4824;
      v18 = &block_descriptor_76;
      v13 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v6, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v10, v12, v13);
      _Block_release(v13);
      _Block_release(v12);

      swift_unknownObjectRelease();
      swift_release();
      swift_release();

    }
  }
}

void sub_1A4625338(void *a1, id a2)
{
  id v3;

  v3 = objc_msgSend(a2, sel_objectID);
  objc_msgSend(a1, sel_requestShouldSuggestConvertToGroceryWithObjectID_, v3);

}

uint64_t sub_1A4625394()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A46253B8(void *a1)
{
  uint64_t v1;

  sub_1A4625338(a1, *(id *)(v1 + 16));
}

uint64_t sub_1A46253C0()
{
  return swift_deallocObject();
}

void sub_1A46253D0(void *a1)
{
  uint64_t v1;

  sub_1A4625868(a1, *(_QWORD *)(v1 + 16), 0x20u, "%s#requestShouldSuggestConvertToGrocery : Failure in calling -[REMXPCStorePerformer requestShouldSuggestConvertToGrocery] {error: %s}");
}

void REMStore.setOverridingGroceryCategorizationSecondaryGroceryLocales(_:completion:)(uint64_t a1, void (*a2)(id, uint64_t), uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t ObjectType;
  id v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t ObjCClassFromMetadata;
  void *v19;
  id v20;
  uint64_t aBlock;
  uint64_t v22;
  void *v23;
  void *v24;
  void (*v25)(void *);
  _QWORD *v26;

  v4 = v3;
  ObjectType = swift_getObjectType();
  v9 = objc_msgSend(v4, sel_daemonController);
  if (v9)
  {
    v10 = v9;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = a1;
    v11[3] = a2;
    v11[4] = a3;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = ObjectType;
    swift_bridgeObjectRetain();
    swift_retain();
    v13 = (void *)sub_1A469087C();
    v25 = sub_1A4625768;
    v26 = v11;
    v14 = MEMORY[0x1E0C809B0];
    aBlock = MEMORY[0x1E0C809B0];
    v22 = 1107296256;
    v23 = sub_1A45A47DC;
    v24 = &block_descriptor_85;
    v15 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    v25 = sub_1A4625AB0;
    v26 = (_QWORD *)v12;
    aBlock = v14;
    v22 = 1107296256;
    v23 = sub_1A45A4824;
    v24 = &block_descriptor_88;
    v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_asyncStorePerformerWithReason_loadHandler_errorHandler_, v13, v15, v16);
    _Block_release(v16);
    _Block_release(v15);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

  }
  else
  {
    v17 = (void *)objc_opt_self();
    sub_1A444AA40(0, (unint64_t *)&unk_1EE721C98);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v19 = (void *)sub_1A469087C();
    v20 = objc_msgSend(v17, sel_unexpectedNilPropertyWithClass_property_, ObjCClassFromMetadata, v19);

    a2(v20, 1);
  }
}

void sub_1A4625670(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v6 = a2;
  if (a2)
  {
    sub_1A4690210();
    v6 = (void *)sub_1A4690B94();
  }
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[4] = sub_1A4626164;
  v10[5] = v8;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1A46257EC;
  v10[3] = &block_descriptor_120;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_setOverridingGroceryCategorizationSecondaryGroceryLocales_completion_, v6, v9);
  _Block_release(v9);

}

uint64_t sub_1A4625760()
{
  return objectdestroy_78Tm();
}

void sub_1A4625768(void *a1)
{
  uint64_t v1;

  sub_1A4625670(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1A4625774(void *a1, id a2, void (*a3)(id, BOOL))
{
  id v5;
  id v6;

  v5 = a2;
  if (!a2)
  {
    if (a1)
      v5 = a1;
    else
      v5 = (id)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
  }
  v6 = a2;
  a3(v5, a2 != 0);
  sub_1A46263D8(v5, a2 != 0);
}

uint64_t sub_1A46257EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1A4690210();
    v4 = sub_1A4690BA0();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1A4625868(void *a1, uint64_t a2, uint8_t a3, const char *a4)
{
  uint64_t v8;
  id v9;
  id v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  NSObject *oslog;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_1EE71C1F0 != -1)
    swift_once();
  v8 = sub_1A4690318();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EE723D90);
  v9 = a1;
  v10 = a1;
  oslog = sub_1A469030C();
  v11 = sub_1A4690FFC();
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v20 = v13;
    v21 = a2;
    *(_DWORD *)v12 = 136315394;
    swift_getMetatypeMetadata();
    v14 = sub_1A46908E8();
    v21 = sub_1A4431120(v14, v15, &v20);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    v12[12] = a3;
    v12[13] = 8;
    swift_getErrorValue();
    v16 = Error.rem_errorDescription.getter(v19);
    v21 = sub_1A4431120(v16, v17, &v20);
    sub_1A46911D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A442D000, oslog, v11, a4, v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v13, -1, -1);
    MEMORY[0x1A85A0114](v12, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1A4625AA0()
{
  return swift_deallocObject();
}

void sub_1A4625AB0(void *a1)
{
  uint64_t v1;

  sub_1A4625868(a1, *(_QWORD *)(v1 + 16), 0x22u, "%s#requestOverridingGroceryCategorizationSecondaryGroceryLocaleIDs : Failure in calling -[REMXPCStorePerformer requestOverridingGroceryCategorizationSecondaryGroceryLocaleIDs] {error: %{public}s}");
}

uint64_t REMStore.setOverridingGroceryCategorizationSecondaryGroceryLocales(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1A4625AEC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[3];
  v1 = v0[4];
  v3 = swift_task_alloc();
  v0[5] = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  v0[6] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723DE8);
  *v4 = v0;
  v4[1] = sub_1A45A722C;
  return sub_1A4691BB4();
}

uint64_t sub_1A4625B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E30);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  REMStore.setOverridingGroceryCategorizationSecondaryGroceryLocales(_:completion:)(a3, (void (*)(id, uint64_t))sub_1A4626158, v9);
  return swift_release();
}

uint64_t sub_1A4625C80(uint64_t a1)
{
  uint64_t v1;

  return sub_1A4625B9C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1A4625C88()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1A4625CB4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A46264B0;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EE723DF0 + dword_1EE723DF0))(v2, v3);
}

uint64_t sub_1A4625D18(void *a1, char a2, uint64_t a3, uint64_t *a4)
{
  id v6;

  if ((a2 & 1) != 0)
  {
    v6 = a1;
    __swift_instantiateConcreteTypeFromMangledName(a4);
    return sub_1A4690CCC();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(a4);
    return sub_1A4690CD8();
  }
}

uint64_t sub_1A4625D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1A46264B0;
  return v6();
}

uint64_t sub_1A4625DD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1A46264B0;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EE723E00 + dword_1EE723E00))(v2, v3, v4);
}

uint64_t sub_1A4625E50(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1A46264B0;
  return v7();
}

uint64_t objectdestroy_96Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4625ED4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A4452388;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE723E10 + dword_1EE723E10))(a1, v4, v5, v6);
}

uint64_t sub_1A4625F58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A4690D08();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A4690CFC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A462609C(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A4690CC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1A462609C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CC08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A46260DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A4452388;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE723E20 + dword_1EE723E20))(a1, v4);
}

uint64_t sub_1A462614C()
{
  return objectdestroy_113Tm(&qword_1EE723E30);
}

uint64_t sub_1A4626158(void *a1, char a2)
{
  return sub_1A4626340(a1, a2, &qword_1EE723E30);
}

void sub_1A4626164(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A4625774(a1, a2, *(void (**)(id, BOOL))(v2 + 16));
}

uint64_t sub_1A462616C()
{
  return objectdestroy_113Tm(&qword_1EE723E38);
}

uint64_t sub_1A4626178(uint64_t a1, char a2)
{
  return sub_1A462618C(a1, a2, &qword_1EE723E38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A46250BC);
}

uint64_t sub_1A462618C(uint64_t a1, char a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = a2 & 1;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, v6, v4 + ((v7 + 16) & ~v7));
}

uint64_t objectdestroy_52Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4626220(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

void sub_1A4626234(char a1, id a2)
{
  uint64_t v2;
  void (*v3)(id, _BOOL8);
  _BOOL8 v4;
  id v5;
  id v6;

  v3 = *(void (**)(id, _BOOL8))(v2 + 16);
  v4 = a2 != 0;
  if (a2)
    v5 = a2;
  else
    v5 = (id)(a1 & 1);
  v6 = a2;
  v3(v5, v4);
  sub_1A4626284(v5, v4);
}

void sub_1A4626284(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1A4626290()
{
  return objectdestroy_113Tm(&qword_1EE723E40);
}

uint64_t sub_1A462629C(uint64_t a1, char a2)
{
  return sub_1A462618C(a1, a2, &qword_1EE723E40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A46247B4);
}

void sub_1A46262B4(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A46242C4(a1, a2, *(void (**)(id, BOOL))(v2 + 16));
}

uint64_t sub_1A46262BC()
{
  return objectdestroy_113Tm(&qword_1EE723E48);
}

uint64_t sub_1A46262C8(uint64_t a1, char a2)
{
  return sub_1A462618C(a1, a2, &qword_1EE723E48, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A4623F08);
}

uint64_t sub_1A46262DC()
{
  return objectdestroy_78Tm();
}

uint64_t objectdestroy_78Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A462631C(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A46238CC(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(id, uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1A4626328()
{
  return objectdestroy_113Tm(&qword_1EE723E50);
}

uint64_t sub_1A4626334(void *a1, char a2)
{
  return sub_1A4626340(a1, a2, &qword_1EE723E50);
}

uint64_t sub_1A4626340(void *a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;

  v6 = a2 & 1;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return sub_1A4625D18(a1, v6, v3 + ((v7 + 16) & ~v7), a3);
}

uint64_t objectdestroy_10Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A46263C8(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A4622DCC(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(id, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
}

void sub_1A46263D8(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1A46263E4()
{
  return objectdestroy_113Tm(&qword_1EE723E58);
}

uint64_t objectdestroy_113Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1A462644C(uint64_t a1, char a2)
{
  return sub_1A462618C(a1, a2, &qword_1EE723E58, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A46226A8);
}

void sub_1A4626460(void *a1)
{
  uint64_t v1;
  void (*v3)(void *, _BOOL8);
  _BOOL8 v4;
  id v5;

  v3 = *(void (**)(void *, _BOOL8))(v1 + 16);
  v4 = a1 != 0;
  v5 = a1;
  v3(a1, v4);
  sub_1A4626284(a1, v4);
}

uint64_t ClassificationLabel.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A46265DC()
{
  swift_bridgeObjectRetain();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4626620(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242228);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4626700();
  sub_1A4691D40();
  sub_1A4691854();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1A4626700()
{
  unint64_t result;

  result = qword_1ED241B98;
  if (!qword_1ED241B98)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2FB8, &type metadata for ClassificationLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241B98);
  }
  return result;
}

uint64_t sub_1A4626744()
{
  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t static ClassificationLabel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1A4691A40();
}

uint64_t sub_1A46267CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE723E60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE723E60);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t static ClassificationLabel.nilLabel.getter()
{
  return 0x296C696E28;
}

uint64_t ClassificationLabel.__allocating_init(stringLiteral:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ClassificationLabel.init(stringLiteral:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_1A46268B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x64497373616C63 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A4691A40();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A462694C()
{
  sub_1A4626700();
  return sub_1A4691DB8();
}

uint64_t sub_1A4626974()
{
  sub_1A4626700();
  return sub_1A4691DC4();
}

uint64_t ClassificationLabel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ClassificationLabel.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ClassificationLabel.init(from:)(a1);
  return v2;
}

uint64_t ClassificationLabel.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4626700();
  sub_1A4691D28();
  if (v2)
  {
    type metadata accessor for ClassificationLabel();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = sub_1A4691788();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)(v3 + 16) = v10;
    *(_QWORD *)(v3 + 24) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1A4626B44(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1A4691A40();
  }
}

uint64_t sub_1A4626B70@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 104))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1A4626BA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 136))();
  if (!v2)
    *a1 = result;
  return result;
}

uint64_t sub_1A4626BCC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242228);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4626700();
  sub_1A4691D40();
  sub_1A4691854();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A4626CB4()
{
  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4626D10()
{
  swift_bridgeObjectRetain();
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ClassificationLabel()
{
  return objc_opt_self();
}

uint64_t sub_1A4626D78()
{
  sub_1A4691C8C();
  swift_bridgeObjectRetain();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4626DD0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

uint64_t MultiClassificationMetric.correctIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.incorrectIndices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.confusionMatrix.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.truePositives.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.trueNegatives.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.falsePositives.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.falseNegatives.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.precisions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.recalls.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.typeIErrors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MultiClassificationMetric.typeIIErrors.getter()
{
  return swift_bridgeObjectRetain();
}

double MultiClassificationMetric.accuracy.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

double MultiClassificationMetric.precision.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double MultiClassificationMetric.recall.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

uint64_t MultiClassificationMetric.indexedClasses.getter()
{
  return swift_bridgeObjectRetain();
}

void MultiClassificationMetric.init<A>(groundTruth:prediction:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = sub_1A4611F14((uint64_t)a1);
  sub_1A4611F14(v2);
  v3 = *(_QWORD *)(v1 + 80);
  v4 = sub_1A4690BE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = MEMORY[0x1A85A0000](&protocol conformance descriptor for ClassificationLabel, v3);
  OrderedSet.init(_:)(v4, v3, v5, &v7);
  type metadata accessor for OrderedSet(0, v3, v5, v6);
  OrderedSet.count.getter();
}

uint64_t sub_1A4628A8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4628ACC + 4 * byte_1A46B2AF0[a1]))(0x4974636572726F63, 0xEE0073656369646ELL);
}

unint64_t sub_1A4628ACC()
{
  return 0xD000000000000010;
}

uint64_t sub_1A4628AE8()
{
  return 0x6F697375666E6F63;
}

uint64_t sub_1A4628B0C()
{
  return 0x69736F5065757274;
}

uint64_t sub_1A4628B44()
{
  return 0x736F5065736C6166;
}

uint64_t sub_1A4628B6C()
{
  return 0x67654E65736C6166;
}

uint64_t sub_1A4628B90()
{
  return 0x6F69736963657270;
}

uint64_t sub_1A4628C28()
{
  return 0x6C6C61636572;
}

uint64_t sub_1A4628C3C()
{
  return 0x4364657865646E69;
}

uint64_t sub_1A4628C60()
{
  unsigned __int8 *v0;

  return sub_1A4628A8C(*v0);
}

uint64_t sub_1A4628C68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A462A77C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A4628C8C(_BYTE *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_1A4628C98()
{
  sub_1A4629E00();
  return sub_1A4691DB8();
}

uint64_t sub_1A4628CC0()
{
  sub_1A4629E00();
  return sub_1A4691DC4();
}

uint64_t MultiClassificationMetric.encode(to:)(_QWORD *a1)
{
  char **v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char v30;
  char *v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v28 = v1[2];
  v29 = v8;
  v10 = v1[3];
  v26 = v1[4];
  v27 = v10;
  v11 = v1[5];
  v24 = v1[6];
  v25 = v11;
  v12 = v1[7];
  v22 = v1[8];
  v23 = v12;
  v13 = v1[9];
  v20 = v1[10];
  v21 = v13;
  v19 = v1[14];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4629E00();
  sub_1A4691D40();
  v31 = v9;
  v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7C0);
  sub_1A45BFCA0(&qword_1EE721EB0, &qword_1EE71C7C0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v15 = v27;
  v14 = v28;
  v31 = v29;
  v30 = 1;
  sub_1A4691890();
  v31 = v14;
  v30 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EF0);
  sub_1A45BFDC8(&qword_1EE721EF8, &qword_1EE721EB0, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
  v29 = v7;
  sub_1A4691890();
  v31 = v15;
  v30 = 3;
  sub_1A4691890();
  v31 = v26;
  v30 = 4;
  sub_1A4691890();
  v31 = v25;
  v30 = 5;
  sub_1A4691890();
  v31 = v24;
  v30 = 6;
  sub_1A4691890();
  v31 = v23;
  v30 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
  sub_1A45BFCA0(&qword_1EE721EA8, &qword_1EE721EA0, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1A4691890();
  v31 = v22;
  v30 = 8;
  sub_1A4691890();
  v31 = v21;
  v30 = 9;
  sub_1A4691890();
  v31 = v20;
  v30 = 10;
  sub_1A4691890();
  LOBYTE(v31) = 11;
  sub_1A469186C();
  LOBYTE(v31) = 12;
  sub_1A469186C();
  LOBYTE(v31) = 13;
  sub_1A469186C();
  v31 = v19;
  v30 = 14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A45BFCA0(&qword_1ED23EAB8, &qword_1ED242FF0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  v17 = v29;
  sub_1A4691890();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v17, v4);
}

uint64_t MultiClassificationMetric.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723E90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4629E00();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v46;
  }
  else
  {
    v43 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71C7C0);
    v50 = 0;
    sub_1A45BFCA0(&qword_1EE721EC8, &qword_1EE71C7C0, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    v10 = v51;
    v50 = 1;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v45 = v10;
    v11 = v51;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EF0);
    v50 = 2;
    sub_1A45BFDC8(&qword_1EE721F10, &qword_1EE721EC8, MEMORY[0x1E0DEB448], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v42 = v11;
    v12 = v51;
    v50 = 3;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v41 = v12;
    v13 = v51;
    v50 = 4;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v49 = v13;
    v14 = v51;
    v50 = 5;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v40 = v14;
    v15 = v51;
    v50 = 6;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v48 = v15;
    v16 = v51;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE721EA0);
    v50 = 7;
    v18 = sub_1A45BFCA0(&qword_1EE721EC0, &qword_1EE721EA0, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v44 = v16;
    v50 = 8;
    v39 = v51;
    swift_bridgeObjectRetain();
    v37[1] = v18;
    v38 = v17;
    sub_1A46917C4();
    v19 = v39;
    v50 = 9;
    v47 = v51;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v50 = 10;
    v46 = v51;
    swift_bridgeObjectRetain();
    sub_1A46917C4();
    v20 = v51;
    LOBYTE(v51) = 11;
    v21 = v20;
    swift_bridgeObjectRetain();
    sub_1A46917A0();
    v23 = v22;
    LOBYTE(v51) = 12;
    sub_1A46917A0();
    v25 = v24;
    LOBYTE(v51) = 13;
    sub_1A46917A0();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
    v50 = 14;
    sub_1A45BFCA0(&qword_1ED23E750, &qword_1ED242FF0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1A46917C4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v38 = v51;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v44;
    swift_bridgeObjectRetain();
    v29 = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = v46;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v40;
    swift_bridgeObjectRelease();
    v32 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v33 = v47;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v43;
    v35 = v42;
    *v43 = v45;
    v34[1] = v35;
    v36 = v49;
    v34[2] = v41;
    v34[3] = v36;
    v34[4] = v31;
    v34[5] = v32;
    v34[6] = v28;
    v34[7] = v29;
    v34[8] = v33;
    v34[9] = v30;
    v34[10] = v21;
    v34[11] = v23;
    v34[12] = v25;
    v34[13] = v27;
    v34[14] = v38;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A4629D98@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return MultiClassificationMetric.init(from:)(a1, a2);
}

uint64_t sub_1A4629DAC(_QWORD *a1)
{
  return MultiClassificationMetric.encode(to:)(a1);
}

uint64_t sub_1A4629DC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 96))();
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1A4629E00()
{
  unint64_t result;

  result = qword_1EE723E88;
  if (!qword_1EE723E88)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2F68, &type metadata for MultiClassificationMetric.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723E88);
  }
  return result;
}

uint64_t sub_1A4629E44()
{
  return sub_1A4629EBC(&qword_1EE723E98, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
}

uint64_t sub_1A4629E68()
{
  return MEMORY[0x1E0DEA9F0];
}

uint64_t sub_1A4629E74()
{
  return sub_1A4629EBC((unint64_t *)&unk_1ED242E58, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
}

uint64_t sub_1A4629E98()
{
  return sub_1A4629EBC(&qword_1EE723EA0, (uint64_t)&protocol conformance descriptor for ClassificationLabel);
}

uint64_t sub_1A4629EBC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ClassificationLabel();
    result = MEMORY[0x1A85A0000](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A4629EF8()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_1A4629F04()
{
  return MEMORY[0x1E0DEA9F8];
}

uint64_t method lookup function for ClassificationLabel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClassificationLabel.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of ClassificationLabel.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ClassificationLabel.__allocating_init(stringLiteral:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ClassificationLabel.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of ClassificationLabel.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ClassificationLabel.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ClassificationLabel.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of ClassificationModel.predict(input:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for MultiClassificationMetric()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MultiClassificationMetric(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for MultiClassificationMetric(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MultiClassificationMetric(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiClassificationMetric(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiClassificationMetric(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiClassificationMetric()
{
  return &type metadata for MultiClassificationMetric;
}

uint64_t getEnumTagSinglePayload for MultiClassificationMetric.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiClassificationMetric.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_1A462A4B0 + 4 * byte_1A46B2B04[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_1A462A4E4 + 4 * byte_1A46B2AFF[v4]))();
}

uint64_t sub_1A462A4E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A462A4EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A462A4F4);
  return result;
}

uint64_t sub_1A462A500(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A462A508);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_1A462A50C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A462A514(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MultiClassificationMetric.CodingKeys()
{
  return &type metadata for MultiClassificationMetric.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ClassificationLabel.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A462A570 + 4 * byte_1A46B2B09[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A462A590 + 4 * byte_1A46B2B0E[v4]))();
}

_BYTE *sub_1A462A570(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A462A590(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A462A598(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A462A5A0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A462A5A8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A462A5B0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationLabel.CodingKeys()
{
  return &type metadata for ClassificationLabel.CodingKeys;
}

unint64_t sub_1A462A5D0()
{
  unint64_t result;

  result = qword_1EE723EA8;
  if (!qword_1EE723EA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2E88, &type metadata for ClassificationLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723EA8);
  }
  return result;
}

unint64_t sub_1A462A618()
{
  unint64_t result;

  result = qword_1EE723EB0;
  if (!qword_1EE723EB0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2F40, &type metadata for MultiClassificationMetric.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723EB0);
  }
  return result;
}

unint64_t sub_1A462A660()
{
  unint64_t result;

  result = qword_1EE723EB8;
  if (!qword_1EE723EB8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2EB0, &type metadata for MultiClassificationMetric.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723EB8);
  }
  return result;
}

unint64_t sub_1A462A6A8()
{
  unint64_t result;

  result = qword_1EE723EC0;
  if (!qword_1EE723EC0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2ED8, &type metadata for MultiClassificationMetric.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE723EC0);
  }
  return result;
}

unint64_t sub_1A462A6F0()
{
  unint64_t result;

  result = qword_1ED241BA8;
  if (!qword_1ED241BA8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2DF8, &type metadata for ClassificationLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241BA8);
  }
  return result;
}

unint64_t sub_1A462A738()
{
  unint64_t result;

  result = qword_1ED241BA0;
  if (!qword_1ED241BA0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B2E20, &type metadata for ClassificationLabel.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED241BA0);
  }
  return result;
}

uint64_t sub_1A462A77C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4974636572726F63 && a2 == 0xEE0073656369646ELL;
  if (v2 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001A46C2E60 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F697375666E6F63 && a2 == 0xEF78697274614D6ELL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69736F5065757274 && a2 == 0xED00007365766974 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6167654E65757274 && a2 == 0xED00007365766974 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736F5065736C6166 && a2 == 0xEE00736576697469 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x67654E65736C6166 && a2 == 0xEE00736576697461 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F69736963657270 && a2 == 0xEA0000000000736ELL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x736C6C61636572 && a2 == 0xE700000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7272454965707974 && a2 == 0xEB0000000073726FLL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7245494965707974 && a2 == 0xEC00000073726F72 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7963617275636361 && a2 == 0xE800000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6F69736963657270 && a2 == 0xE90000000000006ELL || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C6C61636572 && a2 == 0xE600000000000000 || (sub_1A4691A40() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x4364657865646E69 && a2 == 0xEE0073657373616CLL)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1A4691A40();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

id REMCRMergeableStringDocument.replacingInlineHashtagIDs(newHashtagID_byOriginalHashtagID:)(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v12[6];

  v2 = v1;
  v4 = objc_msgSend(v2, sel_mutableDocument);
  v5 = objc_msgSend(v2, sel_attributedString);
  v6 = objc_msgSend(v5, sel_length);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = v4;
  v12[4] = sub_1A462B1E4;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1A462B140;
  v12[3] = &block_descriptor_17;
  v8 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  v9 = v4;
  swift_release();
  objc_msgSend(v5, sel_rem_enumerateHashtagInRange_options_usingBlock_, 0, v6, 0, v8);
  _Block_release(v8);
  v10 = objc_msgSend(v9, sel_immutableDocument);

  return v10;
}

void sub_1A462AFCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  id v15;
  void *v16;
  id v17;
  id v18;

  if (a1)
  {
    v18 = a1;
    v10 = objc_msgSend(v18, sel_objectIdentifier);
    v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = v12;

    if (*(_QWORD *)(a5 + 16) && (sub_1A443E4C8(v11, v13), (v14 & 1) != 0))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15 = objc_allocWithZone(MEMORY[0x1E0D846D8]);
      v16 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      v17 = objc_msgSend(v15, sel_initWithObjectIdentifier_, v16);

      objc_msgSend(a6, sel_removeHashtagInRange_, a2, a3);
      objc_msgSend(a6, sel_addHashtag_range_, v17, a2, a3);

    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
}

void sub_1A462B140(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(void *, uint64_t, uint64_t, uint64_t);
  id v10;

  v9 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v10 = a2;
  v9(a2, a3, a4, a5);
  swift_release();

}

uint64_t sub_1A462B1B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1A462B1E4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1A462AFCC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(void **)(v4 + 24));
}

void static NSManagedObjectModel.rem_loadManagedObjectModel(withModelName:versionIdentifier:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  id v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  id v35;
  void (*v36)(char *, uint64_t);
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  id v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  _QWORD v57[5];
  _BYTE v58[48];

  v56 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243160);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = sub_1A468FF7C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v44 - v18;
  v20 = (void *)sub_1A469087C();
  v21 = (void *)sub_1A469087C();
  v22 = objc_msgSend(a5, sel_URLForResource_withExtension_, v20, v21);

  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_8;
  }
  sub_1A468FF1C();

  v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v23(v12, v17, v13);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v24(v12, 0, 1, v13);
  v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v55(v12, 1, v13) == 1)
  {
LABEL_8:
    sub_1A44E22C8((uint64_t)v12);
    return;
  }
  v54 = a4;
  v23(v19, v12, v13);
  v25 = objc_allocWithZone(MEMORY[0x1E0CB34D0]);
  v26 = (void *)sub_1A468FED4();
  v27 = objc_msgSend(v25, sel_initWithURL_, v26);

  if (!v27)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    return;
  }
  v28 = (void *)sub_1A469087C();
  v29 = objc_msgSend(v27, sel_URLsForResourcesWithExtension_subdirectory_, v28, 0);

  if (!v29)
  {

    goto LABEL_24;
  }
  v46 = v27;
  v53 = v23;
  v30 = sub_1A4690BA0();

  v31 = v54;
  v50 = *(_QWORD *)(v30 + 16);
  if (!v50)
  {
LABEL_22:
    v24(v10, 1, 1, v13);
LABEL_23:
    swift_bridgeObjectRelease();

    goto LABEL_24;
  }
  v32 = 0;
  v52 = v30 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v45 = v19;
  v49 = v10;
  v47 = v24;
  v51 = v30;
  while (1)
  {
    if (v32 >= *(_QWORD *)(v30 + 16))
    {
      __break(1u);
      return;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v10, v52 + *(_QWORD *)(v14 + 72) * v32, v13);
    v24(v10, 0, 1, v13);
    if (v55(v10, 1, v13) == 1)
      goto LABEL_23;
    v53(v17, v10, v13);
    v33 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
    v34 = (void *)sub_1A468FED4();
    v35 = objc_msgSend(v33, sel_initWithContentsOfURL_, v34);

    v36 = *(void (**)(char *, uint64_t))(v14 + 8);
    v36(v17, v13);
    if (v35)
      break;
LABEL_11:
    ++v32;
    v10 = v49;
    v30 = v51;
    if (v32 == v50)
      goto LABEL_22;
  }
  v48 = v36;
  v37 = objc_msgSend(v35, sel_versionIdentifiers);
  v38 = sub_1A4690D74();

  v57[0] = v56;
  v57[1] = v31;
  swift_bridgeObjectRetain();
  sub_1A4691374();
  if (!*(_QWORD *)(v38 + 16)
    || (v39 = sub_1A469135C(),
        v40 = -1 << *(_BYTE *)(v38 + 32),
        v41 = v39 & ~v40,
        ((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0))
  {
    swift_bridgeObjectRelease();
    sub_1A444ABC0((uint64_t)v58);

LABEL_10:
    v31 = v54;
    v24 = v47;
    goto LABEL_11;
  }
  v42 = ~v40;
  while (1)
  {
    sub_1A444AB84(*(_QWORD *)(v38 + 48) + 40 * v41, (uint64_t)v57);
    v43 = MEMORY[0x1A859EBC0](v57, v58);
    sub_1A444ABC0((uint64_t)v57);
    if ((v43 & 1) != 0)
      break;
    v41 = (v41 + 1) & v42;
    if (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1A444ABC0((uint64_t)v58);

      v19 = v45;
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  sub_1A444ABC0((uint64_t)v58);
  swift_bridgeObjectRelease();

  v48(v45, v13);
}

uint64_t patch<A>(from:to:sort:)(uint64_t a1, unint64_t a2, uint64_t (*a3)(__int128 *, __int128 *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v15;

  Collection<>.diff(_:)(a2, a5, a6, a7, &v15);
  v13 = Diff.patch<A>(from:to:sort:)(a1, a2, a3, a4, a5, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t Diff.patch<A>(from:to:sort:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(__int128 *, __int128 *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[8];

  v11 = *(_QWORD *)(v6 + 8);
  v12 = Diff.patch<A>(from:to:)(a1, a2, a5, a6);
  v28[7] = v11;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = sub_1A462B928(v12, a3, a4, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  v17 = sub_1A45D6B1C(v14, AssociatedTypeWitness, v15, v16);
  swift_bridgeObjectRelease();
  v28[6] = v17;
  v28[2] = a5;
  v28[3] = a6;
  type metadata accessor for SortedPatchElement(255, AssociatedTypeWitness, v18, v19);
  v20 = sub_1A4690C78();
  v23 = (char *)type metadata accessor for Patch(0, AssociatedTypeWitness, v21, v22);
  v24 = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v20);
  v26 = sub_1A449F0A4((void (*)(char *, char *))sub_1A462BB04, (uint64_t)v28, v20, v23, MEMORY[0x1E0DEDCE8], v24, MEMORY[0x1E0DEDD18], v25);
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1A462B928(uint64_t a1, uint64_t (*a2)(__int128 *, __int128 *), uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30[2];

  v10 = *v4;
  v9 = v4[1];
  v11 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A462BC4C(v10, v9, 0, v11, v10);
  v13 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30[0] = v13;
  swift_bridgeObjectRetain();
  sub_1A462C900(v30, a2, a3);
  v14 = swift_bridgeObjectRelease();
  v15 = v30[0];
  v16 = *(_QWORD *)(v30[0] + 16);
  v30[0] = 0;
  v30[1] = v16;
  MEMORY[0x1E0C80A78](v14);
  v28[2] = a4;
  v28[3] = v15;
  v29 = a1;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421A8);
  v20 = (char *)type metadata accessor for SortedPatchElement(0, a4, v18, v19);
  v21 = sub_1A4470A08();
  v23 = sub_1A449F0A4((void (*)(char *, char *))sub_1A462C980, (uint64_t)v28, v17, v20, MEMORY[0x1E0DEDCE8], v21, MEMORY[0x1E0DEDD18], v22);
  v24 = swift_release();
  v30[0] = v23;
  MEMORY[0x1E0C80A78](v24);
  v29 = a4;
  v25 = sub_1A4690C78();
  MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF38], v25);
  v26 = sub_1A4690AEC();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1A462BB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = type metadata accessor for Patch(0, AssociatedTypeWitness, v5, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
}

uint64_t sub_1A462BB78@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v9 = type metadata accessor for Patch(0, a4, a3, a4);
  result = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - v11;
  v13 = *a1;
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)(a2 + 16))
  {
    v14 = *(_QWORD *)(a2 + 32 * v13 + 56);
    sub_1A4690CA8();
    return sub_1A45D6C48((uint64_t)v12, v14, v13, a4, a5);
  }
  __break(1u);
  return result;
}

void sub_1A462BC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  __int128 v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  if (a4 < a3)
  {
LABEL_23:
    __break(1u);
  }
  else
  {
    if (a4 == a3)
      return;
    if (a4 > a3)
    {
      v7 = 0;
      do
      {
        if ((unint64_t)(~a3 + a4) > 0x7FFFFFFFFFFFFFFELL)
        {
          __break(1u);
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
          goto LABEL_23;
        }
        ++v7;
      }
      while (a4 - a3 != v7);
      if (!v7)
        return;
      v20 = MEMORY[0x1E0DEE9D8];
      sub_1A445AB50(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        v8 = 0;
        v9 = v20;
        v10 = *(_QWORD *)(a5 + 16);
        if (v10 <= a3)
          v10 = a3;
        v11 = v10 - a3;
        v12 = (_BYTE *)(a5 + 24 * a3 + 48);
        while (v7 != v8)
        {
          if (a3 < 0)
            goto LABEL_21;
          if (v11 == v8)
            goto LABEL_22;
          v13 = *((_OWORD *)v12 - 1);
          v14 = *v12;
          v21 = v9;
          v16 = *(_QWORD *)(v9 + 16);
          v15 = *(_QWORD *)(v9 + 24);
          if (v16 >= v15 >> 1)
          {
            v19 = *((_OWORD *)v12 - 1);
            sub_1A445AB50(v15 > 1, v16 + 1, 1);
            v13 = v19;
            v9 = v21;
          }
          v17 = a3 + v8;
          *(_QWORD *)(v9 + 16) = v16 + 1;
          v18 = v9 + 32 * v16;
          *(_OWORD *)(v18 + 32) = v13;
          ++v8;
          *(_BYTE *)(v18 + 48) = v14;
          *(_QWORD *)(v18 + 56) = v17;
          v12 += 24;
          if (v7 == v8)
            return;
        }
        goto LABEL_20;
      }
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_1A462BDD4(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t (*a5)(__int128 *, __int128 *))
{
  char *v5;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  const void *v16;
  char v17;
  char v18;
  __int128 v19;
  char *v20;
  char *v21;
  BOOL v22;
  __int128 v23;
  char *v24;
  char *v25;
  char *v26;
  __int128 v27;
  char *v28;
  __int128 v29;
  char v30;
  char v31;
  __int128 v32;
  uint64_t result;
  __int128 v35;
  char v36;
  __int128 v37;
  char v38;
  char *v39;
  const void *v40;
  char *v41;

  v5 = __dst;
  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = a2 - __src + 31;
  if (a2 - __src >= 0)
    v10 = a2 - __src;
  v11 = v10 >> 5;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 5;
  v41 = __src;
  v40 = __dst;
  if (v11 >= v13 >> 5)
  {
    if (v12 >= -31)
    {
      if (__dst != a2 || &a2[32 * v14] <= __dst)
        memmove(__dst, a2, 32 * v14);
      v24 = &v5[32 * v14];
      v39 = v24;
      v41 = v7;
      if (v8 < v7 && v12 >= 32)
      {
        v25 = (char *)(a3 - 32);
        v26 = v7;
        do
        {
          v28 = v25 + 32;
          v29 = *((_OWORD *)v26 - 2);
          v26 -= 32;
          v30 = *(v24 - 16);
          v31 = v26[16];
          v37 = *((_OWORD *)v24 - 2);
          v38 = v30;
          v35 = v29;
          v36 = v31;
          if ((a5(&v37, &v35) & 1) != 0)
          {
            if (v28 != v7 || v25 >= v7)
            {
              v27 = *((_OWORD *)v26 + 1);
              *(_OWORD *)v25 = *(_OWORD *)v26;
              *((_OWORD *)v25 + 1) = v27;
            }
            v41 = v26;
            if (v26 <= v8)
              break;
          }
          else
          {
            v39 = v24 - 32;
            if (v28 < v24 || v25 >= v24 || v28 != v24)
            {
              v32 = *((_OWORD *)v24 - 1);
              *(_OWORD *)v25 = *((_OWORD *)v24 - 2);
              *((_OWORD *)v25 + 1) = v32;
            }
            v26 = v7;
            v24 -= 32;
            if (v7 <= v8)
              break;
          }
          v25 -= 32;
          v7 = v26;
        }
        while (v24 > v5);
      }
LABEL_45:
      sub_1A462EA7C((void **)&v41, &v40, &v39);
      return 1;
    }
  }
  else if (v9 >= -31)
  {
    if (__dst != __src || &__src[32 * v11] <= __dst)
      memmove(__dst, __src, 32 * v11);
    v15 = &v5[32 * v11];
    v39 = v15;
    if ((unint64_t)v7 < a3 && v9 >= 32)
    {
      v16 = v40;
      while (1)
      {
        v17 = v7[16];
        v18 = v5[16];
        v19 = *(_OWORD *)v5;
        v37 = *(_OWORD *)v7;
        v38 = v17;
        v35 = v19;
        v36 = v18;
        if ((a5(&v37, &v35) & 1) != 0)
          break;
        v16 = v5 + 32;
        v21 = v5;
        v20 = v7;
        v22 = v8 == v5;
        v5 += 32;
        if (!v22)
          goto LABEL_22;
LABEL_23:
        v8 += 32;
        if (v5 < v15)
        {
          v7 = v20;
          if ((unint64_t)v20 < a3)
            continue;
        }
        v40 = v16;
        v41 = v8;
        goto LABEL_45;
      }
      v20 = v7 + 32;
      if (v8 < v7 || v8 >= v20)
      {
        v21 = v7;
      }
      else
      {
        v21 = v7;
        if (v8 == v7)
          goto LABEL_23;
      }
LABEL_22:
      v23 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v8 = *(_OWORD *)v21;
      *((_OWORD *)v8 + 1) = v23;
      goto LABEL_23;
    }
    goto LABEL_45;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

uint64_t sub_1A462C0AC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD *, __int128 *))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;
  _QWORD v21[2];
  char v22;
  uint64_t v23;

  v23 = result;
  if (a3 != a2)
  {
    v6 = a3;
    v8 = *a4;
    v9 = *a4 + 32 * a3;
LABEL_5:
    v10 = (uint64_t *)(v8 + 32 * v6);
    v11 = *v10;
    v12 = v10[1];
    v13 = *((_BYTE *)v10 + 16);
    v14 = v23;
    v15 = v9;
    while (1)
    {
      v16 = *(_BYTE *)(v15 - 16);
      v21[0] = v11;
      v21[1] = v12;
      v22 = v13;
      v19 = *(_OWORD *)(v15 - 32);
      v20 = v16;
      result = a5(v21, &v19);
      if ((result & 1) == 0)
      {
LABEL_4:
        ++v6;
        v9 += 32;
        if (v6 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v8)
        break;
      v11 = *(_QWORD *)v15;
      v12 = *(_QWORD *)(v15 + 8);
      v13 = *(_BYTE *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v18 = *(_OWORD *)(v15 - 16);
      *(_OWORD *)v15 = *(_OWORD *)(v15 - 32);
      *(_OWORD *)(v15 + 16) = v18;
      *(_QWORD *)(v15 - 24) = v12;
      *(_BYTE *)(v15 - 16) = v13;
      *(_QWORD *)(v15 - 8) = v17;
      *(_QWORD *)(v15 - 32) = v11;
      v15 -= 32;
      if (v6 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1A462C1A4(uint64_t *a1, uint64_t (*a2)(__int128 *, __int128 *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  unint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *__dst;
  uint64_t (*v112)(__int128 *, __int128 *);
  uint64_t v113;
  __int128 v114;
  char v115;
  __int128 v116;
  char v117;
  uint64_t v118;

  v118 = a3;
  v6 = a1[1];
  result = sub_1A46918CC();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_131;
    if (v6)
      return sub_1A462C0AC(0, v6, 1, a1, (uint64_t (*)(_QWORD *, __int128 *))a2);
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_139;
  v112 = a2;
  v110 = v6;
  v108 = result;
  v105 = a1;
  if (v6 < 2)
  {
    v11 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    v107 = MEMORY[0x1E0DEE9D8];
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_98:
      if (v15 >= 2)
      {
        v97 = *v105;
        do
        {
          v98 = v15 - 2;
          if (v15 < 2)
            goto LABEL_126;
          if (!v97)
            goto LABEL_138;
          v99 = v11;
          v100 = v11 + 32;
          v101 = *(_QWORD *)&v11[16 * v98 + 32];
          v102 = *(_QWORD *)&v11[16 * v15 + 24];
          sub_1A462BDD4((char *)(v97 + 32 * v101), (char *)(v97 + 32 * *(_QWORD *)&v100[16 * v15 - 16]), v97 + 32 * v102, __dst, a2);
          if (v3)
            break;
          if (v102 < v101)
            goto LABEL_127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v99 = sub_1A462EBC8((uint64_t)v99);
          if (v98 >= *((_QWORD *)v99 + 2))
            goto LABEL_128;
          v103 = &v99[16 * v98 + 32];
          *(_QWORD *)v103 = v101;
          *((_QWORD *)v103 + 1) = v102;
          v104 = *((_QWORD *)v99 + 2);
          if (v15 > v104)
            goto LABEL_129;
          v11 = v99;
          memmove(&v99[16 * v15 + 16], &v99[16 * v15 + 32], 16 * (v104 - v15));
          *((_QWORD *)v99 + 2) = v104 - 1;
          v15 = v104 - 1;
          a2 = v112;
        }
        while (v104 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v107 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = v8 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE723EC8);
    v10 = sub_1A4690C00();
    *(_QWORD *)(v10 + 16) = v9;
    v107 = v10;
    __dst = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v106 = *a1 + 48;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v14 = v6;
  v113 = *a1;
  while (1)
  {
    v16 = v12++;
    if (v12 >= v14)
      break;
    v17 = v13 + 32 * v12;
    v18 = *(_BYTE *)(v17 + 16);
    v19 = v13 + 32 * v16;
    v20 = *(_BYTE *)(v19 + 16);
    v116 = *(_OWORD *)v17;
    v117 = v18;
    v114 = *(_OWORD *)v19;
    v115 = v20;
    v21 = a2(&v116, &v114);
    v12 = v16 + 2;
    if (v16 + 2 < v14)
    {
      v22 = v106 + 32 * v16;
      while (1)
      {
        v23 = *(_BYTE *)(v22 + 32);
        v24 = *(_BYTE *)v22;
        v116 = *(_OWORD *)(v22 + 16);
        v117 = v23;
        v114 = *(_OWORD *)(v22 - 16);
        v115 = v24;
        if (((v21 ^ a2(&v116, &v114)) & 1) != 0)
          break;
        ++v12;
        v22 += 32;
        if (v110 == v12)
        {
          v12 = v110;
          break;
        }
      }
    }
    v13 = v113;
    if ((v21 & 1) == 0)
    {
      v14 = v110;
      break;
    }
    if (v12 < v16)
      goto LABEL_132;
    if (v16 < v12)
    {
      v25 = 32 * v12;
      v26 = 32 * v16;
      v27 = v12;
      v28 = v16;
      v14 = v110;
      while (1)
      {
        if (v28 != --v27)
        {
          if (!v113)
            goto LABEL_137;
          v29 = (_OWORD *)(v113 + v26);
          v30 = v113 + v25;
          v31 = *(_BYTE *)(v113 + v26 + 16);
          v32 = *(_QWORD *)(v113 + v26 + 24);
          v33 = *(_OWORD *)(v113 + v26);
          v34 = *(_OWORD *)(v113 + v25 - 16);
          *v29 = *(_OWORD *)(v113 + v25 - 32);
          v29[1] = v34;
          *(_OWORD *)(v30 - 32) = v33;
          *(_BYTE *)(v30 - 16) = v31;
          *(_QWORD *)(v30 - 8) = v32;
        }
        ++v28;
        v25 -= 32;
        v26 += 32;
        if (v28 >= v27)
          goto LABEL_30;
      }
    }
    v14 = v110;
    if (v12 < v110)
      goto LABEL_31;
LABEL_49:
    if (v12 < v16)
      goto LABEL_125;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1A462E5B0(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v15 = v47 + 1;
    v13 = v113;
    if (v47 >= v46 >> 1)
    {
      v96 = sub_1A462E5B0((char *)(v46 > 1), v47 + 1, 1, v11);
      v13 = v113;
      v11 = v96;
    }
    *((_QWORD *)v11 + 2) = v15;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v16;
    *((_QWORD *)v49 + 1) = v12;
    if (v47)
    {
      while (1)
      {
        v50 = v15 - 1;
        if (v15 >= 4)
        {
          v55 = &v48[16 * v15];
          v56 = *((_QWORD *)v55 - 8);
          v57 = *((_QWORD *)v55 - 7);
          v61 = __OFSUB__(v57, v56);
          v58 = v57 - v56;
          if (v61)
            goto LABEL_114;
          v60 = *((_QWORD *)v55 - 6);
          v59 = *((_QWORD *)v55 - 5);
          v61 = __OFSUB__(v59, v60);
          v53 = v59 - v60;
          v54 = v61;
          if (v61)
            goto LABEL_115;
          v62 = v15 - 2;
          v63 = &v48[16 * v15 - 32];
          v65 = *(_QWORD *)v63;
          v64 = *((_QWORD *)v63 + 1);
          v61 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          if (v61)
            goto LABEL_117;
          v61 = __OFADD__(v53, v66);
          v67 = v53 + v66;
          if (v61)
            goto LABEL_120;
          if (v67 >= v58)
          {
            v85 = &v48[16 * v50];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v61 = __OFSUB__(v86, v87);
            v88 = v86 - v87;
            if (v61)
              goto LABEL_124;
            v78 = v53 < v88;
            goto LABEL_86;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v79 = *((_QWORD *)v11 + 4);
            v80 = *((_QWORD *)v11 + 5);
            v61 = __OFSUB__(v80, v79);
            v72 = v80 - v79;
            v73 = v61;
            goto LABEL_80;
          }
          v52 = *((_QWORD *)v11 + 4);
          v51 = *((_QWORD *)v11 + 5);
          v61 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          v54 = v61;
        }
        if ((v54 & 1) != 0)
          goto LABEL_116;
        v62 = v15 - 2;
        v68 = &v48[16 * v15 - 32];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v71 = __OFSUB__(v69, v70);
        v72 = v69 - v70;
        v73 = v71;
        if (v71)
          goto LABEL_119;
        v74 = &v48[16 * v50];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v61 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v61)
          goto LABEL_122;
        if (__OFADD__(v72, v77))
          goto LABEL_123;
        if (v72 + v77 >= v53)
        {
          v78 = v53 < v77;
LABEL_86:
          if (v78)
            v50 = v62;
          goto LABEL_88;
        }
LABEL_80:
        if ((v73 & 1) != 0)
          goto LABEL_118;
        v81 = &v48[16 * v50];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v61 = __OFSUB__(v82, v83);
        v84 = v82 - v83;
        if (v61)
          goto LABEL_121;
        if (v84 < v72)
          goto LABEL_14;
LABEL_88:
        v89 = v50 - 1;
        if (v50 - 1 >= v15)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v13)
          goto LABEL_136;
        v90 = v11;
        v91 = &v48[16 * v89];
        v92 = *(_QWORD *)v91;
        v93 = &v48[16 * v50];
        v94 = *((_QWORD *)v93 + 1);
        sub_1A462BDD4((char *)(v13 + 32 * *(_QWORD *)v91), (char *)(v13 + 32 * *(_QWORD *)v93), v13 + 32 * v94, __dst, v112);
        if (v3)
          goto LABEL_109;
        if (v94 < v92)
          goto LABEL_111;
        if (v50 > *((_QWORD *)v90 + 2))
          goto LABEL_112;
        *(_QWORD *)v91 = v92;
        *(_QWORD *)&v48[16 * v89 + 8] = v94;
        v95 = *((_QWORD *)v90 + 2);
        if (v50 >= v95)
          goto LABEL_113;
        v11 = v90;
        v15 = v95 - 1;
        memmove(&v48[16 * v50], v93 + 16, 16 * (v95 - 1 - v50));
        *((_QWORD *)v90 + 2) = v95 - 1;
        a2 = v112;
        v13 = v113;
        if (v95 <= 2)
          goto LABEL_14;
      }
    }
    v15 = 1;
LABEL_14:
    v14 = v110;
    if (v12 >= v110)
      goto LABEL_98;
  }
LABEL_30:
  if (v12 >= v14)
    goto LABEL_49;
LABEL_31:
  if (__OFSUB__(v12, v16))
    goto LABEL_130;
  if (v12 - v16 >= v108)
    goto LABEL_49;
  v35 = v16 + v108;
  if (__OFADD__(v16, v108))
    goto LABEL_133;
  if (v35 >= v14)
    v35 = v14;
  if (v35 >= v16)
  {
    if (v12 != v35)
    {
      v36 = v13 + 32 * v12;
      v109 = v35;
      do
      {
        v37 = v13 + 32 * v12;
        v38 = *(_QWORD *)v37;
        v39 = *(_QWORD *)(v37 + 8);
        v40 = *(_BYTE *)(v37 + 16);
        v41 = v16;
        v42 = v36;
        while (1)
        {
          v43 = *(_BYTE *)(v42 - 16);
          *(_QWORD *)&v116 = v38;
          *((_QWORD *)&v116 + 1) = v39;
          v117 = v40;
          v114 = *(_OWORD *)(v42 - 32);
          v115 = v43;
          if ((a2(&v116, &v114) & 1) == 0)
            break;
          v13 = v113;
          if (!v113)
            goto LABEL_135;
          v38 = *(_QWORD *)v42;
          v39 = *(_QWORD *)(v42 + 8);
          v40 = *(_BYTE *)(v42 + 16);
          v44 = *(_QWORD *)(v42 + 24);
          v45 = *(_OWORD *)(v42 - 16);
          *(_OWORD *)v42 = *(_OWORD *)(v42 - 32);
          *(_OWORD *)(v42 + 16) = v45;
          *(_QWORD *)(v42 - 24) = v39;
          *(_BYTE *)(v42 - 16) = v40;
          *(_QWORD *)(v42 - 8) = v44;
          *(_QWORD *)(v42 - 32) = v38;
          v42 -= 32;
          if (v12 == ++v16)
            goto LABEL_40;
        }
        v13 = v113;
LABEL_40:
        ++v12;
        v36 += 32;
        v16 = v41;
      }
      while (v12 != v109);
      v12 = v109;
    }
    goto LABEL_49;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A462C900(uint64_t *a1, uint64_t (*a2)(__int128 *, __int128 *), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_1A462ECCC(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = sub_1A462C1A4(v9, a2, a3);
  *a1 = v6;
  return result;
}

uint64_t sub_1A462C980@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1A462BB78(a1, v2[3], v2[4], v2[2], a2);
}

BOOL sub_1A462C9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;

  v7 = type metadata accessor for SortedPatchElement(0, *(_QWORD *)(v4 + 16), a3, a4);
  return *(_QWORD *)(a1 + *(int *)(v7 + 28)) < *(_QWORD *)(a2 + *(int *)(v7 + 28));
}

uint64_t sub_1A462C9F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A462ECE0(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1A462DC38(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1A462CA58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE723ED0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE723ED0);
  if (qword_1EE71C090 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE75B8B8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

_QWORD *REMBertTextClassifier.__allocating_init(vocabURL:modelURL:numOfClasses:maxLength:labels:asciiOnly:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  _QWORD *result;
  id v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a3;
  v32 = a5;
  v30 = a2;
  v10 = sub_1A468FF7C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v31 = a1;
  v17((char *)&v27 - v15, a1, v10);
  type metadata accessor for REMBertTokenizer();
  swift_allocObject();
  v18 = REMBertTokenizer.init(url:maxLen:asciiOnly:)((uint64_t)v16, a4, a6);
  if (v6)
  {
    swift_bridgeObjectRelease();
    v22 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v22(v30, v10);
    return (_QWORD *)((uint64_t (*)(uint64_t, uint64_t))v22)(v31, v10);
  }
  else
  {
    v19 = v18;
    v28 = a4;
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E958]), sel_init);
    objc_msgSend(v20, sel_setComputeUnits_, 2);
    sub_1A444AA40(0, &qword_1EE723EE8);
    v21 = v30;
    v17(v14, v30, v10);
    v24 = sub_1A462F2EC((uint64_t)v14, (uint64_t)v20);

    v25 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v25(v21, v10);
    v25(v31, v10);
    result = (_QWORD *)swift_allocObject();
    v26 = v29;
    result[4] = v19;
    result[5] = v26;
    result[6] = v28;
    result[2] = v32;
    result[3] = v24;
  }
  return result;
}

uint64_t REMBertTextClassifier.labels.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *REMBertTextClassifier.predict(_:thresholds:)(uint64_t a1, uint64_t a2, uint64_t a3, int32x2_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t i;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  char *v46;
  id v47;
  int v48;
  int v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int32x2_t v53;
  char *v54;
  uint64_t v55;
  void *v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;

  v6 = v4;
  v67 = *MEMORY[0x1E0C80C00];
  v10 = v4[5];
  a4.i32[0] = 0.5;
  v11 = sub_1A44A65E0(v10, a4);
  v66 = v11;
  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v66 = a3;
    v11 = a3;
  }
  if (*(_QWORD *)(v11 + 16) != v10)
  {
    sub_1A462F408();
    swift_allocError();
    *v14 = 0;
    v14[1] = 0;
    swift_willThrow();
    goto LABEL_7;
  }
  v12 = REMBertTokenizer.tokenize(text:addSpecialTokens:)(a1, a2, 1);
  v13 = sub_1A44D8064((uint64_t)v12);
  if (v5)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRelease();
    return v6;
  }
  v16 = v13;
  swift_bridgeObjectRelease();
  v17 = v6[6];
  sub_1A44A7AD4(v17, v16);
  v20 = (v19 >> 1) - v18;
  if (__OFSUB__(v19 >> 1, v18))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v20 <= 2)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v58 = v19;
  v59 = v18;
  v57 = v19 >> 1;
  v61 = v17;
  v21 = (void *)sub_1A4690DD4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F360);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1A469DD50;
  sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
  *(_QWORD *)(v22 + 32) = sub_1A4691128();
  *(_QWORD *)(v22 + 40) = v21;
  sub_1A4690BB8();
  v23 = objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v24 = v21;
  v64 = sub_1A462DB40(v22, 65600);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1A469DD50;
  *(_QWORD *)(v25 + 32) = sub_1A4691128();
  *(_QWORD *)(v25 + 40) = v24;
  v65 = (id)v25;
  sub_1A4690BB8();
  objc_allocWithZone(MEMORY[0x1E0C9E970]);
  v26 = v24;
  v27 = sub_1A462DB40(v25, 65600);
  if (v59 > 0)
    goto LABEL_38;
  if (v58 < 2)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v63 = v27;
  v60 = v26;
  if (v20 - 1 >= v57)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  for (i = 0; i != v20; ++i)
  {
    v29 = (void *)sub_1A4690DD4();
    objc_msgSend(v64, sel_setObject_atIndexedSubscript_, v29, i);

    v30 = (void *)sub_1A4691128();
    objc_msgSend(v63, sel_setObject_atIndexedSubscript_, v30, i);

  }
  if (v17 < v20)
    goto LABEL_41;
  v31 = v64;
  if (v20 == v61)
    goto LABEL_23;
  if (v20 >= v61)
LABEL_42:
    __break(1u);
  v31 = v64;
  do
  {
    v32 = (void *)sub_1A4691128();
    objc_msgSend(v63, sel_setObject_atIndexedSubscript_, v32, v20);

    v33 = (void *)sub_1A4691128();
    objc_msgSend(v64, sel_setObject_atIndexedSubscript_, v33, v20);

    ++v20;
  }
  while (v61 != v20);
LABEL_23:
  type metadata accessor for REMBertTextClassifierInput();
  v34 = swift_allocObject();
  v35 = v31;
  *(_QWORD *)(v34 + 16) = v31;
  *(_QWORD *)(v34 + 24) = v63;
  v36 = (void *)v6[3];
  v65 = 0;
  v37 = v35;
  v38 = v63;
  v39 = objc_msgSend(v36, sel_predictionFromFeatures_error_, v34, &v65);
  if (v39)
  {
    v40 = v39;
    v41 = v65;
    v42 = (void *)sub_1A469087C();
    v43 = objc_msgSend(v40, sel_featureValueForName_, v42);

    if (v43
      && (v44 = objc_msgSend(v43, sel_multiArrayValue), v43, v44))
    {
      v62 = v38;
      if (v10)
      {
        v45 = 0;
        v46 = (char *)MEMORY[0x1E0DEE9D8];
        do
        {
          v47 = objc_msgSend(v44, sel_objectAtIndexedSubscript_, v45);
          sub_1A4690D50();
          v49 = v48;

          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v46 = sub_1A443A5A4(0, *((_QWORD *)v46 + 2) + 1, 1, v46);
          v51 = *((_QWORD *)v46 + 2);
          v50 = *((_QWORD *)v46 + 3);
          if (v51 >= v50 >> 1)
            v46 = sub_1A443A5A4((char *)(v50 > 1), v51 + 1, 1, v46);
          ++v45;
          *((_QWORD *)v46 + 2) = v51 + 1;
          *(_DWORD *)&v46[4 * v51 + 32] = v49;
        }
        while (v10 != v45);
      }
      v52 = swift_bridgeObjectRetain();
      v54 = Array<A>.softmax()(v52, v53);
      v55 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v55);
      v56 = (void *)sub_1A462F1C4((uint64_t)v54, (uint64_t (*)(float))sub_1A462F46C);
      swift_bridgeObjectRelease();
      v65 = v56;
      swift_bridgeObjectRetain();
      sub_1A462C9F0((uint64_t *)&v65);
      swift_bridgeObjectRelease();
      v6 = (_QWORD *)sub_1A462ECF4((uint64_t)v65, (uint64_t (*)(_QWORD, float))sub_1A462F474);
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_release();

      return (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    v6 = v65;
    sub_1A468FE68();

    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_release();

  }
  return v6;
}

char *Array<A>.softmax()(uint64_t a1, int32x2_t a2)
{
  unint64_t v3;
  uint64_t v4;
  char *v6;

  v3 = *(_QWORD *)(a1 + 16);
  a2.i32[0] = 0;
  v6 = (char *)sub_1A44A65E0(v3, a2);
  v4 = *((_QWORD *)v6 + 2);
  swift_bridgeObjectRetain();
  sub_1A462D93C((uint64_t)(v6 + 32), v4, a1, a1 + 32, v3, &v6);
  swift_bridgeObjectRelease();
  return v6;
}

BOOL sub_1A462D508(unint64_t a1, uint64_t a2, uint64_t a3, float a4)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  if (*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) > (int64_t)a1)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(*(_QWORD *)a3 + 16) > a1)
    {
      return *(float *)(*(_QWORD *)a3 + 4 * a1 + 32) < a4;
    }
    __break(1u);
    goto LABEL_11;
  }
  if (qword_1EE71C200 != -1)
LABEL_11:
    swift_once();
  v5 = sub_1A4690318();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EE723ED0);
  v6 = sub_1A469030C();
  v7 = sub_1A4690FF0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1A442D000, v6, v7, "Label index out of range. Mismatched model and labels.", v8, 2u);
    MEMORY[0x1A85A0114](v8, -1, -1);
  }

  return 0;
}

unint64_t sub_1A462D618(unint64_t result, uint64_t a2)
{
  unint64_t v2;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = result;
    if (*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16) > result)
    {
      swift_bridgeObjectRetain();
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t REMBertTextClassifier.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t REMBertTextClassifier.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A462D6E4(uint64_t a1, uint64_t a2, uint64_t a3, int32x2_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5 = REMBertTextClassifier.predict(_:thresholds:)(a1, a2, a3, a4);
  return sub_1A44BFD9C(*(uint64_t (**)(uint64_t))(v4 + 8), v4, (uint64_t)v5);
}

id sub_1A462D7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  BOOL v3;
  _QWORD *v6;

  v3 = a1 == 0x64695F7475706E69 && a2 == 0xE900000000000073;
  if (v3 || (sub_1A4691A40() & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + 16);
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  if (a1 == 0x6F69746E65747461 && a2 == 0xEE006B73616D5F6ELL || (sub_1A4691A40() & 1) != 0)
  {
    v6 = (_QWORD *)(v2 + 24);
    return objc_msgSend((id)objc_opt_self(), sel_featureValueWithMultiArray_, *v6);
  }
  return 0;
}

uint64_t sub_1A462D910()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_1A462D93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char **a6)
{
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  void *v14;
  char *v15;
  char isUniquelyReferenced_nonNull_native;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  __int128 v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  v9 = *(_QWORD *)(a3 + 16);
  v10 = sub_1A4690FB4();
  v11 = sub_1A4690FB4();
  v12 = sub_1A4690FB4();
  v13 = sub_1A4690FB4();
  sub_1A46910D4();
  sub_1A4691014();
  v23[0] = 0x1000000000000;
  v23[1] = v9;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0;
  v32 = a4;
  v33 = v10;
  v34 = 0;
  v35 = v11;
  v36 = 1065353216;
  v37 = 0x1000000000000;
  v38 = v9;
  v45 = 0u;
  v44 = 0u;
  v43 = 0u;
  v42 = 0u;
  v41 = 0u;
  v40 = 0u;
  v39 = 0u;
  v46 = 0;
  v47 = a1;
  v48 = v12;
  v49 = 0;
  v50 = v13;
  v51 = 1065353216;
  v52 = v59;
  v53 = v60;
  v54 = v61;
  v55 = v62;
  v56 = v63;
  v57 = v64;
  v58 = 0;
  v19 = 0;
  v21 = 0;
  v22 = 0;
  v20 = 0;
  v14 = (void *)MEMORY[0x1A859F658](v23, &v19);
  v15 = *a6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a6 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v15 = sub_1A443A5A4(0, *((_QWORD *)v15 + 2), 0, v15);
  *a6 = v15;
  return BNNSFilterApply(v14, (const void *)(a3 + 32), v15 + 32);
}

id sub_1A462DB40(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A444AA40(0, (unint64_t *)&unk_1EE721780);
  v4 = (void *)sub_1A4690B94();
  swift_bridgeObjectRelease();
  v9[0] = 0;
  v5 = objc_msgSend(v2, sel_initWithShape_dataType_error_, v4, a2, v9);

  if (v5)
  {
    v6 = v9[0];
  }
  else
  {
    v7 = v9[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_1A462DC38(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  uint64_t v16;
  float v17;
  float *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  float *v28;
  float *v29;
  uint64_t v30;
  float v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  uint64_t v88;
  uint64_t v89;
  float v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  float *__dst;

  v3 = a1[1];
  result = sub_1A46918CC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_141;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 16;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = v86;
        v89 = v85;
        do
        {
          v90 = *(float *)(v89 + 8);
          if (*(float *)(v89 - 8) >= v90)
            break;
          if (!v84)
            goto LABEL_145;
          v91 = *(_QWORD *)v89;
          *(_OWORD *)v89 = *(_OWORD *)(v89 - 16);
          *(float *)(v89 - 8) = v90;
          *(_QWORD *)(v89 - 16) = v91;
          v89 -= 16;
        }
        while (!__CFADD__(v88++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_150;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (float *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_107:
      v93 = v12;
      v104 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_136;
          if (!v94)
            goto LABEL_149;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_1A462E328((float *)(v94 + 16 * v97), (float *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_1A462EBC8((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_138;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_139;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_97:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724108);
    v8 = sub_1A4690C00();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    __dst = (float *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v103 = *a1 + 8;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v105 = v6;
  v106 = v3;
  v107 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v103 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(float *)(v103 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (float *)(v102 + 16 * v14);
        while (v17 < v15 != *(v18 - 4) >= *v18)
        {
          ++v10;
          v18 += 4;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_142;
        if (v14 < v10)
        {
          v19 = 16 * v10 - 16;
          v20 = v10;
          v21 = v14;
          do
          {
            if (v21 != --v20)
            {
              if (!v11)
                goto LABEL_148;
              v23 = (_OWORD *)(v11 + v16);
              v24 = (_OWORD *)(v11 + v19);
              v25 = *(_QWORD *)(v11 + v16);
              v26 = *(_DWORD *)(v11 + v16 + 8);
              if (v16 != v19 || v23 >= v24 + 1)
                *v23 = *v24;
              v22 = v11 + v19;
              *(_QWORD *)v22 = v25;
              *(_DWORD *)(v22 + 8) = v26;
            }
            ++v21;
            v19 -= 16;
            v16 += 16;
          }
          while (v21 < v20);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v10, v14))
      goto LABEL_140;
    if (v10 - v14 >= v6)
      goto LABEL_50;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_143;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (float *)(v11 + 16 * v10);
      do
      {
        v29 = v28;
        v30 = v14;
        do
        {
          v31 = v29[2];
          if (*(v29 - 2) >= v31)
            break;
          if (!v11)
            goto LABEL_146;
          v32 = *(_QWORD *)v29;
          *(_OWORD *)v29 = *((_OWORD *)v29 - 1);
          *(v29 - 2) = v31;
          *((_QWORD *)v29 - 2) = v32;
          v29 -= 4;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 4;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_50:
    if (v10 < v14)
      goto LABEL_135;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A462E5B0(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v107;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_1A462E5B0((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v107;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_124;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_125;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_127;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_130;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_134;
            v65 = v40 < v75;
            goto LABEL_87;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_81;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_126;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_129;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_132;
        if (__OFADD__(v59, v64))
          goto LABEL_133;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_87:
          if (v65)
            v37 = v49;
          goto LABEL_89;
        }
LABEL_81:
        if ((v60 & 1) != 0)
          goto LABEL_128;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_131;
        if (v71 < v59)
          goto LABEL_15;
LABEL_89:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!v11)
          goto LABEL_147;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_1A462E328((float *)(v11 + 16 * *(_QWORD *)v78), (float *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_97;
        if (v81 < v79)
          goto LABEL_121;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_122;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_123;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v107;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v10 >= v106)
    {
      v9 = v104;
      goto LABEL_107;
    }
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

uint64_t sub_1A462E328(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  uint64_t v19;
  float *v20;
  float *v21;
  float *v22;
  float *v23;
  uint64_t result;
  float *v25;
  float *v26;
  float *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v26 = __dst;
  v27 = __src;
  if (v10 >= v13)
  {
    if (v11 >= -15)
    {
      v19 = 4 * v13;
      if (__dst != a2 || &a2[v19] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v20 = &v4[v19];
      v25 = &v4[v19];
      v27 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 16) <= 0xFFFFFFFFFFFFFFE0)
      {
        v21 = (float *)(a3 - 16);
        do
        {
          v22 = v21 + 4;
          if (*(v6 - 2) >= *(v20 - 2))
          {
            v25 = v20 - 4;
            if (v22 < v20 || v21 >= v20 || v22 != v20)
              *(_OWORD *)v21 = *((_OWORD *)v20 - 1);
            v23 = v6;
            v20 -= 4;
            if (v6 <= v7)
              break;
          }
          else
          {
            v23 = v6 - 4;
            if (v22 != v6 || v21 >= v6)
              *(_OWORD *)v21 = *(_OWORD *)v23;
            v27 = v6 - 4;
            if (v23 <= v7)
              break;
          }
          v21 -= 4;
          v6 = v23;
        }
        while (v20 > v4);
      }
LABEL_44:
      sub_1A462EB24((void **)&v27, (const void **)&v26, &v25);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    v14 = 4 * v10;
    if (__dst != __src || &__src[v14] <= __dst)
      memmove(__dst, __src, v14 * 4);
    v15 = &v4[v14];
    v25 = &v4[v14];
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 16) <= 0xFFFFFFFFFFFFFFE0)
    {
      v16 = v4;
      while (1)
      {
        if (v16[2] >= v6[2])
        {
          v4 = v16 + 4;
          v18 = v16;
          v17 = v6;
          if (v7 == v16)
          {
            v16 += 4;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v16 += 4;
          }
        }
        else
        {
          v17 = v6 + 4;
          v18 = v6;
          if (v7 == v6 && v7 < v17)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v18;
LABEL_22:
        v7 += 4;
        if (v16 < v15)
        {
          v6 = v17;
          if ((unint64_t)v17 < a3)
            continue;
        }
        v26 = v4;
        v27 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_1A46916F8();
  __break(1u);
  return result;
}

char *sub_1A462E5B0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242280);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1A462E6A8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1A46916F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1A462E750(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_1A46916F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

uint64_t sub_1A462E80C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_1A46900FC();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1A46916F8();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1A462E91C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    result = (char *)sub_1A46916F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

char *sub_1A462E9D4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1A46916F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1A462EA7C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_1A46916F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_1A462EB24(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  size_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1A46916F8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = (v4 + (v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0;
    if (result != v3 || result >= &v3[v6])
      return (char *)memmove(result, v3, v6);
  }
  return result;
}

char *sub_1A462EBC8(uint64_t a1)
{
  return sub_1A462E5B0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462EBDC(uint64_t a1)
{
  return sub_1A445ABDC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462EBF0(_QWORD *a1)
{
  return sub_1A445B040(0, a1[2], 0, a1);
}

uint64_t sub_1A462EC04(_QWORD *a1)
{
  return sub_1A445B4C4(0, a1[2], 0, a1);
}

uint64_t sub_1A462EC18(_QWORD *a1)
{
  return sub_1A445B668(0, a1[2], 0, a1);
}

uint64_t sub_1A462EC2C(uint64_t a1)
{
  return sub_1A445B67C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462EC40(_QWORD *a1)
{
  return sub_1A445B688(0, a1[2], 0, a1);
}

uint64_t sub_1A462EC54(_QWORD *a1)
{
  return sub_1A445B810(0, a1[2], 0, a1);
}

uint64_t sub_1A462EC68(uint64_t a1)
{
  return sub_1A445C208(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462EC7C(uint64_t a1)
{
  return sub_1A445C9C4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462EC90(_QWORD *a1)
{
  return sub_1A445C820(0, a1[2], 0, a1);
}

uint64_t sub_1A462ECA4(_QWORD *a1)
{
  return sub_1A445CB58(0, a1[2], 0, a1);
}

void sub_1A462ECB8()
{
  JUMPOUT(0x1A859F118);
}

uint64_t sub_1A462ECCC(uint64_t a1)
{
  return sub_1A445D164(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462ECE0(uint64_t a1)
{
  return sub_1A445D444(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1A462ECF4(uint64_t a1, uint64_t (*a2)(_QWORD, float))
{
  int64_t v2;
  uint64_t v3;
  float *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1A445AB6C(0, v2, 0);
    v3 = v18;
    v5 = (float *)(a1 + 40);
    do
    {
      v6 = a2(*((_QWORD *)v5 - 1), *v5);
      v8 = v7;
      v10 = v9;
      v12 = v11;
      v14 = *(_QWORD *)(v18 + 16);
      v13 = *(_QWORD *)(v18 + 24);
      if (v14 >= v13 >> 1)
        sub_1A445AB6C(v13 > 1, v14 + 1, 1);
      v5 += 4;
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = v18 + 32 * v14;
      *(_QWORD *)(v15 + 32) = v6;
      *(_QWORD *)(v15 + 40) = v8;
      *(_QWORD *)(v15 + 48) = v10;
      *(_DWORD *)(v15 + 56) = v12;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1A462EDF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED23F4D0);
    v3 = sub_1A46913D4();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1A4691C8C();
      swift_bridgeObjectRetain();
      sub_1A4690948();
      result = sub_1A4691CC8();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1A4691A40(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1A4691A40();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1A462EF98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724110);
    v3 = sub_1A46913D4();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      sub_1A4691C8C();
      v7 = v6;
      sub_1A4690948();
      v8 = sub_1A4691CC8();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
        v17 = v16;
        if (v15 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1A4691A40();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
          v24 = v23;
          if (v22 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1A4691A40();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

unint64_t sub_1A462F1C4(uint64_t a1, uint64_t (*a2)(float))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t result;
  float v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v5 = 0;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = a1 + 32;
  v8 = MEMORY[0x1E0DEE9D8];
LABEL_2:
  if (v5 <= v6)
    v9 = v6;
  else
    v9 = v5;
  result = v5;
  while (1)
  {
    if (v6 == result)
      return v8;
    if (v9 == result)
      break;
    v11 = *(float *)(v7 + 4 * result);
    v5 = result + 1;
    v12 = a2(v11);
    result = v5;
    if ((v12 & 1) != 0)
    {
      v16 = v3;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1A445AB88(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v14 = *(_QWORD *)(v8 + 16);
      v13 = *(_QWORD *)(v8 + 24);
      if (v14 >= v13 >> 1)
        sub_1A445AB88(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v8 + 16) = v14 + 1;
      v15 = v8 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v5 - 1;
      *(float *)(v15 + 40) = v11;
      v3 = v16;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

id sub_1A462F2EC(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1A468FED4();
  v13[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_modelWithContentsOfURL_configuration_error_, v4, a2, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_1A468FF7C();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_1A468FE68();

    swift_willThrow();
    v11 = sub_1A468FF7C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

unint64_t sub_1A462F408()
{
  unint64_t result;

  result = qword_1EE723EF0;
  if (!qword_1EE723EF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B30DC, &type metadata for REMBertTextClassifierError);
    atomic_store(result, (unint64_t *)&qword_1EE723EF0);
  }
  return result;
}

uint64_t type metadata accessor for REMBertTextClassifierInput()
{
  return objc_opt_self();
}

BOOL sub_1A462F46C(unint64_t a1, float a2)
{
  uint64_t v2;

  return sub_1A462D508(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

unint64_t sub_1A462F474(unint64_t a1)
{
  uint64_t v1;

  return sub_1A462D618(a1, v1);
}

uint64_t type metadata accessor for REMBertTextClassifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMBertTextClassifier()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMBertTextClassifierError()
{
  return &type metadata for REMBertTextClassifierError;
}

unint64_t REMOrderedIdentifierMap.toJSON()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t inited;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE71CBF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A4696430;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001A46C2F60;
  v5 = objc_msgSend(v2, sel_orderedIdentifiers);
  v6 = sub_1A4690BA0();

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = 0xD000000000000017;
  v8 = *MEMORY[0x1E0D84B48];
  *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 88) = 0x80000001A46BEC10;
  *(_QWORD *)(inited + 96) = v8;
  result = sub_1A443CDB8(inited);
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = 0;
  return result;
}

_QWORD *static REMOrderedIdentifierMap.fromJSON(_:)(_BYTE *a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  id v12;
  void *v13;
  uint64_t v14;
  _OWORD v15[2];
  _OWORD v16[2];
  _OWORD v17[2];

  if ((a1[8] & 1) == 0)
  {
    v1 = *(_QWORD **)a1;
    if (!*(_QWORD *)(*(_QWORD *)a1 + 16)
      || (v4 = sub_1A443E4C8(0xD000000000000017, 0x80000001A46BEC10), (v5 & 1) == 0))
    {
      sub_1A4473FBC();
      swift_allocError();
      *(_QWORD *)v2 = 0xD000000000000017;
      *(_QWORD *)(v2 + 8) = 0x80000001A46BEC10;
      v3 = 1;
      goto LABEL_9;
    }
    sub_1A44311F0(v1[7] + 32 * v4, (uint64_t)v16);
    sub_1A444A940(v16, v17);
    sub_1A44311F0((uint64_t)v17, (uint64_t)v16);
    if (swift_dynamicCast())
    {
      if ((rem_isUnsupportedVersionByRuntime() & 1) != 0)
      {
        sub_1A4473FBC();
        swift_allocError();
        *(_QWORD *)v6 = *(_QWORD *)&v15[0];
        *(_QWORD *)(v6 + 8) = 0;
        *(_BYTE *)(v6 + 16) = 0;
LABEL_18:
        swift_willThrow();
        goto LABEL_19;
      }
      if (v1[2])
      {
        v10 = sub_1A443E4C8(0xD000000000000012, 0x80000001A46C2F60);
        if ((v11 & 1) != 0)
        {
          sub_1A44311F0(v1[7] + 32 * v10, (uint64_t)v15);
          sub_1A444A940(v15, v16);
          sub_1A44311F0((uint64_t)v16, (uint64_t)v15);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
            v13 = (void *)sub_1A4690B94();
            swift_bridgeObjectRelease();
            v1 = objc_msgSend(v12, sel_initWithOrderedIdentifiers_, v13);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
            return v1;
          }
          sub_1A4473FBC();
          swift_allocError();
          *(_QWORD *)v14 = 0xD000000000000012;
          *(_QWORD *)(v14 + 8) = 0x80000001A46C2F60;
          *(_BYTE *)(v14 + 16) = 2;
          swift_willThrow();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
LABEL_19:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
          return v1;
        }
      }
      sub_1A4473FBC();
      swift_allocError();
      *(_QWORD *)v8 = 0xD000000000000012;
      *(_QWORD *)(v8 + 8) = 0x80000001A46C2F60;
      v9 = 1;
    }
    else
    {
      sub_1A4473FBC();
      swift_allocError();
      *(_QWORD *)v8 = 0xD000000000000017;
      *(_QWORD *)(v8 + 8) = 0x80000001A46BEC10;
      v9 = 2;
    }
    *(_BYTE *)(v8 + 16) = v9;
    goto LABEL_18;
  }
  sub_1A4473FBC();
  swift_allocError();
  *(_QWORD *)v2 = 0;
  *(_QWORD *)(v2 + 8) = 0;
  v3 = 3;
LABEL_9:
  *(_BYTE *)(v2 + 16) = v3;
  swift_willThrow();
  return v1;
}

unint64_t sub_1A462F8D0@<X0>(uint64_t a1@<X8>)
{
  return REMOrderedIdentifierMap.toJSON()(a1);
}

_QWORD *sub_1A462F8F0@<X0>(_BYTE *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = static REMOrderedIdentifierMap.fromJSON(_:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A462F918(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v28 = MEMORY[0x1E0DEE9D8];
  sub_1A445AAFC(0, v1, 0);
  v2 = v28;
  result = sub_1A45156A8(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v23 = v3 + 80;
  v24 = v1;
  v25 = v5;
  v26 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v27 = v7;
    v12 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
    v13 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
    v14 = v3;
    v16 = *(_QWORD *)(v28 + 16);
    v15 = *(_QWORD *)(v28 + 24);
    swift_retain();
    result = swift_bridgeObjectRetain();
    if (v16 >= v15 >> 1)
      result = sub_1A445AAFC(v15 > 1, v16 + 1, 1);
    *(_QWORD *)(v28 + 16) = v16 + 1;
    v17 = v28 + 40 * v16;
    *(_QWORD *)(v17 + 32) = v13;
    *(_QWORD *)(v17 + 40) = v12;
    *(_QWORD *)(v17 + 48) = 0;
    *(_QWORD *)(v17 + 56) = 0;
    *(_BYTE *)(v17 + 64) = 0;
    v9 = 1 << *(_BYTE *)(v14 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v26;
    v18 = *(_QWORD *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v14;
    v5 = v25;
    if (*(_DWORD *)(v14 + 36) != v25)
      goto LABEL_27;
    v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v20 = v11 + 1;
      v21 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v21)
      {
        v22 = *(_QWORD *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            v22 = *(_QWORD *)(v23 + 8 * v11++);
            if (v22)
            {
              v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v27 + 1;
    v6 = v9;
    if (v27 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A462FB40(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A445AAFC(0, v1, 0);
  v2 = v25;
  result = sub_1A45156A8(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v6);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v14 = *(_QWORD *)(v25 + 16);
    v13 = *(_QWORD *)(v25 + 24);
    result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      result = sub_1A445AAFC(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v25 + 16) = v14 + 1;
    v15 = v25 + 40 * v14;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v24;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 56) = 0;
    *(_BYTE *)(v15 + 64) = 2;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A462FD5C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v25 = MEMORY[0x1E0DEE9D8];
  sub_1A445AAFC(0, v1, 0);
  v2 = v25;
  result = sub_1A45156A8(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v21 = v1;
  v22 = v5;
  v23 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v24 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v6);
    v12 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    v14 = *(_QWORD *)(v25 + 16);
    v13 = *(_QWORD *)(v25 + 24);
    result = swift_bridgeObjectRetain();
    if (v14 >= v13 >> 1)
      result = sub_1A445AAFC(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v25 + 16) = v14 + 1;
    v15 = v25 + 40 * v14;
    *(_QWORD *)(v15 + 32) = v12;
    *(_QWORD *)(v15 + 40) = v24;
    *(_QWORD *)(v15 + 48) = 0;
    *(_QWORD *)(v15 + 56) = 0;
    *(_BYTE *)(v15 + 64) = 7;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v16 = *(_QWORD *)(v23 + 8 * v11);
    if ((v16 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v22;
    if (*(_DWORD *)(a1 + 36) != v22)
      goto LABEL_27;
    v17 = v16 & (-2 << (v6 & 0x3F));
    if (v17)
    {
      v9 = __clz(__rbit64(v17)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v21;
    }
    else
    {
      v18 = v11 + 1;
      v19 = (unint64_t)(v9 + 63) >> 6;
      v10 = v21;
      if (v11 + 1 < v19)
      {
        v20 = *(_QWORD *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          v9 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v11)
          {
            v20 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v20)
            {
              v18 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A462FF78(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v3 = a1;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1A445AAFC(0, v1, 0);
  v2 = v30;
  result = sub_1A45156A8(v3);
  v6 = result;
  v7 = 0;
  v8 = v3 + 64;
  v24 = v3 + 80;
  v25 = v1;
  v26 = v5;
  v27 = v3 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v3 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v3 + 36) != v5)
      goto LABEL_24;
    v28 = v7;
    v12 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v6);
    v13 = v12[1];
    v29 = *v12;
    v14 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v6);
    v15 = v3;
    v17 = *(_QWORD *)(v30 + 16);
    v16 = *(_QWORD *)(v30 + 24);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1)
      result = sub_1A445AAFC(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v30 + 16) = v17 + 1;
    v18 = v30 + 40 * v17;
    *(_QWORD *)(v18 + 32) = v14;
    *(_QWORD *)(v18 + 40) = v29;
    *(_QWORD *)(v18 + 48) = v13;
    *(_QWORD *)(v18 + 56) = 0;
    *(_BYTE *)(v18 + 64) = 8;
    v9 = 1 << *(_BYTE *)(v15 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = v27;
    v19 = *(_QWORD *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v3 = v15;
    v5 = v26;
    if (*(_DWORD *)(v15 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(v24 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v28 + 1;
    v6 = v9;
    if (v28 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A46301AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), char a4)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t result;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v7 = a1;
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1A445AAFC(0, v4, 0);
  v5 = v33;
  result = a3(v7);
  v10 = result;
  v11 = 0;
  v12 = v7 + 64;
  v27 = v7 + 80;
  v28 = v4;
  v29 = v9;
  v30 = v7 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(v7 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(v7 + 36) != v9)
      goto LABEL_24;
    v32 = v11;
    v16 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v10);
    v17 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v10);
    v18 = v7;
    v20 = *(_QWORD *)(v33 + 16);
    v19 = *(_QWORD *)(v33 + 24);
    swift_retain();
    result = swift_bridgeObjectRetain();
    if (v20 >= v19 >> 1)
      result = sub_1A445AAFC(v19 > 1, v20 + 1, 1);
    *(_QWORD *)(v33 + 16) = v20 + 1;
    v21 = v33 + 40 * v20;
    *(_QWORD *)(v21 + 32) = v17;
    *(_QWORD *)(v21 + 40) = v16;
    *(_QWORD *)(v21 + 48) = 0;
    *(_QWORD *)(v21 + 56) = 0;
    *(_BYTE *)(v21 + 64) = a4;
    v13 = 1 << *(_BYTE *)(v18 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = v30;
    v22 = *(_QWORD *)(v30 + 8 * v15);
    if ((v22 & (1 << v10)) == 0)
      goto LABEL_26;
    v7 = v18;
    v9 = v29;
    if (*(_DWORD *)(v18 + 36) != v29)
      goto LABEL_27;
    v23 = v22 & (-2 << (v10 & 0x3F));
    if (v23)
    {
      v13 = __clz(__rbit64(v23)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v28;
    }
    else
    {
      v24 = v15 + 1;
      v25 = (unint64_t)(v13 + 63) >> 6;
      v14 = v28;
      if (v15 + 1 < v25)
      {
        v26 = *(_QWORD *)(v30 + 8 * v24);
        if (v26)
        {
LABEL_20:
          v13 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v15)
          {
            v26 = *(_QWORD *)(v27 + 8 * v15++);
            if (v26)
            {
              v24 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v11 = v32 + 1;
    v10 = v13;
    if (v32 + 1 == v14)
      return v5;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1A46303E0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  int v4;
  int *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (int *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1A4630438@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t REMSuggestedAttributesElector.electionFor(request:response:)(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80[3];
  char v81[8];
  char v82[8];
  char v83[8];
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  uint64_t v110;
  char v111;
  _OWORD v112[5];
  _OWORD v113[3];

  v2 = *(_OWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 80);
  v4 = *(_OWORD *)(a1 + 32);
  v112[3] = *(_OWORD *)(a1 + 48);
  v112[4] = v2;
  v113[0] = v3;
  v5 = *(_OWORD *)(a1 + 16);
  v112[0] = *(_OWORD *)a1;
  v112[1] = v5;
  *(_DWORD *)((char *)v113 + 15) = *(_DWORD *)(a1 + 95);
  v112[2] = v4;
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_BYTE *)(a2 + 56);
  v15 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a2 + 72);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_QWORD *)(a2 + 88);
  v18 = *(_QWORD *)(a2 + 96);
  v19 = *(_QWORD *)(a2 + 104);
  v20 = *(_QWORD *)(a2 + 112);
  v21 = *(_BYTE *)(a2 + 120);
  v78 = *(_QWORD *)(a2 + 136);
  v79 = *(_QWORD *)(a2 + 128);
  v76 = *(_QWORD *)(a2 + 152);
  v77 = *(_QWORD *)(a2 + 144);
  v74 = *(_QWORD *)(a2 + 168);
  v75 = *(_QWORD *)(a2 + 160);
  v73 = *(_QWORD *)(a2 + 176);
  v72 = *(_BYTE *)(a2 + 184);
  v92 = v7;
  v93 = v6;
  v94 = v8;
  v95 = v9;
  v96 = v10;
  v97 = v11;
  v98 = v12;
  v99 = v13;
  v100 = v15;
  v101 = v14;
  *(_QWORD *)&v102 = v16;
  *((_QWORD *)&v102 + 1) = v17;
  *(_QWORD *)&v103 = v18;
  *((_QWORD *)&v103 + 1) = v19;
  v104 = v20;
  v105 = v21;
  v106 = v79;
  v107 = v78;
  *(_QWORD *)&v108 = v77;
  *((_QWORD *)&v108 + 1) = v76;
  *(_QWORD *)&v109 = v75;
  *((_QWORD *)&v109 + 1) = v74;
  v110 = v73;
  v111 = v72;
  v80[0] = MEMORY[0x1E0DEE9D8];
  v68 = v6;
  *(_QWORD *)&v69 = v8;
  *((_QWORD *)&v69 + 1) = v9;
  *(_QWORD *)&v70 = v10;
  *((_QWORD *)&v70 + 1) = v11;
  v71 = v12;
  sub_1A44976A4(v7, v6, v8, v9, v10, v11, v12, v13);
  sub_1A44976A4(v15, v14, v16, v17, v18, v19, v20, v21);
  sub_1A44976A4(v79, v78, v77, v76, v75, v74, v73, v72);
  if ((v13 & 1) != 0)
  {
    v87 = v7;
    v88 = v68;
    v89 = v69;
    v90 = v70;
    v91 = v71;
    sub_1A44E60C8();
    swift_willThrowTypedImpl();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  sub_1A44591DC(v7);
  if ((v105 & 1) != 0)
  {
    v87 = v100;
    v88 = v101;
    v89 = v102;
    v90 = v103;
    v91 = v104;
    sub_1A44E60C8();
    swift_willThrowTypedImpl();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v22 = swift_bridgeObjectRetain();
  }
  sub_1A44591DC(v22);
  if ((v111 & 1) != 0)
  {
    v87 = v106;
    v88 = v107;
    v89 = v108;
    v90 = v109;
    v91 = v110;
    sub_1A44E60C8();
    swift_willThrowTypedImpl();
    v23 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v23 = swift_bridgeObjectRetain();
  }
  sub_1A44591DC(v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2402C0);
  swift_arrayDestroy();
  v24 = v80[0];
  if (qword_1ED242678 != -1)
    swift_once();
  v25 = sub_1A4690318();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED23F240);
  swift_bridgeObjectRetain_n();
  v26 = sub_1A469030C();
  v27 = sub_1A4691008();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v87 = v29;
    *(_DWORD *)v28 = 136315138;
    v30 = MEMORY[0x1A859E404](v24, &type metadata for REMSuggestedAttributeOutput);
    v80[0] = sub_1A4431120(v30, v31, &v87);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v26, v27, "before merging attributes: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v29, -1, -1);
    MEMORY[0x1A85A0114](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v86 = 1;
  swift_retain();
  sub_1A4581724((uint64_t)v112);
  v32 = sub_1A46338F8(v24);
  sub_1A4581770((uint64_t)v112);
  swift_release();
  v33 = sub_1A469030C();
  v34 = sub_1A4691008();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = swift_slowAlloc();
    *(_DWORD *)v35 = 134219264;
    v87 = 2;
    sub_1A46911D0();
    *(_WORD *)(v35 + 12) = 2048;
    v87 = 2;
    sub_1A46911D0();
    *(_WORD *)(v35 + 22) = 2048;
    v87 = 2;
    sub_1A46911D0();
    *(_WORD *)(v35 + 32) = 2048;
    v87 = 1;
    sub_1A46911D0();
    *(_WORD *)(v35 + 42) = 2048;
    v87 = 3;
    sub_1A46911D0();
    *(_WORD *)(v35 + 52) = 2048;
    v87 = 1;
    sub_1A46911D0();
    _os_log_impl(&dword_1A442D000, v33, v34, "listLimit: %ld, dueDateLimit: %ld, locationLimit: %ld, priorityLimit: %ld, tagLimit: %ld, contactLimit: %ld", (uint8_t *)v35, 0x3Eu);
    MEMORY[0x1A85A0114](v35, -1, -1);
  }

  v85 = MEMORY[0x1E0DEE9E0];
  if (*(_QWORD *)(v32 + 16))
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  v36 = sub_1A469030C();
  v37 = sub_1A4691008();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v87 = v39;
    *(_DWORD *)v38 = 136315138;
    swift_beginAccess();
    type metadata accessor for REMSuggestedList();
    sub_1A4633AB4();
    swift_bridgeObjectRetain();
    v40 = sub_1A4690714();
    v42 = v41;
    swift_bridgeObjectRelease();
    v80[0] = sub_1A4431120(v40, v42, &v87);
    sub_1A46911D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v36, v37, "added list ids: %s", v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v39, -1, -1);
    MEMORY[0x1A85A0114](v38, -1, -1);
  }

  swift_beginAccess();
  v43 = swift_bridgeObjectRetain();
  v44 = sub_1A462F918(v43);
  swift_bridgeObjectRelease();
  v45 = swift_bridgeObjectRetain();
  sub_1A44591DC(v45);
  v46 = swift_bridgeObjectRetain();
  v47 = sub_1A462FB40(v46);
  swift_bridgeObjectRelease();
  sub_1A44591DC(v47);
  v48 = swift_bridgeObjectRetain();
  v49 = sub_1A46301AC(v48, (uint64_t)v83, sub_1A45156A8, 4);
  swift_bridgeObjectRelease();
  sub_1A44591DC(v49);
  v50 = swift_bridgeObjectRetain();
  sub_1A44591DC(v50);
  v51 = swift_bridgeObjectRetain();
  v52 = sub_1A46301AC(v51, (uint64_t)v82, sub_1A45156A8, 3);
  swift_bridgeObjectRelease();
  sub_1A44591DC(v52);
  v53 = swift_bridgeObjectRetain();
  v54 = sub_1A462FD5C(v53);
  swift_bridgeObjectRelease();
  sub_1A44591DC(v54);
  v55 = swift_bridgeObjectRetain();
  v56 = sub_1A462FF78(v55);
  swift_bridgeObjectRelease();
  sub_1A44591DC(v56);
  v57 = swift_bridgeObjectRetain();
  v58 = sub_1A46301AC(v57, (uint64_t)v81, sub_1A45156A8, 9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v80[0] = v44;
  sub_1A44591DC(v58);
  v59 = v44;
  v84 = v44;
  swift_bridgeObjectRetain_n();
  v60 = sub_1A469030C();
  v61 = sub_1A4691008();
  if (os_log_type_enabled(v60, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    v63 = swift_slowAlloc();
    v80[0] = v63;
    *(_DWORD *)v62 = 136315138;
    v64 = MEMORY[0x1A859E404](v59, &type metadata for REMSuggestedAttributeOutput);
    sub_1A4431120(v64, v65, v80);
    sub_1A46911D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A442D000, v60, v61, "merged attributes: %s", v62, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85A0114](v63, -1, -1);
    MEMORY[0x1A85A0114](v62, -1, -1);

    sub_1A44BF058(0, 0, 0, 0, 255);
  }
  else
  {
    sub_1A44BF058(0, 0, 0, 0, 255);

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  v66 = v84;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v66;
}

uint64_t sub_1A46323D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1ED23F240);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED23F240);
  if (qword_1ED2427D8 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED256848);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

uint64_t REMSuggestedAttributesElector.ExcludedAttributes.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ReminderKitInternal::REMSuggestedAttributesElector::ExcludedAttributes __swiftcall REMSuggestedAttributesElector.ExcludedAttributes.init(rawValue:)(ReminderKitInternal::REMSuggestedAttributesElector::ExcludedAttributes rawValue)
{
  ReminderKitInternal::REMSuggestedAttributesElector::ExcludedAttributes *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.nonAssignableLists.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.dueDates.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.locations.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.flag.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.priority.getter(_QWORD *a1@<X8>)
{
  *a1 = 32;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.tags.getter(_QWORD *a1@<X8>)
{
  *a1 = 64;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.contact.getter(_QWORD *a1@<X8>)
{
  *a1 = 128;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.listsFromOtherAccounts.getter(_QWORD *a1@<X8>)
{
  *a1 = 256;
}

void static REMSuggestedAttributesElector.ExcludedAttributes.titles.getter(_QWORD *a1@<X8>)
{
  *a1 = 512;
}

uint64_t REMSuggestedAttributesElector.ExcludedAttributes.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;

  v1 = *v0;
  if ((*v0 & 1) != 0)
  {
    v2 = sub_1A4438920(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v2[2];
    v3 = v2[3];
    if (v4 >= v3 >> 1)
      v2 = sub_1A4438920((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
    v2[2] = v4 + 1;
    v5 = &v2[2 * v4];
    v5[4] = 1953720684;
    v5[5] = 0xE400000000000000;
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  if ((v1 & 2) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_1A4438920((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0xD000000000000012;
    v8[5] = 0x80000001A46C2FA0;
    if ((v1 & 4) == 0)
    {
LABEL_8:
      if ((v1 & 8) == 0)
        goto LABEL_9;
      goto LABEL_26;
    }
  }
  else if ((v1 & 4) == 0)
  {
    goto LABEL_8;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v10 = v2[2];
  v9 = v2[3];
  if (v10 >= v9 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
  v2[2] = v10 + 1;
  v11 = &v2[2 * v10];
  v11[4] = 0x7365746144657564;
  v11[5] = 0xE800000000000000;
  if ((v1 & 8) == 0)
  {
LABEL_9:
    if ((v1 & 0x10) == 0)
      goto LABEL_10;
    goto LABEL_31;
  }
LABEL_26:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0x6E6F697461636F6CLL;
  v14[5] = 0xE900000000000073;
  if ((v1 & 0x10) == 0)
  {
LABEL_10:
    if ((v1 & 0x20) == 0)
      goto LABEL_11;
    goto LABEL_36;
  }
LABEL_31:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 1734437990;
  v17[5] = 0xE400000000000000;
  if ((v1 & 0x20) == 0)
  {
LABEL_11:
    if ((v1 & 0x40) == 0)
      goto LABEL_12;
    goto LABEL_41;
  }
LABEL_36:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = &v2[2 * v19];
  v20[4] = 0x797469726F697270;
  v20[5] = 0xE800000000000000;
  if ((v1 & 0x40) == 0)
  {
LABEL_12:
    if ((v1 & 0x80) == 0)
      goto LABEL_13;
    goto LABEL_46;
  }
LABEL_41:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v22 = v2[2];
  v21 = v2[3];
  if (v22 >= v21 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
  v2[2] = v22 + 1;
  v23 = &v2[2 * v22];
  v23[4] = 1936154996;
  v23[5] = 0xE400000000000000;
  if ((v1 & 0x80) == 0)
  {
LABEL_13:
    if ((v1 & 0x100) == 0)
      goto LABEL_14;
    goto LABEL_51;
  }
LABEL_46:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v25 = v2[2];
  v24 = v2[3];
  if (v25 >= v24 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v24 > 1), v25 + 1, 1, v2);
  v2[2] = v25 + 1;
  v26 = &v2[2 * v25];
  v26[4] = 0x746361746E6F63;
  v26[5] = 0xE700000000000000;
  if ((v1 & 0x100) == 0)
  {
LABEL_14:
    if ((v1 & 0x200) == 0)
      goto LABEL_61;
    goto LABEL_56;
  }
LABEL_51:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
  v28 = v2[2];
  v27 = v2[3];
  if (v28 >= v27 >> 1)
    v2 = sub_1A4438920((_QWORD *)(v27 > 1), v28 + 1, 1, v2);
  v2[2] = v28 + 1;
  v29 = &v2[2 * v28];
  v29[4] = 0xD000000000000016;
  v29[5] = 0x80000001A46C2F80;
  if ((v1 & 0x200) != 0)
  {
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A4438920(0, v2[2] + 1, 1, v2);
    v31 = v2[2];
    v30 = v2[3];
    if (v31 >= v30 >> 1)
      v2 = sub_1A4438920((_QWORD *)(v30 > 1), v31 + 1, 1, v2);
    v2[2] = v31 + 1;
    v32 = &v2[2 * v31];
    v32[4] = 0x73656C746974;
    v32[5] = 0xE600000000000000;
  }
LABEL_61:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED242FF0);
  sub_1A4469630();
  v33 = sub_1A4690828();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1A4632A70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1A4630438(a1, a2);
}

void REMSuggestedAttributesElector.excludedAttributes.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
}

_QWORD *REMSuggestedAttributesElector.__allocating_init(store:excludedAttributes:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *result;
  uint64_t v5;

  result = (_QWORD *)swift_allocObject();
  v5 = *a2;
  result[2] = a1;
  result[3] = 0;
  result[4] = 0;
  result[5] = v5;
  return result;
}

_QWORD *REMSuggestedAttributesElector.init(store:excludedAttributes:)(uint64_t a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *a2;
  v2[2] = a1;
  v2[3] = 0;
  v2[4] = 0;
  v2[5] = v3;
  return v2;
}

BOOL REMSuggestedAttributesElector.filter(list:currentListID:currentAccountID:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BOOL8 result;
  char v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  char v30;
  id v31;
  char *v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  char v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  id v60;
  void *v61;
  char *v62;
  uint64_t v63;
  id v64[2];

  v61 = a4;
  v64[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A46900FC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v62 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v4[4];
  if (v14)
  {
    v16 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    goto LABEL_4;
  }
  sub_1A46331C8();
  v14 = v4[4];
  v16 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  if (v14)
  {
LABEL_4:
    if (v16 == v4[3] && v14 == v15 || (sub_1A4691A40() & 1) != 0)
    {
      if (qword_1ED242678 != -1)
        swift_once();
      v17 = sub_1A4690318();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED23F240);
      v18 = sub_1A469030C();
      v19 = sub_1A4691008();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_1A442D000, v18, v19, "Found default list in suggestion, removing...", v20, 2u);
        MEMORY[0x1A85A0114](v20, -1, -1);
      }

      return 0;
    }
  }
  if (!a3)
    goto LABEL_18;
  if (v16 == a2 && v15 == a3)
    return 0;
  v22 = sub_1A4691A40();
  result = 0;
  if ((v22 & 1) == 0)
  {
LABEL_18:
    v23 = v4[5];
    if ((v23 & 1) != 0)
      return 0;
    swift_bridgeObjectRetain();
    sub_1A46900C0();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1A445404C((uint64_t)v10, &qword_1ED243170);
      return 0;
    }
    v59 = v23;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v62, v10, v11);
    v60 = (id)v4[2];
    v24 = objc_msgSend((id)objc_opt_self(), sel_cdEntityName);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    v25 = objc_allocWithZone(MEMORY[0x1E0D845B0]);
    v26 = (void *)sub_1A46900D8();
    v27 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v25, sel_initWithUUID_entityName_, v26, v27);

    v64[0] = 0;
    v29 = objc_msgSend(v60, sel_fetchListWithObjectID_error_, v28, v64);

    if (!v29)
    {
      v33 = v64[0];
      v34 = (void *)sub_1A468FE68();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v62, v11);
      return 0;
    }
    v30 = v59;
    if ((v59 & 0x100) == 0)
    {
      v31 = v64[0];
      v32 = v62;
LABEL_24:
      if ((v30 & 2) == 0)
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v11);

        return 1;
      }
      if (!objc_msgSend(v29, sel_isShared))
      {
        (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v11);

        return 0;
      }
      v49 = objc_msgSend(v29, sel_account);
      v50 = objc_msgSend(v49, sel_capabilities);

      LOBYTE(v49) = objc_msgSend(v50, sel_supportsAssignments);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v11);
      return (v49 & 1) != 0;
    }
    v35 = qword_1ED242678;
    v36 = v64[0];
    if (v35 != -1)
      swift_once();
    v37 = sub_1A4690318();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED23F240);
    v38 = v29;
    swift_retain();
    v39 = sub_1A469030C();
    v40 = sub_1A4691008();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v58 = (void *)swift_slowAlloc();
      v64[0] = v58;
      *(_DWORD *)v41 = 136315394;
      v60 = v38;
      swift_bridgeObjectRetain();
      v63 = sub_1A4431120(v16, v15, (uint64_t *)v64);
      sub_1A46911D0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2080;
      v42 = objc_msgSend(v60, sel_name, v41 + 14);
      v43 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v45 = v44;

      v46 = v43;
      v38 = v60;
      v63 = sub_1A4431120(v46, v45, (uint64_t *)v64);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v39, v40, "Account verification for List {id: %s, name: %s}", (uint8_t *)v41, 0x16u);
      v47 = v58;
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v47, -1, -1);
      v48 = v41;
      v30 = v59;
      MEMORY[0x1A85A0114](v48, -1, -1);

    }
    else
    {

      swift_release();
    }
    v32 = v62;
    v51 = objc_msgSend(v38, sel_accountID);
    v52 = v61;
    if (v51)
    {
      v53 = v51;
      if (v61)
      {
        sub_1A44C178C();
        v54 = v52;
        v55 = v53;
        v56 = sub_1A4691140();

        if ((v56 & 1) != 0)
          goto LABEL_24;
      }
      else
      {

      }
    }
    else if (!v61)
    {
      goto LABEL_24;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v11);

    return 0;
  }
  return result;
}

void sub_1A46331C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD v27[3];
  id v28[2];

  v1 = v0;
  v28[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1A46900FC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (void *)v1[2];
  v28[0] = 0;
  v7 = objc_msgSend(v6, sel_fetchDefaultListWithError_, v28);
  v8 = v7;
  if (v28[0])
  {
    v9 = v28[0];

    swift_willThrow();
    if (qword_1ED242678 != -1)
      swift_once();
    v10 = sub_1A4690318();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED23F240);
    v11 = v9;
    v12 = sub_1A469030C();
    v13 = sub_1A4690FF0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (void *)swift_slowAlloc();
      v28[0] = v15;
      *(_DWORD *)v14 = 136315138;
      swift_getErrorValue();
      v16 = Error.rem_errorDescription.getter(v27[2]);
      v27[0] = sub_1A4431120(v16, v17, (uint64_t *)v28);
      sub_1A46911D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A442D000, v12, v13, "Failed to retrieve default list {error: %s}. May cause default list being suggested.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85A0114](v15, -1, -1);
      MEMORY[0x1A85A0114](v14, -1, -1);

      return;
    }

  }
  else
  {
    if (v7)
    {
      v18 = v7;
      v19 = objc_msgSend(v18, sel_remObjectID);
      v20 = objc_msgSend(v19, sel_uuid);

      sub_1A46900F0();
      v21 = sub_1A46900CC();
      v23 = v22;

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v1[3] = v21;
      v1[4] = v23;
      swift_bridgeObjectRelease();
      return;
    }
    if (qword_1ED242678 != -1)
      swift_once();
    v24 = sub_1A4690318();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED23F240);
    v11 = sub_1A469030C();
    v25 = sub_1A4690FF0();
    if (os_log_type_enabled(v11, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v26 = 0;
      _os_log_impl(&dword_1A442D000, v11, v25, "Default list is nil. May cause default list being suggested.", v26, 2u);
      MEMORY[0x1A85A0114](v26, -1, -1);
    }
  }

}

void sub_1A463354C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4633590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _BYTE v9[16];
  void *v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + OBJC_IVAR____TtC19ReminderKitInternal26REMSuggestedAttributeInput_list);
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  sub_1A4633CA8(a3 + 24, (uint64_t)v9);
  sub_1A4633CA8((uint64_t)v9, (uint64_t)&v10);
  v7 = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  LOBYTE(v5) = REMSuggestedAttributesElector.filter(list:currentListID:currentAccountID:)(v3, v5, v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t REMSuggestedAttributesElector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMSuggestedAttributesElector.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t REMCustomSmartListFilterDescriptor.excludedSuggestedAttributes.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BOOL4 v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A4633AFC(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_date, (uint64_t)v5);
  v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate(0);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6) != 1;
  result = sub_1A445404C((uint64_t)v5, (uint64_t *)&unk_1EE71ED00);
  v9 = 4 * v7;
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_location + 48) != 255)
    v9 = (4 * v7) | 8;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_flagged) != 2)
    v9 |= 0x10uLL;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC19ReminderKitInternal34REMCustomSmartListFilterDescriptor_priorities))
    v9 |= 0x20uLL;
  *a1 = v9;
  return result;
}

uint64_t sub_1A46338F8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[4];
  char v21;
  uint64_t v22;

  v2 = v1;
  v19 = *(_QWORD *)(result + 16);
  if (v19)
  {
    v3 = 0;
    v4 = (char *)(result + 64);
    v5 = MEMORY[0x1E0DEE9D8];
    v18 = result;
    while (v3 < *(_QWORD *)(result + 16))
    {
      v7 = *((_QWORD *)v4 - 4);
      v6 = (void *)*((_QWORD *)v4 - 3);
      v9 = *((_QWORD *)v4 - 2);
      v8 = *((_QWORD *)v4 - 1);
      v10 = *v4;
      v20[0] = v7;
      v20[1] = v6;
      v20[2] = v9;
      v20[3] = v8;
      v21 = v10;
      sub_1A44BEFBC(v7, v6, v9, v8, v10);
      v11 = v2;
      sub_1A463354C((uint64_t)v20);
      if (v2)
      {
        sub_1A44BF06C(v7, v6, v9, v8, v10);
        swift_release();
        goto LABEL_15;
      }
      if ((v12 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v22 = v5;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A445AAFC(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v22;
        }
        v15 = *(_QWORD *)(v5 + 16);
        v14 = *(_QWORD *)(v5 + 24);
        v16 = v15 + 1;
        if (v15 >= v14 >> 1)
        {
          sub_1A445AAFC(v14 > 1, v15 + 1, 1);
          v16 = v15 + 1;
          v5 = v22;
        }
        *(_QWORD *)(v5 + 16) = v16;
        v17 = v5 + 40 * v15;
        *(_QWORD *)(v17 + 32) = v7;
        *(_QWORD *)(v17 + 40) = v6;
        *(_QWORD *)(v17 + 48) = v9;
        *(_QWORD *)(v17 + 56) = v8;
        *(_BYTE *)(v17 + 64) = v10;
        v2 = v11;
      }
      else
      {
        sub_1A44BF06C(v7, v6, v9, v8, v10);
      }
      ++v3;
      v4 += 40;
      result = v18;
      if (v19 == v3)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9D8];
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

unint64_t sub_1A4633AB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED241B08;
  if (!qword_1ED241B08)
  {
    v1 = type metadata accessor for REMSuggestedList();
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for ClassificationLabel, v1);
    atomic_store(result, (unint64_t *)&qword_1ED241B08);
  }
  return result;
}

uint64_t sub_1A4633AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE71ED00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A4633B48()
{
  unint64_t result;

  result = qword_1ED23FFA0;
  if (!qword_1ED23FFA0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes, &type metadata for REMSuggestedAttributesElector.ExcludedAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23FFA0);
  }
  return result;
}

unint64_t sub_1A4633B90()
{
  unint64_t result;

  result = qword_1ED23FFA8;
  if (!qword_1ED23FFA8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes, &type metadata for REMSuggestedAttributesElector.ExcludedAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23FFA8);
  }
  return result;
}

unint64_t sub_1A4633BD8()
{
  unint64_t result;

  result = qword_1ED23FF98;
  if (!qword_1ED23FF98)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes, &type metadata for REMSuggestedAttributesElector.ExcludedAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23FF98);
  }
  return result;
}

unint64_t sub_1A4633C20()
{
  unint64_t result;

  result = qword_1ED23FFB0;
  if (!qword_1ED23FFB0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSuggestedAttributesElector.ExcludedAttributes, &type metadata for REMSuggestedAttributesElector.ExcludedAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED23FFB0);
  }
  return result;
}

uint64_t type metadata accessor for REMSuggestedAttributesElector()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMSuggestedAttributesElector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMSuggestedAttributesElector.__allocating_init(store:excludedAttributes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes()
{
  return &type metadata for REMSuggestedAttributesElector.ExcludedAttributes;
}

uint64_t sub_1A4633CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED23E4D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t REMSmartListUserDefinedVisibility.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = 0x6E65646469682ELL;
  v2 = 0x6E776F6E6B6E75;
  if (a1 == 1)
    v2 = 0x656C62697369762ELL;
  if (a1 != 2)
    v1 = v2;
  if (a1)
    return v1;
  else
    return 0x6E696665646E752ELL;
}

uint64_t sub_1A4633D6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = 0x6E65646469682ELL;
  v3 = 0x6E776F6E6B6E75;
  if (*v0 == 1)
    v3 = 0x656C62697369762ELL;
  if (v1 != 2)
    v2 = v3;
  if (v1)
    return v2;
  else
    return 0x6E696665646E752ELL;
}

uint64_t REMVector.init<A>(source:dimension:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t AssociatedTypeWitness;

  v21 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, a1, a3);
  v14 = sub_1A4690E4C();
  v15 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  result = v15(v13, a3);
  if (v14 != a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  result = sub_1A4690E4C();
  if ((unint64_t)(result - 0x1000000000000000) >> 61 != 7)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v17 = swift_slowAlloc();
  v18 = sub_1A4690E4C();
  v19 = sub_1A46911AC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
  result = v15(a1, a3);
  if (v18 == a2 && v19 == v18)
  {
    type metadata accessor for REMLinearAlgebraDataRef();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v17;
    *(_QWORD *)(result + 24) = a2;
    v20 = v21;
    *v21 = a2;
    v20[1] = result;
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

void static REMVector.rescaledAngularCosineDistance(lhs:rhs:scale:)(int64_t *a1, int64_t *a2)
{
  int64_t v2;
  int64_t v3;
  int64_t v4;
  int64_t v5[2];
  int64_t v6[2];

  v2 = a1[1];
  v3 = *a2;
  v4 = a2[1];
  v6[0] = *a1;
  v6[1] = v2;
  v5[0] = v3;
  v5[1] = v4;
  static REMVector.angularCosineDistance(lhs:rhs:)(v6, v5);
}

uint64_t REMVector.dimension.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t REMVector.data.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
}

uint64_t REMVector.data.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v3 + 16) = result;
  *(_QWORD *)(v3 + 24) = a2;
  return result;
}

__n128 (*REMVector.data.modify(uint64_t a1))(__n128 *a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *(_OWORD *)(*(_QWORD *)(v1 + 8) + 16);
  return sub_1A4634AD4;
}

__n128 sub_1A4634AD4(__n128 *a1)
{
  __n128 result;

  result = *a1;
  *(__n128 *)(*(_QWORD *)(a1[1].n128_u64[0] + 8) + 16) = *a1;
  return result;
}

uint64_t REMVector.init(dimension:repeatedValue:)@<X0>(unint64_t a1@<X0>, _QWORD *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8[2];

  v5 = sub_1A44A6400(a1, a3);
  result = sub_1A44B8000(v5, a1, v8);
  v7 = v8[1];
  *a2 = v8[0];
  a2[1] = v7;
  return result;
}

double REMVector.subscript.getter(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(*(_QWORD *)(*(_QWORD *)(v1 + 8) + 16) + 8 * a1);
}

uint64_t REMVector.subscript.setter(uint64_t result, double a2)
{
  uint64_t v2;

  *(double *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) + 8 * result) = a2;
  return result;
}

double (*REMVector.subscript.modify(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v2;

  a1[1] = a2;
  a1[2] = v2;
  *a1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) + 8 * a2);
  return sub_1A4634B70;
}

double sub_1A4634B70(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) + 16) + 8 * *(_QWORD *)(a1 + 8)) = *(_QWORD *)a1;
  return result;
}

uint64_t static REMVector.* infix(_:_:)@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>, double a3@<D0>)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  const double *v11;
  const double *v12;
  double *v13;
  uint64_t result;
  unint64_t v15;
  unint64_t v16;

  v5 = *a1;
  v6 = a1[1];
  v7 = sub_1A44A6400(*a1, 0.0);
  sub_1A44B8000(v7, v5, &v15);
  v9 = v15;
  v8 = v16;
  v10 = sub_1A44A6400(v5, a3);
  sub_1A44B8000(v10, v5, &v15);
  v11 = *(const double **)(v6 + 16);
  if (!v11)
  {
    __break(1u);
    goto LABEL_7;
  }
  v12 = *(const double **)(v16 + 16);
  if (!v12)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v13 = *(double **)(v8 + 16);
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    vDSP_vmulD(v11, 1, v12, 1, v13, 1, v5);
    result = swift_release();
    *a2 = v9;
    a2[1] = v8;
    return result;
  }
LABEL_9:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

double *static REMVector./ infix(_:_:)@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double *result;
  const double *v12;
  const double *v13;
  int v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *a1;
  v6 = a1[1];
  v7 = sub_1A44A6400(*a1, 0.0);
  sub_1A44B8000(v7, v5, &v15);
  v9 = v15;
  v8 = v16;
  v10 = sub_1A44A6400(v5, a3);
  sub_1A44B8000(v10, v5, &v15);
  result = *(double **)(v8 + 16);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = *(const double **)(v6 + 16);
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = *(const double **)(v16 + 16);
  if (v13)
  {
    if (v5 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v5 <= 0x7FFFFFFF)
    {
      v14 = v5;
      vvdiv(result, v12, v13, &v14);
      result = (double *)swift_release();
      *a2 = v9;
      a2[1] = v8;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
  return result;
}

void static REMVector.- infix(_:_:)(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const double *v8;
  const double *v9;
  unint64_t v10;
  double *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v4 = *a1;
  v5 = a1[1];
  v6 = *(_QWORD *)(a2 + 8);
  v7 = sub_1A44A6400(*a1, 0.0);
  sub_1A44B8000(v7, v4, &v13);
  v8 = *(const double **)(v5 + 16);
  if (!v8)
  {
    __break(1u);
    goto LABEL_7;
  }
  v9 = *(const double **)(v6 + 16);
  if (!v9)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v10 = v14;
  v11 = *(double **)(v14 + 16);
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((v4 & 0x8000000000000000) == 0)
  {
    v12 = v13;
    vDSP_vsubD(v8, 1, v9, 1, v11, 1, v4);
    *a3 = v12;
    a3[1] = v10;
    return;
  }
LABEL_9:
  sub_1A469162C();
  __break(1u);
}

void static REMVector.dot(lhs:rhs:)(vDSP_Length *a1, _QWORD *a2)
{
  vDSP_Length v2;
  uint64_t v3;
  vDSP_Length v4;
  const double *v5;
  const double *v6;
  double __C[2];

  __C[1] = *(double *)MEMORY[0x1E0C80C00];
  v2 = *a1;
  if (*a1 != *a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = a2[1];
  v4 = a1[1];
  __C[0] = 0.0;
  v5 = *(const double **)(v4 + 16);
  if (!v5)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
  }
  v6 = *(const double **)(v3 + 16);
  if (!v6)
    goto LABEL_8;
  if ((v2 & 0x8000000000000000) != 0)
  {
    sub_1A469162C();
    __break(1u);
  }
  else
  {
    vDSP_dotprD(v5, 1, v6, 1, __C, v2);
  }
}

uint64_t static REMVector.cosineDistance(lhs:rhs:)(vDSP_Length *a1, vDSP_Length *a2)
{
  vDSP_Length v2;
  vDSP_Length v3;
  vDSP_Length v4;
  unint64_t v5;
  const double *v6;
  unint64_t v7;
  vDSP_Length v8;
  const double *v9;
  const double *v10;
  const double *v11;
  uint64_t result;
  unint64_t v13[2];
  double v14;
  vDSP_Length v15;
  unint64_t __C[3];

  __C[2] = *MEMORY[0x1E0C80C00];
  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  v14 = *(double *)a1;
  v15 = v3;
  __C[0] = 0;
  v6 = *(const double **)(v3 + 16);
  if (!v6)
    goto LABEL_11;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_15;
  vDSP_dotprD(v6, 1, *(const double **)(v3 + 16), 1, (double *)__C, v2);
  static REMVector./ infix(_:_:)((unint64_t *)&v14, __C, sqrt(*(double *)__C));
  v8 = __C[0];
  v7 = __C[1];
  v13[0] = v4;
  v13[1] = v5;
  v14 = 0.0;
  v9 = *(const double **)(v5 + 16);
  if (!v9)
    goto LABEL_12;
  if ((v4 & 0x8000000000000000) != 0)
    goto LABEL_15;
  vDSP_dotprD(v9, 1, *(const double **)(v5 + 16), 1, &v14, v4);
  static REMVector./ infix(_:_:)(v13, (unint64_t *)&v14, sqrt(v14));
  if (v8 != *(_QWORD *)&v14)
  {
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v13[0] = 0;
  v10 = *(const double **)(v7 + 16);
  if (!v10)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  v11 = *(const double **)(v15 + 16);
  if (!v11)
    goto LABEL_14;
  if ((v8 & 0x8000000000000000) == 0)
  {
    vDSP_dotprD(v10, 1, v11, 1, (double *)v13, v8);
    swift_release();
    return swift_release();
  }
LABEL_15:
  result = sub_1A469162C();
  __break(1u);
  return result;
}

double *REMVector.normalized()@<X0>(unint64_t *a1@<X8>)
{
  vDSP_Length *v1;
  vDSP_Length v3;
  unint64_t v4;
  const double *v5;
  double *result;
  double __C;
  unint64_t v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v3 = *v1;
  v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  __C = 0.0;
  v5 = *(const double **)(v4 + 16);
  if (!v5)
    __break(1u);
  if ((v3 & 0x8000000000000000) != 0)
  {
    result = (double *)sub_1A469162C();
    __break(1u);
  }
  else
  {
    vDSP_dotprD(v5, 1, *(const double **)(v4 + 16), 1, &__C, v3);
    return static REMVector./ infix(_:_:)(v8, a1, sqrt(__C));
  }
  return result;
}

void static REMVector.angularCosineDistance(lhs:rhs:)(int64_t *a1, int64_t *a2)
{
  int64_t v2;
  int64_t v3;
  int64_t v4;
  int64_t v5;
  double v6;
  double v7;
  double v8;
  double v9;
  const double *v10;
  unint64_t v11;
  vDSP_Length v12;
  const double *v13;
  const double *v14;
  const double *v15;
  double v16;
  double v17;
  int64_t v18;
  double v19;
  int64_t v20;
  unint64_t __C[3];

  __C[2] = *MEMORY[0x1E0C80C00];
  v2 = *a1;
  if (*a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  cblas_dasum_NEWLAPACK();
  if (v6 < 0.000000001)
  {
    if (v4 < (uint64_t)0xFFFFFFFF80000000)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v4 > 0x7FFFFFFF)
    {
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
    cblas_dasum_NEWLAPACK();
    if (v7 < 0.000000001)
      return;
  }
  v19 = *(double *)&v2;
  v20 = v3;
  v17 = *(double *)&v4;
  v18 = v5;
  static REMVector.- infix(_:_:)((unint64_t *)&v19, (uint64_t)&v17, __C);
  if ((uint64_t)__C[0] < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_26;
  if ((uint64_t)__C[0] > 0x7FFFFFFF)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  cblas_dasum_NEWLAPACK();
  v9 = v8;
  swift_release();
  if (v9 < 0.000000001)
    return;
  v19 = *(double *)&v2;
  v20 = v3;
  __C[0] = 0;
  v10 = *(const double **)(v3 + 16);
  if (!v10)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v2 < 0)
  {
LABEL_35:
    sub_1A469162C();
    __break(1u);
    return;
  }
  vDSP_dotprD(v10, 1, *(const double **)(v3 + 16), 1, (double *)__C, v2);
  static REMVector./ infix(_:_:)((unint64_t *)&v19, __C, sqrt(*(double *)__C));
  v12 = __C[0];
  v11 = __C[1];
  v17 = *(double *)&v4;
  v18 = v5;
  v19 = 0.0;
  v13 = *(const double **)(v5 + 16);
  if (!v13)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v4 < 0)
    goto LABEL_35;
  vDSP_dotprD(v13, 1, *(const double **)(v5 + 16), 1, &v19, v4);
  static REMVector./ infix(_:_:)((unint64_t *)&v17, (unint64_t *)&v19, sqrt(v19));
  if (v12 != *(_QWORD *)&v19)
    goto LABEL_30;
  v17 = 0.0;
  v14 = *(const double **)(v11 + 16);
  if (!v14)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v15 = *(const double **)(v20 + 16);
  if (!v15)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((v12 & 0x8000000000000000) != 0)
    goto LABEL_35;
  vDSP_dotprD(v14, 1, v15, 1, &v17, v12);
  swift_release();
  swift_release();
  v16 = v17;
  if (v17 > 1.0)
    v16 = 1.0;
  if (v16 <= -1.0)
    v16 = -1.0;
  acos(v16);
}

Swift::Double __swiftcall REMVector.l1norm()()
{
  uint64_t *v0;
  Swift::Double result;

  if (*v0 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (*v0 <= 0x7FFFFFFF)
  {
    cblas_dasum_NEWLAPACK();
    return result;
  }
  __break(1u);
  return result;
}

Swift::Double __swiftcall REMVector.l2norm()()
{
  vDSP_Length *v0;
  vDSP_Length v1;
  vDSP_Length v2;
  const double *v3;
  Swift::Double result;
  double __C[2];

  __C[1] = *(double *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v2 = v0[1];
  __C[0] = 0.0;
  v3 = *(const double **)(v2 + 16);
  if (!v3)
    __break(1u);
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_1A469162C();
    __break(1u);
  }
  else
  {
    vDSP_dotprD(v3, 1, *(const double **)(v2 + 16), 1, __C, v1);
    return sqrt(__C[0]);
  }
  return result;
}

double *REMVector.pow(_:)@<X0>(unint64_t *a1@<X8>, double a2@<D0>)
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double *result;
  const double *v12;
  const double *v13;
  int v14;
  unint64_t v15;
  unint64_t v16;

  v5 = *v2;
  v6 = v2[1];
  v7 = sub_1A44A6400(*v2, 0.0);
  sub_1A44B8000(v7, v5, &v15);
  v9 = v15;
  v8 = v16;
  v10 = sub_1A44A6400(v5, a2);
  sub_1A44B8000(v10, v5, &v15);
  result = *(double **)(v8 + 16);
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v12 = *(const double **)(v16 + 16);
  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = *(const double **)(v6 + 16);
  if (v13)
  {
    if (v5 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v5 <= 0x7FFFFFFF)
    {
      v14 = v5;
      vvpow(result, v12, v13, &v14);
      result = (double *)swift_release();
      *a1 = v9;
      a1[1] = v8;
      return result;
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_11:
  __break(1u);
  return result;
}

Swift::Double __swiftcall REMVector.sum()()
{
  vDSP_Length *v0;
  vDSP_Length v1;
  vDSP_Length v2;
  const double *v3;
  Swift::Double result;
  double __C[2];

  __C[1] = *(double *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v2 = v0[1];
  __C[0] = 0.0;
  v3 = *(const double **)(v2 + 16);
  if (!v3)
    __break(1u);
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_1A469162C();
    __break(1u);
  }
  else
  {
    vDSP_sveD(v3, 1, __C, v1);
    return __C[0];
  }
  return result;
}

uint64_t REMVector.cumsum()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *v1;
  v3 = v1[1];
  v5 = sub_1A44A6400(v4, 0.0);
  result = sub_1A44B8000(v5, v4, (unint64_t *)&v10);
  v7 = v10;
  v8 = v11;
  **(_QWORD **)(v11 + 16) = **(_QWORD **)(v3 + 16);
  if (v7 >= 1)
  {
    if (v7 == 1)
    {
LABEL_6:
      *a1 = v7;
      a1[1] = v8;
      return result;
    }
    v9 = 0;
    while (v9 != 0x7FFFFFFFFFFFFFFFLL)
    {
      *(double *)(*(_QWORD *)(v8 + 16) + 8 * v9 + 8) = *(double *)(*(_QWORD *)(v8 + 16) + 8 * v9)
                                                     + *(double *)(*(_QWORD *)(v3 + 16) + 8 * v9 + 8);
      if (v7 - 1 == ++v9)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t REMVector.slice(range:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  if (result == a2)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v6 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    return sub_1A44B8000((uint64_t)v5, v6, a3);
  }
  v8 = result;
  if (a2 < result)
  {
    __break(1u);
  }
  else if (result < a2)
  {
    v9 = *(_QWORD *)(v3 + 8);
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v10 = *(_QWORD *)(*(_QWORD *)(v9 + 16) + 8 * v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1A4438D64(0, v5[2] + 1, 1, v5);
      v12 = v5[2];
      v11 = v5[3];
      v6 = v12 + 1;
      if (v12 >= v11 >> 1)
        v5 = sub_1A4438D64((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
      ++v8;
      v5[2] = v6;
      v5[v12 + 4] = v10;
    }
    while (a2 != v8);
    return sub_1A44B8000((uint64_t)v5, v6, a3);
  }
  __break(1u);
  return result;
}

void REMVector.natrualLog()(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double *v7;
  const double *v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  unint64_t v12;

  v3 = *v1;
  v4 = v1[1];
  v5 = sub_1A44A6400(*v1, 0.0);
  sub_1A44B8000(v5, v3, &v11);
  v6 = v12;
  v7 = *(double **)(v12 + 16);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = *(const double **)(v4 + 16);
  if (v8)
  {
    if (v3 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v3 <= 0x7FFFFFFF)
    {
      v9 = v11;
      v10 = v3;
      vvlog(v7, v8, &v10);
      *a1 = v9;
      a1[1] = v6;
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  __break(1u);
}

Swift::Int __swiftcall REMVector.argmax()()
{
  vDSP_Length *v0;
  vDSP_Length v1;
  vDSP_Length v2;
  const double *v3;
  Swift::Int result;
  vDSP_Length __I;
  double __C[2];

  __C[1] = *(double *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v2 = v0[1];
  __C[0] = 0.0;
  __I = 0;
  v3 = *(const double **)(v2 + 16);
  if (!v3)
LABEL_5:
    __break(1u);
  if ((v1 & 0x8000000000000000) != 0)
  {
    result = sub_1A469162C();
    __break(1u);
  }
  else
  {
    vDSP_maxviD(v3, 1, __C, &__I, v1);
    result = __I;
    if ((__I & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_5;
    }
  }
  return result;
}

void REMVector.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *v0;
  v2 = v0[1];
  if (*v0 < 0)
  {
    __break(1u);
  }
  else if (v1)
  {
    v3 = 0;
    v4 = MEMORY[0x1E0DEB070];
    v5 = MEMORY[0x1E0DEB100];
    do
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A20);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_1A4695C10;
      v7 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 8 * v3);
      *(_QWORD *)(v6 + 56) = v4;
      *(_QWORD *)(v6 + 64) = v5;
      *(_QWORD *)(v6 + 32) = v7;
      sub_1A46908C4();
      sub_1A4690984();
      swift_bridgeObjectRelease();
      ++v3;
    }
    while (v1 != v3);
  }
}

__n128 sub_1A4635AD4@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *(__n128 *)(*(_QWORD *)(a1 + 8) + 16);
  *a2 = result;
  return result;
}

__n128 sub_1A4635AE4(__n128 *a1, uint64_t a2)
{
  __n128 result;

  result = *a1;
  *(__n128 *)(*(_QWORD *)(a2 + 8) + 16) = *a1;
  return result;
}

double sub_1A4635AF4@<D0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, double *a3@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 16) + 8 * *a2);
  *a3 = result;
  return result;
}

double sub_1A4635B0C(double *a1, uint64_t a2, _QWORD *a3)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)(*(_QWORD *)(a2 + 8) + 16) + 8 * *a3) = *a1;
  return result;
}

uint64_t sub_1A4635B24()
{
  return 0;
}

_QWORD *initializeBufferWithCopyOfBuffer for REMVector(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for REMVector()
{
  return swift_release();
}

_QWORD *assignWithCopy for REMVector(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for REMVector(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for REMVector()
{
  return &type metadata for REMVector;
}

uint64_t sub_1A4635BEC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4635C98(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4635CE0()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4635D6C(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4635DC0()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4635E30(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4635E8C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4635F44(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4635F98()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4636024(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4636080()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4636100(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A463615C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A463620C(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A463625C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4636304(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A463634C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A46363CC(char a1)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4636414()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A46364BC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4636564()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46365E4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636630()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46366CC(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A4636714()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46367D4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A463681C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46368C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A46368FC()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46369F4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636A2C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4636AC0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636B04()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4636BF8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636C40()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4636CA4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636CE8()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4636DB0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636DEC()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4636EF4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4636F30()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4636FEC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4637024()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4637144(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A463717C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46371F4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1A463723C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A4637300(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A4637344()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46373CC()
{
  JUMPOUT(0x1A46373B4);
}

void sub_1A46373E4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A463741C()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

void sub_1A46374CC(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A463751C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A46375A8(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A46375EC()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A46376B0(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637704()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A46377A8()
{
  JUMPOUT(0x1A4637774);
}

void sub_1A46377C0(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637804()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637890(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A46378E0()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637950(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A463799C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637A44(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637A88()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4637B08()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637BB0(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637C08()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637CC0(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637D08()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637DD8(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637E28()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637F04(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4637F5C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4637FDC(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A463802C()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4638134(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4638178()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4638220(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4638278()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

void sub_1A4638338(uint64_t a1, char a2)
{
  sub_1A4691C8C();
  __asm { BR              X10 }
}

uint64_t sub_1A4638390()
{
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4638440()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

id REMFetchResultToken.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  objc_super v8;

  v1 = (objc_class *)type metadata accessor for REMFetchResultToken_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v4 = objc_msgSend(v3, sel_persistentHistoryTokens);
  sub_1A444AA40(0, &qword_1ED2402E0);
  sub_1A4690708();

  v5 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v8.receiver = v2;
  v8.super_class = v1;
  v6 = objc_msgSendSuper2(&v8, sel_initWithPersistentHistoryTokens_, v5);

  return v6;
}

uint64_t REMSmartList.codable.getter()
{
  return sub_1A463BC34(type metadata accessor for REMSmartList_Codable, (uint64_t (*)(void *))REMSmartList_Codable.init(_:));
}

id REMObjectID_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  objc_class *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  objc_super v14;

  v2 = v1;
  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_allocWithZone(v1);
  v9 = objc_msgSend(a1, sel_uuid);
  sub_1A46900F0();

  v10 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v11 = objc_msgSend(a1, sel_entityName);
  if (!v11)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v11 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v14.receiver = v8;
  v14.super_class = v2;
  v12 = objc_msgSendSuper2(&v14, sel_initWithUUID_entityName_, v10, v11);

  return v12;
}

id REMObjectID.codable.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  objc_class *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  objc_super v13;

  v1 = sub_1A46900FC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v6 = objc_allocWithZone(v5);
  v7 = v0;
  v8 = objc_msgSend(v7, sel_uuid);
  sub_1A46900F0();

  v9 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10 = objc_msgSend(v7, sel_entityName);
  if (!v10)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v10 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v13.receiver = v6;
  v13.super_class = v5;
  v11 = objc_msgSendSuper2(&v13, sel_initWithUUID_entityName_, v9, v10);

  return v11;
}

id REMObjectID_Codable.__allocating_init(uuid:entityName:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v3 = objc_allocWithZone(v1);
  v4 = (void *)sub_1A46900D8();
  v5 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v3, sel_initWithUUID_entityName_, v4, v5);

  v7 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  return v6;
}

_QWORD *REMStoreObjectsContainer.__allocating_init(store:storages:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)swift_allocObject();
  v4[2] = a1;
  v4[3] = a2;
  v4[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  return v4;
}

id REMColor_Codable.__allocating_init(red:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:)(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  objc_class *v11;
  void *v19;
  void *v20;
  void *v21;
  id v22;

  if (a7)
  {
    v19 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    if (a9)
      goto LABEL_3;
LABEL_6:
    v20 = 0;
    if (a11)
      goto LABEL_4;
LABEL_7:
    v21 = 0;
    goto LABEL_8;
  }
  v19 = 0;
  if (!a9)
    goto LABEL_6;
LABEL_3:
  v20 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (!a11)
    goto LABEL_7;
LABEL_4:
  v21 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
LABEL_8:
  v22 = objc_msgSend(objc_allocWithZone(v11), sel_initWithRed_green_blue_alpha_colorSpace_daSymbolicColorName_daHexString_ckSymbolicColorName_, a1, v19, v20, v21, a2, a3, a4, a5);

  return v22;
}

id REMList.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v1 = (objc_class *)type metadata accessor for REMList_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v4 = objc_msgSend(v3, sel_store);
  v5 = objc_msgSend(v3, sel_account);
  v6 = objc_msgSend(v3, sel_storage);
  v11.receiver = v2;
  v11.super_class = v1;
  v7 = objc_msgSendSuper2(&v11, sel_initWithStore_account_storage_, v4, v5, v6);

  v8 = v7;
  v9 = objc_msgSend(v3, sel_parentList);
  objc_msgSend(v8, sel_setParentList_, v9);

  return v8;
}

uint64_t REMStructuredLocation.codable.getter()
{
  return sub_1A463BC34(type metadata accessor for REMStructuredLocation_Codable, (uint64_t (*)(void *))REMStructuredLocation_Codable.init(_:));
}

uint64_t sub_1A4638B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1A4690318();
  __swift_allocate_value_buffer(v0, qword_1EE724118);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EE724118);
  if (qword_1ED244120 != -1)
    swift_once();
  v2 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED2568D8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional __swiftcall REMObjectID_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional)sub_1A45BC060(v1);
}

ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional __swiftcall REMObjectID_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;

  return (ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional)sub_1A45BC0C8(v1);
}

ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional __swiftcall REMObjectID_Codable.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 2;
  return (ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional)intValue;
}

void *static REMObjectID_Codable.CodingKeys.allCases.getter()
{
  return &unk_1E4C13368;
}

uint64_t REMObjectID_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMObjectID_Codable.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x614E797469746E65;
  else
    return 1684632949;
}

uint64_t REMObjectID_Codable.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x614E797469746E65;
  else
    return 1684632949;
}

uint64_t sub_1A4638CC8(char *a1, char *a2)
{
  return sub_1A466BE58(*a1, *a2);
}

uint64_t sub_1A4638CD4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4638D50()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4638DA8()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMObjectID_Codable::CodingKeys_optional sub_1A4638E20(Swift::String *a1)
{
  return REMObjectID_Codable.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A4638E2C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1684632949;
  if (*v1)
    v2 = 0x614E797469746E65;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xEA0000000000656DLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A4638E68()
{
  _BYTE *v0;

  if (*v0)
    return 0x614E797469746E65;
  else
    return 1684632949;
}

uint64_t sub_1A4638EA4()
{
  sub_1A46423C8();
  return sub_1A4691DB8();
}

uint64_t sub_1A4638ECC()
{
  sub_1A46423C8();
  return sub_1A4691DC4();
}

void sub_1A4638EF4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4C0FAF8;
}

uint64_t static REMObjectID_Codable.supportsSecureCoding.getter()
{
  return 1;
}

id REMObjectID_Codable.init(uuid:entityName:)(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  objc_super v10;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = (void *)sub_1A46900D8();
  v6 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v10.receiver = v2;
  v10.super_class = ObjectType;
  v7 = objc_msgSendSuper2(&v10, sel_initWithUUID_entityName_, v5, v6);

  v8 = sub_1A46900FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(a1, v8);
  return v7;
}

id REMObjectID_Codable.init(_:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  objc_super v14;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(a1, sel_uuid);
  sub_1A46900F0();

  v10 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = objc_msgSend(a1, sel_entityName);
  if (!v11)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v11 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v14.receiver = v2;
  v14.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v14, sel_initWithUUID_entityName_, v10, v11);

  return v12;
}

void *REMObjectID_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMObjectID_Codable.init(from:)(a1);
}

void *REMObjectID_Codable.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  objc_class *v12;
  uint64_t v13;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  objc_super v24;
  char v25;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v19 = sub_1A46900FC();
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v20 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440E8);
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46423C8();
  v22 = v9;
  v11 = (uint64_t)v23;
  sub_1A4691D28();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v23 = a1;
    v12 = (objc_class *)ObjectType;
    v25 = 0;
    sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v13 = v19;
    sub_1A46917C4();
    v25 = 1;
    sub_1A4691788();
    v18 = v7;
    v15 = sub_1A46900D8();
    v16 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v24.receiver = v2;
    v24.super_class = v12;
    v17 = (void *)v15;
    v10 = objc_msgSendSuper2(&v24, sel_initWithUUID_entityName_, v15, v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v13);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v22, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  }
  return v10;
}

uint64_t REMObjectID_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  id v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v2 = v1;
  v4 = sub_1A46900FC();
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A10);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46423C8();
  sub_1A4691D40();
  v11 = objc_msgSend(v2, sel_uuid);
  sub_1A46900F0();

  v18 = 0;
  sub_1A450C498(&qword_1ED243D00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v12 = v15;
  sub_1A4691890();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
  if (v12)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = objc_msgSend(v2, sel_entityName);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v17 = 1;
  sub_1A4691854();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_bridgeObjectRelease();
}

uint64_t static REMObjectID_Codable.partialKeyPath(for:)()
{
  return swift_getKeyPath();
}

void sub_1A46396F4(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_uuid);
  sub_1A46900F0();

}

void sub_1A4639740(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_entityName);
  v4 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void *sub_1A4639798@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  void *result;

  v6 = objc_allocWithZone(v2);
  result = REMObjectID_Codable.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1A46397E4(_QWORD *a1)
{
  return REMObjectID_Codable.encode(to:)(a1);
}

uint64_t sub_1A4639804()
{
  return swift_getKeyPath();
}

id REMAccount.codable.getter()
{
  return sub_1A4639DD0(type metadata accessor for REMAccount_Codable);
}

id REMAccount_Codable.__allocating_init(store:storage:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithStore_storage_, a1, a2);

  return v5;
}

uint64_t REMAccount_Codable.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A464599C(a1, (void *)0x1E0D84440, &qword_1ED243E40, 0x1E0D84458, type metadata accessor for REMAccount_Codable);
}

uint64_t REMAccount_Codable.encode(to:)(_QWORD *a1)
{
  return sub_1A463A608(a1, sub_1A463D7C0);
}

uint64_t sub_1A46398F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A464599C(a1, (void *)0x1E0D84440, &qword_1ED243E40, 0x1E0D84458, type metadata accessor for REMAccount_Codable);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4639938(_QWORD *a1)
{
  return REMAccount_Codable.encode(to:)(a1);
}

id REMList_Codable.__allocating_init(_:)(void *a1)
{
  return sub_1A463A0C4(a1, (SEL *)&selRef_account, (SEL *)&selRef_initWithStore_account_storage_, (SEL *)&selRef_parentList, (SEL *)&selRef_setParentList_);
}

id REMList_Codable.init(_:)(void *a1)
{
  return sub_1A463A204(a1, (SEL *)&selRef_account, (SEL *)&selRef_initWithStore_account_storage_, (SEL *)&selRef_parentList, (SEL *)&selRef_setParentList_);
}

id REMList_Codable.__allocating_init(store:account:storage:)(void *a1, void *a2, void *a3)
{
  return sub_1A463A32C(a1, a2, a3, (SEL *)&selRef_initWithStore_account_storage_);
}

id REMList_Codable.init(store:account:storage:)(void *a1, void *a2, void *a3)
{
  return sub_1A463A3A0(a1, a2, a3, (SEL *)&selRef_initWithStore_account_storage_);
}

char *REMList_Codable.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A4644DF0(a1);
}

uint64_t REMList_Codable.encode(to:)(_QWORD *a1)
{
  return sub_1A463A608(a1, sub_1A463D7EC);
}

char *sub_1A46399F8@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1A4644DF0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4639A20(_QWORD *a1)
{
  return REMList_Codable.encode(to:)(a1);
}

id REMSmartList_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMSmartList_Codable.init(_:)(a1);
}

id REMSmartList_Codable.init(_:)(void *a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  objc_super v12;
  objc_super v13;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  v5 = objc_msgSend(a1, sel_customContext);
  v6 = objc_msgSend(a1, sel_store);
  if (v5)
  {
    v7 = objc_msgSend(v5, sel_account);
    v8 = objc_msgSend(v5, sel_parentList);
    v9 = objc_msgSend(a1, sel_storage);
    v12.receiver = v2;
    v12.super_class = ObjectType;
    v10 = objc_msgSendSuper2(&v12, sel_initWithStore_account_parentList_storage_, v6, v7, v8, v9);

    v6 = v9;
  }
  else
  {
    v5 = objc_msgSend(a1, sel_storage);
    v13.receiver = v2;
    v13.super_class = ObjectType;
    v10 = objc_msgSendSuper2(&v13, sel_initWithStore_storage_, v6, v5);
  }

  return v10;
}

id REMSmartList_Codable.__allocating_init(store:account:parentList:storage:)(void *a1, void *a2, void *a3, void *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_msgSend(objc_allocWithZone(v4), sel_initWithStore_account_parentList_storage_, a1, a2, a3, a4);

  return v9;
}

id REMSmartList_Codable.init(store:account:parentList:storage:)(void *a1, void *a2, void *a3, void *a4)
{
  void *v4;
  id v9;
  objc_super v11;

  v11.receiver = v4;
  v11.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v11, sel_initWithStore_account_parentList_storage_, a1, a2, a3, a4);

  return v9;
}

void (**REMSmartList_Codable.__allocating_init(from:)(_QWORD *a1))(char *, uint64_t)
{
  return sub_1A4645F58(a1);
}

uint64_t REMSmartList_Codable.encode(to:)(_QWORD *a1)
{
  return sub_1A463A608(a1, sub_1A463DA90);
}

void (**sub_1A4639D7C@<X0>(_QWORD *a1@<X0>, void (***a2)(char *, uint64_t)@<X8>))(char *, uint64_t)
{
  uint64_t v2;
  void (**result)(char *, uint64_t);

  result = sub_1A4645F58(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4639DA4(_QWORD *a1)
{
  return REMSmartList_Codable.encode(to:)(a1);
}

id REMTemplate.codable.getter()
{
  return sub_1A4639DD0(type metadata accessor for REMTemplate_Codable);
}

id sub_1A4639DD0(uint64_t (*a1)(void))
{
  void *v1;
  objc_class *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v9;

  v2 = (objc_class *)a1();
  v3 = objc_allocWithZone(v2);
  v4 = v1;
  v5 = objc_msgSend(v4, sel_store);
  v6 = objc_msgSend(v4, sel_storage);
  v9.receiver = v3;
  v9.super_class = v2;
  v7 = objc_msgSendSuper2(&v9, sel_initWithStore_storage_, v5, v6);

  return v7;
}

id _s19ReminderKitInternal18REMAccount_CodableCyACSo0D0CcfC_0(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend(a1, sel_store);
  v5 = objc_msgSend(a1, sel_storage);
  v8.receiver = v3;
  v8.super_class = v1;
  v6 = objc_msgSendSuper2(&v8, sel_initWithStore_storage_, v4, v5);

  return v6;
}

id _s19ReminderKitInternal18REMAccount_CodableCyACSo0D0Ccfc_0(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = objc_msgSend(a1, sel_store);
  v5 = objc_msgSend(a1, sel_storage);
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_initWithStore_storage_, v4, v5);

  return v6;
}

uint64_t REMTemplate_Codable.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A464599C(a1, (void *)0x1E0D846F0, &qword_1EE724130, 0x1E0D84728, type metadata accessor for REMTemplate_Codable);
}

uint64_t REMTemplate_Codable.encode(to:)(_QWORD *a1)
{
  return sub_1A463A608(a1, sub_1A463DD7C);
}

uint64_t sub_1A463A038@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1A464599C(a1, (void *)0x1E0D846F0, &qword_1EE724130, 0x1E0D84728, type metadata accessor for REMTemplate_Codable);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A463A080(_QWORD *a1)
{
  return REMTemplate_Codable.encode(to:)(a1);
}

id REMReminder_Codable.__allocating_init(_:)(void *a1)
{
  return sub_1A463A0C4(a1, (SEL *)&selRef_list, (SEL *)&selRef_initWithStore_list_storage_, (SEL *)&selRef_parentReminder, (SEL *)&selRef_setParentReminder_);
}

id sub_1A463A0C4(void *a1, SEL *a2, SEL *a3, SEL *a4, SEL *a5)
{
  objc_class *v5;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  v11 = objc_allocWithZone(v5);
  v12 = objc_msgSend(a1, sel_store);
  v13 = objc_msgSend(a1, *a2);
  v14 = objc_msgSend(a1, sel_storage);
  v19.receiver = v11;
  v19.super_class = v5;
  v15 = objc_msgSendSuper2(&v19, *a3, v12, v13, v14);

  v16 = v15;
  v17 = objc_msgSend(a1, *a4);
  objc_msgSend(v16, *a5, v17);

  return v16;
}

id REMReminder_Codable.init(_:)(void *a1)
{
  return sub_1A463A204(a1, (SEL *)&selRef_list, (SEL *)&selRef_initWithStore_list_storage_, (SEL *)&selRef_parentReminder, (SEL *)&selRef_setParentReminder_);
}

id sub_1A463A204(void *a1, SEL *a2, SEL *a3, SEL *a4, SEL *a5)
{
  void *v5;
  objc_class *ObjectType;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_super v19;

  ObjectType = (objc_class *)swift_getObjectType();
  v12 = objc_msgSend(a1, sel_store);
  v13 = objc_msgSend(a1, *a2);
  v14 = objc_msgSend(a1, sel_storage);
  v19.receiver = v5;
  v19.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v19, *a3, v12, v13, v14);

  v16 = v15;
  v17 = objc_msgSend(a1, *a4);
  objc_msgSend(v16, *a5, v17);

  return v16;
}

id REMReminder_Codable.__allocating_init(store:list:storage:)(void *a1, void *a2, void *a3)
{
  return sub_1A463A32C(a1, a2, a3, (SEL *)&selRef_initWithStore_list_storage_);
}

id sub_1A463A32C(void *a1, void *a2, void *a3, SEL *a4)
{
  objc_class *v4;
  id v8;

  v8 = objc_msgSend(objc_allocWithZone(v4), *a4, a1, a2, a3);

  return v8;
}

id REMReminder_Codable.init(store:list:storage:)(void *a1, void *a2, void *a3)
{
  return sub_1A463A3A0(a1, a2, a3, (SEL *)&selRef_initWithStore_list_storage_);
}

id sub_1A463A3A0(void *a1, void *a2, void *a3, SEL *a4)
{
  void *v4;
  id v9;
  objc_super v11;

  v11.receiver = v4;
  v11.super_class = (Class)swift_getObjectType();
  v9 = objc_msgSendSuper2(&v11, *a4, a1, a2, a3);

  return v9;
}

id _s19ReminderKitInternal18REMAccount_CodableC5store7storageACSo8REMStoreC_So0D7StorageCtcfc_0(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithStore_storage_, a1, a2);

  return v5;
}

id REMReminder_Codable.__allocating_init(store:account:storage:)(void *a1, void *a2, void *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_msgSend(objc_allocWithZone(v3), sel_initWithStore_account_storage_, a1, a2, a3);

  return v7;
}

id REMReminder_Codable.init(store:account:storage:)(void *a1, void *a2, void *a3)
{
  void *v3;
  id v7;
  objc_super v9;

  v9.receiver = v3;
  v9.super_class = (Class)swift_getObjectType();
  v7 = objc_msgSendSuper2(&v9, sel_initWithStore_account_storage_, a1, a2, a3);

  return v7;
}

id sub_1A463A574(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  objc_super v11;

  v11.receiver = a1;
  v11.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v11, *a6, a3, a4, a5);
}

char *REMReminder_Codable.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A46453F8(a1);
}

uint64_t REMReminder_Codable.encode(to:)(_QWORD *a1)
{
  return sub_1A463A608(a1, sub_1A463DFD0);
}

uint64_t sub_1A463A608(_QWORD *a1, void (*a2)(void *))
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  uint64_t v16;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void *);
  void *v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  _OWORD v33[2];

  v28 = a2;
  v26 = sub_1A46900FC();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E60);
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46915B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1A4691D1C();
  if (qword_1ED244118 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED243F48);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  if (*(_QWORD *)(v11 + 16) && (v13 = sub_1A443E79C((uint64_t)v10), (v14 & 1) != 0))
    sub_1A44311F0(*(_QWORD *)(v11 + 56) + 32 * v13, (uint64_t)v33);
  else
    memset(v33, 0, sizeof(v33));
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1A444ABF4((uint64_t)v33, (uint64_t)&v30, &qword_1ED243E68);
  if (!v31)
  {
    sub_1A445404C((uint64_t)&v30, &qword_1ED243E68);
    sub_1A459AC74((uint64_t)v33, 0, 0);
    swift_willThrow();
    return sub_1A445404C((uint64_t)v33, &qword_1ED243E68);
  }
  sub_1A444A940(&v30, v32);
  sub_1A44311F0((uint64_t)v32, (uint64_t)&v30);
  type metadata accessor for REMStoreObjectsContainer();
  if (!swift_dynamicCast())
  {
    sub_1A44311F0((uint64_t)v32, (uint64_t)&v30);
    sub_1A459AC74((uint64_t)&v30, 0, 0);
    sub_1A445404C((uint64_t)&v30, &qword_1ED243E68);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return sub_1A445404C((uint64_t)v33, &qword_1ED243E68);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  sub_1A445404C((uint64_t)v33, &qword_1ED243E68);
  v15 = v29;
  v16 = v27;
  v28(v29);
  if (v16)
    return swift_release();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46453B4();
  sub_1A4691D40();
  v18 = objc_msgSend(v15, sel_remObjectID);
  v19 = objc_msgSend(v18, sel_uuid);

  sub_1A46900F0();
  sub_1A450C498(&qword_1ED243D00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  v21 = v25;
  v20 = v26;
  sub_1A4691890();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v20);
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v21);
}

char *sub_1A463A9E0@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  char *result;

  result = sub_1A46453F8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A463AA08(_QWORD *a1)
{
  return REMReminder_Codable.encode(to:)(a1);
}

id REMReminder.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  objc_super v11;

  v1 = (objc_class *)type metadata accessor for REMReminder_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v4 = objc_msgSend(v3, sel_store);
  v5 = objc_msgSend(v3, sel_list);
  v6 = objc_msgSend(v3, sel_storage);
  v11.receiver = v2;
  v11.super_class = v1;
  v7 = objc_msgSendSuper2(&v11, sel_initWithStore_list_storage_, v4, v5, v6);

  v8 = v7;
  v9 = objc_msgSend(v3, sel_parentReminder);
  objc_msgSend(v8, sel_setParentReminder_, v9);

  return v8;
}

id REMColor_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMColor_Codable.init(_:)(a1);
}

id REMColor_Codable.init(_:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(a1, sel_red);
  v5 = v4;
  objc_msgSend(a1, sel_green);
  v7 = v6;
  objc_msgSend(a1, sel_blue);
  v9 = v8;
  objc_msgSend(a1, sel_alpha);
  v11 = v10;
  v12 = objc_msgSend(a1, sel_colorRGBSpace);
  v13 = objc_msgSend(a1, sel_daSymbolicColorName);
  if (!v13)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v14 = objc_msgSend(a1, sel_daHexString);
  if (!v14)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v14 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v15 = objc_msgSend(a1, sel_ckSymbolicColorName);
  if (!v15)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v15 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v18.receiver = v1;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, sel_initWithRed_green_blue_alpha_colorSpace_daSymbolicColorName_daHexString_ckSymbolicColorName_, v12, v13, v14, v15, v5, v7, v9, v11);

  return v16;
}

id REMColor_Codable.init(red:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:)(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  void *v11;
  objc_class *ObjectType;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  objc_super v26;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a7)
  {
    v21 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    if (a9)
      goto LABEL_3;
LABEL_6:
    v22 = 0;
    if (a11)
      goto LABEL_4;
LABEL_7:
    v23 = 0;
    goto LABEL_8;
  }
  v21 = 0;
  if (!a9)
    goto LABEL_6;
LABEL_3:
  v22 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (!a11)
    goto LABEL_7;
LABEL_4:
  v23 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
LABEL_8:
  v26.receiver = v11;
  v26.super_class = ObjectType;
  v24 = objc_msgSendSuper2(&v26, sel_initWithRed_green_blue_alpha_colorSpace_daSymbolicColorName_daHexString_ckSymbolicColorName_, a1, v21, v22, v23, a2, a3, a4, a5);

  return v24;
}

_QWORD *REMColor_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[2];
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2421E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646464();
  sub_1A4691D28();
  if (!v2)
  {
    v37 = 0;
    sub_1A46917A0();
    v11 = v10;
    v36 = 1;
    sub_1A46917A0();
    v13 = v12;
    v35 = 2;
    sub_1A46917A0();
    v15 = v14;
    v34 = 3;
    sub_1A46917A0();
    v17 = v16;
    v33 = 4;
    v18 = sub_1A46917B8();
    v32 = 5;
    v29 = sub_1A4691788();
    v31 = 6;
    v27 = sub_1A4691788();
    v28 = v20;
    v30 = 7;
    v25[1] = sub_1A4691788();
    v26 = objc_allocWithZone(v3);
    v29 = sub_1A469087C();
    swift_bridgeObjectRelease();
    v21 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v22 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v23 = v18;
    v24 = (void *)v29;
    v9 = objc_msgSend(v26, sel_initWithRed_green_blue_alpha_colorSpace_daSymbolicColorName_daHexString_ckSymbolicColorName_, v23, v29, v21, v22, v11, v13, v15, v17);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t REMColor_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  id v10;
  id v12;
  _BYTE v13[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243100);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646464();
  sub_1A4691D40();
  objc_msgSend(v3, sel_red);
  v13[15] = 0;
  sub_1A469186C();
  if (v2)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v3, sel_green);
  v13[14] = 1;
  sub_1A469186C();
  objc_msgSend(v3, sel_blue);
  v13[13] = 2;
  sub_1A469186C();
  objc_msgSend(v3, sel_alpha);
  v13[12] = 3;
  sub_1A469186C();
  objc_msgSend(v3, sel_colorRGBSpace);
  v13[11] = 4;
  sub_1A4691884();
  v9 = objc_msgSend(v3, sel_daSymbolicColorName);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v13[10] = 5;
  sub_1A4691854();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v3, sel_daHexString);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v13[9] = 6;
  sub_1A4691854();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v3, sel_ckSymbolicColorName);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v13[8] = 7;
  sub_1A4691854();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

id REMColor_Codable.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

uint64_t sub_1A463B5C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A463B5EC + 4 * byte_1A46B34DF[a1]))(6579570, 0xE300000000000000);
}

uint64_t sub_1A463B5EC()
{
  return 0x6E65657267;
}

uint64_t sub_1A463B600()
{
  return 1702194274;
}

uint64_t sub_1A463B610()
{
  return 0x6168706C61;
}

uint64_t sub_1A463B624()
{
  return 0x617053726F6C6F63;
}

unint64_t sub_1A463B640()
{
  return 0xD000000000000013;
}

uint64_t sub_1A463B688(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A463B6B4 + 4 * byte_1A46B34E7[a1]))(6579570, 0xE300000000000000);
}

uint64_t sub_1A463B6B4()
{
  return 0x6E65657267;
}

uint64_t sub_1A463B6C8()
{
  return 1702194274;
}

uint64_t sub_1A463B6D8()
{
  return 0x6168706C61;
}

uint64_t sub_1A463B6EC()
{
  return 0x617053726F6C6F63;
}

unint64_t sub_1A463B708()
{
  return 0xD000000000000013;
}

void sub_1A463B750(char *a1)
{
  sub_1A466BF5C(*a1);
}

void sub_1A463B75C()
{
  char *v0;

  sub_1A46375A8(0, *v0);
}

void sub_1A463B768(uint64_t a1)
{
  char *v1;

  sub_1A46373E4(a1, *v1);
}

void sub_1A463B770(uint64_t a1)
{
  char *v1;

  sub_1A46375A8(a1, *v1);
}

uint64_t sub_1A463B778@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A4647FC8();
  *a1 = result;
  return result;
}

uint64_t sub_1A463B7A4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A463B5C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A463B7CC()
{
  unsigned __int8 *v0;

  return sub_1A463B688(*v0);
}

uint64_t sub_1A463B7D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A4647FC8();
  *a1 = result;
  return result;
}

uint64_t sub_1A463B7F8()
{
  sub_1A4646464();
  return sub_1A4691DB8();
}

uint64_t sub_1A463B820()
{
  sub_1A4646464();
  return sub_1A4691DC4();
}

id REMColor_Codable.__allocating_init(red:green:blue:alpha:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithRed_green_blue_alpha_, a1, a2, a3, a4);
}

void REMColor_Codable.init(red:green:blue:alpha:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id REMColor_Codable.__allocating_init(red:green:blue:alpha:colorSpace:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;

  return objc_msgSend(objc_allocWithZone(v5), sel_initWithRed_green_blue_alpha_colorSpace_, a1, a2, a3, a4, a5);
}

void REMColor_Codable.init(red:green:blue:alpha:colorSpace:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id REMColor_Codable.__allocating_init(hexString:)(uint64_t a1, uint64_t a2)
{
  return sub_1A4640D14(a1, a2, (SEL *)&selRef_initWithHexString_);
}

void REMColor_Codable.init(hexString:)()
{
  sub_1A4640DA4();
}

id REMColor_Codable.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void REMColor_Codable.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id REMColor_Codable.__allocating_init(daSymbolicColorName:daHexString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A463BAE4(a1, a2, a3, a4, (SEL *)&selRef_initWithDASymbolicColorName_daHexString_);
}

void REMColor_Codable.init(daSymbolicColorName:daHexString:)()
{
  sub_1A463D4D4();
}

id REMColor_Codable.__allocating_init(ckSymbolicColorName:hexString:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A463BAE4(a1, a2, a3, a4, (SEL *)&selRef_initWithCKSymbolicColorName_hexString_);
}

id sub_1A463BAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  objc_class *v5;
  void *v8;
  void *v9;
  id v10;

  if (!a2)
  {
    v8 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v9 = 0;
    goto LABEL_6;
  }
  v8 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v9 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
LABEL_6:
  v10 = objc_msgSend(objc_allocWithZone(v5), *a5, v8, v9);

  return v10;
}

void REMColor_Codable.init(ckSymbolicColorName:hexString:)()
{
  sub_1A463D4D4();
}

_QWORD *sub_1A463BBD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMColor_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A463BC00(_QWORD *a1)
{
  return REMColor_Codable.encode(to:)(a1);
}

uint64_t REMColor.codable.getter()
{
  return sub_1A463BC34(type metadata accessor for REMColor_Codable, (uint64_t (*)(void *))REMColor_Codable.init(_:));
}

uint64_t sub_1A463BC34(uint64_t (*a1)(void), uint64_t (*a2)(void *))
{
  void *v2;
  id v4;

  v4 = objc_allocWithZone((Class)a1());
  return a2(v2);
}

id REMStructuredLocation_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMStructuredLocation_Codable.init(_:)(a1);
}

id REMStructuredLocation_Codable.init(_:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v30;
  id v31;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = objc_msgSend(a1, sel_title);
  v5 = objc_msgSend(a1, sel_locationUID);
  objc_msgSend(a1, sel_latitude);
  v7 = v6;
  objc_msgSend(a1, sel_longitude);
  v9 = v8;
  objc_msgSend(a1, sel_radius);
  v11 = v10;
  v12 = objc_msgSend(a1, sel_address);
  v13 = objc_msgSend(a1, sel_routing);
  v14 = objc_msgSend(a1, sel_referenceFrameString);
  v15 = objc_msgSend(a1, sel_contactLabel);
  v16 = objc_msgSend(a1, sel_mapKitHandle);
  if (v16)
  {
    v30 = v15;
    v31 = v14;
    v17 = v12;
    v18 = ObjectType;
    v19 = v4;
    v20 = sub_1A468FFC4();
    v21 = v13;
    v22 = v5;
    v23 = v1;
    v25 = v24;

    v16 = (id)sub_1A468FFAC();
    v26 = v20;
    v4 = v19;
    ObjectType = v18;
    v12 = v17;
    v27 = v25;
    v1 = v23;
    v5 = v22;
    v13 = v21;
    v15 = v30;
    v14 = v31;
    sub_1A44695EC(v26, v27);
  }
  v32.receiver = v1;
  v32.super_class = ObjectType;
  v28 = objc_msgSendSuper2(&v32, sel_initWithTitle_locationUID_latitude_longitude_radius_address_routing_referenceFrameString_contactLabel_mapKitHandle_, v4, v5, v12, v13, v14, v15, v7, v9, v11, v16);

  return v28;
}

id REMStructuredLocation_Codable.__allocating_init(title:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:)(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  objc_class *v17;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  unint64_t v31;
  void *v32;
  void *v33;
  id v34;

  if (a5)
  {
    v24 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    if (a7)
      goto LABEL_3;
  }
  else
  {
    v24 = 0;
    if (a7)
    {
LABEL_3:
      v25 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      if (a9)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  v25 = 0;
  if (a9)
  {
LABEL_4:
    v26 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v27 = a13;
    if (a11)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  v26 = 0;
  v27 = a13;
  if (a11)
  {
LABEL_5:
    v28 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v29 = a15;
    if (v27)
      goto LABEL_6;
LABEL_12:
    v30 = 0;
    v31 = a17;
    if (v29)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_11:
  v28 = 0;
  v29 = a15;
  if (!v27)
    goto LABEL_12;
LABEL_6:
  v30 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v31 = a17;
  if (v29)
  {
LABEL_7:
    v32 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_13:
  v32 = 0;
LABEL_14:
  if (v31 >> 60 == 15)
  {
    v33 = 0;
  }
  else
  {
    v33 = (void *)sub_1A468FFAC();
    sub_1A44D65D0(a16, v31);
  }
  v34 = objc_msgSend(objc_allocWithZone(v17), sel_initWithTitle_locationUID_latitude_longitude_radius_address_routing_referenceFrameString_contactLabel_mapKitHandle_, v24, v25, v26, v28, v30, v32, a1, a2, a3, v33);

  return v34;
}

id REMStructuredLocation_Codable.init(title:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:)(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17)
{
  void *v17;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  objc_class *ObjectType;
  objc_super v39;

  ObjectType = (objc_class *)swift_getObjectType();
  if (a5)
  {
    v25 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    if (a7)
      goto LABEL_3;
  }
  else
  {
    v25 = 0;
    if (a7)
    {
LABEL_3:
      v26 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      if (a9)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  v26 = 0;
  if (a9)
  {
LABEL_4:
    v27 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v28 = a13;
    if (a11)
      goto LABEL_5;
    goto LABEL_11;
  }
LABEL_10:
  v27 = 0;
  v28 = a13;
  if (a11)
  {
LABEL_5:
    v29 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v30 = a15;
    if (v28)
      goto LABEL_6;
LABEL_12:
    v31 = 0;
    v33 = a16;
    v32 = a17;
    if (v30)
      goto LABEL_7;
    goto LABEL_13;
  }
LABEL_11:
  v29 = 0;
  v30 = a15;
  if (!v28)
    goto LABEL_12;
LABEL_6:
  v31 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v33 = a16;
  v32 = a17;
  if (v30)
  {
LABEL_7:
    v34 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_13:
  v34 = 0;
LABEL_14:
  if (v32 >> 60 == 15)
  {
    v35 = 0;
  }
  else
  {
    sub_1A44695A8(v33, v32);
    v35 = (void *)sub_1A468FFAC();
    sub_1A44D65D0(v33, v32);
  }
  v39.receiver = v17;
  v39.super_class = ObjectType;
  v36 = objc_msgSendSuper2(&v39, sel_initWithTitle_locationUID_latitude_longitude_radius_address_routing_referenceFrameString_contactLabel_mapKitHandle_, v25, v26, v27, v29, v31, v34, a1, a2, a3, v35);
  sub_1A44D65D0(v33, v32);

  return v36;
}

objc_class *REMStructuredLocation_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  char v46;
  uint64_t v47;
  unint64_t v48;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46464C8();
  sub_1A4691D28();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_1A469174C();
    v10 = v9;
    LOBYTE(v47) = 1;
    v44 = (id)sub_1A469174C();
    v45 = v11;
    LOBYTE(v47) = 2;
    sub_1A46917A0();
    v13 = v12;
    LOBYTE(v47) = 3;
    sub_1A46917A0();
    v15 = v14;
    LOBYTE(v47) = 4;
    sub_1A46917A0();
    v17 = v16;
    LOBYTE(v47) = 5;
    v42 = sub_1A469174C();
    v43 = v19;
    LOBYTE(v47) = 6;
    v40 = sub_1A469174C();
    v41 = v20;
    LOBYTE(v47) = 7;
    v36 = sub_1A469174C();
    v39 = v21;
    LOBYTE(v47) = 8;
    v37 = sub_1A469174C();
    v38 = v22;
    v46 = 9;
    sub_1A464650C();
    sub_1A469177C();
    v34 = v47;
    v35 = v48;
    if (v10)
    {
      v33 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v33 = 0;
    }
    if (v45)
    {
      v32 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = 0;
    }
    if (v43)
    {
      v42 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v42 = 0;
    }
    if (v41)
    {
      v45 = (id)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v45 = 0;
    }
    if (v39)
    {
      v44 = (id)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v44 = 0;
    }
    if (v38)
    {
      v43 = (id)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v43 = 0;
    }
    if (v35 >> 60 == 15)
    {
      v23 = 0;
    }
    else
    {
      v25 = v34;
      v24 = v35;
      sub_1A44695A8(v34, v35);
      v23 = (void *)sub_1A468FFAC();
      sub_1A44D65D0(v25, v24);
    }
    v26 = objc_allocWithZone(v3);
    v41 = v23;
    v30 = v23;
    v28 = (void *)v32;
    v27 = (void *)v33;
    v29 = (void *)v42;
    v3 = (objc_class *)objc_msgSend(v26, sel_initWithTitle_locationUID_latitude_longitude_radius_address_routing_referenceFrameString_contactLabel_mapKitHandle_, v33, v32, v42, v45, v44, v43, v13, v15, v17, v30);

    sub_1A44D65D0(v34, v35);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

uint64_t REMStructuredLocation_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243A18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46464C8();
  sub_1A4691D40();
  v9 = objc_msgSend(v3, sel_title);
  if (v9)
  {
    v10 = v9;
    v11 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v48 = v11;
  v49 = v13;
  v50 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
  sub_1A45ADC58();
  sub_1A4691890();
  if (v2)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    v47 = v6;
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v3, sel_locationUID);
    if (v14)
    {
      v15 = v14;
      v16 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v18 = v17;

    }
    else
    {
      v16 = 0;
      v18 = 0;
    }
    v48 = v16;
    v49 = v18;
    v50 = 1;
    sub_1A4691890();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_latitude);
    LOBYTE(v48) = 2;
    sub_1A469186C();
    objc_msgSend(v3, sel_longitude);
    LOBYTE(v48) = 3;
    sub_1A469186C();
    objc_msgSend(v3, sel_radius);
    LOBYTE(v48) = 4;
    sub_1A469186C();
    v20 = objc_msgSend(v3, sel_address);
    if (v20)
    {
      v21 = v20;
      v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v48 = v22;
    v49 = v24;
    v50 = 5;
    sub_1A4691890();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend(v3, sel_routing);
    if (v25)
    {
      v26 = v25;
      v27 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v29 = v28;

    }
    else
    {
      v27 = 0;
      v29 = 0;
    }
    v48 = v27;
    v49 = v29;
    v50 = 6;
    sub_1A4691890();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v3, sel_referenceFrameString);
    if (v30)
    {
      v31 = v30;
      v32 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v34 = v33;

    }
    else
    {
      v32 = 0;
      v34 = 0;
    }
    v48 = v32;
    v49 = v34;
    v50 = 7;
    sub_1A4691890();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v3, sel_contactLabel);
    if (v35)
    {
      v36 = v35;
      v37 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v39 = v38;

    }
    else
    {
      v37 = 0;
      v39 = 0;
    }
    v48 = v37;
    v49 = v39;
    v50 = 8;
    sub_1A4691890();
    swift_bridgeObjectRelease();
    v40 = v47;
    v41 = objc_msgSend(v3, sel_mapKitHandle);
    if (v41)
    {
      v42 = v41;
      v43 = sub_1A468FFC4();
      v45 = v44;

    }
    else
    {
      v43 = 0;
      v45 = 0xF000000000000000;
    }
    v48 = v43;
    v49 = v45;
    v50 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2431A8);
    sub_1A4646550();
    sub_1A4691890();
    sub_1A44D65D0(v43, v45);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v8, v5);
  }
}

ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional __swiftcall REMStructuredLocation_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional __swiftcall REMStructuredLocation_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMStructuredLocation_Codable.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional __swiftcall REMStructuredLocation_Codable.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 10;
  return (ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional)intValue;
}

uint64_t REMStructuredLocation_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMStructuredLocation_Codable.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A463D00C + 4 * byte_1A46B34EF[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A463D00C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A463D02C()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1A463D044()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1A463D060()
{
  return 0x737569646172;
}

uint64_t sub_1A463D074()
{
  return 0x73736572646461;
}

uint64_t sub_1A463D08C()
{
  return 0x676E6974756F72;
}

unint64_t sub_1A463D0A4()
{
  return 0xD000000000000014;
}

uint64_t sub_1A463D0C0()
{
  return 0x4C746361746E6F63;
}

uint64_t sub_1A463D0E0()
{
  return 0x614874694B70616DLL;
}

uint64_t REMStructuredLocation_Codable.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A463D12C + 4 * byte_1A46B34F9[*v0]))(0x656C746974, 0xE500000000000000);
}

uint64_t sub_1A463D12C()
{
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1A463D14C()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1A463D164()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1A463D180()
{
  return 0x737569646172;
}

uint64_t sub_1A463D194()
{
  return 0x73736572646461;
}

uint64_t sub_1A463D1AC()
{
  return 0x676E6974756F72;
}

unint64_t sub_1A463D1C4()
{
  return 0xD000000000000014;
}

uint64_t sub_1A463D1E0()
{
  return 0x4C746361746E6F63;
}

uint64_t sub_1A463D200()
{
  return 0x614874694B70616DLL;
}

void sub_1A463D220(char *a1)
{
  sub_1A466A1DC(*a1);
}

uint64_t sub_1A463D22C(uint64_t a1, uint64_t a2)
{
  return sub_1A4644C40(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1A4636DB0);
}

void sub_1A463D238(uint64_t a1)
{
  char *v1;

  sub_1A4636DB0(a1, *v1);
}

uint64_t sub_1A463D240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4644C9C(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_1A4636DB0);
}

ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional sub_1A463D24C(Swift::String *a1)
{
  return REMStructuredLocation_Codable.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A463D258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMStructuredLocation_Codable.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional sub_1A463D280@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMStructuredLocation_Codable::CodingKeys_optional result;
  char v5;

  result.value = REMStructuredLocation_Codable.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A463D2B4()
{
  sub_1A46464C8();
  return sub_1A4691DB8();
}

uint64_t sub_1A463D2DC()
{
  sub_1A46464C8();
  return sub_1A4691DC4();
}

id REMStructuredLocation_Codable.__allocating_init(title:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithTitle_, v3);

  return v4;
}

void REMStructuredLocation_Codable.init(title:)()
{
  sub_1A4640DA4();
}

void REMStructuredLocation_Codable.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id REMStructuredLocation_Codable.__allocating_init(title:locationUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  void *v6;
  void *v7;
  id v8;

  if (!a2)
  {
    v6 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v7 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = objc_msgSend(objc_allocWithZone(v4), sel_initWithTitle_locationUID_, v6, v7);

  return v8;
}

void REMStructuredLocation_Codable.init(title:locationUID:)()
{
  sub_1A463D4D4();
}

void sub_1A463D4D4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

objc_class *sub_1A463D528@<X0>(_QWORD *a1@<X0>, objc_class **a2@<X8>)
{
  uint64_t v2;
  objc_class *result;

  result = REMStructuredLocation_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A463D550(_QWORD *a1)
{
  return REMStructuredLocation_Codable.encode(to:)(a1);
}

id REMStoreObjectsContainer.remStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t sub_1A463D578(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A463D5D4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A463D608(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A463D64C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_QWORD *REMStoreObjectsContainer.init(store:storages:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  v2[4] = sub_1A443CEF8(MEMORY[0x1E0DEE9D8]);
  return v2;
}

uint64_t sub_1A463D6B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A463D70C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A463D740(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A463D784())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1A463D7C0(void *a1)
{
}

void sub_1A463D7EC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;

  v4 = objc_msgSend(a1, sel_optionalObjectID);
  if (v4)
  {
    v5 = v4;
    swift_beginAccess();
    v6 = *(_QWORD *)(v1 + 24);
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = v5;
      swift_bridgeObjectRetain();
      v8 = sub_1A443E750((uint64_t)v7);
      if ((v9 & 1) != 0)
      {
        sub_1A44311F0(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v19);
      }
      else
      {
        v19 = 0u;
        v20 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v20 + 1))
      {

        sub_1A445404C((uint64_t)&v19, &qword_1ED243E68);
        return;
      }
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    sub_1A445404C((uint64_t)&v19, &qword_1ED243E68);
    v14 = objc_msgSend(a1, sel_account);
    sub_1A463D7C0(v14);
    if (v2)
    {

    }
    else
    {

      v15 = objc_msgSend(a1, sel_parentList);
      if (v15)
      {
        v16 = v15;
        sub_1A463D7EC();

      }
      v17 = v5;
      v18 = objc_msgSend(a1, sel_storage);
      *((_QWORD *)&v20 + 1) = sub_1A444AA40(0, &qword_1ED243E28);
      *(_QWORD *)&v19 = v18;
      swift_beginAccess();
      sub_1A459A004((uint64_t)&v19, v17);
      swift_endAccess();

    }
  }
  else
  {
    if (qword_1EE71C210 != -1)
      swift_once();
    v10 = sub_1A4690318();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE724118);
    v11 = sub_1A469030C();
    v12 = sub_1A4690FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      MEMORY[0x1A85A0114](v13, -1, -1);
    }

  }
}

void sub_1A463DA90(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  __int128 v21;
  __int128 v22;

  v4 = objc_msgSend(a1, sel_optionalObjectID);
  if (v4)
  {
    v5 = v4;
    swift_beginAccess();
    v6 = *(_QWORD *)(v1 + 24);
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = v5;
      swift_bridgeObjectRetain();
      v8 = sub_1A443E750((uint64_t)v7);
      if ((v9 & 1) != 0)
      {
        sub_1A44311F0(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v21);
      }
      else
      {
        v21 = 0u;
        v22 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v22 + 1))
      {

        sub_1A445404C((uint64_t)&v21, &qword_1ED243E68);
        return;
      }
    }
    else
    {
      v21 = 0u;
      v22 = 0u;
    }
    sub_1A445404C((uint64_t)&v21, &qword_1ED243E68);
    v14 = objc_msgSend(a1, sel_customContext);
    if (v14)
    {
      v15 = v14;
      v16 = objc_msgSend(v14, sel_account);

      if (v16)
      {
        sub_1A463D7C0(v16);
        if (v2)
        {
LABEL_21:

          return;
        }

      }
    }
    v17 = objc_msgSend(a1, sel_customContext);
    if (v17)
    {
      v18 = v17;
      v16 = objc_msgSend(v17, sel_parentList);

      if (v16)
      {
        sub_1A463D7EC(v16);
        if (v2)
          goto LABEL_21;

      }
    }
    v19 = v5;
    v20 = objc_msgSend(a1, sel_storage);
    *((_QWORD *)&v22 + 1) = sub_1A444AA40(0, &qword_1ED2439E8);
    *(_QWORD *)&v21 = v20;
    swift_beginAccess();
    sub_1A459A004((uint64_t)&v21, v19);
    swift_endAccess();

  }
  else
  {
    if (qword_1EE71C210 != -1)
      swift_once();
    v10 = sub_1A4690318();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE724118);
    v11 = sub_1A469030C();
    v12 = sub_1A4690FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      MEMORY[0x1A85A0114](v13, -1, -1);
    }

  }
}

void sub_1A463DD7C(void *a1)
{
}

void sub_1A463DDA8(void *a1, unint64_t *a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  id v19;
  __int128 v20;
  __int128 v21;

  v8 = objc_msgSend(a1, sel_optionalObjectID);
  if (v8)
  {
    v9 = v8;
    swift_beginAccess();
    v10 = *(_QWORD *)(v4 + 24);
    if (*(_QWORD *)(v10 + 16))
    {
      v11 = v9;
      swift_bridgeObjectRetain();
      v12 = sub_1A443E750((uint64_t)v11);
      if ((v13 & 1) != 0)
      {
        sub_1A44311F0(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v20);
      }
      else
      {
        v20 = 0u;
        v21 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v21 + 1))
      {

        sub_1A445404C((uint64_t)&v20, &qword_1ED243E68);
        return;
      }
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    sub_1A445404C((uint64_t)&v20, &qword_1ED243E68);
    v18 = v9;
    v19 = objc_msgSend(a1, sel_storage);
    *((_QWORD *)&v21 + 1) = sub_1A444AA40(0, a2);
    *(_QWORD *)&v20 = v19;
    swift_beginAccess();
    sub_1A459A004((uint64_t)&v20, v18);
    swift_endAccess();

  }
  else
  {
    if (qword_1EE71C210 != -1)
      swift_once();
    v14 = sub_1A4690318();
    __swift_project_value_buffer(v14, (uint64_t)qword_1EE724118);
    v15 = sub_1A469030C();
    v16 = sub_1A4690FFC();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1A442D000, v15, v16, a4, v17, 2u);
      MEMORY[0x1A85A0114](v17, -1, -1);
    }

  }
}

void sub_1A463DFD0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  __int128 v20;
  __int128 v21;

  v4 = objc_msgSend(a1, sel_optionalObjectID);
  if (v4)
  {
    v5 = v4;
    swift_beginAccess();
    v6 = *(_QWORD *)(v1 + 24);
    if (*(_QWORD *)(v6 + 16))
    {
      v7 = v5;
      swift_bridgeObjectRetain();
      v8 = sub_1A443E750((uint64_t)v7);
      if ((v9 & 1) != 0)
      {
        sub_1A44311F0(*(_QWORD *)(v6 + 56) + 32 * v8, (uint64_t)&v20);
      }
      else
      {
        v20 = 0u;
        v21 = 0u;
      }

      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v21 + 1))
      {

        sub_1A445404C((uint64_t)&v20, &qword_1ED243E68);
        return;
      }
    }
    else
    {
      v20 = 0u;
      v21 = 0u;
    }
    sub_1A445404C((uint64_t)&v20, &qword_1ED243E68);
    v14 = objc_msgSend(a1, sel_account);
    sub_1A463D7C0(v14);
    if (v2)
    {

    }
    else
    {

      v15 = objc_msgSend(a1, sel_list);
      sub_1A463D7EC(v15);

      v16 = objc_msgSend(a1, sel_parentReminder);
      if (v16)
      {
        v17 = v16;
        sub_1A463DFD0();

      }
      v18 = v5;
      v19 = objc_msgSend(a1, sel_storage);
      *((_QWORD *)&v21 + 1) = sub_1A444AA40(0, &qword_1ED243E48);
      *(_QWORD *)&v20 = v19;
      swift_beginAccess();
      sub_1A459A004((uint64_t)&v20, v18);
      swift_endAccess();

    }
  }
  else
  {
    if (qword_1EE71C210 != -1)
      swift_once();
    v10 = sub_1A4690318();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EE724118);
    v11 = sub_1A469030C();
    v12 = sub_1A4690FFC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      MEMORY[0x1A85A0114](v13, -1, -1);
    }

  }
}

uint64_t sub_1A463E2A8(void *a1)
{
  return sub_1A463E6E0(a1, &qword_1ED243E40, 0x1E0D84458, type metadata accessor for REMAccount_Codable);
}

id sub_1A463E2D4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  void *v15;

  v4 = (void *)sub_1A463E8B8(a1, &qword_1ED243E28);
  if (!v2)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_accountID);
    v8 = (void *)sub_1A463E8B8(v6, &qword_1ED243E40);
    v9 = *(void **)(v1 + 16);
    v10 = objc_allocWithZone((Class)type metadata accessor for REMAccount_Codable());
    v11 = v9;
    v12 = objc_msgSend(v10, sel_initWithStore_storage_, v11, v8);

    v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMList_Codable()), sel_initWithStore_account_storage_, v11, v12, v5);
    v13 = objc_msgSend(v5, sel_parentListID);
    if (v13)
    {
      v14 = v13;
      v3 = v3;
      v15 = (void *)sub_1A463E2D4(v14);
      objc_msgSend(v3, sel_setParentList_, v15);

    }
  }
  return v3;
}

void sub_1A463E458(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;

  v3 = (void *)sub_1A463E8B8(a1, &qword_1ED2439E8);
  if (!v2)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_smartListType);
    v6 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v8 = v7;
    if (v6 == _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0() && v8 == v9)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      v11 = sub_1A4691A40();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        v12 = *(void **)(v1 + 16);
        v13 = objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
        v14 = v12;
        objc_msgSend(v13, sel_initWithStore_storage_, v14, v4);

        return;
      }
    }
    v15 = objc_msgSend(v4, sel_accountID);
    v16 = (void *)sub_1A463E8B8(v15, &qword_1ED243E40);
    v17 = *(void **)(v1 + 16);
    v18 = objc_allocWithZone((Class)type metadata accessor for REMAccount_Codable());
    v19 = v17;
    v20 = objc_msgSend(v18, sel_initWithStore_storage_, v19, v16);

    v21 = objc_msgSend(v4, sel_parentListID);
    if (v21)
    {
      v22 = v21;
      v23 = sub_1A463E2D4(v21);

      v24 = v23;
    }
    else
    {
      v24 = 0;
    }
    v25 = objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
    v26 = v19;
    v27 = v20;
    objc_msgSend(v25, sel_initWithStore_account_parentList_storage_, v26, v27, v24, v4);

  }
}

uint64_t sub_1A463E6B4(void *a1)
{
  return sub_1A463E6E0(a1, &qword_1EE724130, 0x1E0D84728, type metadata accessor for REMTemplate_Codable);
}

uint64_t sub_1A463E6E0(void *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;

  result = sub_1A463E8B8(a1, a2);
  if (!v5)
  {
    v8 = (void *)result;
    v9 = *(void **)(v4 + 16);
    v10 = objc_allocWithZone((Class)a4());
    v11 = v9;
    v12 = objc_msgSend(v10, sel_initWithStore_storage_, v11, v8);

    return (uint64_t)v12;
  }
  return result;
}

id sub_1A463E760(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v13;

  v4 = (void *)sub_1A463E8B8(a1, &qword_1ED243E48);
  if (!v2)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_listID);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1A463E2D4(v6);
      v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMReminder_Codable()), sel_initWithStore_list_storage_, *(_QWORD *)(v1 + 16), v8, v5);

      v3 = v9;
    }
    else
    {
      v3 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for REMReminder_Codable()), sel_initWithStore_storage_, *(_QWORD *)(v1 + 16), v5);
    }
    v10 = objc_msgSend(v5, sel_parentReminderID);
    if (v10)
    {
      v11 = v10;
      v3 = v3;
      v13 = (void *)sub_1A463E760(v11);
      objc_msgSend(v3, sel_setParentReminder_, v13);

    }
  }
  return v3;
}

uint64_t sub_1A463E8B8(void *a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  unint64_t v6;
  char v7;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  sub_1A444AA40(0, a2);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v4 + 16))
  {
    v15 = 0u;
    v16 = 0u;
LABEL_9:
    sub_1A445404C((uint64_t)&v15, &qword_1ED243E68);
    v9 = (void *)objc_opt_self();
    *(_QWORD *)&v17 = 0;
    *((_QWORD *)&v17 + 1) = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    v10 = objc_msgSend(a1, sel_description);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691DD0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v11 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_internalErrorWithDebugDescription_, v11);

    return swift_willThrow();
  }
  v5 = a1;
  swift_bridgeObjectRetain();
  v6 = sub_1A443E750((uint64_t)v5);
  if ((v7 & 1) != 0)
  {
    sub_1A44311F0(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }

  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_9;
  sub_1A444A940(&v15, &v17);
  sub_1A44311F0((uint64_t)&v17, (uint64_t)&v15);
  if ((swift_dynamicCast() & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
    return v19;
  }
  else
  {
    v12 = (void *)objc_opt_self();
    *(_QWORD *)&v15 = 0;
    *((_QWORD *)&v15 + 1) = 0xE000000000000000;
    sub_1A4691410();
    sub_1A4690984();
    v13 = objc_msgSend(v5, sel_description);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    sub_1A4691DD0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    __swift_project_boxed_opaque_existential_1(&v17, v18);
    swift_getDynamicType();
    sub_1A4691DD0();
    sub_1A4690984();
    swift_bridgeObjectRelease();
    sub_1A4690984();
    v14 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_internalErrorWithDebugDescription_, v14);

    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  }
}

uint64_t REMStoreObjectsContainer.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t REMStoreObjectsContainer.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

id REMHashtagLabel.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v1 = (objc_class *)type metadata accessor for REMHashtagLabel_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v4 = objc_msgSend(v3, sel_name);
  if (!v4)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v4 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v7.receiver = v2;
  v7.super_class = v1;
  v5 = objc_msgSendSuper2(&v7, sel_initWithName_, v4);

  return v5;
}

id REMHashtagLabel_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend(a1, sel_name);
  if (!v4)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v4 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v7.receiver = v3;
  v7.super_class = v1;
  v5 = objc_msgSendSuper2(&v7, sel_initWithName_, v4);

  return v5;
}

id REMHashtagLabel_Codable.init(_:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = objc_msgSend(a1, sel_name);
  if (!v4)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v4 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithName_, v4);

  return v5;
}

id REMHashtagLabel_Codable.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  return sub_1A4640D14(a1, a2, (SEL *)&selRef_initWithName_);
}

id REMHashtagLabel_Codable.init(name:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithName_, v2);

  return v3;
}

_QWORD *REMHashtagLabel_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  id v11;
  void *v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724138);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646618();
  sub_1A4691D28();
  if (!v2)
  {
    sub_1A4691788();
    v11 = objc_allocWithZone(v3);
    v12 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v11, sel_initWithName_, v12);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t REMHashtagLabel_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v10;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724148);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646618();
  sub_1A4691D40();
  v8 = objc_msgSend(v2, sel_name);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  sub_1A4691854();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A463F254()
{
  return sub_1A4505150();
}

uint64_t sub_1A463F264()
{
  return sub_1A4690948();
}

uint64_t sub_1A463F274()
{
  return sub_1A45051D4();
}

uint64_t sub_1A463F284@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A463F290(_QWORD *a1@<X8>)
{
  *a1 = 1701667182;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1A463F2A4()
{
  return 1701667182;
}

uint64_t sub_1A463F2B4@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A463F2C0()
{
  sub_1A4646618();
  return sub_1A4691DB8();
}

uint64_t sub_1A463F2E8()
{
  sub_1A4646618();
  return sub_1A4691DC4();
}

void REMHashtagLabel_Codable.init(name:canonicalName:firstOccurrenceCreationDate:recencyDate:uuidForChangeTracking:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

_QWORD *sub_1A463F4FC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMHashtagLabel_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A463F524(_QWORD *a1)
{
  return REMHashtagLabel_Codable.encode(to:)(a1);
}

id REMHashtagLabelDetailed_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMHashtagLabelDetailed_Codable.init(_:)(a1);
}

id REMHashtagLabelDetailed_Codable.init(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  id v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  char *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *ObjectType;
  void *v35;
  objc_super v36;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1A46900FC();
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x1E0C80A78](v2);
  v30 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A46900B4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  v17 = objc_msgSend(a1, sel_name);
  if (!v17)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v17 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v31 = objc_msgSend(a1, sel_canonicalName);
  v18 = objc_msgSend(a1, sel_firstOccurrenceCreationDate);
  if (v18)
  {
    sub_1A4690084();

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v16, v10, v7);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v19(v16, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7) == 1)
    {
      v18 = 0;
    }
    else
    {
      v18 = (id)sub_1A4690030();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    }
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v19(v16, 1, 1, v7);
  }
  v20 = objc_msgSend(a1, sel_recencyDate);
  if (v20)
  {
    v21 = v20;
    sub_1A4690084();

    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v14, v10, v7);
    v19(v14, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
    {
      v22 = 0;
    }
    else
    {
      v22 = (void *)sub_1A4690030();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
    }
  }
  else
  {
    v19(v14, 1, 1, v7);
    v22 = 0;
  }
  v23 = objc_msgSend(a1, sel_uuidForChangeTracking);
  v25 = v32;
  v24 = v33;
  if (v23)
  {
    v26 = v30;
    sub_1A46900F0();

    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v6, v26, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v24);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24) == 1)
    {
      v23 = 0;
    }
    else
    {
      v23 = (id)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v6, 1, 1, v33);
  }
  v36.receiver = v35;
  v36.super_class = ObjectType;
  v27 = v31;
  v28 = objc_msgSendSuper2(&v36, sel_initWithName_canonicalName_firstOccurrenceCreationDate_recencyDate_uuidForChangeTracking_, v17, v31, v18, v22, v23);

  return v28;
}

id _s19ReminderKitInternal23REMHashtagLabel_CodableC4name13canonicalName27firstOccurrenceCreationDate07recencyM021uuidForChangeTrackingACSS_SSSg10Foundation0M0VSgAmJ4UUIDVSgtcfC_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  objc_class *v8;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;

  v8 = v7;
  v13 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v14 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = sub_1A46900B4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v18 = 0;
  if (v17(a5, 1, v15) != 1)
  {
    v18 = (void *)sub_1A4690030();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a5, v15);
  }
  if (v17(a6, 1, v15) == 1)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_1A4690030();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a6, v15);
  }
  v20 = sub_1A46900FC();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(a7, 1, v20) != 1)
  {
    v22 = (void *)sub_1A46900D8();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a7, v20);
  }
  v23 = objc_msgSend(objc_allocWithZone(v8), sel_initWithName_canonicalName_firstOccurrenceCreationDate_recencyDate_uuidForChangeTracking_, v13, v14, v18, v19, v22);

  return v23;
}

id REMHashtagLabelDetailed_Codable.init(name:canonicalName:firstOccurrenceCreationDate:recencyDate:uuidForChangeTracking:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v33;
  objc_class *ObjectType;
  uint64_t v35;
  uint64_t v36;
  objc_super v37;

  v8 = v7;
  v33 = a7;
  v36 = a6;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - v18;
  v20 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v21 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
  }
  v35 = a5;
  sub_1A444ABF4(a5, (uint64_t)v19, &qword_1ED243190);
  v22 = sub_1A46900B4();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v25 = 0;
  if (v24(v19, 1, v22) != 1)
  {
    v25 = (void *)sub_1A4690030();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v22);
  }
  sub_1A444ABF4(v36, (uint64_t)v17, &qword_1ED243190);
  if (v24(v17, 1, v22) == 1)
  {
    v26 = 0;
  }
  else
  {
    v26 = (void *)sub_1A4690030();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v22);
  }
  v27 = v33;
  sub_1A444ABF4(v33, (uint64_t)v13, &qword_1ED243170);
  v28 = sub_1A46900FC();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v13, 1, v28) != 1)
  {
    v30 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v28);
  }
  v37.receiver = v8;
  v37.super_class = ObjectType;
  v31 = objc_msgSendSuper2(&v37, sel_initWithName_canonicalName_firstOccurrenceCreationDate_recencyDate_uuidForChangeTracking_, v20, v21, v25, v26, v30, v33);

  sub_1A445404C(v27, &qword_1ED243170);
  sub_1A445404C(v36, &qword_1ED243190);
  sub_1A445404C(v35, &qword_1ED243190);
  return v31;
}

_QWORD *REMHashtagLabelDetailed_Codable.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  void *v41;
  id v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  Class v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  char *v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  v3 = MEMORY[0x1E0C80A78](v2);
  v53 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v56 = (uint64_t)&v45 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v7 = MEMORY[0x1E0C80A78](v6);
  v55 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v45 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v45 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v45 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724150);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v57 = a1;
  v22 = __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1A464665C();
  v23 = (uint64_t)v58;
  sub_1A4691D28();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  else
  {
    v52 = v11;
    v58 = v16;
    v24 = v18;
    v63 = 0;
    sub_1A4691788();
    v26 = v25;
    v62 = 1;
    v49 = sub_1A469174C();
    v50 = v27;
    v51 = v26;
    v28 = sub_1A46900B4();
    v61 = 2;
    sub_1A450C498((unint64_t *)&unk_1ED243010, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A469177C();
    v48 = v18;
    v60 = 3;
    sub_1A469177C();
    v47 = v14;
    v30 = sub_1A46900FC();
    v59 = 4;
    sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1A469177C();
    v48 = sub_1A469087C();
    swift_bridgeObjectRelease();
    v46 = v17;
    if (v50)
    {
      v51 = sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v51 = 0;
    }
    v31 = (uint64_t)v55;
    v32 = (uint64_t)v52;
    sub_1A444ABF4((uint64_t)v58, (uint64_t)v52, &qword_1ED243190);
    v33 = *(_QWORD *)(v28 - 8);
    v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v34(v32, 1, v28) == 1)
    {
      v55 = 0;
    }
    else
    {
      v55 = (char *)sub_1A4690030();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v28);
    }
    sub_1A444ABF4((uint64_t)v47, v31, &qword_1ED243190);
    if (v34(v31, 1, v28) == 1)
    {
      v35 = 0;
    }
    else
    {
      v36 = sub_1A4690030();
      v37 = v33;
      v35 = (void *)v36;
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v31, v28);
    }
    v38 = v53;
    sub_1A444ABF4(v56, v53, &qword_1ED243170);
    v39 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v30) == 1)
    {
      v40 = 0;
    }
    else
    {
      v40 = (void *)sub_1A46900D8();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v30);
    }
    v41 = (void *)v48;
    v42 = objc_allocWithZone(v54);
    v43 = (void *)v51;
    v44 = v55;
    v22 = objc_msgSend(v42, sel_initWithName_canonicalName_firstOccurrenceCreationDate_recencyDate_uuidForChangeTracking_, v41, v51, v55, v35, v40);

    sub_1A445404C(v56, &qword_1ED243170);
    sub_1A445404C((uint64_t)v47, &qword_1ED243190);
    sub_1A445404C((uint64_t)v58, &qword_1ED243190);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  return v22;
}

uint64_t REMHashtagLabelDetailed_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  unint64_t v16;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  v2 = v1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v48);
  v46 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243190);
  v5 = MEMORY[0x1E0C80A78](v47);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724160);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A464665C();
  sub_1A4691D40();
  v49 = v2;
  v14 = objc_msgSend(v2, sel_name);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  LOBYTE(v51) = 0;
  v15 = v13;
  v16 = v50;
  sub_1A4691854();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v44 = v7;
    v45 = v9;
    v50 = 0;
    v18 = v11;
    swift_bridgeObjectRelease();
    v19 = v49;
    v20 = objc_msgSend(v49, sel_canonicalName);
    if (v20)
    {
      v21 = v20;
      v22 = _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v25 = v10;
    v26 = v50;
    v51 = v22;
    v52 = v24;
    v53 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2439C0);
    sub_1A45ADC58();
    sub_1A4691890();
    if (v26)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v27 = objc_msgSend(v19, sel_firstOccurrenceCreationDate);
      if (v27)
      {
        v28 = v27;
        v29 = (uint64_t)v45;
        sub_1A4690084();

        v30 = sub_1A46900B4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 0, 1, v30);
      }
      else
      {
        v31 = sub_1A46900B4();
        v29 = (uint64_t)v45;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v45, 1, 1, v31);
      }
      LOBYTE(v51) = 2;
      v32 = sub_1A449CC30();
      sub_1A4691890();
      sub_1A445404C(v29, &qword_1ED243190);
      v50 = v32;
      v33 = objc_msgSend(v19, sel_recencyDate);
      if (v33)
      {
        v34 = v33;
        v35 = (uint64_t)v44;
        sub_1A4690084();

        v36 = sub_1A46900B4();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
      }
      else
      {
        v37 = sub_1A46900B4();
        v35 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v44, 1, 1, v37);
      }
      LOBYTE(v51) = 3;
      sub_1A4691890();
      sub_1A445404C(v35, &qword_1ED243190);
      v38 = objc_msgSend(v19, sel_uuidForChangeTracking);
      if (v38)
      {
        v39 = v38;
        v40 = (uint64_t)v46;
        sub_1A46900F0();

        v41 = sub_1A46900FC();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
      }
      else
      {
        v42 = sub_1A46900FC();
        v40 = (uint64_t)v46;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v46, 1, 1, v42);
      }
      LOBYTE(v51) = 4;
      sub_1A46466A0();
      sub_1A4691890();
      sub_1A445404C(v40, &qword_1ED243170);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v15, v25);
  }
}

uint64_t sub_1A4640ABC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4640AE8 + 4 * byte_1A46B3503[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1A4640AE8()
{
  return 0x6163696E6F6E6163;
}

unint64_t sub_1A4640B0C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1A4640B2C()
{
  return 0x4479636E65636572;
}

unint64_t sub_1A4640B4C()
{
  return 0xD000000000000015;
}

uint64_t sub_1A4640B68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A4640B94 + 4 * byte_1A46B3508[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1A4640B94()
{
  return 0x6163696E6F6E6163;
}

unint64_t sub_1A4640BB8()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1A4640BD8()
{
  return 0x4479636E65636572;
}

unint64_t sub_1A4640BF8()
{
  return 0xD000000000000015;
}

void sub_1A4640C14(char *a1)
{
  sub_1A46697C4(*a1);
}

void sub_1A4640C20()
{
  char *v0;

  sub_1A46363CC(*v0);
}

void sub_1A4640C28(uint64_t a1)
{
  char *v1;

  sub_1A46369F4(a1, *v1);
}

void sub_1A4640C30(uint64_t a1)
{
  char *v1;

  sub_1A4638134(a1, *v1);
}

uint64_t sub_1A4640C38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A4648010();
  *a1 = result;
  return result;
}

uint64_t sub_1A4640C64@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1A4640ABC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1A4640C8C()
{
  unsigned __int8 *v0;

  return sub_1A4640B68(*v0);
}

uint64_t sub_1A4640C94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A4648010();
  *a1 = result;
  return result;
}

uint64_t sub_1A4640CB8()
{
  sub_1A464665C();
  return sub_1A4691DB8();
}

uint64_t sub_1A4640CE0()
{
  sub_1A464665C();
  return sub_1A4691DC4();
}

id REMHashtagLabelDetailed_Codable.__allocating_init(name:)(uint64_t a1, uint64_t a2)
{
  return sub_1A4640D14(a1, a2, (SEL *)&selRef_initWithName_);
}

id sub_1A4640D14(uint64_t a1, uint64_t a2, SEL *a3)
{
  objc_class *v3;
  id v5;
  void *v6;
  id v7;

  v5 = objc_allocWithZone(v3);
  v6 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v5, *a3, v6);

  return v7;
}

void REMHashtagLabelDetailed_Codable.init(name:)()
{
  sub_1A4640DA4();
}

void sub_1A4640DA4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

_QWORD *sub_1A4640DF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMHashtagLabelDetailed_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4640E20(_QWORD *a1)
{
  return REMHashtagLabelDetailed_Codable.encode(to:)(a1);
}

id REMTemplateConfiguration.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v1 = (objc_class *)type metadata accessor for REMTemplateConfiguration_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v4 = objc_msgSend(v3, sel_sourceListID);
  v7.receiver = v2;
  v7.super_class = v1;
  v5 = objc_msgSendSuper2(&v7, sel_initWithSourceListID_shouldSaveCompleted_, v4, objc_msgSend(v3, sel_shouldSaveCompleted));

  return v5;
}

id REMTemplateConfiguration_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  id v5;
  objc_super v7;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend(a1, sel_sourceListID);
  v7.receiver = v3;
  v7.super_class = v1;
  v5 = objc_msgSendSuper2(&v7, sel_initWithSourceListID_shouldSaveCompleted_, v4, objc_msgSend(a1, sel_shouldSaveCompleted));

  return v5;
}

id REMTemplateConfiguration_Codable.init(_:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = objc_msgSend(a1, sel_sourceListID);
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithSourceListID_shouldSaveCompleted_, v4, objc_msgSend(a1, sel_shouldSaveCompleted));

  return v5;
}

id REMTemplateConfiguration_Codable.__allocating_init(sourceListID:shouldSaveCompleted:)(void *a1, char a2)
{
  objc_class *v2;
  id v4;

  v4 = objc_msgSend(objc_allocWithZone(v2), sel_initWithSourceListID_shouldSaveCompleted_, a1, a2 & 1);

  return v4;
}

id REMTemplateConfiguration_Codable.init(sourceListID:shouldSaveCompleted:)(void *a1, char a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)swift_getObjectType();
  v5 = objc_msgSendSuper2(&v7, sel_initWithSourceListID_shouldSaveCompleted_, a1, a2 & 1);

  return v5;
}

_QWORD *REMTemplateConfiguration_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  _BYTE v13[16];
  void *v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724170);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646740();
  sub_1A4691D28();
  if (!v2)
  {
    type metadata accessor for REMObjectID_Codable();
    v13[15] = 0;
    sub_1A450C498(&qword_1ED243F80, v10, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
    sub_1A46917C4();
    v11 = v14;
    v13[14] = 1;
    v9 = objc_msgSend(objc_allocWithZone(v3), sel_initWithSourceListID_shouldSaveCompleted_, v14, sub_1A4691794() & 1);

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t REMTemplateConfiguration_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  objc_class *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  id v22[2];
  uint64_t v23;
  char v24;
  objc_super v25;
  id v26;

  v2 = v1;
  v4 = sub_1A46900FC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724180);
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646740();
  sub_1A4691D40();
  v22[0] = v2;
  v11 = objc_msgSend(v2, sel_sourceListID);
  v12 = (objc_class *)type metadata accessor for REMObjectID_Codable();
  v13 = objc_allocWithZone(v12);
  v14 = v11;
  v15 = objc_msgSend(v14, sel_uuid);
  sub_1A46900F0();

  v16 = (void *)sub_1A46900D8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v17 = objc_msgSend(v14, sel_entityName);
  if (!v17)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v17 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v25.receiver = v13;
  v25.super_class = v12;
  v18 = objc_msgSendSuper2(&v25, sel_initWithUUID_entityName_, v16, v17);

  v26 = v18;
  v24 = 0;
  sub_1A450C498(&qword_1ED243370, v19, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  v20 = v22[1];
  sub_1A4691890();

  if (!v20)
  {
    objc_msgSend(v22[0], sel_shouldSaveCompleted);
    LOBYTE(v26) = 1;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v10, v8);
}

ReminderKitInternal::REMTemplateConfiguration_Codable::CodingKeys_optional __swiftcall REMTemplateConfiguration_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ReminderKitInternal::REMTemplateConfiguration_Codable::CodingKeys_optional)sub_1A45BC060(v1);
}

ReminderKitInternal::REMTemplateConfiguration_Codable::CodingKeys_optional __swiftcall REMTemplateConfiguration_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  char *v1;

  return (ReminderKitInternal::REMTemplateConfiguration_Codable::CodingKeys_optional)sub_1A45BC0C8(v1);
}

uint64_t REMTemplateConfiguration_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMTemplateConfiguration_Codable.CodingKeys.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x694C656372756F73;
}

uint64_t REMTemplateConfiguration_Codable.CodingKeys.stringValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x694C656372756F73;
}

uint64_t sub_1A46415E8(char *a1, char *a2)
{
  return sub_1A46693A4(*a1, *a2);
}

uint64_t sub_1A46415F4()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4641680()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A46416E8()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

ReminderKitInternal::REMTemplateConfiguration_Codable::CodingKeys_optional sub_1A4641770(Swift::String *a1)
{
  return REMTemplateConfiguration_Codable.CodingKeys.init(rawValue:)(*a1);
}

void sub_1A464177C(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x694C656372756F73;
  if (*v1)
    v2 = 0xD000000000000013;
  v3 = 0x80000001A46BCD80;
  if (!*v1)
    v3 = 0xEC00000044497473;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A46417C8()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000013;
  else
    return 0x694C656372756F73;
}

uint64_t sub_1A4641814()
{
  sub_1A4646740();
  return sub_1A4691DB8();
}

uint64_t sub_1A464183C()
{
  sub_1A4646740();
  return sub_1A4691DC4();
}

_QWORD *sub_1A4641868@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMTemplateConfiguration_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4641890(_QWORD *a1)
{
  return REMTemplateConfiguration_Codable.encode(to:)(a1);
}

id REMTemplatePublicLinkConfiguration.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  objc_super v6;

  v1 = (objc_class *)type metadata accessor for REMTemplatePublicLinkConfiguration_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v6.receiver = v2;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_initWithShouldIncludeHashtags_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle_, objc_msgSend(v3, sel_shouldIncludeHashtags), objc_msgSend(v3, sel_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval), objc_msgSend(v3, sel_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle));

  return v4;
}

id REMTemplatePublicLinkConfiguration_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  objc_super v5;

  v5.receiver = objc_allocWithZone(v1);
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_initWithShouldIncludeHashtags_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle_, objc_msgSend(a1, sel_shouldIncludeHashtags), objc_msgSend(a1, sel_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval), objc_msgSend(a1, sel_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle));

  return v3;
}

id REMTemplatePublicLinkConfiguration_Codable.init(_:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithShouldIncludeHashtags_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle_, objc_msgSend(a1, sel_shouldIncludeHashtags), objc_msgSend(a1, sel_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval), objc_msgSend(a1, sel_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle));

  return v3;
}

uint64_t static REMTemplatePublicLinkConfiguration_Codable.supportsSecureCoding.getter()
{
  return 1;
}

id REMTemplatePublicLinkConfiguration_Codable.__allocating_init(shouldIncludeHashtags:shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval:shouldIncludeAlarmTriggersBasedOnLocationOrVehicle:)(char a1, char a2, char a3)
{
  objc_class *v3;

  return objc_msgSend(objc_allocWithZone(v3), sel_initWithShouldIncludeHashtags_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle_, a1 & 1, a2 & 1, a3 & 1);
}

id REMTemplatePublicLinkConfiguration_Codable.init(shouldIncludeHashtags:shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval:shouldIncludeAlarmTriggersBasedOnLocationOrVehicle:)(char a1, char a2, char a3)
{
  void *v3;
  objc_super v8;

  v8.receiver = v3;
  v8.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v8, sel_initWithShouldIncludeHashtags_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle_, a1 & 1, a2 & 1, a3 & 1);
}

_QWORD *REMTemplatePublicLinkConfiguration_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  char v10;
  char v11;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724188);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46467A4();
  sub_1A4691D28();
  if (!v2)
  {
    v16 = 0;
    v10 = sub_1A4691794();
    v15 = 1;
    v11 = sub_1A4691794();
    v14 = 2;
    v9 = objc_msgSend(objc_allocWithZone(v3), sel_initWithShouldIncludeHashtags_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle_, v10 & 1, v11 & 1, sub_1A4691794() & 1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t REMTemplatePublicLinkConfiguration_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE724198);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46467A4();
  sub_1A4691D40();
  objc_msgSend(v3, sel_shouldIncludeHashtags);
  v10[15] = 0;
  sub_1A4691860();
  if (!v2)
  {
    objc_msgSend(v3, sel_shouldIncludeAlarmTriggersBasedOnDateOrTimeInterval);
    v10[14] = 1;
    sub_1A4691860();
    objc_msgSend(v3, sel_shouldIncludeAlarmTriggersBasedOnLocationOrVehicle);
    v10[13] = 2;
    sub_1A4691860();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional __swiftcall REMTemplatePublicLinkConfiguration_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional __swiftcall REMTemplatePublicLinkConfiguration_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMTemplatePublicLinkConfiguration_Codable.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional __swiftcall REMTemplatePublicLinkConfiguration_Codable.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 3;
  return (ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional)intValue;
}

uint64_t REMTemplatePublicLinkConfiguration_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t REMTemplatePublicLinkConfiguration_Codable.CodingKeys.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000033;
  if (*v0 != 1)
    v1 = 0xD000000000000032;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

unint64_t REMTemplatePublicLinkConfiguration_Codable.CodingKeys.stringValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000033;
  if (*v0 != 1)
    v1 = 0xD000000000000032;
  if (*v0)
    return v1;
  else
    return 0xD000000000000015;
}

uint64_t sub_1A4642018(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A4668854(*a1, *a2);
}

uint64_t sub_1A4642024()
{
  return sub_1A46364BC();
}

uint64_t sub_1A464202C()
{
  return sub_1A4636564();
}

uint64_t sub_1A4642034()
{
  return sub_1A4638440();
}

ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional sub_1A464203C(Swift::String *a1)
{
  return REMTemplatePublicLinkConfiguration_Codable.CodingKeys.init(rawValue:)(*a1);
}

unint64_t sub_1A4642048@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = REMTemplatePublicLinkConfiguration_Codable.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional sub_1A4642070@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMTemplatePublicLinkConfiguration_Codable::CodingKeys_optional result;
  char v5;

  result.value = REMTemplatePublicLinkConfiguration_Codable.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

uint64_t sub_1A46420A4()
{
  sub_1A46467A4();
  return sub_1A4691DB8();
}

uint64_t sub_1A46420CC()
{
  sub_1A46467A4();
  return sub_1A4691DC4();
}

_QWORD *sub_1A46420F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMTemplatePublicLinkConfiguration_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4642120(_QWORD *a1)
{
  return REMTemplatePublicLinkConfiguration_Codable.encode(to:)(a1);
}

id REMFetchResultToken_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  objc_super v8;

  v3 = objc_allocWithZone(v1);
  v4 = objc_msgSend(a1, sel_persistentHistoryTokens);
  sub_1A444AA40(0, &qword_1ED2402E0);
  sub_1A4690708();

  v5 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v8.receiver = v3;
  v8.super_class = v1;
  v6 = objc_msgSendSuper2(&v8, sel_initWithPersistentHistoryTokens_, v5);

  return v6;
}

uint64_t type metadata accessor for REMFetchResultToken_Codable()
{
  return objc_opt_self();
}

id REMFetchResultToken_Codable.init(_:)(void *a1)
{
  void *v1;
  objc_class *ObjectType;
  id v4;
  void *v5;
  id v6;
  objc_super v8;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = objc_msgSend(a1, sel_persistentHistoryTokens);
  sub_1A444AA40(0, &qword_1ED2402E0);
  sub_1A4690708();

  v5 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v8.receiver = v1;
  v8.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v8, sel_initWithPersistentHistoryTokens_, v5);

  return v6;
}

uint64_t type metadata accessor for REMSmartList_Codable()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMObjectID_Codable()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMList_Codable()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMStructuredLocation_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A46423C8()
{
  unint64_t result;

  result = qword_1ED243F68;
  if (!qword_1ED243F68)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMObjectID_Codable.CodingKeys, &type metadata for REMObjectID_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243F68);
  }
  return result;
}

char *keypath_get_selector_entityName()
{
  return sel_entityName;
}

char *keypath_get_selector_uuid()
{
  return sel_uuid;
}

uint64_t type metadata accessor for REMAccount_Codable()
{
  return objc_opt_self();
}

id REMFetchResultToken_Codable.__allocating_init(persistentHistoryTokens:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1A444AA40(0, &qword_1ED2402E0);
  v2 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithPersistentHistoryTokens_, v2);

  return v3;
}

id REMFetchResultToken_Codable.init(persistentHistoryTokens:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1A444AA40(0, &qword_1ED2402E0);
  v2 = (void *)sub_1A46906F0();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithPersistentHistoryTokens_, v2);

  return v3;
}

uint64_t static REMFetchResultToken_Codable.supportsSecureCoding.getter()
{
  return 1;
}

id REMFetchResultToken_Codable.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1A46468B0(a1);
}

uint64_t REMFetchResultToken_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  id v16[3];

  v2 = v1;
  v16[2] = *(id *)MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED241130);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646B34();
  sub_1A4691D40();
  v16[0] = 0;
  v8 = objc_msgSend(v2, sel_dataRepresentationWithError_, v16);
  v9 = v16[0];
  if (v8)
  {
    v10 = (void *)sub_1A468FFC4();
    v12 = v11;

    v16[0] = v10;
    v16[1] = v12;
    sub_1A46465B4();
    sub_1A4691890();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1A44695EC((uint64_t)v10, (unint64_t)v12);
  }
  else
  {
    v14 = v9;
    sub_1A468FE68();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_1A4642808()
{
  return sub_1A4505150();
}

uint64_t sub_1A4642818()
{
  return sub_1A4690948();
}

uint64_t sub_1A4642828()
{
  return sub_1A45051D4();
}

uint64_t sub_1A4642838@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A4642844(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1A4642858()
{
  return 1635017060;
}

uint64_t sub_1A4642868@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A4642874()
{
  sub_1A4646B34();
  return sub_1A4691DB8();
}

uint64_t sub_1A464289C()
{
  sub_1A4646B34();
  return sub_1A4691DC4();
}

id sub_1A46428C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1A46468B0(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A46428F0(_QWORD *a1)
{
  return REMFetchResultToken_Codable.encode(to:)(a1);
}

id REMDueDateDeltaInterval_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;
  objc_super v5;

  v5.receiver = objc_allocWithZone(v1);
  v5.super_class = v1;
  v3 = objc_msgSendSuper2(&v5, sel_initWithUnit_count_, objc_msgSend(a1, sel_unit), objc_msgSend(a1, sel_count));

  return v3;
}

id REMDueDateDeltaInterval_Codable.init(_:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)swift_getObjectType();
  v3 = objc_msgSendSuper2(&v5, sel_initWithUnit_count_, objc_msgSend(a1, sel_unit), objc_msgSend(a1, sel_count));

  return v3;
}

id REMDueDateDeltaInterval_Codable.__allocating_init(unit:count:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;

  return objc_msgSend(objc_allocWithZone(v2), sel_initWithUnit_count_, a1, a2);
}

id REMDueDateDeltaInterval_Codable.init(unit:count:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  objc_super v6;

  v6.receiver = v2;
  v6.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v6, sel_initWithUnit_count_, a1, a2);
}

id sub_1A4642AB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  objc_super v9;

  v9.receiver = a1;
  v9.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v9, *a5, a3, a4);
}

uint64_t static REMDueDateDeltaInterval_Codable.supportsSecureCoding.getter()
{
  return 1;
}

_QWORD *REMDueDateDeltaInterval_Codable.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  uint64_t v2;
  objc_class *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7241A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646B78();
  sub_1A4691D28();
  if (!v2)
  {
    v14 = 0;
    v10 = sub_1A46917AC();
    v13 = 1;
    v9 = objc_msgSend(objc_allocWithZone(v3), sel_initWithUnit_count_, v10, sub_1A46917AC());
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

uint64_t REMDueDateDeltaInterval_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7241B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646B78();
  sub_1A4691D40();
  objc_msgSend(v3, sel_unit);
  v10[15] = 0;
  sub_1A4691878();
  if (!v2)
  {
    objc_msgSend(v3, sel_count);
    v10[14] = 1;
    sub_1A4691878();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A4642DC0(char *a1, char *a2)
{
  return sub_1A4669984(*a1, *a2);
}

uint64_t sub_1A4642DCC()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4642E40()
{
  sub_1A4690948();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A4642E90()
{
  sub_1A4691C8C();
  sub_1A4690948();
  swift_bridgeObjectRelease();
  return sub_1A4691CC8();
}

uint64_t sub_1A4642F00@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A4642F5C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1953066613;
  if (*v1)
    v2 = 0x746E756F63;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1A4642F90()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E756F63;
  else
    return 1953066613;
}

uint64_t sub_1A4642FC0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A469171C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1A4643020()
{
  sub_1A4646B78();
  return sub_1A4691DB8();
}

uint64_t sub_1A4643048()
{
  sub_1A4646B78();
  return sub_1A4691DC4();
}

id REMDueDateDeltaInterval_Codable.__allocating_init(unitInteger:count:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;

  return objc_msgSend(objc_allocWithZone(v2), sel_initWithUnitInteger_count_, a1, a2);
}

void REMDueDateDeltaInterval_Codable.init(unitInteger:count:)()
{
  sub_1A4640DA4();
}

void REMDueDateDeltaInterval_Codable.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

_QWORD *sub_1A464315C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMDueDateDeltaInterval_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4643184(_QWORD *a1)
{
  return REMDueDateDeltaInterval_Codable.encode(to:)(a1);
}

id REMDueDateDeltaInterval.codable.getter()
{
  void *v0;
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  objc_super v6;

  v1 = (objc_class *)type metadata accessor for REMDueDateDeltaInterval_Codable();
  v2 = objc_allocWithZone(v1);
  v3 = v0;
  v6.receiver = v2;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_initWithUnit_count_, objc_msgSend(v3, sel_unit), objc_msgSend(v3, sel_count));

  return v4;
}

uint64_t sub_1A464322C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2440E0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A46915B4();
  __swift_allocate_value_buffer(v3, qword_1ED243F48);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED243F48);
  sub_1A46915A8();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t static CodingUserInfoKey.remStoragesContainer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED244118 != -1)
    swift_once();
  v2 = sub_1A46915B4();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED243F48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1A464337C()
{
  return sub_1A4505150();
}

uint64_t sub_1A464339C()
{
  return sub_1A4690948();
}

uint64_t sub_1A46433BC()
{
  return sub_1A45051D4();
}

uint64_t sub_1A46433DC@<X0>(BOOL *a1@<X8>)
{
  return sub_1A4505228(a1);
}

void sub_1A46433E8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "objectIDUUID");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1A464340C()
{
  return 0x44497463656A626FLL;
}

uint64_t sub_1A464342C@<X0>(BOOL *a1@<X8>)
{
  return sub_1A45052BC(a1);
}

uint64_t sub_1A4643438()
{
  sub_1A46453B4();
  return sub_1A4691DB8();
}

uint64_t sub_1A4643460()
{
  sub_1A46453B4();
  return sub_1A4691DC4();
}

id REMSharedEntitySyncActivity_Codable.__allocating_init(_:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return REMSharedEntitySyncActivity_Codable.init(_:)(a1);
}

id REMSharedEntitySyncActivity_Codable.init(_:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  objc_class *ObjectType;
  void *v30;
  objc_super v31;

  ObjectType = (objc_class *)swift_getObjectType();
  v28 = sub_1A46900FC();
  v2 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A46900B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(a1, sel_accountIdentifier);
  if (!v12)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v12 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v13 = objc_msgSend(a1, sel_activityDate);
  sub_1A4690084();

  v27 = sub_1A4690030();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v26 = objc_msgSend(a1, sel_activityType);
  v14 = objc_msgSend(a1, sel_authorUserRecordIDString);
  if (!v14)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v14 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v25 = objc_msgSend(a1, sel_ckParentCloudObjectEntityName);
  v15 = objc_msgSend(a1, sel_ckParentCloudObjectIdentifier);
  v16 = objc_msgSend(a1, sel_ckIdentifier);
  if (!v16)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v16 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v17 = objc_msgSend(a1, sel_sharedEntityName);
  if (!v17)
  {
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();
    v17 = (id)sub_1A469087C();
    swift_bridgeObjectRelease();
  }
  v18 = objc_msgSend(a1, sel_uuidForChangeTracking);
  if (v18)
  {
    sub_1A46900F0();

    v19 = v4;
    v20 = v28;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v19, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v2 + 56))(v7, 0, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v20) == 1)
    {
      v18 = 0;
    }
    else
    {
      v18 = (id)sub_1A46900D8();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v20);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v7, 1, 1, v28);
  }
  v31.receiver = v30;
  v31.super_class = ObjectType;
  v21 = (void *)v27;
  v22 = v25;
  v23 = objc_msgSendSuper2(&v31, sel_initWithAccountIdentifier_activityDate_activityType_authorUserRecordIDString_ckParentCloudObjectEntityName_ckParentCloudObjectIdentifier_ckIdentifier_sharedEntityName_uuidForChangeTracking_, v12, v27, v26, v14, v25, v15, v16, v17, v18);

  return v23;
}

id REMSharedEntitySyncActivity_Codable.__allocating_init(accountIdentifier:activityDate:activityType:authorUserRecordIDString:ckParentCloudObjectEntityName:ckParentCloudObjectIdentifier:ckIdentifier:sharedEntityName:uuidForChangeTracking:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  objc_class *v29;
  void *v30;
  uint64_t v32;

  v30 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v32 = a3;
  v17 = (void *)sub_1A4690030();
  v18 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (a8)
  {
    v19 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    if (a10)
    {
LABEL_3:
      v20 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v19 = 0;
    if (a10)
      goto LABEL_3;
  }
  v20 = 0;
LABEL_6:
  v21 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v22 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v23 = sub_1A46900FC();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(a15, 1, v23) != 1)
  {
    v25 = (void *)sub_1A46900D8();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a15, v23);
  }
  v26 = objc_msgSend(objc_allocWithZone(v29), sel_initWithAccountIdentifier_activityDate_activityType_authorUserRecordIDString_ckParentCloudObjectEntityName_ckParentCloudObjectIdentifier_ckIdentifier_sharedEntityName_uuidForChangeTracking_, v30, v17, a4, v18, v19, v20, v21, v22, v25);

  v27 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v32, v27);
  return v26;
}

id REMSharedEntitySyncActivity_Codable.init(accountIdentifier:activityDate:activityType:authorUserRecordIDString:ckParentCloudObjectEntityName:ckParentCloudObjectIdentifier:ckIdentifier:sharedEntityName:uuidForChangeTracking:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  void *v15;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  objc_class *ObjectType;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  objc_super v43;

  v40 = a4;
  v41 = a15;
  v35[2] = a13;
  v35[0] = a7;
  v35[1] = a11;
  v39 = v15;
  ObjectType = (objc_class *)swift_getObjectType();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1A469087C();
  swift_bridgeObjectRelease();
  v42 = a3;
  v36 = sub_1A4690030();
  v21 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  if (a8)
  {
    v22 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    v23 = v41;
    if (a10)
    {
LABEL_3:
      v24 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    v22 = 0;
    v23 = v41;
    if (a10)
      goto LABEL_3;
  }
  v24 = 0;
LABEL_6:
  v25 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  v26 = (void *)sub_1A469087C();
  swift_bridgeObjectRelease();
  sub_1A444ABF4(v23, (uint64_t)v20, &qword_1ED243170);
  v27 = sub_1A46900FC();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v20, 1, v27) != 1)
  {
    v29 = (void *)sub_1A46900D8();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v20, v27);
  }
  v43.receiver = v39;
  v43.super_class = ObjectType;
  v31 = (void *)v36;
  v30 = (void *)v37;
  v32 = objc_msgSendSuper2(&v43, sel_initWithAccountIdentifier_activityDate_activityType_authorUserRecordIDString_ckParentCloudObjectEntityName_ckParentCloudObjectIdentifier_ckIdentifier_sharedEntityName_uuidForChangeTracking_, v37, v36, v40, v21, v22, v24, v25, v26, v29);

  sub_1A445404C(v23, &qword_1ED243170);
  v33 = sub_1A46900B4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v42, v33);
  return v32;
}

uint64_t static REMSharedEntitySyncActivity_Codable.supportsSecureCoding.getter()
{
  return 1;
}

_QWORD *REMSharedEntitySyncActivity_Codable.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  objc_class *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  objc_class *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  Class v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v2 = sub_1A46900FC();
  v52 = *(_QWORD *)(v2 - 8);
  v53 = v2;
  MEMORY[0x1E0C80A78](v2);
  v54 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A46900B4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7241B8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a1[3];
  v56 = a1;
  v13 = __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1A4646BDC();
  v14 = v55;
  sub_1A4691D28();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    v49 = v5;
    v50 = v7;
    v55 = v4;
    v15 = v9;
    v65 = 0;
    v16 = v11;
    v48 = sub_1A4691788();
    v64 = 1;
    sub_1A450C498((unint64_t *)&unk_1ED243010, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A46917C4();
    v63 = 2;
    v47 = sub_1A46917AC();
    v62 = 3;
    v45 = (id)sub_1A4691788();
    v46 = v18;
    v61 = 4;
    v19 = sub_1A469174C();
    v21 = v20;
    v44 = v19;
    v60 = 5;
    v42 = sub_1A469174C();
    v43 = v22;
    v59 = 6;
    v40 = sub_1A4691788();
    v41 = v23;
    v58 = 7;
    v38 = sub_1A4691788();
    v39 = v24;
    v57 = 8;
    sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1A46917C4();
    v36 = v16;
    v37 = v8;
    v48 = sub_1A469087C();
    swift_bridgeObjectRelease();
    v35 = sub_1A4690030();
    v25 = (void *)sub_1A469087C();
    swift_bridgeObjectRelease();
    if (v21)
    {
      v26 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v26 = 0;
    }
    if (v43)
    {
      v27 = (void *)sub_1A469087C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = 0;
    }
    v45 = objc_allocWithZone(v51);
    v28 = (void *)sub_1A469087C();
    v46 = v28;
    swift_bridgeObjectRelease();
    v29 = (objc_class *)sub_1A469087C();
    v51 = v29;
    swift_bridgeObjectRelease();
    v30 = (void *)sub_1A46900D8();
    v34 = v29;
    v33 = v28;
    v31 = (void *)v48;
    v32 = (void *)v35;
    v13 = objc_msgSend(v45, sel_initWithAccountIdentifier_activityDate_activityType_authorUserRecordIDString_ckParentCloudObjectEntityName_ckParentCloudObjectIdentifier_ckIdentifier_sharedEntityName_uuidForChangeTracking_, v48, v35, v47, v25, v26, v27, v33, v34, v30);

    (*(void (**)(char *, uint64_t))(v52 + 8))(v54, v53);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v55);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v36, v37);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  return v13;
}

uint64_t REMSharedEntitySyncActivity_Codable.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  char *v13;
  char *v14;
  uint64_t v16;
  id v17;
  id v18;
  char *v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  char *v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;
  char v48;

  v2 = v1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243170);
  MEMORY[0x1E0C80A78](v35);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1A46900B4();
  v6 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7241C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646BDC();
  sub_1A4691D40();
  v38 = v2;
  v12 = objc_msgSend(v2, sel_accountIdentifier, v35);
  _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

  v48 = 0;
  v13 = v11;
  v14 = v39;
  sub_1A4691854();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = v9;
    v39 = v5;
    swift_bridgeObjectRelease();
    v17 = v38;
    v18 = objc_msgSend(v38, sel_activityDate);
    v19 = v36;
    sub_1A4690084();

    v47 = 1;
    sub_1A450C498(&qword_1ED243168, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    v20 = v37;
    sub_1A4691890();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v20);
    objc_msgSend(v17, sel_activityType);
    v46 = 2;
    sub_1A4691878();
    v21 = objc_msgSend(v17, sel_authorUserRecordIDString);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    v45 = 3;
    sub_1A4691854();
    v22 = v13;
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v17, sel_ckParentCloudObjectEntityName);
    if (v23)
    {
      v24 = v23;
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    }
    v44 = 4;
    sub_1A4691818();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend(v38, sel_ckParentCloudObjectIdentifier);
    if (v25)
    {
      v26 = v25;
      _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    }
    v43 = 5;
    sub_1A4691818();
    swift_bridgeObjectRelease();
    v27 = v38;
    v28 = objc_msgSend(v38, sel_ckIdentifier);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    v42 = 6;
    sub_1A4691854();
    swift_bridgeObjectRelease();
    v29 = objc_msgSend(v27, sel_sharedEntityName);
    _sSo15REMSortingStylea19ReminderKitInternalE11descriptionSSvg_0();

    v41 = 7;
    sub_1A4691854();
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v27, sel_uuidForChangeTracking);
    if (v30)
    {
      v31 = v30;
      v32 = (uint64_t)v39;
      sub_1A46900F0();

      v33 = sub_1A46900FC();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
    }
    else
    {
      v34 = sub_1A46900FC();
      v32 = (uint64_t)v39;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v39, 1, 1, v34);
    }
    v40 = 8;
    sub_1A46466A0();
    sub_1A4691890();
    sub_1A445404C(v32, &qword_1ED243170);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, v8);
  }
}

ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional __swiftcall REMSharedEntitySyncActivity_Codable.CodingKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A469171C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional __swiftcall REMSharedEntitySyncActivity_Codable.CodingKeys.init(stringValue:)(Swift::String stringValue)
{
  _BYTE *v1;
  _BYTE *v2;
  ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional result;
  char v4;

  v2 = v1;
  result.value = REMSharedEntitySyncActivity_Codable.CodingKeys.init(rawValue:)(stringValue).value;
  *v2 = v4;
  return result;
}

ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional __swiftcall REMSharedEntitySyncActivity_Codable.CodingKeys.init(intValue:)(Swift::Int intValue)
{
  _BYTE *v1;

  *v1 = 9;
  return (ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional)intValue;
}

uint64_t REMSharedEntitySyncActivity_Codable.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t REMSharedEntitySyncActivity_Codable.CodingKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A4644A98 + 4 * byte_1A46B350D[*v0]))(0xD000000000000011, 0x80000001A46BCE50);
}

uint64_t sub_1A4644A98()
{
  return 0x7974697669746361;
}

uint64_t sub_1A4644AC4@<X0>(uint64_t a1@<X8>)
{
  return a1 - 5;
}

uint64_t REMSharedEntitySyncActivity_Codable.CodingKeys.stringValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A4644B7C + 4 * byte_1A46B3516[*v0]))(0xD000000000000011, 0x80000001A46BCE50);
}

uint64_t sub_1A4644B7C()
{
  return 0x7974697669746361;
}

uint64_t sub_1A4644BA8@<X0>(uint64_t a1@<X8>)
{
  return a1 - 5;
}

void sub_1A4644C28(char *a1)
{
  sub_1A4668F78(*a1);
}

uint64_t sub_1A4644C34(uint64_t a1, uint64_t a2)
{
  return sub_1A4644C40(a1, a2, (void (*)(_BYTE *, uint64_t))sub_1A46366CC);
}

uint64_t sub_1A4644C40(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;
  _BYTE v7[72];

  v5 = *v3;
  sub_1A4691C8C();
  a3(v7, v5);
  return sub_1A4691CC8();
}

void sub_1A4644C88(uint64_t a1)
{
  char *v1;

  sub_1A46366CC(a1, *v1);
}

uint64_t sub_1A4644C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1A4644C9C(a1, a2, a3, (void (*)(_BYTE *, uint64_t))sub_1A46366CC);
}

uint64_t sub_1A4644C9C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;
  _BYTE v8[72];

  v6 = *v4;
  sub_1A4691C8C();
  a4(v8, v6);
  return sub_1A4691CC8();
}

ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional sub_1A4644CE0(Swift::String *a1)
{
  return REMSharedEntitySyncActivity_Codable.CodingKeys.init(rawValue:)(*a1);
}

uint64_t sub_1A4644CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = REMSharedEntitySyncActivity_Codable.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional sub_1A4644D14@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  ReminderKitInternal::REMSharedEntitySyncActivity_Codable::CodingKeys_optional result;
  char v5;

  result.value = REMSharedEntitySyncActivity_Codable.CodingKeys.init(rawValue:)(*(Swift::String *)&a1).value;
  *a2 = v5;
  return result;
}

void sub_1A4644D48(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1A4644D54()
{
  sub_1A4646BDC();
  return sub_1A4691DB8();
}

uint64_t sub_1A4644D7C()
{
  sub_1A4646BDC();
  return sub_1A4691DC4();
}

_QWORD *sub_1A4644DA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = REMSharedEntitySyncActivity_Codable.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A4644DD0(_QWORD *a1)
{
  return REMSharedEntitySyncActivity_Codable.encode(to:)(a1);
}

char *sub_1A4644DF0(_QWORD *a1)
{
  uint64_t v2;
  void (**v3)(char *, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (**v25)(char *, uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v30;
  objc_class *v31;
  id v32;
  id v33;
  id v34;
  void (**v35)(char *, uint64_t, uint64_t);
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (**v45)(char *, uint64_t, uint64_t);
  char *v46;
  char *v47;
  _QWORD *v48;
  objc_super v49;
  __int128 v50;
  uint64_t v51;
  _OWORD v52[2];
  _OWORD v53[3];

  v2 = sub_1A46915B4();
  v3 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  v44 = v2;
  v45 = v3;
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E58);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46453B4();
  v12 = v48;
  sub_1A4691D28();
  if (v12)
    goto LABEL_14;
  v42 = v6;
  v43 = v9;
  v48 = a1;
  sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v13 = v47;
  sub_1A46917C4();
  v41 = v5;
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1A46900D8();
  v16 = objc_msgSend(v14, sel_objectIDWithUUID_, v15);

  v17 = v48;
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  v18 = sub_1A4691D1C();
  if (qword_1ED244118 != -1)
    swift_once();
  v19 = v44;
  v20 = __swift_project_value_buffer(v44, (uint64_t)qword_1ED243F48);
  v21 = (uint64_t)v46;
  v45[2](v46, v20, v19);
  v22 = *(_QWORD *)(v18 + 16);
  v40 = v8;
  if (v22 && (v23 = sub_1A443E79C(v21), (v24 & 1) != 0))
    sub_1A44311F0(*(_QWORD *)(v18 + 56) + 32 * v23, (uint64_t)v53);
  else
    memset(v53, 0, 32);
  v25 = v45;
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v25[1])(v46, v19);
  sub_1A444ABF4((uint64_t)v53, (uint64_t)&v50, &qword_1ED243E68);
  if (!v51)
  {
    sub_1A445404C((uint64_t)&v50, &qword_1ED243E68);
    sub_1A459AC74((uint64_t)v53, 0, 0);
    swift_willThrow();
LABEL_13:

    v27 = v43;
    v28 = v42;
    sub_1A445404C((uint64_t)v53, &qword_1ED243E68);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v41);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v40);
    a1 = v48;
LABEL_14:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  sub_1A444A940(&v50, v52);
  sub_1A44311F0((uint64_t)v52, (uint64_t)&v50);
  type metadata accessor for REMStoreObjectsContainer();
  if (!swift_dynamicCast())
  {
    sub_1A44311F0((uint64_t)v52, (uint64_t)&v50);
    sub_1A459AC74((uint64_t)&v50, 0, 0);
    sub_1A445404C((uint64_t)&v50, &qword_1ED243E68);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    goto LABEL_13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  sub_1A445404C((uint64_t)v53, &qword_1ED243E68);
  v26 = v16;
  v30 = sub_1A463E2D4(v16);
  v31 = (objc_class *)type metadata accessor for REMList_Codable();
  v46 = (char *)objc_allocWithZone(v31);
  v32 = v30;
  v45 = (void (**)(char *, uint64_t, uint64_t))objc_msgSend(v32, sel_store);
  v33 = objc_msgSend(v32, sel_account);
  v34 = objc_msgSend(v32, sel_storage);
  v49.receiver = v46;
  v49.super_class = v31;
  v35 = v45;
  v36 = objc_msgSendSuper2(&v49, sel_initWithStore_account_storage_, v45, v33, v34);
  v46 = v11;
  v37 = v36;

  v11 = v37;
  v38 = objc_msgSend(v32, sel_parentList);
  objc_msgSend(v11, sel_setParentList_, v38);

  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v41);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v11;
}

uint64_t type metadata accessor for REMStoreObjectsContainer()
{
  return objc_opt_self();
}

unint64_t sub_1A46453B4()
{
  unint64_t result;

  result = qword_1ED243DE0;
  if (!qword_1ED243DE0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4C34, &type metadata for REMObjectCodingKey);
    atomic_store(result, (unint64_t *)&qword_1ED243DE0);
  }
  return result;
}

char *sub_1A46453F8(_QWORD *a1)
{
  uint64_t v2;
  void (**v3)(char *, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (**v25)(char *, uint64_t, uint64_t);
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v30;
  objc_class *v31;
  id v32;
  id v33;
  id v34;
  void (**v35)(char *, uint64_t, uint64_t);
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (**v45)(char *, uint64_t, uint64_t);
  char *v46;
  char *v47;
  _QWORD *v48;
  objc_super v49;
  __int128 v50;
  uint64_t v51;
  _OWORD v52[2];
  _OWORD v53[3];

  v2 = sub_1A46915B4();
  v3 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  v44 = v2;
  v45 = v3;
  MEMORY[0x1E0C80A78](v2);
  v46 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A46900FC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E58);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46453B4();
  v12 = v48;
  sub_1A4691D28();
  if (v12)
    goto LABEL_14;
  v42 = v6;
  v43 = v9;
  v48 = a1;
  sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v13 = v47;
  sub_1A46917C4();
  v41 = v5;
  v14 = (void *)objc_opt_self();
  v15 = (void *)sub_1A46900D8();
  v16 = objc_msgSend(v14, sel_objectIDWithUUID_, v15);

  v17 = v48;
  __swift_project_boxed_opaque_existential_1(v48, v48[3]);
  v18 = sub_1A4691D1C();
  if (qword_1ED244118 != -1)
    swift_once();
  v19 = v44;
  v20 = __swift_project_value_buffer(v44, (uint64_t)qword_1ED243F48);
  v21 = (uint64_t)v46;
  v45[2](v46, v20, v19);
  v22 = *(_QWORD *)(v18 + 16);
  v40 = v8;
  if (v22 && (v23 = sub_1A443E79C(v21), (v24 & 1) != 0))
    sub_1A44311F0(*(_QWORD *)(v18 + 56) + 32 * v23, (uint64_t)v53);
  else
    memset(v53, 0, 32);
  v25 = v45;
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v25[1])(v46, v19);
  sub_1A444ABF4((uint64_t)v53, (uint64_t)&v50, &qword_1ED243E68);
  if (!v51)
  {
    sub_1A445404C((uint64_t)&v50, &qword_1ED243E68);
    sub_1A459AC74((uint64_t)v53, 0, 0);
    swift_willThrow();
LABEL_13:

    v27 = v43;
    v28 = v42;
    sub_1A445404C((uint64_t)v53, &qword_1ED243E68);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v41);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v40);
    a1 = v48;
LABEL_14:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  sub_1A444A940(&v50, v52);
  sub_1A44311F0((uint64_t)v52, (uint64_t)&v50);
  type metadata accessor for REMStoreObjectsContainer();
  if (!swift_dynamicCast())
  {
    sub_1A44311F0((uint64_t)v52, (uint64_t)&v50);
    sub_1A459AC74((uint64_t)&v50, 0, 0);
    sub_1A445404C((uint64_t)&v50, &qword_1ED243E68);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
    goto LABEL_13;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  sub_1A445404C((uint64_t)v53, &qword_1ED243E68);
  v26 = v16;
  v30 = sub_1A463E760(v16);
  v31 = (objc_class *)type metadata accessor for REMReminder_Codable();
  v46 = (char *)objc_allocWithZone(v31);
  v32 = v30;
  v45 = (void (**)(char *, uint64_t, uint64_t))objc_msgSend(v32, sel_store);
  v33 = objc_msgSend(v32, sel_list);
  v34 = objc_msgSend(v32, sel_storage);
  v49.receiver = v46;
  v49.super_class = v31;
  v35 = v45;
  v36 = objc_msgSendSuper2(&v49, sel_initWithStore_list_storage_, v45, v33, v34);
  v46 = v11;
  v37 = v36;

  v11 = v37;
  v38 = objc_msgSend(v32, sel_parentReminder);
  objc_msgSend(v11, sel_setParentReminder_, v38);

  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v41);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v11;
}

uint64_t sub_1A464599C(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  char *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  objc_class *v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  unint64_t *v46;
  uint64_t v47;
  char *v48;
  objc_class *v49;
  uint64_t v50;
  id v51;
  char *v52;
  uint64_t v53;
  objc_super v54;
  __int128 v55;
  uint64_t v56;
  _OWORD v57[2];
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v45 = a5;
  v47 = a4;
  v46 = a3;
  v51 = a2;
  v6 = sub_1A46915B4();
  v49 = *(objc_class **)(v6 - 8);
  v50 = v6;
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1A46900FC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E58);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46453B4();
  v15 = v53;
  sub_1A4691D28();
  if (v15)
    goto LABEL_15;
  v44 = v9;
  v16 = a1;
  v53 = v12;
  sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v17 = v52;
  sub_1A46917C4();
  v43 = v11;
  v18 = (void *)objc_opt_self();
  v19 = (void *)sub_1A46900D8();
  v51 = objc_msgSend(v18, sel_objectIDWithUUID_, v19);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v20 = sub_1A4691D1C();
  if (qword_1ED244118 != -1)
    swift_once();
  v21 = v50;
  v22 = __swift_project_value_buffer(v50, (uint64_t)qword_1ED243F48);
  v23 = (uint64_t)v48;
  (*((void (**)(char *, uint64_t, uint64_t))v49 + 2))(v48, v22, v21);
  v11 = v8;
  if (*(_QWORD *)(v20 + 16))
  {
    v24 = sub_1A443E79C(v23);
    if ((v25 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(v20 + 56) + 32 * v24, (uint64_t)&v58);
    }
    else
    {
      v58 = 0u;
      v59 = 0u;
    }
  }
  else
  {
    v58 = 0u;
    v59 = 0u;
  }
  swift_bridgeObjectRelease();
  (*((void (**)(char *, uint64_t))v49 + 1))(v48, v50);
  sub_1A444ABF4((uint64_t)&v58, (uint64_t)&v55, &qword_1ED243E68);
  if (!v56)
  {
    sub_1A445404C((uint64_t)&v55, &qword_1ED243E68);
    sub_1A459AC74((uint64_t)&v58, 0, 0);
    swift_willThrow();
LABEL_14:

    v27 = v53;
    v28 = v44;
    sub_1A445404C((uint64_t)&v58, &qword_1ED243E68);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v17, v8);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v43);
    a1 = v16;
LABEL_15:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v11;
  }
  sub_1A444A940(&v55, v57);
  sub_1A44311F0((uint64_t)v57, (uint64_t)&v55);
  type metadata accessor for REMStoreObjectsContainer();
  if (!swift_dynamicCast())
  {
    sub_1A44311F0((uint64_t)v57, (uint64_t)&v55);
    sub_1A459AC74((uint64_t)&v55, 0, 0);
    sub_1A445404C((uint64_t)&v55, &qword_1ED243E68);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    goto LABEL_14;
  }
  v26 = v60;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  sub_1A445404C((uint64_t)&v58, &qword_1ED243E68);
  v30 = (void *)sub_1A463E8B8(v51, v46);
  v31 = *(void **)(v26 + 16);
  v49 = (objc_class *)v45();
  v32 = objc_allocWithZone(v49);
  v50 = v11;
  v33 = v32;
  v34 = v31;
  v35 = objc_msgSend(v33, sel_initWithStore_storage_, v34, v30);

  v36 = v49;
  v37 = objc_allocWithZone(v49);
  v38 = v35;
  v39 = objc_msgSend(v38, sel_store);
  v40 = v14;
  v41 = objc_msgSend(v38, sel_storage);
  v54.receiver = v37;
  v54.super_class = v36;
  v11 = (uint64_t)objc_msgSendSuper2(&v54, sel_initWithStore_storage_, v39, v41);

  swift_release();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v52, v50);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v43);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v11;
}

void (**sub_1A4645F58(_QWORD *a1))(char *, uint64_t)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(_QWORD, _QWORD);
  uint64_t v8;
  char *v9;
  void (**v10)(char *, uint64_t);
  void (**v11)(_QWORD, _QWORD);
  char *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  void (**v39)(_QWORD, _QWORD);
  __int128 v40;
  uint64_t v41;
  _OWORD v42[2];
  __int128 v43;
  __int128 v44;

  v35 = sub_1A46915B4();
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A46900FC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED243E58);
  v7 = *(void (***)(_QWORD, _QWORD))(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void (**)(char *, uint64_t))__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A46453B4();
  v11 = v39;
  sub_1A4691D28();
  if (v11)
    goto LABEL_15;
  v34 = v4;
  v39 = v7;
  sub_1A450C498(&qword_1ED243F60, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v12 = v38;
  sub_1A46917C4();
  v32 = v9;
  v33 = v3;
  v13 = (void *)objc_opt_self();
  v14 = (void *)sub_1A46900D8();
  v15 = objc_msgSend(v13, sel_objectIDWithUUID_, v14);

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1A4691D1C();
  if (qword_1ED244118 != -1)
    swift_once();
  v17 = v35;
  v18 = __swift_project_value_buffer(v35, (uint64_t)qword_1ED243F48);
  v19 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v36, v18, v17);
  v20 = *(_QWORD *)(v16 + 16);
  v31 = v6;
  v21 = v15;
  if (v20)
  {
    v22 = sub_1A443E79C(v19);
    v23 = v34;
    if ((v24 & 1) != 0)
    {
      sub_1A44311F0(*(_QWORD *)(v16 + 56) + 32 * v22, (uint64_t)&v43);
    }
    else
    {
      v43 = 0u;
      v44 = 0u;
    }
  }
  else
  {
    v43 = 0u;
    v44 = 0u;
    v23 = v34;
  }
  v25 = v35;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v25);
  sub_1A444ABF4((uint64_t)&v43, (uint64_t)&v40, &qword_1ED243E68);
  if (!v41)
  {
    sub_1A445404C((uint64_t)&v40, &qword_1ED243E68);
    sub_1A459AC74((uint64_t)&v43, 0, 0);
    swift_willThrow();
LABEL_14:

    v10 = (void (**)(char *, uint64_t))v39;
    sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v33);
    v10[1](v32, v31);
LABEL_15:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v10;
  }
  sub_1A444A940(&v40, v42);
  sub_1A44311F0((uint64_t)v42, (uint64_t)&v40);
  type metadata accessor for REMStoreObjectsContainer();
  if (!swift_dynamicCast())
  {
    sub_1A44311F0((uint64_t)v42, (uint64_t)&v40);
    sub_1A459AC74((uint64_t)&v40, 0, 0);
    sub_1A445404C((uint64_t)&v40, &qword_1ED243E68);
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    goto LABEL_14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  sub_1A445404C((uint64_t)&v43, &qword_1ED243E68);
  sub_1A463E458(v21);
  v28 = v27;
  objc_allocWithZone((Class)type metadata accessor for REMSmartList_Codable());
  v29 = v28;
  v10 = (void (**)(char *, uint64_t))REMSmartList_Codable.init(_:)(v29);

  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v33);
  ((void (**)(char *, uint64_t))v39)[1](v32, v31);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v10;
}

uint64_t type metadata accessor for REMTemplate_Codable()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for REMReminder_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A4646464()
{
  unint64_t result;

  result = qword_1ED243DC8;
  if (!qword_1ED243DC8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4BE4, &type metadata for REMColor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243DC8);
  }
  return result;
}

uint64_t type metadata accessor for REMColor_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A46464C8()
{
  unint64_t result;

  result = qword_1ED2436D0;
  if (!qword_1ED2436D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStructuredLocation_Codable.CodingKeys, &type metadata for REMStructuredLocation_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2436D0);
  }
  return result;
}

unint64_t sub_1A464650C()
{
  unint64_t result;

  result = qword_1ED243CF0;
  if (!qword_1ED243CF0)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED243CF0);
  }
  return result;
}

unint64_t sub_1A4646550()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED2431B0;
  if (!qword_1ED2431B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2431A8);
    v2 = sub_1A46465B4();
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED2431B0);
  }
  return result;
}

unint64_t sub_1A46465B4()
{
  unint64_t result;

  result = qword_1ED243CE8;
  if (!qword_1ED243CE8)
  {
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED243CE8);
  }
  return result;
}

uint64_t type metadata accessor for REMHashtagLabel_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A4646618()
{
  unint64_t result;

  result = qword_1EE724140;
  if (!qword_1EE724140)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4B94, &type metadata for REMHashtagLabel_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724140);
  }
  return result;
}

unint64_t sub_1A464665C()
{
  unint64_t result;

  result = qword_1EE724158;
  if (!qword_1EE724158)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4B44, &type metadata for REMHashtagLabelDetailed_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724158);
  }
  return result;
}

unint64_t sub_1A46466A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EE724168;
  if (!qword_1EE724168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED243170);
    v2 = sub_1A450C498(&qword_1ED243D00, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EE724168);
  }
  return result;
}

uint64_t type metadata accessor for REMTemplateConfiguration_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A4646740()
{
  unint64_t result;

  result = qword_1EE724178;
  if (!qword_1EE724178)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplateConfiguration_Codable.CodingKeys, &type metadata for REMTemplateConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724178);
  }
  return result;
}

uint64_t type metadata accessor for REMTemplatePublicLinkConfiguration_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A46467A4()
{
  unint64_t result;

  result = qword_1EE724190;
  if (!qword_1EE724190)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplatePublicLinkConfiguration_Codable.CodingKeys, &type metadata for REMTemplatePublicLinkConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724190);
  }
  return result;
}

id sub_1A46467E8()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = (void *)sub_1A468FFAC();
  v5[0] = 0;
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fetchResultTokenFromDataRepresentation_error_, v0, v5);

  if (v1)
  {
    v2 = v5[0];
  }
  else
  {
    v3 = v5[0];
    sub_1A468FE68();

    swift_willThrow();
  }
  return v1;
}

id sub_1A46468B0(_QWORD *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  objc_super v19;
  uint64_t v20;
  unint64_t v21;
  Class v22;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2402E8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A4646B34();
  sub_1A4691D28();
  if (!v1)
  {
    sub_1A464650C();
    sub_1A46917C4();
    v8 = v20;
    v9 = v21;
    sub_1A444AA40(0, &qword_1ED241128);
    sub_1A44695A8(v8, v9);
    v10 = sub_1A46467E8();
    sub_1A44695EC(v8, v9);
    v22 = (Class)type metadata accessor for REMFetchResultToken_Codable();
    v12 = objc_allocWithZone(v22);
    v17 = v10;
    v18 = v12;
    v16 = objc_msgSend(v10, sel_persistentHistoryTokens);
    sub_1A444AA40(0, &qword_1ED2402E0);
    sub_1A4690708();

    v13 = sub_1A46906F0();
    swift_bridgeObjectRelease();
    v19.receiver = v18;
    v19.super_class = v22;
    v14 = (void *)v13;
    v2 = objc_msgSendSuper2(&v19, sel_initWithPersistentHistoryTokens_, v13);

    sub_1A44695EC(v8, v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

unint64_t sub_1A4646B34()
{
  unint64_t result;

  result = qword_1ED2402C8;
  if (!qword_1ED2402C8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4AF4, &type metadata for REMFetchResultToken_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2402C8);
  }
  return result;
}

unint64_t sub_1A4646B78()
{
  unint64_t result;

  result = qword_1EE7241A8;
  if (!qword_1EE7241A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4AA4, &type metadata for REMDueDateDeltaInterval_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7241A8);
  }
  return result;
}

uint64_t type metadata accessor for REMDueDateDeltaInterval_Codable()
{
  return objc_opt_self();
}

unint64_t sub_1A4646BDC()
{
  unint64_t result;

  result = qword_1EE7241C0;
  if (!qword_1EE7241C0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSharedEntitySyncActivity_Codable.CodingKeys, &type metadata for REMSharedEntitySyncActivity_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7241C0);
  }
  return result;
}

unint64_t sub_1A4646C24()
{
  unint64_t result;

  result = qword_1EE7241D0;
  if (!qword_1EE7241D0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMObjectID_Codable.CodingKeys, &type metadata for REMObjectID_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7241D0);
  }
  return result;
}

unint64_t sub_1A4646C6C()
{
  unint64_t result;

  result = qword_1ED243F78;
  if (!qword_1ED243F78)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMObjectID_Codable.CodingKeys, &type metadata for REMObjectID_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243F78);
  }
  return result;
}

unint64_t sub_1A4646CB4()
{
  unint64_t result;

  result = qword_1ED243F70;
  if (!qword_1ED243F70)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMObjectID_Codable.CodingKeys, &type metadata for REMObjectID_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243F70);
  }
  return result;
}

unint64_t sub_1A4646CF8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A4646D24();
  result = sub_1A46423C8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A4646D24()
{
  unint64_t result;

  result = qword_1EE7241D8;
  if (!qword_1EE7241D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMObjectID_Codable.CodingKeys, &type metadata for REMObjectID_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7241D8);
  }
  return result;
}

unint64_t sub_1A4646D6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7241E0;
  if (!qword_1EE7241E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7241E8);
    result = MEMORY[0x1A85A0000](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7241E0);
  }
  return result;
}

uint64_t sub_1A4646DC0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1A450C498(&qword_1ED243F80, a2, (uint64_t (*)(uint64_t))type metadata accessor for REMObjectID_Codable, (uint64_t)&protocol conformance descriptor for REMObjectID_Codable);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A4646E00()
{
  unint64_t result;

  result = qword_1EE724228;
  if (!qword_1EE724228)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStructuredLocation_Codable.CodingKeys, &type metadata for REMStructuredLocation_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724228);
  }
  return result;
}

unint64_t sub_1A4646E48()
{
  unint64_t result;

  result = qword_1ED2436E0;
  if (!qword_1ED2436E0)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStructuredLocation_Codable.CodingKeys, &type metadata for REMStructuredLocation_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2436E0);
  }
  return result;
}

unint64_t sub_1A4646E90()
{
  unint64_t result;

  result = qword_1ED2436D8;
  if (!qword_1ED2436D8)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMStructuredLocation_Codable.CodingKeys, &type metadata for REMStructuredLocation_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2436D8);
  }
  return result;
}

unint64_t sub_1A4646ED8()
{
  unint64_t result;

  result = qword_1EE724230;
  if (!qword_1EE724230)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplateConfiguration_Codable.CodingKeys, &type metadata for REMTemplateConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724230);
  }
  return result;
}

unint64_t sub_1A4646F20()
{
  unint64_t result;

  result = qword_1EE724238;
  if (!qword_1EE724238)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplateConfiguration_Codable.CodingKeys, &type metadata for REMTemplateConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724238);
  }
  return result;
}

unint64_t sub_1A4646F68()
{
  unint64_t result;

  result = qword_1EE724240;
  if (!qword_1EE724240)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplateConfiguration_Codable.CodingKeys, &type metadata for REMTemplateConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724240);
  }
  return result;
}

unint64_t sub_1A4646FB0()
{
  unint64_t result;

  result = qword_1EE724248;
  if (!qword_1EE724248)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplatePublicLinkConfiguration_Codable.CodingKeys, &type metadata for REMTemplatePublicLinkConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724248);
  }
  return result;
}

unint64_t sub_1A4646FF8()
{
  unint64_t result;

  result = qword_1EE724250;
  if (!qword_1EE724250)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplatePublicLinkConfiguration_Codable.CodingKeys, &type metadata for REMTemplatePublicLinkConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724250);
  }
  return result;
}

unint64_t sub_1A4647040()
{
  unint64_t result;

  result = qword_1EE724258;
  if (!qword_1EE724258)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMTemplatePublicLinkConfiguration_Codable.CodingKeys, &type metadata for REMTemplatePublicLinkConfiguration_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724258);
  }
  return result;
}

unint64_t sub_1A4647088()
{
  unint64_t result;

  result = qword_1EE724260;
  if (!qword_1EE724260)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSharedEntitySyncActivity_Codable.CodingKeys, &type metadata for REMSharedEntitySyncActivity_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724260);
  }
  return result;
}

unint64_t sub_1A46470D0()
{
  unint64_t result;

  result = qword_1EE724268;
  if (!qword_1EE724268)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSharedEntitySyncActivity_Codable.CodingKeys, &type metadata for REMSharedEntitySyncActivity_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724268);
  }
  return result;
}

unint64_t sub_1A4647118()
{
  unint64_t result;

  result = qword_1EE724270;
  if (!qword_1EE724270)
  {
    result = MEMORY[0x1A85A0000](&protocol conformance descriptor for REMSharedEntitySyncActivity_Codable.CodingKeys, &type metadata for REMSharedEntitySyncActivity_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724270);
  }
  return result;
}

uint64_t sub_1A464715C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A46471A8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for REMObjectID_Codable()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMObjectID_Codable.CodingKeys()
{
  return &type metadata for REMObjectID_Codable.CodingKeys;
}

uint64_t method lookup function for REMAccount_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMList_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMList_Codable.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of REMList_Codable.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t method lookup function for REMSmartList_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMTemplate_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMReminder_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMColor_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMStructuredLocation_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for REMStructuredLocation_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A46472D4 + 4 * byte_1A46B3524[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A4647308 + 4 * byte_1A46B351F[v4]))();
}

uint64_t sub_1A4647308(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647310(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4647318);
  return result;
}

uint64_t sub_1A4647324(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A464732CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A4647330(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647338(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMStructuredLocation_Codable.CodingKeys()
{
  return &type metadata for REMStructuredLocation_Codable.CodingKeys;
}

uint64_t method lookup function for REMStoreObjectsContainer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storages.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storages.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storages.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.__allocating_init(store:storages:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.decodedObjectsCache.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.decodedObjectsCache.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.decodedObjectsCache.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.store(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storedAccount(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storedList(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storedSmartList(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storedTemplate(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of REMStoreObjectsContainer.storedReminder(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t method lookup function for REMHashtagLabel_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for REMHashtagLabelDetailed_Codable()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMHashtagLabelDetailed_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMTemplateConfiguration_Codable()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for REMTemplateConfiguration_Codable.CodingKeys()
{
  return &type metadata for REMTemplateConfiguration_Codable.CodingKeys;
}

uint64_t method lookup function for REMTemplatePublicLinkConfiguration_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for REMTemplatePublicLinkConfiguration_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A4647574 + 4 * byte_1A46B352E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A46475A8 + 4 * byte_1A46B3529[v4]))();
}

uint64_t sub_1A46475A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46475B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A46475B8);
  return result;
}

uint64_t sub_1A46475C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A46475CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A46475D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46475D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMTemplatePublicLinkConfiguration_Codable.CodingKeys()
{
  return &type metadata for REMTemplatePublicLinkConfiguration_Codable.CodingKeys;
}

uint64_t method lookup function for REMFetchResultToken_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for REMDueDateDeltaInterval_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for REMSharedEntitySyncActivity_Codable()
{
  return objc_opt_self();
}

uint64_t method lookup function for REMSharedEntitySyncActivity_Codable()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for REMSharedEntitySyncActivity_Codable.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for REMSharedEntitySyncActivity_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1A4647714 + 4 * byte_1A46B3538[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1A4647748 + 4 * byte_1A46B3533[v4]))();
}

uint64_t sub_1A4647748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4647758);
  return result;
}

uint64_t sub_1A4647764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A464776CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1A4647770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMSharedEntitySyncActivity_Codable.CodingKeys()
{
  return &type metadata for REMSharedEntitySyncActivity_Codable.CodingKeys;
}

uint64_t _s19ReminderKitInternal19REMObjectID_CodableC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A46477E0 + 4 * byte_1A46B3542[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A4647814 + 4 * byte_1A46B353D[v4]))();
}

uint64_t sub_1A4647814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A464781C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4647824);
  return result;
}

uint64_t sub_1A4647830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4647838);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A464783C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMDueDateDeltaInterval_Codable.CodingKeys()
{
  return &type metadata for REMDueDateDeltaInterval_Codable.CodingKeys;
}

ValueMetadata *type metadata accessor for REMFetchResultToken_Codable.CodingKeys()
{
  return &type metadata for REMFetchResultToken_Codable.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMHashtagLabelDetailed_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A46478C0 + 4 * byte_1A46B354C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A46478F4 + 4 * byte_1A46B3547[v4]))();
}

uint64_t sub_1A46478F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46478FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A4647904);
  return result;
}

uint64_t sub_1A4647910(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A4647918);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A464791C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647924(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMHashtagLabelDetailed_Codable.CodingKeys()
{
  return &type metadata for REMHashtagLabelDetailed_Codable.CodingKeys;
}

ValueMetadata *type metadata accessor for REMHashtagLabel_Codable.CodingKeys()
{
  return &type metadata for REMHashtagLabel_Codable.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for REMColor_Codable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1A464799C + 4 * byte_1A46B3556[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1A46479D0 + 4 * byte_1A46B3551[v4]))();
}

uint64_t sub_1A46479D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A46479D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A46479E0);
  return result;
}

uint64_t sub_1A46479EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A46479F4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1A46479F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A4647A00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for REMColor_Codable.CodingKeys()
{
  return &type metadata for REMColor_Codable.CodingKeys;
}

uint64_t _s19ReminderKitInternal27REMFetchResultToken_CodableC10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A4647A5C + 4 * byte_1A46B355B[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A4647A7C + 4 * byte_1A46B3560[v4]))();
}

_BYTE *sub_1A4647A5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A4647A7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4647A84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4647A8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A4647A94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A4647A9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for REMObjectCodingKey()
{
  return &type metadata for REMObjectCodingKey;
}

unint64_t sub_1A4647ABC()
{
  unint64_t result;

  result = qword_1EE724368;
  if (!qword_1EE724368)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B45CC, &type metadata for REMObjectCodingKey);
    atomic_store(result, (unint64_t *)&qword_1EE724368);
  }
  return result;
}

unint64_t sub_1A4647B04()
{
  unint64_t result;

  result = qword_1EE724370;
  if (!qword_1EE724370)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B46BC, &type metadata for REMColor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724370);
  }
  return result;
}

unint64_t sub_1A4647B4C()
{
  unint64_t result;

  result = qword_1EE724378;
  if (!qword_1EE724378)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B47AC, &type metadata for REMHashtagLabel_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724378);
  }
  return result;
}

unint64_t sub_1A4647B94()
{
  unint64_t result;

  result = qword_1EE724380;
  if (!qword_1EE724380)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B489C, &type metadata for REMHashtagLabelDetailed_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724380);
  }
  return result;
}

unint64_t sub_1A4647BDC()
{
  unint64_t result;

  result = qword_1EE724388;
  if (!qword_1EE724388)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B498C, &type metadata for REMFetchResultToken_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724388);
  }
  return result;
}

unint64_t sub_1A4647C24()
{
  unint64_t result;

  result = qword_1EE724390;
  if (!qword_1EE724390)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4A7C, &type metadata for REMDueDateDeltaInterval_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724390);
  }
  return result;
}

unint64_t sub_1A4647C6C()
{
  unint64_t result;

  result = qword_1EE724398;
  if (!qword_1EE724398)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B49B4, &type metadata for REMDueDateDeltaInterval_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE724398);
  }
  return result;
}

unint64_t sub_1A4647CB4()
{
  unint64_t result;

  result = qword_1EE7243A0;
  if (!qword_1EE7243A0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B49DC, &type metadata for REMDueDateDeltaInterval_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7243A0);
  }
  return result;
}

unint64_t sub_1A4647CFC()
{
  unint64_t result;

  result = qword_1ED2402D8;
  if (!qword_1ED2402D8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B48C4, &type metadata for REMFetchResultToken_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2402D8);
  }
  return result;
}

unint64_t sub_1A4647D44()
{
  unint64_t result;

  result = qword_1ED2402D0;
  if (!qword_1ED2402D0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B48EC, &type metadata for REMFetchResultToken_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2402D0);
  }
  return result;
}

unint64_t sub_1A4647D8C()
{
  unint64_t result;

  result = qword_1EE7243A8;
  if (!qword_1EE7243A8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B47D4, &type metadata for REMHashtagLabelDetailed_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7243A8);
  }
  return result;
}

unint64_t sub_1A4647DD4()
{
  unint64_t result;

  result = qword_1EE7243B0;
  if (!qword_1EE7243B0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B47FC, &type metadata for REMHashtagLabelDetailed_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7243B0);
  }
  return result;
}

unint64_t sub_1A4647E1C()
{
  unint64_t result;

  result = qword_1EE7243B8;
  if (!qword_1EE7243B8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B46E4, &type metadata for REMHashtagLabel_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7243B8);
  }
  return result;
}

unint64_t sub_1A4647E64()
{
  unint64_t result;

  result = qword_1EE7243C0[0];
  if (!qword_1EE7243C0[0])
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B470C, &type metadata for REMHashtagLabel_Codable.CodingKeys);
    atomic_store(result, qword_1EE7243C0);
  }
  return result;
}

unint64_t sub_1A4647EAC()
{
  unint64_t result;

  result = qword_1ED243DD8;
  if (!qword_1ED243DD8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B45F4, &type metadata for REMColor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243DD8);
  }
  return result;
}

unint64_t sub_1A4647EF4()
{
  unint64_t result;

  result = qword_1ED243DD0;
  if (!qword_1ED243DD0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B461C, &type metadata for REMColor_Codable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED243DD0);
  }
  return result;
}

unint64_t sub_1A4647F3C()
{
  unint64_t result;

  result = qword_1ED243DF0;
  if (!qword_1ED243DF0)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B4504, &type metadata for REMObjectCodingKey);
    atomic_store(result, (unint64_t *)&qword_1ED243DF0);
  }
  return result;
}

unint64_t sub_1A4647F84()
{
  unint64_t result;

  result = qword_1ED243DE8;
  if (!qword_1ED243DE8)
  {
    result = MEMORY[0x1A85A0000](&unk_1A46B452C, &type metadata for REMObjectCodingKey);
    atomic_store(result, (unint64_t *)&qword_1ED243DE8);
  }
  return result;
}

uint64_t sub_1A4647FC8()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1A4648010()
{
  unint64_t v0;

  v0 = sub_1A469171C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t dispatch thunk of REMObjectID_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMAccount_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMSmartList_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMTemplate_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMReminder_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMColor_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMStructuredLocation_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMHashtagLabel_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMHashtagLabelDetailed_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMTemplateConfiguration_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMTemplatePublicLinkConfiguration_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMFetchResultToken_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMDueDateDeltaInterval_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t dispatch thunk of REMSharedEntitySyncActivity_Codable.__allocating_init(from:)()
{
  return dispatch thunk of REMList_Codable.__allocating_init(from:)();
}

uint64_t Publishers.rem_combineLatest5.a.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.rem_combineLatest5.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 100));
}

uint64_t Publishers.rem_combineLatest5.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 104));
}

uint64_t Publishers.rem_combineLatest5.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 108));
}

uint64_t Publishers.rem_combineLatest5.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 112));
}

void Publishers.rem_combineLatest5.init(_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.rem_combineLatest5();
}

uint64_t sub_1A4648300(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v2 + a1[25], v7, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v2 + a1[26], v6, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v2 + a1[27], v3, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2 + a1[28], v11, v1);
}

void type metadata accessor for Publishers.rem_combineLatest5()
{
  JUMPOUT(0x1A859FF40);
}

uint64_t Publishers.rem_combineLatest5.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD v63[2];
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t TupleTypeMetadata;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t AssociatedTypeWitness;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v81 = a3;
  v82 = a4;
  v83 = a1;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v91 = *(_QWORD *)(a2 + 32);
  v92 = v5;
  v8 = *(_QWORD *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 64);
  v94 = *(_QWORD *)(a2 + 72);
  AssociatedTypeWitness = v6;
  v86 = v6;
  v96 = v5;
  v97 = v91;
  v98 = v8;
  v99 = v7;
  v89 = v7;
  v90 = v8;
  v100 = v94;
  v93 = sub_1A469033C();
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v80 = MEMORY[0x1A85A0000](MEMORY[0x1E0C956B8], v93);
  v11 = *(_QWORD *)(a2 + 80);
  v100 = *(_QWORD *)(a2 + 88);
  v73 = v11;
  v71 = v100;
  v88 = sub_1A469033C();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v96 = swift_getAssociatedTypeWitness();
  v12 = v91;
  v97 = swift_getAssociatedTypeWitness();
  v85 = v9;
  v98 = swift_getAssociatedTypeWitness();
  v70 = v10;
  v99 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v13 = v88;
  v76 = MEMORY[0x1A85A0000](MEMORY[0x1E0C956B8], v88);
  v78 = sub_1A469039C();
  v79 = *(_QWORD *)(v78 - 8);
  v14 = MEMORY[0x1E0C80A78](v78);
  v72 = (char *)v63 - v15;
  v69 = *(_QWORD *)(v10 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v68 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = *(_QWORD *)(v9 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v65 = (char *)v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = *(_QWORD *)(v13 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v87 = (char *)v63 - v21;
  v64 = *(_QWORD *)(v12 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v92;
  v26 = *(_QWORD *)(v92 - 8);
  v27 = MEMORY[0x1E0C80A78](v22);
  v29 = (char *)v63 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v86;
  v31 = MEMORY[0x1E0C80A78](v27);
  v33 = (char *)v63 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = *(_QWORD *)(v93 - 8);
  v34 = MEMORY[0x1E0C80A78](v31);
  v36 = (char *)v63 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63[1] = v36;
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)v63 - v37;
  v40 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v33, v75, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v29, v40 + *(int *)(a2 + 100), v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v24, v40 + *(int *)(a2 + 104), v91);
  v67 = v38;
  v41 = v89;
  sub_1A4690348();
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v36, v38, v93);
  v42 = v85;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v40 + *(int *)(a2 + 108), v85);
  v43 = v40 + *(int *)(a2 + 112);
  v44 = v70;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v43, v70);
  v45 = v71;
  v46 = v42;
  v47 = v73;
  sub_1A4690348();
  v48 = (_QWORD *)swift_allocObject();
  v48[2] = v30;
  v48[3] = v25;
  v49 = v90;
  v50 = v91;
  v48[4] = v91;
  v48[5] = v46;
  v52 = v81;
  v51 = v82;
  v48[6] = v44;
  v48[7] = v52;
  v48[8] = v49;
  v48[9] = v41;
  v53 = v94;
  v48[10] = v94;
  v48[11] = v47;
  v48[12] = v45;
  v48[13] = v51;
  v54 = (_QWORD *)swift_allocObject();
  v55 = v92;
  v54[2] = v86;
  v54[3] = v55;
  v56 = v85;
  v54[4] = v50;
  v54[5] = v56;
  v54[6] = v44;
  v54[7] = v52;
  v57 = v89;
  v54[8] = v49;
  v54[9] = v57;
  v54[10] = v53;
  v54[11] = v47;
  v54[12] = v45;
  v54[13] = v51;
  v54[14] = sub_1A4648E24;
  v54[15] = v48;
  v58 = v72;
  v60 = v87;
  v59 = v88;
  sub_1A46904F8();
  swift_release();
  v61 = v78;
  sub_1A4690390();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v58, v61);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v59);
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v67, v93);
}

uint64_t sub_1A46489E4(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, char *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata3;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  void (*v38)(void);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t, char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v71;
  void (*v72)(char *, char *, uint64_t);
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  char *v75;
  void (*v76)(void);
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  void (*v93)(void);
  _QWORD *v94;
  char *v95;
  char *v96;
  _QWORD *v97;

  v79 = a8;
  v80 = a7;
  v81 = a1;
  v82 = a2;
  v89 = a21;
  v87 = a4;
  v88 = a15;
  v90 = a10;
  v91 = a5;
  v85 = a3;
  v86 = a9;
  v83 = a14;
  v84 = a20;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedTypeWitness();
  v24 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v26 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v96 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v95 = (char *)&v71 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v71 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v35 = (char *)&v71 - v34;
  v36 = (char *)&v71 + *(int *)(v33 + 48) - v34;
  v37 = (char *)&v71 + *(int *)(v33 + 64) - v34;
  v97 = *(_QWORD **)(AssociatedTypeWitness - 8);
  v38 = (void (*)(void))v97[2];
  v92 = v36;
  v93 = v38;
  v39 = AssociatedTypeWitness;
  ((void (*)(char *, uint64_t, uint64_t))v38)((char *)&v71 - v34, a6, AssociatedTypeWitness);
  v94 = *(_QWORD **)(v23 - 8);
  v73 = (void (*)(char *, char *, uint64_t))v94[2];
  v74 = v23;
  v73(v36, v80, v23);
  v40 = v24;
  v78 = *(_QWORD *)(v24 - 8);
  v72 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
  v41 = v37;
  v75 = v37;
  v72(v37, v79, v24);
  v42 = &v32[*(int *)(TupleTypeMetadata3 + 48)];
  v79 = &v32[*(int *)(TupleTypeMetadata3 + 64)];
  v43 = v79;
  v80 = v42;
  ((void (*)(char *, char *, uint64_t))v93)(v32, v35, v39);
  v44 = v42;
  v45 = v92;
  v46 = v23;
  v47 = v73;
  v73(v44, v92, v46);
  v48 = v41;
  v49 = v40;
  v50 = v40;
  v51 = v72;
  v72(v43, v48, v49);
  v76 = (void (*)(void))v97[4];
  ((void (*)(char *, char *, uint64_t))v76)(v81, v32, v39);
  v52 = &v95[*(int *)(TupleTypeMetadata3 + 48)];
  v81 = &v95[*(int *)(TupleTypeMetadata3 + 64)];
  v53 = v81;
  v77 = v39;
  v93();
  v54 = v45;
  v55 = v74;
  v47(v52, v54, v74);
  v56 = v53;
  v57 = v75;
  v58 = v50;
  v51(v56, v75, v50);
  v59 = (void (*)(uint64_t, char *, uint64_t))v94[4];
  v59(v82, v52, v55);
  v60 = &v96[*(int *)(TupleTypeMetadata3 + 48)];
  v61 = &v96[*(int *)(TupleTypeMetadata3 + 64)];
  v76();
  v59((uint64_t)v60, v92, v55);
  v62 = v78;
  v63 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
  v63(v61, v57, v58);
  v63(v85, v61, v58);
  v64 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v87, v86, v64);
  v65 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v91, v90, v65);
  v66 = (void (*)(char *, uint64_t))v94[1];
  v66(v60, v55);
  v67 = (void (*)(char *, uint64_t))v97[1];
  v68 = v77;
  v67(v96, v77);
  v69 = *(void (**)(char *, uint64_t))(v62 + 8);
  v69(v81, v58);
  v67(v95, v68);
  v69(v79, v58);
  return ((uint64_t (*)(char *, uint64_t))v66)(v80, v55);
}

uint64_t sub_1A4648E14()
{
  return swift_deallocObject();
}

uint64_t sub_1A4648E24(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;

  return sub_1A46489E4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8], v10[9], v10[10],
           v10[11],
           v10[12]);
}

uint64_t sub_1A4648E68@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *TupleTypeMetadata;
  uint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v12 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  v6 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v7 = swift_getTupleTypeMetadata3();
  v8 = a1 + *(int *)(v7 + 48);
  v9 = a1 + *(int *)(v7 + 64);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + TupleTypeMetadata[12], a3 + TupleTypeMetadata[16], a3 + TupleTypeMetadata[20], a3 + TupleTypeMetadata[24], a1, v12, v6, v8, v9);
}

uint64_t sub_1A464902C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A4649050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A4648E68(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112), a2);
}

uint64_t sub_1A4649098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.rem_combineLatest5.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.rem_combineLatest6.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 116));
}

uint64_t Publishers.rem_combineLatest6.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 120));
}

uint64_t Publishers.rem_combineLatest6.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 124));
}

uint64_t Publishers.rem_combineLatest6.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 128));
}

uint64_t Publishers.rem_combineLatest6.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

void Publishers.rem_combineLatest6.init(_:_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.rem_combineLatest6();
}

uint64_t sub_1A46491D0(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v3 + a1[29], v7, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3 + a1[30], v10, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + a1[31], v11, v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3 + a1[32], v12, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v3 + a1[33], v13, v2);
}

void type metadata accessor for Publishers.rem_combineLatest6()
{
  JUMPOUT(0x1A859FF40);
}

uint64_t Publishers.rem_combineLatest6.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t TupleTypeMetadata;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t AssociatedTypeWitness;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v91 = a4;
  v90 = a3;
  v92 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v105 = *(_QWORD *)(a2 + 80);
  v106 = v7;
  AssociatedTypeWitness = v5;
  v108 = v6;
  v102 = v5;
  v109 = v7;
  v110 = v8;
  v96 = v8;
  v111 = v9;
  v112 = v105;
  v99 = v9;
  v10 = sub_1A469033C();
  v11 = *(_QWORD *)(a2 + 48);
  v100 = *(_QWORD *)(a2 + 40);
  v101 = v11;
  v103 = *(_QWORD *)(a2 + 56);
  v104 = v10;
  v89 = MEMORY[0x1A85A0000](MEMORY[0x1E0C956B8], v10);
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  v97 = *(_QWORD *)(a2 + 88);
  v113 = v12;
  v114 = v13;
  v81 = v12;
  v98 = v13;
  v95 = sub_1A4690354();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v108 = swift_getAssociatedTypeWitness();
  v14 = v106;
  v109 = swift_getAssociatedTypeWitness();
  v15 = v100;
  v110 = swift_getAssociatedTypeWitness();
  v111 = swift_getAssociatedTypeWitness();
  v112 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v16 = v95;
  v85 = MEMORY[0x1A85A0000](MEMORY[0x1E0C956D8], v95);
  v87 = sub_1A469039C();
  v88 = *(_QWORD *)(v87 - 8);
  v17 = MEMORY[0x1E0C80A78](v87);
  v83 = (char *)v71 - v18;
  v80 = *(_QWORD *)(v103 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v79 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = *(_QWORD *)(v11 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v76 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = *(_QWORD *)(v15 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v74 = (char *)v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = *(_QWORD *)(v16 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v94 = (char *)v71 - v26;
  v72 = *(_QWORD *)(v14 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v6;
  v31 = *(_QWORD *)(v6 - 8);
  v32 = MEMORY[0x1E0C80A78](v27);
  v34 = (char *)v71 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = v102;
  v36 = MEMORY[0x1E0C80A78](v32);
  v38 = (char *)v71 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = *(_QWORD *)(v104 - 8);
  v39 = MEMORY[0x1E0C80A78](v36);
  v41 = (char *)v71 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71[1] = v41;
  MEMORY[0x1E0C80A78](v39);
  v43 = (char *)v71 - v42;
  v45 = v84;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v38, v84, v35);
  v46 = v45 + *(int *)(a2 + 116);
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v73 = v30;
  v47(v34, v46, v30);
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v29, v45 + *(int *)(a2 + 120), v106);
  v77 = v43;
  sub_1A4690348();
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v41, v43, v104);
  v48 = v100;
  (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v45 + *(int *)(a2 + 124), v100);
  v49 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v76, v45 + *(int *)(a2 + 128), v101);
  v50 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v45 + *(int *)(a2 + 132), v103);
  v51 = v81;
  v52 = v97;
  v53 = v48;
  v54 = v49;
  sub_1A4690360();
  v55 = (_QWORD *)swift_allocObject();
  v56 = v73;
  v55[2] = v102;
  v55[3] = v56;
  v57 = v105;
  v55[4] = v106;
  v55[5] = v53;
  v55[6] = v54;
  v55[7] = v50;
  v58 = v90;
  v59 = v96;
  v55[8] = v90;
  v55[9] = v59;
  v60 = v98;
  v61 = v99;
  v55[10] = v99;
  v55[11] = v57;
  v55[12] = v52;
  v55[13] = v51;
  v62 = v91;
  v55[14] = v60;
  v55[15] = v62;
  v63 = (_QWORD *)swift_allocObject();
  v63[2] = v102;
  v63[3] = v56;
  v64 = v100;
  v63[4] = v106;
  v63[5] = v64;
  v65 = v103;
  v63[6] = v101;
  v63[7] = v65;
  v63[8] = v58;
  v63[9] = v59;
  v63[10] = v61;
  v63[11] = v57;
  v63[12] = v97;
  v63[13] = v51;
  v63[14] = v60;
  v63[15] = v62;
  v63[16] = sub_1A4649E64;
  v63[17] = v55;
  v66 = v83;
  v68 = v94;
  v67 = v95;
  sub_1A46904F8();
  swift_release();
  v69 = v87;
  sub_1A4690390();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v66, v69);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v68, v67);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v77, v104);
}

uint64_t sub_1A46499D0(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v26;
  uint64_t v27;
  uint64_t TupleTypeMetadata3;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(void);
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(uint64_t, char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  void (*v70)(char *, uint64_t);
  void (*v71)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  char *v100;
  _QWORD *v101;

  v81 = a1;
  v82 = a8;
  v99 = a7;
  v96 = a12;
  v97 = a6;
  v91 = a4;
  v92 = a11;
  v94 = a25;
  v95 = a5;
  v93 = a18;
  v89 = a17;
  v90 = a24;
  v87 = a3;
  v88 = a10;
  v83 = a9;
  v84 = a2;
  v85 = a16;
  v86 = a23;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v26 = swift_getAssociatedTypeWitness();
  v27 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v29 = MEMORY[0x1E0C80A78](TupleTypeMetadata3);
  v80 = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v100 = (char *)&v73 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v73 - v34;
  v36 = MEMORY[0x1E0C80A78](v33);
  v38 = (char *)&v73 - v37;
  v98 = (char *)&v73 + *(int *)(v36 + 48) - v37;
  v39 = v98;
  v40 = (char *)&v73 + *(int *)(v36 + 64) - v37;
  v41 = AssociatedTypeWitness;
  v101 = *(_QWORD **)(AssociatedTypeWitness - 8);
  v42 = (void (*)(void))v101[2];
  v73 = AssociatedTypeWitness;
  ((void (*)(char *, _QWORD *, uint64_t))v42)((char *)&v73 - v37, v99, AssociatedTypeWitness);
  v43 = v26;
  v99 = *(_QWORD **)(v26 - 8);
  v75 = (void (*)(char *, char *, uint64_t))v99[2];
  v76 = v26;
  v75(v39, v82, v26);
  v44 = v27;
  v74 = v27;
  v79 = *(_QWORD *)(v27 - 8);
  v45 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  v46 = v40;
  v77 = v40;
  v45(v40, v83, v44);
  v47 = &v35[*(int *)(TupleTypeMetadata3 + 48)];
  v82 = &v35[*(int *)(TupleTypeMetadata3 + 64)];
  v48 = v82;
  v83 = v47;
  ((void (*)(char *, char *, uint64_t))v42)(v35, v38, v41);
  v49 = v47;
  v50 = v98;
  v51 = v75;
  v75(v49, v98, v43);
  v52 = v48;
  v53 = v74;
  v45(v52, v46, v74);
  v78 = (void (*)(char *, char *, uint64_t))v101[4];
  v54 = v73;
  v78(v81, v35, v73);
  v55 = &v100[*(int *)(TupleTypeMetadata3 + 48)];
  v81 = &v100[*(int *)(TupleTypeMetadata3 + 64)];
  v56 = v81;
  v42();
  v57 = v76;
  v51(v55, v50, v76);
  v58 = v56;
  v59 = v77;
  v45(v58, v77, v53);
  v60 = (void (*)(uint64_t, char *, uint64_t))v99[4];
  v60(v84, v55, v57);
  v61 = v80;
  v62 = &v80[*(int *)(TupleTypeMetadata3 + 48)];
  v63 = &v80[*(int *)(TupleTypeMetadata3 + 64)];
  v78(v80, v38, v54);
  v60((uint64_t)v62, v98, v57);
  v64 = v79;
  v65 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  v65(v63, v59, v53);
  v65(v87, v63, v53);
  v66 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v91, v88, v66);
  v67 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(v95, v92, v67);
  v68 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v97, v96, v68);
  v69 = (void (*)(char *, uint64_t))v99[1];
  v69(v62, v57);
  v70 = (void (*)(char *, uint64_t))v101[1];
  v70(v61, v54);
  v71 = *(void (**)(char *, uint64_t))(v64 + 8);
  v71(v81, v53);
  v70(v100, v54);
  v71(v82, v53);
  return ((uint64_t (*)(char *, uint64_t))v69)(v83, v57);
}

uint64_t sub_1A4649E54()
{
  return swift_deallocObject();
}

uint64_t sub_1A4649E64(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7, char *a8, char *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *v12;

  return sub_1A46499D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, v12[2], v12[3], v12[4], v12[5], v12[6], v12[7], v12[8],
           v12[9],
           v12[10],
           v12[11],
           v12[12],
           v12[13],
           v12[14]);
}

uint64_t sub_1A4649EB0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata3;
  int *TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v13 = a1 + *(int *)(TupleTypeMetadata3 + 48);
  v12 = a1 + *(int *)(TupleTypeMetadata3 + 64);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v7 = a1 + TupleTypeMetadata[12];
  v8 = a1 + TupleTypeMetadata[16];
  v9 = a1 + TupleTypeMetadata[20];
  v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a1, v13, v12, v7, v8, v9);
}

uint64_t sub_1A464A0C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A464A0E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A4649EB0(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 128), a2);
}

uint64_t sub_1A464A130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.rem_combineLatest6.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t Publishers.rem_combineLatest7.b.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 132));
}

uint64_t Publishers.rem_combineLatest7.c.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 136));
}

uint64_t Publishers.rem_combineLatest7.d.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 40) - 8) + 16))(a2, v2 + *(int *)(a1 + 140));
}

uint64_t Publishers.rem_combineLatest7.e.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 48) - 8) + 16))(a2, v2 + *(int *)(a1 + 144));
}

uint64_t Publishers.rem_combineLatest7.f.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + 16))(a2, v2 + *(int *)(a1 + 148));
}

uint64_t Publishers.rem_combineLatest7.g.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 64) - 8) + 16))(a2, v2 + *(int *)(a1 + 152));
}

void Publishers.rem_combineLatest7.init(_:_:_:_:_:_:_:)(uint64_t a1@<X0>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Publishers.rem_combineLatest7();
}

uint64_t sub_1A464A298(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v4 + a1[33], v1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4 + a1[34], v11, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(v4 + a1[35], v12, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v4 + a1[36], v13, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v4 + a1[37], v14, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v4 + a1[38], v15, v3);
}

void type metadata accessor for Publishers.rem_combineLatest7()
{
  JUMPOUT(0x1A859FF40);
}

uint64_t Publishers.rem_combineLatest7.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t TupleTypeMetadata;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t AssociatedTypeWitness;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  v100 = a4;
  v99 = a3;
  v101 = a1;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  v117 = *(_QWORD *)(a2 + 32);
  v118 = v7;
  v8 = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  v115 = *(_QWORD *)(a2 + 96);
  v116 = v10;
  AssociatedTypeWitness = v5;
  v121 = v6;
  v102 = v5;
  v119 = v6;
  v122 = v117;
  v123 = v7;
  v124 = v8;
  v125 = v9;
  v109 = v9;
  v110 = v8;
  v126 = v10;
  v127 = v115;
  v11 = sub_1A4690354();
  v12 = *(_QWORD *)(a2 + 56);
  v111 = *(_QWORD *)(a2 + 48);
  v112 = v12;
  v113 = *(_QWORD *)(a2 + 64);
  v114 = v11;
  v98 = MEMORY[0x1A85A0000](MEMORY[0x1E0C956D8], v11);
  v13 = *(_QWORD *)(a2 + 104);
  v14 = *(_QWORD *)(a2 + 120);
  v107 = *(_QWORD *)(a2 + 112);
  v108 = v13;
  v127 = v14;
  v106 = v14;
  v105 = sub_1A4690354();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v121 = swift_getAssociatedTypeWitness();
  v15 = v117;
  v122 = swift_getAssociatedTypeWitness();
  v16 = v118;
  v123 = swift_getAssociatedTypeWitness();
  v17 = v111;
  v124 = swift_getAssociatedTypeWitness();
  v18 = v112;
  v125 = swift_getAssociatedTypeWitness();
  v126 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v19 = v105;
  v94 = MEMORY[0x1A85A0000](MEMORY[0x1E0C956D8], v105);
  v96 = sub_1A469039C();
  v97 = *(_QWORD *)(v96 - 8);
  v20 = MEMORY[0x1E0C80A78](v96);
  v92 = (char *)&v81 - v21;
  v90 = *(_QWORD *)(v113 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v89 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = *(_QWORD *)(v18 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v87 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = *(_QWORD *)(v17 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v84 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = *(_QWORD *)(v19 - 8);
  v28 = MEMORY[0x1E0C80A78](v26);
  v104 = (char *)&v81 - v29;
  v83 = *(_QWORD *)(v16 - 8);
  v30 = MEMORY[0x1E0C80A78](v28);
  v82 = (char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = *(_QWORD *)(v15 - 8);
  v33 = MEMORY[0x1E0C80A78](v30);
  v35 = (char *)&v81 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v119;
  v37 = *(_QWORD *)(v119 - 8);
  v38 = MEMORY[0x1E0C80A78](v33);
  v40 = (char *)&v81 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v102;
  v42 = MEMORY[0x1E0C80A78](v38);
  v44 = (char *)&v81 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *(_QWORD *)(v114 - 8);
  v45 = MEMORY[0x1E0C80A78](v42);
  v81 = (char *)&v81 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v45);
  v48 = (char *)&v81 - v47;
  v50 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v44, v93, v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v40, v50 + *(int *)(a2 + 132), v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v35, v50 + *(int *)(a2 + 136), v117);
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v50 + *(int *)(a2 + 140), v118);
  v85 = v48;
  sub_1A4690360();
  (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v81, v48, v114);
  v51 = v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v84, v50 + *(int *)(a2 + 144), v111);
  v52 = v112;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v50 + *(int *)(a2 + 148), v112);
  v53 = v50 + *(int *)(a2 + 152);
  v54 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v53, v113);
  v55 = v106;
  v56 = v107;
  v57 = v51;
  v58 = v52;
  v59 = v54;
  sub_1A4690360();
  v60 = (_QWORD *)swift_allocObject();
  v61 = v102;
  v62 = v119;
  v60[2] = v102;
  v60[3] = v62;
  v63 = v116;
  v64 = v118;
  v60[4] = v117;
  v60[5] = v64;
  v60[6] = v57;
  v60[7] = v58;
  v60[8] = v59;
  v65 = v99;
  v67 = v109;
  v66 = v110;
  v60[9] = v99;
  v60[10] = v66;
  v60[11] = v67;
  v60[12] = v63;
  v68 = v115;
  v69 = v108;
  v60[13] = v115;
  v60[14] = v69;
  v60[15] = v56;
  v60[16] = v55;
  v70 = v100;
  v60[17] = v100;
  v71 = (_QWORD *)swift_allocObject();
  v72 = v119;
  v71[2] = v61;
  v71[3] = v72;
  v73 = v118;
  v71[4] = v117;
  v71[5] = v73;
  v74 = v112;
  v71[6] = v111;
  v71[7] = v74;
  v71[8] = v113;
  v71[9] = v65;
  v71[10] = v66;
  v71[11] = v67;
  v71[12] = v63;
  v71[13] = v68;
  v75 = v107;
  v71[14] = v69;
  v71[15] = v75;
  v71[16] = v106;
  v71[17] = v70;
  v71[18] = sub_1A464B390;
  v71[19] = v60;
  v76 = v92;
  v77 = v105;
  v78 = v104;
  sub_1A46904F8();
  swift_release();
  v79 = v96;
  sub_1A4690390();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v76, v79);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v78, v77);
  return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v85, v114);
}

uint64_t sub_1A464AB8C(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char *a16, void (*a17)(char *, char *, uint64_t), char *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_QWORD *a24,uint64_t a25,char *a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int *TupleTypeMetadata;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  void (*v55)(void);
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  void (*v74)(uint64_t, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t);
  void (*v88)(char *, uint64_t);
  void (*v89)(char *, uint64_t);
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  uint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  void (*v97)(char *, char *, uint64_t);
  void (*v98)(void);
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  void (*v123)(char *, char *, uint64_t);
  void (*v124)(void);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  _QWORD *v130;
  _QWORD *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t AssociatedTypeWitness;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  v134 = a8;
  v120 = a7;
  v118 = a6;
  v114 = a5;
  v110 = a4;
  v107 = a3;
  v106 = a2;
  v102 = a1;
  v117 = a29;
  v116 = a21;
  v119 = a14;
  v115 = a13;
  v113 = a28;
  v109 = a27;
  v112 = a20;
  v108 = a19;
  v111 = a12;
  v105 = a11;
  v121 = a10;
  v126 = a9;
  v104 = a26;
  v125 = a25;
  v103 = a18;
  v123 = a17;
  v130 = a24;
  v101 = a16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v137 = swift_getAssociatedTypeWitness();
  v138 = swift_getAssociatedTypeWitness();
  v139 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v30 = MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v129 = (char *)&v93 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v127 = (char *)&v93 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v128 = (char *)&v93 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v93 - v37;
  v39 = (int *)MEMORY[0x1E0C80A78](v36);
  v41 = (char *)&v93 - v40;
  v42 = (char *)&v93 + v39[12] - v40;
  v132 = (char *)&v93 + v39[16] - v40;
  v43 = v132;
  v133 = (char *)&v93 - v40;
  v44 = (char *)&v93 + v39[20] - v40;
  v135 = swift_getAssociatedTypeWitness();
  v131 = *(_QWORD **)(v135 - 8);
  v124 = (void (*)(void))v131[2];
  ((void (*)(char *, uint64_t, uint64_t))v124)(v41, v134, v135);
  v134 = swift_getAssociatedTypeWitness();
  v130 = *(_QWORD **)(v134 - 8);
  v45 = (void (*)(char *, uint64_t, uint64_t))v130[2];
  v46 = v42;
  v122 = v42;
  v45(v42, v126, v134);
  v47 = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(v47 - 8);
  v125 = v47;
  v126 = v48;
  v123 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v123(v43, (char *)v121, v47);
  v49 = swift_getAssociatedTypeWitness();
  v100 = *(_QWORD *)(v49 - 8);
  v121 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v95 = v49;
  v121(v44, v105, v49);
  v50 = TupleTypeMetadata[12];
  v99 = v38;
  v51 = &v38[v50];
  v105 = &v38[v50];
  v104 = &v38[TupleTypeMetadata[16]];
  v52 = v104;
  v103 = &v38[TupleTypeMetadata[20]];
  v53 = v103;
  v54 = v135;
  v55 = v124;
  v124();
  v96 = (void (*)(char *, char *, uint64_t))v45;
  v45(v51, (uint64_t)v46, v134);
  v56 = v123;
  v123(v52, v132, v125);
  v57 = v44;
  v94 = v44;
  v58 = v44;
  v59 = v121;
  v121(v53, v58, v49);
  v98 = (void (*)(void))v131[4];
  ((void (*)(char *, char *, uint64_t))v98)(v102, v99, v54);
  v99 = &v128[TupleTypeMetadata[12]];
  v60 = v99;
  v102 = &v128[TupleTypeMetadata[16]];
  v61 = v102;
  v101 = &v128[TupleTypeMetadata[20]];
  v62 = v101;
  v55();
  v63 = v60;
  v64 = v122;
  v65 = v134;
  v45(v63, (uint64_t)v122, v134);
  v66 = v125;
  v56(v61, v132, v125);
  v67 = v95;
  v59(v62, v57, v95);
  v97 = (void (*)(char *, char *, uint64_t))v130[4];
  v97(v106, v99, v65);
  v106 = &v127[TupleTypeMetadata[12]];
  v68 = v106;
  v69 = &v127[TupleTypeMetadata[16]];
  v99 = &v127[TupleTypeMetadata[20]];
  v70 = v99;
  v124();
  v96(v68, v64, v65);
  v71 = v132;
  v123(v69, v132, v66);
  v72 = v70;
  v73 = v94;
  v121(v72, v94, v67);
  v74 = *(void (**)(uint64_t, char *, uint64_t))(v126 + 32);
  v75 = v66;
  v74(v107, v69, v66);
  v76 = &v129[TupleTypeMetadata[12]];
  v77 = &v129[TupleTypeMetadata[16]];
  v78 = &v129[TupleTypeMetadata[20]];
  v98();
  v79 = v76;
  v80 = v134;
  v97(v76, v122, v134);
  v74((uint64_t)v77, v71, v75);
  v81 = v100;
  v82 = *(void (**)(char *, char *, uint64_t))(v100 + 32);
  v82(v78, v73, v67);
  v83 = v67;
  v82(v110, v78, v67);
  v84 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v114, v111, v84);
  v85 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v118, v115, v85);
  v86 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v120, v119, v86);
  v87 = *(void (**)(char *, uint64_t))(v126 + 8);
  v87(v77, v75);
  v88 = (void (*)(char *, uint64_t))v130[1];
  v88(v79, v80);
  v89 = (void (*)(char *, uint64_t))v131[1];
  v90 = v135;
  v89(v129, v135);
  v91 = *(void (**)(char *, uint64_t))(v81 + 8);
  v91(v99, v83);
  v88(v106, v80);
  v89(v127, v90);
  v91(v101, v83);
  v87(v102, v75);
  v89(v128, v90);
  v91(v103, v83);
  v87(v104, v75);
  return ((uint64_t (*)(char *, uint64_t))v88)(v105, v80);
}

uint64_t sub_1A464B380()
{
  return swift_deallocObject();
}

uint64_t sub_1A464B390(char *a1, char *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void (*a10)(char *, char *, uint64_t), char *a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;

  return sub_1A464AB8C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, *(_QWORD *)(v14 + 16), *(char **)(v14 + 24), *(void (**)(char *, char *, uint64_t))(v14 + 32), *(char **)(v14 + 40), *(_QWORD *)(v14 + 48),
           *(_QWORD *)(v14 + 56),
           *(_QWORD *)(v14 + 64),
           *(_QWORD *)(v14 + 72),
           *(_QWORD *)(v14 + 80),
           *(_QWORD **)(v14 + 88),
           *(_QWORD *)(v14 + 96),
           *(char **)(v14 + 104),
           *(_QWORD *)(v14 + 112),
           *(_QWORD *)(v14 + 120),
           *(_QWORD *)(v14 + 128));
}

uint64_t sub_1A464B3E4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  int *TupleTypeMetadata;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v14 = a1 + TupleTypeMetadata[12];
  v13 = a1 + TupleTypeMetadata[16];
  v12 = a1 + TupleTypeMetadata[20];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  v6 = (int *)swift_getTupleTypeMetadata();
  v7 = a1 + v6[12];
  v8 = a1 + v6[16];
  v9 = a1 + v6[20];
  v10 = (int *)swift_getTupleTypeMetadata();
  return a2(a3, a3 + v10[12], a3 + v10[16], a3 + v10[20], a3 + v10[24], a3 + v10[28], a3 + v10[32], a1, v14, v13, v12, v7, v8, v9);
}

uint64_t sub_1A464B64C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A464B670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1A464B3E4(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 144), a2);
}

uint64_t sub_1A464B6C4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A464B6E4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A464B704()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1A464B724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.rem_combineLatest7.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1A464B738()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A464B740()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            swift_initStructMetadata();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1A464B82C(uint64_t *a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t *v39;

  v4 = *(_QWORD *)(a3[2] - 8);
  v5 = *(_QWORD *)(a3[3] - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 + 64) + v6;
  v8 = *(_QWORD *)(a3[4] - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v5 + 64) + v9;
  v11 = *(_QWORD *)(a3[5] - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = *(_QWORD *)(v8 + 64) + v12;
  v14 = *(_QWORD *)(a3[6] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_DWORD *)(v4 + 80);
  v17 = (*(_BYTE *)(v5 + 80) | v16 | *(_BYTE *)(v8 + 80) | v12 | v15);
  if (v17 <= 7
    && ((*(_QWORD *)(v11 + 64)
       + v15
       + ((v13 + ((v10 + (v7 & ~v6)) & ~v9)) & ~(unint64_t)v12)) & ~(unint64_t)v15)
     + *(_QWORD *)(v14 + 64) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | v16 | *(_DWORD *)(v8 + 80) | v12 | v15) & 0x100000) == 0)
  {
    v22 = ~v6;
    v33 = ~v9;
    v34 = a3[5];
    v36 = ~(unint64_t)v12;
    v37 = ~(unint64_t)v15;
    v38 = a3[6];
    v31 = a3[3];
    v32 = a3[4];
    v35 = *(_QWORD *)(v11 + 64) + v15;
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    v39 = a1;
    v24 = ((unint64_t)a1 + v7) & v22;
    v25 = ((unint64_t)a2 + v7) & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v24, v25, v31);
    v26 = v24 + v10;
    v21 = v39;
    v27 = v26 & v33;
    v28 = (v25 + v10) & v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v26 & v33, v28, v32);
    v29 = (v28 + v13) & v36;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v27 + v13) & v36, v29, v34);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))((((v27 + v13) & v36) + v35) & v37, (v29 + v35) & v37, v38);
  }
  else
  {
    v20 = *a2;
    *a1 = *a2;
    v21 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v21;
}

uint64_t sub_1A464BA10(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[6] - 8) + 8))((v13
                                                                                       + *(_QWORD *)(v12 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[6] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[6] - 8) + 80));
}

uint64_t sub_1A464BAE0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 16))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A464BBF0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 24))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A464BD00(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 32))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 32))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A464BE10(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 40))(v22, v23);
  v24 = *(_QWORD *)(a3[6] - 8);
  (*(void (**)(unint64_t, unint64_t))(v24 + 40))((*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v22) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80), (*(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(v24 + 80) + v23) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
  return a1;
}

uint64_t sub_1A464BF20(uint64_t a1, unsigned int a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  char v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = a3[2];
  v5 = a3[3];
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v5 - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  v13 = a3[4];
  v12 = a3[5];
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 84);
  if (v15 > v11)
    v11 = *(_DWORD *)(v14 + 84);
  v16 = *(_QWORD *)(v12 - 8);
  v17 = *(unsigned int *)(v16 + 84);
  if (v17 <= v11)
    v18 = v11;
  else
    v18 = *(_DWORD *)(v16 + 84);
  v19 = a3[6];
  v20 = *(_QWORD *)(v19 - 8);
  if (*(_DWORD *)(v20 + 84) > v18)
    v18 = *(_DWORD *)(v20 + 84);
  if (!a2)
    return 0;
  v21 = *(unsigned __int8 *)(v9 + 80);
  v22 = *(_QWORD *)(v7 + 64) + v21;
  v23 = *(_QWORD *)(v9 + 64);
  v24 = *(unsigned __int8 *)(v14 + 80);
  v25 = *(_QWORD *)(v14 + 64);
  v26 = *(unsigned __int8 *)(v16 + 80);
  v27 = *(unsigned __int8 *)(v20 + 80);
  v28 = *(_QWORD *)(v16 + 64) + v27;
  v29 = a2 - v18;
  if (a2 <= v18)
    goto LABEL_30;
  v30 = ((v28 + ((v25 + v26 + ((v23 + v24 + (v22 & ~v21)) & ~v24)) & ~v26)) & ~v27) + *(_QWORD *)(v20 + 64);
  v31 = 8 * v30;
  if (v30 <= 3)
  {
    v33 = ((v29 + ~(-1 << v31)) >> v31) + 1;
    if (HIWORD(v33))
    {
      v32 = *(_DWORD *)(a1 + v30);
      if (!v32)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v33 > 0xFF)
    {
      v32 = *(unsigned __int16 *)(a1 + v30);
      if (!*(_WORD *)(a1 + v30))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v33 < 2)
    {
LABEL_30:
      if (v18)
      {
        if (v8 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v6);
        v36 = (v22 + a1) & ~v21;
        if (v10 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v9 + 48))(v36, *(unsigned int *)(v9 + 84), v5);
        v37 = (v36 + v23 + v24) & ~v24;
        if (v15 == v18)
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v14 + 48))(v37, *(unsigned int *)(v14 + 84), v13);
        v38 = (v37 + v25 + v26) & ~v26;
        if ((_DWORD)v17 == v18)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v38, v17, v12);
        else
          return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v20 + 48))((v28 + v38) & ~v27, *(unsigned int *)(v20 + 84), v19);
      }
      return 0;
    }
  }
  v32 = *(unsigned __int8 *)(a1 + v30);
  if (!*(_BYTE *)(a1 + v30))
    goto LABEL_30;
LABEL_21:
  v34 = (v32 - 1) << v31;
  if (v30 > 3)
    v34 = 0;
  if ((_DWORD)v30)
  {
    if (v30 <= 3)
      v35 = ((v28 + ((v25 + v26 + ((v23 + v24 + (v22 & ~(_DWORD)v21)) & ~(_DWORD)v24)) & ~(_DWORD)v26)) & ~(_DWORD)v27)
          + *(_DWORD *)(v20 + 64);
    else
      v35 = 4;
    __asm { BR              X11 }
  }
  return v18 + v34 + 1;
}

uint64_t sub_1A464C1A4(_WORD *a1, unsigned int a2, unsigned int a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  result = *(_QWORD *)(a4[2] - 8);
  v6 = *(_QWORD *)(a4[3] - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(result + 84))
    v7 = *(_DWORD *)(result + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(a4[4] - 8);
  if (*(_DWORD *)(v8 + 84) > v7)
    v7 = *(_DWORD *)(v8 + 84);
  v9 = *(_QWORD *)(a4[5] - 8);
  if (*(_DWORD *)(v9 + 84) <= v7)
    v10 = v7;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(a4[6] - 8);
  if (*(_DWORD *)(v11 + 84) > v10)
    v10 = *(_DWORD *)(v11 + 84);
  v12 = ((*(_QWORD *)(v9 + 64)
        + *(unsigned __int8 *)(v11 + 80)
        + ((*(_QWORD *)(v8 + 64)
          + *(unsigned __int8 *)(v9 + 80)
          + ((*(_QWORD *)(v6 + 64)
            + *(unsigned __int8 *)(v8 + 80)
            + ((*(_QWORD *)(result + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
      + *(_QWORD *)(v11 + 64);
  if (a3 <= v10)
  {
    v13 = 0u;
    if (v10 < a2)
      goto LABEL_16;
  }
  else
  {
    if (v12 > 3)
    {
      v13 = 1u;
      if (v10 >= a2)
        return result;
LABEL_16:
      v14 = ~v10 + a2;
      if (v12 < 4)
      {
        if ((_DWORD)v12)
        {
          v16 = v14 & ~(-1 << (8 * v12));
          bzero(a1, v12);
          if ((_DWORD)v12 == 3)
          {
            *a1 = v16;
            *((_BYTE *)a1 + 2) = BYTE2(v16);
          }
          else if ((_DWORD)v12 == 2)
          {
            *a1 = v16;
          }
          else
          {
            *(_BYTE *)a1 = v16;
          }
        }
      }
      else
      {
        bzero(a1, v12);
        *(_DWORD *)a1 = v14;
      }
      __asm { BR              X10 }
    }
    v15 = ((a3 - v10 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v13 = 4u;
    }
    else if (v15 >= 0x100)
    {
      v13 = 2;
    }
    else
    {
      v13 = v15 > 1;
    }
    if (v10 < a2)
      goto LABEL_16;
  }
  return result;
}

void sub_1A464C448()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1A464C450()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1A464C4DC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A464C4E4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              swift_initStructMetadata();
              return 0;
            }
          }
        }
      }
    }
  }
  return result;
}

_QWORD *sub_1A464C5F0(_QWORD *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v5 = *(_QWORD *)(a3[2] - 8);
  v6 = *(_QWORD *)(a3[3] - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v5 + 64) + v7;
  v9 = *(_QWORD *)(a3[4] - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v6 + 64) + v10;
  v12 = *(_QWORD *)(a3[5] - 8);
  v13 = *(_DWORD *)(v12 + 80);
  v45 = *(_QWORD *)(v9 + 64) + v13;
  v14 = *(_QWORD *)(a3[6] - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v44 = *(_QWORD *)(v12 + 64) + v15;
  v16 = *(_QWORD *)(a3[7] - 8);
  v17 = *(_DWORD *)(v16 + 80);
  v18 = *(_QWORD *)(v14 + 64) + v17;
  v19 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v5 + 80) | *(_BYTE *)(v9 + 80) | *(_BYTE *)(v12 + 80) | *(_BYTE *)(v14 + 80) | v17);
  if (v19 <= 7
    && ((v18 + ((v44 + ((v45 + ((v11 + (v8 & ~v7)) & ~v10)) & ~v13)) & ~v15)) & ~(unint64_t)v17)
     + *(_QWORD *)(v16 + 64) <= 0x18
    && ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v14 + 80) | v17) & 0x100000) == 0)
  {
    v35 = a3[4];
    v36 = a3[3];
    v24 = ~v7;
    v37 = ~v10;
    v38 = a3[5];
    v39 = ~v13;
    v40 = a3[6];
    v41 = ~v15;
    v42 = ~(unint64_t)v17;
    v43 = a3[7];
    (*(void (**)(_QWORD *, _QWORD *))(v5 + 16))(a1, a2);
    v25 = a2;
    v26 = a1;
    v27 = ((unint64_t)a1 + v8) & v24;
    v28 = ((unint64_t)v25 + v8) & v24;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v27, v28, v36);
    v29 = v27 + v11;
    v23 = v26;
    v30 = v29 & v37;
    v31 = (v28 + v11) & v37;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v29 & v37, v31, v35);
    v32 = (v31 + v45) & v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))((v30 + v45) & v39, v32, v38);
    v33 = (((v30 + v45) & v39) + v44) & v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v33, (v32 + v44) & v41, v40);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))((v33 + v18) & v42, (((v32 + v44) & v41) + v18) & v42, v43);
  }
  else
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (_QWORD *)(v22 + ((v19 + 16) & ~v19));
    swift_retain();
  }
  return v23;
}

uint64_t sub_1A464C83C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a2[2] - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64) + a1;
  v6 = *(_QWORD *)(a2[3] - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t))(v6 + 8))(v7);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(_QWORD *)(a2[4] - 8);
  v10 = (v7 + v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t))(v9 + 8))(v10);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(a2[5] - 8);
  v13 = (v10 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  (*(void (**)(unint64_t))(v12 + 8))(v13);
  v14 = *(_QWORD *)(v12 + 64);
  v15 = *(_QWORD *)(a2[6] - 8);
  v16 = (v13 + v14 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  (*(void (**)(unint64_t))(v15 + 8))(v16);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(a2[7] - 8) + 8))((v16
                                                                                       + *(_QWORD *)(v15 + 64)
                                                                                       + *(unsigned __int8 *)(*(_QWORD *)(a2[7] - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a2[7] - 8) + 80));
}

uint64_t sub_1A464C934(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v28, v29);
  v30 = *(_QWORD *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 16))((*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

uint64_t sub_1A464CA78(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(a3[2] - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(a3[3] - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 + a1) & ~v8;
  v11 = (v9 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(a3[4] - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v10) & ~v14;
  v17 = (v15 + v11) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 24))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64);
  v19 = *(_QWORD *)(a3[5] - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v18 + v20;
  v22 = (v21 + v16) & ~v20;
  v23 = (v21 + v17) & ~v20;
  (*(void (**)(uint64_t, uint64_t))(v19 + 24))(v22, v23);
  v24 = *(_QWORD *)(v19 + 64);
  v25 = *(_QWORD *)(a3[6] - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = v24 + v26;
  v28 = (v27 + v22) & ~v26;
  v29 = (v27 + v23) & ~v26;
  (*(void (**)(uint64_t, uint64_t))(v25 + 24))(v28, v29);
  v30 = *(_QWORD *)(a3[7] - 8);
  (*(void (**)(unint64_t, unint64_t))(v30 + 24))((*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v28) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80), (*(_QWORD *)(v25 + 64) + *(unsigned __int8 *)(v30 + 80) + v29) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  return a1;
}

