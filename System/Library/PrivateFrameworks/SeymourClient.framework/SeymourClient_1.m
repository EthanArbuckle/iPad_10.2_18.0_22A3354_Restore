uint64_t dispatch thunk of HealthStoreProtocol.biologicalSex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of HealthStoreProtocol.wheelchairUse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of HealthStoreProtocol.bodyMass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HealthStoreProtocol.height.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of HealthStoreProtocol.betaBlockerUse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))() & 1;
}

uint64_t dispatch thunk of HealthStoreProtocol.moveMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))() & 1;
}

uint64_t dispatch thunk of HealthStoreProtocol.fitnessMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))() & 1;
}

uint64_t dispatch thunk of HealthStoreProtocol.makeWorkoutSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of HealthStoreProtocol.makeWorkoutSession(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of HealthStoreProtocol.makeWorkoutDataSource(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of HealthStoreProtocol.fetchActivityRings()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 168) + *(_QWORD *)(a3 + 168));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.makeActivityRingsObserver(streamHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 176) + *(_QWORD *)(a4 + 176));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CE041270;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of HealthStoreProtocol.makeActivityRingsStream()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 184) + *(_QWORD *)(a3 + 184));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.queryStatistics(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 192)
                                                                            + *(_QWORD *)(a5 + 192));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CDFACD38;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t assignWithCopy for HealthStore(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for HealthStore(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthStore(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthStore(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1CE040DF4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B88);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE040E88(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B88) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CE03F4A4(a1, a2, a3, v3 + v8, *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + v9 + 8), *(_QWORD **)(v3 + ((v9 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1CE040F04()
{
  return objectdestroy_2Tm(&qword_1ED8F0E40);
}

uint64_t sub_1CE040F10()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E40);
  return sub_1CE0B64E8();
}

uint64_t sub_1CE040F80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFA624C0 + dword_1EFA624C0))(a1, v4);
}

uint64_t sub_1CE040FF0()
{
  return objectdestroy_2Tm(&qword_1EFA60B98);
}

uint64_t sub_1CE040FFC(uint64_t a1)
{
  return sub_1CE041170(a1, &qword_1EFA60B98, (uint64_t (*)(uint64_t, uint64_t))sub_1CE03DBAC);
}

uint64_t sub_1CE041018()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE041044(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *(int **)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_1CDFACD38;
  return v8(a1);
}

uint64_t sub_1CE0410CC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE0410F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE041150()
{
  return objectdestroy_2Tm(&qword_1EFA60C00);
}

uint64_t sub_1CE04115C(uint64_t a1)
{
  return sub_1CE041170(a1, &qword_1EFA60C00, sub_1CE03E338);
}

uint64_t sub_1CE041170(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocObject();
}

id sub_1CE0411F4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_stopQuery_, *(_QWORD *)(v0 + 72));
}

uint64_t sub_1CE041208()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CE04122C(char a1, void *a2)
{
  uint64_t v2;

  sub_1CE03C3BC(a1, a2, *(void (**)(void *, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), "Failed to save sample into HealthKit: %{public}s");
}

void sub_1CE04124C(char a1, void *a2)
{
  uint64_t v2;

  sub_1CE03C3BC(a1, a2, *(void (**)(void *, _QWORD))(v2 + 16), *(_QWORD *)(v2 + 24), "Failed to save samples into HealthKit: %{public}s");
}

uint64_t sub_1CE0412A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0412B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1CE0412EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0412F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserActivityCancelled()
{
  uint64_t result;

  result = qword_1EFA60C70;
  if (!qword_1EFA60C70)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for MachServiceConstants()
{
  return &type metadata for MachServiceConstants;
}

uint64_t sub_1CE041384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return SessionMonitor.sessionUpdated(_:state:)(a1, a2, a3, a4);
}

uint64_t SessionMonitor.sessionUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  v5[13] = swift_task_alloc();
  v6 = sub_1CE0B53C0();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v5[17] = swift_task_alloc();
  v7 = sub_1CE0B43B8();
  v5[18] = v7;
  v5[19] = *(_QWORD *)(v7 - 8);
  v5[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  v5[21] = swift_task_alloc();
  v8 = sub_1CE0B5F18();
  v5[22] = v8;
  v5[23] = *(_QWORD *)(v8 - 8);
  v5[24] = swift_task_alloc();
  v5[25] = sub_1CE0B64DC();
  v5[26] = v9;
  return swift_task_switch();
}

uint64_t sub_1CE041540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  sub_1CE0B45EC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1CDFB13F8(*(_QWORD *)(v0 + 168), &qword_1EFA5D8A0);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 136);
    sub_1CE0B4508();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_1CDFB13F8(*(_QWORD *)(v0 + 136), &qword_1EFA5D940);
      v7 = *(_QWORD *)(v0 + 112);
      v8 = *(_QWORD *)(v0 + 120);
      v9 = *(_QWORD *)(v0 + 104);
      sub_1CE0B45C8();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
      {
        sub_1CDFB13F8(*(_QWORD *)(v0 + 104), &qword_1EFA5D860);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
      v16 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
      v18 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v16 + 104) + *(_QWORD *)(v16 + 104));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 248) = v17;
      *v17 = v0;
      v17[1] = sub_1CE041B18;
      v13 = *(_QWORD *)(v0 + 128);
    }
    else
    {
      v14 = *(_QWORD *)(v0 + 88);
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
      v18 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v14 + 96) + *(_QWORD *)(v14 + 96));
      v15 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 232) = v15;
      *v15 = v0;
      v15[1] = sub_1CE041984;
      v13 = *(_QWORD *)(v0 + 160);
    }
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 32))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176));
    v18 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v11 + 88) + *(_QWORD *)(v11 + 88));
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v12;
    *v12 = v0;
    v12[1] = sub_1CE04176C;
    v13 = *(_QWORD *)(v0 + 192);
  }
  return v18(v13, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1CE04176C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 224) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0417CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v13)(uint64_t, _QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  v1 = *(_QWORD *)(v0 + 144);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 136);
  sub_1CE0B4508();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1CDFB13F8(*(_QWORD *)(v0 + 136), &qword_1EFA5D940);
    v4 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v6 = *(_QWORD *)(v0 + 104);
    sub_1CE0B45C8();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_1CDFB13F8(*(_QWORD *)(v0 + 104), &qword_1EFA5D860);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v11 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    v13 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v11 + 104) + *(_QWORD *)(v11 + 104));
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v12;
    *v12 = v0;
    v12[1] = sub_1CE041B18;
    v10 = *(_QWORD *)(v0 + 128);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
    v13 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v8 + 96) + *(_QWORD *)(v8 + 96));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v9;
    *v9 = v0;
    v9[1] = sub_1CE041984;
    v10 = *(_QWORD *)(v0 + 160);
  }
  return v13(v10, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_1CE041984()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0419E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(_QWORD, _QWORD, _QWORD, _QWORD);

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  sub_1CE0B45C8();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1CDFB13F8(*(_QWORD *)(v0 + 104), &qword_1EFA5D860);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    v7 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(v5 + 104) + *(_QWORD *)(v5 + 104));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 248) = v6;
    *v6 = v0;
    v6[1] = sub_1CE041B18;
    return v7(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
}

uint64_t sub_1CE041B18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE041B78()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE041C00()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v1 = *(void **)(v0 + 224);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EFA634C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1CE0B6068();
  v6 = sub_1CE0B671C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 224);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v9 = 136315394;
    v12 = sub_1CE0B6DF4();
    *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v12, v13, &v17);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v14 = v8;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 56) = v15;
    sub_1CE0B68F0();
    *v10 = v15;

    _os_log_impl(&dword_1CDFAA000, v5, v6, "%s] Failed to update playback with %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64BF0);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v11, -1, -1);
    MEMORY[0x1D17C092C](v9, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 176));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE041E98()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v1 = *(void **)(v0 + 240);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EFA634C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1CE0B6068();
  v6 = sub_1CE0B671C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 240);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v9 = 136315394;
    v12 = sub_1CE0B6DF4();
    *(_QWORD *)(v0 + 32) = sub_1CDFC7270(v12, v13, &v17);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v14 = v8;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v15;
    sub_1CE0B68F0();
    *v10 = v15;

    _os_log_impl(&dword_1CDFAA000, v5, v6, "%s] Failed to update activity rings with %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64BF0);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v11, -1, -1);
    MEMORY[0x1D17C092C](v9, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE042130()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v1 = *(void **)(v0 + 256);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EFA634C8);
  v3 = v1;
  v4 = v1;
  v5 = sub_1CE0B6068();
  v6 = sub_1CE0B671C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 256);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v9 = 136315394;
    v12 = sub_1CE0B6DF4();
    *(_QWORD *)(v0 + 16) = sub_1CDFC7270(v12, v13, &v17);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v14 = v8;
    v15 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v15;
    sub_1CE0B68F0();
    *v10 = v15;

    _os_log_impl(&dword_1CDFAA000, v5, v6, "%s] Failed to update workout device connection with %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64BF0);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v11, -1, -1);
    MEMORY[0x1D17C092C](v9, -1, -1);
  }
  else
  {

  }
  swift_willThrow();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0423C8()
{
  uint64_t v0;

  return sub_1CE045EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SessionMonitor.playbackUpdated(_:state:)()
{
  uint64_t v0;

  return sub_1CE045EA8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_1CE0423E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return SessionMonitor.handleSessionActivated(_:)(a1, a2, a3);
}

uint64_t SessionMonitor.handleSessionActivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[13] = AssociatedTypeWitness;
  v4[14] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  v6 = sub_1CE0B5E04();
  v4[17] = v6;
  v4[18] = *(_QWORD *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for SessionMonitorState(0, AssociatedTypeWitness, v7, v8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = sub_1CE0B64DC();
  v4[27] = v9;
  return swift_task_switch();
}

uint64_t sub_1CE04258C()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t AssociatedConformanceWitness;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t, uint64_t);
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(uint64_t, uint64_t);
  uint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74[8];
  uint64_t v75;
  uint64_t v76;
  uint64_t (*v77)(_QWORD, _QWORD, _QWORD);
  uint64_t v78;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 88) + 32))(*(_QWORD *)(v0 + 80));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 136));
    if (qword_1EFA5D520 != -1)
      swift_once();
    v31 = *(_QWORD *)(v0 + 168);
    v32 = *(_QWORD *)(v0 + 176);
    v33 = *(_QWORD *)(v0 + 160);
    v34 = *(_QWORD *)(v0 + 136);
    v35 = *(_QWORD *)(v0 + 144);
    v36 = *(_QWORD *)(v0 + 72);
    v37 = sub_1CE0B6080();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EFA634C8);
    v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
    v38(v31, v32, v34);
    v38(v33, v36, v34);
    v39 = sub_1CE0B6068();
    v40 = sub_1CE0B671C();
    v41 = os_log_type_enabled(v39, v40);
    v42 = *(_QWORD *)(v0 + 168);
    v43 = *(_QWORD *)(v0 + 176);
    v44 = *(_QWORD *)(v0 + 160);
    v45 = *(_QWORD *)(v0 + 136);
    v46 = *(_QWORD *)(v0 + 144);
    if (v41)
    {
      v76 = *(_QWORD *)(v0 + 176);
      v47 = swift_slowAlloc();
      v73 = swift_slowAlloc();
      v78 = v73;
      *(_DWORD *)v47 = 136315650;
      v48 = sub_1CE0B6DF4();
      *(_QWORD *)(v0 + 40) = sub_1CDFC7270(v48, v49, &v78);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      v50 = sub_1CE0B5C9C();
      *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v50, v51, &v78);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v52 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v52(v42, v45);
      *(_WORD *)(v47 + 22) = 2080;
      v53 = sub_1CE0B5C9C();
      *(_QWORD *)(v0 + 56) = sub_1CDFC7270(v53, v54, &v78);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v52(v44, v45);
      _os_log_impl(&dword_1CDFAA000, v39, v40, "[%s] Currently waiting for session: %s. Unexpected new session: %s", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v73, -1, -1);
      MEMORY[0x1D17C092C](v47, -1, -1);

      v52(v76, v45);
      goto LABEL_21;
    }

    v57 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v57(v44, v45);
    v57(v42, v45);
    v58 = v43;
    v59 = v45;
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 104));
    if (qword_1EFA5D520 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 144);
    v2 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 112);
    v6 = *(_QWORD *)(v0 + 120);
    v8 = *(_QWORD *)(v0 + 104);
    v9 = *(_QWORD *)(v0 + 72);
    v10 = sub_1CE0B6080();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EFA634C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v9, v4);
    v11 = sub_1CE0B6068();
    v12 = sub_1CE0B671C();
    v13 = os_log_type_enabled(v11, v12);
    v15 = *(_QWORD *)(v0 + 144);
    v14 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 136);
    v19 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 120);
    v20 = *(_QWORD *)(v0 + 104);
    if (v13)
    {
      *(_QWORD *)v74 = *(_QWORD *)(v0 + 136);
      v75 = *(_QWORD *)(v0 + 128);
      v71 = *(_QWORD *)(v0 + 144);
      v21 = swift_slowAlloc();
      v72 = swift_slowAlloc();
      v78 = v72;
      *(_DWORD *)v21 = 136315650;
      v22 = sub_1CE0B6DF4();
      v70 = v14;
      *(_QWORD *)(v0 + 16) = sub_1CDFC7270(v22, v23, &v78);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      v25 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v20, AssociatedConformanceWitness);
      v26 = *(_QWORD *)(v25 + 16);
      v27 = *(_QWORD *)(v25 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v26, v27, &v78);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v28 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v28(v18, v20);
      *(_WORD *)(v21 + 22) = 2080;
      v29 = sub_1CE0B5C9C();
      *(_QWORD *)(v0 + 32) = sub_1CDFC7270(v29, v30, &v78);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, os_log_type_t *))(v71 + 8))(v70, *(os_log_type_t **)v74);
      _os_log_impl(&dword_1CDFAA000, v11, v12, "[%s] Currently active session: %s. Unexpected new session: %s", (uint8_t *)v21, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v72, -1, -1);
      MEMORY[0x1D17C092C](v21, -1, -1);

      v28(v75, v20);
      goto LABEL_21;
    }

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v17);
    v57 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v57(v18, v20);
    v58 = v16;
    v59 = v20;
LABEL_15:
    v57(v58, v59);
    goto LABEL_21;
  }
  if (((*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 56))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80)) & 1) != 0)
  {
    v77 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 88) + 64)
                                                         + *(_QWORD *)(*(_QWORD *)(v0 + 88) + 64));
    v55 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v55;
    *v55 = v0;
    v55[1] = sub_1CE042DD4;
    return v77(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  }
  if (qword_1EFA5D520 != -1)
    swift_once();
  v60 = sub_1CE0B6080();
  __swift_project_value_buffer(v60, (uint64_t)qword_1EFA634C8);
  v61 = sub_1CE0B6068();
  v62 = sub_1CE0B6734();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = (uint8_t *)swift_slowAlloc();
    v64 = swift_slowAlloc();
    v78 = v64;
    *(_DWORD *)v63 = 136315138;
    v65 = sub_1CE0B6DF4();
    *(_QWORD *)(v0 + 64) = sub_1CDFC7270(v65, v66, &v78);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v61, v62, "[%s] Waiting for session update before starting", v63, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v64, -1, -1);
    MEMORY[0x1D17C092C](v63, -1, -1);
  }

  v67 = *(_QWORD *)(v0 + 192);
  v68 = *(_QWORD *)(v0 + 88);
  v69 = *(_QWORD *)(v0 + 80);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 16))(v67, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 136));
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 40))(v67, v69, v68);
LABEL_21:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE042DD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE042E34()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE042EC4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE042F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return SessionMonitor.handleSessionDeactivated(_:)(a1, a2, a3);
}

uint64_t SessionMonitor.handleSessionDeactivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[16] = AssociatedTypeWitness;
  v4[17] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  v6 = sub_1CE0B5E04();
  v4[20] = v6;
  v4[21] = *(_QWORD *)(v6 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for SessionMonitorState(0, AssociatedTypeWitness, v7, v8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = sub_1CE0B64DC();
  v4[32] = v9;
  return swift_task_switch();
}

uint64_t sub_1CE043110()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t, uint64_t);
  NSObject *v90;
  os_log_type_t v91;
  _BOOL4 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  unint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  void (*v107)(uint64_t, uint64_t);
  uint64_t v108;
  os_log_type_t type;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v120;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 112) + 32))(*(_QWORD *)(v0 + 104));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (qword_1EFA5D520 != -1)
        swift_once();
      v42 = *(_QWORD *)(v0 + 96);
      v43 = *(_QWORD *)(v0 + 216);
      v45 = *(_QWORD *)(v0 + 160);
      v44 = *(_QWORD *)(v0 + 168);
      v46 = sub_1CE0B6080();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EFA634C8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v43, v42, v45);
      v47 = sub_1CE0B6068();
      v48 = sub_1CE0B671C();
      v49 = os_log_type_enabled(v47, v48);
      v50 = *(_QWORD *)(v0 + 216);
      if (v49)
      {
        v114 = *(_QWORD *)(v0 + 168);
        v118 = *(_QWORD *)(v0 + 160);
        v51 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        v120 = v52;
        *(_DWORD *)v51 = 136315394;
        v53 = sub_1CE0B6DF4();
        *(_QWORD *)(v0 + 80) = sub_1CDFC7270(v53, v54, &v120);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 12) = 2080;
        v55 = sub_1CE0B5C9C();
        *(_QWORD *)(v0 + 88) = sub_1CDFC7270(v55, v56, &v120);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v50, v118);
        _os_log_impl(&dword_1CDFAA000, v47, v48, "[%s] Can't end session that was never started: %s", (uint8_t *)v51, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v52, -1, -1);
        MEMORY[0x1D17C092C](v51, -1, -1);

      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 160));

      }
      goto LABEL_35;
    }
    v2 = *(_QWORD *)(v0 + 128);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 136) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 240), v2);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
    v5 = v4(v2, AssociatedConformanceWitness);
    v7 = *(_QWORD *)(v5 + 16);
    v6 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    if (v7 == sub_1CE0B5C9C() && v6 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v10 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v111 = v4;
        if (qword_1EFA5D520 != -1)
          swift_once();
        v11 = *(_QWORD *)(v0 + 168);
        v12 = *(_QWORD *)(v0 + 176);
        v13 = *(_QWORD *)(v0 + 160);
        v116 = *(_QWORD *)(v0 + 152);
        v14 = *(_QWORD *)(v0 + 136);
        v15 = *(_QWORD *)(v0 + 144);
        v16 = *(_QWORD *)(v0 + 128);
        v17 = *(_QWORD *)(v0 + 96);
        v18 = sub_1CE0B6080();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EFA634C8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v17, v13);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v116, v16);
        v19 = sub_1CE0B6068();
        v20 = sub_1CE0B671C();
        v21 = os_log_type_enabled(v19, v20);
        v22 = *(_QWORD *)(v0 + 176);
        v117 = *(_QWORD *)(v0 + 168);
        v23 = *(_QWORD *)(v0 + 152);
        v24 = *(_QWORD *)(v0 + 160);
        v26 = *(_QWORD *)(v0 + 136);
        v25 = *(_QWORD *)(v0 + 144);
        v27 = *(_QWORD *)(v0 + 128);
        if (v21)
        {
          v108 = *(_QWORD *)(v0 + 160);
          v28 = swift_slowAlloc();
          v110 = swift_slowAlloc();
          v120 = v110;
          *(_DWORD *)v28 = 136315650;
          v29 = sub_1CE0B6DF4();
          *(_QWORD *)(v0 + 16) = sub_1CDFC7270(v29, v30, &v120);
          sub_1CE0B68F0();
          swift_bridgeObjectRelease();
          type = v20;
          *(_WORD *)(v28 + 12) = 2080;
          v31 = sub_1CE0B5C9C();
          *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v31, v32, &v120);
          sub_1CE0B68F0();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v22, v108);
          *(_WORD *)(v28 + 22) = 2080;
          v33 = v25;
          v34 = v111(v27, AssociatedConformanceWitness);
          v35 = *(_QWORD *)(v34 + 16);
          v36 = *(_QWORD *)(v34 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          *(_QWORD *)(v0 + 32) = sub_1CDFC7270(v35, v36, &v120);
          sub_1CE0B68F0();
          swift_bridgeObjectRelease();
          v37 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
          v37(v33, v27);
          _os_log_impl(&dword_1CDFAA000, v19, type, "[%s] Can't end session %s while active for session %s", (uint8_t *)v28, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D17C092C](v110, -1, -1);
          MEMORY[0x1D17C092C](v28, -1, -1);

          v37(v23, v27);
        }
        else
        {

          v106 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
          v106(v25, v27);
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v22, v24);
          v106(v23, v27);
        }
        goto LABEL_35;
      }
    }
    v119 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 112) + 80)
                                                                  + *(_QWORD *)(*(_QWORD *)(v0 + 112) + 80));
    v57 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v57;
    *v57 = v0;
    v57[1] = sub_1CE043CB8;
    return v119(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 32))(*(_QWORD *)(v0 + 208), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 160));
  v38 = sub_1CE0B5C9C();
  v40 = v39;
  if (v38 == sub_1CE0B5C9C() && v40 == v41)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v59 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v59 & 1) == 0)
    {
      if (qword_1EFA5D520 != -1)
        swift_once();
      v82 = *(_QWORD *)(v0 + 208);
      v84 = *(_QWORD *)(v0 + 184);
      v83 = *(_QWORD *)(v0 + 192);
      v86 = *(_QWORD *)(v0 + 160);
      v85 = *(_QWORD *)(v0 + 168);
      v87 = *(_QWORD *)(v0 + 96);
      v88 = sub_1CE0B6080();
      __swift_project_value_buffer(v88, (uint64_t)qword_1EFA634C8);
      v89 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 16);
      v89(v83, v87, v86);
      v89(v84, v82, v86);
      v90 = sub_1CE0B6068();
      v91 = sub_1CE0B671C();
      v92 = os_log_type_enabled(v90, v91);
      v93 = *(_QWORD *)(v0 + 208);
      v95 = *(_QWORD *)(v0 + 184);
      v94 = *(_QWORD *)(v0 + 192);
      v97 = *(_QWORD *)(v0 + 160);
      v96 = *(_QWORD *)(v0 + 168);
      if (v92)
      {
        v115 = *(_QWORD *)(v0 + 208);
        v98 = swift_slowAlloc();
        v113 = swift_slowAlloc();
        v120 = v113;
        *(_DWORD *)v98 = 136315650;
        v99 = sub_1CE0B6DF4();
        *(_QWORD *)(v0 + 40) = sub_1CDFC7270(v99, v100, &v120);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 12) = 2080;
        v101 = sub_1CE0B5C9C();
        *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v101, v102, &v120);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        v103 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
        v103(v94, v97);
        *(_WORD *)(v98 + 22) = 2080;
        v104 = sub_1CE0B5C9C();
        *(_QWORD *)(v0 + 56) = sub_1CDFC7270(v104, v105, &v120);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        v103(v95, v97);
        _os_log_impl(&dword_1CDFAA000, v90, v91, "[%s] Can't end session %s while waiting for session %s", (uint8_t *)v98, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v113, -1, -1);
        MEMORY[0x1D17C092C](v98, -1, -1);

        v103(v115, v97);
      }
      else
      {

        v107 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
        v107(v95, v97);
        v107(v94, v97);
        v107(v93, v97);
      }
      goto LABEL_35;
    }
  }
  if (qword_1EFA5D520 != -1)
    swift_once();
  v60 = *(_QWORD *)(v0 + 200);
  v61 = *(_QWORD *)(v0 + 160);
  v62 = *(_QWORD *)(v0 + 168);
  v63 = *(_QWORD *)(v0 + 96);
  v64 = sub_1CE0B6080();
  __swift_project_value_buffer(v64, (uint64_t)qword_1EFA634C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v60, v63, v61);
  v65 = sub_1CE0B6068();
  v66 = sub_1CE0B6734();
  v67 = os_log_type_enabled(v65, v66);
  v68 = *(_QWORD *)(v0 + 200);
  v69 = *(_QWORD *)(v0 + 168);
  if (v67)
  {
    v112 = *(_QWORD *)(v0 + 160);
    v70 = swift_slowAlloc();
    v71 = swift_slowAlloc();
    v120 = v71;
    *(_DWORD *)v70 = 136315394;
    v72 = sub_1CE0B6DF4();
    *(_QWORD *)(v0 + 64) = sub_1CDFC7270(v72, v73, &v120);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v70 + 12) = 2080;
    v74 = sub_1CE0B5C9C();
    *(_QWORD *)(v0 + 72) = sub_1CDFC7270(v74, v75, &v120);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    v76 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v76(v68, v112);
    _os_log_impl(&dword_1CDFAA000, v65, v66, "[%s] Ending session: %s", (uint8_t *)v70, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v71, -1, -1);
    MEMORY[0x1D17C092C](v70, -1, -1);
  }
  else
  {
    v76 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    v76(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 160));
  }

  v77 = *(_QWORD *)(v0 + 232);
  v78 = *(_QWORD *)(v0 + 208);
  v79 = *(_QWORD *)(v0 + 160);
  v80 = *(_QWORD *)(v0 + 112);
  v81 = *(_QWORD *)(v0 + 104);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 40))(v77, v81, v80);
  v76(v78, v79);
LABEL_35:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE043CB8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE043D18()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE043DD4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE043E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return SessionMonitor.handleSessionUpdated(_:)(a1, a2, a3);
}

uint64_t SessionMonitor.handleSessionUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  v4[15] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v6 = sub_1CE0B5E04();
  v4[18] = v6;
  v4[19] = *(_QWORD *)(v6 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v7 = sub_1CE0B4604();
  v4[23] = v7;
  v4[24] = *(_QWORD *)(v7 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = type metadata accessor for SessionMonitorState(0, AssociatedTypeWitness, v8, v9);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = sub_1CE0B64DC();
  v4[32] = v10;
  return swift_task_switch();
}

uint64_t sub_1CE044074()
{
  uint64_t v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  _BOOL4 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  _BOOL4 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  void (*v96)(uint64_t, uint64_t);
  void (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  os_log_type_t type;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  os_log_type_t v109[8];
  uint64_t (*v110)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t (*v111)(_QWORD, _QWORD, _QWORD);
  uint64_t v112;

  (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 88));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (qword_1EFA5D520 != -1)
        swift_once();
      v42 = *(_QWORD *)(v0 + 80);
      v43 = *(_QWORD *)(v0 + 216);
      v45 = *(_QWORD *)(v0 + 184);
      v44 = *(_QWORD *)(v0 + 192);
      v46 = sub_1CE0B6080();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EFA634C8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v43, v42, v45);
      v47 = sub_1CE0B6068();
      v48 = sub_1CE0B671C();
      v49 = os_log_type_enabled(v47, v48);
      v50 = *(_QWORD *)(v0 + 216);
      if (v49)
      {
        v108 = *(_QWORD *)(v0 + 192);
        *(_QWORD *)v109 = *(_QWORD *)(v0 + 184);
        v51 = swift_slowAlloc();
        v105 = swift_slowAlloc();
        v112 = v105;
        *(_DWORD *)v51 = 136315394;
        v52 = sub_1CE0B6DF4();
        *(_QWORD *)(v0 + 64) = sub_1CDFC7270(v52, v53, &v112);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v51 + 12) = 2080;
        v54 = sub_1CE0B458C();
        *(_QWORD *)(v0 + 72) = sub_1CDFC7270(v54, v55, &v112);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, os_log_type_t *))(v108 + 8))(v50, *(os_log_type_t **)v109);
        _os_log_impl(&dword_1CDFAA000, v47, v48, "[%s] Can't update session that doesn't exist: %s", (uint8_t *)v51, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v105, -1, -1);
        MEMORY[0x1D17C092C](v51, -1, -1);

      }
      else
      {
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 184));

      }
      goto LABEL_32;
    }
    v2 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 240), v2);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8);
    v5 = v4(v2, AssociatedConformanceWitness);
    v7 = *(_QWORD *)(v5 + 16);
    v6 = *(_QWORD *)(v5 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    if (v7 == sub_1CE0B458C() && v6 == v8)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v10 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) == 0)
      {
        v104 = v4;
        if (qword_1EFA5D520 != -1)
          swift_once();
        v11 = *(_QWORD *)(v0 + 192);
        v12 = *(_QWORD *)(v0 + 200);
        v13 = *(_QWORD *)(v0 + 184);
        v14 = *(_QWORD *)(v0 + 128);
        v106 = *(_QWORD *)(v0 + 136);
        v16 = *(_QWORD *)(v0 + 112);
        v15 = *(_QWORD *)(v0 + 120);
        v17 = *(_QWORD *)(v0 + 80);
        v18 = sub_1CE0B6080();
        __swift_project_value_buffer(v18, (uint64_t)qword_1EFA634C8);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, v17, v13);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v106, v16);
        v19 = sub_1CE0B6068();
        v20 = sub_1CE0B671C();
        v21 = os_log_type_enabled(v19, v20);
        v22 = *(_QWORD *)(v0 + 200);
        v107 = *(_QWORD *)(v0 + 192);
        v23 = *(_QWORD *)(v0 + 184);
        v25 = *(_QWORD *)(v0 + 128);
        v24 = *(_QWORD *)(v0 + 136);
        v26 = *(_QWORD *)(v0 + 112);
        v27 = *(_QWORD *)(v0 + 120);
        if (v21)
        {
          v98 = *(_QWORD *)(v0 + 184);
          v28 = swift_slowAlloc();
          v101 = swift_slowAlloc();
          v112 = v101;
          *(_DWORD *)v28 = 136315650;
          v29 = sub_1CE0B6DF4();
          *(_QWORD *)(v0 + 16) = sub_1CDFC7270(v29, v30, &v112);
          sub_1CE0B68F0();
          swift_bridgeObjectRelease();
          type = v20;
          *(_WORD *)(v28 + 12) = 2080;
          v31 = sub_1CE0B458C();
          *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v31, v32, &v112);
          sub_1CE0B68F0();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v22, v98);
          *(_WORD *)(v28 + 22) = 2080;
          v33 = v25;
          v34 = v104(v26, AssociatedConformanceWitness);
          v35 = *(_QWORD *)(v34 + 16);
          v36 = *(_QWORD *)(v34 + 24);
          swift_bridgeObjectRetain();
          swift_release();
          *(_QWORD *)(v0 + 32) = sub_1CDFC7270(v35, v36, &v112);
          sub_1CE0B68F0();
          swift_bridgeObjectRelease();
          v37 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
          v37(v33, v26);
          _os_log_impl(&dword_1CDFAA000, v19, type, "%s] Can't update session %s while active for session %s", (uint8_t *)v28, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1D17C092C](v101, -1, -1);
          MEMORY[0x1D17C092C](v28, -1, -1);

          v37(v24, v26);
        }
        else
        {

          v96 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
          v96(v25, v26);
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v22, v23);
          v96(v24, v26);
        }
        goto LABEL_32;
      }
    }
    v110 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 96) + 72)
                                                                  + *(_QWORD *)(*(_QWORD *)(v0 + 96) + 72));
    v56 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v56;
    *v56 = v0;
    v56[1] = sub_1CE044C54;
    return v110(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 144));
  v38 = sub_1CE0B458C();
  v40 = v39;
  if (v38 == sub_1CE0B5C9C() && v40 == v41)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v58 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v58 & 1) == 0)
    {
      if (qword_1EFA5D520 != -1)
        swift_once();
      v69 = *(_QWORD *)(v0 + 208);
      v71 = *(_QWORD *)(v0 + 184);
      v70 = *(_QWORD *)(v0 + 192);
      v72 = *(_QWORD *)(v0 + 176);
      v74 = *(_QWORD *)(v0 + 152);
      v73 = *(_QWORD *)(v0 + 160);
      v75 = *(_QWORD *)(v0 + 144);
      v76 = *(_QWORD *)(v0 + 80);
      v77 = sub_1CE0B6080();
      __swift_project_value_buffer(v77, (uint64_t)qword_1EFA634C8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v69, v76, v71);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v73, v72, v75);
      v78 = sub_1CE0B6068();
      v79 = sub_1CE0B671C();
      v80 = os_log_type_enabled(v78, v79);
      v81 = *(_QWORD *)(v0 + 208);
      v83 = *(_QWORD *)(v0 + 184);
      v82 = *(_QWORD *)(v0 + 192);
      v84 = *(_QWORD *)(v0 + 176);
      v85 = *(_QWORD *)(v0 + 152);
      v86 = *(_QWORD *)(v0 + 160);
      v87 = *(_QWORD *)(v0 + 144);
      if (v80)
      {
        v103 = *(_QWORD *)(v0 + 152);
        v100 = *(_QWORD *)(v0 + 184);
        v88 = swift_slowAlloc();
        v102 = swift_slowAlloc();
        v112 = v102;
        *(_DWORD *)v88 = 136315650;
        v89 = sub_1CE0B6DF4();
        *(_QWORD *)(v0 + 40) = sub_1CDFC7270(v89, v90, &v112);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v88 + 12) = 2080;
        v91 = sub_1CE0B458C();
        *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v91, v92, &v112);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v100);
        *(_WORD *)(v88 + 22) = 2080;
        v93 = sub_1CE0B5C9C();
        *(_QWORD *)(v0 + 56) = sub_1CDFC7270(v93, v94, &v112);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        v95 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
        v95(v86, v87);
        _os_log_impl(&dword_1CDFAA000, v78, v79, "%s] Can't update session %s while waiting for session %s", (uint8_t *)v88, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v102, -1, -1);
        MEMORY[0x1D17C092C](v88, -1, -1);

        v95(v84, v87);
      }
      else
      {

        v97 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
        v97(v86, v87);
        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
        v97(v84, v87);
      }
      goto LABEL_32;
    }
  }
  v59 = *(_QWORD *)(v0 + 232);
  v60 = *(_QWORD *)(v0 + 168);
  v61 = *(_QWORD *)(v0 + 144);
  v62 = *(_QWORD *)(v0 + 152);
  v63 = *(_QWORD *)(v0 + 96);
  v64 = *(_QWORD *)(v0 + 88);
  static Session.+ infix(_:_:)(v60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v59, v60, v61);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 40))(v59, v64, v63);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 56))(v60, v64, v63) & 1) != 0)
  {
    v111 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 96) + 64)
                                                          + *(_QWORD *)(*(_QWORD *)(v0 + 96) + 64));
    v65 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v65;
    *v65 = v0;
    v65[1] = sub_1CE044B24;
    return v111(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  v66 = *(_QWORD *)(v0 + 176);
  v67 = *(_QWORD *)(v0 + 144);
  v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 8);
  v68(*(_QWORD *)(v0 + 168), v67);
  v68(v66, v67);
LABEL_32:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE044B24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE044B84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 8);
  v3(*(_QWORD *)(v0 + 168), v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE044C54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE044CB4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE044D74()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD);

  v1 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8);
  v1(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));
  v1(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE044E50()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *sub_1CE044F1C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;

  v6 = sub_1CE0B5E04();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64);
  v10 = (*(_BYTE *)(v8 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 <= 7
    && (unint64_t)(v9 + 1) <= 0x18
    && ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) == 0)
  {
    v14 = *((unsigned __int8 *)a2 + v9);
    if (v14 >= 2)
    {
      if (v9 <= 3)
        v15 = v9;
      else
        v15 = 4;
      __asm { BR              X16 }
    }
    if (v14 == 1)
    {
      (*(void (**)(uint64_t *, uint64_t *))(v8 + 16))(a1, a2);
      *((_BYTE *)a1 + v9) = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
      *((_BYTE *)a1 + v9) = 0;
    }
  }
  else
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1CE04507C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v6 = sub_1CE0B5E04();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64);
  v10 = *(unsigned __int8 *)(a2 + v9);
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X15 }
  }
  if (v10 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(a1, a2);
    *(_BYTE *)(a1 + v9) = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
    *(_BYTE *)(a1 + v9) = 0;
  }
  return a1;
}

uint64_t sub_1CE045198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  if (a1 != a2)
  {
    v6 = sub_1CE0B5E04();
    v7 = v6;
    v8 = *(_QWORD *)(v6 - 8);
    v9 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_QWORD *)(v10 + 64) <= *(_QWORD *)(v8 + 64))
      v11 = *(_QWORD *)(v8 + 64);
    else
      v11 = *(_QWORD *)(v10 + 64);
    if (*(unsigned __int8 *)(a1 + v11) >= 2u)
    {
      if (v11 <= 3)
        v12 = v11;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = *(_QWORD *)(v6 - 8);
    v14 = v6;
    if (*(_BYTE *)(a1 + v11))
    {
      v13 = *(_QWORD *)(v9 - 8);
      v14 = v9;
    }
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v14);
    v15 = *(unsigned __int8 *)(a2 + v11);
    if (v15 >= 2)
    {
      if (v11 <= 3)
        v16 = v11;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1, a2, v9);
      *(_BYTE *)(a1 + v11) = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, v7);
      *(_BYTE *)(a1 + v11) = 0;
    }
  }
  return a1;
}

uint64_t sub_1CE045368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v6 = sub_1CE0B5E04();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v8 + 64) <= *(_QWORD *)(v7 + 64))
    v9 = *(_QWORD *)(v7 + 64);
  else
    v9 = *(_QWORD *)(v8 + 64);
  v10 = *(unsigned __int8 *)(a2 + v9);
  if (v10 >= 2)
  {
    if (v9 <= 3)
      v11 = v9;
    else
      v11 = 4;
    __asm { BR              X15 }
  }
  if (v10 == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 32))(a1, a2);
    *(_BYTE *)(a1 + v9) = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
    *(_BYTE *)(a1 + v9) = 0;
  }
  return a1;
}

uint64_t sub_1CE045484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  if (a1 != a2)
  {
    v6 = sub_1CE0B5E04();
    v7 = v6;
    v8 = *(_QWORD *)(v6 - 8);
    v9 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_QWORD *)(v10 + 64) <= *(_QWORD *)(v8 + 64))
      v11 = *(_QWORD *)(v8 + 64);
    else
      v11 = *(_QWORD *)(v10 + 64);
    if (*(unsigned __int8 *)(a1 + v11) >= 2u)
    {
      if (v11 <= 3)
        v12 = v11;
      else
        v12 = 4;
      __asm { BR              X12 }
    }
    v13 = *(_QWORD *)(v6 - 8);
    v14 = v6;
    if (*(_BYTE *)(a1 + v11))
    {
      v13 = *(_QWORD *)(v9 - 8);
      v14 = v9;
    }
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v14);
    v15 = *(unsigned __int8 *)(a2 + v11);
    if (v15 >= 2)
    {
      if (v11 <= 3)
        v16 = v11;
      else
        v16 = 4;
      __asm { BR              X12 }
    }
    if (v15 == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1, a2, v9);
      *(_BYTE *)(a1 + v11) = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, v7);
      *(_BYTE *)(a1 + v11) = 0;
    }
  }
  return a1;
}

uint64_t sub_1CE045654(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  int v10;
  unsigned int v12;
  int v13;
  unsigned int v14;

  v6 = sub_1CE0B5E04();
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (v7 <= *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64))
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v8 = v7 + 1;
  v9 = 8 * (v7 + 1);
  if ((v7 + 1) <= 3)
  {
    v12 = ((a2 + ~(-1 << v9) - 253) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = *(_DWORD *)(a1 + v8);
      if (!v10)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 > 0xFF)
    {
      v10 = *(unsigned __int16 *)(a1 + v8);
      if (!*(_WORD *)(a1 + v8))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 < 2)
    {
LABEL_21:
      v14 = *(unsigned __int8 *)(a1 + v7);
      if (v14 >= 3)
        return (v14 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v10 = *(unsigned __int8 *)(a1 + v8);
  if (!*(_BYTE *)(a1 + v8))
    goto LABEL_21;
LABEL_14:
  v13 = (v10 - 1) << v9;
  if (v8 > 3)
    v13 = 0;
  if ((_DWORD)v8)
  {
    if (v8 > 3)
      LODWORD(v8) = 4;
    __asm { BR              X11 }
  }
  return (v13 + 254);
}

void sub_1CE045798(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8;
  size_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v8 = *(_QWORD *)(*(_QWORD *)(sub_1CE0B5E04() - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64) > v8)
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v9 = v8 + 1;
  if (a3 < 0xFE)
  {
    v10 = 0u;
  }
  else if (v9 <= 3)
  {
    v12 = ((a3 + ~(-1 << (8 * v9)) - 253) >> (8 * v9)) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v11 = a2 - 254;
  if (v9 < 4)
  {
    if ((_DWORD)v8 != -1)
    {
      v13 = v11 & ~(-1 << (8 * v9));
      bzero(a1, v9);
      if ((_DWORD)v9 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if ((_DWORD)v9 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
  }
  else
  {
    bzero(a1, v8 + 1);
    *(_DWORD *)a1 = v11;
  }
  __asm { BR              X10 }
}

uint64_t sub_1CE045958(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = *(_QWORD *)(*(_QWORD *)(sub_1CE0B5E04() - 8) + 64);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > v4)
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  result = *(unsigned __int8 *)(a1 + v4);
  if (result >= 2)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t dispatch thunk of SessionMonitorStateProtocol.token.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionMonitor.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SessionMonitor.state.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SessionMonitor.state.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SessionMonitor.shouldStartSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SessionMonitor.startSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 64) + *(_QWORD *)(a3 + 64));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionMonitor.sessionUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 72) + *(_QWORD *)(a4 + 72));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.endSession(session:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 80) + *(_QWORD *)(a4 + 80));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD3C;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.playbackUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 88) + *(_QWORD *)(a4 + 88));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.activityRingsUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 96) + *(_QWORD *)(a4 + 96));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.workoutDeviceConnectionUpdated(_:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 104) + *(_QWORD *)(a4 + 104));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SessionMonitor.handleSessionActivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 112) + *(_QWORD *)(a3 + 112));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionMonitor.handleSessionDeactivated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 120) + *(_QWORD *)(a3 + 120));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SessionMonitor.handleSessionUpdated(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 128) + *(_QWORD *)(a3 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t sub_1CE045EA8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t MultiUserSessionConnected.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MultiUserSessionConnected.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MultiUserSessionConnected.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MultiUserSessionConnected()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE045F50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserSessionConnected()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE045F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserSessionConnected()
{
  uint64_t result;

  result = qword_1EFA60E38;
  if (!qword_1EFA60E38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t XPCStreamEventReceived.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static XPCStreamEventReceived.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

_QWORD *assignWithCopy for XPCStreamEventReceived(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for XPCStreamEventReceived(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCStreamEventReceived(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCStreamEventReceived(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCStreamEventReceived()
{
  return &type metadata for XPCStreamEventReceived;
}

uint64_t MultiUserCelebrationRequested.init(celebration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t MultiUserCelebrationRequested.celebration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static MultiUserCelebrationRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MultiUserCelebrationRequested(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserCelebrationRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserCelebrationRequested()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE046364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserCelebrationRequested()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0463AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserCelebrationRequested()
{
  uint64_t result;

  result = qword_1EFA60EC8;
  if (!qword_1EFA60EC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE046428()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t TrainerEventStarted.trainerEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TrainerEventStarted.init(trainerEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static TrainerEventStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for TrainerEventStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE046520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TrainerEventStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE046568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainerEventStarted()
{
  uint64_t result;

  result = qword_1EFA60F58;
  if (!qword_1EFA60F58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0465E4()
{
  return type metadata accessor for Signpost();
}

uint64_t sub_1CE0465EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CE0B6020();
  if (v1 <= 0x3F)
  {
    result = sub_1CE0B5FFC();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for Signpost.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for Signpost.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for Signpost.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Signpost.State()
{
  return &type metadata for Signpost.State;
}

unint64_t static EntitlementConstants.daemon.getter()
{
  return 0xD000000000000011;
}

unint64_t static EntitlementConstants.sessionDaemon.getter()
{
  return 0xD000000000000019;
}

ValueMetadata *type metadata accessor for EntitlementConstants()
{
  return &type metadata for EntitlementConstants;
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.beginAdvertisingParticipantHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.endAdvertisingParticipantHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.endDiscoveringParticipants()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.tryPassword(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t static String.read(from:key:)(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;

  v2 = (void *)sub_1CE0B626C();
  v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (!v3)
    return 0;
  v4 = sub_1CE0B6278();

  return v4;
}

Swift::Void __swiftcall String.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  Class isa;
  void *v3;
  id v4;

  isa = to.super.isa;
  v3 = (void *)sub_1CE0B626C();
  v4 = (id)sub_1CE0B626C();
  -[objc_class setObject:forKey:](isa, sel_setObject_forKey_, v3, v4);

}

void sub_1CE04689C(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_1CE0B626C();
  v3 = (id)sub_1CE0B626C();
  objc_msgSend(a1, sel_setObject_forKey_, v2, v3);

}

uint64_t static Int.read(from:key:)(void *a1)
{
  return sub_1CE047C90(a1);
}

Swift::Void __swiftcall Int.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  CFStringRef container;
  Class isa;
  id v4;

  container = to._container_;
  isa = to.super.isa;
  v4 = (id)sub_1CE0B626C();
  -[objc_class setInteger:forKey:](isa, sel_setInteger_forKey_, container, v4);

}

uint64_t sub_1CE046980@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1CE047C90(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1CE0469B4(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;

  v3 = *v1;
  v4 = (id)sub_1CE0B626C();
  objc_msgSend(a1, sel_setInteger_forKey_, v3, v4);

}

uint64_t static UInt64.read(from:key:)(void *a1)
{
  return sub_1CE047C90(a1);
}

Swift::Void __swiftcall UInt64.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  Class isa;
  void *v3;
  id v4;

  isa = to.super.isa;
  v3 = (void *)sub_1CE0B6DB8();
  v4 = (id)sub_1CE0B626C();
  -[objc_class setObject:forKey:](isa, sel_setObject_forKey_, v3, v4);

}

uint64_t sub_1CE046A98@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1CE047C90(a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

void sub_1CE046ACC(void *a1)
{
  void *v2;
  id v3;

  v2 = (void *)sub_1CE0B6DB8();
  v3 = (id)sub_1CE0B626C();
  objc_msgSend(a1, sel_setObject_forKey_, v2, v3);

}

Swift::Void __swiftcall Bool.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  char container;
  Class isa;
  id v4;

  container = (char)to._container_;
  isa = to.super.isa;
  v4 = (id)sub_1CE0B626C();
  -[objc_class setBool:forKey:](isa, sel_setBool_forKey_, container & 1, v4);

}

void sub_1CE046B94(void *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  id v4;

  v3 = *v1;
  v4 = (id)sub_1CE0B626C();
  objc_msgSend(a1, sel_setBool_forKey_, v3, v4);

}

uint64_t static Double.read(from:key:)(void *a1, uint64_t a2, unint64_t a3)
{
  return sub_1CDFBF778(a1, a2, a3);
}

Swift::Void __swiftcall Double.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  double v2;
  double v3;
  Class isa;
  id v5;

  v3 = v2;
  isa = to.super.isa;
  v5 = (id)sub_1CE0B626C();
  -[objc_class setDouble:forKey:](isa, sel_setDouble_forKey_, v5, v3);

}

void sub_1CE046C5C(void *a1)
{
  double *v1;
  double v3;
  id v4;

  v3 = *v1;
  v4 = (id)sub_1CE0B626C();
  objc_msgSend(a1, sel_setDouble_forKey_, v4, v3);

}

uint64_t static Float.read(from:key:)(void *a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;

  v3 = sub_1CE04778C(a1, a2, a3);
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

Swift::Void __swiftcall Float.write(to:key:)(NSUserDefaults to, Swift::String key)
{
  int v2;
  int v3;
  Class isa;
  double v5;
  id v6;

  v3 = v2;
  isa = to.super.isa;
  v6 = (id)sub_1CE0B626C();
  LODWORD(v5) = v3;
  -[objc_class setFloat:forKey:](isa, sel_setFloat_forKey_, v6, v5);

}

unint64_t sub_1CE046D3C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t result;

  result = sub_1CE04778C(a1, a2, a3);
  *(_DWORD *)a4 = result;
  *(_BYTE *)(a4 + 4) = BYTE4(result) & 1;
  return result;
}

void sub_1CE046D68(void *a1)
{
  int *v1;
  int v3;
  double v4;
  id v5;

  v3 = *v1;
  v5 = (id)sub_1CE0B626C();
  LODWORD(v4) = v3;
  objc_msgSend(a1, sel_setFloat_forKey_, v5, v4);

}

uint64_t Optional<A>.write(to:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v10 = *(_QWORD *)(a4 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v11);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v20, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, a4);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v13, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 16))(a1, a2, a3, v15, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1CE046EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Optional<A>.write(to:key:)(a1, a2, a3, a4, *(_QWORD *)(a5 - 8));
}

uint64_t static Array<A>.read(from:key:)(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  _OWORD v9[2];
  _QWORD v10[4];

  v2 = (void *)sub_1CE0B626C();
  v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1CE0B6938();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1CDFBFD6C((uint64_t)v9, (uint64_t)v10);
  if (!v10[3])
  {
    sub_1CDFBFDB4((uint64_t)v10);
    return 0;
  }
  swift_getAssociatedTypeWitness();
  v4 = sub_1CE0B64C4();
  v5 = swift_dynamicCast();
  if ((v5 & 1) == 0)
    return 0;
  v10[0] = v8;
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v4);
  v6 = sub_1CE0B6398();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1CE047090(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v3 + 16))((char *)&v6 - v4, a1);
  return sub_1CE0B63EC();
}

void Array<A>.write(to:key:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  char *AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD v14[8];

  v14[7] = a4;
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a7;
  v8 = sub_1CE0B64C4();
  AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  v10 = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF50], v8);
  sub_1CE0103A0((void (*)(char *, char *))sub_1CE047D90, (uint64_t)v14, v8, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v11);
  v12 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1CE0B626C();
  objc_msgSend(a1, sel_setObject_forKey_, v12, v13);

}

uint64_t sub_1CE04725C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = static Array<A>.read(from:key:)(a1);
  *a2 = result;
  return result;
}

void sub_1CE04728C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  Array<A>.write(to:key:)(a1, a2, a3, *v5, *(_QWORD *)(a4 + 16), *(_QWORD *)(a5 - 8), *(_QWORD *)(a5 - 16));
}

uint64_t static DefaultsStorable<>.read(from:key:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(unint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a1;
  v50 = a7;
  v12 = sub_1CE0B68A8();
  v45 = *(_QWORD *)(v12 - 8);
  v46 = v12;
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v43 - v13;
  v47 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = sub_1CE0B68A8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v43 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v43 - v23;
  v25 = *(void (**)(unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(a6 + 8);
  v26 = v49;
  v44 = a2;
  v49 = a3;
  v27 = a3;
  v29 = v28;
  v25(v26, a2, v27, AssociatedTypeWitness, a6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v19, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56);
    v31 = v50;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v24, v19, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v22, v24, AssociatedTypeWitness);
    v32 = v48;
    sub_1CE0B63EC();
    v33 = *(_QWORD *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, a4) != 1)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v24, AssociatedTypeWitness);
      v41 = v50;
      (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v50, v32, a4);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v41, 0, 1, a4);
    }
    v47 = v29;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v46);
    if (qword_1ED8F1890 != -1)
      swift_once();
    v34 = sub_1CE0B6080();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED8F1870);
    v35 = v49;
    swift_bridgeObjectRetain_n();
    v36 = sub_1CE0B6068();
    v37 = sub_1CE0B671C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v48 = v24;
      v40 = v39;
      *(_DWORD *)v38 = 141558274;
      v51 = 1752392040;
      v52 = v39;
      sub_1CE0B68F0();
      *(_WORD *)(v38 + 12) = 2080;
      swift_bridgeObjectRetain();
      v51 = sub_1CDFC7270(v44, v35, &v52);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CDFAA000, v36, v37, "Couldn't parse user default %{mask.hash}s.", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v40, -1, -1);
      MEMORY[0x1D17C092C](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v47 + 8))(v48, AssociatedTypeWitness);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v24, AssociatedTypeWitness);
    }
    v31 = v50;
    v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
  }
  return v30(v31, 1, 1, a4);
}

uint64_t DefaultsStorable<>.write(to:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v16 - v13;
  sub_1CE0B63E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 16))(a1, a2, a3, AssociatedTypeWitness, a7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, AssociatedTypeWitness);
}

unint64_t sub_1CE04778C(void *a1, uint64_t a2, unint64_t a3)
{
  void *v6;
  id v7;
  float v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  float v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _BYTE *v24;
  uint64_t v26[4];
  uint64_t v27;
  double v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];

  v6 = (void *)sub_1CE0B626C();
  v7 = objc_msgSend(a1, sel_valueForKey_, v6);

  if (!v7)
    goto LABEL_28;
  sub_1CE0B6938();
  swift_unknownObjectRelease();
  sub_1CDFB96B0(&v30, v32);
  sub_1CDFC74F8((uint64_t)v32, (uint64_t)&v30);
  if (swift_dynamicCast())
  {
    v8 = *(float *)&v28;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
    v9 = 0;
    goto LABEL_29;
  }
  sub_1CDFC74F8((uint64_t)v32, (uint64_t)&v30);
  v10 = swift_dynamicCast();
  if (!(_DWORD)v10)
  {
    sub_1CDFC74F8((uint64_t)v32, (uint64_t)&v30);
    if (swift_dynamicCast())
    {
      v14 = v28;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
      v9 = 0;
      v8 = v14;
      goto LABEL_29;
    }
    if (qword_1ED8F1890 != -1)
      swift_once();
    v15 = sub_1CE0B6080();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F1870);
    sub_1CDFC74F8((uint64_t)v32, (uint64_t)&v30);
    sub_1CDFC74F8((uint64_t)v32, (uint64_t)&v28);
    swift_bridgeObjectRetain_n();
    v16 = sub_1CE0B6068();
    v17 = sub_1CE0B671C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v27 = v19;
      *(_DWORD *)v18 = 136315650;
      swift_bridgeObjectRetain();
      sub_1CDFC7270(a2, a3, &v27);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v18 + 12) = 2080;
      __swift_project_boxed_opaque_existential_1(&v30, v31);
      v9 = 1;
      swift_getDynamicType();
      v20 = sub_1CE0B6DF4();
      v26[0] = sub_1CDFC7270(v20, v21, &v27);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
      *(_WORD *)(v18 + 22) = 2080;
      sub_1CDFC74F8((uint64_t)&v28, (uint64_t)v26);
      v22 = sub_1CE0B6290();
      v26[0] = sub_1CDFC7270(v22, v23, &v27);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
      _os_log_impl(&dword_1CDFAA000, v16, v17, "Couldn't parse Float at %s with type %s and value %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v19, -1, -1);
      MEMORY[0x1D17C092C](v18, -1, -1);

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
      v8 = 0.0;
      goto LABEL_29;
    }

    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v28);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
    swift_bridgeObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
LABEL_28:
    v8 = 0.0;
    v9 = 1;
    goto LABEL_29;
  }
  LODWORD(v28) = 0;
  MEMORY[0x1E0C80A78](v10);
  if ((v29 & 0x1000000000000000) != 0 || !(v29 & 0x2000000000000000 | v11 & 0x1000000000000000))
  {
    sub_1CE0B69F8();
    swift_bridgeObjectRelease();
    v13 = v30;
  }
  else if ((v29 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)&v30 = v11;
    *((_QWORD *)&v30 + 1) = v29 & 0xFFFFFFFFFFFFFFLL;
    v13 = (v11 > 0x20u || ((0x100003E01uLL >> v11) & 1) == 0)
       && (v24 = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0
       && *v24 == 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((v11 & 0x1000000000000000) != 0)
      v12 = (_BYTE *)((v29 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v12 = (_BYTE *)sub_1CE0B6A64();
    sub_1CE047DD0(v12, (BOOL *)&v30);
    v13 = v30;
    swift_bridgeObjectRelease();
  }
  if (v13)
    v8 = *(float *)&v28;
  else
    v8 = 0.0;
  v9 = v13 ^ 1;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v32);
LABEL_29:
  LOBYTE(v32[0]) = v9;
  return LODWORD(v8) | ((unint64_t)v9 << 32);
}

uint64_t sub_1CE047C90(void *a1)
{
  void *v2;
  id v3;
  uint64_t v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v2 = (void *)sub_1CE0B626C();
  v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1CE0B6938();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1CDFBFD6C((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast())
      return v5;
    else
      return 0;
  }
  else
  {
    sub_1CDFBFDB4((uint64_t)v7);
    return 0;
  }
}

uint64_t sub_1CE047D74(uint64_t a1)
{
  return sub_1CE047090(a1);
}

uint64_t sub_1CE047D90()
{
  return sub_1CE0B63E0();
}

uint64_t dispatch thunk of static DefaultsStorable.read(from:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of DefaultsStorable.write(to:key:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

_BYTE *sub_1CE047DD0@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1CE047E08(a1, MEMORY[0x1E0DEEA58], a2);
}

_BYTE *sub_1CE047DEC@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1CE047E08(a1, MEMORY[0x1E0DEEA50], a2);
}

_BYTE *sub_1CE047E08@<X0>(_BYTE *result@<X0>, uint64_t (*a2)(void)@<X1>, BOOL *a3@<X8>)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  BOOL v7;
  BOOL v8;

  v4 = *result;
  v5 = v4 > 0x20;
  v6 = (1 << v4) & 0x100003E01;
  v7 = v5 || v6 == 0;
  v8 = v7 && (result = (_BYTE *)a2()) != 0 && *result == 0;
  *a3 = v8;
  return result;
}

uint64_t SessionToken.__allocating_init(sessionIdentifier:state:)(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t result;

  v5 = a3 & 1;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_BYTE *)(result + 32) = v5;
  return result;
}

SeymourClient::SessionToken::State_optional __swiftcall SessionToken.State.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  SeymourClient::SessionToken::State_optional v2;

  v1 = sub_1CE0B6BC0();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = SeymourClient_SessionToken_State_inactive;
  else
    v2.value = SeymourClient_SessionToken_State_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t SessionToken.State.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6576697463616E69;
  else
    return 0x657669746361;
}

uint64_t sub_1CE047F40(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6576697463616E69;
  else
    v3 = 0x657669746361;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE800000000000000;
  if (*a2)
    v5 = 0x6576697463616E69;
  else
    v5 = 0x657669746361;
  if (*a2)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1CE047FE4()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE048060()
{
  sub_1CE0B62CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE0480B8()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE048130@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1CE0B6BC0();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1CE04818C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x657669746361;
  if (*v1)
    v2 = 0x6576697463616E69;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t SessionToken.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SessionToken.init(sessionIdentifier:state:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3 & 1;
  return v3;
}

uint64_t SessionToken.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SessionToken.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CE04824C(uint64_t *a1, uint64_t *a2)
{
  return _s13SeymourClient12SessionTokenC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t SessionToken.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B6350();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D40();
}

uint64_t SessionToken.hashValue.getter()
{
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B6350();
  swift_bridgeObjectRelease();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0483B8()
{
  return SessionToken.hashValue.getter();
}

uint64_t sub_1CE0483D8()
{
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B6350();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D40();
}

uint64_t sub_1CE048484()
{
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B6350();
  swift_bridgeObjectRelease();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t _s13SeymourClient12SessionTokenC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  uint64_t result;

  v4 = *(_BYTE *)(a1 + 32) == 0;
  if (*(_BYTE *)(a1 + 32))
    v5 = 0x6576697463616E69;
  else
    v5 = 0x657669746361;
  if (v4)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE800000000000000;
  if (*(_BYTE *)(a2 + 32))
    v7 = 0x6576697463616E69;
  else
    v7 = 0x657669746361;
  if (*(_BYTE *)(a2 + 32))
    v8 = 0xE800000000000000;
  else
    v8 = 0xE600000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v10 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1CE0B6C50();
}

unint64_t sub_1CE048630()
{
  unint64_t result;

  result = qword_1EFA60F90;
  if (!qword_1EFA60F90)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for SessionToken.State, &type metadata for SessionToken.State);
    atomic_store(result, (unint64_t *)&qword_1EFA60F90);
  }
  return result;
}

unint64_t sub_1CE048678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA60F98;
  if (!qword_1EFA60F98)
  {
    v1 = type metadata accessor for SessionToken();
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for SessionToken, v1);
    atomic_store(result, (unint64_t *)&qword_1EFA60F98);
  }
  return result;
}

uint64_t type metadata accessor for SessionToken()
{
  return objc_opt_self();
}

uint64_t method lookup function for SessionToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionToken.__allocating_init(sessionIdentifier:state:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 120))(a1, a2, a3 & 1);
}

uint64_t storeEnumTagSinglePayload for SessionToken.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE048740 + 4 * byte_1CE0C258D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE048774 + 4 * byte_1CE0C2588[v4]))();
}

uint64_t sub_1CE048774(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE04877C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE048784);
  return result;
}

uint64_t sub_1CE048790(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE048798);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE04879C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0487A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionToken.State()
{
  return &type metadata for SessionToken.State;
}

uint64_t HeartRateMetric.applyingTimestampOffset(_:)()
{
  sub_1CE0B4A54();
  return sub_1CE0B4A60();
}

uint64_t sub_1CE048830()
{
  sub_1CE0B4A54();
  return sub_1CE0B4A60();
}

double ArchivedSessionHealthKitStatistics.energyBurned.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

uint64_t ArchivedSessionHealthKitStatistics.workoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for ArchivedSessionHealthKitStatistics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ArchivedSessionHealthKitStatistics()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for ArchivedSessionHealthKitStatistics(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for ArchivedSessionHealthKitStatistics(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  v3 = a2[2];
  a1[1] = a2[1];
  a1[2] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ArchivedSessionHealthKitStatistics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArchivedSessionHealthKitStatistics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchivedSessionHealthKitStatistics()
{
  return &type metadata for ArchivedSessionHealthKitStatistics;
}

uint64_t sub_1CE048A44@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1CDFBA114;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_1CDFB6BE4(v4);
}

uint64_t sub_1CE048AD8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1CDFBA114;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_1CDFB6BE4(v3);
  return sub_1CDFC2DA0(v8);
}

uint64_t sub_1CE048B90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  v2 = *v1;
  sub_1CDFB6BE4(*v1);
  return v2;
}

uint64_t sub_1CE048BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1CDFC2DA0(v6);
}

uint64_t (*sub_1CE048C44())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t DispatchTimer.__allocating_init(fireInterval:leewayInterval:queue:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v6 = swift_allocObject();
  v7 = (_QWORD *)(v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer) = 0;
  *(double *)(v6 + 16) = a3;
  v8 = v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  v9 = sub_1CE0B6134();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_queue) = a2;
  return v6;
}

uint64_t DispatchTimer.init(fireInterval:leewayInterval:queue:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6 = (_QWORD *)(v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer) = 0;
  *(double *)(v3 + 16) = a3;
  v7 = v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  v8 = sub_1CE0B6134();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_queue) = a2;
  return v3;
}

uint64_t DispatchTimer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CE0B67DC();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + v2) = 0;
  swift_unknownObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  v4 = sub_1CE0B6134();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  sub_1CDFC2DA0(*(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire));
  swift_unknownObjectRelease();
  return v1;
}

uint64_t DispatchTimer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CE0B67DC();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + v2) = 0;
  swift_unknownObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
  v4 = sub_1CE0B6134();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

  sub_1CDFC2DA0(*(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire));
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CE048F44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v1 = sub_1CE0B6170();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  sub_1CE0B6164();
  MEMORY[0x1D17BF4F8](v5, *(double *)(v0 + 16));
  v8 = *(void (**)(char *, uint64_t))(v2 + 8);
  v8(v5, v1);
  sub_1CE049068((uint64_t)v7);
  return ((uint64_t (*)(char *, uint64_t))v8)(v7, v1);
}

uint64_t sub_1CE049000()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CE0B67DC();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v0 + v1) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_1CE049068(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_1CE0B6140();
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B6158();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B67AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B6134();
  v32 = *(_QWORD *)(v14 - 8);
  v33 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    ObjectType = swift_getObjectType();
    v19 = v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
    sub_1CDFB709C((uint64_t)v16);
    swift_unknownObjectRetain();
    MEMORY[0x1D17BFBA0](a1, v16, v19, ObjectType);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v16, v33);
  }
  else
  {
    v26 = sub_1CDFB7190();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1CE04981C();
    v27 = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F0CA0);
    sub_1CE049864();
    sub_1CE0B6944();
    v21 = sub_1CE0B67B8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v22 = swift_getObjectType();
    v23 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1CE0498D4;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_9;
    v24 = _Block_copy(aBlock);
    swift_retain();
    sub_1CDFB70E0();
    sub_1CDFB70E4();
    sub_1CE0B67D0();
    _Block_release(v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    swift_release();
    swift_release();
    v25 = v2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval;
    sub_1CDFB709C((uint64_t)v16);
    MEMORY[0x1D17BFBA0](v27, v16, v25, v22);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v33);
    sub_1CE0B67F4();
    *(_QWORD *)(v2 + v17) = v21;
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1CE0493B0()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  void (**v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
    if (*(_QWORD *)(result + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1CE0B67DC();
      swift_unknownObjectRelease();
    }
    *(_QWORD *)(v1 + v2) = 0;
    swift_unknownObjectRelease();
    v3 = (void (**)(uint64_t))(v1 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
    swift_beginAccess();
    v4 = *v3;
    if (*v3)
    {
      v5 = swift_retain();
      v4(v5);
      sub_1CDFC2DA0((uint64_t)v4);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE049494()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  v2 = *v1;
  sub_1CDFB6BE4(*v1);
  return v2;
}

uint64_t sub_1CE0494F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(*v2 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1CDFC2DA0(v6);
}

uint64_t (*sub_1CE049550())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1CE049598()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v1 = sub_1CE0B6170();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = *v0;
  sub_1CE0B6164();
  MEMORY[0x1D17BF4F8](v5, *(double *)(v8 + 16));
  v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v5, v1);
  sub_1CE049068((uint64_t)v7);
  return ((uint64_t (*)(char *, uint64_t))v9)(v7, v1);
}

uint64_t sub_1CE049658()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer;
  if (*(_QWORD *)(*v0 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CE0B67DC();
    swift_unknownObjectRelease();
  }
  *(_QWORD *)(v1 + v2) = 0;
  return swift_unknownObjectRelease();
}

uint64_t sub_1CE0496C8()
{
  return type metadata accessor for DispatchTimer();
}

uint64_t type metadata accessor for DispatchTimer()
{
  uint64_t result;

  result = qword_1EFA61098;
  if (!qword_1EFA61098)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE04970C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B6134();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DispatchTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DispatchTimer.onFire.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DispatchTimer.onFire.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DispatchTimer.onFire.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DispatchTimer.__allocating_init(fireInterval:leewayInterval:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DispatchTimer.schedule()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DispatchTimer.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1CE0497F8()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1CE04981C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F0CC0;
  if (!qword_1ED8F0CC0)
  {
    v1 = sub_1CE0B67AC();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEF948], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F0CC0);
  }
  return result;
}

unint64_t sub_1CE049864()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F0CB0;
  if (!qword_1ED8F0CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED8F0CA0);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F0CB0);
  }
  return result;
}

uint64_t sub_1CE0498B0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE0498D4()
{
  return sub_1CE0493B0();
}

uint64_t PortableEnum<>.isGuided.getter(char a1, uint64_t a2, unsigned __int8 a3)
{
  return a3 & ((a1 & 0xFE) == 0);
}

BOOL CatalogMediaType.isGuided.getter(unsigned __int8 a1)
{
  return a1 < 2u;
}

uint64_t WorkoutUpdated.workout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5EAC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WorkoutUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WorkoutUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for WorkoutUpdated()
{
  uint64_t result;

  result = qword_1EFA61248;
  if (!qword_1EFA61248)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t WorkoutUpdated.init(workout:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B5EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for WorkoutUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static WorkoutUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for WorkoutUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B5EAC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WorkoutUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5EAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B5EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B5EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B5EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for WorkoutUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B5EAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE049CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B5EAC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE049D48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B5EAC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CE049DC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5EAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL CommunityScores.isEmpty.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  BOOL v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1CE0B4A00();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v21 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  v12 = *(_QWORD *)(sub_1CE0B49DC() + 16);
  swift_bridgeObjectRelease();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v13(v11, v1, v2);
  if (v12)
  {
    v14 = *(_QWORD *)(sub_1CE0B49C4() + 16);
    swift_bridgeObjectRelease();
    v15 = v14 == 0;
  }
  else
  {
    v15 = 1;
  }
  v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v11, v2);
  v13(v9, v1, v2);
  if (v15)
  {
    v16(v9, v2);
    v13(v6, v1, v2);
LABEL_8:
    v19 = 1;
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(sub_1CE0B49D0() + 16);
  swift_bridgeObjectRelease();
  v16(v9, v2);
  v13(v6, v1, v2);
  if (!v17)
    goto LABEL_8;
  v18 = *(_QWORD *)(sub_1CE0B49E8() + 16);
  swift_bridgeObjectRelease();
  v19 = v18 == 0;
LABEL_9:
  v16(v6, v2);
  return v19;
}

uint64_t BuildVersion.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t inited;
  _QWORD *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  unsigned int v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v6 = sub_1CE0B443C();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B4220();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v56 = a1;
  *((_QWORD *)&v56 + 1) = a2;
  v59 = 46;
  v60 = 0xE100000000000000;
  sub_1CDFC7620();
  v13 = (_QWORD *)sub_1CE0B6908();
  swift_bridgeObjectRelease();
  v14 = v13[2];
  if (!v14)
    goto LABEL_46;
  v55 = v8;
  v15 = v13[4];
  v16 = v13[5];
  v17 = v13 + 4;
  v18 = HIBYTE(v16) & 0xF;
  v19 = v15 & 0xFFFFFFFFFFFFLL;
  if (!((v16 & 0x2000000000000000) != 0 ? HIBYTE(v16) & 0xF : v15 & 0xFFFFFFFFFFFFLL))
    goto LABEL_46;
  if ((v16 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v22 = sub_1CE08F048(v15, v16, 10);
    LOBYTE(v15) = v50;
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if ((v16 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)&v56 = v13[4];
    *((_QWORD *)&v56 + 1) = v16 & 0xFFFFFFFFFFFFFFLL;
    if (v15 == 43)
    {
      if (!v18)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
      }
      if (v18 == 1 || (BYTE1(v15) - 48) > 9u)
        goto LABEL_32;
      v22 = (BYTE1(v15) - 48);
      if (v18 == 2)
        goto LABEL_34;
      if ((BYTE2(v15) - 48) <= 9u)
      {
        v22 = 10 * (BYTE1(v15) - 48) + (BYTE2(v15) - 48);
        v24 = v18 - 3;
        if (v24)
        {
          v25 = (unsigned __int8 *)&v56 + 3;
          while (1)
          {
            v26 = *v25 - 48;
            if (v26 > 9)
              goto LABEL_32;
            v27 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
              goto LABEL_32;
            v22 = v27 + v26;
            if (__OFADD__(v27, v26))
              goto LABEL_32;
            LOBYTE(v15) = 0;
            ++v25;
            if (!--v24)
              goto LABEL_35;
          }
        }
        goto LABEL_34;
      }
    }
    else
    {
      if (v15 == 45)
      {
        if (!v18)
        {
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        if (v18 == 1 || (BYTE1(v15) - 48) > 9u)
          goto LABEL_32;
        if (v18 == 2)
        {
          LOBYTE(v15) = 0;
          v22 = -(uint64_t)(BYTE1(v15) - 48);
          goto LABEL_35;
        }
        if ((BYTE2(v15) - 48) > 9u)
          goto LABEL_32;
        v22 = -10 * (BYTE1(v15) - 48) - (BYTE2(v15) - 48);
        v46 = v18 - 3;
        if (v46)
        {
          v47 = (unsigned __int8 *)&v56 + 3;
          while (1)
          {
            v48 = *v47 - 48;
            if (v48 > 9)
              goto LABEL_32;
            v49 = 10 * v22;
            if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
              goto LABEL_32;
            v22 = v49 - v48;
            if (__OFSUB__(v49, v48))
              goto LABEL_32;
            LOBYTE(v15) = 0;
            ++v47;
            if (!--v46)
              goto LABEL_35;
          }
        }
LABEL_34:
        LOBYTE(v15) = 0;
        goto LABEL_35;
      }
      if (v18 && (v15 - 48) <= 9u)
      {
        v22 = (v15 - 48);
        if (v18 == 1)
          goto LABEL_34;
        if ((BYTE1(v15) - 48) <= 9u)
        {
          v22 = 10 * (v15 - 48) + (BYTE1(v15) - 48);
          v42 = v18 - 2;
          if (v42)
          {
            v43 = (unsigned __int8 *)&v56 + 2;
            while (1)
            {
              v44 = *v43 - 48;
              if (v44 > 9)
                goto LABEL_32;
              v45 = 10 * v22;
              if ((unsigned __int128)(v22 * (__int128)10) >> 64 != (10 * v22) >> 63)
                goto LABEL_32;
              v22 = v45 + v44;
              if (__OFADD__(v45, v44))
                goto LABEL_32;
              LOBYTE(v15) = 0;
              ++v43;
              if (!--v42)
                goto LABEL_35;
            }
          }
          goto LABEL_34;
        }
      }
    }
LABEL_32:
    v22 = 0;
    LOBYTE(v15) = 1;
    goto LABEL_35;
  }
  if ((v15 & 0x1000000000000000) != 0)
    v21 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v21 = (unsigned __int8 *)sub_1CE0B6A64();
  v22 = (uint64_t)sub_1CE08EEF4(v21, v19, 10);
  LOBYTE(v15) = v23 & 1;
LABEL_35:
  if ((v15 & 1) == 0)
  {
    v28 = v13[2];
    if (v28 < 3)
    {
      v54 = v12;
      if (v28 == 2)
      {
        if (v14 > 2)
          goto LABEL_76;
        *(_QWORD *)&v56 = v13;
        *((_QWORD *)&v56 + 1) = v13 + 4;
        v57 = 1;
        v58 = (2 * v14) | 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61280);
        sub_1CDFE1194(&qword_1EFA61288, &qword_1EFA61280, MEMORY[0x1E0DEBF68]);
        sub_1CE0B6248();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1CE0B43F4();
      v12 = v54;
      sub_1CE0B4214();
      goto LABEL_52;
    }
    v52 = v22;
    v53 = a3;
    if (v14 >= 2)
      v29 = v14 - 2;
    else
      v29 = 0;
    if (v28 < v29)
    {
      __break(1u);
    }
    else
    {
      v30 = v28 - 2;
      if (v29 >= 1)
        v31 = 1;
      else
        v31 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1CE0BB0F0;
      v33 = &v17[2 * v28];
      v34 = *(v33 - 1);
      *(_QWORD *)(inited + 32) = *(v33 - 2);
      *(_QWORD *)(inited + 40) = v34;
      *(_QWORD *)&v56 = v13;
      *((_QWORD *)&v56 + 1) = v13 + 4;
      v57 = v31;
      v58 = (2 * v29) | 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CE04AD24(inited);
      v51 = v56;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61280);
      sub_1CDFE1194(&qword_1EFA61288, &qword_1EFA61280, MEMORY[0x1E0DEBF68]);
      sub_1CE0B6248();
      if (v30 < v13[2])
      {
        v35 = &v17[2 * v30];
        v36 = *v35;
        v37 = v35[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v38 = sub_1CE08EC14(v36, v37);
        sub_1CE02D9F0(v38, v39 & 1);
        sub_1CE0B4214();
        swift_unknownObjectRelease();
        a3 = v53;
LABEL_52:
        sub_1CE02E59C((uint64_t)v12, a3);
        v40 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v40, 1, v9);
      }
    }
    __break(1u);
    goto LABEL_74;
  }
LABEL_46:
  swift_bridgeObjectRelease();
  v40 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a3, v40, 1, v9);
}

uint64_t BuildVersion.rawValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;

  v1 = sub_1CE0B443C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v27 - v6;
  v28 = *v0;
  v8 = sub_1CE0B6C14();
  v10 = v9;
  v11 = v0[2];
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v0[1] & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    v28 = 46;
    v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_1CE0B62F0();
    swift_bridgeObjectRelease();
  }
  v28 = v8;
  v29 = v10;
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27[0] = 46;
  v27[1] = 0xE100000000000000;
  sub_1CDFC7620();
  v13 = sub_1CE0B6908();
  swift_bridgeObjectRelease();
  v28 = v13;
  v14 = (char *)v0 + *(int *)(sub_1CE0B4220() + 24);
  v15 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v15(v7, v14, v1);
  swift_bridgeObjectRetain();
  sub_1CE0B43F4();
  sub_1CE02DC3C();
  v16 = sub_1CE0B6260();
  v17 = *(void (**)(char *, uint64_t))(v2 + 8);
  v17(v5, v1);
  v17(v7, v1);
  if ((v16 & 1) != 0
    || (v15(v7, v14, v1), sub_1CE0B4424(), v18 = sub_1CE0B6260(), v17(v5, v1), v17(v7, v1), (v18 & 1) != 0)
    || (v19 = sub_1CE02DA2C(), (v20 & 1) != 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v27[0] = v19;
  v21 = sub_1CE0B6C14();
  v23 = v22;
  v24 = *(_QWORD *)(v13 + 16);
  swift_bridgeObjectRelease();
  result = v24 - 1;
  if (*(_QWORD *)(v28 + 16) < v24 - 1)
  {
    __break(1u);
  }
  else if (v24)
  {
    sub_1CE04A92C(result, result, v21, v23);
LABEL_12:
    v27[0] = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
    sub_1CDFE1194((unint64_t *)&qword_1EFA5EC40, &qword_1ED8F05C8, MEMORY[0x1E0DEAF20]);
    v26 = sub_1CE0B6248();
    swift_bridgeObjectRelease();
    return v26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE04A8FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return BuildVersion.init(rawValue:)(*a1, a1[1], a2);
}

uint64_t sub_1CE04A908@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BuildVersion.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

char *sub_1CE04A92C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1CE090C80(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE04AAAC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;

  v2 = result;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD **)v1;
  v5 = v3 >> 1;
  if ((v3 & 1) == 0 || (result = swift_isUniquelyReferenced_nonNull(), *(_QWORD *)v1 = v4, (result & 1) == 0))
  {
    v9 = v4;
    goto LABEL_9;
  }
  v6 = *(_QWORD *)(v1 + 16);
  v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v8 = *(_QWORD *)(v1 + 8);
  sub_1CE0B6C68();
  swift_unknownObjectRetain();
  result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    result = MEMORY[0x1E0DEE9D8];
  }
  v9 = *(_QWORD **)(result + 16);
  if (v8 + 16 * v6 + 16 * v7 == result + 16 * (_QWORD)v9 + 32)
    goto LABEL_31;
  result = swift_release();
  while (1)
  {
    if (v7 >= v2)
      goto LABEL_28;
    v9 = *(_QWORD **)v1;
LABEL_9:
    v10 = *(_QWORD *)(v1 + 16);
    v7 = v5 - v10;
    if (__OFSUB__(v5, v10))
    {
      __break(1u);
      goto LABEL_35;
    }
    v11 = *(_QWORD *)(v1 + 8);
    if (v7 <= v2 ? v2 : v5 - v10)
      break;
    v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v5 >= v10)
      goto LABEL_17;
LABEL_30:
    __break(1u);
LABEL_31:
    v19 = *(_QWORD *)(result + 24);
    result = swift_release();
    v20 = (v19 >> 1) - (_QWORD)v9;
    v21 = __OFADD__(v7, v20);
    v7 += v20;
    if (v21)
      goto LABEL_40;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
  v4 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v4);
  v13 = result - 32;
  if (result < 32)
    v13 = result - 17;
  v4[2] = v7;
  v4[3] = 2 * (v13 >> 4);
  if (v5 < v10)
    goto LABEL_30;
LABEL_17:
  if ((v7 & 0x8000000000000000) == 0)
  {
    v14 = (unint64_t)(v4 + 4);
    v15 = v11 + 16 * v10;
    if (v15 >= (unint64_t)&v4[2 * v7 + 4] || v14 >= v15 + 16 * v7)
    {
      swift_arrayInitWithCopy();
      if (!__OFSUB__(0, v10))
      {
        v17 = v4[2];
        v18 = v10 + v17;
        if (!__OFADD__(v10, v17))
        {
          if (v18 >= v10)
          {
            result = swift_unknownObjectRelease();
            if ((v18 & 0x8000000000000000) == 0)
            {
              *(_QWORD *)(v1 + 8) = v14 - 16 * v10;
              *(_QWORD *)(v1 + 16) = v10;
              *(_QWORD *)(v1 + 24) = (2 * v18) | 1;
LABEL_28:
              *(_QWORD *)v1 = v4;
              return result;
            }
            goto LABEL_38;
          }
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
LABEL_41:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE04AD24(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;

  v3 = v1[2];
  v2 = v1[3];
  v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3))
  {
    __break(1u);
    goto LABEL_36;
  }
  v6 = *(_QWORD *)(a1 + 16);
  if ((v2 & 1) == 0)
    goto LABEL_7;
  v7 = v1[1];
  sub_1CE0B6C68();
  swift_unknownObjectRetain();
  v8 = swift_dynamicCastClass();
  if (!v8)
  {
    swift_unknownObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v9 = *(_QWORD *)(v8 + 16);
  if (v7 + 16 * v3 + 16 * v4 != v8 + 16 * v9 + 32)
  {
    swift_release();
LABEL_7:
    v10 = v4;
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v8 + 24);
  swift_release();
  v12 = (v11 >> 1) - v9;
  v13 = __OFADD__(v4, v12);
  v10 = v4 + v12;
  if (v13)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_9:
  v14 = v4 + v6;
  if (__OFADD__(v4, v6))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v10 < v14)
  {
    if (v10 + 0x4000000000000000 < 0)
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v15 = 2 * v10;
    if (v15 > v14)
      v14 = v15;
  }
  sub_1CE04AAAC(v14);
  v17 = v1[2];
  v16 = v1[3];
  v18 = (v16 >> 1) - v17;
  if (__OFSUB__(v16 >> 1, v17))
    goto LABEL_37;
  v19 = v1[1] + 16 * v17 + 16 * v18;
  if ((v16 & 1) == 0)
  {
LABEL_20:
    v22 = v18;
    goto LABEL_22;
  }
  sub_1CE0B6C68();
  swift_unknownObjectRetain();
  v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_unknownObjectRelease();
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v21 = *(_QWORD *)(v20 + 16);
  if (v19 != v20 + 16 * v21 + 32)
  {
    swift_release();
    goto LABEL_20;
  }
  v23 = *(_QWORD *)(v20 + 24);
  swift_release();
  v24 = (v23 >> 1) - v21;
  v13 = __OFADD__(v18, v24);
  v22 = v18 + v24;
  if (v13)
  {
LABEL_44:
    __break(1u);
LABEL_45:
    result = sub_1CE0B6B60();
    __break(1u);
    return result;
  }
LABEL_22:
  v25 = v22 - v18;
  if (__OFSUB__(v22, v18))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    if (v25 >= v6)
    {
      if (a1 + 32 < v19 + 16 * v6 && v19 < a1 + 32 + 16 * v6)
        goto LABEL_45;
      swift_arrayInitWithCopy();
      if (v6 <= 0)
        goto LABEL_32;
      if (!__OFADD__(v18, v6))
      {
        sub_1CE04B2A8(v18 + v6);
        goto LABEL_32;
      }
      goto LABEL_42;
    }
    goto LABEL_40;
  }
  if (v6 > 0)
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v6 = 0;
LABEL_32:
  if (v6 == v25)
    return sub_1CE04B35C(a1, v26);
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1CE04AFB0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  char *__dst;

  v5 = v4[2];
  v6 = v4[3] >> 1;
  v7 = v6 - v5;
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_29;
  }
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 16);
  v11 = __OFSUB__(v10, a2);
  v12 = v10 - a2;
  if (v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v15 = v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v32 = v15 - v14;
  if (__OFSUB__(v15, v14))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  __dst = (char *)(v9 + 32);
  v16 = v9 + 32 + 16 * a2;
  v17 = sub_1CE04B8A8(v7);
  if (v17)
  {
    v18 = v17;
    v29 = (char *)(v16 + 16 * a3);
    v30 = v9;
    v19 = v4[2];
    v20 = (char *)(v4[1] + 16 * v19);
    swift_arrayDestroy();
    if (a2 < 0)
      goto LABEL_43;
    v21 = &v20[16 * a2];
    if (__dst != v20 || __dst >= v21)
      memmove(__dst, v20, 16 * a2);
    swift_arrayDestroy();
    a4(v16, a3);
    if (v14 < 0)
      goto LABEL_43;
    v22 = &v21[16 * v32];
    if (v29 != v22 || v29 >= &v22[16 * v14])
      memmove(v29, v22, 16 * v14);
    swift_arrayDestroy();
    *(_QWORD *)(v18 + 16) = 0;
    swift_release();
    v9 = v30;
LABEL_23:
    swift_retain();
    result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v19))
    {
      v27 = *(_QWORD *)(v9 + 16);
      v11 = __OFADD__(v19, v27);
      v28 = v19 + v27;
      if (!v11)
      {
        if (v28 >= v19)
        {
          if ((v28 & 0x8000000000000000) == 0)
          {
            *v4 = v9;
            v4[1] = &__dst[-16 * v19];
            v4[2] = v19;
            v4[3] = (2 * v28) | 1;
            return result;
          }
          goto LABEL_36;
        }
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v19 = v4[2];
  v23 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v23 < v19)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (__OFSUB__(v23, v19))
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[16 * a2], a3);
  v24 = v23 + v32;
  if (__OFADD__(v23, v32))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v25 = v4[3] >> 1;
  if (v25 < v24)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (!__OFSUB__(v25, v24))
  {
    swift_arrayInitWithCopy();
    goto LABEL_23;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE04B2A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = v3 >> 1;
  v5 = __OFSUB__(v3 >> 1, v2);
  v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  v7 = result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7)
    return result;
  sub_1CE0B6C68();
  swift_unknownObjectRetain();
  result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    result = MEMORY[0x1E0DEE9D8];
  }
  v8 = *(_QWORD *)(result + 16);
  v5 = __OFADD__(v8, v7);
  v9 = v8 + v7;
  if (v5)
    goto LABEL_13;
  *(_QWORD *)(result + 16) = v9;
  result = swift_release();
  v10 = v4 + v7;
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v10 < 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v1 + 24) = v3 & 1 | (2 * v10);
  return result;
}

uint64_t sub_1CE04B35C(uint64_t result, unint64_t a2)
{
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;

  v4 = v2[2];
  v3 = v2[3];
  v5 = (v3 >> 1) - v4;
  if (__OFSUB__(v3 >> 1, v4))
    goto LABEL_48;
  v6 = *(_QWORD *)(result + 16);
  if (v6 == a2)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (v6 <= a2)
    goto LABEL_49;
  v7 = result + 16 * a2;
  v37 = result;
  v38 = a2 + 1;
  v8 = *(_QWORD *)(v7 + 32);
  v9 = *(_QWORD *)(result + 16);
  v10 = *(_QWORD *)(v7 + 40);
  result = swift_bridgeObjectRetain();
  v33 = v9;
  v32 = 1 - v9;
  while (1)
  {
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
      break;
    v39 = sub_1CE04B698(v5, v5 + 1, *v2, v2[1], v4, v3);
    v12 = sub_1CE04B898();
    v36 = v5;
    sub_1CE04AFB0(&v39, v5, 0, (void (*)(uint64_t, uint64_t))v12);
    swift_release();
    result = swift_release();
    v4 = v2[2];
    v3 = v2[3];
    v13 = (v3 >> 1) - v4;
    if (__OFSUB__(v3 >> 1, v4))
      goto LABEL_42;
    v14 = v2[1];
    v35 = v3 >> 1;
    if ((v3 & 1) == 0)
      goto LABEL_14;
    sub_1CE0B6C68();
    swift_unknownObjectRetain();
    v15 = swift_dynamicCastClass();
    if (!v15)
    {
      swift_unknownObjectRelease();
      v15 = MEMORY[0x1E0DEE9D8];
    }
    v16 = *(_QWORD *)(v15 + 16);
    if (v14 + 16 * v4 + 16 * v13 != v15 + 16 * v16 + 32)
    {
      result = swift_release();
LABEL_14:
      v17 = (v3 >> 1) - v4;
      goto LABEL_16;
    }
    v18 = *(_QWORD *)(v15 + 24);
    result = swift_release();
    v19 = (v18 >> 1) - v16;
    v17 = v13 + v19;
    if (__OFADD__(v13, v19))
      goto LABEL_46;
LABEL_16:
    v5 = v36;
    if (v36 >= v17)
      goto LABEL_19;
    v20 = (_QWORD *)(v14 + 16 * v4 + 16 * v36);
    *v20 = v8;
    v20[1] = v10;
    if (v38 == v33)
    {
      v8 = 0;
      v10 = 0;
      v5 = v11;
      v38 = v33;
LABEL_19:
      v21 = v5 - v13;
      if (__OFSUB__(v5, v13))
        goto LABEL_38;
      goto LABEL_20;
    }
    if ((v38 & 0x8000000000000000) != 0)
      goto LABEL_47;
    v34 = v4;
    if (v38 >= *(_QWORD *)(v37 + 16))
    {
LABEL_40:
      __break(1u);
      break;
    }
    v26 = 0;
    v27 = 0;
    v28 = v37 + 16 * v38;
    v29 = v14 + 16 * v36 + 16 * v34;
    while (1)
    {
      v8 = *(_QWORD *)(v28 + v26 + 32);
      v30 = *(_QWORD *)(v28 + v26 + 40);
      if (!(v36 - v17 + 1 + v27))
      {
        v38 += v27 + 1;
        v10 = *(_QWORD *)(v28 + v26 + 40);
        goto LABEL_36;
      }
      v31 = v29 + v26;
      *(_QWORD *)(v31 + 16) = v8;
      *(_QWORD *)(v31 + 24) = v30;
      if (!(v32 + v38 + v27))
        break;
      result = swift_bridgeObjectRetain();
      ++v27;
      v26 += 16;
      if (v38 + v27 >= *(_QWORD *)(v37 + 16))
        goto LABEL_40;
    }
    v8 = 0;
    v10 = 0;
    v17 = v36 + v27 + 2;
    v38 = v33;
LABEL_36:
    result = swift_bridgeObjectRetain();
    v5 = v17;
    v4 = v34;
    v21 = v17 - v13;
    if (__OFSUB__(v17, v13))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_20:
    if (v21)
    {
      sub_1CE0B6C68();
      swift_unknownObjectRetain();
      result = swift_dynamicCastClass();
      if (!result)
      {
        swift_unknownObjectRelease();
        result = MEMORY[0x1E0DEE9D8];
      }
      v22 = *(_QWORD *)(result + 16);
      v23 = __OFADD__(v22, v21);
      v24 = v22 + v21;
      if (v23)
        goto LABEL_43;
      *(_QWORD *)(result + 16) = v24;
      result = swift_release();
      v25 = v35 + v21;
      if (__OFADD__(v35, v21))
        goto LABEL_44;
      if ((v25 & 0x8000000000000000) != 0)
        goto LABEL_45;
      v3 = v3 & 1 | (2 * v25);
      v2[3] = v3;
    }
    if (!v10)
      goto LABEL_39;
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1CE04B698(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  BOOL v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  uint64_t v29;

  v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_34:
    if (v8 >= v7)
      goto LABEL_21;
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_37;
  }
  v7 = a2;
  v6 = result;
  if ((a6 & 1) == 0)
    goto LABEL_34;
  sub_1CE0B6C68();
  swift_unknownObjectRetain();
  v11 = swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v12 = *(_QWORD *)(v11 + 16);
  v13 = a4 + 16 * a5 + 16 * v8;
  if (v13 == v11 + 16 * v12 + 32)
  {
    v15 = *(_QWORD *)(v11 + 24);
    result = swift_release();
    v16 = (v15 >> 1) - v12;
    v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
  }
  else
  {
    swift_release();
    v14 = v8;
  }
  swift_unknownObjectRetain();
  v17 = swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      v17 = MEMORY[0x1E0DEE9D8];
    }
    v18 = *(_QWORD *)(v17 + 16);
    if (v13 == v17 + 16 * v18 + 32)
    {
      v20 = *(_QWORD *)(v17 + 24);
      result = swift_release();
      v21 = (v20 >> 1) - v18;
      v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      result = swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v19 = *(_QWORD *)(v17 + 16);
  if (v13 == v17 + 16 * v19 + 32)
  {
    v23 = *(_QWORD *)(v17 + 24);
    result = swift_release();
    v24 = (v23 >> 1) - v19;
    v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22)
      goto LABEL_21;
LABEL_39:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7)
    v25 = v7;
  else
    v25 = v8;
  if (v25 <= v6)
    v26 = v6;
  else
    v26 = v25;
  if (!v26)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
  v27 = (_QWORD *)swift_allocObject();
  v28 = _swift_stdlib_malloc_size(v27);
  v29 = v28 - 32;
  if (v28 < 32)
    v29 = v28 - 17;
  v27[2] = v6;
  v27[3] = 2 * (v29 >> 4);
  return (uint64_t)v27;
}

uint64_t (*sub_1CE04B898())()
{
  return nullsub_1;
}

uint64_t sub_1CE04B8A8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t isUniquelyReferenced_nonNull;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!(_DWORD)isUniquelyReferenced_nonNull)
    return 0;
  v6 = v1[2];
  v5 = v1[3];
  v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_20;
  }
  v8 = v1[1];
  if ((v5 & 1) == 0)
    goto LABEL_8;
  sub_1CE0B6C68();
  swift_unknownObjectRetain();
  v9 = swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v8 + 16 * v6 + 16 * v7 != v9 + 16 * v10 + 32)
  {
    swift_release();
LABEL_8:
    v11 = v7;
    goto LABEL_10;
  }
  v12 = *(_QWORD *)(v9 + 24);
  result = swift_release();
  v14 = (v12 >> 1) - v10;
  v15 = __OFADD__(v7, v14);
  v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < a1)
      return 0;
    sub_1CE0B6C68();
    swift_unknownObjectRetain();
    a1 = swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = MEMORY[0x1E0DEE9D8];
    }
    v16 = v8 + 16 * v6 - a1;
    v17 = v16 - 32;
    v18 = v16 - 17;
    if (v17 >= 0)
      v18 = v17;
    isUniquelyReferenced_nonNull = v7 + (v18 >> 4);
    if (!__OFADD__(v7, v18 >> 4))
    {
      v4 = *(_QWORD *)(a1 + 16);
      if (isUniquelyReferenced_nonNull >= v4)
        return a1;
LABEL_21:
      sub_1CE04BA14(isUniquelyReferenced_nonNull, v4, 0);
      return a1;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

char *sub_1CE04BA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *result;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_17;
  }
  v7 = *v3;
  v8 = v7 + 32 + 16 * a1;
  result = (char *)swift_arrayDestroy();
  v10 = __OFSUB__(a3, v4);
  v11 = a3 - v4;
  if (v10)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!v11)
    goto LABEL_14;
  v12 = *(_QWORD *)(v7 + 16);
  v10 = __OFSUB__(v12, a2);
  v13 = v12 - a2;
  if (v10)
    goto LABEL_18;
  if (v13 < 0)
  {
LABEL_21:
    result = (char *)sub_1CE0B6B60();
    __break(1u);
    return result;
  }
  result = (char *)(v8 + 16 * a3);
  v14 = (char *)(v7 + 32 + 16 * a2);
  if (result != v14 || result >= &v14[16 * v13])
    result = (char *)memmove(result, v14, 16 * v13);
  v16 = *(_QWORD *)(v7 + 16);
  v10 = __OFADD__(v16, v11);
  v17 = v16 + v11;
  if (v10)
    goto LABEL_19;
  *(_QWORD *)(v7 + 16) = v17;
LABEL_14:
  if (a3 > 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t CatalogTipJournalsUpdated.tipIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CatalogTipJournalsUpdated.init(tipIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CatalogTipJournalsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for CatalogTipJournalsUpdated()
{
  return &type metadata for CatalogTipJournalsUpdated;
}

uint64_t sub_1CE04BB54()
{
  qword_1ED8F0210 = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "_os_activity_current");
  return swift_unknownObjectRetain();
}

uint64_t initializeWithCopy for ActivityTrace.State(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_unknownObjectRetain(*a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t *assignWithCopy for ActivityTrace.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = *((unsigned __int8 *)a2 + 24);
  j__swift_unknownObjectRetain(*a2, v4, v5, v6);
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = *((unsigned __int8 *)a1 + 24);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  *((_BYTE *)a1 + 24) = v6;
  j__swift_unknownObjectRelease(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *assignWithTake for ActivityTrace.State(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *a1;
  v7 = a1[1];
  v6 = a1[2];
  v8 = *((unsigned __int8 *)a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  *((_BYTE *)a1 + 24) = v4;
  j__swift_unknownObjectRelease(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityTrace.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityTrace.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CE04BD38(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1CE04BD40(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityTrace.State()
{
  return &type metadata for ActivityTrace.State;
}

void *static FitnessMode.allCases.getter()
{
  return &unk_1E8B61760;
}

uint64_t FitnessMode.rawValue.getter(char a1)
{
  if (!a1)
    return 0x6157646572696170;
  if (a1 == 1)
    return 0x73656C6863746177;
  return 0x615765746F6D6572;
}

uint64_t sub_1CE04BDCC(_BYTE *a1, _BYTE *a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0x73656C6863746177;
  v4 = 0xE900000000000073;
  if (v2 != 1)
  {
    v3 = 0x615765746F6D6572;
    v4 = 0xEB00000000686374;
  }
  if (*a1)
    v5 = v3;
  else
    v5 = 0x6157646572696170;
  if (v2)
    v6 = v4;
  else
    v6 = 0xEB00000000686374;
  v7 = 0x73656C6863746177;
  v8 = 0xE900000000000073;
  if (*a2 != 1)
  {
    v7 = 0x615765746F6D6572;
    v8 = 0xEB00000000686374;
  }
  if (*a2)
    v9 = v7;
  else
    v9 = 0x6157646572696170;
  if (*a2)
    v10 = v8;
  else
    v10 = 0xEB00000000686374;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1CE04BED4()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE04BF7C()
{
  sub_1CE0B62CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE04C000()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE04C0A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13SeymourClient11FitnessModeO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1CE04C0D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E8B61788;
}

uint64_t _s13SeymourClient11FitnessModeO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1CE0B6BC0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1CE04C12C()
{
  unint64_t result;

  result = qword_1EFA61290;
  if (!qword_1EFA61290)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for FitnessMode, &type metadata for FitnessMode);
    atomic_store(result, (unint64_t *)&qword_1EFA61290);
  }
  return result;
}

unint64_t sub_1CE04C174()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA61298;
  if (!qword_1EFA61298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA612A0);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA61298);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FitnessMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE04C20C + 4 * byte_1CE0C28ED[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE04C240 + 4 * byte_1CE0C28E8[v4]))();
}

uint64_t sub_1CE04C240(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE04C248(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE04C250);
  return result;
}

uint64_t sub_1CE04C25C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE04C264);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE04C268(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE04C270(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FitnessMode()
{
  return &type metadata for FitnessMode;
}

uint64_t dispatch thunk of AnalyticsErrorProtocol.errorCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsErrorProtocol.errorDomain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t MediaPlayerSyncCatchupRequested.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t MediaPlayerSyncCatchupRequested.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static MediaPlayerSyncCatchupRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MediaPlayerSyncCatchupRequested()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE04C32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaPlayerSyncCatchupRequested()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE04C374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaPlayerSyncCatchupRequested()
{
  uint64_t result;

  result = qword_1EFA61300;
  if (!qword_1EFA61300)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t NullRemoteBrowsingSource.queryActiveParticipant()@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE04C414((uint64_t (*)(_QWORD))MEMORY[0x1E0D925B8], a1);
}

uint64_t NullRemoteBrowsingSource.queryActiveEnvironment()@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE04C414((uint64_t (*)(_QWORD))MEMORY[0x1E0D94AC0], a1);
}

uint64_t sub_1CE04C414@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t NullRemoteBrowsingSource.applyActiveEnvironment<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t NullRemoteBrowsingSource.remoteDeviceForSession()()
{
  return 1;
}

uint64_t sub_1CE04C478@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE04C490((uint64_t (*)(_QWORD))MEMORY[0x1E0D925B8], a1);
}

uint64_t sub_1CE04C484@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE04C490((uint64_t (*)(_QWORD))MEMORY[0x1E0D94AC0], a1);
}

uint64_t sub_1CE04C490@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_1CE04C4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return NullRemoteBrowsingSource.applyActiveEnvironment<A>(to:)(a1, a2, a3);
}

uint64_t sub_1CE04C4E0()
{
  return 1;
}

ValueMetadata *type metadata accessor for NullRemoteBrowsingSource()
{
  return &type metadata for NullRemoteBrowsingSource;
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.queryActiveParticipant()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.queryActiveEnvironment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.applyActiveEnvironment<A>(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceQuerying.remoteDeviceForSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceUpdating.updateActiveIdentity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingSourceUpdating.updateActiveEnvironment(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1CE04C52C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;

  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v5)
    goto LABEL_7;
LABEL_4:
  v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v16)) + (v8 << 6))
  {
    v11 = *(_QWORD *)(a1 + 48) + 24 * i;
    v12 = *(_QWORD *)v11;
    v13 = *(_QWORD *)(v11 + 8);
    v14 = *(_BYTE *)(v11 + 16);
    swift_getKeyPath();
    sub_1CDFF38E8(v12, v13, v14);
    swift_getAtKeyPath();
    swift_release();
    result = sub_1CDFF37CC(v12, v13, v14);
    if (v21 == 3)
    {
      if (v5)
        goto LABEL_4;
    }
    else
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1CE090D8C(0, *(_QWORD *)(v20 + 16) + 1, 1, (char *)v20);
        v20 = result;
      }
      v19 = *(_QWORD *)(v20 + 16);
      v18 = *(_QWORD *)(v20 + 24);
      if (v19 >= v18 >> 1)
      {
        result = (uint64_t)sub_1CE090D8C((char *)(v18 > 1), v19 + 1, 1, (char *)v20);
        v20 = result;
      }
      *(_QWORD *)(v20 + 16) = v19 + 1;
      *(_BYTE *)(v20 + v19 + 32) = v21;
      if (v5)
        goto LABEL_4;
    }
LABEL_7:
    v15 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v6)
      goto LABEL_29;
    v16 = *(_QWORD *)(v2 + 8 * v15);
    ++v8;
    if (!v16)
    {
      v8 = v15 + 1;
      if (v15 + 1 >= v6)
        goto LABEL_29;
      v16 = *(_QWORD *)(v2 + 8 * v8);
      if (!v16)
      {
        v8 = v15 + 2;
        if (v15 + 2 >= v6)
          goto LABEL_29;
        v16 = *(_QWORD *)(v2 + 8 * v8);
        if (!v16)
        {
          v8 = v15 + 3;
          if (v15 + 3 >= v6)
            goto LABEL_29;
          v16 = *(_QWORD *)(v2 + 8 * v8);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v16 - 1) & v16;
  }
  v17 = v15 + 4;
  if (v17 >= v6)
  {
LABEL_29:
    swift_release();
    return v20;
  }
  v16 = *(_QWORD *)(v2 + 8 * v17);
  if (v16)
  {
    v8 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v8 >= v6)
      goto LABEL_29;
    v16 = *(_QWORD *)(v2 + 8 * v8);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CE04C778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_1CE0B58A0();
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v31 = (char *)v28 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    return v8;
  v28[1] = v1;
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1CDFCF9BC(0, v7, 0);
  result = sub_1CDFD0128(a1);
  v10 = result;
  v12 = v11;
  v14 = v13 & 1;
  v29 = a1;
  v30 = a1 + 56;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(v30 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      goto LABEL_15;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v12)
      goto LABEL_16;
    v15 = *(_QWORD *)(a1 + 48);
    v17 = v33;
    v16 = v34;
    v18 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v31, v15 + *(_QWORD *)(v33 + 72) * v10, v34);
    v19 = v32;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v32, v18, v16);
    v20 = sub_1CE0B5894();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v8 = v35;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1CDFCF9BC(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v35;
    }
    v24 = *(_QWORD *)(v8 + 16);
    v23 = *(_QWORD *)(v8 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1CDFCF9BC(v23 > 1, v24 + 1, 1);
      v8 = v35;
    }
    *(_QWORD *)(v8 + 16) = v24 + 1;
    v25 = v8 + 16 * v24;
    *(_QWORD *)(v25 + 32) = v20;
    *(_QWORD *)(v25 + 40) = v22;
    a1 = v29;
    result = sub_1CDFD01CC(v10, v12, v14 & 1, v29);
    v10 = result;
    v12 = v26;
    v14 = v27 & 1;
    if (!--v7)
    {
      sub_1CDFCD5BC(result, v26, v27 & 1);
      return v8;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1CE04C9B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B5EC4();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA5E380, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D0]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA63C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D8]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04CD28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B58A0();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900((unint64_t *)&unk_1EFA63BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E0]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA61450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E8]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04D098(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1CE0B6D34();
    swift_bridgeObjectRetain();
    sub_1CE0B62CC();
    v18 = sub_1CE0B6D64();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1CE0B6C50() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1CE0B6C50() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1CE04D338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B51C8();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA5E388, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], MEMORY[0x1E0D93B78]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], MEMORY[0x1E0D93B80]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04D6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B58B8();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA5E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], MEMORY[0x1E0D95490]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA63C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], MEMORY[0x1E0D95498]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04DA18(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  unint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) == *(_QWORD *)(a2 + 16))
  {
    v29 = result + 56;
    v3 = 1 << *(_BYTE *)(result + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v5 = v4 & *(_QWORD *)(result + 56);
    v30 = (unint64_t)(v3 + 63) >> 6;
    v31 = 0;
    v6 = a2 + 56;
    do
    {
      while (1)
      {
LABEL_8:
        if (v5)
        {
          v5 &= v5 - 1;
          v7 = v31;
        }
        else
        {
          v8 = v31 + 1;
          if (__OFADD__(v31, 1))
          {
            __break(1u);
LABEL_44:
            __break(1u);
            return result;
          }
          if (v8 >= v30)
            return 1;
          v9 = *(_QWORD *)(v29 + 8 * v8);
          v7 = v31 + 1;
          if (!v9)
          {
            v7 = v31 + 2;
            if (v31 + 2 >= v30)
              return 1;
            v9 = *(_QWORD *)(v29 + 8 * v7);
            if (!v9)
            {
              v7 = v31 + 3;
              if (v31 + 3 >= v30)
                return 1;
              v9 = *(_QWORD *)(v29 + 8 * v7);
              if (!v9)
              {
                v7 = v31 + 4;
                if (v31 + 4 >= v30)
                  return 1;
                v9 = *(_QWORD *)(v29 + 8 * v7);
                if (!v9)
                {
                  v10 = v31 + 5;
                  if (v31 + 5 >= v30)
                    return 1;
                  v9 = *(_QWORD *)(v29 + 8 * v10);
                  if (!v9)
                  {
                    while (1)
                    {
                      v7 = v10 + 1;
                      if (__OFADD__(v10, 1))
                        goto LABEL_44;
                      if (v7 >= v30)
                        return 1;
                      v9 = *(_QWORD *)(v29 + 8 * v7);
                      ++v10;
                      if (v9)
                        goto LABEL_25;
                    }
                  }
                  v7 = v31 + 5;
                }
              }
            }
          }
LABEL_25:
          v5 = (v9 - 1) & v9;
        }
        sub_1CE0B6D34();
        sub_1CE0B4490();
        sub_1CE0B62CC();
        swift_bridgeObjectRelease();
        v11 = sub_1CE0B6D64();
        v12 = -1 << *(_BYTE *)(a2 + 32);
        v13 = v11 & ~v12;
        if (((*(_QWORD *)(v6 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          return 0;
        v31 = v7;
        v14 = sub_1CE0B4490();
        v16 = v15;
        if (v14 != sub_1CE0B4490() || v16 != v17)
          break;
LABEL_7:
        result = swift_bridgeObjectRelease_n();
      }
      v19 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v19 & 1) != 0);
    v20 = ~v12;
    for (i = v13 + 1; ; i = v22 + 1)
    {
      v22 = i & v20;
      if (((*(_QWORD *)(v6 + (((i & v20) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v20)) & 1) == 0)
        break;
      v23 = sub_1CE0B4490();
      v25 = v24;
      if (v23 == sub_1CE0B4490() && v25 == v26)
        goto LABEL_7;
      v28 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
        goto LABEL_8;
    }
  }
  return 0;
}

uint64_t sub_1CE04DD28(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v24 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  v8 = MEMORY[0x1E0DEA978];
  v23 = result;
  if (!v6)
    goto LABEL_9;
LABEL_7:
  v26 = (v6 - 1) & v6;
  v27 = v3;
  for (i = __clz(__rbit64(v6)) | (v3 << 6); ; i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    v14 = *(_QWORD *)(result + 48) + 24 * i;
    v15 = *(_QWORD *)v14;
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(_BYTE *)(v14 + 16);
    sub_1CE0B6D34();
    sub_1CDFF38E8(v15, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA614C0);
    sub_1CDFB3EE4();
    v18 = v8;
    sub_1CE0B42D4();
    v19 = sub_1CE0B6D64();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_29:
      sub_1CDFF37CC(v15, v16, v17);
      return 0;
    }
    v22 = ~v20;
    sub_1CE056AC4();
    sub_1CE056A7C();
    while ((sub_1CE0B42E0() & 1) == 0)
    {
      v21 = (v21 + 1) & v22;
      if (((*(_QWORD *)(v7 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_29;
    }
    sub_1CDFF37CC(v15, v16, v17);
    result = v23;
    v8 = v18;
    v6 = v26;
    v3 = v27;
    if (v26)
      goto LABEL_7;
LABEL_9:
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v10 >= v25)
      return 1;
    v11 = *(_QWORD *)(v24 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v10 + 1;
      if (v10 + 1 >= v25)
        return 1;
      v11 = *(_QWORD *)(v24 + 8 * v12);
      if (!v11)
      {
        v12 = v10 + 2;
        if (v10 + 2 >= v25)
          return 1;
        v11 = *(_QWORD *)(v24 + 8 * v12);
        if (!v11)
        {
          v12 = v10 + 3;
          if (v10 + 3 >= v25)
            return 1;
          v11 = *(_QWORD *)(v24 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_24:
    v26 = (v11 - 1) & v11;
    v27 = v12;
  }
  v13 = v10 + 4;
  if (v13 >= v25)
    return 1;
  v11 = *(_QWORD *)(v24 + 8 * v13);
  if (v11)
  {
    v12 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v25)
      return 1;
    v11 = *(_QWORD *)(v24 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1CE04E028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B48A4();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA614A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91318], MEMORY[0x1E0D91328]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA614B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91318], MEMORY[0x1E0D91330]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04E398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B58D0();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA61498, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95538], MEMORY[0x1E0D95540]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA614A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95538], MEMORY[0x1E0D95548]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04E708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B4C28();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900((unint64_t *)&unk_1EFA63CF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], MEMORY[0x1E0D91FB0]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA61490, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], MEMORY[0x1E0D91FB8]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B5F60();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA5D990, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96548]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96550]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04EDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B4DFC();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA61478, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92900], MEMORY[0x1E0D92910]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA61480, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92900], MEMORY[0x1E0D92918]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04F158(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B54B0();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA5E260, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94740]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA63C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94748]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04F4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1CE0B5870();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1CDFB1900(&qword_1EFA61468, (uint64_t (*)(uint64_t))MEMORY[0x1E0D950E8], MEMORY[0x1E0D950F8]);
    v27 = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1CDFB1900(&qword_1EFA61470, (uint64_t (*)(uint64_t))MEMORY[0x1E0D950E8], MEMORY[0x1E0D95100]);
      v31 = sub_1CE0B6260();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1CE04F838(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v27 = sub_1CE0B4B08();
  v7 = *(_QWORD *)(v27 - 8);
  v8 = MEMORY[0x1E0C80A78](v27);
  v26 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v14 = 0;
    v22 = a2;
    v23 = a3;
    v21 = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      v13 = *(_QWORD *)(v7 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, a3 + v15 + v13 * v14, v27);
      v16 = a1(v12);
      if (v3)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v27);
        swift_bridgeObjectRelease();
        swift_release();
        return v13;
      }
      if ((v16 & 1) != 0)
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v24(v26, v12, v27);
        v17 = v28;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCFA04(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v28;
        }
        v19 = *(_QWORD *)(v17 + 16);
        v18 = *(_QWORD *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1CDFCFA04(v18 > 1, v19 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v19 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(v17 + v15 + v19 * v13, v26, v27);
        v28 = v17;
        a3 = v23;
        a1 = v21;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v27);
      }
      if (v25 == ++v14)
      {
        v13 = v28;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_1CE04FA48(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for RemoteBrowsingJournalEntry();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = MEMORY[0x1E0DEE9D8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x1E0DEE9D8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_1CE017160(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
      v17 = a1(v12);
      if (v3)
      {
        sub_1CDFE19F8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_1CE056B08((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1CDFCFA68(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_1CDFCFA68(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_1CE056B08(v23, v15 + v16 + v19 * v13, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_1CDFE19F8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

id sub_1CE04FC60(unint64_t a1, unint64_t a2)
{
  return sub_1CE04FC88(a1, a2, (uint64_t)&qword_1EFA607B8);
}

id sub_1CE04FC74(unint64_t a1, unint64_t a2)
{
  return sub_1CE04FC88(a1, a2, (uint64_t)&qword_1EFA607C0);
}

id sub_1CE04FC88(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  unint64_t v24;
  void **v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;

  v4 = a2;
  v5 = a1;
  v6 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v29 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    if (v7 == v29)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  swift_bridgeObjectRetain();
  v7 = sub_1CE0B6B30();
  swift_bridgeObjectRelease();
  v8 = (unint64_t)v4 >> 62;
  if ((unint64_t)v4 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v7 != *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v7)
    goto LABEL_37;
  v9 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0)
    v9 = v5;
  if (!v6)
    v9 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  v10 = v4 & 0xFFFFFFFFFFFFFF8;
  v11 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v8)
    v11 = v12;
  if (v9 == v11)
  {
LABEL_37:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v30 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v5 + 32); ; result = (id)MEMORY[0x1D17BFD98](0, v5))
  {
    v14 = result;
    if ((v4 & 0xC000000000000001) == 0)
      break;
    v15 = (id)MEMORY[0x1D17BFD98](0, v4);
LABEL_21:
    v16 = v15;
    sub_1CDFB53C8(0, (unint64_t *)a3);
    a3 = sub_1CE0B6854();

    if ((a3 & 1) == 0)
      goto LABEL_48;
    v17 = v7 - 1;
    if (v7 == 1)
      return (id)(v7 & 1);
    if (((v4 | v5) & 0xC000000000000001) != 0)
    {
      v18 = 0;
      v19 = v7 - 2;
      while (v17 != v18)
      {
        v7 = v18 + 1;
        if (v30)
          v20 = (id)MEMORY[0x1D17BFD98](v18 + 1, v5);
        else
          v20 = *(id *)(v5 + 40 + 8 * v18);
        a3 = (uint64_t)v20;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1D17BFD98](v18 + 1, v4);
        }
        else
        {
          if (v7 >= *(_QWORD *)(v10 + 16))
            goto LABEL_53;
          v21 = *(id *)(v4 + 40 + 8 * v18);
        }
        v22 = v21;
        v7 = sub_1CE0B6854();

        if ((v7 & 1) != 0 && v19 != v18++)
          continue;
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v10 + 16);
      if (v24 <= 1)
        v24 = 1;
      a3 = v24 - 1;
      v25 = (void **)(v5 + 40);
      v10 = v4 + 40;
      while (v17)
      {
        if (!a3)
          goto LABEL_52;
        v27 = *v25++;
        v26 = v27;
        v28 = *(void **)v10;
        v10 += 8;
        v4 = v26;
        v5 = v28;
        v7 = sub_1CE0B6854();

        if ((v7 & 1) != 0)
        {
          --a3;
          if (--v17)
            continue;
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v10 + 16))
  {
    v15 = *(id *)(v4 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE04FF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = sub_1CE0B4B08();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_1CDFB1900(&qword_1EFA61488, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91A30], MEMORY[0x1E0D91A48]);
        v17 = sub_1CE0B6260();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

_QWORD *RemoteBrowsingSource.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v4 = sub_1CE0B51E0();
  v5 = MEMORY[0x1E0D93BB8];
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)swift_allocObject();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61340);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + ((*(unsigned int *)(*(_QWORD *)v10 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1CE017160((uint64_t)v7, v10 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v10 + 16), (uint64_t (*)(_QWORD))v5);
  sub_1CDFE19F8((uint64_t)v7, (uint64_t (*)(_QWORD))v5);
  v8[4] = a1;
  v8[5] = a2;
  v11 = MEMORY[0x1E0DEE9D8];
  v8[2] = v10;
  v8[3] = v11;
  return v8;
}

_QWORD *RemoteBrowsingSource.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = sub_1CE0B51E0();
  v6 = MEMORY[0x1E0D93BB8];
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61340);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + ((*(unsigned int *)(*(_QWORD *)v10 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1CE017160((uint64_t)v8, v10 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v10 + 16), (uint64_t (*)(_QWORD))v6);
  sub_1CDFE19F8((uint64_t)v8, (uint64_t (*)(_QWORD))v6);
  v2[4] = a1;
  v2[5] = a2;
  v11 = MEMORY[0x1E0DEE9D8];
  v2[2] = v10;
  v2[3] = v11;
  return v2;
}

uint64_t sub_1CE050358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  char v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  void (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  uint64_t v148;
  NSObject *v149;
  os_log_type_t v150;
  uint8_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t (*v181)(uint64_t, uint64_t, uint64_t);
  int v182;
  uint64_t *v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  char v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t (*v204)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char v209;
  void (*v210)(char *, uint64_t);
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unsigned int (*v219)(uint64_t, uint64_t, uint64_t);
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char v223;
  void (*v224)(char *, uint64_t);
  uint64_t v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  char v230;
  void (*v231)(char *, uint64_t);
  uint64_t result;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t ObjectType;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  char *v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  _QWORD *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;

  v295 = 0;
  v262 = type metadata accessor for AchievementEnvironmentCacheUpdated();
  MEMORY[0x1E0C80A78](v262);
  v261 = (char *)&v236 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CE0B57A4();
  v283 = *(_QWORD *)(v5 - 8);
  v284 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v282 = (char *)&v236 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v281 = (char *)&v236 - v8;
  v280 = sub_1CE0B5180();
  v278 = *(_QWORD *)(v280 - 8);
  MEMORY[0x1E0C80A78](v280);
  v241 = (char *)&v236 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61408);
  MEMORY[0x1E0C80A78](v277);
  v279 = (uint64_t)&v236 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v259 = (uint64_t)&v236 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v294 = (uint64_t)&v236 - v15;
  MEMORY[0x1E0C80A78](v14);
  v293 = (uint64_t)&v236 - v16;
  v258 = type metadata accessor for PersonalizationPrivacyPreferenceUpdated();
  MEMORY[0x1E0C80A78](v258);
  v257 = (char *)&v236 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v276 = sub_1CE0B5A8C();
  v275 = *(_QWORD *)(v276 - 8);
  v18 = MEMORY[0x1E0C80A78](v276);
  v274 = (char *)&v236 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v273 = (char *)&v236 - v20;
  v21 = sub_1CE0B41D8();
  v291 = *(_QWORD *)(v21 - 8);
  v292 = v21;
  MEMORY[0x1E0C80A78](v21);
  v240 = (char *)&v236 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4E8);
  MEMORY[0x1E0C80A78](v271);
  v272 = (char *)&v236 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4C0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v256 = (uint64_t)&v236 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v289 = (uint64_t)&v236 - v28;
  MEMORY[0x1E0C80A78](v27);
  v290 = (uint64_t)&v236 - v29;
  v255 = type metadata accessor for PlaylistsUpdated();
  MEMORY[0x1E0C80A78](v255);
  v254 = (char *)&v236 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = sub_1CE0B4D18();
  v252 = *(_QWORD *)(v253 - 8);
  MEMORY[0x1E0C80A78](v253);
  v251 = (char *)&v236 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for MindfulMinutesMetricUpdated();
  MEMORY[0x1E0C80A78](v242);
  v243 = (char *)&v236 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4D8);
  MEMORY[0x1E0C80A78](v249);
  v264 = (uint64_t)&v236 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  v35 = MEMORY[0x1E0C80A78](v34);
  v37 = (char *)&v236 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v35);
  v40 = (char *)&v236 - v39;
  v41 = MEMORY[0x1E0C80A78](v38);
  v263 = (uint64_t)&v236 - v42;
  MEMORY[0x1E0C80A78](v41);
  v269 = (char *)&v236 - v43;
  v296 = sub_1CE0B5078();
  v288 = *(_QWORD **)(v296 - 8);
  v44 = MEMORY[0x1E0C80A78](v296);
  v237 = (char *)&v236 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v270 = (char *)&v236 - v46;
  v268 = sub_1CE0B4FB8();
  v267 = *(_QWORD *)(v268 - 8);
  MEMORY[0x1E0C80A78](v268);
  v238 = (char *)&v236 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61410);
  MEMORY[0x1E0C80A78](v265);
  v287 = (char *)&v236 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B0);
  v50 = MEMORY[0x1E0C80A78](v49);
  v266 = (char *)&v236 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x1E0C80A78](v50);
  v286 = (uint64_t)&v236 - v53;
  MEMORY[0x1E0C80A78](v52);
  v285 = (uint64_t)&v236 - v54;
  v248 = type metadata accessor for BookmarksUpdated();
  MEMORY[0x1E0C80A78](v248);
  v247 = (char *)&v236 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = sub_1CE0B4C70();
  v245 = *(_QWORD *)(v246 - 8);
  MEMORY[0x1E0C80A78](v246);
  v244 = (char *)&v236 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1CE0B5888();
  v58 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v60 = (char *)&v236 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v298 = a2;
  v61 = sub_1CE0B55F4();
  v62 = a1;
  v63 = sub_1CE0B55F4();
  LOBYTE(a1) = sub_1CE04DD28(v61, v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v239 = v37;
  v250 = v40;
  if ((a1 & 1) != 0)
  {
    v64 = v62;
  }
  else
  {
    v65 = *(_QWORD *)(v297 + 40);
    ObjectType = swift_getObjectType();
    v64 = v62;
    v66 = sub_1CE0B55F4();
    v67 = v295;
    v68 = sub_1CE04C52C(v66);
    swift_bridgeObjectRelease();
    sub_1CDFD02B4(v68);
    swift_bridgeObjectRelease();
    v69 = sub_1CE0B55F4();
    v70 = sub_1CE04C52C(v69);
    v295 = v67;
    swift_bridgeObjectRelease();
    sub_1CDFD02B4(v70);
    swift_bridgeObjectRelease();
    sub_1CE0B587C();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v65 + 8))(v60, v57, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v65);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v57);
  }
  v71 = sub_1CE0B5678();
  v72 = sub_1CE0B5678();
  v73 = sub_1CE04C9B8(v71, v72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v74 = (uint64_t)v287;
  v75 = v288;
  v76 = v268;
  v77 = (uint64_t)v266;
  v78 = v285;
  if ((v73 & 1) == 0)
  {
    v79 = sub_1CE0B5678();
    v80 = sub_1CE0B5678();
    if (*(_QWORD *)(v80 + 16) <= *(_QWORD *)(v79 + 16) >> 3)
    {
      v299 = v79;
      sub_1CE054954(v80, &qword_1EFA61438, (uint64_t (*)(_QWORD))MEMORY[0x1E0D963C0], (void (*)(char *))sub_1CE09D17C);
    }
    else
    {
      sub_1CE055754(v80, v79);
    }
    swift_bridgeObjectRelease();
    ObjectType = v64;
    v81 = sub_1CE0B5678();
    v82 = sub_1CE0B5678();
    v83 = v77;
    if (*(_QWORD *)(v82 + 16) <= *(_QWORD *)(v81 + 16) >> 3)
    {
      v299 = v81;
      sub_1CE054954(v82, &qword_1EFA61438, (uint64_t (*)(_QWORD))MEMORY[0x1E0D963C0], (void (*)(char *))sub_1CE09D17C);
    }
    else
    {
      sub_1CE055754(v82, v81);
    }
    swift_bridgeObjectRelease();
    v84 = v244;
    sub_1CE0B4C64();
    v85 = *(_QWORD *)(v297 + 40);
    v86 = swift_getObjectType();
    v87 = v245;
    v88 = (uint64_t)v247;
    v89 = v246;
    (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v247, v84, v246);
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v85 + 8))(v88, v248, &protocol witness table for BookmarksUpdated, v86, v85);
    sub_1CDFE19F8(v88, (uint64_t (*)(_QWORD))type metadata accessor for BookmarksUpdated);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v89);
    v74 = (uint64_t)v287;
    v75 = v288;
    v77 = v83;
    v64 = ObjectType;
  }
  v90 = sub_1CE0B5534();
  v91 = sub_1CE0B5534();
  v92 = sub_1CE04E028(v90, v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v92 & 1) == 0)
  {
    v93 = *(_QWORD *)(v297 + 40);
    v94 = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v93 + 8))(v94, &type metadata for RecommendationsUpdated, &protocol witness table for RecommendationsUpdated, v94, v93);
  }
  sub_1CE0B55D0();
  v95 = v286;
  sub_1CE0B55D0();
  v96 = v74 + *(int *)(v265 + 48);
  sub_1CDFB1434(v78, v74, &qword_1EFA5F4B0);
  sub_1CDFB1434(v95, v96, &qword_1EFA5F4B0);
  v97 = v267;
  v98 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v267 + 48);
  if (v98(v74, 1, v76) == 1)
  {
    sub_1CDFB13F8(v95, &qword_1EFA5F4B0);
    sub_1CDFB13F8(v78, &qword_1EFA5F4B0);
    if (v98(v96, 1, v76) == 1)
    {
      sub_1CDFB13F8(v74, &qword_1EFA5F4B0);
      v99 = (uint64_t)v269;
      goto LABEL_22;
    }
  }
  else
  {
    sub_1CDFB1434(v74, v77, &qword_1EFA5F4B0);
    if (v98(v96, 1, v76) != 1)
    {
      v100 = v238;
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 32))(v238, v96, v76);
      sub_1CDFB1900(&qword_1EFA61430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92DB8], MEMORY[0x1E0D92DD0]);
      v101 = sub_1CE0B6260();
      v102 = *(void (**)(char *, uint64_t))(v97 + 8);
      v102(v100, v76);
      sub_1CDFB13F8(v286, &qword_1EFA5F4B0);
      sub_1CDFB13F8(v285, &qword_1EFA5F4B0);
      v102((char *)v77, v76);
      sub_1CDFB13F8(v74, &qword_1EFA5F4B0);
      v99 = (uint64_t)v269;
      if ((v101 & 1) != 0)
        goto LABEL_22;
      goto LABEL_21;
    }
    sub_1CDFB13F8(v286, &qword_1EFA5F4B0);
    sub_1CDFB13F8(v78, &qword_1EFA5F4B0);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v77, v76);
  }
  sub_1CDFB13F8(v74, &qword_1EFA61410);
  v99 = (uint64_t)v269;
LABEL_21:
  v103 = *(_QWORD *)(v297 + 40);
  v104 = swift_getObjectType();
  (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v103 + 8))(v104, &type metadata for ServiceSubscriptionUpdated, &protocol witness table for ServiceSubscriptionUpdated, v104, v103);
LABEL_22:
  sub_1CE0B55DC();
  v105 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v75[6];
  if (v105(v99, 1, v296) != 1)
  {
    v106 = (void (*)(char *, uint64_t, uint64_t))v75[4];
    v107 = v270;
    v108 = v296;
    v106(v270, v99, v296);
    v109 = v263;
    v288 = (_QWORD *)v75[2];
    ((void (*)(uint64_t, char *, uint64_t))v288)(v263, v107, v108);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v75[7])(v109, 0, 1, v108);
    v110 = (uint64_t)v250;
    sub_1CE0B55DC();
    v111 = v264;
    v112 = v264 + *(int *)(v249 + 48);
    sub_1CDFB1434(v109, v264, &qword_1EFA5D8C0);
    sub_1CDFB1434(v110, v112, &qword_1EFA5D8C0);
    if (v105(v111, 1, v108) == 1)
    {
      sub_1CDFB13F8(v110, &qword_1EFA5D8C0);
      v111 = v264;
      sub_1CDFB13F8(v109, &qword_1EFA5D8C0);
      if (v105(v112, 1, v296) == 1)
      {
        sub_1CDFB13F8(v111, &qword_1EFA5D8C0);
        ((void (*)(char *, uint64_t))v75[1])(v270, v296);
        goto LABEL_33;
      }
    }
    else
    {
      v113 = (uint64_t)v239;
      sub_1CDFB1434(v111, (uint64_t)v239, &qword_1EFA5D8C0);
      if (v105(v112, 1, v296) != 1)
      {
        v114 = v237;
        v115 = v296;
        v106(v237, v112, v296);
        sub_1CDFB1900(&qword_1EFA5F528, (uint64_t (*)(uint64_t))MEMORY[0x1E0D931E0], MEMORY[0x1E0D931F8]);
        v116 = sub_1CE0B6260();
        v117 = (void (*)(char *, uint64_t))v75[1];
        v117(v114, v115);
        sub_1CDFB13F8(v110, &qword_1EFA5D8C0);
        sub_1CDFB13F8(v263, &qword_1EFA5D8C0);
        v117((char *)v113, v115);
        sub_1CDFB13F8(v111, &qword_1EFA5D8C0);
        if ((v116 & 1) != 0)
        {
          v117(v270, v296);
          goto LABEL_33;
        }
LABEL_32:
        v118 = *(_QWORD *)(v297 + 40);
        v119 = swift_getObjectType();
        v120 = (uint64_t)v243;
        v121 = v270;
        v122 = v296;
        ((void (*)(char *, char *, uint64_t))v288)(v243, v270, v296);
        (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v118 + 8))(v120, v242, &protocol witness table for MindfulMinutesMetricUpdated, v119, v118);
        sub_1CDFE19F8(v120, (uint64_t (*)(_QWORD))type metadata accessor for MindfulMinutesMetricUpdated);
        ((void (*)(char *, uint64_t))v75[1])(v121, v122);
        goto LABEL_33;
      }
      sub_1CDFB13F8(v110, &qword_1EFA5D8C0);
      sub_1CDFB13F8(v263, &qword_1EFA5D8C0);
      ((void (*)(uint64_t, uint64_t))v75[1])(v113, v296);
    }
    sub_1CDFB13F8(v111, &qword_1EFA5F4D8);
    goto LABEL_32;
  }
  sub_1CDFB13F8(v99, &qword_1EFA5D8C0);
LABEL_33:
  v123 = sub_1CE0B5600();
  v124 = sub_1CE0B5600();
  v125 = sub_1CE04CD28(v123, v124);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v126 = sub_1CE0B55A0();
  v127 = sub_1CE0B55A0();
  v128 = sub_1CE04E398(v126, v127);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v129 = sub_1CE0B5570();
  v130 = sub_1CE0B5570();
  v131 = sub_1CE04E708(v129, v130);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v125 & 1) == 0 || (v128 & 1) == 0 || (v131 & 1) == 0)
  {
    if (qword_1ED8F0370 != -1)
      swift_once();
    v132 = sub_1CE0B6080();
    __swift_project_value_buffer(v132, (uint64_t)qword_1ED8F0A48);
    v133 = sub_1CE0B6068();
    v134 = sub_1CE0B6734();
    if (os_log_type_enabled(v133, v134))
    {
      v135 = swift_slowAlloc();
      *(_DWORD *)v135 = 67109632;
      LODWORD(v299) = (v125 & 1) == 0;
      sub_1CE0B68F0();
      *(_WORD *)(v135 + 8) = 1024;
      LODWORD(v299) = (v128 & 1) == 0;
      sub_1CE0B68F0();
      *(_WORD *)(v135 + 14) = 1024;
      LODWORD(v299) = (v131 & 1) == 0;
      sub_1CE0B68F0();
      _os_log_impl(&dword_1CDFAA000, v133, v134, "isCompletedWorkoutCountsUpdated: %{BOOL}d, isProgramProgressionUpdated: %{BOOL}d, isResumableSessionUpdated: %{BOOL}d", (uint8_t *)v135, 0x14u);
      MEMORY[0x1D17C092C](v135, -1, -1);
    }

    v136 = sub_1CE0B5600();
    v137 = sub_1CE0B5600();
    if (*(_QWORD *)(v137 + 16) <= *(_QWORD *)(v136 + 16) >> 3)
    {
      v299 = v136;
      sub_1CE054954(v137, &qword_1EFA61448, (uint64_t (*)(_QWORD))MEMORY[0x1E0D951D0], (void (*)(char *))sub_1CE09CF18);
      swift_bridgeObjectRelease();
      v138 = v299;
    }
    else
    {
      v138 = sub_1CE055198(v137, v136);
      swift_bridgeObjectRelease();
    }
    v139 = v295;
    v140 = sub_1CE04C778(v138);
    v295 = v139;
    swift_bridgeObjectRelease();
    v141 = *(_QWORD *)(v297 + 40);
    v142 = swift_getObjectType();
    v143 = sub_1CDFD0324(v140);
    swift_bridgeObjectRelease();
    v299 = v143;
    (*(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v141 + 8))(&v299, &type metadata for ArchivedSessionsUpdated, &protocol witness table for ArchivedSessionsUpdated, v142, v141);
    swift_bridgeObjectRelease();
  }
  v144 = (uint64_t)v272;
  v145 = sub_1CE0B5588();
  v146 = sub_1CE0B5588();
  v147 = sub_1CE04CD28(v145, v146);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v147 & 1) == 0)
  {
    if (qword_1ED8F0370 != -1)
      swift_once();
    v148 = sub_1CE0B6080();
    __swift_project_value_buffer(v148, (uint64_t)qword_1ED8F0A48);
    v149 = sub_1CE0B6068();
    v150 = sub_1CE0B6734();
    if (os_log_type_enabled(v149, v150))
    {
      v151 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v151 = 67109120;
      LODWORD(v299) = 1;
      sub_1CE0B68F0();
      _os_log_impl(&dword_1CDFAA000, v149, v150, "isCompletedTipCountsUpdated: %{BOOL}d", v151, 8u);
      MEMORY[0x1D17C092C](v151, -1, -1);
    }

    v152 = sub_1CE0B5588();
    v153 = sub_1CE0B5588();
    if (*(_QWORD *)(v153 + 16) <= *(_QWORD *)(v152 + 16) >> 3)
    {
      v299 = v152;
      sub_1CE054954(v153, &qword_1EFA61448, (uint64_t (*)(_QWORD))MEMORY[0x1E0D951D0], (void (*)(char *))sub_1CE09CF18);
      swift_bridgeObjectRelease();
      v154 = v299;
    }
    else
    {
      v154 = sub_1CE055198(v153, v152);
      swift_bridgeObjectRelease();
    }
    v155 = sub_1CE04C778(v154);
    swift_bridgeObjectRelease();
    v156 = *(_QWORD *)(v297 + 40);
    v157 = swift_getObjectType();
    v158 = sub_1CDFD0324(v155);
    swift_bridgeObjectRelease();
    v299 = v158;
    (*(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v156 + 8))(&v299, &type metadata for CatalogTipJournalsUpdated, &protocol witness table for CatalogTipJournalsUpdated, v157, v156);
    swift_bridgeObjectRelease();
  }
  v159 = sub_1CE0B554C();
  v160 = sub_1CE0B554C();
  v161 = sub_1CE04FF7C(v159, v160);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v161 & 1) == 0)
  {
    v162 = *(_QWORD *)(v297 + 40);
    v163 = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v162 + 8))(v163, &type metadata for UpNextQueueItemsUpdated, &protocol witness table for UpNextQueueItemsUpdated, v163, v162);
  }
  v164 = sub_1CE0B5684();
  v165 = sub_1CE0B5684();
  v166 = sub_1CE04EA78(v164, v165);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v167 = v292;
  if ((v166 & 1) == 0)
  {
    v168 = sub_1CE0B5684();
    v169 = sub_1CE0B5684();
    if (*(_QWORD *)(v169 + 16) <= *(_QWORD *)(v168 + 16) >> 3)
    {
      v299 = v168;
      sub_1CE054954(v169, &qword_1EFA61458, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96538], (void (*)(char *))sub_1CE09CCB4);
    }
    else
    {
      sub_1CE054BDC(v169, v168);
    }
    swift_bridgeObjectRelease();
    v170 = sub_1CE0B5684();
    v171 = sub_1CE0B5684();
    if (*(_QWORD *)(v171 + 16) <= *(_QWORD *)(v170 + 16) >> 3)
    {
      v299 = v170;
      sub_1CE054954(v171, &qword_1EFA61458, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96538], (void (*)(char *))sub_1CE09CCB4);
    }
    else
    {
      sub_1CE054BDC(v171, v170);
    }
    swift_bridgeObjectRelease();
    v172 = v251;
    sub_1CE0B4D0C();
    v173 = *(_QWORD *)(v297 + 40);
    v174 = swift_getObjectType();
    v175 = v252;
    v176 = (uint64_t)v254;
    v177 = v253;
    (*(void (**)(char *, char *, uint64_t))(v252 + 16))(v254, v172, v253);
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v173 + 8))(v176, v255, &protocol witness table for PlaylistsUpdated, v174, v173);
    sub_1CDFE19F8(v176, (uint64_t (*)(_QWORD))type metadata accessor for PlaylistsUpdated);
    (*(void (**)(char *, uint64_t))(v175 + 8))(v172, v177);
    v167 = v292;
  }
  v178 = v290;
  sub_1CE0B5558();
  v179 = v289;
  sub_1CE0B5558();
  v180 = v144 + *(int *)(v271 + 48);
  sub_1CDFB1434(v178, v144, &qword_1EFA5F4C0);
  sub_1CDFB1434(v179, v180, &qword_1EFA5F4C0);
  v181 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v291 + 48);
  if (v181(v144, 1, v167) == 1)
  {
    sub_1CDFB13F8(v179, &qword_1EFA5F4C0);
    sub_1CDFB13F8(v178, &qword_1EFA5F4C0);
    v182 = v181(v180, 1, v167);
    if (v182 == 1)
      v183 = &qword_1EFA5F4C0;
    else
      v183 = &qword_1EFA5F4E8;
    if (v182 == 1)
      v184 = -1;
    else
      v184 = 0;
  }
  else
  {
    v185 = v256;
    sub_1CDFB1434(v144, v256, &qword_1EFA5F4C0);
    if (v181(v180, 1, v167) == 1)
    {
      sub_1CDFB13F8(v289, &qword_1EFA5F4C0);
      sub_1CDFB13F8(v290, &qword_1EFA5F4C0);
      (*(void (**)(uint64_t, uint64_t))(v291 + 8))(v185, v167);
      v184 = 0;
      v183 = &qword_1EFA5F4E8;
    }
    else
    {
      v186 = v291;
      v187 = v240;
      (*(void (**)(char *, uint64_t, uint64_t))(v291 + 32))(v240, v180, v167);
      sub_1CDFB1900(&qword_1EFA5F538, (uint64_t (*)(uint64_t))MEMORY[0x1E0D905E0], MEMORY[0x1E0D905F8]);
      v184 = sub_1CE0B6260();
      v188 = *(void (**)(char *, uint64_t))(v186 + 8);
      v188(v187, v167);
      v183 = &qword_1EFA5F4C0;
      sub_1CDFB13F8(v289, &qword_1EFA5F4C0);
      sub_1CDFB13F8(v290, &qword_1EFA5F4C0);
      v188((char *)v185, v167);
    }
  }
  sub_1CDFB13F8(v144, v183);
  v189 = sub_1CE0B55E8();
  v190 = sub_1CE0B55E8();
  v191 = sub_1CE04EDE8(v189, v190);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v192 = sub_1CE0B5624();
  v193 = sub_1CE0B5624();
  v194 = sub_1CE04F158(v192, v193);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v195 = sub_1CE0B5630();
  v196 = sub_1CE0B5630();
  v197 = sub_1CE04F4C8(v195, v196);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v184 & 1) == 0 || (v191 & 1) == 0 || (v194 & 1) == 0 || (v197 & 1) == 0)
  {
    if (qword_1ED8F0370 != -1)
      swift_once();
    v198 = sub_1CE0B6080();
    __swift_project_value_buffer(v198, (uint64_t)qword_1ED8F0A48);
    v199 = sub_1CE0B6068();
    v200 = sub_1CE0B6734();
    if (os_log_type_enabled(v199, v200))
    {
      v201 = swift_slowAlloc();
      *(_DWORD *)v201 = 67109888;
      ObjectType = v64;
      LODWORD(v299) = (v184 & 1) == 0;
      sub_1CE0B68F0();
      *(_WORD *)(v201 + 8) = 1024;
      LODWORD(v299) = (v191 & 1) == 0;
      sub_1CE0B68F0();
      *(_WORD *)(v201 + 14) = 1024;
      LODWORD(v299) = (v194 & 1) == 0;
      sub_1CE0B68F0();
      *(_WORD *)(v201 + 20) = 1024;
      LODWORD(v299) = (v197 & 1) == 0;
      sub_1CE0B68F0();
      _os_log_impl(&dword_1CDFAA000, v199, v200, "workoutPlansUpdated: %{BOOL}d  %{BOOL}d  %{BOOL}d  %{BOOL}d", (uint8_t *)v201, 0x1Au);
      MEMORY[0x1D17C092C](v201, -1, -1);
    }

    v202 = *(_QWORD *)(v297 + 40);
    v203 = swift_getObjectType();
    v204 = *(uint64_t (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v202 + 8);
    v205 = v204(v203, &type metadata for WorkoutPlansUpdated, &protocol witness table for WorkoutPlansUpdated, v203, v202);
    if ((v184 & 1) == 0)
      v204(v205, &type metadata for ActiveWorkoutPlanUpdated, &protocol witness table for ActiveWorkoutPlanUpdated, v203, v202);
  }
  v206 = v273;
  sub_1CE0B5654();
  v207 = v274;
  sub_1CE0B5654();
  sub_1CDFB1900(&qword_1EFA61418, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95A88], MEMORY[0x1E0D95AA0]);
  v208 = v276;
  v209 = sub_1CE0B6260();
  v210 = *(void (**)(char *, uint64_t))(v275 + 8);
  v210(v207, v208);
  v210(v206, v208);
  if ((v209 & 1) == 0)
  {
    v211 = *(_QWORD *)(v297 + 40);
    v212 = swift_getObjectType();
    v213 = (uint64_t)v257;
    sub_1CE0B5654();
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v211 + 8))(v213, v258, &protocol witness table for PersonalizationPrivacyPreferenceUpdated, v212, v211);
    sub_1CDFE19F8(v213, (uint64_t (*)(_QWORD))type metadata accessor for PersonalizationPrivacyPreferenceUpdated);
  }
  v214 = v293;
  sub_1CE0B560C();
  v215 = v294;
  sub_1CE0B560C();
  v216 = v279;
  v217 = v279 + *(int *)(v277 + 48);
  sub_1CDFB1434(v214, v279, &qword_1EFA5F4B8);
  sub_1CDFB1434(v215, v217, &qword_1EFA5F4B8);
  v218 = v278;
  v219 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v278 + 48);
  v220 = v280;
  if (v219(v216, 1, v280) == 1)
  {
    sub_1CDFB13F8(v294, &qword_1EFA5F4B8);
    sub_1CDFB13F8(v293, &qword_1EFA5F4B8);
    if (v219(v217, 1, v220) == 1)
    {
      sub_1CDFB13F8(v216, &qword_1EFA5F4B8);
      goto LABEL_93;
    }
  }
  else
  {
    v221 = v259;
    sub_1CDFB1434(v216, v259, &qword_1EFA5F4B8);
    if (v219(v217, 1, v220) != 1)
    {
      v222 = v241;
      (*(void (**)(char *, uint64_t, uint64_t))(v218 + 32))(v241, v217, v220);
      sub_1CDFB1900(&qword_1EFA61428, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93A10], MEMORY[0x1E0D93A28]);
      v223 = sub_1CE0B6260();
      v224 = *(void (**)(char *, uint64_t))(v218 + 8);
      v224(v222, v220);
      sub_1CDFB13F8(v294, &qword_1EFA5F4B8);
      sub_1CDFB13F8(v293, &qword_1EFA5F4B8);
      v224((char *)v221, v220);
      sub_1CDFB13F8(v216, &qword_1EFA5F4B8);
      if ((v223 & 1) != 0)
        goto LABEL_93;
      goto LABEL_92;
    }
    sub_1CDFB13F8(v294, &qword_1EFA5F4B8);
    sub_1CDFB13F8(v293, &qword_1EFA5F4B8);
    (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v221, v220);
  }
  sub_1CDFB13F8(v216, &qword_1EFA61408);
LABEL_92:
  v225 = *(_QWORD *)(v297 + 40);
  v226 = swift_getObjectType();
  (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v225 + 8))(v226, &type metadata for OnboardingSurveyResultsUpdated, &protocol witness table for OnboardingSurveyResultsUpdated, v226, v225);
LABEL_93:
  v227 = v281;
  sub_1CE0B5510();
  v228 = v282;
  sub_1CE0B5510();
  sub_1CDFB1900(&qword_1EFA61420, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94E18], MEMORY[0x1E0D94E30]);
  v229 = v284;
  v230 = sub_1CE0B6260();
  v231 = *(void (**)(char *, uint64_t))(v283 + 8);
  v231(v228, v229);
  result = ((uint64_t (*)(char *, uint64_t))v231)(v227, v229);
  if ((v230 & 1) == 0)
  {
    v233 = *(_QWORD *)(v297 + 40);
    v234 = swift_getObjectType();
    v235 = (uint64_t)v261;
    sub_1CE0B5510();
    (*(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v233 + 8))(v235, v262, &protocol witness table for AchievementEnvironmentCacheUpdated, v234, v233);
    return sub_1CDFE19F8(v235, (uint64_t (*)(_QWORD))type metadata accessor for AchievementEnvironmentCacheUpdated);
  }
  return result;
}

uint64_t sub_1CE052308@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA614C0);
  result = sub_1CE0B42C8();
  *a1 = v3;
  return result;
}

uint64_t RemoteBrowsingSource.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteBrowsingSource.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void RemoteBrowsingSource.appendJournalEntry(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1CE052438(v4, v1, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1CE052438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  Swift::String v27;
  unint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a3;
  v5 = type metadata accessor for RemoteBrowsingJournalEntry();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v39 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B51E0();
  v8 = MEMORY[0x1E0D93BB8];
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B5690();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v36 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v36 - v19;
  sub_1CE017160(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))v8);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v10, 1, v21) == 1)
    return sub_1CDFE19F8((uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93BB8]);
  v23 = &v10[*(int *)(v21 + 48)];
  v36 = v12;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v23, v11);
  v24 = sub_1CE0B4D48();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v10, v24);
  if (qword_1ED8F0370 != -1)
    swift_once();
  v25 = sub_1CE0B6080();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED8F0A48);
  v26._countAndFlagsBits = 0xD000000000000075;
  v26._object = (void *)0x80000001CE0CAF70;
  v27._object = (void *)0x80000001CE0CB030;
  v27._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v26, v27);
  v28 = (unint64_t *)(a2 + 24);
  swift_beginAccess();
  v29 = swift_bridgeObjectRetain();
  RemoteBrowsingEnvironment.applyingJournal(_:)(v29, (uint64_t)v18);
  swift_bridgeObjectRelease();
  sub_1CE017160(v37, v39, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
  swift_beginAccess();
  v30 = *(_QWORD *)(a2 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 24) = v30;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v30 = sub_1CE091108(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
    *v28 = v30;
  }
  v33 = *(_QWORD *)(v30 + 16);
  v32 = *(_QWORD *)(v30 + 24);
  if (v33 >= v32 >> 1)
  {
    v30 = sub_1CE091108(v32 > 1, v33 + 1, 1, v30);
    *v28 = v30;
  }
  *(_QWORD *)(v30 + 16) = v33 + 1;
  sub_1CE056B08(v39, v30+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v33, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
  swift_endAccess();
  v34 = swift_bridgeObjectRetain();
  RemoteBrowsingEnvironment.applyingJournal(_:)(v34, (uint64_t)v15);
  swift_bridgeObjectRelease();
  sub_1CE050358((uint64_t)v18, (uint64_t)v15);
  v35 = *(void (**)(char *, uint64_t))(v36 + 8);
  v35(v15, v11);
  v35(v18, v11);
  return ((uint64_t (*)(char *, uint64_t))v35)(v20, v11);
}

void sub_1CE0527D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1CE0542FC(v2);
  os_unfair_lock_unlock(v3);
}

void RemoteBrowsingSource.queryActiveParticipant()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1CE0528CC(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1CE0528CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1CE0B51E0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE017160(a1, (uint64_t)v6, v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) == 1)
  {
    v9 = sub_1CE0B4D48();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  else
  {
    v11 = &v6[*(int *)(v8 + 48)];
    v12 = sub_1CE0B4D48();
    v13 = *(_QWORD *)(v12 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a2, v6, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
    v14 = sub_1CE0B5690();
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v11, v14);
  }
}

void RemoteBrowsingSource.queryActiveEnvironment()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1CE052A84(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1CE052A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_1CE0B5690();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B51E0();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE017160(a1, (uint64_t)v10, v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v12 + 48)], v4);
  swift_beginAccess();
  v14 = swift_bridgeObjectRetain();
  RemoteBrowsingEnvironment.applyingJournal(_:)(v14, a2);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
  v15 = sub_1CE0B4D48();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v10, v15);
}

uint64_t RemoteBrowsingSource.remoteDeviceForSession()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1CE052CAC(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void sub_1CE052CAC(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(_QWORD);
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char *v21;
  char v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = sub_1CE0B4D48();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v34 - v10;
  v12 = sub_1CE0B51E0();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE017160(a1, (uint64_t)v14, v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16) == 1)
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v17 = sub_1CE0B6080();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED8F1870);
    v18 = sub_1CE0B6068();
    v19 = sub_1CE0B671C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1CDFAA000, v18, v19, "[RemoteBrowsingSource] Couldn't determine remote device while in anonymous state.", v20, 2u);
      MEMORY[0x1D17C092C](v20, -1, -1);
    }

    *a2 = 3;
  }
  else
  {
    v21 = &v14[*(int *)(v16 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v14, v5);
    v22 = sub_1CE0B4D24();
    if (v22 != 4)
    {
      v31 = v22;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      __asm { BR              X10 }
    }
    v37 = v21;
    v38 = a2;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v23 = sub_1CE0B6080();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED8F1870);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    v24 = sub_1CE0B6068();
    v25 = sub_1CE0B671C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v40 = v35;
      v36 = v2;
      *(_DWORD *)v26 = 136315138;
      v34 = v26 + 4;
      sub_1CDFB1900(&qword_1EFA614E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D925B8], MEMORY[0x1E0D925D0]);
      v27 = sub_1CE0B6C14();
      v39 = sub_1CDFC7270(v27, v28, &v40);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v29 = *(void (**)(char *, uint64_t))(v6 + 8);
      v29(v9, v5);
      _os_log_impl(&dword_1CDFAA000, v24, v25, "[RemoteBrowsingSource] Couldn't determine remote device with null device on participant %s", v26, 0xCu);
      v30 = v35;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v30, -1, -1);
      MEMORY[0x1D17C092C](v26, -1, -1);

      v29(v11, v5);
    }
    else
    {

      v32 = *(void (**)(char *, uint64_t))(v6 + 8);
      v32(v9, v5);
      v32(v11, v5);
    }
    *v38 = 3;
    v33 = sub_1CE0B5690();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v37, v33);
  }
}

void sub_1CE053104(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1CE0528CC(v4, a1);
  os_unfair_lock_unlock(v5);
}

void sub_1CE053184(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1CE0542E4(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1CE053200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return RemoteBrowsingSource.applyActiveEnvironment<A>(to:)(a1, a2, a3, a4);
}

uint64_t RemoteBrowsingSource.applyActiveEnvironment<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  _QWORD v20[2];

  v5 = v4;
  v20[0] = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61348);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B5690();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v5 + 16);
  v17 = v16 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v16 + 16);
  v18 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(_QWORD *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v18);
  sub_1CE052A84(v17, (uint64_t)v11);
  os_unfair_lock_unlock(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1CDFB13F8((uint64_t)v11, &qword_1EFA61348);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v20[0], a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 8))(v15, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_1CE0533C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  unsigned __int8 v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v2 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1CE052CAC(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

void RemoteBrowsingSource.updateActiveIdentity(_:)(uint64_t a1)
{
  sub_1CE053670(a1, (void (*)(uint64_t, uint64_t, uint64_t))sub_1CE053450);
}

uint64_t sub_1CE053450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;

  v6 = type metadata accessor for RemoteBrowsingIdentityUpdated();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B51E0();
  v10 = MEMORY[0x1E0D93BB8];
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE017160(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))v10);
  v13 = MEMORY[0x1D17BE544](a2, v12);
  result = sub_1CDFE19F8((uint64_t)v12, (uint64_t (*)(_QWORD))v10);
  if ((v13 & 1) == 0)
  {
    sub_1CDFE19F8(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93BB8]);
    if (qword_1ED8F0370 != -1)
      swift_once();
    v15 = sub_1CE0B6080();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F0A48);
    v16._countAndFlagsBits = 0xD000000000000075;
    v16._object = (void *)0x80000001CE0CAF70;
    v17._object = (void *)0x80000001CE0CB010;
    v17._countAndFlagsBits = 0xD000000000000018;
    Logger.trace(file:function:)(v16, v17);
    v18 = MEMORY[0x1E0D93BB8];
    sub_1CE017160(a2, a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93BB8]);
    swift_beginAccess();
    *(_QWORD *)(a3 + 24) = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(a3 + 40);
    ObjectType = swift_getObjectType();
    sub_1CE017160(a2, (uint64_t)v8, (uint64_t (*)(_QWORD))v18);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v19 + 8))(v8, v6, &protocol witness table for RemoteBrowsingIdentityUpdated, ObjectType, v19);
    return sub_1CDFE19F8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingIdentityUpdated);
  }
  return result;
}

void RemoteBrowsingSource.updateActiveEnvironment(_:)(uint64_t a1)
{
  sub_1CE053670(a1, (void (*)(uint64_t, uint64_t, uint64_t))sub_1CE0536F8);
}

void sub_1CE053670(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = v5 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v5 + 16);
  v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(_QWORD *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v7);
  a2(v6, a1, v2);
  os_unfair_lock_unlock(v7);
}

uint64_t sub_1CE0536F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a3;
  v54 = a2;
  v5 = sub_1CE0B51E0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B5690();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v52 = (uint64_t)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v51 = (uint64_t)&v44 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v44 - v14;
  v16 = sub_1CE0B4D48();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  sub_1CE017160(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93BB8]);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  v49 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v7, 1, v20) == 1)
    return sub_1CDFE19F8((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93BB8]);
  v55 = v3;
  v47 = v20;
  v22 = &v7[*(int *)(v20 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v7, v16);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v22, v8);
  sub_1CDFB1900(&qword_1EFA61400, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94AC0], MEMORY[0x1E0D94AD0]);
  v23 = v54;
  if ((sub_1CE0B6260() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
  else
  {
    v46 = v8;
    v48 = v17;
    v24 = v53;
    v25 = swift_beginAccess();
    v26 = *(_QWORD *)(v24 + 24);
    MEMORY[0x1E0C80A78](v25);
    *(&v44 - 2) = v23;
    swift_bridgeObjectRetain();
    v27 = v26;
    v28 = v55;
    v29 = sub_1CE04FA48((uint64_t (*)(char *))sub_1CE054314, (uint64_t)(&v44 - 4), v27);
    v55 = v28;
    v30 = v50;
    sub_1CDFE19F8(v50, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93BB8]);
    *(_QWORD *)(v24 + 24) = v29;
    swift_bridgeObjectRelease();
    if (qword_1ED8F0370 != -1)
      swift_once();
    v31 = sub_1CE0B6080();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED8F0A48);
    v32._countAndFlagsBits = 0xD000000000000075;
    v32._object = (void *)0x80000001CE0CAF70;
    v33._object = (void *)0x80000001CE0CAFF0;
    v33._countAndFlagsBits = 0xD00000000000001BLL;
    Logger.trace(file:function:)(v32, v33);
    v34 = v47;
    v35 = v30 + *(int *)(v47 + 48);
    v36 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 16);
    v44 = v16;
    v45 = v19;
    v36(v30, v19, v16);
    v37 = v23;
    v38 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v35, v37, v46);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56))(v30, 0, 1, v34);
    v39 = *(_QWORD *)(v24 + 24);
    swift_bridgeObjectRetain();
    v40 = v51;
    RemoteBrowsingEnvironment.applyingJournal(_:)(v39, v51);
    swift_bridgeObjectRelease();
    v41 = swift_bridgeObjectRetain();
    v42 = v52;
    RemoteBrowsingEnvironment.applyingJournal(_:)(v41, v52);
    swift_bridgeObjectRelease();
    sub_1CE050358(v40, v42);
    v43 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v43(v42, v38);
    v43(v40, v38);
    v43((uint64_t)v15, v38);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v45, v44);
  }
}

uint64_t sub_1CE053B24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  char *v71;

  v62 = a2;
  v71 = (char *)a1;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA614D0);
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4C0);
  MEMORY[0x1E0C80A78](v3);
  v68 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA614D8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v56 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v56 - v11;
  MEMORY[0x1E0C80A78](v10);
  v69 = (void (*)(char *, uint64_t, uint64_t))((char *)&v56 - v12);
  v67 = sub_1CE0B5204();
  v65 = *(char **)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1CE0B3E24();
  v70 = *(_QWORD *)(v66 - 8);
  v15 = MEMORY[0x1E0C80A78](v66);
  v58 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v56 - v17;
  v19 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for RemoteBrowsingJournalProperty();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v56 - v26;
  v28 = sub_1CE0B5840();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v31 = (char *)&v56 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE017160((uint64_t)v71, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
  sub_1CE056B08((uint64_t)v21, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
  sub_1CE056B08((uint64_t)v25, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
  if (swift_getEnumCaseMultiPayload() == 24)
  {
    v32 = (uint64_t)v68;
    v71 = v18;
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
    sub_1CE0B581C();
    v33 = (uint64_t)v69;
    sub_1CE0B51EC();
    (*((void (**)(char *, uint64_t))v65 + 1))(v14, v67);
    v34 = v70;
    v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    v36 = v66;
    if (v35(v33, 1, v66) != 1)
    {
      v65 = v31;
      v57 = v29;
      v67 = v28;
      v39 = (uint64_t)v71;
      v69 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 32);
      v69(v71, v33, v36);
      v40 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v64, v39, v36);
      v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56);
      v41(v40, 0, 1, v36);
      sub_1CE0B5558();
      v42 = sub_1CE0B41D8();
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v32, 1, v42) == 1)
      {
        sub_1CDFB13F8(v32, &qword_1EFA5F4C0);
        v44 = 1;
        v46 = (uint64_t)v60;
        v45 = (uint64_t)v61;
      }
      else
      {
        v46 = (uint64_t)v60;
        sub_1CE0B4178();
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v32, v42);
        v44 = 0;
        v45 = (uint64_t)v61;
      }
      v47 = (uint64_t)v63;
      v48 = (uint64_t)v64;
      v49 = v59;
      v50 = v57;
      v41((char *)v46, v44, 1, v36);
      v51 = v45 + *(int *)(v49 + 48);
      sub_1CDFB1434(v48, v45, &qword_1EFA614D8);
      sub_1CDFB1434(v46, v51, &qword_1EFA614D8);
      if (v35(v45, 1, v36) == 1)
      {
        sub_1CDFB13F8(v46, &qword_1EFA614D8);
        sub_1CDFB13F8(v48, &qword_1EFA614D8);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v36);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v65, v67);
        if (v35(v51, 1, v36) == 1)
        {
          sub_1CDFB13F8(v45, &qword_1EFA614D8);
          v37 = 1;
          return v37 & 1;
        }
      }
      else
      {
        sub_1CDFB1434(v45, v47, &qword_1EFA614D8);
        if (v35(v51, 1, v36) != 1)
        {
          v53 = v58;
          v69(v58, v51, v36);
          sub_1CDFB1900(&qword_1EFA5E0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v37 = sub_1CE0B6260();
          v54 = v50;
          v55 = *(void (**)(char *, uint64_t))(v70 + 8);
          v55(v53, v36);
          sub_1CDFB13F8(v46, &qword_1EFA614D8);
          sub_1CDFB13F8(v48, &qword_1EFA614D8);
          v55(v71, v36);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v65, v67);
          v55(v63, v36);
          sub_1CDFB13F8(v45, &qword_1EFA614D8);
          return v37 & 1;
        }
        sub_1CDFB13F8(v46, &qword_1EFA614D8);
        sub_1CDFB13F8(v48, &qword_1EFA614D8);
        v52 = *(void (**)(char *, uint64_t))(v70 + 8);
        v52(v71, v36);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v65, v67);
        v52((char *)v47, v36);
      }
      sub_1CDFB13F8(v45, &qword_1EFA614D0);
      v37 = 0;
      return v37 & 1;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    sub_1CDFB13F8(v33, &qword_1EFA614D8);
    v37 = 0;
  }
  else
  {
    sub_1CDFE19F8((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
    v37 = 1;
  }
  return v37 & 1;
}

void sub_1CE0541E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CE054200(a1, a2, a3, (void (*)(uint64_t))sub_1CE0542CC);
}

void sub_1CE0541F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CE054200(a1, a2, a3, (void (*)(uint64_t))sub_1CE0542B4);
}

void sub_1CE054200(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  v7 = v6 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v6 + 16);
  v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(_QWORD *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  a4(v7);
  os_unfair_lock_unlock(v8);
}

uint64_t type metadata accessor for RemoteBrowsingSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for RemoteBrowsingSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteBrowsingSource.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1CE0542B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0536F8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE0542CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE053450(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE0542E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CE052A84(a1, a2);
}

uint64_t sub_1CE0542FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE052438(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE054314(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE053B24(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1CE054330(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], &qword_1EFA61508, &qword_1EFA5E388, MEMORY[0x1E0D93B78]);
}

uint64_t sub_1CE054354(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], (uint64_t *)&unk_1EFA63C80, &qword_1EFA63C70, MEMORY[0x1E0D91F60]);
}

uint64_t sub_1CE054378(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t *a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;

  v41 = a7;
  v42 = a8;
  v40 = a5;
  v13 = a5(0);
  v43 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_1CE0B69EC();
  v16 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 56;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v39)
      {
LABEL_37:
        swift_release();
        return v16;
      }
      v24 = v38[v23];
      ++v19;
      if (!v24)
      {
        v19 = v23 + 1;
        if (v23 + 1 >= v39)
          goto LABEL_37;
        v24 = v38[v19];
        if (!v24)
        {
          v19 = v23 + 2;
          if (v23 + 2 >= v39)
            goto LABEL_37;
          v24 = v38[v19];
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v39)
              goto LABEL_37;
            v24 = v38[v25];
            if (!v24)
            {
              while (1)
              {
                v19 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v19 >= v39)
                  goto LABEL_37;
                v24 = v38[v19];
                ++v25;
                if (v24)
                  goto LABEL_24;
              }
            }
            v19 = v25;
          }
        }
      }
LABEL_24:
      v18 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
    }
    v26 = a4;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = *(_QWORD *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v15, v27 + v28 * v22, v13);
    sub_1CDFB1900(v41, v40, v42);
    result = sub_1CE0B6230();
    v29 = -1 << *(_BYTE *)(v16 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v20 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v20 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v20 + 8 * v31);
      }
      while (v36 == -1);
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(_QWORD *)(v20 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v43 + 32))(*(_QWORD *)(v16 + 48) + v32 * v28, v15, v13);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v26;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CE054668(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94940], &qword_1EFA61500, &qword_1EFA5E280, MEMORY[0x1E0D94950]);
}

uint64_t sub_1CE05468C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D944D0], (uint64_t *)&unk_1EFA63CD0, &qword_1EFA63CC0, MEMORY[0x1E0D944E0]);
}

uint64_t sub_1CE0546B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94338], &qword_1EFA614F8, &qword_1EFA5E2B0, MEMORY[0x1E0D94348]);
}

uint64_t sub_1CE0546D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91318], &qword_1EFA614F0, &qword_1EFA614A8, MEMORY[0x1E0D91328]);
}

uint64_t sub_1CE0546F8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], (uint64_t *)&unk_1EFA63BF0, (unint64_t *)&unk_1EFA63BE0, MEMORY[0x1E0D951E0]);
}

uint64_t sub_1CE05471C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], &qword_1EFA61440, &qword_1EFA5E380, MEMORY[0x1E0D963D0]);
}

uint64_t sub_1CE054740(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], (uint64_t *)&unk_1EFA63D00, (unint64_t *)&unk_1EFA63CF0, MEMORY[0x1E0D91FB0]);
}

uint64_t sub_1CE054764(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE054378(a1, a2, a3, a4, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], &qword_1EFA61460, &qword_1EFA5D990, MEMORY[0x1E0D96548]);
}

uint64_t sub_1CE054788(uint64_t a1)
{
  return sub_1CE054954(a1, &qword_1EFA5E5A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93B68], (void (*)(char *))sub_1CE09C660);
}

uint64_t sub_1CE0547A4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1CE09C8C4(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1CE054938(uint64_t a1)
{
  return sub_1CE054954(a1, &qword_1EFA614E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95480], (void (*)(char *))sub_1CE09CA50);
}

uint64_t sub_1CE054954(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), void (*a4)(char *))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  void (*v32)(char *);

  v32 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a3(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v29 - v17;
  if (!*(_QWORD *)(*(_QWORD *)v4 + 16))
    return result;
  v19 = *(_QWORD *)(a1 + 56);
  v30 = a1 + 56;
  v20 = 1 << *(_BYTE *)(a1 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v31 = (unint64_t)(v20 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v23 = 0;
  while (1)
  {
    if (v22)
    {
      v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v25 = v24 | (v23 << 6);
      goto LABEL_6;
    }
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v31)
      return swift_release();
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v23;
    if (!v27)
    {
      v23 = v26 + 1;
      if (v26 + 1 >= v31)
        return swift_release();
      v27 = *(_QWORD *)(v30 + 8 * v23);
      if (!v27)
      {
        v23 = v26 + 2;
        if (v26 + 2 >= v31)
          return swift_release();
        v27 = *(_QWORD *)(v30 + 8 * v23);
        if (!v27)
        {
          v23 = v26 + 3;
          if (v26 + 3 >= v31)
            return swift_release();
          v27 = *(_QWORD *)(v30 + 8 * v23);
          if (!v27)
            break;
        }
      }
    }
LABEL_23:
    v22 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v12 + 16))(v18, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v12 + 72) * v25, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v18, v11);
    v32(v15);
    sub_1CDFB13F8((uint64_t)v10, a2);
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  v28 = v26 + 4;
  if (v28 >= v31)
    return swift_release();
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v23 = v28;
    goto LABEL_23;
  }
  while (1)
  {
    v23 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v23 >= v31)
      return swift_release();
    v27 = *(_QWORD *)(v30 + 8 * v23);
    ++v28;
    if (v27)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1CE054BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61458);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B5F60();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1CDFC879C();
      sub_1CDFB13F8((uint64_t)v6, &qword_1EFA61458);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_1CDFB1900(&qword_1EFA5D990, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96548]);
    v33 = sub_1CE0B6230();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1CDFB1900((unint64_t *)&unk_1EFA63BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96550]);
    v40 = sub_1CE0B6260();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_1CE055D10((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_1CDFC879C();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_1CE055D10((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_1CDFC879C();
    MEMORY[0x1D17C092C](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_1CE055198(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61448);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B58A0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1CDFC879C();
      sub_1CDFB13F8((uint64_t)v6, &qword_1EFA61448);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_1CDFB1900((unint64_t *)&unk_1EFA63BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E0]);
    v33 = sub_1CE0B6230();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1CDFB1900(&qword_1EFA61450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E8]);
    v40 = sub_1CE0B6260();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_1CE056188((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_1CDFC879C();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_1CE056188((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_1CDFC879C();
    MEMORY[0x1D17C092C](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_1CE055754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61438);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B5EC4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1CDFC879C();
      sub_1CDFB13F8((uint64_t)v6, &qword_1EFA61438);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_1CDFB1900(&qword_1EFA5E380, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D0]);
    v33 = sub_1CE0B6230();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1CDFB1900(&qword_1EFA63C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D8]);
    v40 = sub_1CE0B6260();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_1CE056600((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_1CDFC879C();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_1CE056600((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_1CDFC879C();
    MEMORY[0x1D17C092C](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_1CE055D10(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61458);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B5F60();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v25 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v25 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v25 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1CDFB13F8((uint64_t)v11, &qword_1EFA61458);
          v47 = v56;
          swift_retain();
          return sub_1CE054378(v51, v49, v50, v47, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], &qword_1EFA61460, &qword_1EFA5D990, MEMORY[0x1E0D96548]);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_1CDFB1900(&qword_1EFA5D990, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96548]);
        v33 = sub_1CE0B6230();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_1CDFB1900((unint64_t *)&unk_1EFA63BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96550]);
        v39 = sub_1CE0B6260();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CE056188(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61448);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B58A0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v25 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v25 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v25 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1CDFB13F8((uint64_t)v11, &qword_1EFA61448);
          v47 = v56;
          swift_retain();
          return sub_1CE054378(v51, v49, v50, v47, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], (uint64_t *)&unk_1EFA63BF0, (unint64_t *)&unk_1EFA63BE0, MEMORY[0x1E0D951E0]);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_1CDFB1900((unint64_t *)&unk_1EFA63BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E0]);
        v33 = sub_1CE0B6230();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_1CDFB1900(&qword_1EFA61450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E8]);
        v39 = sub_1CE0B6260();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1CE056600(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;

  v49 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61438);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B5EC4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v48 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v51 = a1;
  v52 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v55 = a3 + 56;
  v56 = a3;
  v53 = a5;
  while (2)
  {
    v50 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v54 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        v45 = v26 + 2;
        if (v26 + 2 >= v41)
          goto LABEL_35;
        v42 = *(_QWORD *)(v25 + 8 * v45);
        if (v42)
          goto LABEL_23;
        if (v26 + 3 >= v41)
          goto LABEL_36;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v45 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v45);
          if (v42)
          {
LABEL_23:
            v40 = v45;
LABEL_17:
            v29 = (v42 - 1) & v42;
            v30 = __clz(__rbit64(v42)) + (v40 << 6);
            v26 = v40;
            goto LABEL_7;
          }
          v40 = v26 + 5;
          if (v26 + 5 < v41)
          {
            v42 = *(_QWORD *)(v25 + 8 * v40);
            if (v42)
              goto LABEL_17;
            v40 = v41 - 1;
            v46 = v26 + 6;
            while (v41 != v46)
            {
              v42 = *(_QWORD *)(v25 + 8 * v46++);
              if (v42)
              {
                v40 = v46 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v40;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v45;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v54;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1CDFB13F8((uint64_t)v11, &qword_1EFA61438);
          v47 = v56;
          swift_retain();
          return sub_1CE054378(v51, v49, v50, v47, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], &qword_1EFA61440, &qword_1EFA5E380, MEMORY[0x1E0D963D0]);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v57, v11, v12);
        v32 = v56;
        sub_1CDFB1900(&qword_1EFA5E380, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D0]);
        v33 = sub_1CE0B6230();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v57, v12);
        v11 = v52;
        a5 = v53;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v56 + 48) + v37 * v35, v12);
        sub_1CDFB1900(&qword_1EFA63C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D8]);
        v39 = sub_1CE0B6260();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v55 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v57, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v52;
      v44 = *(unint64_t *)((char *)v51 + v43);
      *(unint64_t *)((char *)v51 + v43) = v44 & ~(1 << v35);
      a5 = v53;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v50 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

unint64_t sub_1CE056A7C()
{
  unint64_t result;

  result = qword_1EFA614B8;
  if (!qword_1EFA614B8)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90D20], MEMORY[0x1E0D90D00]);
    atomic_store(result, (unint64_t *)&qword_1EFA614B8);
  }
  return result;
}

unint64_t sub_1CE056AC4()
{
  unint64_t result;

  result = qword_1EFA614C8;
  if (!qword_1EFA614C8)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90D18], MEMORY[0x1E0D90D00]);
    atomic_store(result, (unint64_t *)&qword_1EFA614C8);
  }
  return result;
}

uint64_t sub_1CE056B08(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

Swift::Int __swiftcall CatalogProgram.indexOfWorkout(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  uint64_t v4;
  char v5;
  Swift::Int result;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v3 = sub_1CE0B467C();
  v4 = sub_1CE056C84(v3, countAndFlagsBits, (uint64_t)object);
  LOBYTE(countAndFlagsBits) = v5;
  swift_bridgeObjectRelease();
  if ((countAndFlagsBits & 1) == 0)
  {
    sub_1CE0B467C();
    sub_1CE0B467C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = v4 + 1;
    if (!__OFADD__(v4, 1))
      return result;
    __break(1u);
  }
  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8 = sub_1CE0B6068();
  v9 = sub_1CE0B671C();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1CDFAA000, v8, v9, "Next workout was not present in program workout list", v10, 2u);
    MEMORY[0x1D17C092C](v10, -1, -1);
  }

  return 0;
}

uint64_t sub_1CE056C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *i;
  BOOL v8;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 0;
  v6 = 0;
  for (i = (_QWORD *)(a1 + 40); ; i += 2)
  {
    v8 = *(i - 1) == a2 && *i == a3;
    if (v8 || (sub_1CE0B6C50() & 1) != 0)
      break;
    if (v3 == ++v6)
      return 0;
  }
  return v6;
}

_QWORD *WorkoutPlanClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for WorkoutPlanClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE05C514(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t WorkoutPlanClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE05C660);
}

uint64_t WorkoutPlanClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WorkoutPlanClient.createWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v10 = sub_1CE0B3F50();
  v9[11] = v10;
  v9[12] = *(_QWORD *)(v10 - 8);
  v9[13] = swift_task_alloc();
  v11 = sub_1CE0B4FC4();
  v9[14] = v11;
  v9[15] = *(_QWORD *)(v11 - 8);
  v9[16] = swift_task_alloc();
  v12 = sub_1CE0B3E24();
  v9[17] = v12;
  v9[18] = *(_QWORD *)(v12 - 8);
  v9[19] = swift_task_alloc();
  v13 = sub_1CE0B4DF0();
  v9[20] = v13;
  v9[21] = *(_QWORD *)(v13 - 8);
  v9[22] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1CE056F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 88);
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1000);
  v8._countAndFlagsBits = 0xD00000000000006FLL;
  v8._object = (void *)0x80000001CE0CB050;
  v9._object = (void *)0x80000001CE0CB0C0;
  v9._countAndFlagsBits = 0xD000000000000060;
  Logger.trace(file:function:)(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v6, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v5, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v3, v15, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CE0B4DE4();
  v10 = *(_QWORD *)(v4 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 200) = 287;
  v19 = **(int **)(v10 + 64) + *(_QWORD *)(v10 + 64);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v11;
  sub_1CE0B41D8();
  *v11 = v0;
  v11[1] = sub_1CE057160;
  __asm { BR              X8 }
}

uint64_t sub_1CE057160()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t WorkoutPlanClient.createUnsavedWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  v9[5] = a4;
  v9[6] = a5;
  v9[3] = a2;
  v9[4] = a3;
  v9[2] = a1;
  v10 = sub_1CE0B3F50();
  v9[11] = v10;
  v9[12] = *(_QWORD *)(v10 - 8);
  v9[13] = swift_task_alloc();
  v11 = sub_1CE0B4FC4();
  v9[14] = v11;
  v9[15] = *(_QWORD *)(v11 - 8);
  v9[16] = swift_task_alloc();
  v12 = sub_1CE0B3E24();
  v9[17] = v12;
  v9[18] = *(_QWORD *)(v12 - 8);
  v9[19] = swift_task_alloc();
  v13 = sub_1CE0B4DF0();
  v9[20] = v13;
  v9[21] = *(_QWORD *)(v13 - 8);
  v9[22] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1CE0572AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 128);
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 104);
  v16 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 48);
  v18 = *(_QWORD *)(v0 + 88);
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1000);
  v8._countAndFlagsBits = 0xD00000000000006FLL;
  v8._object = (void *)0x80000001CE0CB050;
  v9._object = (void *)0x80000001CE0CB130;
  v9._countAndFlagsBits = 0xD000000000000067;
  Logger.trace(file:function:)(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v6, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v2, v5, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v3, v15, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CE0B4DE4();
  v10 = *(_QWORD *)(v4 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 200) = 320;
  v19 = **(int **)(v10 + 64) + *(_QWORD *)(v10 + 64);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v11;
  sub_1CE0B41D8();
  *v11 = v0;
  v11[1] = sub_1CE0574B0;
  __asm { BR              X8 }
}

uint64_t sub_1CE0574B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 192) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE057514()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE057584()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.repeatWorkoutPlan(templateIdentifier:startingOn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_1CE0B3F50();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_1CE0B3E24();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v7 = sub_1CE0B3E78();
  v4[12] = v7;
  v4[13] = *(_QWORD *)(v7 - 8);
  v4[14] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1CE0576A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 56);
  v14 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1000);
  v10._countAndFlagsBits = 0xD00000000000006FLL;
  v10._object = (void *)0x80000001CE0CB050;
  v11._object = (void *)0x80000001CE0CB1A0;
  v11._countAndFlagsBits = 0xD000000000000031;
  Logger.trace(file:function:)(v10, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v8, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v14);
  sub_1CE0B3E6C();
  v12 = *(_QWORD *)(v6 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 136) = 297;
  v15 = **(int **)(v12 + 64) + *(_QWORD *)(v12 + 64);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v13;
  sub_1CE0B41D8();
  *v13 = v0;
  v13[1] = sub_1CE057850;
  __asm { BR              X8 }
}

uint64_t sub_1CE057850()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0578B4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE057918()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.makeWorkoutPlanSchedule(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE057998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB1E0;
  v4._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 291;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B5744();
  sub_1CE0B4FC4();
  *v6 = v0;
  v6[1] = sub_1CE057AEC;
  __asm { BR              X8 }
}

uint64_t sub_1CE057AEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t WorkoutPlanClient.updateWorkoutPlan(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE057B74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB210;
  v4._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 314;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B41D8();
  *v6 = v0;
  v6[1] = sub_1CE057AEC;
  __asm { BR              X8 }
}

uint64_t WorkoutPlanClient.queryActiveWorkoutPlan()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t WorkoutPlanClient.queryWorkoutPlanSummary(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE057CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB250;
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 296;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B3E24();
  sub_1CE0B4DFC();
  *v6 = v0;
  v6[1] = sub_1CE057AEC;
  __asm { BR              X8 }
}

uint64_t WorkoutPlanClient.queryPendingWorkoutPlanSummary()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE057E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB270;
  v4._countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 317;
  v10 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 56)
                                                                                           + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B4DFC();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(*(_QWORD *)(v0 + 16), v0 + 48, v8, MEMORY[0x1E0D928F0], MEMORY[0x1E0D928F8], ObjectType, v5);
}

uint64_t sub_1CE057F74()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t WorkoutPlanClient.queryWorkoutPlanSummariesViewed()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE057FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB2A0;
  v4._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 318;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 56) + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61558);
  v9 = sub_1CDFB0260(&qword_1EFA61560, &qword_1EFA61558, MEMORY[0x1E0D94718], MEMORY[0x1E0D94720]);
  v10 = sub_1CE05C6CC();
  *v7 = v0;
  v7[1] = sub_1CE058164;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t sub_1CE058164()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t WorkoutPlanClient.insertCompletedWorkoutPlanSummary(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE0581E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB2D0;
  v4._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 289;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B54B0();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D94718], MEMORY[0x1E0D94720], ObjectType, v5);
}

uint64_t WorkoutPlanClient.requestWorkoutPlans(state:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 25) = a2;
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = v2;
  return swift_task_switch();
}

void sub_1CE05832C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_BYTE *)(v0 + 25);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v4 = sub_1CE0B6080();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1000);
  v5._countAndFlagsBits = 0xD00000000000006FLL;
  v5._object = (void *)0x80000001CE0CB050;
  v6._object = (void *)0x80000001CE0CB300;
  v6._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v5, v6);
  v7 = *(_QWORD *)(v2 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 26) = 298;
  *(_QWORD *)(v0 + 16) = v3;
  *(_BYTE *)(v0 + 24) = v1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61588);
  sub_1CE0B42B0();
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 40);
  v9 = **(int **)(v7 + 64) + *(_QWORD *)(v7 + 64);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61590);
  sub_1CDFB0260(&qword_1EFA61598, &qword_1EFA61590, MEMORY[0x1E0D905C8], MEMORY[0x1E0D905D0]);
  sub_1CE05C748();
  *v8 = v0;
  v8[1] = sub_1CE0584EC;
  __asm { BR              X8 }
}

uint64_t sub_1CE0584EC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE058550()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 32));
}

uint64_t sub_1CE058560()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryDailyNotificationSchedule(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_1CE058584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB320;
  v4._countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 295;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B3DF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1030);
  sub_1CE05C7C4();
  sub_1CE05C820();
  *v6 = v0;
  v6[1] = sub_1CE0586F4;
  __asm { BR              X8 }
}

uint64_t sub_1CE0586F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t WorkoutPlanClient.queryNextIncompleteWorkoutReference(after:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE058774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB350;
  v4._countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 312;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B3DF4();
  sub_1CE0B509C();
  *v6 = v0;
  v6[1] = sub_1CDFAC82C;
  __asm { BR              X8 }
}

uint64_t WorkoutPlanClient.queryIncompleteMatchingWorkoutReferences(plan:workout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = sub_1CE0B3E24();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v6 = sub_1CE0B5B94();
  v4[10] = v6;
  v4[11] = *(_QWORD *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1CE058954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 48);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 56));
  swift_bridgeObjectRetain();
  sub_1CE0B5B88();
  v2 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 120) = 323;
  v4 = **(int **)(v2 + 64) + *(_QWORD *)(v2 + 64);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA615C8);
  sub_1CDFB0260(&qword_1EFA615D0, &qword_1EFA615C8, MEMORY[0x1E0D932C8], MEMORY[0x1E0D932D0]);
  sub_1CE05C89C();
  *v3 = v0;
  v3[1] = sub_1CE058A94;
  __asm { BR              X8 }
}

uint64_t sub_1CE058A94()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE058AF8()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  v1 = *(_QWORD *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1CE058B58()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.evaluateActiveWorkoutPlanCompletion()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE058BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB380;
  v4._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 40) = 319;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v5 + 40) + *(_QWORD *)(v5 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v7;
  *v7 = v0;
  v7[1] = sub_1CE058CC8;
  return v9(v0 + 40, ObjectType, v5);
}

uint64_t sub_1CE058CC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE058D34()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryActiveWorkoutPlanItemMetrics()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE058D58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB3B0;
  v4._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 293;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 56) + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA615F8);
  v9 = sub_1CDFB0260(&qword_1EFA61600, &qword_1EFA615F8, MEMORY[0x1E0D95068], MEMORY[0x1E0D95070]);
  v10 = sub_1CE05C918();
  *v7 = v0;
  v7[1] = sub_1CE058EC4;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t sub_1CE058EC4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE058F28()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t WorkoutPlanClient.queryWorkoutPlanItemMetrics(planIdentifier:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_1CE058F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB3E0;
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 322;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B3E24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA615F8);
  sub_1CDFB0260(&qword_1EFA61600, &qword_1EFA615F8, MEMORY[0x1E0D95068], MEMORY[0x1E0D95070]);
  sub_1CE05C918();
  *v6 = v0;
  v6[1] = sub_1CE0590DC;
  __asm { BR              X8 }
}

uint64_t sub_1CE0590DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t WorkoutPlanClient.requestWorkoutPlanAlternatives(workoutIdentifier:workoutPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v6 = sub_1CE0B41D8();
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v7 = sub_1CE0B5990();
  v5[10] = v7;
  v5[11] = *(_QWORD *)(v7 - 8);
  v5[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61628);
  v5[13] = swift_task_alloc();
  v8 = sub_1CE0B4FDC();
  v5[14] = v8;
  v5[15] = *(_QWORD *)(v8 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE05921C()
{
  _QWORD *v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1000);
  v2._countAndFlagsBits = 0xD00000000000006FLL;
  v2._object = (void *)0x80000001CE0CB050;
  v3._object = (void *)0x80000001CE0CB410;
  v3._countAndFlagsBits = 0xD00000000000003ELL;
  Logger.trace(file:function:)(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61630);
  sub_1CE0B3E24();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CE0BB0F0;
  sub_1CE0B419C();
  v5 = sub_1CDFEA59C(v4);
  v0[17] = v5;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v6 = (_QWORD *)swift_task_alloc();
  v0[18] = v6;
  *v6 = v0;
  v6[1] = sub_1CE0593A0;
  v7 = v0[6];
  v6[4] = v5;
  v6[5] = v7;
  return swift_task_switch();
}

uint64_t sub_1CE0593A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 160) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1CE05941C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  sub_1CDFE370C(*(_QWORD *)(v0 + 160), v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) != 1)
  {
    v8 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 72);
    v10 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 32))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v11, v9);
    swift_bridgeObjectRetain();
    sub_1CE0B4FD0();
    sub_1CE0B5984();
    v12 = *(_QWORD *)(v10 + 24);
    swift_getObjectType();
    *(_WORD *)(v0 + 184) = 300;
    v14 = **(int **)(v12 + 64) + *(_QWORD *)(v12 + 64);
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v13;
    sub_1CE0B53CC();
    *v13 = v0;
    v13[1] = sub_1CE059650;
    __asm { BR              X8 }
  }
  sub_1CE05C994(*(_QWORD *)(v0 + 104));
  v4 = sub_1CE0B4C40();
  sub_1CDFB1900(&qword_1EFA61640, (uint64_t (*)(uint64_t))MEMORY[0x1E0D920D0], MEMORY[0x1E0D920E8]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, *MEMORY[0x1E0D92080], v4);
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE059650()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0596B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE05973C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0597A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryWorkoutPlanTemplates(identifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

void sub_1CE05983C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1000);
  v4._countAndFlagsBits = 0xD00000000000006FLL;
  v4._object = (void *)0x80000001CE0CB050;
  v5._object = (void *)0x80000001CE0CB450;
  v5._countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 64) = 307;
  *(_QWORD *)(v0 + 24) = v2;
  v8 = **(int **)(v6 + 64) + *(_QWORD *)(v6 + 64);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61648);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61650);
  sub_1CDFB0260(&qword_1EFA61658, &qword_1EFA61648, MEMORY[0x1E0D8FC20], MEMORY[0x1E0D8FC28]);
  sub_1CE05C9D4();
  sub_1CDFB0260(&qword_1EFA61670, &qword_1EFA61650, MEMORY[0x1E0D92F18], MEMORY[0x1E0D92F20]);
  sub_1CE05CA50();
  *v7 = v0;
  v7[1] = sub_1CE059A08;
  __asm { BR              X8 }
}

uint64_t sub_1CE059A08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t WorkoutPlanClient.updateWorkoutPlanAlternatives(planIdentifier:reference:workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = sub_1CE0B509C();
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  v8 = sub_1CE0B3E24();
  v6[11] = v8;
  v6[12] = *(_QWORD *)(v8 - 8);
  v6[13] = swift_task_alloc();
  v9 = sub_1CE0B5930();
  v6[14] = v9;
  v6[15] = *(_QWORD *)(v9 - 8);
  v6[16] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1CE059B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 56);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 32);
  v8 = sub_1CE0B6080();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED8F1000);
  v9._countAndFlagsBits = 0xD00000000000006FLL;
  v9._object = (void *)0x80000001CE0CB050;
  v10._object = (void *)0x80000001CE0CB480;
  v10._countAndFlagsBits = 0xD00000000000004ALL;
  Logger.trace(file:function:)(v9, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, v7, v14);
  swift_bridgeObjectRetain();
  sub_1CE0B5924();
  v11 = *(_QWORD *)(v5 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 152) = 302;
  v15 = **(int **)(v11 + 64) + *(_QWORD *)(v11 + 64);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v12;
  sub_1CE0B41D8();
  *v12 = v0;
  v12[1] = sub_1CE059CE8;
  __asm { BR              X8 }
}

uint64_t sub_1CE059CE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE059D4C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE059DB0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.deleteAllActiveWorkoutPlans()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE059E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB4D0;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 40) = 326;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v5 + 40) + *(_QWORD *)(v5 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v7;
  *v7 = v0;
  v7[1] = sub_1CE059F30;
  return v9(v0 + 40, ObjectType, v5);
}

uint64_t sub_1CE059F30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t WorkoutPlanClient.deleteWorkoutPlan(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE059FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB4F0;
  v4._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 288;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B3E24();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D8FC20], MEMORY[0x1E0D8FC28], ObjectType, v5);
}

uint64_t WorkoutPlanClient.insertWorkoutPlan(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE05A0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB510;
  v4._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 290;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B41D8();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D905C8], MEMORY[0x1E0D905D0], ObjectType, v5);
}

uint64_t WorkoutPlanClient.insertWorkoutPlanTemplate(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE05A23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB530;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 316;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B4FDC();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D92F18], MEMORY[0x1E0D92F20], ObjectType, v5);
}

uint64_t WorkoutPlanClient.requestWorkoutPlan(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE05A384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB550;
  v4._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 299;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B3E24();
  sub_1CE0B41D8();
  *v6 = v0;
  v6[1] = sub_1CE057AEC;
  __asm { BR              X8 }
}

uint64_t WorkoutPlanClient.validateSchedule(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE05A4EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB570;
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 303;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B5744();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D94D98], MEMORY[0x1E0D94DA0], ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryAllWorkoutPlanTemplateReferences()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE05A630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB590;
  v4._countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 306;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 56) + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA616C8);
  v9 = sub_1CDFB0260(&qword_1EFA616D0, &qword_1EFA616C8, MEMORY[0x1E0D95420], MEMORY[0x1E0D95428]);
  v10 = sub_1CE05CACC();
  *v7 = v0;
  v7[1] = sub_1CE058164;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryAllWorkoutPlanTemplatesCount()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE05A7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB5C0;
  v4._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 325;
  v9 = (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 56)
                                                                                          + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  *v7 = v0;
  v7[1] = sub_1CE058164;
  return v9(v0 + 16, v0 + 48, MEMORY[0x1E0DEB418], MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryWorkoutPlanTemplateMetadata(identifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

void sub_1CE05A8FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1000);
  v4._countAndFlagsBits = 0xD00000000000006FLL;
  v4._object = (void *)0x80000001CE0CB050;
  v5._object = (void *)0x80000001CE0CB5F0;
  v5._countAndFlagsBits = 0xD00000000000002ELL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 64) = 309;
  *(_QWORD *)(v0 + 24) = v2;
  v8 = **(int **)(v6 + 64) + *(_QWORD *)(v6 + 64);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61648);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA616F8);
  sub_1CDFB0260(&qword_1EFA61658, &qword_1EFA61648, MEMORY[0x1E0D8FC20], MEMORY[0x1E0D8FC28]);
  sub_1CE05C9D4();
  sub_1CDFB0260(&qword_1EFA61700, &qword_1EFA616F8, MEMORY[0x1E0D950D0], MEMORY[0x1E0D950D8]);
  sub_1CE05CB48();
  *v7 = v0;
  v7[1] = sub_1CE05AAC8;
  __asm { BR              X8 }
}

uint64_t sub_1CE05AAC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE05AB2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.queryAllWorkoutPlans(forTemplateIdentifier:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

void sub_1CE05AB50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB620;
  v4._countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 308;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B3E24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61590);
  sub_1CDFB0260(&qword_1EFA61598, &qword_1EFA61590, MEMORY[0x1E0D905C8], MEMORY[0x1E0D905D0]);
  sub_1CE05C748();
  *v6 = v0;
  v6[1] = sub_1CE0586F4;
  __asm { BR              X8 }
}

uint64_t WorkoutPlanClient.deleteWorkoutPlanTemplate(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE05ACF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB650;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 315;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B3E24();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D8FC20], MEMORY[0x1E0D8FC28], ObjectType, v5);
}

uint64_t WorkoutPlanClient.updateWorkoutPlanTemplateName(identifier:name:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_1CE0B3E24();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = sub_1CE0B5AA4();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE05AEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t ObjectType;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = sub_1CE0B6080();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED8F1000);
  v7._countAndFlagsBits = 0xD00000000000006FLL;
  v7._object = (void *)0x80000001CE0CB050;
  v8._object = (void *)0x80000001CE0CB670;
  v8._countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v5, v3);
  swift_bridgeObjectRetain();
  sub_1CE0B5A98();
  v9 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 112) = 310;
  v13 = (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v9 + 48)
                                                                                          + *(_QWORD *)(v9 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v11;
  *v11 = v0;
  v11[1] = sub_1CE05B020;
  return v13(v0 + 112, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72), MEMORY[0x1E0D95AF0], MEMORY[0x1E0D95AF8], ObjectType, v9);
}

uint64_t sub_1CE05B020()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE05B084()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE05B0D4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 72));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClient.endWorkoutPlan(identifier:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE05B13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB6A0;
  v4._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 311;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B3E24();
  *v7 = v0;
  v7[1] = sub_1CE057F74;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D8FC20], MEMORY[0x1E0D8FC28], ObjectType, v5);
}

uint64_t WorkoutPlanClient.queryAllArchivedPlanSessions()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE05B280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB6C0;
  v4._countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 305;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 56) + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61740);
  v9 = sub_1CDFB0260(&qword_1EFA61748, &qword_1EFA61740, MEMORY[0x1E0D94B88], MEMORY[0x1E0D94B90]);
  v10 = sub_1CE05CBC4();
  *v7 = v0;
  v7[1] = sub_1CE058164;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t WorkoutPlanClient.insertArchivedPlanSession(session:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE05B400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB6E0;
  v4._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 304;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B56C0();
  *v7 = v0;
  v7[1] = sub_1CDFADC8C;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D94B88], MEMORY[0x1E0D94B90], ObjectType, v5);
}

uint64_t WorkoutPlanClient.filterCatalog(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE05B54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB710;
  v4._countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 324;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B5BC4();
  sub_1CE0B4E5C();
  *v6 = v0;
  v6[1] = sub_1CE057AEC;
  __asm { BR              X8 }
}

uint64_t sub_1CE05B69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1CDFACD38;
  return WorkoutPlanClient.createWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1CE05B748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1CDFACD38;
  return WorkoutPlanClient.createUnsavedWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1CE05B7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return WorkoutPlanClient.repeatWorkoutPlan(templateIdentifier:startingOn:)(a1, a2, a3);
}

uint64_t sub_1CE05B860(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05B8C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE05B938(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE05B9AC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v5 = a2 & 1;
  v6 = *v2;
  v7 = swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_1CE05CCD0;
  *(_BYTE *)(v7 + 25) = v5;
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 64) = v6;
  return swift_task_switch();
}

uint64_t sub_1CE05BA20(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE05CCD0;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BA84(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE05BAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE05CCD0;
  return WorkoutPlanClient.queryIncompleteMatchingWorkoutReferences(plan:workout:)(a1, a2, a3);
}

uint64_t sub_1CE05BB60()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CE05CCD0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE05BBC0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CE05CCD0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE05BC20(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE05CCD0;
  v5[4] = a1;
  v5[5] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BC84(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE05CCD0;
  v5[4] = a1;
  v5[5] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BCE8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE05CCD0;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return WorkoutPlanClient.requestWorkoutPlanAlternatives(workoutIdentifier:workoutPlan:)(a1, a2, a3, a4);
}

uint64_t sub_1CE05BDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CDFACD38;
  return WorkoutPlanClient.updateWorkoutPlanAlternatives(planIdentifier:reference:workoutIdentifier:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1CE05BE4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE05BEAC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BF10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BF74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05BFD8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05C03C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE05C0B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE05C124(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05C188()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CE05CCD0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE05C1E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05C24C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05C2B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE05C310()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFE1AFC;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE05C370(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE05CCD0;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05C3D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return WorkoutPlanClient.updateWorkoutPlanTemplateName(identifier:name:)(a1, a2, a3);
}

uint64_t sub_1CE05C43C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE05C4A0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

_QWORD *sub_1CE05C514(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v11 = a1;
  v10 = 47;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1CE05CC78, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v11 = a1;
  v10 = 48;
  v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1CE05CCA0, v8, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE05C660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for WorkoutPlanClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB10A4(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE05C6CC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA61568;
  if (!qword_1EFA61568)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA61558);
    v2 = sub_1CDFB1900(&qword_1EFA61570, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94728]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA61568);
  }
  return result;
}

unint64_t sub_1CE05C748()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA615A0;
  if (!qword_1EFA615A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA61590);
    v2 = sub_1CDFB1900(&qword_1EFA615A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D905E0], MEMORY[0x1E0D905D8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA615A0);
  }
  return result;
}

unint64_t sub_1CE05C7C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED8F1038;
  if (!qword_1ED8F1038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F1030);
    v2 = MEMORY[0x1E0D95018];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96820], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F1038);
  }
  return result;
}

unint64_t sub_1CE05C820()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED8F1040;
  if (!qword_1ED8F1040)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F1030);
    v2 = sub_1CDFB1900(&qword_1ED8F0FF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95028], MEMORY[0x1E0D95020]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F1040);
  }
  return result;
}

unint64_t sub_1CE05C89C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA615D8;
  if (!qword_1EFA615D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA615C8);
    v2 = sub_1CDFB1900(&qword_1EFA615E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932D8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA615D8);
  }
  return result;
}

unint64_t sub_1CE05C918()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA61608;
  if (!qword_1EFA61608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA615F8);
    v2 = sub_1CDFB1900(&qword_1EFA61610, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95080], MEMORY[0x1E0D95078]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA61608);
  }
  return result;
}

uint64_t sub_1CE05C994(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61628);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CE05C9D4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA61660;
  if (!qword_1EFA61660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA61648);
    v2 = sub_1CDFB1900(&qword_1EFA61668, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0D8FC30]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA61660);
  }
  return result;
}

unint64_t sub_1CE05CA50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA61678;
  if (!qword_1EFA61678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA61650);
    v2 = sub_1CDFB1900(&qword_1EFA61680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92F30], MEMORY[0x1E0D92F28]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA61678);
  }
  return result;
}

unint64_t sub_1CE05CACC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA616D8;
  if (!qword_1EFA616D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA616C8);
    v2 = sub_1CDFB1900(&qword_1EFA616E0, MEMORY[0x1E0D95438], MEMORY[0x1E0D95430]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA616D8);
  }
  return result;
}

unint64_t sub_1CE05CB48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA61708;
  if (!qword_1EFA61708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA616F8);
    v2 = sub_1CDFB1900(&qword_1EFA61710, (uint64_t (*)(uint64_t))MEMORY[0x1E0D950E8], MEMORY[0x1E0D950E0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA61708);
  }
  return result;
}

unint64_t sub_1CE05CBC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA61750;
  if (!qword_1EFA61750)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA61740);
    v2 = sub_1CDFB1900(&qword_1EFA61758, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94BA0], MEMORY[0x1E0D94B98]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA61750);
  }
  return result;
}

uint64_t method lookup function for WorkoutPlanClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WorkoutPlanClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE05CC54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE05CC78()
{
  uint64_t v0;

  return sub_1CDFCBACC(v0, (uint64_t)&type metadata for WorkoutPlansUpdated, (uint64_t)&protocol witness table for WorkoutPlansUpdated);
}

uint64_t sub_1CE05CCA0()
{
  uint64_t v0;

  return sub_1CDFCBACC(v0, (uint64_t)&type metadata for ActiveWorkoutPlanUpdated, (uint64_t)&protocol witness table for ActiveWorkoutPlanUpdated);
}

id sub_1CE05CD14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoreTelephonyObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CE05CD44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;

  v1 = sub_1CE0B617C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CDFB6520();
  sub_1CDFB66B8();
  result = MEMORY[0x1D17C09E0](v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate);
  if (result)
  {
    v6 = result;
    v7 = *(void **)(result + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    *v4 = v7;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
    v8 = v7;
    LOBYTE(v7) = sub_1CE0B6194();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
    if ((v7 & 1) != 0)
    {
      if (MEMORY[0x1D17C09E0](v6 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
      {
        sub_1CDFC1544();
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1CE05CED4(char a1, _QWORD *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v7 = sub_1CE0B617C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_BYTE *)(v3 + *a2) = a1;
  a3(v9);
  result = MEMORY[0x1D17C09E0](v3 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate);
  if (result)
  {
    v13 = result;
    v14 = *(void **)(result + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    *v11 = v14;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0DEF740], v7);
    v15 = v14;
    LOBYTE(v14) = sub_1CE0B6194();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v11, v7);
    if ((v14 & 1) != 0)
    {
      if (MEMORY[0x1D17C09E0](v13 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
      {
        sub_1CDFC1544();
        swift_unknownObjectRelease();
      }
      return swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_1CE05D048()
{
  unint64_t result;

  result = qword_1EFA61948;
  if (!qword_1EFA61948)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFA61948);
  }
  return result;
}

uint64_t sub_1CE05D084()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE05D0A8()
{
  swift_release();
  return swift_deallocObject();
}

void static BadgingCountsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

id NetworkMonitor.__allocating_init(queue:)(void *a1)
{
  objc_class *v1;
  id v3;
  id v4;

  v3 = objc_allocWithZone(v1);
  v4 = sub_1CDFB7E28(a1);

  return v4;
}

uint64_t NetworkMonitor.isCellularDataEnabled.getter()
{
  return sub_1CE05D9D4(&OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);
}

id NetworkMonitor.cellularDataRestrictedState.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  id result;
  uint64_t v10;

  v3 = sub_1CE0B617C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1CE0B6194();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
    return sub_1CDFC3FD0(a1);
  __break(1u);
  return result;
}

uint64_t NetworkMonitor.isWiFiEnabled.getter()
{
  return sub_1CE05D9D4(&OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver, &OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
}

id NetworkMonitor.init(queue:)(void *a1)
{
  id v2;

  v2 = sub_1CDFB7E28(a1);

  return v2;
}

void sub_1CE05D244(char a1@<W0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  void (*v17)(_QWORD *, uint64_t, uint64_t);
  id v18;
  void (*v19)(_QWORD *, uint64_t);
  id v20;
  char v21;
  char v22;
  id v23;
  char v24;
  char v25;
  uint64_t v26;
  char *v27;
  unsigned int v28;
  unsigned __int8 v29;

  v7 = sub_1CE0B617C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 != 1)
  {
    v27 = a3;
    v15 = *(void **)(a2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    *v10 = v15;
    v16 = *MEMORY[0x1E0DEF740];
    v17 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
    v17(v10, v16, v7);
    v18 = v15;
    LOBYTE(v15) = sub_1CE0B6194();
    v19 = *(void (**)(_QWORD *, uint64_t))(v8 + 8);
    v19(v10, v7);
    if ((v15 & 1) != 0)
    {
      v28 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_enabled);
      *v10 = v18;
      v17(v10, v16, v7);
      v20 = v18;
      v21 = sub_1CE0B6194();
      v19(v10, v7);
      if ((v21 & 1) != 0)
      {
        v26 = v3;
        v22 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver)
                       + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);
        *v10 = v20;
        v17(v10, v16, v7);
        v23 = v20;
        v24 = sub_1CE0B6194();
        v19(v10, v7);
        if ((v24 & 1) != 0)
        {
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver)
                         + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
          sub_1CDFC3FD0(&v29);
          sub_1CDFB3644(v28, v22, v25, &v29, v27);
          return;
        }
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  if (qword_1EFA5D4F8 != -1)
    swift_once();
  v11 = sub_1CE0B6080();
  __swift_project_value_buffer(v11, (uint64_t)qword_1EFA63468);
  v12 = sub_1CE0B6068();
  v13 = sub_1CE0B6734();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1CDFAA000, v12, v13, "[NetworkMonitor:InterfaceAvailability] Ethernet interface found", v14, 2u);
    MEMORY[0x1D17C092C](v14, -1, -1);
  }

  *a3 = 0;
}

id NetworkMonitor.isAirplaneModeEnabled.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  id result;
  uint64_t v8;

  v1 = sub_1CE0B617C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1CE0B6194();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
    return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_enabled);
  __break(1u);
  return result;
}

id sub_1CE05D5B0(void *a1)
{
  id v2;
  _BYTE *v3;
  char v5;

  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  if (swift_dynamicCast())
  {
    sub_1CE05E600();
    swift_allocError();
    *v3 = v5;
    return (id)swift_willThrow();
  }
  else
  {
    swift_willThrow();
    return a1;
  }
}

id NetworkMonitor.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void NetworkMonitor.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id NetworkMonitor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for NetworkMonitor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall NetworkMonitor.airplaneModeChanged()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v1 = sub_1CE0B617C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1CE0B6194();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    if (MEMORY[0x1D17C09E0](v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1CE00D250();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall NetworkMonitor.cellularDataStateChanged(isCellularDataEnabled:isRoaming:)(Swift::Bool isCellularDataEnabled, Swift::Bool isRoaming)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v3 = sub_1CE0B617C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1CE0B6194();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    if (MEMORY[0x1D17C09E0](v2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1CDFC1544();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall NetworkMonitor.cellularDataRestrictedStateChanged(_:)(SeymourClient::CellularDataRestrictedState a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;

  v2 = sub_1CE0B617C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1CE0B6194();
  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    if (MEMORY[0x1D17C09E0](v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1CDFC1544();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t NetworkMonitor.isRoaming.getter()
{
  return sub_1CE05D9D4(&OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming);
}

uint64_t sub_1CE05D9D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;

  v5 = sub_1CE0B617C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
    return *(unsigned __int8 *)(*(_QWORD *)(v2 + *a1) + *a2);
  __break(1u);
  return result;
}

id sub_1CE05DAAC@<X0>(_BYTE *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  id result;
  uint64_t v10;

  v3 = sub_1CE0B617C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(*v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1CE0B6194();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
    return sub_1CDFC3FD0(a1);
  __break(1u);
  return result;
}

id sub_1CE05DB80()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id result;
  uint64_t v9;

  v1 = sub_1CE0B617C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *v0;
  v6 = *(void **)(*v0 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v4 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v7 = v6;
  LOBYTE(v6) = sub_1CE0B6194();
  result = (id)(*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v6 & 1) != 0)
    return objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_enabled);
  __break(1u);
  return result;
}

uint64_t sub_1CE05DC54(uint64_t a1, uint64_t a2)
{
  return sub_1CE05DC90(a1, a2, &OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);
}

uint64_t sub_1CE05DC68(uint64_t a1, uint64_t a2)
{
  return sub_1CE05DC90(a1, a2, &OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver, &OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming);
}

uint64_t sub_1CE05DC7C(uint64_t a1, uint64_t a2)
{
  return sub_1CE05DC90(a1, a2, &OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver, &OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
}

uint64_t sub_1CE05DC90(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t result;
  uint64_t v15;

  v7 = sub_1CE0B617C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *v4;
  v12 = *(void **)(*v4 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v10 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v13 = v12;
  LOBYTE(v12) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v12 & 1) != 0)
    return *(unsigned __int8 *)(*(_QWORD *)(v11 + *a3) + *a4);
  __break(1u);
  return result;
}

uint64_t sub_1CE05DD6C@<X0>(uint64_t a1@<X8>)
{
  return NetworkMonitor.queryCurrentNetwork()(a1);
}

uint64_t sub_1CE05DD8C@<X0>(uint64_t a1@<X8>)
{
  return NetworkMonitor.queryInterfaceAvailability()(a1);
}

uint64_t sub_1CE05DDAC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE05DDCC(a1, a2, a3);
}

uint64_t sub_1CE05DDCC(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_retain();
  v7 = a1;
  return sub_1CE0B5C00();
}

void sub_1CE05DE50(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  void *v6;
  void *v7;
  char v8;

  a3(&v7, a5);
  v6 = v7;
  v8 = 0;
  a1(&v7);
  sub_1CDFC2DF4(v6, 0);
}

uint64_t sub_1CE05DEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  void (*v13)(uint64_t, _QWORD *);
  _QWORD *v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v13 = (void (*)(uint64_t, _QWORD *))sub_1CE0B5C54();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a4;
  v14[5] = a5;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_1CE05DF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CE05DEC8(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B69078, (uint64_t)sub_1CE05E598);
}

uint64_t sub_1CE05DF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CE05DEC8(a1, a2, a3, a4, a5, &qword_1EFA5E550, (uint64_t)&unk_1E8B69028, (uint64_t)sub_1CE05E538);
}

uint64_t sub_1CE05DFA4(void *a1, char a2, uint64_t (*a3)(void **), uint64_t a4, void (*a5)(void *), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, void (*a10)(void *, uint64_t))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *, uint64_t);
  void *v25;
  char v26;

  v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v24 = a10;
    v20 = a1;
    a5(a1);
    v21 = (void (*)(uint64_t, uint64_t))sub_1CE0B5C54();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a3;
    *(_QWORD *)(v22 + 24) = a4;
    swift_retain();
    v21(a9, v22);
    swift_release();
    swift_release();
    v24(a1, 1);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    v25 = a1;
    v26 = 0;
    return a3(&v25);
  }
}

void sub_1CE05E0E0(void *a1, unint64_t a2, char a3, void (*a4)(_QWORD *), uint64_t a5, void (*a6)(void *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void (*v17)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v18;
  _QWORD v20[2];
  char v21;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E550);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 1) != 0)
  {
    v16 = a1;
    a6(a1);
    v17 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a4;
    *(_QWORD *)(v18 + 24) = a5;
    swift_retain();
    v17(sub_1CE05E554, v18);
    swift_release();
    swift_release();
    sub_1CDFC83A0(a1, a2, 1);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v20[0] = a1;
    v20[1] = a2;
    v21 = 0;
    sub_1CDFC0990((uint64_t)a1, a2);
    a4(v20);
    sub_1CDFC83A0(a1, a2, 0);
  }
}

uint64_t sub_1CE05E240(uint64_t result, uint64_t (*a2)(__int128 *))
{
  char v2;
  __int128 v3;
  char v4;

  v2 = *(_BYTE *)(result + 16);
  v3 = *(_OWORD *)result;
  v4 = v2;
  if (a2)
    return a2(&v3);
  return result;
}

uint64_t sub_1CE05E280()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1CE05E2A4(void *a1)
{
  return sub_1CE05D5B0(a1);
}

uint64_t sub_1CE05E2C4(void *a1)
{
  uint64_t v1;

  return sub_1CE05DDCC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE05E2F4()
{
  return objectdestroy_5Tm(&qword_1EFA61960);
}

uint64_t sub_1CE05E300(uint64_t a1, uint64_t a2)
{
  return sub_1CE05E40C(a1, a2, &qword_1EFA61960, (uint64_t)&unk_1E8B69168, (uint64_t)sub_1CE05E648);
}

uint64_t sub_1CE05E31C()
{
  return objectdestroy_5Tm(&qword_1EFA61960);
}

uint64_t sub_1CE05E328(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61960) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFF1CFC(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1CE05E390()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE05E3B4(void *a1)
{
  uint64_t v1;

  return sub_1CE05DDCC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE05E3E4()
{
  return objectdestroy_5Tm(&qword_1EFA5E540);
}

uint64_t sub_1CE05E3F0(uint64_t a1, uint64_t a2)
{
  return sub_1CE05E40C(a1, a2, &qword_1EFA5E540, (uint64_t)&unk_1E8B690F0, (uint64_t)sub_1CE05E5D4);
}

uint64_t sub_1CE05E40C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;

  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v13 = (uint64_t *)(v5 + ((*(_QWORD *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CE05DEC8(a1, a2, v5 + v12, *v13, v13[1], a3, a4, a5);
}

uint64_t method lookup function for NetworkMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NetworkMonitor.__allocating_init(queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of NetworkMonitor.activate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_1CE05E4C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CE05E4E8(char *a1@<X8>)
{
  uint64_t v1;

  sub_1CE05D244(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1CE05E538(uint64_t a1)
{
  uint64_t v1;

  sub_1CE05E0E0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(void (**)(_QWORD *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void *))(v1 + 32));
}

uint64_t sub_1CE05E554(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  char v3;
  __int128 v4;
  char v5;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v3 = *(_BYTE *)(result + 16);
  v4 = *(_OWORD *)result;
  v5 = v3;
  if (v2)
    return v2(&v4);
  return result;
}

uint64_t sub_1CE05E598(uint64_t a1)
{
  return sub_1CE05E66C(a1, &qword_1ED8F1070, (uint64_t)&unk_1E8B690A0, (uint64_t)sub_1CE000B78, (void (*)(void *, uint64_t))sub_1CDFC2DF4);
}

void sub_1CE05E5C4(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_1CE05DE50(a1, a2, *(void (**)(void **__return_ptr, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1CE05E5D4(uint64_t a1)
{
  return sub_1CE05E66C(a1, &qword_1EFA5E540, (uint64_t)&unk_1E8B69118, (uint64_t)sub_1CE000B78, (void (*)(void *, uint64_t))sub_1CDFC2DF4);
}

unint64_t sub_1CE05E600()
{
  unint64_t result;

  result = qword_1EFA61A30;
  if (!qword_1EFA61A30)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for NetworkMonitorError, &type metadata for NetworkMonitorError);
    atomic_store(result, (unint64_t *)&qword_1EFA61A30);
  }
  return result;
}

uint64_t sub_1CE05E648(uint64_t a1)
{
  return sub_1CE05E66C(a1, &qword_1EFA61960, (uint64_t)&unk_1E8B69190, (uint64_t)sub_1CE000B78, (void (*)(void *, uint64_t))sub_1CDFC2DF0);
}

uint64_t sub_1CE05E66C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t))
{
  uint64_t v5;

  return sub_1CE05DFA4(*(void **)a1, *(_BYTE *)(a1 + 8), *(uint64_t (**)(void **))(v5 + 16), *(_QWORD *)(v5 + 24), *(void (**)(void *))(v5 + 32), *(_QWORD *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t objectdestroy_38Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void static UpNextQueueItemsAdded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for UpNextQueueItemsAdded()
{
  return &type metadata for UpNextQueueItemsAdded;
}

uint64_t sub_1CE05E714(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D68);
}

uint64_t sub_1CE05E720(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D60);
}

uint64_t sub_1CE05E72C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D58);
}

uint64_t sub_1CE05E738(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D50);
}

uint64_t sub_1CE05E744(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D48);
}

uint64_t sub_1CE05E750(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8EF7B8);
}

uint64_t sub_1CE05E75C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D40);
}

uint64_t sub_1CE05E768(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D38);
}

uint64_t sub_1CE05E774(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D30);
}

uint64_t sub_1CE05E780(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D28);
}

uint64_t sub_1CE05E78C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D20);
}

uint64_t sub_1CE05E798(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D18);
}

uint64_t sub_1CE05E7A4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D10);
}

uint64_t sub_1CE05E7B0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D08);
}

uint64_t sub_1CE05E7BC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CF8);
}

uint64_t sub_1CE05E7C8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CF0);
}

uint64_t sub_1CE05E7D4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CE8);
}

uint64_t sub_1CE05E7E0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CE0);
}

uint64_t sub_1CE05E7EC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CD8);
}

uint64_t sub_1CE05E7F8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CD0);
}

uint64_t sub_1CE05E804(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CC8);
}

uint64_t sub_1CE05E810(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CC0);
}

uint64_t sub_1CE05E81C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CB8);
}

uint64_t sub_1CE05E828(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CB0);
}

uint64_t sub_1CE05E834(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CA8);
}

uint64_t sub_1CE05E840(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61CA0);
}

uint64_t sub_1CE05E84C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C98);
}

uint64_t sub_1CE05E858(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C90);
}

uint64_t sub_1CE05E864(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C88);
}

uint64_t sub_1CE05E870(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C80);
}

uint64_t sub_1CE05E87C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C78);
}

uint64_t sub_1CE05E888(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C70);
}

uint64_t sub_1CE05E894(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C68);
}

uint64_t sub_1CE05E8A0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C60);
}

uint64_t sub_1CE05E8AC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8EFCC0);
}

uint64_t sub_1CE05E8B8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C58);
}

uint64_t sub_1CE05E8C4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C50);
}

uint64_t sub_1CE05E8D0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C48);
}

uint64_t sub_1CE05E8DC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C40);
}

uint64_t sub_1CE05E8E8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C38);
}

uint64_t sub_1CE05E8F4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C30);
}

uint64_t sub_1CE05E900(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C28);
}

uint64_t sub_1CE05E90C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C20);
}

uint64_t sub_1CE05E918(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C18);
}

uint64_t sub_1CE05E924(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C10);
}

uint64_t sub_1CE05E930(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C08);
}

uint64_t sub_1CE05E93C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61C00);
}

uint64_t sub_1CE05E948(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BF8);
}

uint64_t sub_1CE05E954(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BF0);
}

uint64_t sub_1CE05E960(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BE8);
}

uint64_t sub_1CE05E96C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A40);
}

uint64_t sub_1CE05E978(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BE0);
}

uint64_t sub_1CE05E984(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8EFCC8);
}

uint64_t sub_1CE05E990(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BD8);
}

uint64_t sub_1CE05E99C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BD0);
}

uint64_t sub_1CE05E9A8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BC8);
}

uint64_t sub_1CE05E9B4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BC0);
}

uint64_t sub_1CE05E9C0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BB8);
}

uint64_t sub_1CE05E9CC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BA8);
}

uint64_t sub_1CE05E9DC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BA0);
}

uint64_t sub_1CE05E9E8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B98);
}

uint64_t sub_1CE05E9F4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B90);
}

uint64_t sub_1CE05EA00(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B88);
}

uint64_t sub_1CE05EA0C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B80);
}

uint64_t sub_1CE05EA18(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B78);
}

uint64_t sub_1CE05EA24(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B70);
}

uint64_t sub_1CE05EA30(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B68);
}

uint64_t sub_1CE05EA3C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B60);
}

uint64_t sub_1CE05EA48(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B58);
}

uint64_t sub_1CE05EA54(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B50);
}

uint64_t sub_1CE05EA60(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B48);
}

uint64_t sub_1CE05EA6C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B40);
}

uint64_t sub_1CE05EA78(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B38);
}

uint64_t sub_1CE05EA84(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B30);
}

uint64_t sub_1CE05EA90(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B28);
}

uint64_t sub_1CE05EA9C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B20);
}

uint64_t sub_1CE05EAA8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B18);
}

uint64_t sub_1CE05EAB4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A48);
}

uint64_t sub_1CE05EAC0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B10);
}

uint64_t sub_1CE05EACC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B08);
}

uint64_t sub_1CE05EAD8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8F0E28);
}

uint64_t sub_1CE05EAE4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61B00);
}

uint64_t sub_1CE05EAF0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AF8);
}

uint64_t sub_1CE05EAFC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AF0);
}

uint64_t sub_1CE05EB08(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AE8);
}

uint64_t sub_1CE05EB14(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AE0);
}

uint64_t sub_1CE05EB20(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AD8);
}

uint64_t sub_1CE05EB2C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8EFE90);
}

uint64_t sub_1CE05EB38(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AD0);
}

uint64_t sub_1CE05EB44(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AC8);
}

uint64_t sub_1CE05EB50(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AC0);
}

uint64_t sub_1CE05EB5C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61AB8);
  return sub_1CE0B6290();
}

uint64_t sub_1CE05EB90(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AB0);
}

uint64_t sub_1CE05EB9C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AA8);
}

uint64_t sub_1CE05EBA8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61AA0);
}

uint64_t sub_1CE05EBB4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A98);
}

uint64_t sub_1CE05EBC0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A90);
}

uint64_t sub_1CE05EBCC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A88);
}

uint64_t sub_1CE05EBD8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A80);
}

uint64_t sub_1CE05EBE4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A78);
}

uint64_t sub_1CE05EBF0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A70);
}

uint64_t sub_1CE05EBFC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A68);
}

uint64_t sub_1CE05EC08(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A60);
}

uint64_t sub_1CE05EC14(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8EFCD0);
}

uint64_t sub_1CE05EC20(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A58);
}

uint64_t sub_1CE05EC2C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61A50);
}

uint64_t sub_1CE05EC38(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1ED8EFE88);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for EventDeliveryStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EventDeliveryStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1CE05ECA8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t dispatch thunk of static Event.deliveryStyle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Event.debounceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static Event.objectIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryAllHealthKitWorkouts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryHealthKitWorkoutsUsingThreshold(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitWorkout(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitStandaloneWorkoutJob(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryHealthKitWorkout(sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitMindfulSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.insertHealthKitStandaloneMindfulSessionJob(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HealthDataClientProtocol.queryHealthKitMindfulSessionsUsingThreshold(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t CommentaryEventEnded.commentaryEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CommentaryEventEnded.init(commentaryEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static CommentaryEventEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for CommentaryEventEnded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE05EDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CommentaryEventEnded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE05EDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CommentaryEventEnded()
{
  uint64_t result;

  result = qword_1EFA61DC8;
  if (!qword_1EFA61DC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PublishRecord.init(lastDelivery:queuedEvent:timer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, double *a5@<X8>, double a6@<D0>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;

  *a5 = a6;
  v9 = type metadata accessor for PublishRecord(0, a3, a3, a4);
  v10 = (char *)a5 + *(int *)(v9 + 28);
  v11 = sub_1CE0B68A8();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a1, v11);
  *(_QWORD *)((char *)a5 + *(int *)(v9 + 32)) = a2;
  return result;
}

uint64_t type metadata accessor for PublishRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PublishRecord);
}

uint64_t sub_1CE05EEFC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CE05EF04()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B68A8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CE05EF88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  size_t v8;
  int v9;
  uint64_t v12;
  void *v13;
  const void *v14;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  if (*(_DWORD *)(v5 + 84))
    v8 = *(_QWORD *)(v5 + 64);
  else
    v8 = *(_QWORD *)(v5 + 64) + 1;
  v9 = v6 & 0x100000;
  if (v7 > 7 || v9 != 0 || ((v8 + 7 + ((v7 + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v13 = (void *)(((unint64_t)a1 + v7 + 8) & ~v7);
    v14 = (const void *)(((unint64_t)a2 + v7 + 8) & ~v7);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4))
    {
      memcpy(v13, v14, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v13, v14, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
    }
    *(_QWORD *)(((unint64_t)v13 + v8 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v14 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    swift_unknownObjectRetain();
  }
  return v3;
}

uint64_t sub_1CE05F0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2))
    (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v4, v2);
  return swift_unknownObjectRelease();
}

_QWORD *sub_1CE05F144(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 16))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  *(_QWORD *)(((unint64_t)v7 + v12 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v12 + 7) & 0xFFFFFFFFFFFFF8);
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *sub_1CE05F234(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(v7, v8, v4);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v13 = *(_QWORD *)(v5 + 64);
  else
    v13 = *(_QWORD *)(v5 + 64) + 1;
  *(_QWORD *)(((unint64_t)v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v13 + 7) & 0xFFFFFFFFFFFFF8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

_QWORD *sub_1CE05F37C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  int v9;
  size_t v10;
  size_t v11;
  size_t v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (const void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4))
  {
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
    if (v9)
      v11 = v10;
    else
      v11 = v10 + 1;
    memcpy(v7, v8, v11);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v5 + 32))(v7, v8, v4);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
    v9 = *(_DWORD *)(v5 + 84);
    v10 = *(_QWORD *)(v5 + 64);
  }
  if (v9)
    v12 = v10;
  else
    v12 = v10 + 1;
  *(_QWORD *)(((unint64_t)v7 + v12 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v12 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1CE05F468(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  size_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (void *)(((unint64_t)a1 + v6 + 8) & ~v6);
  v8 = (void *)(((unint64_t)a2 + v6 + 8) & ~v6);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  v10 = v9(v7, 1, v4);
  v11 = v9(v8, 1, v4);
  if (v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v7, v8, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v4);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(v7, v8, v4);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(v7, v4);
  }
  if (*(_DWORD *)(v5 + 84))
    v12 = *(_QWORD *)(v5 + 64);
  else
    v12 = *(_QWORD *)(v5 + 64) + 1;
  memcpy(v7, v8, v12);
LABEL_10:
  if (*(_DWORD *)(v5 + 84))
    v13 = *(_QWORD *)(v5 + 64);
  else
    v13 = *(_QWORD *)(v5 + 64) + 1;
  *(_QWORD *)(((unint64_t)v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v8 + v13 + 7) & 0xFFFFFFFFFFFFF8);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1CE05F5A8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int v16;
  unint64_t v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = v8 + 7;
  if (v7 < a2)
  {
    if (((((v10 + ((v9 + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    __asm { BR              X17 }
  }
  v15 = (a1 + v9 + 8) & ~v9;
  if (v6 < 0x7FFFFFFE)
  {
    v17 = *(_QWORD *)((v10 + v15) & 0xFFFFFFFFFFFFF8);
    if (v17 >= 0xFFFFFFFF)
      LODWORD(v17) = -1;
    if ((v17 + 1) >= 2)
      return v17;
    else
      return 0;
  }
  else
  {
    v16 = (*(uint64_t (**)(uint64_t))(v4 + 48))(v15);
    if (v16 >= 2)
      return v16 - 1;
    else
      return 0;
  }
}

void sub_1CE05F704(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFE)
    v10 = 2147483646;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v10 < a3)
  {
    v12 = a3 - v10;
    if ((((_DWORD)v11 + 7 + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~*(unsigned __int8 *)(v7 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v13 = v12 + 1;
    else
      v13 = 2;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v6 = v14;
    else
      v6 = 0;
  }
  if (a2 > v10)
  {
    if ((((_DWORD)v11 + 7 + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~*(unsigned __int8 *)(v7 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      v15 = ~v10 + a2;
      bzero(a1, ((v11 + 7 + ((*(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & 0xFFFFFFFFFFFFFFF8)+ 8);
      *a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_1CE05F810@<X0>(unsigned int a1@<W1>, size_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  int v18;
  _QWORD *v19;
  uint64_t result;

  *(_BYTE *)(v15 + v16) = 0;
  if (a1)
  {
    v17 = (void *)((v15 + v14 + 8) & v10);
    if (v11 < 0x7FFFFFFE)
    {
      v19 = (_QWORD *)(((unint64_t)v17 + v13) & 0xFFFFFFFFFFFFFFF8);
      if (a1 > 0x7FFFFFFE)
      {
        *v19 = 0;
        *(_DWORD *)v19 = a1 - 0x7FFFFFFF;
      }
      else
      {
        *v19 = a1;
      }
    }
    else if (v11 >= a1)
    {
      return (*(uint64_t (**)(void *, _QWORD))(v12 + 56))(v17, a1 + 1);
    }
    else if ((_DWORD)a2)
    {
      if (a2 <= 3)
        v18 = a2;
      else
        v18 = 4;
      bzero(v17, a2);
      __asm { BR              X10 }
    }
  }
  return result;
}

void sub_1CE05F920()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1CE05F930()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1CE05F938()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1CE05F944@<X0>(double a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, double *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  double *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  double v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(double *, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  double v42;
  uint64_t v43;
  double *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  double *v48;
  int v49;
  uint64_t v50;

  v7 = v6;
  v47 = a4;
  v48 = a6;
  v42 = a1;
  v43 = a3;
  v49 = a2;
  v9 = *(_QWORD *)(a5 + 16);
  v10 = sub_1CE0B68A8();
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v41 - v15;
  v16 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (double *)((char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v41 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (double *)((char *)&v41 - v23);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v50 = v7;
  v25((char *)&v41 - v23, v7, a5);
  v44 = v19;
  if ((v49 & 1) != 0)
    v26 = *v24;
  else
    v26 = v42;
  v27 = v45;
  v28 = v43;
  v29 = *(void (**)(double *, uint64_t))(v16 + 8);
  v29(v24, a5);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v30(v13, v28, v10);
  v25(v22, v50, a5);
  v31 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v9) == 1)
  {
    v32 = v46;
    v30(v46, (uint64_t)&v22[*(int *)(a5 + 28)], v10);
    v29((double *)v22, a5);
    v33 = v10;
    v34 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v33);
  }
  else
  {
    v29((double *)v22, a5);
    v34 = (uint64_t)v46;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v46, v13, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v9);
  }
  v36 = v47;
  v35 = v48;
  v37 = v44;
  v25((char *)v44, v50, a5);
  v38 = v36;
  if (!v36)
  {
    v38 = *(_QWORD *)((char *)v37 + *(int *)(a5 + 32));
    swift_unknownObjectRetain();
  }
  swift_unknownObjectRetain();
  v29(v37, a5);
  return PublishRecord.init(lastDelivery:queuedEvent:timer:)(v34, v38, v9, v39, v35, v26);
}

uint64_t sub_1CE05FBC8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1CE0B68A8();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1CE0B638C();
  v57 = sub_1CE0B61E8();
  v53 = sub_1CE0B6A94();
  sub_1CE0B6A70();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1CE0B6380();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1CE0B68E4();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1CE0B6A7C();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1CE0B68E4();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1CE0B6A7C();
      sub_1CE0B68E4();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t Digest.hexString.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_1CE05FBC8((void (*)(char *, char *))sub_1CE06017C, 0, a1, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], *(_QWORD *)(a2 + 32), MEMORY[0x1E0DEDD18], a8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  sub_1CE007108();
  v8 = sub_1CE0B6248();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1CE06017C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61E80);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEDE70];
  *(_OWORD *)(v4 + 16) = xmmword_1CE0BB0F0;
  v6 = MEMORY[0x1E0DEDEC8];
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = v6;
  *(_BYTE *)(v4 + 32) = v3;
  result = sub_1CE0B6284();
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t HashAlgorithm.hash(into:)()
{
  sub_1CE0B6D40();
  return sub_1CE0B6D40();
}

BOOL static HashAlgorithm.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t HashAlgorithm.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0602A0()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0602F0()
{
  sub_1CE0B6D40();
  return sub_1CE0B6D40();
}

uint64_t sub_1CE06032C()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

unint64_t sub_1CE06037C()
{
  unint64_t result;

  result = qword_1EFA61E88;
  if (!qword_1EFA61E88)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for HashAlgorithm, &type metadata for HashAlgorithm);
    atomic_store(result, (unint64_t *)&qword_1EFA61E88);
  }
  return result;
}

BOOL sub_1CE0603C0(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t getEnumTagSinglePayload for HashAlgorithm(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HashAlgorithm(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

uint64_t sub_1CE06041C()
{
  return 0;
}

ValueMetadata *type metadata accessor for HashAlgorithm()
{
  return &type metadata for HashAlgorithm;
}

uint64_t static HashFunction.hash(data:chunkSizeInBytes:)()
{
  swift_getAssociatedTypeWitness();
  return sub_1CE0B3D4C();
}

uint64_t sub_1CE0604C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v18 = a2;
  v24 = *MEMORY[0x1E0C80C00];
  v10 = sub_1CE0B3D34();
  v22 = *(_QWORD *)(v10 - 8);
  v23 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v21 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B61C4();
  v19 = a1;
  if (a1)
  {
    v20 = v14;
    v16[0] = a5;
    v16[1] = v5;
    __asm { BR              X10 }
  }
  sub_1CE0B61AC();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v14, a4);
}

uint64_t sub_1CE060900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1CE0604C0(a1, v2[4], v2[5], v2[2], a2);
}

unint64_t sub_1CE060920()
{
  unint64_t result;

  result = qword_1EFA61E90;
  if (!qword_1EFA61E90)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0CB0310], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EFA61E90);
  }
  return result;
}

uint64_t TransportDataSerializable.hash(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1CE0B61DC();
  MEMORY[0x1E0C80A78](v2);
  sub_1CE0B56B4();
  if (!v1)
    __asm { BR              X10 }
  return v0;
}

uint64_t *Array<A>.hash(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v7 = sub_1CE0B61DC();
  MEMORY[0x1E0C80A78](v7);
  v11 = a2;
  v8 = sub_1CE0B64C4();
  v12[0] = a4;
  MEMORY[0x1D17C0848](MEMORY[0x1E0D96830], v8, v12);
  sub_1CE0B58F4();
  if (!v4)
    __asm { BR              X10 }
  return &v11;
}

uint64_t sub_1CE061058(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;

  v2 = sub_1CE0B61DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFB1900(&qword_1EFA61E98, v6, MEMORY[0x1E0CA9A58]);
  v7 = sub_1CE0B638C();
  v38 = MEMORY[0x1E0DEE9D8];
  sub_1CDFCF9BC(0, v7 & ~(v7 >> 63), 0);
  v8 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  result = sub_1CE0B6380();
  if ((v7 & 0x8000000000000000) == 0)
  {
    v10 = v37;
    if (v7)
    {
      v11 = *(_QWORD *)(v36 + 16);
      v34 = v36;
      *(_QWORD *)&v35 = v11;
      v33 = v36 + 32;
      v32 = xmmword_1CE0BB0F0;
      v12 = v37;
      while ((_QWORD)v35 != v12)
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_21;
        if (v12 >= *(_QWORD *)(v34 + 16))
          goto LABEL_22;
        v13 = *(_BYTE *)(v33 + v12);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61E80);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = v32;
        *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v14 + 32) = v13;
        result = sub_1CE0B6284();
        v15 = result;
        v17 = v16;
        v38 = v8;
        v19 = *(_QWORD *)(v8 + 16);
        v18 = *(_QWORD *)(v8 + 24);
        if (v19 >= v18 >> 1)
        {
          result = sub_1CDFCF9BC(v18 > 1, v19 + 1, 1);
          v8 = v38;
        }
        *(_QWORD *)(v8 + 16) = v19 + 1;
        v20 = v8 + 16 * v19;
        *(_QWORD *)(v20 + 32) = v15;
        *(_QWORD *)(v20 + 40) = v17;
        ++v12;
        if (!--v7)
        {
          v37 = v12;
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    else
    {
      v12 = v37;
LABEL_12:
      v21 = v36;
      v22 = *(_QWORD *)(v36 + 16);
      if (v12 == v22)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        return v8;
      }
      v35 = xmmword_1CE0BB0F0;
      while (v12 < v22)
      {
        v23 = *(_BYTE *)(v21 + 32 + v12);
        v37 = v12 + 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61E80);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v35;
        *(_QWORD *)(v24 + 56) = MEMORY[0x1E0DEDE70];
        *(_QWORD *)(v24 + 64) = MEMORY[0x1E0DEDEC8];
        *(_BYTE *)(v24 + 32) = v23;
        result = sub_1CE0B6284();
        v25 = result;
        v27 = v26;
        v38 = v8;
        v29 = *(_QWORD *)(v8 + 16);
        v28 = *(_QWORD *)(v8 + 24);
        if (v29 >= v28 >> 1)
        {
          result = sub_1CDFCF9BC(v28 > 1, v29 + 1, 1);
          v8 = v38;
        }
        *(_QWORD *)(v8 + 16) = v29 + 1;
        v30 = v8 + 16 * v29;
        *(_QWORD *)(v30 + 32) = v25;
        *(_QWORD *)(v30 + 40) = v27;
        v12 = v37;
        v22 = *(_QWORD *)(v21 + 16);
        if (v37 == v22)
          goto LABEL_13;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE06137C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v22 = a4;
  v26 = a2;
  v27 = *MEMORY[0x1E0C80C00];
  v9 = sub_1CE0B3D34();
  v20 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v25 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B61D0();
  v18 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CDFB1900(&qword_1EFA61EA0, v14, MEMORY[0x1E0CA9A10]);
  sub_1CE0B61C4();
  v21 = a1;
  if (a1)
  {
    v23 = v13;
    v24 = v15;
    v19 = v11;
    v17[1] = a5;
    v17[2] = v5;
    __asm { BR              X10 }
  }
  sub_1CE0B61AC();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, v11);
}

uint64_t sub_1CE0619C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v13;

  result = sub_1CE0B3C74();
  v13 = result;
  if (result)
  {
    result = sub_1CE0B3C8C();
    if (__OFSUB__(a1, result))
      goto LABEL_7;
    v13 += a1 - result;
  }
  if (!__OFSUB__(a2, a1))
  {
    sub_1CE0B3C80();
    sub_1CE06137C(v13, a3, a4, a5, a6);
    return sub_1CDFC666C(a3, a4);
  }
  __break(1u);
LABEL_7:
  __break(1u);
  return result;
}

void static SupportedDeviceChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for SupportedDeviceChanged()
{
  return &type metadata for SupportedDeviceChanged;
}

void Data.hash(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = sub_1CE0B61DC();
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X10 }
}

uint64_t sub_1CE061B48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 - 120) = v1;
  *(_WORD *)(v6 - 112) = v4;
  *(_BYTE *)(v6 - 110) = BYTE2(v4);
  *(_BYTE *)(v6 - 109) = BYTE3(v4);
  *(_BYTE *)(v6 - 108) = BYTE4(v4);
  *(_BYTE *)(v6 - 107) = BYTE5(v4);
  sub_1CE06137C(v6 - 120, v1, v4, v2, v3);
  sub_1CDFC666C(v1, v4);
  sub_1CDFC666C(v1, v4);
  *(_QWORD *)(v6 - 120) = sub_1CE061058(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  sub_1CE007108();
  v7 = sub_1CE0B6248();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v0);
  return v7;
}

void static OnboardingSurveyResultsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for OnboardingSurveyResultsUpdated()
{
  return &type metadata for OnboardingSurveyResultsUpdated;
}

uint64_t MusicTrackStarted.musicTrack.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MusicTrackStarted.init(musicTrack:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MusicTrackStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MusicTrackStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE061E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MusicTrackStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE061E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicTrackStarted()
{
  uint64_t result;

  result = qword_1EFA61F00;
  if (!qword_1EFA61F00)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *SessionClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for SessionClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE066F3C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t SessionClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE067184);
}

uint64_t sub_1CE062014()
{
  uint64_t result;
  uint64_t v1;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for DistributedSessionCancelled, &protocol witness table for DistributedSessionCancelled, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t SessionClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SessionClient.queryActiveSession()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA634C8);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CBAA0;
  v3._object = (void *)0x80000001CE0CBB10;
  v3._countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 220;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B5E04();
  return v6(&v9, v7, MEMORY[0x1E0D96240], MEMORY[0x1E0D96248], ObjectType, v4);
}

uint64_t SessionClient.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:queueIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  Swift::String v77;
  Swift::String v78;
  id v79;
  id v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t (**v131)(uint64_t);
  char *v132;
  void (*v133)(char *, uint64_t);
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (**v140)();
  _QWORD v141[7];
  uint64_t v142;
  unint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  void (*v184)(uint64_t, char *, uint64_t);
  char v185;

  v160 = a5;
  v165 = a4;
  v184 = a3;
  v147 = a2;
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v169 = *(_QWORD *)(v166 - 8);
  v8 = MEMORY[0x1E0C80A78](v166);
  v168 = (char *)v141 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v158 = (char *)v141 - v11;
  v167 = v12;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v141 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  MEMORY[0x1E0C80A78](v15);
  v164 = (char *)v141 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v17);
  v163 = (char *)v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  MEMORY[0x1E0C80A78](v19);
  v162 = (char *)v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  MEMORY[0x1E0C80A78](v21);
  v161 = (char *)v141 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  MEMORY[0x1E0C80A78](v23);
  v159 = (char *)v141 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  MEMORY[0x1E0C80A78](v25);
  v157 = (char *)v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  MEMORY[0x1E0C80A78](v27);
  v156 = (char *)v141 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  MEMORY[0x1E0C80A78](v29);
  v155 = (uint64_t)v141 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  MEMORY[0x1E0C80A78](v31);
  v153 = (char *)v141 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D950);
  MEMORY[0x1E0C80A78](v148);
  v146 = (char *)v141 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  MEMORY[0x1E0C80A78](v34);
  v152 = (char *)v141 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  MEMORY[0x1E0C80A78](v36);
  v183 = (char *)v141 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v38);
  v182 = (char *)v141 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v40);
  v181 = (char *)v141 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v42);
  v179 = (char *)v141 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v44);
  v178 = (char *)v141 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  MEMORY[0x1E0C80A78](v46);
  v177 = (char *)v141 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  MEMORY[0x1E0C80A78](v48);
  v176 = (char *)v141 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  MEMORY[0x1E0C80A78](v50);
  v175 = (char *)v141 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  MEMORY[0x1E0C80A78](v52);
  v174 = (char *)v141 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  MEMORY[0x1E0C80A78](v54);
  v173 = (char *)v141 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  MEMORY[0x1E0C80A78](v56);
  v172 = (char *)v141 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  MEMORY[0x1E0C80A78](v58);
  v171 = (char *)v141 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  MEMORY[0x1E0C80A78](v60);
  v62 = (char *)v141 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v63);
  v65 = (char *)v141 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_1CE0B482C();
  v67 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v69 = (char *)v141 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1CE0B5E04();
  v71 = MEMORY[0x1E0C80A78](v70);
  MEMORY[0x1E0C80A78](v71);
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    v149 = v75;
    v150 = v74;
    v180 = (char *)v141 - v72;
    v151 = v73;
    v154 = v70;
    v144 = v14;
    v145 = a6;
    if (qword_1EFA5D520 != -1)
      swift_once();
    v76 = sub_1CE0B6080();
    __swift_project_value_buffer(v76, (uint64_t)qword_1EFA634C8);
    v77._countAndFlagsBits = 0xD000000000000063;
    v78._countAndFlagsBits = 0xD000000000000066;
    v78._object = (void *)0x80000001CE0CBAA0;
    v77._object = (void *)0x80000001CE0CBB30;
    Logger.trace(file:function:)(v78, v77);
    v79 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
    v80 = objc_msgSend(v79, sel_bundleIdentifier);

    if (v80)
    {
      v142 = sub_1CE0B6278();
      v143 = v81;

    }
    else
    {
      v143 = 0x80000001CE0CBBA0;
      v142 = 0xD000000000000017;
    }
    v141[6] = a1;
    v86 = *(_QWORD *)(a1 + 24);
    v141[5] = *(_QWORD *)(a1 + 16);
    v141[1] = v86;
    v87 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
    v141[4] = v69;
    v87(v69, v147, v66);
    v88 = sub_1CE0B43B8();
    v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56);
    v141[3] = v65;
    v89(v65, 1, 1, v88);
    v90 = sub_1CE0B5000();
    v91 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56);
    v141[2] = v62;
    v91(v62, 1, 1, v90);
    v92 = sub_1CE0B5FA8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v171, 1, 1, v92);
    v93 = sub_1CE0B4A24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v172, 1, 1, v93);
    v94 = sub_1CE0B4D84();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v173, 1, 1, v94);
    v95 = sub_1CE0B4850();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v174, 1, 1, v95);
    v96 = sub_1CE0B4274();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v175, 1, 1, v96);
    v97 = sub_1CE0B4B80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v176, 1, 1, v97);
    v98 = sub_1CE0B4A6C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v177, 1, 1, v98);
    v99 = sub_1CE0B3ED8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v178, 1, 1, v99);
    v100 = sub_1CE0B5078();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v179, 1, 1, v100);
    v101 = sub_1CE0B4BEC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v181, 1, 1, v101);
    v102 = sub_1CE0B56F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v182, 1, 1, v102);
    v103 = sub_1CE0B3F20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v183, 1, 1, v103);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CE0B6650();
    v104 = *MEMORY[0x1E0D96470];
    v105 = sub_1CE0B5F00();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 104))(v146, v104, v105);
    swift_storeEnumTagMultiPayload();
    v185 = 1;
    v106 = v152;
    sub_1CE0B5EE8();
    v107 = sub_1CE0B5F18();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v106, 0, 1, v107);
    v108 = sub_1CE0B4880();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v153, 1, 1, v108);
    sub_1CDFB1434(v160, v155, (uint64_t *)&unk_1EFA62FC0);
    v109 = sub_1CE0B5384();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 56))(v156, 1, 1, v109);
    v110 = sub_1CE0B416C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v157, 1, 1, v110);
    v111 = sub_1CE0B4AE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v159, 1, 1, v111);
    v112 = sub_1CE0B4DD8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v161, 1, 1, v112);
    v113 = sub_1CE0B5480();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 56))(v162, 1, 1, v113);
    v114 = sub_1CE0B5EAC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 56))(v163, 1, 1, v114);
    v115 = sub_1CE0B53C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v164, 1, 1, v115);
    v116 = v180;
    sub_1CE0B5C90();
    swift_retain();
    v182 = (char *)(MEMORY[0x1E0DEE9C0] + 8);
    v117 = v158;
    sub_1CE0B5C0C();
    v118 = v151;
    v184 = *(void (**)(uint64_t, char *, uint64_t))(v151 + 16);
    v119 = v150;
    v120 = v154;
    v184(v150, v116, v154);
    v121 = *(unsigned __int8 *)(v118 + 80);
    v183 = (char *)(v121 | 7);
    v122 = swift_allocObject();
    *(_QWORD *)(v122 + 16) = v170;
    v181 = *(char **)(v118 + 32);
    ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v122 + ((v121 + 24) & ~v121), v119, v120);
    v123 = swift_allocObject();
    *(_QWORD *)(v123 + 16) = sub_1CE0672B8;
    *(_QWORD *)(v123 + 24) = v122;
    v125 = v168;
    v124 = v169;
    v179 = *(char **)(v169 + 16);
    v126 = v166;
    ((void (*)(char *, char *, uint64_t))v179)(v168, v117, v166);
    v127 = *(unsigned __int8 *)(v124 + 80);
    v128 = (v127 + 16) & ~v127;
    v176 = (char *)v128;
    v129 = (v167 + v128 + 7) & 0xFFFFFFFFFFFFFFF8;
    v177 = (char *)(v129 + 16);
    v178 = (char *)(v127 | 7);
    v130 = swift_allocObject();
    v175 = *(char **)(v124 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v175)(v130 + v128, v125, v126);
    v131 = (uint64_t (**)(uint64_t))(v130 + v129);
    *v131 = sub_1CE0672F8;
    v131[1] = (uint64_t (*)(uint64_t))v123;
    swift_retain();
    v132 = v144;
    sub_1CE0B5C00();
    v133 = *(void (**)(char *, uint64_t))(v124 + 8);
    v134 = v117;
    v133(v117, v126);
    v135 = v150;
    v136 = v154;
    v184(v150, v180, v154);
    v137 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, uint64_t))v181)(v137 + ((v121 + 16) & ~v121), v135, v136);
    v138 = swift_allocObject();
    *(_QWORD *)(v138 + 16) = sub_1CE067314;
    *(_QWORD *)(v138 + 24) = v137;
    ((void (*)(char *, char *, uint64_t))v179)(v134, v132, v126);
    v139 = swift_allocObject();
    ((void (*)(char *, char *, uint64_t))v175)(&v176[v139], v134, v126);
    v140 = (uint64_t (**)())(v139 + v129);
    *v140 = sub_1CE00D394;
    v140[1] = (uint64_t (*)())v138;
    sub_1CE0B5C00();
    v133(v132, v126);
    return (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v180, v136);
  }
  else
  {
    v82 = sub_1CE0B4364();
    sub_1CDFB1900(&qword_1EFA61F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D909A0], MEMORY[0x1E0D909B0]);
    v83 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v84, *MEMORY[0x1E0D90968], v82);
    *(_QWORD *)(swift_allocObject() + 16) = v83;
    return sub_1CE0B5C0C();
  }
}

uint64_t sub_1CE06336C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(result + 32) & 1) != 0)
  {
    *(_BYTE *)(result + 32) = 0;
  }
  else
  {
    v1 = sub_1CE0B4364();
    sub_1CDFB1900(&qword_1EFA61F38, (uint64_t (*)(uint64_t))MEMORY[0x1E0D909A0], MEMORY[0x1E0D909B0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, *MEMORY[0x1E0D90968], v1);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1CE063404(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  __int16 v8;

  v3 = *(_QWORD *)(a1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 219;
  v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 16);
  v6 = sub_1CE0B5E04();
  return v5(&v8, a2, v6, MEMORY[0x1E0D96240], MEMORY[0x1E0D96248], ObjectType, v3);
}

uint64_t sub_1CE063490(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1CE0B5E04();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  return sub_1CE0B5C0C();
}

Swift::Void __swiftcall SessionClient.detachRemoteDisplay()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA634C8);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CBAA0;
  v3._object = (void *)0x80000001CE0CBBC0;
  v3._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v6 = 28;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 72))(&v6, ObjectType, v4);
}

uint64_t SessionClient.requestDistributedSessionWithParticipant(havingRole:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v9;
  __int16 v10;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA634C8);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CBAA0;
  v5._object = (void *)0x80000001CE0CBBE0;
  v5._countAndFlagsBits = 0xD000000000000035;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v10 = 225;
  v9 = a1;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16))(&v10, &v9, MEMORY[0x1E0D93598], MEMORY[0x1E0D93580], MEMORY[0x1E0D93588], ObjectType, v6);
}

uint64_t SessionClient.requestDistributedSessionWithParticipant(_:)(uint64_t a1)
{
  return sub_1CE064340(a1, 0xD00000000000002CLL, (void *)0x80000001CE0CBC20, 224);
}

uint64_t SessionClient.activateDistributedSession(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  void (*v73)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t ObjectType;
  void (*v100)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  _QWORD v105[9];
  int v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  __int16 v129;

  v120 = a2;
  v119 = a1;
  v122 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v3);
  v118 = (char *)v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  MEMORY[0x1E0C80A78](v5);
  v117 = (char *)v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  MEMORY[0x1E0C80A78](v7);
  v116 = (char *)v105 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  MEMORY[0x1E0C80A78](v9);
  v115 = (char *)v105 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  MEMORY[0x1E0C80A78](v11);
  v114 = (char *)v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  MEMORY[0x1E0C80A78](v13);
  v113 = (char *)v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  MEMORY[0x1E0C80A78](v15);
  v112 = (char *)v105 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  MEMORY[0x1E0C80A78](v17);
  v111 = (char *)v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  MEMORY[0x1E0C80A78](v19);
  v110 = (char *)v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  MEMORY[0x1E0C80A78](v21);
  v128 = (char *)v105 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  MEMORY[0x1E0C80A78](v23);
  v127 = (char *)v105 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v25);
  v126 = (char *)v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v27);
  v125 = (char *)v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v29);
  v124 = (char *)v105 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v31);
  v123 = (char *)v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v105 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v105 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v105 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v105 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)v105 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)v105 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)v105 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)v105 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)v105 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1CE0B4604();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)v105 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D520 != -1)
    swift_once();
  v61 = sub_1CE0B6080();
  __swift_project_value_buffer(v61, (uint64_t)qword_1EFA634C8);
  v62._countAndFlagsBits = 0xD000000000000066;
  v62._object = (void *)0x80000001CE0CBAA0;
  v63._object = (void *)0x80000001CE0CBC50;
  v63._countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v62, v63);
  v106 = sub_1CE0B6DAC();
  v64 = sub_1CE0B43B8();
  v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56);
  v105[8] = v59;
  v65(v59, 1, 1, v64);
  v66 = sub_1CE0B5000();
  v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56);
  v105[7] = v56;
  v67(v56, 1, 1, v66);
  v68 = sub_1CE0B4A24();
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56);
  v105[6] = v53;
  v69(v53, 1, 1, v68);
  v70 = sub_1CE0B5FA8();
  v71 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
  v105[5] = v50;
  v71(v50, 1, 1, v70);
  v72 = sub_1CE0B4D84();
  v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56);
  v105[4] = v47;
  v73(v47, 1, 1, v72);
  v74 = sub_1CE0B4850();
  v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56);
  v105[3] = v44;
  v75(v44, 1, 1, v74);
  v76 = sub_1CE0B4274();
  v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56);
  v105[2] = v41;
  v77(v41, 1, 1, v76);
  v78 = sub_1CE0B4B80();
  v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56);
  v105[1] = v38;
  v79(v38, 1, 1, v78);
  v80 = sub_1CE0B4A6C();
  v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
  v105[0] = v35;
  v81(v35, 1, 1, v80);
  v82 = sub_1CE0B3ED8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v123, 1, 1, v82);
  v83 = sub_1CE0B5078();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v124, 1, 1, v83);
  v84 = sub_1CE0B4BEC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v125, 1, 1, v84);
  v85 = sub_1CE0B56F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v126, 1, 1, v85);
  v86 = sub_1CE0B3F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v127, 1, 1, v86);
  v87 = sub_1CE0B4880();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v128, 1, 1, v87);
  v88 = sub_1CE0B5F18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v110, 1, 1, v88);
  v89 = sub_1CE0B5384();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v111, 1, 1, v89);
  v90 = sub_1CE0B4148();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v112, 1, 1, v90);
  v91 = sub_1CE0B416C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v113, 1, 1, v91);
  v92 = sub_1CE0B4AE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v114, 1, 1, v92);
  v93 = sub_1CE0B4DD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v115, 1, 1, v93);
  v94 = sub_1CE0B53C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v116, 1, 1, v94);
  v95 = sub_1CE0B5480();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v117, 1, 1, v95);
  v96 = sub_1CE0B5EAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v118, 1, 1, v96);
  swift_bridgeObjectRetain();
  sub_1CE0B6650();
  v97 = v107;
  sub_1CE0B4574();
  v98 = *(_QWORD *)(v121 + 24);
  ObjectType = swift_getObjectType();
  v129 = 217;
  v100 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v98 + 32);
  v101 = sub_1CE0B5E04();
  v104 = ObjectType;
  v102 = v109;
  v100(&v129, v97, v109, v101, MEMORY[0x1E0D90EF8], MEMORY[0x1E0D90F00], MEMORY[0x1E0D96240], MEMORY[0x1E0D96248], v104, v98);
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v97, v102);
}

uint64_t SessionClient.cancelDistributedSessionWithParticipant(_:)(uint64_t a1)
{
  return sub_1CE064340(a1, 0xD00000000000002BLL, (void *)0x80000001CE0CBC80, 218);
}

uint64_t sub_1CE064340(uint64_t a1, uint64_t a2, void *a3, __int16 a4)
{
  uint64_t v4;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  __int16 v17;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EFA634C8);
  v10._object = (void *)0x80000001CE0CBAA0;
  v10._countAndFlagsBits = 0xD000000000000066;
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  Logger.trace(file:function:)(v10, v11);
  v12 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v17 = a4;
  v14 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 16);
  v15 = sub_1CE0B4D48();
  return v14(&v17, a1, v15, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], ObjectType, v12);
}

uint64_t SessionClient.reportAppRequirementCompleted()()
{
  return sub_1CE064480(0xD00000000000001FLL, (void *)0x80000001CE0CBCB0, 230);
}

uint64_t SessionClient.reportAppRequirementFailed()()
{
  return sub_1CE064480(0xD00000000000001CLL, (void *)0x80000001CE0CBCD0, 231);
}

uint64_t sub_1CE064480(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1EFA5D520 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EFA634C8);
  v8._object = (void *)0x80000001CE0CBAA0;
  v8._countAndFlagsBits = 0xD000000000000066;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

void SessionClient.sendCountdownIntent(_:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  uint64_t v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_BYTE *, uint64_t, uint64_t);
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t ObjectType;
  uint64_t v104;
  _BYTE v105[12];
  int v106;
  _BYTE *v107;
  uint64_t v108;
  void (*v109)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v110;
  _BYTE *v111;
  _BYTE *v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  _BYTE *v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  _BYTE *v134;
  _BYTE *v135;
  _BYTE *v136;
  NSObject *v137;
  uint64_t v138;
  uint64_t v139;

  v127 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v3);
  v121 = &v105[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  MEMORY[0x1E0C80A78](v5);
  v118 = &v105[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v105[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v105[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v105[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v105[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  MEMORY[0x1E0C80A78](v19);
  v120 = &v105[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  MEMORY[0x1E0C80A78](v21);
  v119 = &v105[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  MEMORY[0x1E0C80A78](v23);
  v137 = &v105[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  MEMORY[0x1E0C80A78](v25);
  v117 = &v105[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  MEMORY[0x1E0C80A78](v27);
  v29 = &v105[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v30);
  v136 = &v105[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v32);
  v135 = &v105[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v34);
  v134 = &v105[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v36);
  v133 = &v105[-((v37 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  MEMORY[0x1E0C80A78](v38);
  v132 = &v105[-((v39 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  MEMORY[0x1E0C80A78](v40);
  v131 = &v105[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  MEMORY[0x1E0C80A78](v42);
  v130 = &v105[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  MEMORY[0x1E0C80A78](v44);
  v129 = &v105[-((v45 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  MEMORY[0x1E0C80A78](v46);
  v128 = &v105[-((v47 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  MEMORY[0x1E0C80A78](v48);
  v126 = &v105[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  MEMORY[0x1E0C80A78](v50);
  v125 = &v105[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  MEMORY[0x1E0C80A78](v52);
  v124 = &v105[-((v53 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v54);
  v123 = &v105[-((v55 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v116 = sub_1CE0B4604();
  v115 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v116);
  v114 = &v105[-((v56 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = sub_1CE0B4A24();
  v58 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v60 = &v105[-((v59 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    if (qword_1EFA5D520 != -1)
      swift_once();
    v61 = sub_1CE0B6080();
    __swift_project_value_buffer(v61, (uint64_t)qword_1EFA634C8);
    v137 = sub_1CE0B6068();
    v62 = sub_1CE0B671C();
    if (os_log_type_enabled(v137, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v63 = 0;
      _os_log_impl(&dword_1CDFAA000, v137, v62, "Send countdown intent failed with inactive token", v63, 2u);
      MEMORY[0x1D17C092C](v63, -1, -1);
    }

  }
  else
  {
    v64 = a2;
    v110 = v18;
    v111 = v15;
    v112 = v12;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v113 = v9;
    v65 = sub_1CE0B6080();
    __swift_project_value_buffer(v65, (uint64_t)qword_1ED8F1870);
    v66 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v58 + 16);
    v66(v60, v127, v57);
    v67 = a2;
    swift_retain_n();
    v68 = sub_1CE0B6068();
    v69 = sub_1CE0B6734();
    v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      v71 = swift_slowAlloc();
      v108 = swift_slowAlloc();
      v139 = v108;
      *(_DWORD *)v71 = 136446466;
      v109 = v66;
      sub_1CDFB1900(&qword_1EFA61F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D916C8], MEMORY[0x1E0D916E0]);
      v106 = v70;
      v72 = sub_1CE0B6C14();
      v138 = sub_1CDFC7270(v72, v73, &v139);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v60, v57);
      *(_WORD *)(v71 + 12) = 2082;
      v74 = *(_QWORD *)(v64 + 16);
      v75 = *(_QWORD *)(v64 + 24);
      swift_bridgeObjectRetain();
      v138 = sub_1CDFC7270(v74, v75, &v139);
      v67 = v64;
      sub_1CE0B68F0();
      swift_release_n();
      v66 = v109;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CDFAA000, v68, (os_log_type_t)v106, "Sending countdown intent %{public}s for session: %{public}s", (uint8_t *)v71, 0x16u);
      v76 = v108;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v76, -1, -1);
      MEMORY[0x1D17C092C](v71, -1, -1);

    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v58 + 8))(v60, v57);

      swift_release_n();
    }
    v107 = v29;
    LODWORD(v109) = sub_1CE0B6DAC();
    v108 = *(_QWORD *)(v67 + 16);
    v77 = sub_1CE0B43B8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v123, 1, 1, v77);
    v78 = sub_1CE0B5000();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v124, 1, 1, v78);
    v79 = v125;
    v66(v125, v127, v57);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v79, 0, 1, v57);
    v80 = sub_1CE0B5FA8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v126, 1, 1, v80);
    v81 = sub_1CE0B4D84();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v128, 1, 1, v81);
    v82 = sub_1CE0B4850();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v129, 1, 1, v82);
    v83 = sub_1CE0B4274();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v130, 1, 1, v83);
    v84 = sub_1CE0B4B80();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v131, 1, 1, v84);
    v85 = sub_1CE0B4A6C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v132, 1, 1, v85);
    v86 = sub_1CE0B3ED8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v133, 1, 1, v86);
    v87 = sub_1CE0B5078();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v134, 1, 1, v87);
    v88 = sub_1CE0B4BEC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v135, 1, 1, v88);
    v89 = sub_1CE0B56F0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v136, 1, 1, v89);
    v90 = sub_1CE0B3F20();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v29, 1, 1, v90);
    v91 = sub_1CE0B4880();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v117, 1, 1, v91);
    v92 = sub_1CE0B5F18();
    (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v137, 1, 1, v92);
    v93 = sub_1CE0B5384();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v119, 1, 1, v93);
    v94 = sub_1CE0B4148();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v120, 1, 1, v94);
    v95 = sub_1CE0B416C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v110, 1, 1, v95);
    v96 = sub_1CE0B4AE4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v111, 1, 1, v96);
    v97 = sub_1CE0B4DD8();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v112, 1, 1, v97);
    v98 = sub_1CE0B53C0();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v113, 1, 1, v98);
    v99 = sub_1CE0B5480();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v118, 1, 1, v99);
    v100 = sub_1CE0B5EAC();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v121, 1, 1, v100);
    swift_bridgeObjectRetain();
    sub_1CE0B6650();
    v101 = v114;
    sub_1CE0B4574();
    v102 = *(_QWORD *)(v122 + 24);
    ObjectType = swift_getObjectType();
    LOBYTE(v139) = 31;
    v104 = v116;
    (*(void (**)(uint64_t *, _BYTE *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v102 + 80))(&v139, v101, v116, MEMORY[0x1E0D90EF8], MEMORY[0x1E0D90F00], ObjectType, v102);
    (*(void (**)(_BYTE *, uint64_t))(v115 + 8))(v101, v104);
  }
}

void SessionClient.startCountdown(_:token:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  void (*v79)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t ObjectType;
  uint64_t v103;
  _QWORD v104[3];
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  int v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  NSObject *v133;
  char v134;

  v117 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  MEMORY[0x1E0C80A78](v6);
  v126 = (char *)v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  MEMORY[0x1E0C80A78](v8);
  v125 = (char *)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  MEMORY[0x1E0C80A78](v10);
  v124 = (char *)v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  MEMORY[0x1E0C80A78](v12);
  v123 = (char *)v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  MEMORY[0x1E0C80A78](v14);
  v122 = (char *)v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  MEMORY[0x1E0C80A78](v16);
  v121 = (char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  MEMORY[0x1E0C80A78](v18);
  v120 = (char *)v104 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  MEMORY[0x1E0C80A78](v20);
  v119 = (char *)v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  MEMORY[0x1E0C80A78](v22);
  v133 = ((char *)v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  MEMORY[0x1E0C80A78](v24);
  v132 = (char *)v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v26);
  v131 = (char *)v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v28);
  v130 = (char *)v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v30);
  v129 = (char *)v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v32);
  v128 = (char *)v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  MEMORY[0x1E0C80A78](v34);
  v127 = (char *)v104 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  MEMORY[0x1E0C80A78](v36);
  v38 = (char *)v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v104 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)v104 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)v104 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)v104 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  MEMORY[0x1E0C80A78](v51);
  v53 = (char *)v104 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  MEMORY[0x1E0C80A78](v54);
  v56 = (char *)v104 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v57);
  v59 = (char *)v104 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1CE0B4604();
  v61 = MEMORY[0x1E0C80A78](v60);
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    if (qword_1EFA5D520 != -1)
      swift_once();
    v64 = sub_1CE0B6080();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EFA634C8);
    v133 = sub_1CE0B6068();
    v65 = sub_1CE0B671C();
    if (os_log_type_enabled(v133, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_1CDFAA000, v133, v65, "Start countdown failed with inactive token", v66, 2u);
      MEMORY[0x1D17C092C](v66, -1, -1);
    }

  }
  else
  {
    v115 = v61;
    v116 = v63;
    v114 = (char *)v104 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
    v113 = sub_1CE0B6DAC();
    v112 = *(_QWORD *)(a2 + 16);
    v108 = *(_QWORD *)(a2 + 24);
    v67 = sub_1CE0B43B8();
    v68 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56);
    v111 = v59;
    v68(v59, 1, 1, v67);
    v69 = sub_1CE0B5000();
    v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56);
    v110 = v56;
    v70(v56, 1, 1, v69);
    v71 = sub_1CE0B4A24();
    v72 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56);
    v109 = v53;
    v72(v53, 1, 1, v71);
    v73 = sub_1CE0B5FA8();
    v105 = v5;
    v74 = *(_QWORD *)(v73 - 8);
    v75 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
    v107 = v50;
    v75(v50, v117, v73);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v50, 0, 1, v73);
    v76 = sub_1CE0B4D84();
    v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56);
    v106 = v47;
    v77(v47, 1, 1, v76);
    v78 = sub_1CE0B4850();
    v79 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56);
    v104[2] = v44;
    v79(v44, 1, 1, v78);
    v80 = sub_1CE0B4274();
    v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56);
    v104[1] = v41;
    v81(v41, 1, 1, v80);
    v82 = sub_1CE0B4B80();
    v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56);
    v104[0] = v38;
    v83(v38, 1, 1, v82);
    v84 = sub_1CE0B4A6C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v127, 1, 1, v84);
    v85 = sub_1CE0B3ED8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v128, 1, 1, v85);
    v86 = sub_1CE0B5078();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v129, 1, 1, v86);
    v87 = sub_1CE0B4BEC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v130, 1, 1, v87);
    v88 = sub_1CE0B56F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v131, 1, 1, v88);
    v89 = sub_1CE0B3F20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v132, 1, 1, v89);
    v90 = sub_1CE0B4880();
    (*(void (**)(NSObject *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v133, 1, 1, v90);
    v91 = sub_1CE0B5F18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v119, 1, 1, v91);
    v92 = sub_1CE0B5384();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v120, 1, 1, v92);
    v93 = sub_1CE0B4148();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 56))(v121, 1, 1, v93);
    v94 = sub_1CE0B416C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v122, 1, 1, v94);
    v95 = sub_1CE0B4AE4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v123, 1, 1, v95);
    v96 = sub_1CE0B4DD8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v124, 1, 1, v96);
    v97 = sub_1CE0B53C0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v125, 1, 1, v97);
    v98 = sub_1CE0B5480();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 56))(v126, 1, 1, v98);
    v99 = sub_1CE0B5EAC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v105, 1, 1, v99);
    swift_bridgeObjectRetain();
    sub_1CE0B6650();
    v100 = v114;
    sub_1CE0B4574();
    v101 = *(_QWORD *)(v118 + 24);
    ObjectType = swift_getObjectType();
    v134 = 31;
    v103 = v115;
    (*(void (**)(char *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v101 + 80))(&v134, v100, v115, MEMORY[0x1E0D90EF8], MEMORY[0x1E0D90F00], ObjectType, v101);
    (*(void (**)(char *, uint64_t))(v116 + 8))(v100, v103);
  }
}

void SessionClient.applySessionUpdate(token:activityRings:audioFocusPreference:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t ObjectType;
  _QWORD v104[11];
  int v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSObject *v148;
  uint64_t v149;
  uint64_t v150;

  v127 = a8;
  v125 = a7;
  v123 = a6;
  v122 = a5;
  v121 = a4;
  v120 = a3;
  v118 = a2;
  v139 = a22;
  v140 = a23;
  v137 = a20;
  v138 = a21;
  v135 = a18;
  v136 = a19;
  v133 = a16;
  v134 = a17;
  v131 = a14;
  v132 = a15;
  v130 = a13;
  v129 = a12;
  v128 = a11;
  v126 = a10;
  v124 = a9;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v24);
  v119 = (uint64_t)v104 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  MEMORY[0x1E0C80A78](v26);
  v116 = (uint64_t)v104 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  MEMORY[0x1E0C80A78](v28);
  v115 = (uint64_t)v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  MEMORY[0x1E0C80A78](v30);
  v114 = (uint64_t)v104 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  MEMORY[0x1E0C80A78](v32);
  v113 = (uint64_t)v104 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  MEMORY[0x1E0C80A78](v34);
  v112 = (uint64_t)v104 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  MEMORY[0x1E0C80A78](v36);
  v111 = (uint64_t)v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  MEMORY[0x1E0C80A78](v38);
  v110 = (uint64_t)v104 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  MEMORY[0x1E0C80A78](v40);
  v108 = (uint64_t)v104 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  MEMORY[0x1E0C80A78](v42);
  v148 = ((char *)v104 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  MEMORY[0x1E0C80A78](v44);
  v147 = (uint64_t)v104 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v46);
  v146 = (uint64_t)v104 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v48);
  v145 = (uint64_t)v104 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v50);
  v144 = (uint64_t)v104 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v52);
  v143 = (uint64_t)v104 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  MEMORY[0x1E0C80A78](v54);
  v142 = (uint64_t)v104 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  MEMORY[0x1E0C80A78](v56);
  v58 = (char *)v104 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  MEMORY[0x1E0C80A78](v59);
  v61 = (char *)v104 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  MEMORY[0x1E0C80A78](v62);
  v64 = (char *)v104 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  MEMORY[0x1E0C80A78](v65);
  v67 = (char *)v104 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  MEMORY[0x1E0C80A78](v68);
  v70 = (char *)v104 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  MEMORY[0x1E0C80A78](v71);
  v73 = (char *)v104 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  MEMORY[0x1E0C80A78](v74);
  v76 = (char *)v104 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v77);
  v79 = (char *)v104 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1CE0B4604();
  v109 = *(_QWORD *)(v117 - 8);
  v80 = MEMORY[0x1E0C80A78](v117);
  MEMORY[0x1E0C80A78](v80);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if (qword_1EFA5D520 != -1)
      swift_once();
    v83 = sub_1CE0B6080();
    __swift_project_value_buffer(v83, (uint64_t)qword_1EFA634C8);
    v148 = sub_1CE0B6068();
    v84 = sub_1CE0B671C();
    if (os_log_type_enabled(v148, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v85 = 0;
      _os_log_impl(&dword_1CDFAA000, v148, v84, "Apply session update failed with inactive token", v85, 2u);
      MEMORY[0x1D17C092C](v85, -1, -1);
    }

  }
  else
  {
    v107 = v82;
    v106 = (char *)v104 - v81;
    v105 = sub_1CE0B6DAC();
    v104[10] = *(_QWORD *)(a1 + 16);
    v104[5] = *(_QWORD *)(a1 + 24);
    v104[9] = v79;
    sub_1CDFB1434(v118, (uint64_t)v79, &qword_1EFA5D940);
    v104[8] = v76;
    sub_1CDFB1434(v120, (uint64_t)v76, &qword_1EFA5D920);
    v86 = sub_1CE0B4A24();
    v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56);
    v104[7] = v73;
    v87(v73, 1, 1, v86);
    v88 = sub_1CE0B5FA8();
    v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56);
    v104[6] = v70;
    v89(v70, 1, 1, v88);
    v104[4] = v67;
    sub_1CDFB1434(v121, (uint64_t)v67, &qword_1EFA5D908);
    v104[3] = v64;
    sub_1CDFB1434(v122, (uint64_t)v64, &qword_1EFA5D8E8);
    v104[2] = v61;
    sub_1CDFB1434(v123, (uint64_t)v61, &qword_1EFA5D8E0);
    v104[1] = v58;
    sub_1CDFB1434(v125, (uint64_t)v58, &qword_1EFA5D8D8);
    sub_1CDFB1434(v127, v142, &qword_1EFA5D8D0);
    sub_1CDFB1434(v124, v143, &qword_1EFA5D8C8);
    sub_1CDFB1434(v126, v144, &qword_1EFA5D8C0);
    sub_1CDFB1434(v128, v145, &qword_1EFA5D8B8);
    sub_1CDFB1434(v129, v146, &qword_1EFA5D8B0);
    sub_1CDFB1434(v130, v147, &qword_1EFA5D8A8);
    sub_1CDFB1434(v131, (uint64_t)v148, &qword_1EFA5D890);
    sub_1CDFB1434(v132, v108, &qword_1EFA5D8A0);
    sub_1CDFB1434(v133, v110, &qword_1EFA5D888);
    sub_1CDFB1434(v134, v111, &qword_1EFA5E7F8);
    sub_1CDFB1434(v135, v112, &qword_1EFA5D880);
    sub_1CDFB1434(v136, v113, &qword_1EFA5D878);
    sub_1CDFB1434(v137, v114, &qword_1EFA5D870);
    sub_1CDFB1434(v138, v115, &qword_1EFA5D860);
    sub_1CDFB1434(v139, v116, &qword_1EFA5D868);
    sub_1CDFB1434(v140, v119, &qword_1EFA62FF0);
    swift_bridgeObjectRetain();
    sub_1CE0B6650();
    v90 = v106;
    sub_1CE0B4574();
    if (qword_1EFA5D520 != -1)
      swift_once();
    v91 = sub_1CE0B6080();
    __swift_project_value_buffer(v91, (uint64_t)qword_1EFA634C8);
    v92 = v109;
    v93 = v107;
    v94 = v117;
    (*(void (**)(uint64_t, char *, uint64_t))(v109 + 16))(v107, v90, v117);
    v95 = sub_1CE0B6068();
    v96 = sub_1CE0B6734();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      v98 = swift_slowAlloc();
      v150 = v98;
      *(_DWORD *)v97 = 136315138;
      v148 = (v97 + 4);
      sub_1CDFB1900(&qword_1EFA61F48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90F08], MEMORY[0x1E0D90F18]);
      v99 = sub_1CE0B6C14();
      v149 = sub_1CDFC7270(v99, v100, &v150);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v101 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v101(v93, v94);
      _os_log_impl(&dword_1CDFAA000, v95, v96, "Updating session: %s", v97, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v98, -1, -1);
      MEMORY[0x1D17C092C](v97, -1, -1);
    }
    else
    {
      v101 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v101(v93, v94);
    }

    v102 = *(_QWORD *)(v141 + 24);
    ObjectType = swift_getObjectType();
    LOBYTE(v150) = 31;
    (*(void (**)(uint64_t *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v102 + 80))(&v150, v90, v94, MEMORY[0x1E0D90EF8], MEMORY[0x1E0D90F00], ObjectType, v102);
    v101((uint64_t)v90, v94);
  }
}

uint64_t sub_1CE066D8C()
{
  return SessionClient.queryActiveSession()();
}

uint64_t sub_1CE066DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return SessionClient.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:queueIdentifier:)(a1, a2, a3, a4, a5, a6);
}

void sub_1CE066DCC()
{
  SessionClient.detachRemoteDisplay()();
}

uint64_t sub_1CE066DEC(char a1)
{
  return SessionClient.requestDistributedSessionWithParticipant(havingRole:)(a1);
}

uint64_t sub_1CE066E0C(uint64_t a1)
{
  return SessionClient.requestDistributedSessionWithParticipant(_:)(a1);
}

uint64_t sub_1CE066E2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return SessionClient.activateDistributedSession(identifier:)(a1, a2, a3);
}

uint64_t sub_1CE066E4C(uint64_t a1)
{
  return SessionClient.cancelDistributedSessionWithParticipant(_:)(a1);
}

void sub_1CE066E6C(uint64_t a1, uint64_t a2)
{
  SessionClient.sendCountdownIntent(_:token:)(a1, a2);
}

void sub_1CE066E8C(uint64_t a1, uint64_t a2)
{
  SessionClient.startCountdown(_:token:)(a1, a2);
}

uint64_t sub_1CE066EAC()
{
  return SessionClient.reportAppRequirementCompleted()();
}

uint64_t sub_1CE066ECC()
{
  return SessionClient.reportAppRequirementFailed()();
}

__n128 sub_1CE066EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  __n128 result;

  SessionClient.applySessionUpdate(token:activityRings:audioFocusPreference:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22,
    a23);
  return result;
}

_QWORD *sub_1CE066F3C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v17 = a1;
  v16 = 31;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B4604();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE06755C, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D90EF8], MEMORY[0x1E0D90F00]);
  swift_release();
  v17 = a1;
  v16 = 27;
  v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v16, (uint64_t)sub_1CE06758C, v9, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v17 = a1;
  v16 = 29;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = sub_1CE0B5E04();
  v12 = MEMORY[0x1E0D96240];
  v13 = MEMORY[0x1E0D96248];
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE067594, v10, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D96240], MEMORY[0x1E0D96248]);
  swift_release();
  v17 = a1;
  v16 = 30;
  v14 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE0675C4, v14, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, v12, v13);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE067184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for SessionClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB3408(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t sub_1CE0671F0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1CE067214()
{
  uint64_t v0;

  return sub_1CDFF48AC(*(void **)(v0 + 16));
}

uint64_t sub_1CE06722C()
{
  uint64_t v0;

  return sub_1CE06336C(v0);
}

uint64_t sub_1CE067244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B5E04();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0672B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B5E04() - 8) + 80);
  return sub_1CE063404(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1CE0672F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE00CCDC(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1CE067304(uint64_t a1, uint64_t a2)
{
  return sub_1CE067400(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1B08);
}

uint64_t sub_1CE067314()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B5E04() - 8) + 80);
  return sub_1CE063490(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1CE067350()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0673F4(uint64_t a1, uint64_t a2)
{
  return sub_1CE067400(a1, a2, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1D88);
}

uint64_t sub_1CE067400(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (_QWORD *)(v3 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, a2, v3 + v7, *v8, v8[1]);
}

uint64_t method lookup function for SessionClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1CE0B5E04();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0674F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B5E04() - 8) + 80);
  return sub_1CE06D4C0(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1CE067538()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE06755C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for SessionUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90F08], (uint64_t)&protocol witness table for SessionUpdated);
}

uint64_t sub_1CE06758C()
{
  return sub_1CE062014();
}

uint64_t sub_1CE067594(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for SessionActivated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96250], (uint64_t)&protocol witness table for SessionActivated);
}

uint64_t sub_1CE0675C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for SessionDeactivated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96250], (uint64_t)&protocol witness table for SessionDeactivated);
}

uint64_t sub_1CE0675F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 112) = v5;
  *(_BYTE *)(v6 + 168) = a4;
  *(_QWORD *)(v6 + 88) = a2;
  *(_QWORD *)(v6 + 96) = a3;
  *(_QWORD *)(v6 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_1CE06761C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *(_BYTE *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v2;
  *(_QWORD *)(v6 + 48) = v1;
  if (!__isPlatformVersionAtLeast(2, 18, 0, 0))
    return swift_task_switch();
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v7;
  sub_1CE0B41D8();
  *v7 = v0;
  v7[1] = sub_1CE06771C;
  return sub_1CE0B6C80();
}

uint64_t sub_1CE06771C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    *(_QWORD *)(v2 + 160) = v0;
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
}

uint64_t sub_1CE067790()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 104);
  v11 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(unsigned __int8 *)(v0 + 168);
  v5 = sub_1CE0B41D8();
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v6;
  *(_QWORD *)(v0 + 56) = v6;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CE0678D4;
  swift_continuation_init();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A8);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  sub_1CE0B64F4();
  sub_1CDFE4418(v9, v3, v2, v4, v1, v11);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v7);
  swift_task_dealloc();
  return swift_continuation_await();
}

uint64_t sub_1CE0678D4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(v1 + 48);
  if (v2)
  {
    swift_willThrow();
    swift_task_dealloc();
    *(_QWORD *)(v1 + 160) = v2;
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 144) + 32))(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 152), *(_QWORD *)(v1 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1CE067990()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0679C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a7;
  v43 = a3;
  v16 = a10;
  v40 = a9;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v17);
  v41 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1CDFBBC54(0x65uLL);
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v20 = sub_1CE0B6080();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED8F1058);
  v21 = sub_1CE0B6068();
  v22 = sub_1CE0B6734();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v37 = a1;
    v24 = v23;
    v25 = swift_slowAlloc();
    v38 = a10;
    v36 = v25;
    v44 = v19;
    v45 = v25;
    *(_DWORD *)v24 = 134218498;
    v39 = a4;
    sub_1CE0B68F0();
    *(_WORD *)(v24 + 12) = 2080;
    v35[1] = v24 + 14;
    v26 = sub_1CE0B6A1C();
    v44 = sub_1CDFC7270(v26, v27, &v45);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 22) = 2048;
    v44 = a6;
    a4 = v39;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v21, v22, "Converting from Async-Await to Promise: %ld:%s:%lu", (uint8_t *)v24, 0x20u);
    v28 = v36;
    swift_arrayDestroy();
    v16 = v38;
    MEMORY[0x1D17C092C](v28, -1, -1);
    v29 = v24;
    a1 = v37;
    MEMORY[0x1D17C092C](v29, -1, -1);
  }

  v30 = sub_1CE0B6560();
  v31 = (uint64_t)v41;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v41, 1, 1, v30);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = 0;
  *(_QWORD *)(v32 + 24) = 0;
  *(_QWORD *)(v32 + 32) = v42;
  *(_QWORD *)(v32 + 40) = a8;
  v33 = v43;
  *(_QWORD *)(v32 + 48) = v19;
  *(_QWORD *)(v32 + 56) = v33;
  *(_QWORD *)(v32 + 64) = a4;
  *(_BYTE *)(v32 + 72) = a5;
  *(_QWORD *)(v32 + 80) = a6;
  *(_QWORD *)(v32 + 88) = a1;
  *(_QWORD *)(v32 + 96) = a2;
  swift_retain();
  swift_retain();
  sub_1CE06A744(v31, v16, v32);
  return swift_release();
}

uint64_t sub_1CE067CA8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);
  char v15;
  __int128 v16;
  uint64_t v17;

  *(_QWORD *)(v8 + 104) = v17;
  *(_OWORD *)(v8 + 88) = v16;
  *(_BYTE *)(v8 + 168) = v15;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 64) = a6;
  *(_QWORD *)(v8 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E028);
  *(_QWORD *)(v8 + 120) = swift_task_alloc();
  v10 = sub_1CE0B41D8();
  *(_QWORD *)(v8 + 128) = v10;
  *(_QWORD *)(v8 + 136) = *(_QWORD *)(v10 - 8);
  v11 = swift_task_alloc();
  *(_QWORD *)(v8 + 144) = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 152) = v12;
  *v12 = v8;
  v12[1] = sub_1CE067D84;
  return v14(v11);
}

uint64_t sub_1CE067D84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE067DE8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v15;
  uint64_t v16;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1058);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 64);
    v15 = *(_QWORD *)(v0 + 88);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v16 = v6;
    *(_DWORD *)v5 = 134218498;
    *(_QWORD *)(v0 + 40) = v4;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v7, v8, &v16);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 56) = v15;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  v10 = *(_QWORD *)(v0 + 136);
  v9 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 128);
  v13 = *(void (**)(uint64_t))(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v12, v9, v11);
  swift_storeEnumTagMultiPayload();
  v13(v12);
  sub_1CDFB13F8(v12, &qword_1EFA5E028);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE068044()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  _QWORD *v10;
  void (*v11)(_QWORD *);
  id v12;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1058);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v14 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v15 = v6;
    *(_DWORD *)v5 = 134218498;
    *(_QWORD *)(v0 + 16) = v4;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v7, v8, &v15);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 32) = v14;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  v9 = *(void **)(v0 + 160);
  v10 = *(_QWORD **)(v0 + 120);
  v11 = *(void (**)(_QWORD *))(v0 + 96);
  *v10 = v9;
  swift_storeEnumTagMultiPayload();
  v12 = v9;
  v11(v10);

  sub_1CDFB13F8((uint64_t)v10, &qword_1EFA5E028);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE068280(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(void);
  char v12;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 104) = v14;
  *(_OWORD *)(v8 + 88) = v13;
  *(_BYTE *)(v8 + 128) = v12;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 64) = a6;
  v11 = (uint64_t (*)(void))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 112) = v9;
  *v9 = v8;
  v9[1] = sub_1CE0682F4;
  return v11();
}

uint64_t sub_1CE0682F4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE068358()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void (*v9)(uint64_t *);
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1058);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 64);
    v11 = *(_QWORD *)(v0 + 88);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 134218498;
    *(_QWORD *)(v0 + 40) = v4;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v7, v8, &v12);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 56) = v11;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  v9 = *(void (**)(uint64_t *))(v0 + 96);
  v12 = 0;
  v13 = 0;
  v9(&v12);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE068558()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void (*v10)(uint64_t *);
  id v11;
  uint64_t v13;
  uint64_t v14;
  char v15;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1058);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v13 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v14 = v6;
    *(_DWORD *)v5 = 134218498;
    *(_QWORD *)(v0 + 16) = v4;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v7, v8, &v14);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 32) = v13;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  v9 = *(void **)(v0 + 120);
  v10 = *(void (**)(uint64_t *))(v0 + 96);
  v14 = (uint64_t)v9;
  v15 = 1;
  v11 = v9;
  v10(&v14);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE068770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFE1AFC;
  return WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(a1, a2, a3);
}

uint64_t WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v7 = sub_1CE0B5810();
  v3[2] = v7;
  v3[3] = *(_QWORD *)(v7 - 8);
  v3[4] = swift_task_alloc();
  v3[5] = swift_task_alloc();
  v3[6] = swift_task_alloc();
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v8 = (_QWORD *)swift_task_alloc();
  v3[7] = v8;
  *v8 = v3;
  v8[1] = sub_1CE068894;
  return v10(a1, a2, a3);
}

uint64_t sub_1CE068894(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 64) = a1;
  swift_task_dealloc();
  if (!v1)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

void sub_1CE068930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t, uint64_t);
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = MEMORY[0x1E0DEE9D8];
  v31 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = *(_QWORD *)(v0 + 24);
    v6 = MEMORY[0x1E0DEE9D8];
    v27 = *(_QWORD *)(v1 + 16);
    v29 = *(_QWORD *)(v0 + 64);
    while (v4 < *(_QWORD *)(v1 + 16))
    {
      v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v8 = *(_QWORD *)(v5 + 72);
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v5 + 16))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64) + v7 + v8 * v4, *(_QWORD *)(v0 + 16));
      if ((sub_1CE0B5804() & 1) != 0)
      {
        (*(void (**)(_QWORD, _QWORD))(v5 + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
      }
      else
      {
        v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
        v9(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCFA94(0, *(_QWORD *)(v6 + 16) + 1, 1);
          v6 = v31;
        }
        v11 = *(_QWORD *)(v6 + 16);
        v10 = *(_QWORD *)(v6 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1CDFCFA94(v10 > 1, v11 + 1, 1);
          v6 = v31;
        }
        v12 = *(_QWORD *)(v0 + 40);
        v13 = *(_QWORD *)(v0 + 16);
        *(_QWORD *)(v6 + 16) = v11 + 1;
        v9(v6 + v7 + v11 * v8, v12, v13);
        v31 = v6;
        v3 = v27;
        v1 = v29;
      }
      if (v3 == ++v4)
      {
        v2 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    v6 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v6 + 16);
    if (v14)
    {
      v15 = *(_QWORD *)(v0 + 24);
      v32 = v2;
      sub_1CDFCF9BC(0, v14, 0);
      v16 = v6 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v28 = *(_QWORD *)(v15 + 72);
      v30 = v15;
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      v17 = v2;
      do
      {
        v18 = *(_QWORD *)(v0 + 32);
        v19 = *(_QWORD *)(v0 + 16);
        v26(v18, v16, v19);
        v20 = sub_1CE0B57F8();
        v22 = v21;
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v18, v19);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v17 + 16) + 1, 1);
          v17 = v32;
        }
        v24 = *(_QWORD *)(v17 + 16);
        v23 = *(_QWORD *)(v17 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1CDFCF9BC(v23 > 1, v24 + 1, 1);
          v17 = v32;
        }
        *(_QWORD *)(v17 + 16) = v24 + 1;
        v25 = v17 + 16 * v24;
        *(_QWORD *)(v25 + 32) = v20;
        *(_QWORD *)(v25 + 40) = v22;
        v16 += v28;
        --v14;
      }
      while (v14);
      swift_release();
    }
    else
    {
      swift_release();
      v17 = MEMORY[0x1E0DEE9D8];
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v17);
  }
}

uint64_t sub_1CE068BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE05CCD0;
  return WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(a1, a2, a3);
}

uint64_t WorkoutPlanClientProtocol.requestWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v18;

  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v10, v11);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (v9 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v12, v10, a3);
  v15 = (_QWORD *)(v14 + v13);
  *v15 = a1;
  v15[1] = a2;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Workout Plan/Client/Workou"
                          "tPlanClientProtocol.swift";
  *(_QWORD *)(v16 + 24) = 119;
  *(_BYTE *)(v16 + 32) = 2;
  *(_QWORD *)(v16 + 40) = 87;
  *(_QWORD *)(v16 + 48) = &unk_1EFA62008;
  *(_QWORD *)(v16 + 56) = v14;
  sub_1CE0B41D8();
  swift_bridgeObjectRetain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE068DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE08);
  v6[8] = v7;
  v6[9] = *(_QWORD *)(v7 - 8);
  v6[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE068E18()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, char, uint64_t);

  WorkoutPlanClientProtocol.requestWorkoutPlan(_:)(v0[4], v0[5], v0[6], v0[7]);
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, char, uint64_t))&aXt[*(int *)aXt];
  v1 = (_QWORD *)swift_task_alloc();
  v0[11] = v1;
  *v1 = v0;
  v1[1] = sub_1CE068EA4;
  return v3(v0[2], (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Workout Plan/Client/WorkoutPlanClientProtocol.swift", 119, 2, 87);
}

uint64_t sub_1CE068EA4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(*v1 + 64);
  v4 = *(_QWORD *)(*v1 + 72);
  v5 = *v1;
  *(_QWORD *)(v5 + 96) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_1CE068F44()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WorkoutPlanClientProtocol.insertCompletedWorkoutPlanSummary(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v5 = v4;
  v21[0] = a3;
  v21[1] = a4;
  v8 = sub_1CE0B54B0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  v12 = *(_QWORD *)(a2 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v16 = (v13 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v17 = swift_allocObject();
  v18 = v21[0];
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v17 + v15, v14, a2);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Workout Plan/Client/Workou"
                          "tPlanClientProtocol.swift";
  *(_QWORD *)(v19 + 24) = 119;
  *(_BYTE *)(v19 + 32) = 2;
  *(_QWORD *)(v19 + 40) = 91;
  *(_QWORD *)(v19 + 48) = &unk_1EFA62018;
  *(_QWORD *)(v19 + 56) = v17;
  return sub_1CE0B5C00();
}

uint64_t sub_1CE06911C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 232) + *(_QWORD *)(a5 + 232));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_1CDFACD3C;
  return v11(a3, a4, a5);
}

uint64_t sub_1CE06919C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE06920C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v4 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v1 + v7;
  v9 = (uint64_t *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  v10 = *v9;
  v11 = v9[1];
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1CDFACD38;
  return sub_1CE068DAC(a1, v8, v10, v11, v4, v5);
}

uint64_t sub_1CE0692B0(uint64_t a1, uint64_t a2)
{
  return sub_1CE069478(a1, a2, (uint64_t)&unk_1E8B697A8, (uint64_t)&unk_1EFA62178);
}

uint64_t sub_1CE0692C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1CE0B54B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1CE069370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v2 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B54B0() - 8) + 80);
  v8 = v0 + ((v5 + v6 + v7) & ~v7);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v9;
  *v9 = v1;
  v9[1] = sub_1CDFACD38;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 232) + *(_QWORD *)(v3 + 232));
  v10 = (_QWORD *)swift_task_alloc();
  v9[2] = v10;
  *v10 = v9;
  v10[1] = sub_1CDFACD3C;
  return v12(v8, v2, v3);
}

uint64_t sub_1CE069440()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE069464(uint64_t a1, uint64_t a2)
{
  return sub_1CE069478(a1, a2, (uint64_t)&unk_1E8B69758, (uint64_t)&unk_1EFA62158);
}

uint64_t sub_1CE069478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CE0679C4(a1, a2, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_BYTE *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.createWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a10 + 8) + *(_QWORD *)(a10 + 8));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_1CDFACD38;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.createUnsavedWorkoutPlan(modalityPreferences:name:planIdentifier:schedule:startDate:workoutPlanLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a10 + 16) + *(_QWORD *)(a10 + 16));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v10 + 16) = v18;
  *v18 = v10;
  v18[1] = sub_1CDFACD38;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.repeatWorkoutPlan(templateIdentifier:startingOn:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CDFACD38;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.validateSchedule(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.makeWorkoutPlanSchedule(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.updateWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 48) + *(_QWORD *)(a4 + 48));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.requestWorkoutPlans(state:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v8 = a2 & 1;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 64) + *(_QWORD *)(a4 + 64));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CE01E290;
  return v11(a1, v8, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryDailyNotificationSchedule(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE01E290;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryRemainingWorkouts(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 80) + *(_QWORD *)(a3 + 80));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE01E290;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryNextIncompleteWorkoutReference(after:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 88) + *(_QWORD *)(a4 + 88));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryIncompleteMatchingWorkoutReferences(plan:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 96) + *(_QWORD *)(a5 + 96));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CE01E290;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryAllWorkoutPlanTemplateReferences()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 104) + *(_QWORD *)(a2 + 104));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE01E290;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryAllWorkoutPlanTemplatesCount()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 112) + *(_QWORD *)(a2 + 112));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE01E290;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanTemplateMetadata(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 120) + *(_QWORD *)(a3 + 120));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE01E290;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanTemplates(identifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 128) + *(_QWORD *)(a3 + 128));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE01E290;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryAllWorkoutPlans(forTemplateIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 136) + *(_QWORD *)(a3 + 136));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE01E290;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.requestWorkoutPlanAlternatives(workoutIdentifier:workoutPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 144)
                                                                                     + *(_QWORD *)(a6 + 144));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1CDFACD38;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.updateWorkoutPlanAlternatives(planIdentifier:reference:workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 152)
                                                                                              + *(_QWORD *)(a7 + 152));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1CDFACD38;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.deleteAllActiveWorkoutPlans()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 160) + *(_QWORD *)(a2 + 160));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.deleteWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 168) + *(_QWORD *)(a3 + 168));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 176) + *(_QWORD *)(a3 + 176));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertWorkoutPlanTemplate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 184) + *(_QWORD *)(a3 + 184));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.deleteWorkoutPlanTemplate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 192) + *(_QWORD *)(a3 + 192));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.requestWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 200) + *(_QWORD *)(a4 + 200));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanSummary(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 208) + *(_QWORD *)(a4 + 208));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryPendingWorkoutPlanSummary()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 216) + *(_QWORD *)(a3 + 216));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanSummariesViewed()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 224) + *(_QWORD *)(a2 + 224));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE01E290;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertCompletedWorkoutPlanSummary(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 232) + *(_QWORD *)(a3 + 232));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.insertArchivedPlanSession(session:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 240) + *(_QWORD *)(a3 + 240));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.evaluateActiveWorkoutPlanCompletion()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 248) + *(_QWORD *)(a2 + 248));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryActiveWorkoutPlanItemMetrics()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 256) + *(_QWORD *)(a2 + 256));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFEA04C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryWorkoutPlanItemMetrics(planIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 264) + *(_QWORD *)(a3 + 264));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CE01E290;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.updateWorkoutPlanTemplateName(identifier:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 272)
                                                                            + *(_QWORD *)(a5 + 272));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CDFACD38;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.endWorkoutPlan(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 280) + *(_QWORD *)(a3 + 280));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.filterCatalog(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 288) + *(_QWORD *)(a4 + 288));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

void sub_1CE06A67C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD38;
  __asm { BR              X9; sub_1CE068280 }
}

uint64_t sub_1CE06A744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CE0B6560();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1CE0B6554();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CDFB13F8(a1, (uint64_t *)&unk_1ED8F1170);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CE0B64DC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1CE06A890(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CE06A8F4;
  return v6(a1);
}

uint64_t sub_1CE06A8F4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE06A940()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE06A964(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFA62160 + dword_1EFA62160))(a1, v4);
}

uint64_t objectdestroy_55Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CE06AA0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD3C;
  __asm { BR              X9; sub_1CE067CA8 }
}

uint64_t sub_1CE06AAD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFE4418(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t HealthKitStandaloneWorkoutJobAdded.healthKitStandaloneWorkoutJob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HealthKitStandaloneWorkoutJobAdded.init(healthKitStandaloneWorkoutJob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static HealthKitStandaloneWorkoutJobAdded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for HealthKitStandaloneWorkoutJobAdded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06AB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HealthKitStandaloneWorkoutJobAdded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06ABC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HealthKitStandaloneWorkoutJobAdded()
{
  uint64_t result;

  result = qword_1ED8EFE98;
  if (!qword_1ED8EFE98)
    return swift_getSingletonMetadata();
  return result;
}

void CoreAnalyticsReporter.report(_:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD aBlock[6];
  __int128 v8[2];

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1CE0B626C();
  swift_bridgeObjectRelease();
  sub_1CDFAC5C8((uint64_t)a1, (uint64_t)v8);
  v5 = swift_allocObject();
  sub_1CDFC3290(v8, v5 + 16);
  aBlock[4] = sub_1CE06AD88;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CE06ADCC;
  aBlock[3] = &block_descriptor_11;
  v6 = _Block_copy(aBlock);
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v6);

}

uint64_t sub_1CE06AD64()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CE06AD88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

id sub_1CE06ADCC(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1CE000C10();
    v4 = (void *)sub_1CE0B620C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void sub_1CE06AE40(_QWORD *a1)
{
  CoreAnalyticsReporter.report(_:)(a1);
}

uint64_t retryWithBackoff<A>(_:maximumAttempts:backoffIntervalProvider:retryCondition:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t);

  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_1CDFACD3C;
  v17[13] = a7;
  v17[14] = a8;
  v17[11] = a5;
  v17[12] = a6;
  v17[9] = a3;
  v17[10] = a4;
  v17[7] = a1;
  v17[8] = a2;
  v20 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v18 = (_QWORD *)swift_task_alloc();
  v17[15] = v18;
  *v18 = v17;
  v18[1] = sub_1CE06AF90;
  return v20(a1);
}

uint64_t sub_1CE06AF1C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t);

  v8[13] = a7;
  v8[14] = a8;
  v8[11] = a5;
  v8[12] = a6;
  v8[9] = a3;
  v8[10] = a4;
  v8[7] = a1;
  v8[8] = a2;
  v12 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v10 = (_QWORD *)swift_task_alloc();
  v8[15] = v10;
  *v10 = v8;
  v10[1] = sub_1CE06AF90;
  return v12(a1);
}

uint64_t sub_1CE06AF90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

void sub_1CE06AFFC()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  _QWORD *v6;

  v1 = *(uint64_t (**)(_QWORD))(v0 + 96);
  if (!v1)
  {
    if (*(uint64_t *)(v0 + 80) >= 2)
      goto LABEL_4;
LABEL_9:
    swift_willThrow();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v2 = *(_QWORD *)(v0 + 80);
  if ((v1(*(_QWORD *)(v0 + 128)) & 1) == 0 || v2 <= 1)
    goto LABEL_9;
LABEL_4:
  sub_1CDFAC5C8(*(_QWORD *)(v0 + 88), v0 + 16);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v3);
  v5 = (*(double (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) * 1000000000.0;
  if ((~*(_QWORD *)&v5 & 0x7FF0000000000000) != 0)
  {
    if (v5 > -1.0)
    {
      if (v5 < 1.84467441e19)
      {
        v6 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 136) = v6;
        *v6 = v0;
        v6[1] = sub_1CE06B124;
        sub_1CE0B65D8();
        return;
      }
      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

uint64_t sub_1CE06B124()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  v3 = (_QWORD *)*v1;
  v2 = v3;
  v3[18] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v5 = v3[10] - 1;
  v6 = swift_task_alloc();
  v3[19] = v6;
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = sub_1CE06B228;
  v7 = (int *)v3[8];
  v8 = v3[9];
  v9 = v3[7];
  v10 = *((_OWORD *)v2 + 6);
  *(_QWORD *)(v6 + 112) = v2[14];
  *(_OWORD *)(v6 + 96) = v10;
  *(_QWORD *)(v6 + 80) = v5;
  *(_QWORD *)(v6 + 88) = v2 + 2;
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = v8;
  *(_QWORD *)(v6 + 56) = v9;
  v12 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 120) = v11;
  *v11 = v6;
  v11[1] = sub_1CE06AF90;
  return v12(v9);
}

uint64_t sub_1CE06B228()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 160) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE06B28C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE06B2CC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE06B30C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE06B34C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[6];
  __int128 v51[3];

  v42 = a7;
  v43 = a8;
  v37 = a5;
  v38 = a3;
  v41 = a2;
  v39 = a1;
  v36 = a9;
  v45 = sub_1CE0B6140();
  v48 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B6158();
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  MEMORY[0x1E0C80A78](v12);
  v40 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B5C6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v36 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v36 - v17, a4, v14);
  sub_1CDFAC5C8(a6, (uint64_t)v51);
  v19 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v20 = (v16 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = (v21 + 47) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v36;
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v24 + v19, v18, v14);
  *(_QWORD *)(v24 + v20) = v37;
  sub_1CDFC3290(v51, v24 + v21);
  v25 = v38;
  *(_QWORD *)(v24 + v22) = v38;
  v26 = (uint64_t *)(v24 + v23);
  v28 = v42;
  v27 = v43;
  *v26 = v42;
  v26[1] = v27;
  v29 = (_QWORD *)(v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8));
  v30 = v41;
  *v29 = v39;
  v29[1] = v30;
  aBlock[4] = sub_1CE06B940;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_12;
  v31 = _Block_copy(aBlock);
  v25;
  sub_1CDFB6BE4(v28);
  swift_retain();
  v32 = v40;
  sub_1CE0B614C();
  v49 = MEMORY[0x1E0DEE9D8];
  sub_1CDFC1B50();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
  sub_1CDFC20A8();
  v34 = v44;
  v33 = v45;
  sub_1CE0B6944();
  MEMORY[0x1D17BFB04](0, v32, v34, v31);
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v47);
  return swift_release();
}

uint64_t sub_1CE06B650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1CE0B5C6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v4);
  if (*(_QWORD *)(v0 + ((v4 + 47) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE06B700(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(sub_1CE0B5C6C() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CE06B34C(a1, a2, *(void **)(v2 + 24), v2 + v7, *(_QWORD *)(v2 + v8), v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8), *(_QWORD *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 8), v5);
}

uint64_t sub_1CE06B798(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD v18[2];

  v18[1] = a8;
  v13 = sub_1CE0B5C6C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v18 - v15;
  sub_1CDFCC4BC(a2, a3, a4, a5, a6, v13, (uint64_t)v18 - v15);
  sub_1CE0B5C48();
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_1CE06B878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = sub_1CE0B5C6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v4);

  if (*(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE06B940()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_1CE0B5C6C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 47) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CE06B798(v0 + v2, *(_QWORD *)(v0 + v3), v0 + v4, *(void **)(v0 + v5), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1CE06B9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  __int128 v29[2];

  v27 = a3;
  v28 = a8;
  v25 = a4;
  v26 = a1;
  v14 = sub_1CE0B5C6C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - v16;
  sub_1CDFAC5C8(a7, (uint64_t)v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 112) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v25;
  *((_QWORD *)v19 + 2) = a9;
  *((_QWORD *)v19 + 3) = v20;
  *((_QWORD *)v19 + 4) = a5;
  *((_QWORD *)v19 + 5) = a6;
  *((_QWORD *)v19 + 6) = v26;
  *((_QWORD *)v19 + 7) = a2;
  sub_1CDFC3290(v29, (uint64_t)(v19 + 64));
  v21 = v28;
  *((_QWORD *)v19 + 13) = v28;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v17, v14);
  sub_1CDFB6BE4(a5);
  swift_retain();
  v22 = v21;
  sub_1CE0B5C48();
  return swift_release();
}

uint64_t sub_1CE06BB2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = sub_1CE0B5C6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 47) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + v5);

  return swift_deallocObject();
}

uint64_t sub_1CE06BBD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(sub_1CE0B5C6C() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CE06B9D8(a1, a2, v2 + v7, *(_QWORD *)(v2 + v8), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8), *(void **)(v2+ ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFF8)), v5);
}

uint64_t sub_1CE06BC78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *), uint64_t (*a4)(void *), uint64_t (*a5)(_QWORD), uint64_t a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t (**v41)(void *);
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t (*v44)(void *);
  _QWORD *v45;
  uint64_t v46;
  void *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  id v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void *);
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t (*v70)(void *);
  uint64_t (*v71)(_QWORD);
  uint64_t v72;
  uint64_t v73;
  _QWORD aBlock[7];

  v59 = a8;
  v57 = a7;
  v71 = a5;
  v72 = a6;
  v66 = a4;
  v70 = a3;
  v12 = sub_1CE0B6140();
  v64 = *(_QWORD *)(v12 - 8);
  v65 = v12;
  MEMORY[0x1E0C80A78](v12);
  v63 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B6158();
  v61 = *(_QWORD *)(v14 - 8);
  v62 = v14;
  MEMORY[0x1E0C80A78](v14);
  v60 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_1CE0B5C6C();
  v16 = *(_QWORD *)(v58 - 8);
  v17 = *(_QWORD *)(v16 + 64);
  MEMORY[0x1E0C80A78](v58);
  v67 = (char *)&v53 - v18;
  v69 = sub_1CE0B6170();
  v19 = *(_QWORD *)(v69 - 8);
  v20 = MEMORY[0x1E0C80A78](v69);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v68 = (char *)&v53 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v24 = sub_1CE0B6DA0();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (void **)((char *)&v53 - v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))((char *)&v53 - v26, a1, v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = *v27;
    if (a2 >= 2 && (!v70 || (v70(v28) & 1) != 0))
    {
      v54 = a9;
      v29 = swift_allocObject();
      v30 = v29 + 16;
      sub_1CDFAC5C8((uint64_t)v57, v29 + 16);
      sub_1CE0B6164();
      v55 = a2;
      v57 = v28;
      v53 = v29;
      v32 = *(_QWORD *)(v29 + 40);
      v31 = *(_QWORD *)(v29 + 48);
      __swift_mutable_project_boxed_opaque_existential_1(v30, v32);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v31);
      MEMORY[0x1D17BF4F8](v22);
      v56 = *(void (**)(char *, uint64_t))(v19 + 8);
      v56(v22, v69);
      v33 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v67, v54, v58);
      v34 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v35 = (v17 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
      v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF8;
      v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
      v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
      v39 = swift_allocObject();
      *(_QWORD *)(v39 + 16) = a10;
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v39 + v34, v67, v33);
      *(_QWORD *)(v39 + v35) = v55;
      *(_QWORD *)(v39 + v36) = v53;
      v40 = v59;
      *(_QWORD *)(v39 + v37) = v59;
      v41 = (uint64_t (**)(void *))(v39 + v38);
      v43 = (uint64_t)v70;
      v42 = v71;
      v44 = v66;
      *v41 = v70;
      v41[1] = v44;
      v45 = (_QWORD *)(v39 + ((v38 + 23) & 0xFFFFFFFFFFFFFFF8));
      v46 = v72;
      *v45 = v42;
      v45[1] = v46;
      aBlock[4] = sub_1CE06C474;
      aBlock[5] = v39;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1CDFB33D0;
      aBlock[3] = &block_descriptor_20;
      v47 = _Block_copy(aBlock);
      swift_retain();
      v40;
      sub_1CDFB6BE4(v43);
      swift_retain();
      v48 = v60;
      sub_1CE0B614C();
      v73 = MEMORY[0x1E0DEE9D8];
      sub_1CDFC1B50();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
      sub_1CDFC20A8();
      v49 = v63;
      v50 = v65;
      sub_1CE0B6944();
      v51 = v68;
      MEMORY[0x1D17BFAE0](v68, v48, v49, v47);
      _Block_release(v47);

      (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v50);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v48, v62);
      v56(v51, v69);
      swift_release();
      return swift_release();
    }

  }
  else
  {
    (*(void (**)(void **, uint64_t))(v25 + 8))(v27, v24);
  }
  return v71(a1);
}

uint64_t sub_1CE06C160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1CE0B5C6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 112) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_1CE06C200(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B5C6C() - 8) + 80);
  return sub_1CE06BC78(a1, *(_QWORD *)(v1 + 24), *(uint64_t (**)(void *))(v1 + 32), *(uint64_t (**)(void *))(v1 + 40), *(uint64_t (**)(_QWORD))(v1 + 48), *(_QWORD *)(v1 + 56), (void *)(v1 + 64), *(void **)(v1 + 104), v1 + ((v4 + 112) & ~v4), v3);
}

uint64_t sub_1CE06C270()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CE06C294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  BOOL v18;
  uint64_t v19;
  _QWORD v20[2];
  _BYTE v21[40];

  v20[1] = a8;
  v13 = sub_1CE0B5C6C();
  v14 = *(_QWORD *)(v13 - 8);
  result = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v20 - v16;
  v18 = __OFSUB__(a2, 1);
  v19 = a2 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    sub_1CDFAC5C8(a3 + 16, (uint64_t)v21);
    sub_1CDFCC4BC(v19, v21, a4, a5, a6, v13);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v21);
    sub_1CE0B5C48();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  return result;
}

uint64_t sub_1CE06C3AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1CE0B5C6C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  if (*(_QWORD *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE06C474()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(sub_1CE0B5C6C() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CE06C294(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v4), *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t RemoteParticipantDiscovered.init(participant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t RemoteParticipantDiscovered.participant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static RemoteParticipantDiscovered.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantDiscovered()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06C5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantDiscovered()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06C5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void Network.interfaceType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *Network.interfaceType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*Network.interfaceType.modify())()
{
  return nullsub_1;
}

uint64_t Network.isConstrained.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t Network.isConstrained.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*Network.isConstrained.modify())()
{
  return nullsub_1;
}

uint64_t Network.isExpensive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t Network.isExpensive.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*Network.isExpensive.modify())()
{
  return nullsub_1;
}

void Network.status.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *Network.status.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*Network.status.modify())()
{
  return nullsub_1;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Network(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 1);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Network(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 1;
  }
  return result;
}

uint64_t sub_1CE06C75C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t DispatchTimerProvider.makeRepeatingTimer(fireAfter:fireInterval:leewayInterval:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t ObjectType;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  char *v32;
  _QWORD v34[2];
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[7];

  v37 = a3;
  v38 = a4;
  v34[1] = a2;
  v35 = a1;
  v8 = sub_1CE0B6140();
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x1E0C80A78](v8);
  v39 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B6158();
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  MEMORY[0x1E0C80A78](v10);
  v36 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B6170();
  v34[0] = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v34 - v16;
  v18 = sub_1CE0B67AC();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  v20 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFB7190();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1CDFB1900((unint64_t *)&qword_1ED8F0CC0, v19, MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F0CA0);
  sub_1CDFB7C5C((unint64_t *)&qword_1ED8F0CB0, (uint64_t *)&unk_1ED8F0CA0);
  sub_1CE0B6944();
  v23 = sub_1CE0B67B8();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v18);
  ObjectType = swift_getObjectType();
  sub_1CE0B6164();
  MEMORY[0x1D17BF4F8](v15, a5);
  v25 = *(void (**)(char *, uint64_t))(v34[0] + 8);
  v25(v15, v12);
  MEMORY[0x1D17BFBAC](v17, v35, ObjectType, a6);
  v25(v17, v12);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = (_QWORD *)swift_allocObject();
  v29 = v37;
  v28 = v38;
  v27[2] = v26;
  v27[3] = v29;
  v27[4] = v28;
  aBlock[4] = sub_1CE06CB74;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_10;
  v30 = _Block_copy(aBlock);
  swift_retain();
  sub_1CDFB6BE4(v29);
  v31 = v36;
  sub_1CE0B614C();
  v32 = v39;
  sub_1CDFB70E4();
  sub_1CE0B67D0();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v41);
  swift_release();
  swift_release();
  sub_1CE0B67E8();
  return v23;
}

uint64_t sub_1CE06CAF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1D17C09E0](v3);
  if (!result || (swift_getObjectType(), v5 = sub_1CE0B67C4(), result = swift_unknownObjectRelease(), (v5 & 1) == 0))
  {
    if (a2)
      return a2();
  }
  return result;
}

uint64_t sub_1CE06CB74()
{
  uint64_t v0;

  return sub_1CE06CAF4(*(_QWORD *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24));
}

id DispatchTimerProvider.makeScheduledTimer(fireInterval:leewayInterval:queue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v16;
  void *v17;

  v17 = a2;
  v7 = sub_1CE0B6134();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v11 = type metadata accessor for DispatchTimer();
  v12 = swift_allocObject();
  v13 = (_QWORD *)(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_onFire);
  *v13 = 0;
  v13[1] = 0;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_sourceTimer) = 0;
  *(double *)(v12 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_leewayInterval, v10, v7);
  v14 = v17;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC13SeymourClient13DispatchTimer_queue) = v17;
  a3[3] = v11;
  a3[4] = (uint64_t)&protocol witness table for DispatchTimer;
  *a3 = v12;
  return v14;
}

uint64_t DispatchTimerProvider.cancelTimer(_:)()
{
  swift_getObjectType();
  return sub_1CE0B67DC();
}

uint64_t sub_1CE06CCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  return DispatchTimerProvider.makeRepeatingTimer(fireAfter:fireInterval:leewayInterval:queue:handler:)(a1, a2, a3, a4, a5, a6);
}

id sub_1CE06CCE4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>, double a4@<D0>)
{
  return DispatchTimerProvider.makeScheduledTimer(fireInterval:leewayInterval:queue:)(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DispatchTimerProviding.makeRepeatingTimer(fireAfter:fireInterval:leewayInterval:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of DispatchTimerProviding.makeScheduledTimer(fireInterval:leewayInterval:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1CE06CD14(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1CE06CD4C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  char v3;
  char v4;
  char v5;
  char v6;
  _QWORD v8[5];
  _QWORD v9[3];
  uint64_t v10;
  char v11;

  sub_1CDFAC5C8(a1, (uint64_t)v9);
  sub_1CDFAC5C8((uint64_t)v9, (uint64_t)v8);
  sub_1CDFC2E00(v8, &v11);
  v3 = v11;
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v4 = sub_1CE0B60F8();
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v5 = sub_1CE0B60EC();
  sub_1CDFAC5C8((uint64_t)v9, (uint64_t)v8);
  sub_1CDFC2F6C(v8, &v11);
  v6 = v11;
  *a2 = v3;
  a2[1] = v4 & 1;
  a2[2] = v5 & 1;
  a2[3] = v6;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v9);
}

uint64_t sub_1CE06CE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v19 = a3;
  v5 = sub_1CE0B6140();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v18 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B6158();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1CE001C90;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1CE06D584;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_16;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1CE0B614C();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
  sub_1CDFB7C5C((unint64_t *)&qword_1ED8F1590, (uint64_t *)&unk_1ED8F1580);
  sub_1CE0B6944();
  sub_1CE0B6758();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

void sub_1CE06D030(void (*a1)(void *, _QWORD))
{
  void *v2;
  unsigned __int8 v3;

  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  sub_1CE0B6D94();
  a1(v2, v3);
  sub_1CDFC2DF4(v2, v3);
}

uint64_t sub_1CE06D09C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CE06D0F0();
    return swift_release();
  }
  return result;
}

void sub_1CE06D0F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  NSObject *v7;
  _BYTE v8[24];
  _OWORD v9[3];
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;
  char v13;
  NSObject *v14;
  char v15;

  v1 = sub_1CE0B617C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(void **)(v0 + 96);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1CE0B6194();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    swift_beginAccess();
    sub_1CDFC36F4(v0 + 32, (uint64_t)&v14);
    if (v15)
    {
      if (v15 == 1)
      {
        v7 = v14;
        swift_unknownObjectRelease();
        v11 = sub_1CE0B6128();
        v12 = &off_1E8B6ADB0;
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
        sub_1CE0B60A4();
        v13 = 0;
        sub_1CDFB75EC(&v10, v9);
        swift_beginAccess();
        sub_1CDFB74F8((uint64_t)v9, v0 + 32);
        swift_endAccess();
        dispatch_group_leave(v7);

      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v14);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t assignWithCopy for ReachabilityObserver.State(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  id v8;
  __int128 v9;
  __int128 v10;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

      swift_unknownObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *(void **)a2;
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_BYTE *)(a1 + 40) = 1;
      v8 = v7;
      swift_unknownObjectRetain();
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ReachabilityObserver.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReachabilityObserver.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CE06D3E0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1CE06D3FC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ReachabilityObserver.State()
{
  return &type metadata for ReachabilityObserver.State;
}

uint64_t sub_1CE06D434()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE06D458()
{
  return sub_1CE06D09C();
}

unint64_t sub_1CE06D460()
{
  unint64_t result;

  result = qword_1EFA62328;
  if (!qword_1EFA62328)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C3744, &type metadata for ReachabilityObserverError);
    atomic_store(result, (unint64_t *)&qword_1EFA62328);
  }
  return result;
}

uint64_t sub_1CE06D4A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CE06D4DC(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93B68], a2);
}

uint64_t sub_1CE06D4C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CE06D4DC(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96250], a2);
}

uint64_t sub_1CE06D4DC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, a1, v5);
}

uint64_t sub_1CE06D52C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE06D558(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CE06CE18(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1CE06D560()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CE06D584()
{
  uint64_t v0;

  sub_1CE06D030(*(void (**)(void *, _QWORD))(v0 + 16));
}

uint64_t sub_1CE06D58C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CE06D5B0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CE06D5D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CDFAC5C8(v1 + 16, a1);
}

uint64_t sub_1CE06D600()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CE06D60C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1CC4);
}

uint64_t sub_1CE06D620(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE09EC88(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE06D628()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EFA62340);
}

uint64_t sub_1CE06D634(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, (uint64_t *)&unk_1EFA62340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1CA8);
}

id sub_1CE06D648()
{
  return sub_1CE067214();
}

uint64_t Trainer.reference()()
{
  sub_1CE0B5E58();
  sub_1CE0B5E10();
  sub_1CE0B5E28();
  sub_1CE0B5E4C();
  return sub_1CE0B4C34();
}

uint64_t WorkoutDeviceConnection.applyingTimestampOffset(_:)()
{
  sub_1CE0B53A8();
  return sub_1CE0B53B4();
}

uint64_t sub_1CE06D75C()
{
  sub_1CE0B53A8();
  return sub_1CE0B53B4();
}

uint64_t RemoteBrowsingIdentityUpdated.init(identity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CE06D7D8(a1, a2);
}

uint64_t sub_1CE06D7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B51E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RemoteBrowsingIdentityUpdated.identity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CE06D828(v1, a1);
}

uint64_t sub_1CE06D828(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B51E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static RemoteBrowsingIdentityUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteBrowsingIdentityUpdated(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v4 = *(_QWORD *)(sub_1CE0B51E0() - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v9 = sub_1CE0B4D48();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      v10 = *(int *)(v6 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1CE0B5690();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  return a1;
}

uint64_t destroy for RemoteBrowsingIdentityUpdated(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1CE0B4D48();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
    v5 = a1 + *(int *)(v2 + 48);
    v6 = sub_1CE0B5690();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

char *initializeWithCopy for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_1CE0B51E0();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = sub_1CE0B4D48();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(v4 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1CE0B5690();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithCopy for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v16 = sub_1CE0B4D48();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(a1, a2, v16);
      v17 = *(int *)(v4 + 48);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_1CE0B5690();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
      return a1;
    }
    sub_1CE06DC54((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v14 = sub_1CE0B51E0();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  v9 = sub_1CE0B4D48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  v10 = *(int *)(v4 + 48);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1CE0B5690();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1CE06DC54(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *initializeWithTake for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
  {
    v6 = sub_1CE0B51E0();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = sub_1CE0B4D48();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    v8 = *(int *)(v4 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1CE0B5690();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *assignWithTake for RemoteBrowsingIdentityUpdated(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, uint64_t);
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61338);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (!v8)
    {
      v16 = sub_1CE0B4D48();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(a1, a2, v16);
      v17 = *(int *)(v4 + 48);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_1CE0B5690();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
      return a1;
    }
    sub_1CE06DC54((uint64_t)a1);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v14 = sub_1CE0B51E0();
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  v9 = sub_1CE0B4D48();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  v10 = *(int *)(v4 + 48);
  v11 = &a1[v10];
  v12 = &a2[v10];
  v13 = sub_1CE0B5690();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingIdentityUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06DEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B51E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingIdentityUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B51E0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteBrowsingIdentityUpdated()
{
  uint64_t result;

  result = qword_1EFA623A8;
  if (!qword_1EFA623A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE06DFA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B51E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CacheResult.map<A>(transform:)@<X0>(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v14 + 16))(v13, v15);
  v16 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    a1(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v16 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v16, 1, a3);
}

uint64_t sub_1CE06E134()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CE06E13C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1CE06E194(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1CE06E26C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_1CE06E2C8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1CE06E360(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_1CE06E440(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1CE06E4D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_1CE06E5B8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1CE06E6F8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_1CE06E8A0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1CE06E8A8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1CE06E8CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_1CE06E8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t type metadata accessor for CacheResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CacheResult);
}

uint64_t Error.isContainerSanitized(object:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  __int128 v20;
  char v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedTypeWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *boxed_opaque_existential_1;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;

  sub_1CDFC74F8(a1, (uint64_t)&v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1050);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v7 = 0;
    v8 = v37;
    v9 = *(_QWORD *)(v37 + 64);
    v36 = v37 + 64;
    v10 = 1 << *(_BYTE *)(v37 + 32);
    v11 = -1;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    v12 = v11 & v9;
    v13 = (unint64_t)(v10 + 63) >> 6;
    v35 = v13 - 1;
    while (!v12)
    {
      v16 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        goto LABEL_43;
      }
      if (v16 < v13)
      {
        v17 = *(_QWORD *)(v36 + 8 * v16);
        if (v17)
          goto LABEL_11;
        v18 = v7 + 2;
        ++v7;
        if (v16 + 1 < v13)
        {
          v17 = *(_QWORD *)(v36 + 8 * v18);
          if (v17)
            goto LABEL_14;
          v7 = v16 + 1;
          if (v16 + 2 < v13)
          {
            v17 = *(_QWORD *)(v36 + 8 * (v16 + 2));
            if (v17)
            {
              v16 += 2;
              goto LABEL_11;
            }
            v18 = v16 + 3;
            v7 = v16 + 2;
            if (v16 + 3 < v13)
            {
              v17 = *(_QWORD *)(v36 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  v16 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    break;
                  if (v16 >= v13)
                  {
                    v7 = v35;
                    goto LABEL_25;
                  }
                  v17 = *(_QWORD *)(v36 + 8 * v16);
                  ++v18;
                  if (v17)
                    goto LABEL_11;
                }
LABEL_43:
                __break(1u);
                return result;
              }
LABEL_14:
              v16 = v18;
LABEL_11:
              v12 = (v17 - 1) & v17;
              v15 = __clz(__rbit64(v17)) + (v16 << 6);
              v7 = v16;
LABEL_7:
              sub_1CDFB92E8(*(_QWORD *)(v8 + 48) + 40 * v15, (uint64_t)&v37);
              sub_1CDFC74F8(*(_QWORD *)(v8 + 56) + 32 * v15, (uint64_t)v39 + 8);
              goto LABEL_26;
            }
          }
        }
      }
LABEL_25:
      v12 = 0;
      v40 = 0;
      memset(v39, 0, sizeof(v39));
      v38 = 0u;
      v37 = 0u;
LABEL_26:
      sub_1CDFBA448((uint64_t)&v37, (uint64_t)&v41, qword_1EFA62470);
      if (!*((_QWORD *)&v42 + 1))
      {
        swift_release();
        return 1;
      }
      sub_1CDFB96B0(&v44, &v37);
      v48 = MEMORY[0x1E0DEC198];
      v19 = swift_allocObject();
      *(_QWORD *)&v47 = v19;
      v20 = v42;
      *(_OWORD *)(v19 + 16) = v41;
      *(_OWORD *)(v19 + 32) = v20;
      *(_QWORD *)(v19 + 48) = v43;
      v21 = Error.isValidElement(_:)((uint64_t)&v47, a2, a3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v47);
      if ((v21 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
LABEL_38:
        swift_release();
        return 0;
      }
      v22 = Error.isValidElement(_:)((uint64_t)&v37, a2, a3);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
      if ((v22 & 1) == 0)
        goto LABEL_38;
    }
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v7 << 6);
    goto LABEL_7;
  }
  sub_1CDFC74F8(a1, (uint64_t)&v47);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C00);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1CDFC3290(&v37, (uint64_t)&v41);
    v23 = __swift_project_boxed_opaque_existential_1(&v41, *((uint64_t *)&v42 + 1));
    MEMORY[0x1E0C80A78](v23);
    (*(void (**)(char *))(v25 + 16))((char *)&v34 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
    *((_QWORD *)&v38 + 1) = swift_getAssociatedTypeWitness();
    *(_QWORD *)&v39[0] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
    sub_1CE0B6380();
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v37, *((uint64_t *)&v38 + 1));
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v27 = sub_1CE0B68A8();
      v28 = *(_QWORD *)(v27 - 8);
      MEMORY[0x1E0C80A78](v27);
      v30 = (char *)&v34 - v29;
      sub_1CE0B68E4();
      v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, AssociatedTypeWitness) == 1)
        break;
      v46 = AssociatedTypeWitness;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v45);
      (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 32))(boxed_opaque_existential_1, v30, AssociatedTypeWitness);
      sub_1CDFB96B0(&v45, &v47);
      v33 = Error.isValidElement(_:)((uint64_t)&v47, a2, a3);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v47);
      if ((v33 & 1) == 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
        return 0;
      }
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v41);
  }
  else
  {
    *(_QWORD *)&v39[0] = 0;
    v38 = 0u;
    v37 = 0u;
    sub_1CE06F190((uint64_t)&v37);
  }
  return 1;
}

uint64_t Error.isValidElement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  char v11;
  char v12;
  char v13;
  _BYTE v16[40];
  _BYTE v17[32];

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1CDFC74F8(v8, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C00);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v3, a2);
    sub_1CDFC74F8(a1, (uint64_t)v16);
    v11 = Error.isContainerSanitized(object:)(v16, a2, a3);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a2);
    if ((v11 & 1) == 0)
      goto LABEL_8;
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, v3, a2);
    sub_1CDFC74F8(a1, (uint64_t)v16);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, a2);
  }
  sub_1CDFC74F8(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
  if (!swift_dynamicCast())
  {
    sub_1CDFC74F8(a1, (uint64_t)v17);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
LABEL_8:
    v13 = 0;
    return v13 & 1;
  }
  swift_unknownObjectRelease();
  sub_1CDFC74F8(a1, (uint64_t)v17);
  v12 = sub_1CE06F040((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  v13 = v12 ^ 1;
  return v13 & 1;
}

uint64_t sub_1CE06F040(uint64_t a1)
{
  int v2;
  __int128 v4;
  _OWORD v5[2];

  sub_1CDFC74F8(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62460);
  v2 = swift_dynamicCast();
  sub_1CDFC74F8(a1, (uint64_t)v5);
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
    return 1;
  }
  else
  {
    sub_1CDFB96B0(v5, &v4);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C10);
    return swift_dynamicCast();
  }
}

uint64_t _ss5ErrorP13SeymourClientE17isObjectSanitized6objectSbyp_tF_0(uint64_t a1)
{
  char v2;
  _BYTE v4[32];

  sub_1CDFC74F8(a1, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
  if (swift_dynamicCast())
  {
    swift_unknownObjectRelease();
    sub_1CDFC74F8(a1, (uint64_t)v4);
    v2 = sub_1CE06F040((uint64_t)v4) ^ 1;
  }
  else
  {
    sub_1CDFC74F8(a1, (uint64_t)v4);
    v2 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  return v2 & 1;
}

uint64_t sub_1CE06F190(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64C20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CE06F1D0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t MindfulMinutesMetricUpdated.init(mindfulMinutesMetric:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t MindfulMinutesMetricUpdated.mindfulMinutesMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5078();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static MindfulMinutesMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MindfulMinutesMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5078();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MindfulMinutesMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MindfulMinutesMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06F404(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MindfulMinutesMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE06F44C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5078();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MindfulMinutesMetricUpdated()
{
  uint64_t result;

  result = qword_1ED8F0A10;
  if (!qword_1ED8F0A10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE06F4C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5078();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static CatalogMetadataUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for CatalogMetadataUpdated()
{
  return &type metadata for CatalogMetadataUpdated;
}

uint64_t Countdown.applyingTimestampOffset(_:)()
{
  sub_1CE0B5F90();
  return sub_1CE0B5F9C();
}

uint64_t sub_1CE06F5A0()
{
  sub_1CE0B5F90();
  return sub_1CE0B5F9C();
}

uint64_t DistanceMetric.applyingTimestampOffset(_:)()
{
  sub_1CE0B4838();
  return sub_1CE0B4844();
}

uint64_t sub_1CE06F630()
{
  sub_1CE0B4838();
  return sub_1CE0B4844();
}

SeymourClient::NetworkInterfaceAvailability_optional __swiftcall NetworkInterfaceAvailability.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SeymourClient::NetworkInterfaceAvailability_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CE0B6BC0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t NetworkInterfaceAvailability.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C696176616E75;
  else
    return 0x6C62616C69617661;
}

uint64_t sub_1CE06F71C(char *a1, char *a2)
{
  return sub_1CE00C644(*a1, *a2);
}

uint64_t sub_1CE06F728()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE06F7B4()
{
  sub_1CE0B62CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE06F81C()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

SeymourClient::NetworkInterfaceAvailability_optional sub_1CE06F8A4(Swift::String *a1)
{
  return NetworkInterfaceAvailability.init(rawValue:)(*a1);
}

void sub_1CE06F8B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6C62616C69617661;
  if (*v1)
    v2 = 0x616C696176616E75;
  v3 = 0xE900000000000065;
  if (*v1)
    v3 = 0xEB00000000656C62;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t NetworkInterfaceAvailability.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C696176616E75;
  else
    return 0x6C62616C69617661;
}

unint64_t sub_1CE06F948()
{
  unint64_t result;

  result = qword_1EFA624A8;
  if (!qword_1EFA624A8)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for NetworkInterfaceAvailability, &type metadata for NetworkInterfaceAvailability);
    atomic_store(result, &qword_1EFA624A8);
  }
  return result;
}

uint64_t sub_1CE06F98C()
{
  _BYTE *v0;

  if (*v0)
    return 0x616C696176616E75;
  else
    return 0x6C62616C69617661;
}

uint64_t storeEnumTagSinglePayload for NetworkInterfaceAvailability(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE06FA20 + 4 * byte_1CE0C3275[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE06FA54 + 4 * byte_1CE0C3270[v4]))();
}

uint64_t sub_1CE06FA54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE06FA5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE06FA64);
  return result;
}

uint64_t sub_1CE06FA70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE06FA78);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE06FA7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE06FA84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t DebounceDelay.__allocating_init(delay:max:callback:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v10 + 152) = 0;
  *(_QWORD *)(v10 + 160) = 0;
  *(double *)(v10 + 112) = a5;
  *(_QWORD *)(v10 + 120) = a1;
  *(_BYTE *)(v10 + 128) = a2 & 1;
  *(_QWORD *)(v10 + 136) = a3;
  *(_QWORD *)(v10 + 144) = a4;
  return v10;
}

uint64_t DebounceDelay.init(delay:max:callback:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;

  swift_defaultActor_initialize();
  *(_QWORD *)(v5 + 152) = 0;
  *(_QWORD *)(v5 + 160) = 0;
  *(double *)(v5 + 112) = a5;
  *(_QWORD *)(v5 + 120) = a1;
  *(_BYTE *)(v5 + 128) = a2 & 1;
  *(_QWORD *)(v5 + 136) = a3;
  *(_QWORD *)(v5 + 144) = a4;
  return v5;
}

uint64_t sub_1CE06FB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CE0B6560();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1CDFBBC14((uint64_t)v4);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1CE0B6554();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1CE0B64DC();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EFA624B8;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1CE06FD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1CE06FD54()
{
  uint64_t v0;

  sub_1CE06FDE8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE06FD88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD3C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE06FDE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(v0 + 152) && (*(_BYTE *)(v0 + 128) & 1) == 0)
  {
    v4 = *(_QWORD *)(v0 + 120);
    v5 = sub_1CE0B6560();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
    v6 = sub_1CE0703EC();
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = v0;
    v7[3] = v6;
    v7[4] = v4;
    v7[5] = v0;
    swift_retain_n();
    *(_QWORD *)(v0 + 152) = sub_1CE03AF58((uint64_t)v3, (uint64_t)&unk_1EFA624E8, (uint64_t)v7);
    swift_release();
  }
  if (*(_QWORD *)(v0 + 160))
  {
    swift_retain();
    sub_1CE0B65B4();
    swift_release();
  }
  v8 = *(_QWORD *)(v0 + 112);
  v9 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v3, 1, 1, v9);
  v10 = sub_1CE0703EC();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v0;
  v11[3] = v10;
  v11[4] = v8;
  v11[5] = v0;
  swift_retain_n();
  *(_QWORD *)(v0 + 160) = sub_1CE03AF58((uint64_t)v3, (uint64_t)&unk_1EFA624E0, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1CE06FF9C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 24) = a5;
  *(double *)(v5 + 16) = a1;
  return swift_task_switch();
}

void sub_1CE06FFB8()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 32) = v2;
    *v2 = v0;
    v2[1] = sub_1CE070054;
    sub_1CE0B65D8();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1CE070054()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0700B8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_1CE0B65CC();
  if (v1)

  else
    sub_1CE070138();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE070108()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE070138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = sub_1CE0703EC();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v0;
  v6[3] = v5;
  v6[4] = v0;
  swift_retain_n();
  sub_1CE03AF58((uint64_t)v3, (uint64_t)&unk_1EFA624D0, (uint64_t)v6);
  swift_release();
  if (*(_QWORD *)(v0 + 152))
  {
    swift_retain();
    sub_1CE0B65B4();
    swift_release();
  }
  *(_QWORD *)(v0 + 152) = 0;
  swift_release();
  if (*(_QWORD *)(v0 + 160))
  {
    swift_retain();
    sub_1CE0B65B4();
    swift_release();
  }
  *(_QWORD *)(v0 + 160) = 0;
  return swift_release();
}

uint64_t sub_1CE070294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1CE0702AC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v3 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)(v0 + 16) + 136) + *(_QWORD *)(*(_QWORD *)(v0 + 16) + 136));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFD4708;
  return v3();
}

uint64_t DebounceDelay.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DebounceDelay.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DebounceDelay.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CE070378()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CE070384()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t type metadata accessor for DebounceDelay()
{
  return objc_opt_self();
}

uint64_t method lookup function for DebounceDelay()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DebounceDelay.__allocating_init(delay:max:callback:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 176))(a1, a2 & 1);
}

uint64_t dispatch thunk of DebounceDelay.poke()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

unint64_t sub_1CE0703EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F0EA0;
  if (!qword_1ED8F0EA0)
  {
    v1 = type metadata accessor for DebounceDelay();
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for DebounceDelay, v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F0EA0);
  }
  return result;
}

uint64_t sub_1CE070434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE070498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1CDFACD38;
  v4[3] = v3;
  v4[2] = v2;
  return swift_task_switch();
}

uint64_t objectdestroy_12Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t PlaybackInformationUpdated.duration.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t PlaybackInformationUpdated.elapsedTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PlaybackInformationUpdated.itemAlbumTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1CE070598(v1, *(_QWORD *)(v0 + 40));
  return v1;
}

uint64_t sub_1CE070598(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t PlaybackInformationUpdated.itemArtist.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1CE070598(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t PlaybackInformationUpdated.itemArtwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PlaybackInformationUpdated() + 32);
  return sub_1CE070648(v3, a1);
}

uint64_t type metadata accessor for PlaybackInformationUpdated()
{
  uint64_t result;

  result = qword_1EFA62558;
  if (!qword_1EFA62558)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE070648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t PlaybackInformationUpdated.itemTitle.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for PlaybackInformationUpdated() + 36));
  v2 = *v1;
  sub_1CE070598(*v1, v1[1]);
  return v2;
}

uint64_t PlaybackInformationUpdated.playbackRate.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackInformationUpdated() + 40));
}

uint64_t PlaybackInformationUpdated.init(duration:elapsedTime:itemAlbumTitle:itemArtist:itemArtwork:itemTitle:playbackRate:)@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, char a15)
{
  int *v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;

  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 9) = HIBYTE(a2) & 1;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_BYTE *)(a9 + 25) = HIBYTE(a4) & 1;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  v16 = (int *)type metadata accessor for PlaybackInformationUpdated();
  result = sub_1CE0707B0(a10, a9 + v16[8]);
  v18 = (_QWORD *)(a9 + v16[9]);
  *v18 = a11;
  v18[1] = a12;
  v19 = a9 + v16[10];
  *(_QWORD *)v19 = a13;
  *(_BYTE *)(v19 + 8) = a14;
  *(_BYTE *)(v19 + 9) = a15 & 1;
  return result;
}

uint64_t sub_1CE0707B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void static PlaybackInformationUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackInformationUpdated(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
    v7 = a2 + 4;
    v8 = a2[5];
    if (v8 == 1)
    {
      *(_OWORD *)(v4 + 32) = *v7;
    }
    else
    {
      *(_QWORD *)(v4 + 32) = *(_QWORD *)v7;
      *(_QWORD *)(v4 + 40) = v8;
      swift_bridgeObjectRetain();
    }
    v10 = a2 + 6;
    v11 = a2[7];
    if (v11 == 1)
    {
      *(_OWORD *)(v4 + 48) = *v10;
    }
    else
    {
      *(_QWORD *)(v4 + 48) = *(_QWORD *)v10;
      *(_QWORD *)(v4 + 56) = v11;
      swift_bridgeObjectRetain();
    }
    v12 = a3[8];
    v13 = (void *)(v4 + v12);
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v18 = sub_1CE0B5BF4();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
      {
        memcpy(v13, v14, *(_QWORD *)(v16 + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 16))(v13, v14, v18);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v20 = a3[9];
    v21 = v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = *(_QWORD *)(v22 + 8);
    if (v23 == 1)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
    }
    else
    {
      *(_QWORD *)v21 = *(_QWORD *)v22;
      *(_QWORD *)(v21 + 8) = v23;
      swift_bridgeObjectRetain();
    }
    v24 = a3[10];
    v25 = v4 + v24;
    v26 = (uint64_t)a2 + v24;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *(_WORD *)(v25 + 8) = *(_WORD *)(v26 + 8);
  }
  return v4;
}

uint64_t destroy for PlaybackInformationUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  if (*(_QWORD *)(a1 + 40) != 1)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1CE0B5BF4();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  }
  result = *(_QWORD *)(a1 + *(int *)(a2 + 36) + 8);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 32) = *v6;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 40) = v7;
    swift_bridgeObjectRetain();
  }
  v8 = (_OWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 48) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 56) = v9;
    swift_bridgeObjectRetain();
  }
  v10 = a3[8];
  v11 = (void *)(a1 + v10);
  v12 = (const void *)(a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = sub_1CE0B5BF4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16))
    {
      memcpy(v11, v12, *(_QWORD *)(v14 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v11, v12, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v11, 0, 1, v16);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v18 = a3[9];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = *(_QWORD *)(v20 + 8);
  if (v21 == 1)
  {
    *(_OWORD *)v19 = *(_OWORD *)v20;
  }
  else
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = v21;
    swift_bridgeObjectRetain();
  }
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_WORD *)(v23 + 8) = *(_WORD *)(v24 + 8);
  return a1;
}

uint64_t assignWithCopy for PlaybackInformationUpdated(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;

  v6 = *a2;
  *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)a1 = v6;
  v7 = a2[2];
  *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
  *(_QWORD *)(a1 + 16) = v7;
  v8 = (_OWORD *)(a1 + 32);
  v9 = a2 + 4;
  v10 = a2[5];
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v10 != 1)
    {
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 == 1)
  {
    sub_1CDFB13F8(a1 + 32, &qword_1ED8F0030);
LABEL_6:
    *v8 = *v9;
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v11 = a2[7];
  if (*(_QWORD *)(a1 + 56) == 1)
  {
    if (v11 != 1)
    {
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v11 == 1)
  {
    sub_1CDFB13F8(a1 + 48, &qword_1ED8F0030);
LABEL_13:
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  v12 = a3[8];
  v13 = (void *)(a1 + v12);
  v14 = (char *)a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      v23 = sub_1CE0B5BF4();
      v24 = *(_QWORD *)(v23 - 8);
      v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
      v26 = v25(v13, 1, v23);
      v27 = v25(v14, 1, v23);
      if (v26)
      {
        if (!v27)
        {
          (*(void (**)(void *, char *, uint64_t))(v24 + 16))(v13, v14, v23);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
          goto LABEL_28;
        }
      }
      else
      {
        if (!v27)
        {
          (*(void (**)(void *, char *, uint64_t))(v24 + 24))(v13, v14, v23);
          goto LABEL_28;
        }
        (*(void (**)(void *, uint64_t))(v24 + 8))(v13, v23);
      }
      v22 = *(_QWORD *)(v16 + 64);
LABEL_22:
      memcpy(v13, v14, v22);
      goto LABEL_28;
    }
    sub_1CDFB13F8((uint64_t)v13, &qword_1EFA624F8);
LABEL_21:
    v22 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0) - 8) + 64);
    goto LABEL_22;
  }
  if (v19)
    goto LABEL_21;
  v20 = sub_1CE0B5BF4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20))
  {
    memcpy(v13, v14, *(_QWORD *)(v16 + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v13, v14, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v13, 0, 1, v20);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_28:
  v28 = a3[9];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (uint64_t *)((char *)a2 + v28);
  v31 = *(_QWORD *)(a1 + v28 + 8);
  v32 = *(uint64_t *)((char *)a2 + v28 + 8);
  if (v31 != 1)
  {
    if (v32 != 1)
    {
      *v29 = *v30;
      v29[1] = v30[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    sub_1CDFB13F8((uint64_t)v29, &qword_1ED8F0030);
    goto LABEL_33;
  }
  if (v32 == 1)
  {
LABEL_33:
    *(_OWORD *)v29 = *(_OWORD *)v30;
    goto LABEL_35;
  }
  *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
LABEL_35:
  v33 = a3[10];
  v34 = a1 + v33;
  v35 = (uint64_t *)((char *)a2 + v33);
  v36 = *v35;
  *(_WORD *)(v34 + 8) = *((_WORD *)v35 + 4);
  *(_QWORD *)v34 = v36;
  return a1;
}

uint64_t initializeWithTake for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = a3[8];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_1CE0B5BF4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v8, v9, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v16 = a1 + v15;
  v17 = a2 + v15;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *(_WORD *)(v16 + 8) = *(_WORD *)(v17 + 8);
  return a1;
}

uint64_t assignWithTake for PlaybackInformationUpdated(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  v6 = (_OWORD *)(a1 + 32);
  v7 = (_OWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 40) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 40);
  if (v8 == 1)
  {
    sub_1CDFB13F8((uint64_t)v6, &qword_1ED8F0030);
LABEL_4:
    *v6 = *v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = (_OWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 56) == 1)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *v9;
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(a2 + 56);
  if (v10 == 1)
  {
    sub_1CDFB13F8(a1 + 48, &qword_1ED8F0030);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease();
LABEL_11:
  v11 = a3[8];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      v22 = sub_1CE0B5BF4();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
      v25 = v24(v12, 1, v22);
      v26 = v24(v13, 1, v22);
      if (v25)
      {
        if (!v26)
        {
          (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v12, v13, v22);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v12, 0, 1, v22);
          goto LABEL_24;
        }
      }
      else
      {
        if (!v26)
        {
          (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v12, v13, v22);
          goto LABEL_24;
        }
        (*(void (**)(void *, uint64_t))(v23 + 8))(v12, v22);
      }
      v21 = *(_QWORD *)(v15 + 64);
LABEL_18:
      memcpy(v12, v13, v21);
      goto LABEL_24;
    }
    sub_1CDFB13F8((uint64_t)v12, &qword_1EFA624F8);
LABEL_17:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0) - 8) + 64);
    goto LABEL_18;
  }
  if (v18)
    goto LABEL_17;
  v19 = sub_1CE0B5BF4();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
  {
    memcpy(v12, v13, *(_QWORD *)(v15 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v12, v13, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_24:
  v27 = a3[9];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  if (*(_QWORD *)(a1 + v27 + 8) != 1)
  {
    v30 = v29[1];
    if (v30 != 1)
    {
      *v28 = *v29;
      v28[1] = v30;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    sub_1CDFB13F8((uint64_t)v28, &qword_1ED8F0030);
  }
  *(_OWORD *)v28 = *(_OWORD *)v29;
LABEL_29:
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *(_WORD *)(v32 + 8) = *(_WORD *)(v33 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackInformationUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0714E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 2147483645)
  {
    v4 = *(_QWORD *)(a1 + 40);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return ((_DWORD)v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PlaybackInformationUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE071574(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483645)
  {
    *(_QWORD *)(result + 40) = (a2 + 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1CE0715F0()
{
  unint64_t v0;

  sub_1CE07167C(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1CE07167C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EFA62568[0])
  {
    v2 = sub_1CE0B5BF4();
    v5 = type metadata accessor for PlaybackInformationUpdated.InfoType(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, qword_1EFA62568);
  }
}

uint64_t type metadata accessor for PlaybackInformationUpdated.InfoType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackInformationUpdated.InfoType);
}

uint64_t sub_1CE0716DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B68A8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1CE071734(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 >= 2)
    v9 = v8;
  else
    v9 = v8 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    if (v7 > 1)
    {
      if ((*(unsigned int (**)(uint64_t *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) >= 2)
      {
LABEL_32:
        memcpy(a1, a2, v9);
        return a1;
      }
    }
    else if (*((_BYTE *)a2 + v8))
    {
      v14 = (*((unsigned __int8 *)a2 + v8) - 1) << (8 * v8);
      if (v8 > 3)
        v14 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v15 = v8;
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 != -1)
        goto LABEL_32;
    }
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1)
        return a1;
      goto LABEL_30;
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
    if (v7 <= 1)
LABEL_30:
      *((_BYTE *)a1 + v8) = 0;
  }
  return a1;
}

uint64_t sub_1CE0718E8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  int v7;

  v2 = result;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = *(_QWORD *)(v4 + 64);
  else
    v6 = *(_QWORD *)(v4 + 64) + 1;
  if (v5 > 1)
  {
    result = (*(uint64_t (**)(uint64_t))(v4 + 48))(result);
    if (result >= 2)
      return result;
    goto LABEL_15;
  }
  if (!*(_BYTE *)(result + v6))
    goto LABEL_15;
  v7 = (*(unsigned __int8 *)(result + v6) - 1) << (8 * v6);
  if (v6 > 3)
    v7 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  if (v7 == -1)
  {
LABEL_15:
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  }
  return result;
}

void *sub_1CE0719F4(void *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 1)
  {
    if (a2[v8])
    {
      v9 = (a2[v8] - 1) << (8 * v8);
      if (v8 > 3)
        v9 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v10 = v8;
        else
          v10 = 4;
        __asm { BR              X11 }
      }
      if (v9 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1)
        return a1;
    }
    else
    {
      (*(void (**)(void *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      if (v7 > 1)
        return a1;
    }
    *((_BYTE *)a1 + v8) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) < 2)goto LABEL_14;
LABEL_20:
  if (v7 >= 2)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

unsigned __int8 *sub_1CE071B68(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t (*v12)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 > 1)
  {
    v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v13 = v12(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
    v14 = v12(a2, v7, v5);
    if (v13 >= 2)
    {
      if (v14 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v8);
        if (v7 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        if (v7 > 1)
          return a1;
      }
      a1[v8] = 0;
      return a1;
    }
    if (v14 >= 2)
    {
LABEL_31:
      if (!v12(a1, 1, v5))
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_41;
    }
LABEL_33:
    v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, 1, v5);
    v19 = v17(a2, 1, v5);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 24))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    return a1;
  }
  v9 = 8 * v8;
  if (!a1[v8])
    goto LABEL_29;
  v10 = (a1[v8] - 1) << v9;
  if (v8 > 3)
    v10 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v11 = v8;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v10 == -1)
  {
LABEL_29:
    if (a2[v8])
    {
      v15 = (a2[v8] - 1) << v9;
      if (v8 > 3)
        v15 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v16 = v8;
        else
          v16 = 4;
        __asm { BR              X11 }
      }
      if (v15 != -1)
      {
        v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!a2[v8] || (a2[v8] - 1) << v9 == -1)
    goto LABEL_45;
LABEL_41:
  if (v7 >= 2)
    v20 = v8;
  else
    v20 = v8 + 1;
  memcpy(a1, a2, v20);
  return a1;
}

void *sub_1CE071ED4(void *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 <= 1)
  {
    if (a2[v8])
    {
      v9 = (a2[v8] - 1) << (8 * v8);
      if (v8 > 3)
        v9 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v10 = v8;
        else
          v10 = 4;
        __asm { BR              X11 }
      }
      if (v9 != -1)
        goto LABEL_20;
    }
LABEL_14:
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      memcpy(a1, a2, v8);
      if (v7 > 1)
        return a1;
    }
    else
    {
      (*(void (**)(void *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      if (v7 > 1)
        return a1;
    }
    *((_BYTE *)a1 + v8) = 0;
    return a1;
  }
  if ((*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)) < 2)goto LABEL_14;
LABEL_20:
  if (v7 >= 2)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

unsigned __int8 *sub_1CE072048(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  char v9;
  int v10;
  int v11;
  uint64_t (*v12)(unsigned __int8 *, uint64_t, uint64_t);
  unsigned int v13;
  unsigned int v14;
  int v15;
  int v16;
  uint64_t (*v17)(unsigned __int8 *, uint64_t, uint64_t);
  int v18;
  int v19;
  size_t v20;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v7)
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (v7 > 1)
  {
    v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v13 = v12(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
    v14 = v12(a2, v7, v5);
    if (v13 >= 2)
    {
      if (v14 >= 2)
        goto LABEL_41;
LABEL_45:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        memcpy(a1, a2, v8);
        if (v7 > 1)
          return a1;
      }
      else
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        if (v7 > 1)
          return a1;
      }
      a1[v8] = 0;
      return a1;
    }
    if (v14 >= 2)
    {
LABEL_31:
      if (!v12(a1, 1, v5))
        (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_41;
    }
LABEL_33:
    v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
    v18 = v17(a1, 1, v5);
    v19 = v17(a2, 1, v5);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
        (*(void (**)(unsigned __int8 *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
        return a1;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 40))(a1, a2, v5);
        return a1;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    memcpy(a1, a2, v8);
    return a1;
  }
  v9 = 8 * v8;
  if (!a1[v8])
    goto LABEL_29;
  v10 = (a1[v8] - 1) << v9;
  if (v8 > 3)
    v10 = 0;
  if ((_DWORD)v8)
  {
    if (v8 <= 3)
      v11 = v8;
    else
      v11 = 4;
    __asm { BR              X12 }
  }
  if (v10 == -1)
  {
LABEL_29:
    if (a2[v8])
    {
      v15 = (a2[v8] - 1) << v9;
      if (v8 > 3)
        v15 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v16 = v8;
        else
          v16 = 4;
        __asm { BR              X11 }
      }
      if (v15 != -1)
      {
        v12 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v6 + 48);
        goto LABEL_31;
      }
    }
    goto LABEL_33;
  }
  if (!a2[v8] || (a2[v8] - 1) << v9 == -1)
    goto LABEL_45;
LABEL_41:
  if (v7 >= 2)
    v20 = v8;
  else
    v20 = v8 + 1;
  memcpy(a1, a2, v20);
  return a1;
}

uint64_t sub_1CE0723B4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;
  BOOL v16;
  uint64_t result;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = v6 - 1;
  v8 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v8;
  if (v5 < 2)
  {
    v7 = 0;
    ++v8;
  }
  if (!a2)
    return 0;
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_26;
  v10 = 8 * v8;
  if (v8 > 3)
    goto LABEL_10;
  v12 = ((v9 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    v11 = *(_DWORD *)(a1 + v8);
    if (v11)
      goto LABEL_17;
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2)
        goto LABEL_26;
LABEL_10:
      v11 = *(unsigned __int8 *)(a1 + v8);
      if (!*(_BYTE *)(a1 + v8))
        goto LABEL_26;
LABEL_17:
      v13 = (v11 - 1) << v10;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = v8;
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      return v7 + v13 + 1;
    }
    v11 = *(unsigned __int16 *)(a1 + v8);
    if (*(_WORD *)(a1 + v8))
      goto LABEL_17;
  }
LABEL_26:
  if (!v7)
    return 0;
  if (v5 < 2)
    return 0;
  v15 = (*(uint64_t (**)(void))(v4 + 48))();
  v16 = v15 >= 2;
  result = v15 - 2;
  if ((_DWORD)result == 0 || !v16)
    return 0;
  return result;
}

void sub_1CE0724FC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  size_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = v9 - 1;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  if (v8 >= 2)
  {
    v12 = v11;
  }
  else
  {
    v10 = 0;
    v12 = v11 + 1;
  }
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X13 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_1CE072720()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1CE072728()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1CE072748()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1CE072758()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1CE072760()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1CE07276C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  unsigned int v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_DWORD *)(v2 + 84);
  v4 = *(_QWORD *)(v2 + 64);
  if (!v3)
    ++v4;
  if (v3 > 1)
  {
    v6 = (*(uint64_t (**)(void))(v2 + 48))();
    if (v6 >= 2)
      return v6 - 1;
    else
      return 0;
  }
  else if (*(_BYTE *)(a1 + v4))
  {
    v5 = (*(unsigned __int8 *)(a1 + v4) - 1) << (8 * v4);
    if (v4 > 3)
      v5 = 0;
    if ((_DWORD)v4)
    {
      if (v4 > 3)
        LODWORD(v4) = 4;
      __asm { BR              X11 }
    }
    return (v5 + 1);
  }
  else
  {
    return 0;
  }
}

void sub_1CE072838(unsigned int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (v5)
  {
    v7 = *(_QWORD *)(v4 + 64);
  }
  else
  {
    v6 = 0;
    v7 = *(_QWORD *)(v4 + 64) + 1;
  }
  if (v6 < a2)
  {
    v8 = ~v6 + a2;
    if (v7 >= 4)
    {
      bzero(a1, v7);
      *a1 = v8;
      LOBYTE(v9) = 1;
      if (v5 > 1)
        return;
LABEL_19:
      *((_BYTE *)a1 + v7) = v9;
      return;
    }
    v9 = (v8 >> (8 * v7)) + 1;
    if ((_DWORD)v7)
    {
      v10 = v8 & ~(-1 << (8 * v7));
      bzero(a1, v7);
      if ((_DWORD)v7 != 3)
      {
        if ((_DWORD)v7 == 2)
        {
          *(_WORD *)a1 = v10;
          if (v5 > 1)
            return;
        }
        else
        {
          *(_BYTE *)a1 = v10;
          if (v5 > 1)
            return;
        }
        goto LABEL_19;
      }
      *(_WORD *)a1 = v10;
      *((_BYTE *)a1 + 2) = BYTE2(v10);
    }
    if (v5 > 1)
      return;
    goto LABEL_19;
  }
  if (v5 > 1)
  {
    if (a2)
      (*(void (**)(unsigned int *, _QWORD, _QWORD))(v4 + 56))(a1, a2 + 1, *(unsigned int *)(v4 + 84));
  }
  else
  {
    *((_BYTE *)a1 + v7) = 0;
  }
}

uint64_t WorkoutDeviceConnectionUpdated.workoutDeviceConnection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B53C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WorkoutDeviceConnectionUpdated.init(workoutDeviceConnection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static WorkoutDeviceConnectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for WorkoutDeviceConnectionUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B53C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WorkoutDeviceConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutDeviceConnectionUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE072B74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WorkoutDeviceConnectionUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE072BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B53C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutDeviceConnectionUpdated()
{
  uint64_t result;

  result = qword_1EFA62688;
  if (!qword_1EFA62688)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE072C38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B53C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t EventHubProtocol.makeAsyncStream<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a2;
  v12[3] = a3;
  v12[4] = a4;
  v12[5] = a5;
  EventHubProtocol.makeAsyncStream<A, B>(for:transforming:)(a1, (uint64_t)&unk_1EFA626C8, (uint64_t)v12, a2, a3, a3, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1CE072D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE072D54()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 16))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE072D94()
{
  return swift_deallocObject();
}

uint64_t sub_1CE072DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 24);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t EventHubProtocol.makeAsyncStream<A, B>(for:transforming:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v10 = v9;
  v24 = a8;
  v25 = a3;
  v23 = a2;
  v26 = a9;
  v16 = sub_1CE0B6584();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v23 - v18;
  type metadata accessor for SubscriptionToken();
  v20 = swift_allocObject();
  v21 = sub_1CDFD3EF8(v10, v20, a4, a7);
  v27 = a4;
  v28 = a5;
  v29 = a6;
  v30 = a7;
  v31 = v24;
  v32 = v10;
  v33 = a1;
  v34 = v21;
  v35 = v23;
  v36 = v25;
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DF07B8], v16);
  sub_1CE0B65A8();
  return swift_release();
}

uint64_t sub_1CE072F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD *__return_ptr, uint64_t, uint64_t, void *, char *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v26 = a5;
  v27 = a6;
  v29 = a3;
  v30 = a4;
  v31 = a2;
  v32 = a1;
  v28 = a9;
  v14 = sub_1CE0B659C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v26 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v26 - v16, a1, v14);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a7;
  *((_QWORD *)v19 + 3) = a8;
  *((_QWORD *)v19 + 4) = a9;
  *((_QWORD *)v19 + 5) = a10;
  v20 = v26;
  v21 = v27;
  *((_QWORD *)v19 + 6) = a11;
  *((_QWORD *)v19 + 7) = v20;
  *((_QWORD *)v19 + 8) = v21;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v17, v14);
  v22 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, void *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(a10 + 48);
  swift_retain();
  v23 = v30;
  v22(v33, v29, v30, &unk_1EFA626D8, v19, a8, a11, a7, a10);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v33);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a7;
  v24[3] = a8;
  v24[4] = v28;
  v24[5] = a10;
  v24[6] = a11;
  v24[7] = v23;
  swift_retain();
  return sub_1CE0B6578();
}

uint64_t sub_1CE0730D8(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t);

  v7[2] = a4;
  v7[3] = a7;
  v11 = sub_1CE0B656C();
  v7[4] = v11;
  v7[5] = *(_QWORD *)(v11 - 8);
  v7[6] = swift_task_alloc();
  v7[7] = *(_QWORD *)(a7 - 8);
  v7[8] = swift_task_alloc();
  v12 = swift_task_alloc();
  v7[9] = v12;
  v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v13 = (_QWORD *)swift_task_alloc();
  v7[10] = v13;
  *v13 = v7;
  v13[1] = sub_1CE0731B0;
  return v15(v12, a1);
}

uint64_t sub_1CE0731B0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE073214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 64), v1, v6);
  sub_1CE0B659C();
  sub_1CE0B6590();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0732D0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE073318(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CE072F44(a1, v1[7], v1[8], v1[9], v1[10], v1[11], v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1CE073350()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B659C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0733C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B659C() - 8) + 80);
  v8 = (int *)v1[7];
  v9 = v1[8];
  v10 = (uint64_t)v1 + ((v7 + 72) & ~v7);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1CDFACD3C;
  return sub_1CE0730D8(a1, v8, v9, v10, v4, v5, v6);
}

uint64_t sub_1CE073484()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t CatalogLockup.init(tile:bundleDateRequested:bundleLoadStatus:bundleProgress:bundleReason:completedCount:dateBookmarked:isIncompletePlanWorkout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[3];
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  char *v98;

  v92 = a9;
  v93 = a8;
  v94 = a7;
  v95 = a6;
  v96 = a3;
  v84 = a5;
  v97 = a4;
  v87 = a2;
  v91 = a11;
  v79 = a10;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA626E0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v90 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v89 = (char *)v52 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v18);
  v88 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA624F8);
  MEMORY[0x1E0C80A78](v20);
  v98 = (char *)v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA626E8);
  MEMORY[0x1E0C80A78](v22);
  v61 = (char *)v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA626F0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  v28 = MEMORY[0x1E0C80A78](v27);
  v30 = (char *)v52 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = v30;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)v52 - v31;
  v81 = (char *)v52 - v31;
  v33 = sub_1CE0B4C4C();
  MEMORY[0x1E0C80A78](v33);
  v82 = (char *)v52 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1CE0B3FEC();
  v85 = v36;
  v86 = v35;
  v83 = sub_1CE0B3F5C();
  sub_1CE0B3FD4();
  sub_1CDFB1434(a2, (uint64_t)v32, &qword_1EFA5EC58);
  sub_1CDFB1434(a5, (uint64_t)v26, &qword_1EFA626F0);
  v78 = sub_1CE0B3FA4();
  v77 = v37;
  v76 = v38 & 1;
  v75 = sub_1CE0B4028();
  v74 = sub_1CE0B4004();
  sub_1CDFB1434(a10, (uint64_t)v30, &qword_1EFA5EC58);
  v72 = sub_1CE0B3F68();
  v71 = sub_1CE0B4064();
  v70 = v39 & 1;
  v69 = sub_1CE0B4040();
  v68 = v40;
  v67 = v41;
  v66 = sub_1CE0B4034();
  v65 = v42;
  v64 = sub_1CE0B401C();
  v63 = sub_1CE0B3F74();
  v62 = v43;
  sub_1CE0B4058();
  v60 = sub_1CE0B4070();
  v59 = v44;
  v58 = v45;
  v57 = sub_1CE0B3F80();
  v56 = v46;
  v55 = sub_1CE0B3FB0();
  v54 = v47;
  v53 = v48 & 1;
  sub_1CE0B3FC8();
  v52[2] = sub_1CE0B404C();
  v52[1] = v49;
  sub_1CE0B3FE0();
  sub_1CE0B3FBC();
  sub_1CE0B3F8C();
  sub_1CE0B3F98();
  sub_1CE0B4010();
  sub_1CE0B407C();
  sub_1CE0B3FF8();
  sub_1CE0B4454();
  sub_1CDFB13F8(v79, &qword_1EFA5EC58);
  sub_1CDFB13F8(v84, &qword_1EFA626F0);
  sub_1CDFB13F8(v87, &qword_1EFA5EC58);
  v50 = sub_1CE0B4088();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(a1, v50);
}

BOOL sub_1CE073AB4(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  char v6;

  v4 = *a2 == *a1 && a2[1] == a1[1];
  if ((v4 || (sub_1CE0B6C50() & 1) != 0)
    && (a2[2] == a1[2] ? (v5 = a2[3] == a1[3]) : (v5 = 0),
        (v5 || (sub_1CE0B6C50() & 1) != 0) && a2[4] == a1[4] && a2[5] == a1[5]))
  {
    v6 = 0;
  }
  else
  {
    v6 = sub_1CE0B6C50();
  }
  return (v6 & 1) == 0;
}

BOOL sub_1CE073B84(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  char v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_1CE0B6C50() & 1) != 0)
    && (a1[2] == a2[2] ? (v5 = a1[3] == a2[3]) : (v5 = 0),
        (v5 || (sub_1CE0B6C50() & 1) != 0) && a1[4] == a2[4] && a1[5] == a2[5]))
  {
    v6 = 0;
  }
  else
  {
    v6 = sub_1CE0B6C50();
  }
  return (v6 & 1) == 0;
}

uint64_t sub_1CE073C54(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;

  v4 = *a2 == *a1 && a2[1] == a1[1];
  if ((v4 || (sub_1CE0B6C50() & 1) != 0)
    && (a2[2] == a1[2] ? (v5 = a2[3] == a1[3]) : (v5 = 0),
        (v5 || (sub_1CE0B6C50() & 1) != 0) && a2[4] == a1[4] && a2[5] == a1[5]))
  {
    return 0;
  }
  else
  {
    return sub_1CE0B6C50();
  }
}

uint64_t SystemVersion.prefix.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemVersion.letter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemVersion.suffix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SystemVersion.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall SystemVersion.init(rawValue:)(SeymourClient::SystemVersion_optional *__return_ptr retstr, Swift::String rawValue)
{
  void *object;
  uint64_t countAndFlagsBits;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t isEscapingClosureAtFileLocation;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;

  object = rawValue._object;
  countAndFlagsBits = rawValue._countAndFlagsBits;
  v5 = objc_allocWithZone(MEMORY[0x1E0CB38E8]);
  swift_bridgeObjectRetain();
  v6 = sub_1CE074618(0xD000000000000034, 0x80000001CE0CBE90, 0);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA626F8);
  sub_1CE0746F0();
  sub_1CDFC7620();
  v20 = sub_1CE0B686C();
  v8 = v7;
  v26 = 0;
  v27 = 0;
  v24 = 0;
  v25 = 0;
  v22 = 0;
  v23 = 0;
  v9 = (void *)sub_1CE0B626C();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = countAndFlagsBits;
  v10[3] = object;
  v10[4] = &v26;
  v10[5] = &v24;
  v10[6] = &v22;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1CE074760;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1CDFBA114;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CE074278;
  aBlock[3] = &block_descriptor_15;
  v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_enumerateMatchesInString_options_range_usingBlock_, v9, 0, v20, v8, v12);

  _Block_release(v12);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v14 = v27;
    if (v27 && (v15 = v25) != 0 && (v16 = v23) != 0)
    {
      v17 = v26;
      v18 = v24;
      v19 = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      retstr->value.prefix._countAndFlagsBits = v17;
      retstr->value.prefix._object = v14;
      retstr->value.letter._countAndFlagsBits = v18;
      retstr->value.letter._object = v15;
      retstr->value.suffix._countAndFlagsBits = v19;
      retstr->value.suffix._object = v16;
      retstr->value.rawValue._countAndFlagsBits = countAndFlagsBits;
      retstr->value.rawValue._object = object;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CDFC2DA0((uint64_t)sub_1CE074760);
      retstr->value.suffix = 0u;
      retstr->value.rawValue = 0u;
      retstr->value.prefix = 0u;
      retstr->value.letter = 0u;
    }
  }
}

void sub_1CE074100(void *a1, uint64_t a2, _BYTE *a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  if (a1)
  {
    v27 = a1;
    if (objc_msgSend(v27, sel_numberOfRanges) == (id)4)
    {
      objc_msgSend(v27, sel_rangeAtIndex_, 1);
      sub_1CE0B6704();
      if ((v12 & 1) == 0)
      {
        v13 = sub_1CE0B6374();
        v14 = MEMORY[0x1D17BF624](v13);
        v16 = v15;
        swift_bridgeObjectRelease();
        *a6 = v14;
        a6[1] = v16;
        swift_bridgeObjectRelease();
        objc_msgSend(v27, sel_rangeAtIndex_, 2);
        sub_1CE0B6704();
        if ((v17 & 1) == 0)
        {
          v18 = sub_1CE0B6374();
          v19 = MEMORY[0x1D17BF624](v18);
          v21 = v20;
          swift_bridgeObjectRelease();
          *a7 = v19;
          a7[1] = v21;
          swift_bridgeObjectRelease();
          objc_msgSend(v27, sel_rangeAtIndex_, 3);
          sub_1CE0B6704();
          if ((v22 & 1) == 0)
          {
            v23 = sub_1CE0B6374();
            v24 = MEMORY[0x1D17BF624](v23);
            v26 = v25;
            swift_bridgeObjectRelease();
            *a8 = v24;
            a8[1] = v26;
            swift_bridgeObjectRelease();
            *a3 = 0;
          }
        }
      }
    }

  }
}

void sub_1CE074278(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(void *, uint64_t, uint64_t);
  id v8;

  v7 = *(void (**)(void *, uint64_t, uint64_t))(a1 + 32);
  v8 = a2;
  v7(a2, a3, a4);

}

void __swiftcall SystemVersion.init(prefix:letter:suffix:)(SeymourClient::SystemVersion *__return_ptr retstr, Swift::String prefix, Swift::String letter, Swift::String suffix)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  object = suffix._object;
  countAndFlagsBits = suffix._countAndFlagsBits;
  v6 = letter._object;
  v7 = letter._countAndFlagsBits;
  v8 = prefix._object;
  v9 = prefix._countAndFlagsBits;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  retstr->prefix._countAndFlagsBits = v9;
  retstr->prefix._object = v8;
  retstr->letter._countAndFlagsBits = v7;
  retstr->letter._object = v6;
  retstr->suffix._countAndFlagsBits = countAndFlagsBits;
  retstr->suffix._object = object;
  retstr->rawValue = prefix;
}

void sub_1CE074388(Swift::String *a1@<X0>, SeymourClient::SystemVersion_optional *a2@<X8>)
{
  SystemVersion.init(rawValue:)(a2, *a1);
}

uint64_t sub_1CE074394@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SystemVersion.description.getter()
{
  sub_1CE0B6A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B62F0();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B62F0();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  sub_1CE0B62F0();
  swift_bridgeObjectRetain();
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  return 0x203A776152;
}

BOOL sub_1CE074510(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1CE073AB4(v7, v8);
}

BOOL sub_1CE074558(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1CE073B84(v7, v8);
}

uint64_t sub_1CE0745A0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  _OWORD v8[4];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = a1[3];
  v7[2] = a1[2];
  v7[3] = v3;
  v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  v5 = a2[3];
  v8[2] = a2[2];
  v8[3] = v5;
  return sub_1CE073C54(v7, v8) & 1;
}

uint64_t sub_1CE0745E8(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56))
    return 1;
  else
    return sub_1CE0B6C50();
}

id sub_1CE074618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1CE0B626C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithPattern_options_error_, v5, a3, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1CE0746F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA62700;
  if (!qword_1EFA62700)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA626F8);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEB8A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA62700);
  }
  return result;
}

uint64_t sub_1CE07473C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CE074760(void *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v3;

  sub_1CE074100(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(uint64_t **)(v3 + 32), *(uint64_t **)(v3 + 40), *(uint64_t **)(v3 + 48));
}

uint64_t sub_1CE074770()
{
  return swift_deallocObject();
}

uint64_t _s13SeymourClient13SystemVersionV1loiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = a1[2];
  v3 = a1[3];
  v9 = a1[4];
  v10 = a1[5];
  v4 = a2[2];
  v5 = a2[3];
  v7 = a2[4];
  v6 = a2[5];
  if ((*a1 == *a2 && a1[1] == a2[1] || (sub_1CE0B6C50() & 1) != 0)
    && (v2 == v4 && v3 == v5 || (sub_1CE0B6C50() & 1) != 0)
    && v9 == v7
    && v10 == v6)
  {
    return 0;
  }
  else
  {
    return sub_1CE0B6C50();
  }
}

unint64_t sub_1CE0748A8()
{
  unint64_t result;

  result = qword_1EFA62708;
  if (!qword_1EFA62708)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for SystemVersion, &type metadata for SystemVersion);
    atomic_store(result, (unint64_t *)&qword_1EFA62708);
  }
  return result;
}

uint64_t destroy for SystemVersion()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SystemVersion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SystemVersion(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for SystemVersion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SystemVersion(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemVersion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SystemVersion()
{
  return &type metadata for SystemVersion;
}

uint64_t MediaMomentStarted.mediaMoment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MediaMomentStarted.init(mediaMoment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MediaMomentStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MediaMomentStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE074BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaMomentStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE074C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaMomentStarted()
{
  uint64_t result;

  result = qword_1EFA62768;
  if (!qword_1EFA62768)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MultiUserWorkoutUpdated.init(multiUserWorkoutUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t MultiUserWorkoutUpdated.multiUserWorkoutUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5144();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static MultiUserWorkoutUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MultiUserWorkoutUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5144();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserWorkoutUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserWorkoutUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE074EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserWorkoutUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE074F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5144();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserWorkoutUpdated()
{
  uint64_t result;

  result = qword_1EFA627F8;
  if (!qword_1EFA627F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE074F7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5144();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReachabilityObserverError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE075030 + 4 * byte_1CE0C36B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE075064 + 4 * asc_1CE0C36B0[v4]))();
}

uint64_t sub_1CE075064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE07506C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE075074);
  return result;
}

uint64_t sub_1CE075080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE075088);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE07508C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE075094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReachabilityObserverError()
{
  return &type metadata for ReachabilityObserverError;
}

unint64_t sub_1CE0750B4()
{
  unint64_t result;

  result = qword_1EFA62830;
  if (!qword_1EFA62830)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C371C, &type metadata for ReachabilityObserverError);
    atomic_store(result, (unint64_t *)&qword_1EFA62830);
  }
  return result;
}

void static RemoteParticipantHostAdvertisingExpired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RemoteParticipantHostAdvertisingExpired()
{
  return &type metadata for RemoteParticipantHostAdvertisingExpired;
}

uint64_t static AssetBundleProgress.+ infix(_:_:)()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  _s13SeymourClient26AssetBundleProgressUpdatedV18debounceIdentifierSSvg_0();
  v0 = sub_1CE0B4E08();
  result = sub_1CE0B43C4();
  if (__OFADD__(v0, result))
  {
    __break(1u);
  }
  else
  {
    v2 = sub_1CE0B4E14();
    result = sub_1CE0B43D0();
    if (!__OFADD__(v2, result))
    {
      sub_1CE0B4E38();
      return sub_1CE0B4E20();
    }
  }
  __break(1u);
  return result;
}

uint64_t URL.init(multiUserActivity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[0] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B3C5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B3C50();
  sub_1CE0B3C38();
  sub_1CE0B3C2C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62838);
  sub_1CE0B3BFC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1CE0C37D0;
  sub_1CE0B4CC4();
  sub_1CE0B3BD8();
  swift_bridgeObjectRelease();
  sub_1CE0B4CD0();
  sub_1CE0B3BD8();
  swift_bridgeObjectRelease();
  v17[1] = sub_1CE0B4CB8();
  sub_1CE0B6C14();
  sub_1CE0B3BD8();
  swift_bridgeObjectRelease();
  sub_1CE0B3C14();
  sub_1CE0B3C44();
  sub_1CE0B3CD4();
  v10 = sub_1CE0B4CDC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = sub_1CE0B3D10();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11))
  {
    sub_1CE01B1A0((uint64_t)v5);
    v13 = 1;
    v14 = v17[0];
  }
  else
  {
    v15 = v17[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v12 + 32))(v17[0], v5, v11);
    v13 = 0;
    v14 = v15;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v14, v13, 1, v11);
}

void sub_1CE0754AC()
{
  word_1EFA62840 = 67;
}

uint64_t static Platform.internalOnlyFailure<A>(message:fallback:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result;

  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) == 0)
    return a3();
  if (qword_1EFA5D4A8 != -1)
    swift_once();
  if ((sub_1CDFD3658(word_1EFA62840, SHIBYTE(word_1EFA62840)) & 1) != 0)
    return a3();
  result = sub_1CE0B6AE8();
  __break(1u);
  return result;
}

uint64_t static Platform.internalOnlyFailure(message:fallback:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result;

  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  result = (uint64_t)Platform.internalInstall.getter();
  if ((result & 1) == 0)
    goto LABEL_7;
  if (qword_1EFA5D4A8 != -1)
    swift_once();
  result = sub_1CDFD3658(word_1EFA62840, SHIBYTE(word_1EFA62840));
  if ((result & 1) == 0)
  {
    result = sub_1CE0B6AE8();
    __break(1u);
  }
  else
  {
LABEL_7:
    if (a3)
      return a3();
  }
  return result;
}

unint64_t static XPCStreamConstants.distEventName.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static XPCStreamConstants.notifyEventName.getter()
{
  return 0xD00000000000001ALL;
}

ValueMetadata *type metadata accessor for XPCStreamConstants()
{
  return &type metadata for XPCStreamConstants;
}

uint64_t UnitPreferencesUpdated.unitPreferences.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4AE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t UnitPreferencesUpdated.init(unitPreferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static UnitPreferencesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for UnitPreferencesUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4AE4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UnitPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnitPreferencesUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07594C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UnitPreferencesUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE075994(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4AE4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UnitPreferencesUpdated()
{
  uint64_t result;

  result = qword_1EFA628A0;
  if (!qword_1EFA628A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE075A10()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4AE4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *EstimatedCaloriesClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for EstimatedCaloriesClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *EstimatedCaloriesClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE075FA0(a1, v3, ObjectType, a2, a3);
}

uint64_t EstimatedCaloriesClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t EstimatedCaloriesClient.queryEstimatedCalories(activityType:)(uint64_t a1)
{
  return sub_1CE075D34(a1, 0xD000000000000025, (void *)0x80000001CE0CC000, 281);
}

uint64_t EstimatedCaloriesClient.queryEstimatedCalories()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000074;
  v2._object = (void *)0x80000001CE0CBF80;
  v3._object = (void *)0x80000001CE0CC030;
  v3._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 282;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA628D8);
  v8 = sub_1CE075FE4();
  v9 = sub_1CE076048();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t EstimatedCaloriesClient.lookupEstimatedCalories(activityType:)(uint64_t a1)
{
  return sub_1CE075D34(a1, 0xD000000000000026, (void *)0x80000001CE0CC050, 283);
}

uint64_t sub_1CE075D34(uint64_t a1, uint64_t a2, void *a3, __int16 a4)
{
  uint64_t v4;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  __int16 v18;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1870);
  v10._object = (void *)0x80000001CE0CBF80;
  v10._countAndFlagsBits = 0xD000000000000074;
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  Logger.trace(file:function:)(v10, v11);
  v12 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v18 = a4;
  v17 = a1;
  v14 = *(uint64_t (**)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 32);
  v15 = sub_1CE0B4CA0();
  return v14(&v18, &v17, MEMORY[0x1E0DEBB98], v15, MEMORY[0x1E0D96928], MEMORY[0x1E0D96930], MEMORY[0x1E0D922F8], MEMORY[0x1E0D92300], ObjectType, v12);
}

uint64_t EstimatedCaloriesClient.generateEstimatedCalories()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000074;
  v2._object = (void *)0x80000001CE0CBF80;
  v3._object = (void *)0x80000001CE0CC080;
  v3._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 284;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t sub_1CE075F20(uint64_t a1)
{
  return EstimatedCaloriesClient.queryEstimatedCalories(activityType:)(a1);
}

uint64_t sub_1CE075F40()
{
  return EstimatedCaloriesClient.queryEstimatedCalories()();
}

uint64_t sub_1CE075F60(uint64_t a1)
{
  return EstimatedCaloriesClient.lookupEstimatedCalories(activityType:)(a1);
}

uint64_t sub_1CE075F80()
{
  return EstimatedCaloriesClient.generateEstimatedCalories()();
}

_QWORD *sub_1CE075FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for EstimatedCaloriesClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

unint64_t sub_1CE075FE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFA628E0;
  if (!qword_1EFA628E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA628D8);
    v2[0] = MEMORY[0x1E0D922F8];
    v2[1] = MEMORY[0x1E0D92300];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFA628E0);
  }
  return result;
}

unint64_t sub_1CE076048()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFA628E8;
  if (!qword_1EFA628E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA628D8);
    v2 = sub_1CE0760AC();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA628E8);
  }
  return result;
}

unint64_t sub_1CE0760AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA628F0;
  if (!qword_1EFA628F0)
  {
    v1 = sub_1CE0B4CA0();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D92308], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA628F0);
  }
  return result;
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.queryEstimatedCalories(activityType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.queryEstimatedCalories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.lookupEstimatedCalories(activityType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EstimatedCaloriesClientProtocol.generateEstimatedCalories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for EstimatedCaloriesClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EstimatedCaloriesClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t CountdownIntent.applyingTimestampOffset(_:)()
{
  sub_1CE0B4A0C();
  return sub_1CE0B4A18();
}

uint64_t sub_1CE076164()
{
  sub_1CE0B4A0C();
  return sub_1CE0B4A18();
}

void static NetworkConditionsChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryStorefrontLanguageCode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryAccountContainsSupportedWatch()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryAccountContainsSupportedDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t Trainer.metadata()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1CE0B3D10();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E0);
  MEMORY[0x1E0C80A78](v1);
  sub_1CE0B5E40();
  sub_1CE0B5E10();
  sub_1CE0B5E28();
  sub_1CE0B5E64();
  sub_1CE0B5E1C();
  sub_1CE0B5E34();
  return sub_1CE0B4A9C();
}

uint64_t RemoteParticipantPasswordRequired.init(challenge:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t RemoteParticipantPasswordRequired.challenge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static RemoteParticipantPasswordRequired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RemoteParticipantPasswordRequired(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5B28();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteParticipantPasswordRequired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantPasswordRequired()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0764EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantPasswordRequired()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE076534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

BOOL SessionStatus.init(rawValue:)(uint64_t a1)
{
  return a1 && a1 == 1;
}

unint64_t sub_1CE07659C()
{
  unint64_t result;

  result = qword_1EFA62A28;
  if (!qword_1EFA62A28)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for SessionStatus, &type metadata for SessionStatus);
    atomic_store(result, (unint64_t *)&qword_1EFA62A28);
  }
  return result;
}

uint64_t sub_1CE0765E0()
{
  sub_1CE0B6D34();
  sub_1CE0B6D58();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE076624()
{
  return sub_1CE0B6D58();
}

uint64_t sub_1CE07664C()
{
  sub_1CE0B6D34();
  sub_1CE0B6D58();
  return sub_1CE0B6D64();
}

_QWORD *sub_1CE07668C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;

  v2 = *result != 1 && *result != 0;
  *(_QWORD *)a2 = *result == 1;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

void sub_1CE0766BC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

ValueMetadata *type metadata accessor for SessionStatus()
{
  return &type metadata for SessionStatus;
}

unint64_t static HealthDataConstants.catalogWorkoutIdentifierProperty.getter()
{
  return 0xD000000000000029;
}

unint64_t static HealthDataConstants.workoutSessionIdentifierProperty.getter()
{
  return 0xD000000000000022;
}

unint64_t static HealthDataConstants.mediaTypeProperty.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1CE07672C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1CE0B6278();
  qword_1EFA62A30 = result;
  *(_QWORD *)algn_1EFA62A38 = v1;
  return result;
}

uint64_t static HealthDataConstants.moveModeWorkoutProperty.getter()
{
  uint64_t v0;

  if (qword_1EFA5D4B0 != -1)
    swift_once();
  v0 = qword_1EFA62A30;
  swift_bridgeObjectRetain();
  return v0;
}

unint64_t static HealthDataConstants.workoutSessionQueueIdentifierProperty.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static HealthDataConstants.workoutSessionPlaylistIdentifierProperty.getter()
{
  return 0xD00000000000002CLL;
}

ValueMetadata *type metadata accessor for HealthDataConstants()
{
  return &type metadata for HealthDataConstants;
}

uint64_t sub_1CE0767FC()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1CE0B5090();
  __swift_allocate_value_buffer(v0, qword_1EFA62A40);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFA62A40);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x1E0D93270], v0);
}

uint64_t static TransportCompression.standard.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFA5D4B8 != -1)
    swift_once();
  v2 = sub_1CE0B5090();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFA62A40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

void (*Data.compressed(using:)(uint64_t a1, void (*a2)(char *, uint64_t), unint64_t a3))(char *, uint64_t)
{
  return sub_1CE0769CC(a1, a2, a3, (uint64_t (*)(_QWORD, void (*)(_QWORD, _QWORD), unint64_t))Data.compressed(using:));
}

uint64_t sub_1CE0768E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62A58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE076928(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62A58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CE076968()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA63A90;
  if (!qword_1EFA63A90)
  {
    v1 = sub_1CE0B48C8();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D91400], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA63A90);
  }
  return result;
}

void (*Data.decompressed(using:)(uint64_t a1, void (*a2)(char *, uint64_t), unint64_t a3))(char *, uint64_t)
{
  return sub_1CE0769CC(a1, a2, a3, (uint64_t (*)(_QWORD, void (*)(_QWORD, _QWORD), unint64_t))Data.decompressed(using:));
}

void (*sub_1CE0769CC(uint64_t a1, void (*a2)(char *, uint64_t), unint64_t a3, uint64_t (*a4)(_QWORD, void (*)(_QWORD, _QWORD), unint64_t)))(char *, uint64_t)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62A58);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B5090();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v23 - v16;
  sub_1CE0768E0(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1CE076928((uint64_t)v10);
    sub_1CDFC0990((uint64_t)a2, a3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v15, v11) == *MEMORY[0x1E0D93270])
    {
      v18 = v23[1];
      v19 = a4(0, (void (*)(_QWORD, _QWORD))a2, a3);
      if (!v18)
        a2 = (void (*)(char *, uint64_t))v19;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
    else
    {
      v20 = sub_1CE0B48C8();
      sub_1CE076968();
      swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v21, *MEMORY[0x1E0D913B0], v20);
      swift_willThrow();
      a2 = *(void (**)(char *, uint64_t))(v12 + 8);
      a2(v17, v11);
      a2(v15, v11);
    }
  }
  return a2;
}

uint64_t TransportEvent.rawValue.getter()
{
  char *v0;

  return qword_1CE0C3D28[*v0];
}

BOOL sub_1CE076C10(char *a1, char *a2)
{
  return qword_1CE0C3D28[*a1] == qword_1CE0C3D28[*a2];
}

uint64_t sub_1CE076C34()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE076C80()
{
  return sub_1CE0B6D40();
}

uint64_t sub_1CE076CB4()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

SeymourClient::TransportEvent_optional sub_1CE076CFC(Swift::Int *a1)
{
  return TransportEvent.init(rawValue:)(*a1);
}

void sub_1CE076D04(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1CE0C3D28[*v1];
}

uint64_t sub_1CE076D1C()
{
  sub_1CE076F10();
  return sub_1CE0B641C();
}

uint64_t sub_1CE076D78()
{
  sub_1CE076F10();
  return sub_1CE0B6404();
}

uint64_t getEnumTagSinglePayload for TransportEvent(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCB)
    goto LABEL_17;
  if (a2 + 53 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 53) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 53;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 53;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 53;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x36;
  v8 = v6 - 54;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportEvent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 53 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 53) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCA)
    return ((uint64_t (*)(void))((char *)&loc_1CE076EA0 + 4 * byte_1CE0C3B17[v4]))();
  *a1 = a2 + 53;
  return ((uint64_t (*)(void))((char *)sub_1CE076ED4 + 4 * byte_1CE0C3B12[v4]))();
}

uint64_t sub_1CE076ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE076EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE076EE4);
  return result;
}

uint64_t sub_1CE076EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE076EF8);
  *(_BYTE *)result = a2 + 53;
  return result;
}

uint64_t sub_1CE076EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE076F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_1CE076F10()
{
  unint64_t result;

  result = qword_1EFA62A60;
  if (!qword_1EFA62A60)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for TransportEvent, &type metadata for TransportEvent);
    atomic_store(result, (unint64_t *)&qword_1EFA62A60);
  }
  return result;
}

uint64_t PaceMetricUpdated.paceMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B3F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PaceMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PaceMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for PaceMetricUpdated()
{
  uint64_t result;

  result = qword_1EFA62AC0;
  if (!qword_1EFA62AC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PaceMetricUpdated.init(paceMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B3F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for PaceMetricUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static PaceMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PaceMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B3F20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PaceMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B3F20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B3F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B3F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B3F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PaceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B3F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PaceMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07730C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B3F20();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PaceMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE077398(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B3F20();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CE077414()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B3F20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertConnectionRecord(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.queryConnectionRecord()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestEnvironment(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestEnvironmentWithConfirmation(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.cancelRemoteBrowsingEnvironmentRequest(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestServiceSubscription(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.allowPendingConfirmationRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.denyPendingConfirmationRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestGuestAuthentication(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.tryPassword(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateAudioFocusSelection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateBurnBarDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateMetricsDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateProgressDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateNoticePrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateOptInPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.queryAllPrivacyAcknowledgements()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertPrivacyAcknowledgement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.removeBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertArchivedSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertCatalogTipJournal(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertPlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.deletePlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertCompletedMarketingVideo(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.processUpNextQueueUpdates(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.repeatWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateWorkoutPlan(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestEndWorkoutPlan(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestWorkoutPlanTemplateUpdate(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestWorkoutPlanAlternatives(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.showWorkoutPlanCreationPrompt(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 256))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requireActiveWorkoutPlan(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 264))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertWorkoutPlanSummaryViewed(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertArchivedWorkoutPlanSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.updateOnboardingSurveyResult(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertRecentSearchTerm(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.deleteRecentSearchTerms(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertAchievementNotificationRecord(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 312))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.insertPersonalizationPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of RemoteBrowsingClientProtocol.requestRemoteSyncableCounts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t sub_1CE0775CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1CE077608(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B56CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1CE07763C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CE077680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CE0776C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CE077708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1CE07774C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE077758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1CE077794()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0777A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56CC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MultiUserParticipantUpdated()
{
  uint64_t result;

  result = qword_1EFA62B50;
  if (!qword_1EFA62B50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE07781C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B56CC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RemoteDisplayConnectionUpdated.connection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5384();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoteDisplayConnectionUpdated.init(connection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static RemoteDisplayConnectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RemoteDisplayConnectionUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5384();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteDisplayConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteDisplayConnectionUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE077A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteDisplayConnectionUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE077ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5384();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteDisplayConnectionUpdated()
{
  uint64_t result;

  result = qword_1EFA62BE0;
  if (!qword_1EFA62BE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE077B58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5384();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Set<>.themes()(uint64_t a1)
{
  return sub_1CE078318(a1, (void (*)(void))sub_1CE077DF4, (uint64_t (*)(void))sub_1CDFD05E4);
}

uint64_t sub_1CE077BD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_1CE0B4244();
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B5024();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v25 = a1;
    v26 = v1;
    v30 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCFAC0(0, v7, 0);
    v8 = v30;
    result = sub_1CDFD0128(v6);
    v10 = result;
    v12 = v11;
    v14 = v13 & 1;
    v27 = v6;
    v28 = v6 + 56;
    v15 = v29;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(v6 + 32))
    {
      if (((*(_QWORD *)(v28 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_14;
      if (*(_DWORD *)(v6 + 36) != (_DWORD)v12)
        goto LABEL_15;
      LODWORD(v29) = v14;
      v16 = *(_QWORD *)(v6 + 48);
      v17 = *(_QWORD *)(v15 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v5, v16 + v17 * v10, v3);
      v30 = v8;
      v18 = v3;
      v20 = *(_QWORD *)(v8 + 16);
      v19 = *(_QWORD *)(v8 + 24);
      if (v20 >= v19 >> 1)
      {
        v24 = v18;
        sub_1CDFCFAC0(v19 > 1, v20 + 1, 1);
        v18 = v24;
        v8 = v30;
      }
      *(_QWORD *)(v8 + 16) = v20 + 1;
      v21 = v8
          + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
          + v20 * v17;
      v3 = v18;
      (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v21, v5, v18);
      v6 = v27;
      result = sub_1CDFD01CC(v10, v12, v29 & 1, v27);
      v10 = result;
      v12 = v22;
      v14 = v23 & 1;
      if (!--v7)
      {
        sub_1CDFCD5BC(result, v22, v14);
        result = swift_bridgeObjectRelease();
        a1 = v25;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    *a1 = v8;
  }
  return result;
}

uint64_t sub_1CE077DF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_1CE0B5030();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v25 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 56);
  v22 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v23 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    sub_1CE077BD4(&v24);
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    result = sub_1CE078DD4(v24, (uint64_t (*)(void))sub_1CE09111C, (uint64_t (*)(_QWORD))MEMORY[0x1E0D907B0]);
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v23)
      goto LABEL_26;
    v19 = *(_QWORD *)(v22 + 8 * v15);
    if (!v19)
      break;
LABEL_17:
    v13 = (v19 - 1) & v19;
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 2;
  if (v15 + 2 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 3;
  if (v15 + 3 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 4;
  if (v15 + 4 >= v23)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
LABEL_16:
    v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v23)
      goto LABEL_26;
    v19 = *(_QWORD *)(v22 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1CE078084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_1CE0B5030();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  v25 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 56);
  v22 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v23 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  if (!v13)
    goto LABEL_5;
LABEL_4:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v9, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
    sub_1CE078364(&v24);
    if (v1)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    result = sub_1CE078F4C(v24);
    if (v13)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v23)
      goto LABEL_26;
    v19 = *(_QWORD *)(v22 + 8 * v15);
    if (!v19)
      break;
LABEL_17:
    v13 = (v19 - 1) & v19;
  }
  v20 = v15 + 1;
  if (v15 + 1 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 2;
  if (v15 + 2 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 3;
  if (v15 + 3 >= v23)
    goto LABEL_26;
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
    goto LABEL_16;
  v20 = v15 + 4;
  if (v15 + 4 >= v23)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  v19 = *(_QWORD *)(v22 + 8 * v20);
  if (v19)
  {
LABEL_16:
    v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v23)
      goto LABEL_26;
    v19 = *(_QWORD *)(v22 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t Set<>.themeIdentifiers()(uint64_t a1)
{
  return sub_1CE078318(a1, (void (*)(void))sub_1CE078084, (uint64_t (*)(void))sub_1CDFD0324);
}

uint64_t sub_1CE078318(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4;

  a2();
  v4 = a3();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CE078364@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = sub_1CE0B4244();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v33 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)v29 - v6;
  v7 = sub_1CE0B5024();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v29[0] = a1;
    v29[1] = v1;
    v36 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCF9BC(0, v8, 0);
    result = sub_1CDFD0128(v7);
    v10 = result;
    v12 = v11;
    v14 = v13 & 1;
    v30 = v7;
    v31 = v7 + 56;
    while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(v7 + 32))
    {
      if (((*(_QWORD *)(v31 + (((unint64_t)v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v7 + 36) != (_DWORD)v12)
        goto LABEL_17;
      v16 = v34;
      v15 = v35;
      v17 = *(_QWORD *)(v7 + 48) + *(_QWORD *)(v34 + 72) * v10;
      v18 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v32, v17, v35);
      v19 = v33;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v18, v15);
      v20 = sub_1CE0B4238();
      v22 = v21;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
      v23 = v36;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CDFCF9BC(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = v36;
      }
      v25 = *(_QWORD *)(v23 + 16);
      v24 = *(_QWORD *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1CDFCF9BC(v24 > 1, v25 + 1, 1);
        v23 = v36;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      v26 = v23 + 16 * v25;
      *(_QWORD *)(v26 + 32) = v20;
      *(_QWORD *)(v26 + 40) = v22;
      v7 = v30;
      result = sub_1CDFD01CC(v10, v12, v14 & 1, v30);
      v10 = result;
      v12 = v27;
      v14 = v28 & 1;
      if (!--v8)
      {
        sub_1CDFCD5BC(result, v27, v28 & 1);
        result = swift_bridgeObjectRelease();
        a1 = (_QWORD *)v29[0];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v23 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    *a1 = v23;
  }
  return result;
}

uint64_t sub_1CE0785CC(uint64_t a1)
{
  return sub_1CE078DD4(a1, (uint64_t (*)(void))sub_1CE090E84, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91F50]);
}

uint64_t sub_1CE0785E0(uint64_t a1)
{
  return sub_1CE078640(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91F50], &qword_1EFA5F4C8, (uint64_t (*)(void))sub_1CE090E84);
}

uint64_t sub_1CE0785FC(uint64_t a1)
{
  return sub_1CE078DD4(a1, (uint64_t (*)(void))sub_1CE090E98, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91A30]);
}

uint64_t sub_1CE078610(uint64_t a1)
{
  return sub_1CE078DD4(a1, (uint64_t (*)(void))sub_1CE0910B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91FA0]);
}

uint64_t sub_1CE078624(uint64_t a1)
{
  return sub_1CE078640(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91FA0], &qword_1EFA62C20, (uint64_t (*)(void))sub_1CE0910B8);
}

uint64_t sub_1CE078640(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t result;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  int64_t v50;
  unint64_t v51;
  _QWORD *v52;
  unsigned int v53;
  char *v54;
  uint64_t v55;
  uint64_t (*v56)(unint64_t, char *, uint64_t);
  _QWORD *v57;
  uint64_t (*v58)(_QWORD);
  unint64_t v59;
  int64_t v60;
  int64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  char *v65;
  _QWORD *v66;
  void (*v67)(char *, uint64_t, uint64_t, uint64_t);
  int64_t v68;
  unint64_t v69;
  uint64_t (*v70)(unint64_t, char *, uint64_t);
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  char *v72;
  uint64_t (*v73)(unint64_t, char *, uint64_t);
  unint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  char *v77;
  uint64_t v78;
  uint64_t (*v79)(void);
  uint64_t (*v80)(unint64_t, char *, uint64_t);
  uint64_t (*v81)(unint64_t, char *, uint64_t);
  char *v82;
  int64_t v83;
  unint64_t v84;

  v79 = a4;
  v6 = (int64_t)a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v76 = a3;
  v77 = (char *)&v66 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = MEMORY[0x1E0C80A78](v11);
  v78 = (uint64_t)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v66 - v17;
  v19 = *(_QWORD *)(a1 + 16);
  v20 = *v4;
  v21 = *(_QWORD *)(*v4 + 16);
  v22 = v21 + v19;
  if (__OFADD__(v21, v19))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v75 = v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v4 = v20;
  if (!isUniquelyReferenced_nonNull_native || (v24 = *(_QWORD *)(v20 + 24) >> 1, v24 < v22))
  {
    v20 = v79();
    *v4 = v20;
    v24 = *(_QWORD *)(v20 + 24) >> 1;
  }
  v25 = *(_QWORD *)(v20 + 16);
  v22 = *(_QWORD *)(v9 + 72);
  v26 = v24 - v25;
  v74 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v27 = sub_1CE07909C((uint64_t (**)(unint64_t, char *, uint64_t))&v80, v20 + v74 + v22 * v25, v24 - v25, a1, (uint64_t (*)(_QWORD))v6);
  if (v27 < v19)
    goto LABEL_12;
  if (v27)
  {
    v30 = *(_QWORD *)(v20 + 16);
    v31 = __OFADD__(v30, v27);
    v32 = v30 + v27;
    if (v31)
    {
      __break(1u);
LABEL_17:
      v36 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
      }
      else
      {
        v37 = (unint64_t)(v28 + 64) >> 6;
        v72 = (char *)v6;
        if (v36 >= v37)
          goto LABEL_38;
        v38 = *(_QWORD *)(a1 + 8 * v36);
        if (v38)
        {
LABEL_20:
          v34 = (v38 - 1) & v38;
          v35 = __clz(__rbit64(v38)) + (v36 << 6);
          v6 = v36;
          goto LABEL_15;
        }
        v39 = v6 + 2;
        v72 = (char *)(v6 + 1);
        if (v6 + 2 >= v37)
          goto LABEL_38;
        v16 = v26;
        v38 = *(_QWORD *)(a1 + 8 * v39);
        if (v38)
        {
LABEL_23:
          v36 = v39;
LABEL_24:
          a1 = (uint64_t)v70;
          goto LABEL_20;
        }
        v72 = (char *)(v6 + 2);
        a1 = (uint64_t)v70;
        if (v6 + 3 >= v37)
          goto LABEL_38;
        v38 = *((_QWORD *)v70 + v6 + 3);
        if (v38)
        {
          v36 = v6 + 3;
          goto LABEL_24;
        }
        v39 = v6 + 4;
        v72 = (char *)(v6 + 3);
        a1 = (uint64_t)v70;
        if (v6 + 4 >= v37)
          goto LABEL_38;
        v38 = *((_QWORD *)v70 + v39);
        if (v38)
          goto LABEL_23;
        v36 = v6 + 5;
        v72 = (char *)(v6 + 4);
        a1 = (uint64_t)v70;
        if (v6 + 5 >= v37)
        {
LABEL_38:
          v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v67(v18, 1, 1, v8);
          v34 = 0;
          v6 = (int64_t)v72;
          goto LABEL_39;
        }
        v38 = *((_QWORD *)v70 + v36);
        if (v38)
          goto LABEL_20;
        v72 = (char *)(v37 - 1);
        v40 = (char *)(v6 + 6);
        while ((char *)v37 != v40)
        {
          v38 = *((_QWORD *)v70 + (_QWORD)v40++);
          if (v38)
          {
            v36 = (int64_t)(v40 - 1);
            goto LABEL_24;
          }
        }
      }
      a1 = (uint64_t)v70;
      v26 = v16;
      goto LABEL_38;
    }
    *(_QWORD *)(v20 + 16) = v32;
  }
  if (v27 != v26)
    return sub_1CDFC879C();
LABEL_13:
  v26 = *(_QWORD *)(v20 + 16);
  v29 = v80;
  a1 = (uint64_t)v81;
  v28 = v82;
  v6 = v83;
  v69 = (unint64_t)v82;
  v70 = v81;
  v73 = (uint64_t (*)(unint64_t, char *, uint64_t))v80;
  if (!v84)
    goto LABEL_17;
  v34 = (v84 - 1) & v84;
  v35 = __clz(__rbit64(v84)) | (v83 << 6);
LABEL_15:
  (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v18, v29[6] + v35 * v22, v8);
  v67 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v67(v18, 0, 1, v8);
LABEL_39:
  v72 = (char *)v6;
  v80 = v73;
  v81 = (uint64_t (*)(unint64_t, char *, uint64_t))a1;
  v82 = (char *)v69;
  v83 = v6;
  v84 = v34;
  v41 = v75;
  v42 = v76;
  sub_1CDFB1434((uint64_t)v18, v75, v76);
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v71(v41, 1, v8) == 1)
  {
LABEL_77:
    sub_1CDFB13F8((uint64_t)v18, v42);
    sub_1CDFC879C();
    return sub_1CDFB13F8(v75, v42);
  }
  v43 = v75;
  while (1)
  {
    sub_1CDFB13F8(v43, v42);
    v44 = *v4;
    v45 = *(_QWORD *)(*v4 + 24);
    v46 = v45 >> 1;
    if ((uint64_t)(v45 >> 1) < v26 + 1)
    {
      v44 = ((uint64_t (*)(BOOL))v79)(v45 > 1);
      *v4 = v44;
      v46 = *(_QWORD *)(v44 + 24) >> 1;
    }
    v47 = v78;
    sub_1CDFB1434((uint64_t)v18, v78, v42);
    if (v71(v47, 1, v8) != 1)
      break;
    v48 = v78;
LABEL_47:
    sub_1CDFB13F8(v48, v42);
    v49 = v26;
LABEL_42:
    *(_QWORD *)(*v4 + 16) = v49;
    v43 = v75;
    sub_1CDFB1434((uint64_t)v18, v75, v42);
    if (v71(v43, 1, v8) == 1)
    {
      v72 = (char *)v83;
      v73 = (uint64_t (*)(unint64_t, char *, uint64_t))v80;
      goto LABEL_77;
    }
  }
  v69 = v44 + v74;
  v70 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32);
  if (v26 <= v46)
    v49 = v46;
  else
    v49 = v26;
  v48 = v78;
  v68 = v49;
  while (1)
  {
    v54 = v77;
    v55 = v48;
    v56 = v70;
    v70((unint64_t)v77, (char *)v55, v8);
    if (v26 == v49)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v54, v8);
      v26 = v49;
      goto LABEL_42;
    }
    sub_1CDFB13F8((uint64_t)v18, v42);
    result = v56(v69 + v26 * v22, v54, v8);
    v57 = v80;
    v58 = (uint64_t (*)(_QWORD))v83;
    v72 = v82;
    v73 = v81;
    if (v84)
    {
      v50 = v26;
      v51 = (v84 - 1) & v84;
      v59 = __clz(__rbit64(v84)) | (v83 << 6);
      goto LABEL_57;
    }
    v66 = v80;
    v61 = v83 + 1;
    if (__OFADD__(v83, 1))
      break;
    v62 = (unint64_t)(v82 + 64) >> 6;
    v60 = v83;
    if (v61 < v62)
    {
      v63 = *((_QWORD *)v81 + v61);
      if (v63)
        goto LABEL_61;
      v64 = v83 + 2;
      v60 = v83 + 1;
      if (v83 + 2 < v62)
      {
        v63 = *((_QWORD *)v81 + v64);
        if (v63)
          goto LABEL_64;
        v60 = v83 + 2;
        if (v83 + 3 < v62)
        {
          v63 = *((_QWORD *)v81 + v83 + 3);
          if (v63)
          {
            v61 = v83 + 3;
LABEL_61:
            v50 = v26;
            v51 = (v63 - 1) & v63;
            v59 = __clz(__rbit64(v63)) + (v61 << 6);
            v58 = (uint64_t (*)(_QWORD))v61;
            v57 = v66;
LABEL_57:
            v52 = v57;
            (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v18, v57[6] + v59 * v22, v8);
            v67(v18, 0, 1, v8);
            v60 = (int64_t)v58;
            goto LABEL_53;
          }
          v64 = v83 + 4;
          v60 = v83 + 3;
          if (v83 + 4 < v62)
          {
            v63 = *((_QWORD *)v81 + v64);
            if (v63)
            {
LABEL_64:
              v61 = v64;
              goto LABEL_61;
            }
            v61 = v83 + 5;
            v60 = v83 + 4;
            if (v83 + 5 < v62)
            {
              v63 = *((_QWORD *)v81 + v61);
              if (v63)
                goto LABEL_61;
              v60 = v62 - 1;
              v65 = (char *)(v83 + 6);
              while ((char *)v62 != v65)
              {
                v63 = *((_QWORD *)v81 + (_QWORD)v65++);
                if (v63)
                {
                  v61 = (int64_t)(v65 - 1);
                  goto LABEL_61;
                }
              }
            }
          }
        }
      }
    }
    v50 = v26;
    v67(v18, 1, 1, v8);
    v51 = 0;
    v52 = v66;
LABEL_53:
    v80 = v52;
    v26 = v50 + 1;
    v81 = v73;
    v82 = v72;
    v83 = v60;
    v84 = v51;
    v48 = v78;
    v42 = v76;
    sub_1CDFB1434((uint64_t)v18, v78, v76);
    v53 = v71(v48, 1, v8);
    v49 = v68;
    if (v53 == 1)
      goto LABEL_47;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE078D74(uint64_t a1)
{
  return sub_1CE078DD4(a1, (uint64_t (*)(void))sub_1CE0910CC, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96538]);
}

uint64_t sub_1CE078D88(uint64_t a1)
{
  return sub_1CE078640(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96538], &qword_1EFA61458, (uint64_t (*)(void))sub_1CE0910CC);
}

uint64_t sub_1CE078DA4(uint64_t a1)
{
  return sub_1CE078DD4(a1, (uint64_t (*)(void))sub_1CE0910E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D956C0]);
}

uint64_t sub_1CE078DB8(uint64_t a1)
{
  return sub_1CE078640(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0D956C0], &qword_1EFA62C18, (uint64_t (*)(void))sub_1CE0910E0);
}

uint64_t sub_1CE078DD4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE078F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CE090C80(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE07909C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v33 - v15;
  v40 = a4;
  v19 = *(_QWORD *)(a4 + 56);
  v18 = a4 + 56;
  v17 = v19;
  v38 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 24);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
    a3 = 0;
LABEL_38:
    v32 = v38;
    *a1 = v40;
    a1[1] = v32;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v35 = -1 << *(_BYTE *)(v18 - 24);
  v36 = a1;
  v23 = 0;
  v24 = 0;
  v37 = (unint64_t)(63 - v20) >> 6;
  v34 = v37 - 1;
  v39 = a3;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, *(_QWORD *)(v40 + 48) + v30 * v26, v9);
    v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v16, v13, v9);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v16, v9);
    a3 = v39;
    if (v24 == v39)
      goto LABEL_37;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v27 >= v37)
      goto LABEL_32;
    v28 = *(_QWORD *)(v38 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v37)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v37)
    goto LABEL_32;
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v37)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v37)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    a3 = v24;
LABEL_37:
    v20 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v37)
    {
      v22 = 0;
      v23 = v34;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v38 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t MultiUserSessionIdentities.applyingTimestampOffset(_:)()
{
  sub_1CE0B56D8();
  return sub_1CE0B56E4();
}

uint64_t sub_1CE0793AC()
{
  sub_1CE0B56D8();
  return sub_1CE0B56E4();
}

uint64_t static RemoteParticipant.localIdentifier.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EFA62C28;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static RemoteParticipant.localIdentifier.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EFA62C28 = a1;
  qword_1EFA62C30 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RemoteParticipant.localIdentifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static RemoteParticipant.local.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1CE0B58AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D95218], v0);
  swift_bridgeObjectRetain();
  return sub_1CE0B4D30();
}

uint64_t dispatch thunk of FetchedResourceGating.query()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FetchedResourceGating.fetch()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of FetchedResourceGating.activate(fetching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FetchedResourceGating.deactivate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t CatalogUpdated.requestMode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t CatalogUpdated.init(requestMode:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static CatalogUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for CatalogUpdated(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v6;
  int v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  if (*a1 <= 3u)
    v6 = 3;
  else
    v6 = *a1;
  v7 = v6 - 4;
  if (*a1 < 2u)
    v8 = -1;
  else
    v8 = v7;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CatalogUpdated(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CE07977C + 4 * byte_1CE0C3FF5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CE0797B0 + 4 * byte_1CE0C3FF0[v4]))();
}

uint64_t sub_1CE0797B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0797B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE0797C0);
  return result;
}

uint64_t sub_1CE0797CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE0797D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CE0797D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0797E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t dispatch thunk of ScriptClientProtocol.updateJetPack()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScriptClientProtocol.queryJetPackInfo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t ContentAvailabilityUpdated.init(availability:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t ContentAvailabilityUpdated.availability.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static ContentAvailabilityUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for ContentAvailabilityUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07988C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ContentAvailabilityUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0798D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

_QWORD *SyncClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  type metadata accessor for SyncClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v10;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  result[5] = a1;
  result[6] = a2;
  return result;
}

_QWORD *SyncClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE079EA8(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t SyncClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SyncClient.fetchRemoteSyncables()()
{
  return sub_1CE079B88(234);
}

uint64_t SyncClient.fetchRemoteSyncableCounts(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int16 v12;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 239;
  v11 = a1;
  v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62C68);
  v7 = sub_1CE0B48BC();
  v8 = sub_1CE079F00();
  v9 = sub_1CE079F64();
  return v5(&v12, &v11, v6, v7, v8, v9, MEMORY[0x1E0D91380], MEMORY[0x1E0D91388], ObjectType, v3);
}

uint64_t SyncClient.submitRemoteSyncables()()
{
  return sub_1CE079B88(235);
}

uint64_t SyncClient.startPairedSync()()
{
  return sub_1CE079B88(236);
}

uint64_t sub_1CE079B88(__int16 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  __int16 v6;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v6 = a1;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v3 + 8))(&v6, ObjectType, v3);
}

Swift::Void __swiftcall SyncClient.startSync()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  char v3;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v3 = 33;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 72))(&v3, ObjectType, v1);
}

uint64_t SyncClient.shouldShowUpgradeUI()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 238;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], ObjectType, v1);
}

uint64_t sub_1CE079CB4(uint64_t a1, uint64_t a2)
{
  return sub_1CE079D8C(a1, a2, 234);
}

uint64_t sub_1CE079CBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int16 v12;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 239;
  v11 = a1;
  v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, unint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62C68);
  v7 = sub_1CE0B48BC();
  v8 = sub_1CE079F00();
  v9 = sub_1CE079F64();
  return v5(&v12, &v11, v6, v7, v8, v9, MEMORY[0x1E0D91380], MEMORY[0x1E0D91388], ObjectType, v3);
}

uint64_t sub_1CE079D7C(uint64_t a1, uint64_t a2)
{
  return sub_1CE079D8C(a1, a2, 235);
}

uint64_t sub_1CE079D84(uint64_t a1, uint64_t a2)
{
  return sub_1CE079D8C(a1, a2, 236);
}

uint64_t sub_1CE079D8C(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t ObjectType;
  __int16 v8;

  v5 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  ObjectType = swift_getObjectType();
  v8 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1CE079DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 238;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], ObjectType, v1);
}

uint64_t sub_1CE079E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  char v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 33;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 72))(&v4, ObjectType, v1);
}

_QWORD *sub_1CE079EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *result;

  type metadata accessor for SyncClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a6;
  result[4] = a7;
  result[5] = a2;
  result[6] = a3;
  return result;
}

unint64_t sub_1CE079F00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFA62C70;
  if (!qword_1EFA62C70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA62C68);
    v2[0] = MEMORY[0x1E0D96640];
    v2[1] = MEMORY[0x1E0D96648];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFA62C70);
  }
  return result;
}

unint64_t sub_1CE079F64()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFA62C78;
  if (!qword_1EFA62C78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA62C68);
    v2 = sub_1CE079FC8();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA62C78);
  }
  return result;
}

unint64_t sub_1CE079FC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA62C80;
  if (!qword_1EFA62C80)
  {
    v1 = sub_1CE0B5F6C();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96650], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA62C80);
  }
  return result;
}

uint64_t dispatch thunk of SyncClientProtocol.fetchRemoteSyncables()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncClientProtocol.fetchRemoteSyncableCounts(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SyncClientProtocol.submitRemoteSyncables()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SyncClientProtocol.startPairedSync()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of SyncClientProtocol.shouldShowUpgradeUI()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SyncClientProtocol.startSync()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t method lookup function for SyncClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SyncClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t SessionUpdated.init(sessionUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t SessionUpdated.sessionUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static SessionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for SessionUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07A264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07A2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t SessionDeactivated.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t SessionDeactivated.session.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static SessionDeactivated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for SessionDeactivated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SessionDeactivated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionDeactivated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07A4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionDeactivated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07A544(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t PlaybackUpdated.playback.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5F18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaybackUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PlaybackUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PlaybackUpdated.init(playback:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B5F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for PlaybackUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static PlaybackUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for PlaybackUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B5F18();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PlaybackUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5F18();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B5F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B5F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B5F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PlaybackUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B5F18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07A900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B5F18();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PlaybackUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07A98C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B5F18();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t DistributedSessionActivated.session.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DistributedSessionActivated.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static DistributedSessionActivated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for DistributedSessionActivated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07AA98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DistributedSessionActivated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE07AAE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DistributedSessionActivated()
{
  uint64_t result;

  result = qword_1EFA62F38;
  if (!qword_1EFA62F38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static EngagementRequestProcessor.isAppInstalledRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[40];
  __int128 v15;
  __int128 v16;

  sub_1CDFC74F8(a1, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1050);
  if (!swift_dynamicCast())
    goto LABEL_18;
  v1 = v15;
  v11 = sub_1CE0B4E98();
  sub_1CE0B69BC();
  if (*(_QWORD *)(v1 + 16) && (v2 = sub_1CDFB91C0((uint64_t)v14), (v3 & 1) != 0))
  {
    sub_1CDFC74F8(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v14);
  if (!*((_QWORD *)&v16 + 1))
    goto LABEL_17;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    v9 = 0;
    return v9 & 1;
  }
  v4 = v11;
  v12 = sub_1CE0B4EB0();
  v13 = v5;
  sub_1CE0B69BC();
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_1CDFB91C0((uint64_t)v14), (v7 & 1) != 0))
  {
    sub_1CDFC74F8(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v15);
  }
  else
  {
    v15 = 0u;
    v16 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v14);
  if (!*((_QWORD *)&v16 + 1))
  {
LABEL_17:
    sub_1CDFBFDB4((uint64_t)&v15);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_18;
  if (v12 == sub_1CE0B4EBC() && v13 == v8)
  {
    swift_bridgeObjectRelease_n();
    v9 = 1;
  }
  else
  {
    v9 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v9 & 1;
}

uint64_t static EngagementRequestProcessor.validateEngagementRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[40];
  __int128 v20;
  __int128 v21;

  sub_1CDFC74F8(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1050);
  if (!swift_dynamicCast())
  {
    v5 = sub_1CE0B4A3C();
    sub_1CE07AFF4();
    v6 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(v7, *MEMORY[0x1E0D91760], v5);
    *(_QWORD *)(swift_allocObject() + 16) = v6;
    return sub_1CE0B5C0C();
  }
  v1 = v20;
  v17 = sub_1CE0B4E8C();
  v18 = v2;
  sub_1CE0B69BC();
  if (*(_QWORD *)(v1 + 16) && (v3 = sub_1CDFB91C0((uint64_t)v19), (v4 & 1) != 0))
  {
    sub_1CDFC74F8(*(_QWORD *)(v1 + 56) + 32 * v3, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
  {
    sub_1CDFBFDB4((uint64_t)&v20);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    v10 = sub_1CE0B4A3C();
    sub_1CE07AFF4();
    v11 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0D91768], v10);
    *(_QWORD *)(swift_allocObject() + 16) = v11;
    return sub_1CE0B5C0C();
  }
  v8 = sub_1CE0B62D8();
  if (v8 >= sub_1CE0B4EA4())
  {
    swift_bridgeObjectRelease();
    v14 = sub_1CE0B4A3C();
    sub_1CE07AFF4();
    v15 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0D91750], v14);
    *(_QWORD *)(swift_allocObject() + 16) = v15;
  }
  else
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v17;
    *(_QWORD *)(v9 + 24) = v18;
  }
  return sub_1CE0B5C0C();
}

unint64_t sub_1CE07AFF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA62F70;
  if (!qword_1EFA62F70)
  {
    v1 = sub_1CE0B4A3C();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D91780], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA62F70);
  }
  return result;
}

uint64_t sub_1CE07B03C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1CE07B060()
{
  return sub_1CDFF4900();
}

uint64_t sub_1CE07B074()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE07B098@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for EngagementRequestProcessor()
{
  return &type metadata for EngagementRequestProcessor;
}

id HealthWorkoutSession.__allocating_init(session:healthStore:)(void *a1, _QWORD *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return HealthWorkoutSession.init(session:healthStore:)(a1, a2);
}

unint64_t HealthWorkoutSession.SessionState.state.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

double HealthWorkoutSession.SessionState.elapsedTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t HealthWorkoutSession.SessionState.init(state:elapsedTime:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_DWORD *)a2 = result;
  *(_BYTE *)(a2 + 4) = BYTE4(result) & 1;
  *(double *)(a2 + 8) = a3;
  return result;
}

uint64_t sub_1CE07B150@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62F80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62F88);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v18 - v11;
  v13 = v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream;
  swift_beginAccess();
  sub_1CDFB1434(v13, (uint64_t)v12, &qword_1EFA62F88);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62F98);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v12, v14);
  v16 = sub_1CDFB13F8((uint64_t)v12, &qword_1EFA62F88);
  v18[1] = v18;
  MEMORY[0x1E0C80A78](v16);
  v18[-2] = v1;
  sub_1CE0B4274();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  sub_1CE0B65A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1CE081064((uint64_t)v10, v13, &qword_1EFA62F88);
  return swift_endAccess();
}

uint64_t sub_1CE07B384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(uint64_t);
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631F0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v9 = (uint64_t (**)(uint64_t))(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated);
  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated);
  *v9 = sub_1CE081100;
  v9[1] = (uint64_t (*)(uint64_t))v8;
  return sub_1CDFC2DA0(v10);
}

uint64_t sub_1CE07B468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  char *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B4274();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v26 - v12;
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v14 = sub_1CE0B6080();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED8F0FD0);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v31 = a1;
  v30(v13, a1, v7);
  v15 = sub_1CE0B6068();
  v16 = sub_1CE0B6734();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v28 = v4;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc();
    v29 = a2;
    v20 = v19;
    v34 = v19;
    v27 = v5;
    *(_DWORD *)v18 = 136315138;
    v26[1] = v18 + 4;
    sub_1CDFB1900((unint64_t *)&unk_1EFA63200, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907E8], MEMORY[0x1E0D90800]);
    v21 = sub_1CE0B6C14();
    v33 = sub_1CDFC7270(v21, v22, &v34);
    v5 = v27;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    _os_log_impl(&dword_1CDFAA000, v15, v16, "HealthWorkoutSession: caloriesUpdated: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v20, -1, -1);
    v23 = v18;
    v4 = v28;
    MEMORY[0x1D17C092C](v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }

  v30(v11, v31, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631F0);
  v24 = v32;
  sub_1CE0B6590();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v24, v4);
}

uint64_t sub_1CE07B734(uint64_t a1)
{
  return sub_1CE07BE08(a1, &qword_1EFA62F88, &qword_1EFA62F98, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream);
}

void (*sub_1CE07B750(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62F88);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62F98);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  sub_1CE07B150((uint64_t)v8);
  return sub_1CE07B7F0;
}

void sub_1CE07B7F0(uint64_t a1, char a2)
{
  sub_1CE07BFA8(a1, a2, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream, &qword_1EFA62F88);
}

uint64_t sub_1CE07B804(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, _QWORD *a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  v19 = *a2;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v18, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  v20 = v19 + *a7;
  swift_beginAccess();
  sub_1CE081064((uint64_t)v14, v20, a5);
  return swift_endAccess();
}

uint64_t sub_1CE07B934@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FA8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v18 - v11;
  v13 = v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream;
  swift_beginAccess();
  sub_1CDFB1434(v13, (uint64_t)v12, &qword_1EFA62FA8);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FB8);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a1, v12, v14);
  v16 = sub_1CDFB13F8((uint64_t)v12, &qword_1EFA62FA8);
  v18[1] = v18;
  MEMORY[0x1E0C80A78](v16);
  v18[-2] = v1;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DF07B8], v3);
  sub_1CE0B65A8();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  swift_beginAccess();
  sub_1CE081064((uint64_t)v10, v13, &qword_1EFA62FA8);
  return swift_endAccess();
}

uint64_t sub_1CE07BB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(int *);
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631E0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v9 = (uint64_t (**)(int *))(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated);
  v10 = *(_QWORD *)(a2 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated);
  *v9 = sub_1CE0810B4;
  v9[1] = (uint64_t (*)(int *))v8;
  return sub_1CDFC2DA0(v10);
}

uint64_t sub_1CE07BC44(int *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD v14[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *a1;
  v7 = *((_BYTE *)a1 + 4);
  v8 = *((_QWORD *)a1 + 1);
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F0FD0);
  v10 = sub_1CE0B6068();
  v11 = sub_1CE0B6734();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134217984;
    v14[0] = v8;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v10, v11, "HealthWorkoutSession: sessionStateUpdated: %f", v12, 0xCu);
    MEMORY[0x1D17C092C](v12, -1, -1);
  }

  LODWORD(v14[0]) = v6;
  BYTE4(v14[0]) = v7;
  v14[1] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631E0);
  sub_1CE0B6590();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1CE07BDEC(uint64_t a1)
{
  return sub_1CE07BE08(a1, &qword_1EFA62FA8, &qword_1EFA62FB8, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream);
}

uint64_t sub_1CE07BE08(uint64_t a1, uint64_t *a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v11, a1, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  v14 = v4 + *a4;
  swift_beginAccess();
  sub_1CE081064((uint64_t)v11, v14, a2);
  return swift_endAccess();
}

void (*sub_1CE07BEF4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  void *v8;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FA8);
  v3[7] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FB8);
  v3[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[9] = v6;
  v7 = *(_QWORD *)(v6 + 64);
  v3[10] = malloc(v7);
  v8 = malloc(v7);
  v3[11] = v8;
  sub_1CE07B934((uint64_t)v8);
  return sub_1CE07BF94;
}

void sub_1CE07BF94(uint64_t a1, char a2)
{
  sub_1CE07BFA8(a1, a2, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream, &qword_1EFA62FA8);
}

void sub_1CE07BFA8(uint64_t a1, char a2, _QWORD *a3, uint64_t *a4)
{
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD **)a1;
  v8 = *(void **)(*(_QWORD *)a1 + 80);
  v7 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    v9 = v6[8];
    v10 = v6[9];
    v12 = v6[6];
    v11 = (void *)v6[7];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v10 + 16))(v6[10], v6[11], v9);
    (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v11, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v11, 0, 1, v9);
    v13 = v12 + *a3;
    swift_beginAccess();
    sub_1CE081064((uint64_t)v11, v13, a4);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    v14 = v6[8];
    v15 = v6[9];
    v16 = v6[6];
    v11 = (void *)v6[7];
    (*(void (**)(void *, _QWORD, uint64_t))(v15 + 32))(v11, v6[11], v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    v17 = v16 + *a3;
    swift_beginAccess();
    sub_1CE081064((uint64_t)v11, v17, a4);
    swift_endAccess();
  }
  free(v7);
  free(v8);
  free(v11);
  free(v6);
}

id HealthWorkoutSession.init(session:healthStore:)(void *a1, _QWORD *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v32;
  void *v33;
  id v34;
  _QWORD *v35;
  uint64_t v36;
  id v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  id v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v67;
  char *v68;
  uint64_t inited;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  void *v97;
  objc_class *v98;
  id v99;
  char *v100;
  char *v101;
  _QWORD v102[2];
  id v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t *v115;
  char *v116;
  char *v117;
  void *v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121[3];
  objc_super v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;

  v3 = v2;
  v120 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v110 = (char *)v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v109 = (char *)v102 - v8;
  v9 = sub_1CE0B482C();
  v107 = *(_QWORD *)(v9 - 8);
  v108 = v9;
  MEMORY[0x1E0C80A78](v9);
  v106 = (char *)v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B4B38();
  v104 = *(_QWORD *)(v11 - 8);
  v105 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v102 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B5E04();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v2[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workout];
  v22 = sub_1CE0B5EAC();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v117 = v21;
  v23(v21, 1, 1, v22);
  v24 = (uint64_t *)&v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated];
  *v24 = 0;
  v24[1] = 0;
  v115 = v24;
  v25 = &v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62F98);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56);
  v116 = v25;
  v27(v25, 1, 1, v26);
  v28 = (uint64_t *)&v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated];
  *v28 = 0;
  v28[1] = 0;
  v113 = v28;
  v29 = (uint64_t)&v3[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FB8);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v114 = v29;
  v31(v29, 1, 1, v30);
  sub_1CDFB53C8(0, &qword_1EFA62FE8);
  v119 = v18;
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))(v20, a1, v17);
  v32 = v3;
  v33 = v118;
  v34 = sub_1CDFF4DF0(v20);
  if (!v33)
  {
    v49 = v34;
    v102[0] = v13;
    v102[1] = v16;
    v111 = v17;
    v112 = v32;
    v118 = a1;
    v50 = v120;
    v51 = v120[4];
    __swift_project_boxed_opaque_existential_1(v120, v120[3]);
    v52 = *(uint64_t (**)(void))(v51 + 152);
    v53 = v49;
    v54 = (void *)v52();
    v103 = v53;
    v55 = v54;
    v56 = objc_msgSend(v55, sel_associatedWorkoutBuilder);
    v58 = v50[3];
    v57 = v50[4];
    __swift_project_boxed_opaque_existential_1(v50, v58);
    v59 = (void *)(*(uint64_t (**)(id, uint64_t, uint64_t))(v57 + 160))(v53, v58, v57);

    objc_msgSend(v56, sel_setDataSource_, v59);
    v60 = v112;
    *(_QWORD *)&v112[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession] = v55;
    *(_QWORD *)&v60[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder] = v56;
    v117 = (char *)v55;
    v116 = (char *)v56;
    v61 = sub_1CE0B5C9C();
    v62 = (uint64_t *)&v60[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    *v62 = v61;
    v62[1] = v63;
    v64 = v50[3];
    v65 = v50[4];
    __swift_project_boxed_opaque_existential_1(v50, v64);
    v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 128))(v64, v65) & 1;
    v68 = v106;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63010);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CE0C4210;
    *(_QWORD *)(inited + 32) = 0xD000000000000029;
    *(_QWORD *)(inited + 40) = 0x80000001CE0CC0D0;
    sub_1CE0B5CF0();
    v70 = sub_1CE0B46AC();
    v72 = v71;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v68, v108);
    v73 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v70;
    *(_QWORD *)(inited + 56) = v72;
    *(_QWORD *)(inited + 72) = v73;
    *(_QWORD *)(inited + 80) = 0xD000000000000022;
    *(_QWORD *)(inited + 88) = 0x80000001CE0CAC70;
    *(_QWORD *)(inited + 96) = sub_1CE0B5C9C();
    *(_QWORD *)(inited + 104) = v74;
    *(_QWORD *)(inited + 120) = v73;
    *(_QWORD *)(inited + 128) = 0xD00000000000001ALL;
    *(_QWORD *)(inited + 136) = 0x80000001CE0CC100;
    v75 = sub_1CE0B4B5C();
    *(_QWORD *)(inited + 168) = v73;
    *(_QWORD *)(inited + 144) = v75;
    *(_QWORD *)(inited + 152) = v76;
    if (qword_1EFA5D4B0 != -1)
      swift_once();
    v77 = *(_QWORD *)algn_1EFA62A38;
    *(_QWORD *)(inited + 176) = qword_1EFA62A30;
    *(_QWORD *)(inited + 184) = v77;
    if ((v67 & 1) != 0)
      v78 = 2;
    else
      v78 = 1;
    v79 = MEMORY[0x1E0DEB418];
    *(_QWORD *)(inited + 192) = v78;
    *(_QWORD *)(inited + 216) = v79;
    *(_QWORD *)(inited + 224) = 0xD00000000000002BLL;
    *(_QWORD *)(inited + 232) = 0x80000001CE0CC120;
    swift_bridgeObjectRetain();
    v80 = v109;
    sub_1CE0B5D38();
    v81 = (uint64_t)v80;
    v82 = sub_1CE0B4A90();
    v83 = *(_QWORD *)(v82 - 8);
    v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
    if (v84(v81, 1, v82) == 1)
    {
      sub_1CDFB13F8(v81, (uint64_t *)&unk_1EFA62FC0);
      *(_OWORD *)(inited + 240) = 0u;
      *(_OWORD *)(inited + 256) = 0u;
    }
    else
    {
      v85 = sub_1CE0B4A84();
      *(_QWORD *)(inited + 264) = v73;
      *(_QWORD *)(inited + 240) = v85;
      *(_QWORD *)(inited + 248) = v86;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v82);
    }
    *(_QWORD *)(inited + 272) = 0xD00000000000002CLL;
    *(_QWORD *)(inited + 280) = 0x80000001CE0CC150;
    v87 = (uint64_t)v110;
    sub_1CE0B5D38();
    if (v84(v87, 1, v82) == 1)
    {
      sub_1CDFB13F8(v87, (uint64_t *)&unk_1EFA62FC0);
      v88 = v111;
    }
    else
    {
      v89 = sub_1CE0B4A78();
      v90 = v87;
      v92 = v91;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v90, v82);
      v88 = v111;
      if (v92)
      {
        *(_QWORD *)(inited + 312) = v73;
        *(_QWORD *)(inited + 288) = v89;
        *(_QWORD *)(inited + 296) = v92;
LABEL_23:
        v93 = v118;
        *(_QWORD *)(inited + 320) = sub_1CE0B6278();
        *(_QWORD *)(inited + 328) = v94;
        *(_QWORD *)(inited + 360) = MEMORY[0x1E0DEAFA0];
        *(_BYTE *)(inited + 336) = 1;
        v95 = sub_1CDFE3C28(inited);
        v96 = sub_1CE07CD3C(v95);
        swift_bridgeObjectRelease();
        v97 = v112;
        *(_QWORD *)&v112[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_metadata] = v96;

        v98 = (objc_class *)type metadata accessor for HealthWorkoutSession();
        v122.receiver = v97;
        v122.super_class = v98;
        v99 = objc_msgSendSuper2(&v122, sel_init);
        v100 = v117;
        objc_msgSend(v117, sel_setDelegate_, v99);

        v48 = v99;
        v101 = v116;
        objc_msgSend(v116, sel_setDelegate_, v48);

        (*(void (**)(void *, uint64_t))(v119 + 8))(v93, v88);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v120);
        return v48;
      }
    }
    *(_OWORD *)(inited + 288) = 0u;
    *(_OWORD *)(inited + 304) = 0u;
    goto LABEL_23;
  }
  v35 = v120;
  if (qword_1EFA5D520 != -1)
    swift_once();
  v36 = sub_1CE0B6080();
  __swift_project_value_buffer(v36, (uint64_t)qword_1EFA634C8);
  v37 = v33;
  v38 = v33;
  v39 = sub_1CE0B6068();
  v40 = sub_1CE0B6734();
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc();
    v118 = a1;
    v42 = (uint8_t *)v41;
    v43 = swift_slowAlloc();
    v112 = v32;
    v44 = v43;
    v121[0] = v43;
    *(_DWORD *)v42 = 136315138;
    v111 = v17;
    swift_getErrorValue();
    v45 = MEMORY[0x1D17C0050](v124, v125);
    v123 = sub_1CDFC7270(v45, v46, v121);
    v17 = v111;
    v35 = v120;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v39, v40, "HealthWorkoutSession - failed to make HKWorkoutConfiguration: %s", v42, 0xCu);
    swift_arrayDestroy();
    v47 = v44;
    v32 = v112;
    MEMORY[0x1D17C092C](v47, -1, -1);
    v48 = v118;
    MEMORY[0x1D17C092C](v42, -1, -1);

  }
  else
  {

    v48 = a1;
  }
  swift_willThrow();
  (*(void (**)(id, uint64_t))(v119 + 8))(v48, v17);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  sub_1CDFB13F8((uint64_t)v117, &qword_1EFA62FF0);
  sub_1CDFC2DA0(*v115);
  sub_1CDFB13F8((uint64_t)v116, &qword_1EFA62F88);
  sub_1CDFC2DA0(*v113);
  sub_1CDFB13F8(v114, &qword_1EFA62FA8);

  type metadata accessor for HealthWorkoutSession();
  swift_deallocPartialClassInstance();
  return v48;
}

uint64_t sub_1CE07CD2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE07B384(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CE07CD34(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE07BB60(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CE07CD3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  __int128 *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _OWORD v34[3];
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t *v42;

  v2 = MEMORY[0x1E0DEE9E0];
  v41 = MEMORY[0x1E0DEE9E0];
  v31 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(63 - v3) >> 6;
  v42 = &v35;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_25;
    }
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v30)
      goto LABEL_40;
    v12 = *(_QWORD *)(v31 + 8 * v11);
    v13 = v7 + 1;
    if (!v12)
    {
      v13 = v7 + 2;
      if (v7 + 2 >= v30)
        goto LABEL_40;
      v12 = *(_QWORD *)(v31 + 8 * v13);
      if (!v12)
      {
        v13 = v7 + 3;
        if (v7 + 3 >= v30)
          goto LABEL_40;
        v12 = *(_QWORD *)(v31 + 8 * v13);
        if (!v12)
        {
          v13 = v7 + 4;
          if (v7 + 4 >= v30)
            goto LABEL_40;
          v12 = *(_QWORD *)(v31 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v7 = v13;
LABEL_25:
    v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v17 = *v15;
    v16 = v15[1];
    sub_1CDFB1434(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v40, &qword_1ED8F10C0);
    *(_QWORD *)&v39 = v17;
    *((_QWORD *)&v39 + 1) = v16;
    v37 = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    sub_1CDFB1434((uint64_t)v38, (uint64_t)&v32, &qword_1ED8F10C0);
    if (v33)
    {
      sub_1CDFB96B0(&v32, v36);
      v18 = v37;
      v34[2] = v37;
      sub_1CDFBA448((uint64_t)v38, (uint64_t)v42, &qword_1ED8F10C0);
      sub_1CDFB96B0(v36, v34);
      v19 = *(_QWORD *)(v2 + 16);
      if (*(_QWORD *)(v2 + 24) <= v19)
      {
        v20 = v19 + 1;
        swift_bridgeObjectRetain();
        sub_1CDFE6080(v20, 1);
        v2 = v41;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_1CE0B6D34();
      sub_1CE0B62CC();
      result = sub_1CE0B6D64();
      v21 = v2 + 64;
      v22 = -1 << *(_BYTE *)(v2 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6))) != 0)
      {
        v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v2 + 64 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v28 = v24 == v27;
          if (v24 == v27)
            v24 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v21 + 8 * v24);
        }
        while (v29 == -1);
        v25 = __clz(__rbit64(~v29)) + (v24 << 6);
      }
      *(_QWORD *)(v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(_OWORD *)(*(_QWORD *)(v2 + 48) + 16 * v25) = v18;
      sub_1CDFB96B0(v34, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v25));
      ++*(_QWORD *)(v2 + 16);
      v8 = (__int128 *)v42;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1CDFB13F8((uint64_t)&v37, &qword_1EFA631D8);
      v8 = &v32;
    }
    result = sub_1CDFB13F8((uint64_t)v8, &qword_1ED8F10C0);
  }
  v14 = v7 + 5;
  if (v7 + 5 >= v30)
  {
LABEL_40:
    sub_1CDFC879C();
    return v2;
  }
  v12 = *(_QWORD *)(v31 + 8 * v14);
  if (v12)
  {
    v13 = v7 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v30)
      goto LABEL_40;
    v12 = *(_QWORD *)(v31 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_24;
  }
LABEL_42:
  __break(1u);
  return result;
}

id HealthWorkoutSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthWorkoutSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthWorkoutSession.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthWorkoutSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t HealthWorkoutSession.activate()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 184) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE07D294()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[23] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  v2 = sub_1CE0B620C();
  v0[24] = v2;
  v0[2] = v0;
  v0[3] = sub_1CE07D36C;
  v3 = swift_continuation_init();
  v0[18] = MEMORY[0x1E0C809B0];
  v4 = v0 + 18;
  v4[1] = 0x40000000;
  v4[2] = sub_1CE03C8E4;
  v4[3] = &block_descriptor_16;
  v4[4] = v3;
  objc_msgSend(v1, sel_addMetadata_completion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1CE07D36C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 200) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE07D3CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 184);

  v2 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  *(_QWORD *)(v0 + 80) = v0;
  *(_QWORD *)(v0 + 88) = sub_1CE07D468;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 144) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 144);
  v4[1] = 0x40000000;
  v4[2] = sub_1CE03C8E4;
  v4[3] = &block_descriptor_1;
  v4[4] = v3;
  objc_msgSend(v2, sel_prepareWithCompletion_, v4);
  return swift_continuation_await();
}

uint64_t sub_1CE07D468()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1CE07D4C8()
{
  uint64_t v0;

  sub_1CE07D57C(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07D500()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07D540()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07D57C(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(int *);
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder), sel_elapsedTime);
  v7 = v6;
  sub_1CE0B6650();
  LOBYTE(v13) = 1;
  sub_1CE0B5E7C();
  v8 = sub_1CE0B5EAC();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  v9 = v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workout;
  swift_beginAccess();
  sub_1CE081064((uint64_t)v5, v9, &qword_1EFA62FF0);
  result = swift_endAccess();
  v11 = *(void (**)(int *))(v1 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionStateUpdated);
  if (v11)
  {
    v13 = a1;
    v14 = 1;
    v15 = v7;
    swift_retain();
    v11(&v13);
    return sub_1CDFC2DA0((uint64_t)v11);
  }
  return result;
}

uint64_t HealthWorkoutSession.pause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE07D6F0()
{
  uint64_t v0;
  void *v1;
  char *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint8_t *v8;
  void *v10;
  uint64_t v11;
  id v12;
  os_log_type_t v13;
  _BOOL4 v14;
  void *v15;
  uint8_t *v16;

  v1 = *(void **)(*(_QWORD *)(v0 + 120) + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  v2 = (char *)objc_msgSend(v1, sel_state);
  if ((unint64_t)(v2 - 3) < 4 || v2 == (char *)1)
  {
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v4 = sub_1CE0B6080();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F0FD0);
    v5 = sub_1CE0B6068();
    v6 = sub_1CE0B6734();
    if (!os_log_type_enabled(v5, v6))
      goto LABEL_11;
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1CDFAA000, v5, v6, "HealthWorkoutSession: The workout is not going.", v7, 2u);
    v8 = v7;
    goto LABEL_10;
  }
  if (v2 != (char *)2)
  {
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v10 = *(void **)(v0 + 120);
    v11 = sub_1CE0B6080();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED8F0FD0);
    v12 = v10;
    v5 = sub_1CE0B6068();
    v13 = sub_1CE0B6734();
    v14 = os_log_type_enabled(v5, v13);
    v15 = *(void **)(v0 + 120);
    if (!v14)
    {

      goto LABEL_11;
    }
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 134217984;
    *(_QWORD *)(v0 + 80) = objc_msgSend(v1, sel_state);
    sub_1CE0B68F0();

    _os_log_impl(&dword_1CDFAA000, v5, v13, "HealthWorkoutSession: Unknown HealthWorkoutSession state: %ld", v16, 0xCu);
    v8 = v16;
LABEL_10:
    MEMORY[0x1D17C092C](v8, -1, -1);
LABEL_11:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CE07D998;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_1CE03C8E4;
  *(_QWORD *)(v0 + 104) = &block_descriptor_3;
  objc_msgSend(v1, sel_pauseWithCompletion_, v0 + 80);
  return swift_continuation_await();
}

uint64_t sub_1CE07D998()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 128) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE07D9F8()
{
  uint64_t v0;

  sub_1CE07D57C(1u);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07DA30()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HealthWorkoutSession.resume()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[42] = v0;
  v2 = sub_1CE0B3DF4();
  v1[43] = v2;
  v1[44] = *(_QWORD *)(v2 - 8);
  v1[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE07DACC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  void **v14;
  void *v15;
  uint64_t v16;
  id v17;
  os_log_type_t v18;
  _BOOL4 v19;
  void *v20;
  uint8_t *v21;

  v1 = *(void **)(*(_QWORD *)(v0 + 336) + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  switch((unint64_t)objc_msgSend(v1, sel_state))
  {
    case 1uLL:
    case 5uLL:
      v3 = *(_QWORD *)(v0 + 352);
      v2 = *(_QWORD *)(v0 + 360);
      v4 = *(_QWORD *)(v0 + 344);
      sub_1CE0B3DE8();
      v5 = sub_1CE0B3DAC();
      *(_QWORD *)(v0 + 368) = v5;
      v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      *(_QWORD *)(v0 + 376) = v6;
      v6(v2, v4);
      *(_QWORD *)(v0 + 16) = v0;
      *(_QWORD *)(v0 + 24) = sub_1CE07DE2C;
      v7 = swift_continuation_init();
      *(_QWORD *)(v0 + 248) = MEMORY[0x1E0C809B0];
      v8 = (_QWORD *)(v0 + 248);
      v8[1] = 0x40000000;
      v8[2] = sub_1CE03C8E4;
      v8[3] = &block_descriptor_7_1;
      v8[4] = v7;
      objc_msgSend(v1, sel_startActivityWithDate_completion_, v5, v8);
      return swift_continuation_await();
    case 2uLL:
      goto LABEL_16;
    case 3uLL:
    case 6uLL:
      if (qword_1ED8F0EB0 != -1)
        swift_once();
      v9 = sub_1CE0B6080();
      __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F0FD0);
      v10 = sub_1CE0B6068();
      v11 = sub_1CE0B6734();
      if (!os_log_type_enabled(v10, v11))
        goto LABEL_15;
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1CDFAA000, v10, v11, "HealthWorkoutSession: The workout has ended. Cannot resume.", v12, 2u);
      v13 = v12;
      goto LABEL_11;
    case 4uLL:
      *(_QWORD *)(v0 + 80) = v0;
      *(_QWORD *)(v0 + 88) = sub_1CE07E010;
      *(_QWORD *)(v0 + 320) = swift_continuation_init();
      *(_QWORD *)(v0 + 288) = MEMORY[0x1E0C809B0];
      *(_QWORD *)(v0 + 296) = 0x40000000;
      *(_QWORD *)(v0 + 304) = sub_1CE03C8E4;
      *(_QWORD *)(v0 + 312) = &block_descriptor_5_0;
      objc_msgSend(v1, sel_resumeWithCompletion_, v0 + 288);
      return swift_continuation_await();
    default:
      v14 = (void **)(v0 + 336);
      if (qword_1ED8F0EB0 != -1)
        swift_once();
      v15 = *v14;
      v16 = sub_1CE0B6080();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED8F0FD0);
      v17 = v15;
      v10 = sub_1CE0B6068();
      v18 = sub_1CE0B6734();
      v19 = os_log_type_enabled(v10, v18);
      v20 = *v14;
      if (v19)
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v21 = 134217984;
        *(_QWORD *)(v0 + 328) = objc_msgSend(v1, sel_state);
        sub_1CE0B68F0();

        _os_log_impl(&dword_1CDFAA000, v10, v18, "HealthWorkoutSession: Unknown HealthWorkoutSession state: %ld", v21, 0xCu);
        v13 = v21;
LABEL_11:
        MEMORY[0x1D17C092C](v13, -1, -1);
      }
      else
      {

      }
LABEL_15:

LABEL_16:
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CE07DE2C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 384) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE07DE8C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 376);
  v2 = *(_QWORD *)(v0 + 360);
  v4 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 344);

  v5 = *(void **)(v4 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  sub_1CE0B3DE8();
  v6 = sub_1CE0B3DAC();
  *(_QWORD *)(v0 + 392) = v6;
  v1(v2, v3);
  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_1CE07DF68;
  v7 = swift_continuation_init();
  *(_QWORD *)(v0 + 208) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 216) = 0x40000000;
  *(_QWORD *)(v0 + 224) = sub_1CE03C8E4;
  *(_QWORD *)(v0 + 232) = &block_descriptor_8;
  *(_QWORD *)(v0 + 240) = v7;
  objc_msgSend(v5, sel_beginCollectionWithStartDate_completion_, v6, v0 + 208);
  return swift_continuation_await();
}

uint64_t sub_1CE07DF68()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 400) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_1CE07DFC8()
{
  uint64_t v0;

  sub_1CE07D57C(0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07E010()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 408) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1CE07E070()
{
  uint64_t v0;

  sub_1CE07D57C(0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07E0B0()
{
  uint64_t v0;

  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07E0F4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 368);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07E140()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 392);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HealthWorkoutSession.deactivate()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[73] = v0;
  v2 = sub_1CE0B3DF4();
  v1[74] = v2;
  v1[75] = *(_QWORD *)(v2 - 8);
  v1[76] = swift_task_alloc();
  v1[77] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE07E1F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  void *v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  void *v23;
  unint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  id v29;
  uint8_t *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t type;
  uint64_t v38;

  sub_1CE0B3DE8();
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v1 = v0[77];
  v2 = v0[76];
  v3 = v0[75];
  v4 = v0[74];
  v5 = (id *)(v0 + 73);
  v6 = (void *)v0[73];
  v7 = sub_1CE0B6080();
  v0[78] = __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F0FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v8 = v6;
  v9 = sub_1CE0B6068();
  v10 = sub_1CE0B6734();
  v11 = os_log_type_enabled(v9, v10);
  v12 = v0[76];
  v13 = v0[75];
  v14 = v0[74];
  v15 = (char *)v0[73];
  if (v11)
  {
    type = v10;
    v35 = v0[75];
    v16 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v38 = v36;
    *(_DWORD *)v16 = 136315394;
    v17 = v12;
    v19 = *(_QWORD *)&v15[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
    swift_bridgeObjectRetain();
    v0[71] = sub_1CDFC7270(v19, v18, &v38);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v16 + 12) = 2080;
    sub_1CDFB1900((unint64_t *)&unk_1EFA63040, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v20 = sub_1CE0B6C14();
    v0[72] = sub_1CDFC7270(v20, v21, &v38);
    v5 = (id *)(v0 + 73);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    v22 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v22(v17, v14);
    _os_log_impl(&dword_1CDFAA000, v9, type, "HealthWorkoutSession: Ending workout: %s at %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v36, -1, -1);
    MEMORY[0x1D17C092C](v16, -1, -1);
  }
  else
  {

    v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(v12, v14);
  }

  v0[79] = v22;
  v23 = *(void **)(v0[73] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workoutSession);
  v0[80] = v23;
  v24 = (unint64_t)objc_msgSend(v23, sel_state);
  if (v24 > 6)
    goto LABEL_10;
  if (((1 << v24) & 0x14) != 0)
  {
    v31 = sub_1CE0B3DAC();
    v0[82] = v31;
    v0[26] = v0;
    v0[27] = sub_1CE07E848;
    v0[66] = swift_continuation_init();
    v0[62] = MEMORY[0x1E0C809B0];
    v0[63] = 0x40000000;
    v0[64] = sub_1CE03C8E4;
    v0[65] = &block_descriptor_12;
    objc_msgSend(v23, sel_stopActivityWithDate_completion_, v31, v0 + 62);
  }
  else
  {
    if (((1 << v24) & 0x22) == 0)
    {
      if (((1 << v24) & 0x48) != 0)
      {
LABEL_16:
        v32 = *(void **)(v0[73] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
        v0[85] = v32;
        v33 = sub_1CE0B3DAC();
        v0[86] = v33;
        v0[2] = v0;
        v0[3] = sub_1CE07E9A8;
        v0[56] = swift_continuation_init();
        v0[52] = MEMORY[0x1E0C809B0];
        v0[53] = 0x40000000;
        v0[54] = sub_1CE03C8E4;
        v0[55] = &block_descriptor_9_0;
        objc_msgSend(v32, sel_endCollectionWithEndDate_completion_, v33, v0 + 52);
        return swift_continuation_await();
      }
LABEL_10:
      v25 = *v5;
      v26 = sub_1CE0B6068();
      v27 = sub_1CE0B6734();
      v28 = os_log_type_enabled(v26, v27);
      v29 = *v5;
      if (v28)
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v30 = 134217984;
        v0[69] = objc_msgSend(v23, sel_state);
        sub_1CE0B68F0();

        _os_log_impl(&dword_1CDFAA000, v26, v27, "HealthWorkoutSession: Unknown HealthWorkoutSession state: %ld", v30, 0xCu);
        MEMORY[0x1D17C092C](v30, -1, -1);
      }
      else
      {

      }
      goto LABEL_16;
    }
    v0[10] = v0;
    v0[11] = sub_1CE07E72C;
    v0[51] = swift_continuation_init();
    v0[47] = MEMORY[0x1E0C809B0];
    v0[48] = 0x40000000;
    v0[49] = sub_1CE03C8E4;
    v0[50] = &block_descriptor_14;
    objc_msgSend(v23, sel_endWithCompletion_, v0 + 47);
  }
  return swift_continuation_await();
}

uint64_t sub_1CE07E72C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 648) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_1CE07E78C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0[73] + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  v0[85] = v1;
  v2 = sub_1CE0B3DAC();
  v0[86] = v2;
  v0[2] = v0;
  v0[3] = sub_1CE07E9A8;
  v0[56] = swift_continuation_init();
  v0[52] = MEMORY[0x1E0C809B0];
  v0[53] = 0x40000000;
  v0[54] = sub_1CE03C8E4;
  v0[55] = &block_descriptor_9_0;
  objc_msgSend(v1, sel_endCollectionWithEndDate_completion_, v2, v0 + 52);
  return swift_continuation_await();
}

uint64_t sub_1CE07E848()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 664) = *(_QWORD *)(*(_QWORD *)v0 + 240);
  return swift_task_switch();
}

uint64_t sub_1CE07E8A8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 640);

  *(_QWORD *)(v0 + 144) = v0;
  *(_QWORD *)(v0 + 152) = sub_1CE07E948;
  *(_QWORD *)(v0 + 488) = swift_continuation_init();
  *(_QWORD *)(v0 + 456) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 464) = 0x40000000;
  *(_QWORD *)(v0 + 472) = sub_1CE03C8E4;
  *(_QWORD *)(v0 + 480) = &block_descriptor_13;
  objc_msgSend(v1, sel_endWithCompletion_, v0 + 456);
  return swift_continuation_await();
}

uint64_t sub_1CE07E948()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 672) = *(_QWORD *)(*(_QWORD *)v0 + 176);
  return swift_task_switch();
}

uint64_t sub_1CE07E9A8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 696) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE07EA08()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  void *v4;
  double v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  char *v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(void **)(v0 + 680);

  objc_msgSend(v1, sel_elapsedTime);
  v3 = v2;
  if (qword_1EFA5D490 != -1)
    swift_once();
  v4 = *(void **)(v0 + 584);
  v5 = sub_1CDFD38F0(byte_1EFA605A0, *(double *)&qword_1EFA605A8);
  v6 = v4;
  v7 = sub_1CE0B6068();
  v8 = sub_1CE0B6734();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(char **)(v0 + 584);
  if (v5 >= v3)
  {
    if (v9)
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v24 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = *(_QWORD *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
      v18 = *(_QWORD *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 536) = sub_1CDFC7270(v17, v18, &v24);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v7, v8, "HealthWorkoutSession: Discarding workout: %s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v16, -1, -1);
      MEMORY[0x1D17C092C](v15, -1, -1);
    }
    else
    {

    }
    objc_msgSend(*(id *)(v0 + 680), sel_discardWorkout);
    v21 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
    v22 = *(_QWORD *)(v0 + 616);
    v23 = *(_QWORD *)(v0 + 592);
    sub_1CE07D57C(4u);
    v21(v22, v23);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (v9)
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v24 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = *(_QWORD *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
      v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 560) = sub_1CDFC7270(v13, v14, &v24);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v7, v8, "HealthWorkoutSession: Saving workout: %s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v12, -1, -1);
      MEMORY[0x1D17C092C](v11, -1, -1);
    }
    else
    {

    }
    v19 = *(void **)(v0 + 680);
    *(_QWORD *)(v0 + 312) = v0 + 544;
    *(_QWORD *)(v0 + 272) = v0;
    *(_QWORD *)(v0 + 280) = sub_1CE07EDC8;
    *(_QWORD *)(v0 + 368) = swift_continuation_init();
    *(_QWORD *)(v0 + 336) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 344) = 0x40000000;
    *(_QWORD *)(v0 + 352) = sub_1CE07F0E4;
    *(_QWORD *)(v0 + 360) = &block_descriptor_11;
    objc_msgSend(v19, sel_finishWorkoutWithCompletion_, v0 + 336);
    return swift_continuation_await();
  }
}

uint64_t sub_1CE07EDC8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 704) = *(_QWORD *)(*(_QWORD *)v0 + 304);
  return swift_task_switch();
}

uint64_t sub_1CE07EE28()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 592);
  sub_1CE07D57C(3u);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07EEA4()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 592);
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07EF14()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 656);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v3 = *(_QWORD *)(v0 + 616);
  v4 = *(_QWORD *)(v0 + 592);
  swift_willThrow();
  v2(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07EF8C()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 592);
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07EFFC()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 688);
  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v3 = *(_QWORD *)(v0 + 616);
  v4 = *(_QWORD *)(v0 + 592);
  swift_willThrow();
  v2(v3, v4);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07F074()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 632);
  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 592);
  swift_willThrow();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE07F0E4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_1CDFBA448((uint64_t)&v10, v8, &qword_1EFA631D0);
    return swift_continuation_throwingResume();
  }
}

id HealthWorkoutSession.makeQuantityQuery(type:callback:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[6];

  v4 = v3;
  sub_1CDFB53C8(0, (unint64_t *)&qword_1EFA5D9F8);
  v8 = (void *)MEMORY[0x1D17BFAB0](a1);
  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_builder);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = objc_allocWithZone(MEMORY[0x1E0CB6DF8]);
  v15[4] = sub_1CE080590;
  v15[5] = v10;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_1CE0804CC;
  v15[3] = &block_descriptor_15;
  v12 = _Block_copy(v15);
  swift_retain();
  v13 = objc_msgSend(v11, sel_initWithQuantityType_workoutBuilder_quantitiesAddedHandler_, v8, v9, v12);

  _Block_release(v12);
  swift_release();
  return v13;
}

void sub_1CE07F2B4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void *, _QWORD))
{
  id v6;
  void *v7;
  unsigned __int8 v8;

  swift_bridgeObjectRetain();
  v6 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631C8);
  sub_1CE0B6D7C();
  a4(v7, v8);
  sub_1CDFE14EC(v7, v8);
}

uint64_t sub_1CE07F33C@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE07B150(a1);
}

uint64_t sub_1CE07F35C@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE07B934(a1);
}

uint64_t sub_1CE07F37C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[23] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE07F3DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[15] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE07F43C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD38;
  return HealthWorkoutSession.resume()();
}

uint64_t sub_1CE07F484()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD3C;
  return HealthWorkoutSession.deactivate()();
}

id sub_1CE07F4CC(void *a1, uint64_t a2, uint64_t a3)
{
  return HealthWorkoutSession.makeQuantityQuery(type:callback:)(a1, a2, a3);
}

uint64_t HealthWorkoutSession.workoutBuilder(_:didCollectDataOf:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  uint64_t v34;
  double v35;
  char v36;
  double v37;
  double v38;
  double v39;
  char v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  void (*v49)(char *);
  _QWORD v50[4];
  void *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[4];

  v3 = v2;
  v6 = sub_1CE0B4274();
  v55 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B5EAC();
  v56 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v53 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v14 = sub_1CE0B6080();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED8F0FD0);
  swift_bridgeObjectRetain_n();
  v16 = sub_1CE0B6068();
  v17 = sub_1CE0B6710();
  v18 = os_log_type_enabled(v16, v17);
  v54 = v8;
  if (v18)
  {
    v50[2] = v15;
    v19 = swift_slowAlloc();
    v50[3] = a1;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc();
    v51 = v3;
    v22 = v21;
    v59[0] = v21;
    *(_DWORD *)v20 = 136315138;
    v50[1] = v20 + 4;
    sub_1CDFB53C8(0, (unint64_t *)&unk_1ED8F0E48);
    v52 = v6;
    sub_1CE080598();
    v23 = v9;
    swift_bridgeObjectRetain();
    v24 = sub_1CE0B6698();
    v26 = v25;
    swift_bridgeObjectRelease();
    v27 = v24;
    v9 = v23;
    v58 = sub_1CDFC7270(v27, v26, v59);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    v6 = v52;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v16, v17, "Got event for %s types.", v20, 0xCu);
    swift_arrayDestroy();
    v28 = v22;
    v3 = v51;
    MEMORY[0x1D17C092C](v28, -1, -1);
    MEMORY[0x1D17C092C](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v29 = sub_1CE07FABC(a2);
  v30 = (uint64_t)v3 + OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_workout;
  swift_beginAccess();
  sub_1CDFB1434(v30, (uint64_t)v13, &qword_1EFA62FF0);
  v31 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v13, 1, v9))
  {
    result = sub_1CDFB13F8((uint64_t)v13, &qword_1EFA62FF0);
  }
  else
  {
    v33 = v53;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v53, v13, v9);
    sub_1CDFB13F8((uint64_t)v13, &qword_1EFA62FF0);
    v34 = sub_1CE0B5E94();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v9);
    LODWORD(v58) = v34;
    BYTE4(v58) = BYTE4(v34) & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63050);
    sub_1CE0B42C8();
    result = v57;
    if (v57 != 5)
      result = sub_1CE07D57C(v57);
  }
  if ((v29 & 1) != 0)
  {
    v35 = COERCE_DOUBLE(sub_1CE07FE94((void *)*MEMORY[0x1E0CB5A88]));
    v37 = 0.0;
    if ((v36 & 1) != 0)
      v38 = 0.0;
    else
      v38 = v35;
    v39 = COERCE_DOUBLE(sub_1CE07FE94((void *)*MEMORY[0x1E0CB5A48]));
    if ((v40 & 1) == 0)
      v37 = v39;
    v41 = v3;
    v42 = sub_1CE0B6068();
    v43 = sub_1CE0B6734();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v58 = v45;
      *(_DWORD *)v44 = 136315650;
      v46 = *(_QWORD *)&v41[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
      v47 = *(_QWORD *)&v41[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
      swift_bridgeObjectRetain();
      v57 = sub_1CDFC7270(v46, v47, &v58);
      sub_1CE0B68F0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2048;
      v57 = *(_QWORD *)&v38;
      sub_1CE0B68F0();
      *(_WORD *)(v44 + 22) = 2048;
      v57 = *(_QWORD *)&v37;
      sub_1CE0B68F0();
      _os_log_impl(&dword_1CDFAA000, v42, v43, "HealthWorkoutSession: Updating calories for session %s: Basal: %f Active: %f", (uint8_t *)v44, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v45, -1, -1);
      MEMORY[0x1D17C092C](v44, -1, -1);

    }
    else
    {

    }
    v48 = v54;
    sub_1CE0B6650();
    sub_1CE0B425C();
    v49 = *(void (**)(char *))&v41[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_caloriesUpdated];
    if (v49)
    {
      swift_retain();
      v49(v48);
      sub_1CDFC2DA0((uint64_t)v49);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v48, v6);
  }
  return result;
}

uint64_t sub_1CE07FABC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1CE0B6968();
    sub_1CDFB53C8(0, (unint64_t *)&unk_1ED8F0E48);
    sub_1CE080598();
    result = sub_1CE0B66BC();
    v1 = v29;
    v28 = v30;
    v4 = v31;
    v3 = v32;
    v5 = v33;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v28 = a1 + 56;
    v4 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v3 = 0;
  }
  v27 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    v22 = v3;
    if (v1 < 0)
    {
      v26 = sub_1CE0B698C();
      if (!v26)
        goto LABEL_34;
      sub_1CDFB53C8(0, (unint64_t *)&unk_1ED8F0E48);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v11 = v34;
      swift_unknownObjectRelease();
      v9 = v5;
      if (!v34)
        goto LABEL_33;
      goto LABEL_10;
    }
    if (!v5)
      break;
    v9 = (v5 - 1) & v5;
    v10 = __clz(__rbit64(v5)) | (v3 << 6);
LABEL_9:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_33;
LABEL_10:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CE0C4220;
    v13 = v1;
    *(_QWORD *)(inited + 32) = sub_1CE0B6278();
    *(_QWORD *)(inited + 40) = v14;
    *(_QWORD *)(inited + 48) = sub_1CE0B6278();
    *(_QWORD *)(inited + 56) = v15;
    v5 = v9;
    v16 = sub_1CDFE8AE0(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v17 = objc_msgSend(v11, sel_identifier);
    v18 = sub_1CE0B6278();
    v20 = v19;

    v21 = v18;
    v1 = v13;
    LOBYTE(v17) = sub_1CDFF5308(v21, v20, v16);

    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      v26 = 1;
      goto LABEL_34;
    }
  }
  v23 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v23 >= v27)
      goto LABEL_33;
    v24 = *(_QWORD *)(v28 + 8 * v23);
    ++v3;
    if (!v24)
    {
      v3 = v22 + 2;
      if (v22 + 2 >= v27)
        goto LABEL_33;
      v24 = *(_QWORD *)(v28 + 8 * v3);
      if (!v24)
      {
        v3 = v22 + 3;
        if (v22 + 3 >= v27)
          goto LABEL_33;
        v24 = *(_QWORD *)(v28 + 8 * v3);
        if (!v24)
        {
          v3 = v22 + 4;
          if (v22 + 4 >= v27)
            goto LABEL_33;
          v24 = *(_QWORD *)(v28 + 8 * v3);
          if (!v24)
          {
            v3 = v22 + 5;
            if (v22 + 5 >= v27)
              goto LABEL_33;
            v24 = *(_QWORD *)(v28 + 8 * v3);
            if (!v24)
            {
              v25 = v22 + 6;
              while (v27 != v25)
              {
                v24 = *(_QWORD *)(v28 + 8 * v25++);
                if (v24)
                {
                  v3 = v25 - 1;
                  goto LABEL_28;
                }
              }
LABEL_33:
              v26 = 0;
LABEL_34:
              sub_1CDFC879C();
              return v26;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v24 - 1) & v24;
    v10 = __clz(__rbit64(v24)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE07FE94(void *a1)
{
  void *v1;
  void *v2;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  sub_1CDFB53C8(0, (unint64_t *)&qword_1EFA5D9F8);
  v4 = (void *)MEMORY[0x1D17BFAB0](a1);
  v5 = objc_msgSend(v2, sel_statisticsForType_, v4);

  if (v5)
  {
    v6 = objc_msgSend(v5, sel_sumQuantity);
    if (v6)
    {
      v7 = v6;
      v8 = objc_msgSend((id)objc_opt_self(), sel_kilocalorieUnit);
      objc_msgSend(v7, sel_doubleValueForUnit_, v8);
      v10 = v9;

      return v10;
    }

  }
  return 0;
}

Swift::Void __swiftcall HealthWorkoutSession.workoutBuilderDidCollectEvent(_:)(HKLiveWorkoutBuilder a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  NSObject *oslog;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F0FD0);
  oslog = sub_1CE0B6068();
  v2 = sub_1CE0B6734();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1CDFAA000, oslog, v2, "HealthWorkoutSession: Workout Builder Collected Event.", v3, 2u);
    MEMORY[0x1D17C092C](v3, -1, -1);
  }

}

Swift::Void __swiftcall HealthWorkoutSession.workoutBuilder(_:didEnd:)(HKLiveWorkoutBuilder _, HKWorkoutActivity didEnd)
{
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F0FD0);
  v3._countAndFlagsBits = 0xD000000000000072;
  v3._object = (void *)0x80000001CE0CC270;
  v4._object = (void *)0x80000001CE0CC2F0;
  v4._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v3, v4);
  sub_1CE07D57C(3u);
}

void HealthWorkoutSession.workoutSession(_:didChangeTo:from:date:)()
{
  sub_1CE0805F0();
}

void HealthWorkoutSession.workoutSession(_:didFailWithError:)(uint64_t a1, void *a2)
{
  sub_1CE0808CC(a2);
}

uint64_t type metadata accessor for HealthWorkoutSession()
{
  uint64_t result;

  result = qword_1EFA630D0;
  if (!qword_1EFA630D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0804CC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1CDFB53C8(0, &qword_1EFA631C0);
    v5 = sub_1CE0B6440();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE08056C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CE080590(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1CE07F2B4(a1, a2, a3, *(void (**)(void *, _QWORD))(v3 + 16));
}

unint64_t sub_1CE080598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA63060;
  if (!qword_1EFA63060)
  {
    v1 = sub_1CDFB53C8(255, (unint64_t *)&unk_1ED8F0E48);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA63060);
  }
  return result;
}

void sub_1CE0805F0()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v1 = (id)HKWorkoutSessionStateToString();
  v2 = sub_1CE0B6278();
  v4 = v3;

  v5 = (id)HKWorkoutSessionStateToString();
  v6 = sub_1CE0B6278();
  v8 = v7;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F0FD0);
  v17 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_1CE0B6068();
  v11 = sub_1CE0B6734();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v18 = v13;
    *(_DWORD *)v12 = 136315650;
    v16 = v6;
    v15 = *(_QWORD *)&v17[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    v14 = *(_QWORD *)&v17[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v15, v14, &v18);
    sub_1CE0B68F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v2, v4, &v18);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v12 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v16, v8, &v18);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CDFAA000, v10, v11, "HealthWorkoutSession (%s) changed from %s to %s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v13, -1, -1);
    MEMORY[0x1D17C092C](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
}

void sub_1CE0808CC(void *a1)
{
  void *v1;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  NSObject *oslog;
  uint64_t v15;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4 = a1;
  v5 = a1;
  v6 = v1;
  oslog = sub_1CE0B6068();
  v7 = sub_1CE0B671C();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v8 = 136315394;
    v10 = *(_QWORD *)&v6[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier];
    v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession_sessionIdentifier + 8];
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v10, v11, &v15);
    sub_1CE0B68F0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    swift_getErrorValue();
    v12 = MEMORY[0x1D17C0050]();
    sub_1CDFC7270(v12, v13, &v15);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, oslog, v7, "HealthWorkoutSession (%s) error: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v9, -1, -1);
    MEMORY[0x1D17C092C](v8, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1CE080B08@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE07B150(a1);
}

uint64_t sub_1CE080B28(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE07B804(a1, a2, a3, a4, &qword_1EFA62F88, &qword_1EFA62F98, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___calorieStream);
}

uint64_t sub_1CE080B54@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE07B934(a1);
}

uint64_t sub_1CE080B74(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1CE07B804(a1, a2, a3, a4, &qword_1EFA62FA8, &qword_1EFA62FB8, &OBJC_IVAR____TtC13SeymourClient20HealthWorkoutSession____lazy_storage___sessionStateStream);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.calorieStream.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.sessionStateStream.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.activate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 24) + *(_QWORD *)(a2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.pause()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 32) + *(_QWORD *)(a2 + 32));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.resume()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 40) + *(_QWORD *)(a2 + 40));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.deactivate()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 48) + *(_QWORD *)(a2 + 48));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD3C;
  return v7(a1, a2);
}

uint64_t dispatch thunk of HealthWorkoutSessionProtocol.makeQuantityQuery(type:callback:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_1CE080D68()
{
  return type metadata accessor for HealthWorkoutSession();
}

void sub_1CE080D70()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1CE080F2C();
  if (v0 <= 0x3F)
  {
    sub_1CE080F80(319, &qword_1EFA630E8, &qword_1EFA62F98);
    if (v1 <= 0x3F)
    {
      sub_1CE080F80(319, &qword_1EFA630F0, &qword_1EFA62FB8);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for HealthWorkoutSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthWorkoutSession.calorieStream.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of HealthWorkoutSession.calorieStream.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of HealthWorkoutSession.calorieStream.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of HealthWorkoutSession.sessionStateStream.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of HealthWorkoutSession.sessionStateStream.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of HealthWorkoutSession.sessionStateStream.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of HealthWorkoutSession.__allocating_init(session:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

void sub_1CE080F2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFA630E0)
  {
    sub_1CE0B5EAC();
    v0 = sub_1CE0B68A8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFA630E0);
  }
}

void sub_1CE080F80(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1CE0B68A8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for HealthWorkoutSession.SessionState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthWorkoutSession.SessionState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)(result + 4) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthWorkoutSession.SessionState()
{
  return &type metadata for HealthWorkoutSession.SessionState;
}

uint64_t sub_1CE081064(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CE0810A8()
{
  return objectdestroy_2Tm(&qword_1EFA631E0);
}

uint64_t sub_1CE0810B4(int *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631E0);
  return sub_1CE07BC44(a1);
}

uint64_t sub_1CE0810F4()
{
  return objectdestroy_2Tm(&qword_1EFA631F0);
}

uint64_t sub_1CE081100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA631F0) - 8) + 80);
  return sub_1CE07B468(a1, v1 + ((v3 + 16) & ~v3));
}

_QWORD *CatalogClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE0849F8(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t CatalogClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE084C70);
}

uint64_t sub_1CE081284(char *a1)
{
  char v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v9;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v4 = sub_1CE0B6080();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1870);
    v5._countAndFlagsBits = 0xD000000000000066;
    v5._object = (void *)0x80000001CE0CC430;
    v6._object = (void *)0x80000001CE0CCCE0;
    v6._countAndFlagsBits = 0xD000000000000018;
    Logger.trace(file:function:)(v5, v6);
    v7 = *(_QWORD *)(v3 + 48);
    ObjectType = swift_getObjectType();
    v9 = v1;
    (*(void (**)(char *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(&v9, &type metadata for CatalogUpdated, &protocol witness table for CatalogUpdated, ObjectType, v7);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE08138C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v11 = sub_1CE0B6080();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED8F1870);
    v12._object = (void *)0x80000001CE0CC430;
    v12._countAndFlagsBits = 0xD000000000000066;
    v13._countAndFlagsBits = a2;
    v13._object = a3;
    Logger.trace(file:function:)(v12, v13);
    v14 = *(_QWORD *)(v10 + 48);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(ObjectType, a4, a5, ObjectType, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE081488(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v10;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v4 = sub_1CE0B6080();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1870);
    v5._countAndFlagsBits = 0xD000000000000066;
    v5._object = (void *)0x80000001CE0CC430;
    v6._object = (void *)0x80000001CE0CCC80;
    v6._countAndFlagsBits = 0xD000000000000030;
    Logger.trace(file:function:)(v5, v6);
    v7 = *(_QWORD *)(v3 + 48);
    ObjectType = swift_getObjectType();
    v10 = v1;
    v9 = *(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v9(&v10, &type metadata for CatalogTipJournalsUpdated, &protocol witness table for CatalogTipJournalsUpdated, ObjectType, v7);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CE0815AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0F70);
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE081614()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t (*v16)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  __int16 v17;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = v0[9];
  v2 = v0[6];
  v3 = v0[3];
  v4 = sub_1CE0B6080();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1870);
  v5._countAndFlagsBits = 0xD000000000000032;
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CCC40;
  Logger.trace(file:function:)(v6, v5);
  v7 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v17 = 98;
  v0[2] = v3;
  v9 = *(void (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 32);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0FA8);
  v11 = sub_1CDFB0260(&qword_1ED8F0FB0, &qword_1ED8F0FA8, MEMORY[0x1E0D93F68], MEMORY[0x1E0D93F70]);
  v12 = sub_1CE085040();
  v9(&v17, v0 + 2, MEMORY[0x1E0DEB418], v10, MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], v11, v12, ObjectType, v7);
  v13 = swift_task_alloc();
  v0[10] = v13;
  *(_QWORD *)(v13 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourClient/Catalog/Client/CatalogClient.swift";
  *(_QWORD *)(v13 + 24) = 102;
  *(_BYTE *)(v13 + 32) = 2;
  *(_QWORD *)(v13 + 40) = 66;
  *(_QWORD *)(v13 + 48) = v1;
  v16 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFA5E060
                                                                                     + dword_1EFA5E060);
  v14 = (_QWORD *)swift_task_alloc();
  v0[11] = v14;
  *v14 = v0;
  v14[1] = sub_1CE0817F8;
  return v16(0, 0, 0xD000000000000013, 0x80000001CE0C86B0, (uint64_t)sub_1CDFE991C, v13);
}

uint64_t sub_1CE0817F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v3 = (_QWORD *)*v2;
  v3[12] = a1;
  v3[13] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v4 = v3[9];
    v7 = v3 + 7;
    v5 = v3[7];
    v6 = v7[1];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  return swift_task_switch();
}

uint64_t sub_1CE081888()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  if (*(_QWORD *)(*(_QWORD *)(v0 + 96) + 16))
  {
    v3 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 32) + *(_QWORD *)(v0 + 32));
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v1;
    *v1 = v0;
    v1[1] = sub_1CE081970;
    return v3(*(_QWORD *)(v0 + 96));
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CE081918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE081970()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0819D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  BOOL v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[3];
  v2 = *(_QWORD *)(v0[12] + 16);
  result = swift_bridgeObjectRelease();
  v4 = __OFADD__(v1, v2);
  v5 = v1 + v2;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    v0[16] = v6;
    *v6 = v0;
    v6[1] = sub_1CE081A40;
    return sub_1CE0815AC(v5, v0[4], v0[5]);
  }
  return result;
}

uint64_t sub_1CE081A40()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE081A8C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CatalogClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t CatalogClient.deleteAllCatalogTipJournals()()
{
  return sub_1CE081B54(0xD00000000000001DLL, (void *)0x80000001CE0CC4A0, 89);
}

uint64_t CatalogClient.deleteCatalog()()
{
  return sub_1CE081B54(0x61436574656C6564, (void *)0xEF2928676F6C6174, 59);
}

uint64_t CatalogClient.deleteCatalogSyncAnchor()()
{
  return sub_1CE081B54(0xD000000000000019, (void *)0x80000001CE0CC4C0, 60);
}

uint64_t sub_1CE081B54(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0CC430;
  v8._countAndFlagsBits = 0xD000000000000066;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t CatalogClient.fetchRemoteCatalogEditorialCollectionDetail(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v7._object = (void *)0x80000001CE0CC4E0;
  v7._countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 85;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B5A5C();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D95970], MEMORY[0x1E0D95978], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogModalityDetail(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v7._object = (void *)0x80000001CE0CC510;
  v7._countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 62;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B50A8();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D933E0], MEMORY[0x1E0D933E8], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogProgramDetail(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v7._object = (void *)0x80000001CE0CC540;
  v7._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 63;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B5018();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D92FF0], MEMORY[0x1E0D92FF8], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogWorkoutDetail(_:completedCountOverride:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE083924((void *)0x80000001CE0CC570, 65, a1);
}

uint64_t CatalogClient.fetchRemoteCatalogWorkouts(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC5B0;
  v5._countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 83;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B57C8();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63210);
  v11 = sub_1CDFC889C(&qword_1EFA63218, &qword_1EFA63210, MEMORY[0x1E0D911E0]);
  v12 = sub_1CE084CDC();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D94EE8], MEMORY[0x1E0D94EF0], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.fetchRemoteNavigationEditorialContent()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC5D0;
  v3._countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 103;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B56FC();
  return v6(&v9, v7, MEMORY[0x1E0D94CB0], MEMORY[0x1E0D94CB8], ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteTrainerDetail(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v7._object = (void *)0x80000001CE0CC630;
  v7._countAndFlagsBits = 0xD00000000000001CLL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 70;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B4610();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D90FC0], MEMORY[0x1E0D90FC8], ObjectType, v8);
}

uint64_t CatalogClient.fetchRemoteCatalogLockups(displayStyle:placeholders:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  __int16 v16;

  v1 = sub_1CE0B4D60();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v7._object = (void *)0x80000001CE0CC650;
  v7._countAndFlagsBits = 0xD000000000000035;
  Logger.trace(file:function:)(v6, v7);
  swift_bridgeObjectRetain();
  sub_1CE0B4D54();
  v8 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v16 = 64;
  v10 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 32);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63250);
  v12 = sub_1CDFC889C(&qword_1EFA63258, &qword_1EFA63250, MEMORY[0x1E0D90B90]);
  v13 = sub_1CE084D58();
  v10(&v16, v4, v1, v11, MEMORY[0x1E0D92700], MEMORY[0x1E0D92708], v12, v13, ObjectType, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t CatalogClient.fetchRemoteExploreShelfLockupDescriptors()()
{
  return sub_1CDFCB3B0(0xD00000000000002ALL, (void *)0x80000001CE0CC690, 99);
}

uint64_t CatalogClient.fetchRemoteGalleryLockups(displayStyle:identifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v15;
  __int16 v16;

  v1 = sub_1CE0B54C8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000066;
  v6._object = (void *)0x80000001CE0CC430;
  v7._object = (void *)0x80000001CE0CC6C0;
  v7._countAndFlagsBits = 0xD000000000000033;
  Logger.trace(file:function:)(v6, v7);
  swift_bridgeObjectRetain();
  sub_1CE0B54BC();
  v8 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v16 = 66;
  v10 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 32);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63270);
  v12 = sub_1CDFC889C(&qword_1EFA63278, &qword_1EFA63270, MEMORY[0x1E0D91910]);
  v13 = sub_1CE084DD4();
  v10(&v16, v4, v1, v11, MEMORY[0x1E0D947B8], MEMORY[0x1E0D947C0], v12, v13, ObjectType, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t CatalogClient.fetchRemoteShelfLockupDescriptors()()
{
  return sub_1CDFCB3B0(0xD000000000000023, (void *)0x80000001CE0CC700, 67);
}

uint64_t CatalogClient.fetchRemoteShowcaseLockupContent()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC730;
  v3._countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 68;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63290);
  v8 = sub_1CDFC889C(&qword_1EFA63298, &qword_1EFA63290, MEMORY[0x1E0D93618]);
  v9 = sub_1CE084E50();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteTopShelfCatalogWorkoutDetails()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC760;
  v3._countAndFlagsBits = 0xD00000000000002ALL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 69;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA632B0);
  v8 = sub_1CDFC889C(&qword_1EFA632B8, &qword_1EFA632B0, MEMORY[0x1E0D93110]);
  v9 = sub_1CE084ECC();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.fetchRemoteTrainerTipGalleryDetail()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC790;
  v3._countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 101;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B539C();
  return v6(&v9, v7, MEMORY[0x1E0D941C8], MEMORY[0x1E0D941D0], ObjectType, v4);
}

uint64_t CatalogClient.filterCatalog(filter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC7C0;
  v5._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 71;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4448();
  v10 = sub_1CE0B4E5C();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D90B40], MEMORY[0x1E0D90B48], MEMORY[0x1E0D929C0], MEMORY[0x1E0D929C8], ObjectType, v6);
}

uint64_t CatalogClient.queryFilterOptions(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC7E0;
  v5._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 78;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4C7C();
  v10 = sub_1CE0B500C();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D921A0], MEMORY[0x1E0D921A8], MEMORY[0x1E0D92FC8], MEMORY[0x1E0D92FD0], ObjectType, v6);
}

uint64_t CatalogClient.insertCatalogTipJournal(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC800;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 88;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4C94();
  return v8(&v11, a1, v9, MEMORY[0x1E0D92298], MEMORY[0x1E0D922A0], ObjectType, v6);
}

uint64_t CatalogClient.insertChangeset(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC820;
  v5._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 72;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4B50();
  return v8(&v11, a1, v9, MEMORY[0x1E0D91BC8], MEMORY[0x1E0D91BD0], ObjectType, v6);
}

uint64_t CatalogClient.queryAllCatalogModalityReferences()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC840;
  v3._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 73;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA632D0);
  v8 = sub_1CDFB0260(&qword_1EFA632D8, &qword_1EFA632D0, MEMORY[0x1E0D943E8], MEMORY[0x1E0D943F0]);
  v9 = sub_1CE084F48();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllCatalogProgramReferences()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC870;
  v3._countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 74;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0F90);
  v8 = sub_1CDFB0260(&qword_1ED8F0F98, &qword_1ED8F0F90, MEMORY[0x1E0D93EA0], MEMORY[0x1E0D93EA8]);
  v9 = sub_1CE084FC4();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryCatalogWorkoutReferenceCount()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC8A0;
  v3._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 104;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E0DEB418], MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v4);
}

uint64_t CatalogClient.queryCatalogWorkoutReferences(workoutIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC8D0;
  v5._countAndFlagsBits = 0xD000000000000032;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 86;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0FA8);
  v11 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v12 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D968E8]);
  v13 = sub_1CDFB0260(&qword_1ED8F0FB0, &qword_1ED8F0FA8, MEMORY[0x1E0D93F68], MEMORY[0x1E0D93F70]);
  v14 = sub_1CE085040();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t CatalogClient.filterCatalogWorkoutReferenceIdentifiers(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CC910;
  v5._countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 95;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5048();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v11 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v12 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D968E8]);
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D93148], MEMORY[0x1E0D93150], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.queryAllCatalogThemeCategories()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC960;
  v3._countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 92;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63310);
  v8 = sub_1CDFB0260(&qword_1EFA63318, &qword_1EFA63310, MEMORY[0x1E0D930C0], MEMORY[0x1E0D930C8]);
  v9 = sub_1CE0850BC();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryAllMusicGenres()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC9D0;
  v3._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 90;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63370);
  v8 = sub_1CDFB0260(&qword_1EFA63378, &qword_1EFA63370, MEMORY[0x1E0D8FFA8], MEMORY[0x1E0D8FFB0]);
  v9 = sub_1CE085138();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t CatalogClient.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:limit:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  __int16 v22;

  v21[1] = a3;
  v21[2] = a4;
  v7 = sub_1CE0B5ABC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F1890 != -1)
    swift_once();
  v11 = sub_1CE0B6080();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED8F1870);
  v12._countAndFlagsBits = 0xD000000000000066;
  v12._object = (void *)0x80000001CE0CC430;
  v13._object = (void *)0x80000001CE0CCA30;
  v13._countAndFlagsBits = 0xD000000000000048;
  Logger.trace(file:function:)(v12, v13);
  sub_1CE0851B4(a1, a2 & 1);
  sub_1CE0B5AB0();
  v14 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v22 = 76;
  v16 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v14 + 32);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63250);
  v18 = sub_1CDFC889C(&qword_1EFA63258, &qword_1EFA63250, MEMORY[0x1E0D90B90]);
  v19 = sub_1CE084D58();
  v16(&v22, v10, v7, v17, MEMORY[0x1E0D95B38], MEMORY[0x1E0D95B40], v18, v19, ObjectType, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t CatalogClient.queryCachedCatalogWorkoutDetail(_:completedCountOverride:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE083924((void *)0x80000001CE0CCA80, 77, a1);
}

uint64_t sub_1CE083924@<X0>(void *a1@<X4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;
  __int16 v20;

  v18 = a2;
  v19 = a3;
  v5 = sub_1CE0B57BC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F1890 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1870);
  v10._countAndFlagsBits = 0xD000000000000066;
  v10._object = (void *)0x80000001CE0CC430;
  v11._countAndFlagsBits = 0xD00000000000003ALL;
  v11._object = a1;
  Logger.trace(file:function:)(v10, v11);
  swift_bridgeObjectRetain();
  sub_1CE0B57B0();
  v12 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v20 = v18;
  v14 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 32);
  v15 = sub_1CE0B503C();
  v14(&v20, v8, v5, v15, MEMORY[0x1E0D94EC8], MEMORY[0x1E0D94ED0], MEMORY[0x1E0D93110], MEMORY[0x1E0D93118], ObjectType, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CatalogClient.requestCatalogLockupPlaceholderBackfill(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CCAC0;
  v5._countAndFlagsBits = 0xD000000000000031;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 102;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4910();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EA30);
  v11 = sub_1CDFC889C(&qword_1EFA5EA38, &qword_1EFA5EA30, MEMORY[0x1E0D94370]);
  v12 = sub_1CE0037B8();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D91518], MEMORY[0x1E0D91520], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.refreshRemoteCatalogWorkoutMetadata(mediaTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  __int16 v15;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CCB00;
  v5._countAndFlagsBits = 0xD000000000000030;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v15 = 79;
  v14 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA633B0);
  v10 = sub_1CE0B5B34();
  v11 = sub_1CDFC889C(&qword_1EFA633B8, &qword_1EFA633B0, MEMORY[0x1E0D91BF8]);
  v12 = sub_1CDFB2F18(&qword_1EFA633C0, &qword_1EFA633B0, (uint64_t (*)(void))sub_1CE01DE08, MEMORY[0x1E0D96828]);
  return v8(&v15, &v14, v9, v10, v11, v12, MEMORY[0x1E0D95CE0], MEMORY[0x1E0D95CE8], ObjectType, v6);
}

uint64_t CatalogClient.queryCatalogSyncAnchor()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE083DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
  v3._countAndFlagsBits = 0xD000000000000066;
  v3._object = (void *)0x80000001CE0CC430;
  v4._object = (void *)0x80000001CE0CCB40;
  v4._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 56) = 105;
  v10 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 56)
                                                                                           + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B4C88();
  *(_QWORD *)(v0 + 40) = v8;
  *v7 = v0;
  v7[1] = sub_1CE083ED0;
  return v10(*(_QWORD *)(v0 + 16), v0 + 56, v8, MEMORY[0x1E0D92228], MEMORY[0x1E0D92230], ObjectType, v5);
}

uint64_t sub_1CE083ED0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE083F34()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 40) - 8) + 56))(*(_QWORD *)(v0 + 16), 0, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t CatalogClient.requestCatalogSync(mode:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v9;
  __int16 v10;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CCB60;
  v5._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v10 = 82;
  v9 = a1;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16))(&v10, &v9, MEMORY[0x1E0D93790], MEMORY[0x1E0D93778], MEMORY[0x1E0D93780], ObjectType, v6);
}

uint64_t CatalogClient.queryCatalogWorkoutReferences(releasedSince:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CCB80;
  v5._countAndFlagsBits = 0xD00000000000002DLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 97;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B3DF4();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0FA8);
  v11 = sub_1CDFB0260(&qword_1ED8F0FB0, &qword_1ED8F0FA8, MEMORY[0x1E0D93F68], MEMORY[0x1E0D93F70]);
  v12 = sub_1CE085040();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D8FBE0], MEMORY[0x1E0D8FBE8], v11, v12, ObjectType, v6);
}

uint64_t CatalogClient.queryLatestCatalogWorkoutReferences(limit:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000066;
  v4._object = (void *)0x80000001CE0CC430;
  v5._object = (void *)0x80000001CE0CCBB0;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 100;
  v13 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0FA8);
  v10 = sub_1CDFB0260(&qword_1ED8F0FB0, &qword_1ED8F0FA8, MEMORY[0x1E0D93F68], MEMORY[0x1E0D93F70]);
  v11 = sub_1CE085040();
  return v8(&v14, &v13, MEMORY[0x1E0DEB418], v9, MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], v10, v11, ObjectType, v6);
}

uint64_t CatalogClient.enumerateCatalogWorkoutReferences(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE08433C()
{
  uint64_t *v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  _QWORD *v4;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CCBE0;
  v3._countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = (_QWORD *)swift_task_alloc();
  v0[5] = (uint64_t)v4;
  *v4 = v0;
  v4[1] = sub_1CE084404;
  return sub_1CE0815AC(0, v0[2], v0[3]);
}

uint64_t sub_1CE084404()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE08444C()
{
  return CatalogClient.deleteAllCatalogTipJournals()();
}

uint64_t sub_1CE08446C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  __int16 v8;

  v1 = *v0;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
  v3._object = (void *)0x80000001CE0CC430;
  v3._countAndFlagsBits = 0xD000000000000066;
  v4._countAndFlagsBits = 0x61436574656C6564;
  v4._object = (void *)0xEF2928676F6C6174;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 59;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1CE084544()
{
  return CatalogClient.deleteCatalogSyncAnchor()();
}

uint64_t sub_1CE084564(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteCatalogEditorialCollectionDetail(_:)(a1, a2);
}

uint64_t sub_1CE084584(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteCatalogModalityDetail(_:)(a1, a2);
}

uint64_t sub_1CE0845A4(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteCatalogProgramDetail(_:)(a1, a2);
}

uint64_t sub_1CE0845C4@<X0>(uint64_t a1@<X8>)
{
  return CatalogClient.fetchRemoteCatalogWorkoutDetail(_:completedCountOverride:)(a1);
}

uint64_t sub_1CE0845E8(uint64_t a1)
{
  return CatalogClient.fetchRemoteCatalogWorkouts(_:)(a1);
}

uint64_t sub_1CE084608()
{
  return CatalogClient.fetchRemoteNavigationEditorialContent()();
}

uint64_t sub_1CE084628(uint64_t a1, uint64_t a2)
{
  return CatalogClient.fetchRemoteTrainerDetail(_:)(a1, a2);
}

uint64_t sub_1CE084648()
{
  return CatalogClient.fetchRemoteCatalogLockups(displayStyle:placeholders:)();
}

uint64_t sub_1CE084668()
{
  return CatalogClient.fetchRemoteGalleryLockups(displayStyle:identifier:)();
}

uint64_t sub_1CE084688()
{
  return CatalogClient.fetchRemoteExploreShelfLockupDescriptors()();
}

uint64_t sub_1CE0846A8()
{
  return CatalogClient.fetchRemoteShelfLockupDescriptors()();
}

uint64_t sub_1CE0846C8()
{
  return CatalogClient.fetchRemoteShowcaseLockupContent()();
}

uint64_t sub_1CE0846E8()
{
  return CatalogClient.fetchRemoteTopShelfCatalogWorkoutDetails()();
}

uint64_t sub_1CE084708()
{
  return CatalogClient.fetchRemoteTrainerTipGalleryDetail()();
}

uint64_t sub_1CE084728(uint64_t a1)
{
  return CatalogClient.filterCatalog(filter:)(a1);
}

uint64_t sub_1CE084748(uint64_t a1)
{
  return CatalogClient.insertCatalogTipJournal(_:)(a1);
}

uint64_t sub_1CE084768(uint64_t a1)
{
  return CatalogClient.insertChangeset(_:)(a1);
}

uint64_t sub_1CE084788()
{
  return CatalogClient.queryAllCatalogModalityReferences()();
}

uint64_t sub_1CE0847A8()
{
  return CatalogClient.queryAllCatalogProgramReferences()();
}

uint64_t sub_1CE0847C8()
{
  return CatalogClient.queryCatalogWorkoutReferenceCount()();
}

uint64_t sub_1CE0847E8(uint64_t a1)
{
  return CatalogClient.queryCatalogWorkoutReferences(workoutIdentifiers:)(a1);
}

uint64_t sub_1CE084808(uint64_t a1)
{
  return CatalogClient.filterCatalogWorkoutReferenceIdentifiers(_:)(a1);
}

uint64_t sub_1CE084828()
{
  return CatalogClient.queryAllCatalogThemeCategories()();
}

uint64_t sub_1CE084848()
{
  return CatalogClient.queryAllMusicGenres()();
}

uint64_t sub_1CE084868@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return CatalogClient.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:limit:)(a1, a2 & 1, a3, a4);
}

uint64_t sub_1CE084890@<X0>(uint64_t a1@<X8>)
{
  return CatalogClient.queryCachedCatalogWorkoutDetail(_:completedCountOverride:)(a1);
}

uint64_t sub_1CE0848B4(uint64_t a1)
{
  return CatalogClient.queryFilterOptions(for:)(a1);
}

uint64_t sub_1CE0848D4(uint64_t a1)
{
  return CatalogClient.requestCatalogLockupPlaceholderBackfill(request:)(a1);
}

uint64_t sub_1CE0848F4(uint64_t a1)
{
  return CatalogClient.refreshRemoteCatalogWorkoutMetadata(mediaTypes:)(a1);
}

uint64_t sub_1CE084914(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD3C;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE084978(char a1)
{
  return CatalogClient.requestCatalogSync(mode:)(a1);
}

uint64_t sub_1CE084998(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = *v2;
  return swift_task_switch();
}

uint64_t sub_1CE0849B8(uint64_t a1)
{
  return CatalogClient.queryCatalogWorkoutReferences(releasedSince:)(a1);
}

uint64_t sub_1CE0849D8(uint64_t a1)
{
  return CatalogClient.queryLatestCatalogWorkoutReferences(limit:)(a1);
}

_QWORD *sub_1CE0849F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v16 = a1;
  v15 = 8;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v15, (uint64_t)sub_1CE0851F8, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v16 = a1;
  v15 = 5;
  v8 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1CE085238, v8, ObjectType, MEMORY[0x1E0D93790], (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D93778], MEMORY[0x1E0D93780]);
  swift_release();
  v16 = a1;
  v15 = 6;
  v9 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v15, (uint64_t)sub_1CE085240, v9, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v16 = a1;
  v15 = 7;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v12 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v13 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D968E8]);
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1CE085280, v10, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, v12, v13);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE084C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB2CAC(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE084CDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63220;
  if (!qword_1EFA63220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63210);
    v2 = sub_1CDFB1900(&qword_1EFA63228, (uint64_t (*)(uint64_t))MEMORY[0x1E0D911F8], MEMORY[0x1E0D911F0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63220);
  }
  return result;
}

unint64_t sub_1CE084D58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63260;
  if (!qword_1EFA63260)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63250);
    v2 = sub_1CDFB1900(&qword_1EFA63268, MEMORY[0x1E0D90BA0], MEMORY[0x1E0D90B98]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63260);
  }
  return result;
}

unint64_t sub_1CE084DD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63280;
  if (!qword_1EFA63280)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63270);
    v2 = sub_1CDFB1900(&qword_1EFA63288, MEMORY[0x1E0D91920], MEMORY[0x1E0D91918]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63280);
  }
  return result;
}

unint64_t sub_1CE084E50()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA632A0;
  if (!qword_1EFA632A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63290);
    v2 = sub_1CDFB1900(&qword_1EFA632A8, MEMORY[0x1E0D93628], MEMORY[0x1E0D93620]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA632A0);
  }
  return result;
}

unint64_t sub_1CE084ECC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA632C0;
  if (!qword_1EFA632C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA632B0);
    v2 = sub_1CDFB1900(&qword_1EFA632C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93128], MEMORY[0x1E0D93120]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA632C0);
  }
  return result;
}

unint64_t sub_1CE084F48()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA632E0;
  if (!qword_1EFA632E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA632D0);
    v2 = sub_1CDFB1900(&qword_1EFA632E8, MEMORY[0x1E0D94400], MEMORY[0x1E0D943F8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA632E0);
  }
  return result;
}

unint64_t sub_1CE084FC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED8F0FA0;
  if (!qword_1ED8F0FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F0F90);
    v2 = sub_1CDFB1900(&qword_1ED8F0F60, MEMORY[0x1E0D93EB8], MEMORY[0x1E0D93EB0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F0FA0);
  }
  return result;
}

unint64_t sub_1CE085040()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED8F0FB8;
  if (!qword_1ED8F0FB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F0FA8);
    v2 = sub_1CDFB1900(&qword_1ED8F0F68, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93F80], MEMORY[0x1E0D93F78]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F0FB8);
  }
  return result;
}

unint64_t sub_1CE0850BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63320;
  if (!qword_1EFA63320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63310);
    v2 = sub_1CDFB1900(&qword_1EFA63328, (uint64_t (*)(uint64_t))MEMORY[0x1E0D930D8], MEMORY[0x1E0D930D0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63320);
  }
  return result;
}

unint64_t sub_1CE085138()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63380;
  if (!qword_1EFA63380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63370);
    v2 = sub_1CDFB1900(&qword_1EFA63388, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8FFC0], MEMORY[0x1E0D8FFB8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63380);
  }
  return result;
}

uint64_t sub_1CE0851B4(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t method lookup function for CatalogClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CatalogClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE0851D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE0851F8()
{
  uint64_t v0;

  return sub_1CE08138C(v0, 0xD000000000000016, (void *)0x80000001CE0CCD00, (uint64_t)&type metadata for CatalogDeleted, (uint64_t)&protocol witness table for CatalogDeleted);
}

uint64_t sub_1CE085238(char *a1)
{
  return sub_1CE081284(a1);
}

uint64_t sub_1CE085240()
{
  uint64_t v0;

  return sub_1CE08138C(v0, 0xD00000000000001ELL, (void *)0x80000001CE0CCCC0, (uint64_t)&type metadata for CatalogMetadataUpdated, (uint64_t)&protocol witness table for CatalogMetadataUpdated);
}

uint64_t sub_1CE085280(uint64_t *a1)
{
  return sub_1CE081488(a1);
}

uint64_t sub_1CE085288(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F0A30, &qword_1ED8F0C30, (uint64_t)qword_1ED8F1F20);
}

uint64_t static Log.achievement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0360, (uint64_t)qword_1ED8F0A30, a1);
}

uint64_t sub_1CE0852C8(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA633F0, &qword_1EFA5D578, (uint64_t)qword_1EFA6C100);
}

uint64_t static Log.archive.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D4C8, (uint64_t)qword_1EFA633F0, a1);
}

uint64_t sub_1CE085308(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F0008, &qword_1ED8F0C80, (uint64_t)qword_1ED8F1FB0);
}

uint64_t sub_1CE08532C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F0A60, &qword_1ED8F0C88, (uint64_t)qword_1ED8F1FC8);
}

uint64_t sub_1CE085350(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F0FD0, &qword_1ED8F0FE8, (uint64_t)qword_1ED8F2010);
}

uint64_t static Log.health.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0EB0, (uint64_t)qword_1ED8F0FD0, a1);
}

uint64_t sub_1CE085390(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63420, qword_1EFA5D590, (uint64_t)qword_1EFA6C148);
}

uint64_t static Log.metal.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(qword_1EFA5D4D8, (uint64_t)qword_1EFA63420, a1);
}

uint64_t static Log.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0000, (uint64_t)qword_1ED8EFFE0, a1);
}

uint64_t sub_1CE0853EC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63438, &qword_1EFA5D5A0, (uint64_t)qword_1EFA6C160);
}

uint64_t static Log.metricsHealth.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D4E8, (uint64_t)qword_1EFA63438, a1);
}

uint64_t sub_1CE08542C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63450, &qword_1EFA5D5A8, (uint64_t)qword_1EFA6C178);
}

uint64_t static Log.multiUser.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D4F0, (uint64_t)qword_1EFA63450, a1);
}

uint64_t static Log.network.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D4F8, (uint64_t)qword_1EFA63468, a1);
}

uint64_t sub_1CE085488(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63480, &qword_1EFA5D5B8, (uint64_t)qword_1EFA6C1A8);
}

uint64_t static Log.overlay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D500, (uint64_t)qword_1EFA63480, a1);
}

uint64_t sub_1CE0854C8(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63498, &qword_1EFA5D5C0, (uint64_t)qword_1EFA6C1C0);
}

uint64_t static Log.personalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D508, (uint64_t)qword_1EFA63498, a1);
}

uint64_t sub_1CE085508(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA634B0, qword_1EFA5D5C8, (uint64_t)qword_1EFA6C1D8);
}

uint64_t static Log.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(qword_1EFA5D510, (uint64_t)qword_1EFA634B0, a1);
}

uint64_t sub_1CE085548(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EF7D8, &qword_1ED8F0E30, (uint64_t)qword_1ED8F1FE0);
}

uint64_t sub_1CE08556C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F0A48, &qword_1ED8F0C48, (uint64_t)qword_1ED8F1F50);
}

uint64_t static Log.remoteBrowsing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0370, (uint64_t)qword_1ED8F0A48, a1);
}

uint64_t sub_1CE0855AC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EFFA0, &qword_1ED8F06B0, (uint64_t)qword_1ED8F1EB8);
}

uint64_t static Log.scores.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8EFFB8, (uint64_t)qword_1ED8EFFA0, a1);
}

uint64_t sub_1CE0855EC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F0EB8, &qword_1ED8F0FF0, (uint64_t)qword_1ED8F1FF8);
}

uint64_t static Log.search.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0ED0, (uint64_t)qword_1ED8F0EB8, a1);
}

uint64_t sub_1CE08562C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EFFC0, qword_1ED8F0C68, (uint64_t)qword_1ED8F1F80);
}

uint64_t static Log.server.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8EFFD8, (uint64_t)qword_1ED8EFFC0, a1);
}

uint64_t sub_1CE08566C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA634C8, &qword_1EFA5D5D8, (uint64_t)qword_1EFA6C1F0);
}

uint64_t static Log.session.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D520, (uint64_t)qword_1EFA634C8, a1);
}

uint64_t sub_1CE0856AC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA634E0, &qword_1EFA5D5E0, (uint64_t)qword_1EFA6C208);
}

uint64_t static Log.siri.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D528, (uint64_t)qword_1EFA634E0, a1);
}

uint64_t sub_1CE0856EC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EFF80, &qword_1ED8F0C50, (uint64_t)qword_1ED8F1F68);
}

uint64_t static Log.sync.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8EFF98, (uint64_t)qword_1ED8EFF80, a1);
}

uint64_t sub_1CE08572C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA634F8, &qword_1EFA5D5E8, (uint64_t)qword_1EFA6C220);
}

uint64_t static Log.timeline.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D530, (uint64_t)qword_1EFA634F8, a1);
}

uint64_t sub_1CE08576C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63528, qword_1EFA5D5F0, (uint64_t)qword_1EFA6C238);
}

uint64_t static Log.transport.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(qword_1EFA5D540, (uint64_t)qword_1EFA63528, a1);
}

uint64_t sub_1CE0857AC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F1058, &qword_1ED8F11F8, (uint64_t)qword_1ED8F2058);
}

uint64_t static Log.upNextQueue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D558, (uint64_t)qword_1EFA63558, a1);
}

uint64_t sub_1CE0857EC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63570, &qword_1EFA5D620, (uint64_t)qword_1EFA6C298);
}

uint64_t static Log.testing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(qword_1EFA5D568, (uint64_t)qword_1EFA63570, a1);
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

uint64_t UserNotificationCenterProtocol.addUserNotificationRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return swift_task_switch();
}

uint64_t sub_1CE085858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD, _QWORD);

  if (qword_1ED8F0370 != -1)
    swift_once();
  v1 = v0[6];
  v2 = sub_1CE0B6080();
  v0[8] = __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F0A48);
  v3._countAndFlagsBits = 0xD00000000000007BLL;
  v3._object = (void *)0x80000001CE0CCD20;
  v4._object = (void *)0x80000001CE0CCDA0;
  v4._countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v3, v4);
  v7 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v1 + 8) + *(_QWORD *)(v1 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  v0[9] = v5;
  *v5 = v0;
  v5[1] = sub_1CE08593C;
  return v7(v0[5], v0[6]);
}

uint64_t sub_1CE08593C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE085998()
{
  uint64_t v0;
  unint64_t v1;
  id v2;
  char v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(id *)(v0 + 32);
  v3 = sub_1CE086150(v1, v2);

  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
  {
    v4 = *(id *)(v0 + 32);
    v5 = sub_1CE0B6068();
    v6 = sub_1CE0B6734();
    v7 = os_log_type_enabled(v5, v6);
    v8 = *(void **)(v0 + 32);
    if (v7)
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v18 = v16;
      *(_DWORD *)v9 = 136315138;
      v10 = objc_msgSend(v8, sel_identifier);
      v11 = sub_1CE0B6278();
      v13 = v12;

      *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v11, v13, &v18);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v5, v6, "User notification %s already delivered, not adding.", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v16, -1, -1);
      MEMORY[0x1D17C092C](v9, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))(**(int **)(*(_QWORD *)(v0 + 48) + 16)
                                                         + *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16));
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v14;
    *v14 = v0;
    v14[1] = sub_1CE085BC8;
    return v17(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_1CE085BC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE085C34()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v13;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(void **)(v0 + 32);
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    v13 = v6;
    v7 = objc_msgSend(v4, sel_identifier);
    v8 = sub_1CE0B6278();
    v10 = v9;

    *(_QWORD *)(v0 + 16) = sub_1CDFC7270(v8, v10, &v13);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v2, v3, "Failed to add user notification %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 32);

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall UserNotificationCenterProtocol.removeUserNotificationRequest(with:)(Swift::String with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = v2;
  v4 = v1;
  object = with._object;
  countAndFlagsBits = with._countAndFlagsBits;
  if (qword_1ED8F0370 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F0A48);
  v8._countAndFlagsBits = 0xD00000000000007BLL;
  v8._object = (void *)0x80000001CE0CCD20;
  v9._object = (void *)0x80000001CE0CCDC0;
  v9._countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CE0BB0F0;
  *(_QWORD *)(v10 + 32) = countAndFlagsBits;
  *(_QWORD *)(v10 + 40) = object;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_bridgeObjectRetain();
  v11(v10, v4, v3);
  swift_bridgeObjectRelease();
}

uint64_t sub_1CE085EDC()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v0;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_1CE085F70;
  v3 = swift_continuation_init();
  v1[10] = MEMORY[0x1E0C809B0];
  v4 = v1 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1CE085FB0;
  v4[3] = &block_descriptor_7_2;
  v4[4] = v3;
  objc_msgSend(v2, sel_getDeliveredNotificationsWithCompletionHandler_, v4);
  return swift_continuation_await();
}

uint64_t sub_1CE085F70()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v0 + 8))(*(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1CE085FB0(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  sub_1CE086418();
  **(_QWORD **)(*(_QWORD *)(v1 + 64) + 40) = sub_1CE0B6440();
  return swift_continuation_resume();
}

uint64_t sub_1CE085FF4(uint64_t a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *v1;
  v2[2] = v2;
  v2[3] = sub_1CE030644;
  v5 = swift_continuation_init();
  v2[10] = MEMORY[0x1E0C809B0];
  v6 = v2 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_1CE086090;
  v6[3] = &block_descriptor_17;
  v6[4] = v5;
  objc_msgSend(v4, sel_addNotificationRequest_withCompletionHandler_, a1, v6);
  return swift_continuation_await();
}

uint64_t sub_1CE086090(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

void sub_1CE086104()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  v2 = (id)sub_1CE0B6434();
  objc_msgSend(v1, sel_removeDeliveredNotificationsWithIdentifiers_, v2);

}

uint64_t sub_1CE086150(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  unint64_t v21;
  unint64_t v22;

  v2 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v3 = sub_1CE0B6B30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      v21 = v2;
      v22 = v2 & 0xC000000000000001;
      v4 = 4;
      while (1)
      {
        v5 = v4 - 4;
        if (v22)
        {
          v6 = (id)MEMORY[0x1D17BFD98](v4 - 4, v2);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_18;
        }
        else
        {
          v6 = *(id *)(v2 + 8 * v4);
          v7 = v4 - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v8 = v6;
        v9 = objc_msgSend(v6, sel_request);
        v10 = objc_msgSend(v9, sel_identifier);

        v11 = sub_1CE0B6278();
        v13 = v12;

        v14 = objc_msgSend(a2, sel_identifier);
        v15 = sub_1CE0B6278();
        v17 = v16;

        if (v11 == v15 && v13 == v17)
        {
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          v19 = 1;
          goto LABEL_21;
        }
        v19 = sub_1CE0B6C50();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {
          ++v4;
          v2 = v21;
          if (v7 != v3)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
  v19 = 0;
LABEL_21:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t dispatch thunk of UserNotificationCenterProtocol.deliveredNotifications()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE0400E4;
  return v7(a1, a2);
}

uint64_t dispatch thunk of UserNotificationCenterProtocol.add(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of UserNotificationCenterProtocol.removeDeliveredNotifications(withIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t sub_1CE086418()
{
  unint64_t result;

  result = qword_1EFA635B0;
  if (!qword_1EFA635B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFA635B0);
  }
  return result;
}

void static WorkoutPlansUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static FitnessModeUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for FitnessModeUpdated()
{
  return &type metadata for FitnessModeUpdated;
}

_QWORD *SiriClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for SiriClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *SiriClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE086758(a1, v3, ObjectType, a2, a3);
}

uint64_t SiriClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t SiriClient.evaluateStartWorkoutRequest(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  __int16 v9;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v9 = 250;
  v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 32);
  v6 = sub_1CE0B5390();
  v7 = sub_1CE0B545C();
  return v5(&v9, a1, v6, v7, MEMORY[0x1E0D94188], MEMORY[0x1E0D94190], MEMORY[0x1E0D94578], MEMORY[0x1E0D94580], ObjectType, v3);
}

uint64_t sub_1CE0866A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  __int16 v9;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  ObjectType = swift_getObjectType();
  v9 = 250;
  v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 32);
  v6 = sub_1CE0B5390();
  v7 = sub_1CE0B545C();
  return v5(&v9, a1, v6, v7, MEMORY[0x1E0D94188], MEMORY[0x1E0D94190], MEMORY[0x1E0D94578], MEMORY[0x1E0D94580], ObjectType, v3);
}

_QWORD *sub_1CE086758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for SiriClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for SiriClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SiriClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *EngagementClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1CDFB7C20();
  swift_retain();
  v8 = sub_1CE0B6788();
  type metadata accessor for EventHub();
  v9 = swift_allocObject();
  v10 = sub_1CE01EDB8(v8, 0, v9);
  type metadata accessor for EngagementClient();
  v11 = (_QWORD *)swift_allocObject();
  v12 = sub_1CE087170(v6, v10, v11);

  swift_release_n();
  return v12;
}

uint64_t EngagementClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFB154C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE087258);
}

uint64_t sub_1CE086918()
{
  uint64_t result;
  uint64_t v1;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for EngagementBannerRulesUpdated, &protocol witness table for EngagementBannerRulesUpdated, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t EngagementClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t EngagementClient.dispatchEngagementRequest(json:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v11[2];
  __int16 v12;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1078);
  v6._countAndFlagsBits = 0xD00000000000006CLL;
  v6._object = (void *)0x80000001CE0CCE30;
  v7._object = (void *)0x80000001CE0CCEA0;
  v7._countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v12 = 115;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32))(&v12, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v8);
}

uint64_t EngagementClient.insertEngagementBadge(_:)(uint64_t a1)
{
  return sub_1CE086C1C(a1, (void *)0x80000001CE0CCED0, 117);
}

uint64_t EngagementClient.fetchEngagementRedirectURL(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1078);
  v4._countAndFlagsBits = 0xD00000000000006CLL;
  v4._object = (void *)0x80000001CE0CCE30;
  v5._object = (void *)0x80000001CE0CCEF0;
  v5._countAndFlagsBits = 0xD00000000000001ELL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 116;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B3D10();
  return v8(&v11, a1, v9, v9, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], ObjectType, v6);
}

uint64_t EngagementClient.deleteEngagementBadge(_:)(uint64_t a1)
{
  return sub_1CE086C1C(a1, (void *)0x80000001CE0CCF10, 118);
}

uint64_t sub_1CE086C1C(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  __int16 v15;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1078);
  v8._countAndFlagsBits = 0xD00000000000006CLL;
  v8._object = (void *)0x80000001CE0CCE30;
  v9._countAndFlagsBits = 0xD000000000000019;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v15 = a3;
  v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v10 + 16);
  v13 = sub_1CE0B4A30();
  return v12(&v15, a1, v13, MEMORY[0x1E0D91710], MEMORY[0x1E0D91718], ObjectType, v10);
}

uint64_t EngagementClient.deleteAllEngagementBadges()()
{
  return sub_1CE086FA0(0xD00000000000001BLL, (void *)0x80000001CE0CCF30, 119);
}

uint64_t EngagementClient.insertCompletedMarketingVideo(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v11[2];
  __int16 v12;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1078);
  v6._countAndFlagsBits = 0xD00000000000006CLL;
  v6._object = (void *)0x80000001CE0CCE30;
  v7._object = (void *)0x80000001CE0CCF90;
  v7._countAndFlagsBits = 0xD00000000000002ALL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v12 = 123;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v8);
}

uint64_t EngagementClient.queryAllCompletedMarketingVideoIdentifiers()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1078);
  v2._countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001CE0CCE30;
  v3._object = (void *)0x80000001CE0CCFC0;
  v3._countAndFlagsBits = 0xD00000000000002CLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 122;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v8 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v9 = sub_1CDFC86BC((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428);
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t EngagementClient.deleteAllCompletedMarketingVideos()()
{
  return sub_1CE086FA0(0xD000000000000023, (void *)0x80000001CE0CCFF0, 124);
}

uint64_t sub_1CE086FA0(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1078);
  v8._object = (void *)0x80000001CE0CCE30;
  v8._countAndFlagsBits = 0xD00000000000006CLL;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t sub_1CE087070(uint64_t a1, uint64_t a2)
{
  return EngagementClient.dispatchEngagementRequest(json:)(a1, a2);
}

uint64_t sub_1CE087090(uint64_t a1)
{
  return EngagementClient.fetchEngagementRedirectURL(_:)(a1);
}

uint64_t sub_1CE0870B0(uint64_t a1)
{
  return EngagementClient.insertEngagementBadge(_:)(a1);
}

uint64_t sub_1CE0870D0(uint64_t a1)
{
  return EngagementClient.deleteEngagementBadge(_:)(a1);
}

uint64_t sub_1CE0870F0()
{
  return EngagementClient.deleteAllEngagementBadges()();
}

uint64_t sub_1CE087110()
{
  return EngagementClient.queryAllCompletedMarketingVideoIdentifiers()();
}

uint64_t sub_1CE087130(uint64_t a1, uint64_t a2)
{
  return EngagementClient.insertCompletedMarketingVideo(identifier:)(a1, a2);
}

uint64_t sub_1CE087150()
{
  return EngagementClient.deleteAllCompletedMarketingVideos()();
}

_QWORD *sub_1CE087170(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  char v8;
  uint64_t v9;

  a3[2] = a1;
  a3[3] = &protocol witness table for XPCClient;
  a3[4] = &protocol witness table for XPCClient;
  a3[5] = a2;
  a3[6] = &protocol witness table for EventHub;
  ObjectType = swift_getObjectType();
  v9 = a1;
  v8 = 14;
  v6 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v8, (uint64_t)sub_1CE08730C, v6, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_release();
  return a3;
}

_QWORD *sub_1CE087258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;

  type metadata accessor for EngagementClient();
  v15 = (_QWORD *)swift_allocObject();
  return sub_1CDFB15D8(a1, a2, v15, a4, a5, a6, a7, a8);
}

uint64_t method lookup function for EngagementClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EngagementClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE0872E8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE08730C()
{
  return sub_1CE086918();
}

uint64_t URL.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[0] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B3C5C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B3C50();
  sub_1CE0B3C38();
  sub_1CE0B3C2C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62838);
  sub_1CE0B3BFC();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1CE0C44A0;
  sub_1CE0B5C9C();
  sub_1CE0B3BD8();
  swift_bridgeObjectRelease();
  v17[1] = sub_1CE0B5D74();
  sub_1CE0B6C14();
  sub_1CE0B3BD8();
  swift_bridgeObjectRelease();
  sub_1CE0B3BD8();
  sub_1CE0B3BD8();
  sub_1CE0B3C14();
  sub_1CE0B3C44();
  sub_1CE0B3CD4();
  v10 = sub_1CE0B5E04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = sub_1CE0B3D10();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, v11))
  {
    sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5E7E8);
    v13 = 1;
    v14 = v17[0];
  }
  else
  {
    v15 = v17[0];
    (*(void (**)(_QWORD, char *, uint64_t))(v12 + 32))(v17[0], v5, v11);
    v13 = 0;
    v14 = v15;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v14, v13, 1, v11);
}

uint64_t sub_1CE087610(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[2];
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v35 = a2;
  v3 = sub_1CE0B3BFC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63678);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v31 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63680);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v31 - v17;
  sub_1CE0B3C20();
  v34 = v18;
  sub_1CDFB1434((uint64_t)v18, (uint64_t)v16, &qword_1EFA63680);
  v19 = sub_1CE0B3C5C();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1)
  {
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA63680);
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
    goto LABEL_13;
  }
  v21 = sub_1CE0B3C08();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
  if (!v21)
    goto LABEL_12;
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v32 = v12;
    v33 = v10;
    v23 = v21 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v24 = *(_QWORD *)(v4 + 72);
    v25 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    v31[1] = v21;
    swift_bridgeObjectRetain();
    while (1)
    {
      v25(v6, v23, v3);
      if (sub_1CE0B3BE4() == a1 && v26 == v35)
        break;
      v27 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
        goto LABEL_18;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v23 += v24;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        v12 = v32;
        v10 = v33;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    swift_bridgeObjectRelease();
    v12 = v32;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v32, v6, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
    swift_bridgeObjectRelease();
    v10 = v33;
  }
  else
  {
LABEL_11:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
    swift_bridgeObjectRelease();
  }
LABEL_13:
  v28 = (uint64_t)v34;
  sub_1CDFB1434((uint64_t)v12, (uint64_t)v10, &qword_1EFA63678);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    sub_1CDFB13F8((uint64_t)v12, &qword_1EFA63678);
    sub_1CDFB13F8(v28, &qword_1EFA63680);
    sub_1CDFB13F8((uint64_t)v10, &qword_1EFA63678);
    return 0;
  }
  else
  {
    v29 = sub_1CE0B3BF0();
    sub_1CDFB13F8((uint64_t)v12, &qword_1EFA63678);
    sub_1CDFB13F8(v28, &qword_1EFA63680);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v10, v3);
  }
  return v29;
}

uint64_t URL.workoutIdentifier.getter()
{
  return sub_1CE087610(0xD000000000000011, 0x80000001CE0C9150);
}

uint64_t URL.sessionIdentifier.getter()
{
  return sub_1CE087610(0xD000000000000011, 0x80000001CE0C9170);
}

uint64_t URL.sessionActivityType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(char *, unint64_t, uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  unsigned __int8 v37;
  BOOL v38;
  unint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  unsigned int v42;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  unsigned __int8 v46;
  unint64_t v47;
  uint64_t v48;
  unsigned __int8 *v49;
  unsigned int v50;
  char v51;
  _QWORD v52[2];
  char *v53;
  char *v54;
  _QWORD v55[3];

  v0 = sub_1CE0B3BFC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63678);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)v52 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63680);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v52 - v13;
  sub_1CE0B3C20();
  v53 = v14;
  sub_1CDFB1434((uint64_t)v14, (uint64_t)v12, &qword_1EFA63680);
  v15 = sub_1CE0B3C5C();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
  {
    sub_1CDFB13F8((uint64_t)v12, &qword_1EFA63680);
LABEL_12:
    v24 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v54, 1, 1, v0);
    goto LABEL_16;
  }
  v17 = sub_1CE0B3C08();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
  if (!v17)
    goto LABEL_12;
  v18 = *(_QWORD *)(v17 + 16);
  if (v18)
  {
    v19 = v17 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v20 = *(_QWORD *)(v1 + 72);
    v21 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v52[1] = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v3, v19, v0);
      if (sub_1CE0B3BE4() == 0x7974697669746361 && v22 == 0xEC00000065707954)
        break;
      v23 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_14;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v19 += v20;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    v24 = (uint64_t)v54;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v54, v3, v0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1 + 56))(v24, 0, 1, v0);
  }
  else
  {
LABEL_11:
    v24 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v54, 1, 1, v0);
  }
  swift_bridgeObjectRelease();
LABEL_16:
  sub_1CDFB1434(v24, (uint64_t)v7, &qword_1EFA63678);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v7, 1, v0) == 1)
  {
    sub_1CDFB13F8((uint64_t)v7, &qword_1EFA63678);
LABEL_18:
    v25 = 0;
LABEL_29:
    v33 = (uint64_t)v53;
LABEL_75:
    sub_1CDFB13F8(v24, &qword_1EFA63678);
    sub_1CDFB13F8(v33, &qword_1EFA63680);
    return v25;
  }
  v26 = sub_1CE0B3BF0();
  v25 = v27;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v7, v0);
  if (!v25)
    goto LABEL_29;
  v29 = HIBYTE(v25) & 0xF;
  v30 = v26 & 0xFFFFFFFFFFFFLL;
  if ((v25 & 0x2000000000000000) != 0)
    v31 = HIBYTE(v25) & 0xF;
  else
    v31 = v26 & 0xFFFFFFFFFFFFLL;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if ((v25 & 0x1000000000000000) != 0)
  {
    v34 = sub_1CE08F054(v26, v25, 10);
    v36 = v51;
    swift_bridgeObjectRelease();
    v33 = (uint64_t)v53;
LABEL_72:
    if ((v36 & 1) != 0)
      v25 = 0;
    else
      v25 = v34;
    goto LABEL_75;
  }
  if ((v25 & 0x2000000000000000) == 0)
  {
    if ((v26 & 0x1000000000000000) != 0)
      v32 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v32 = (unsigned __int8 *)sub_1CE0B6A64();
    v33 = (uint64_t)v53;
    v34 = (unint64_t)sub_1CE08EF08(v32, v30, 10);
    v36 = v35 & 1;
    goto LABEL_71;
  }
  v55[0] = v26;
  v55[1] = v25 & 0xFFFFFFFFFFFFFFLL;
  if (v26 == 43)
  {
    if (!v29)
      goto LABEL_87;
    if (v29 == 1 || (BYTE1(v26) - 48) > 9u)
      goto LABEL_53;
    v34 = (BYTE1(v26) - 48);
    if (v29 == 2)
    {
LABEL_56:
      v36 = 0;
      v33 = (uint64_t)v53;
      goto LABEL_71;
    }
    if ((BYTE2(v26) - 48) > 9u)
      goto LABEL_53;
    v34 = 10 * (BYTE1(v26) - 48) + (BYTE2(v26) - 48);
    v40 = v29 - 3;
    v33 = (uint64_t)v53;
    if (v40)
    {
      v41 = (unsigned __int8 *)v55 + 3;
      while (1)
      {
        v42 = *v41 - 48;
        if (v42 > 9)
          goto LABEL_67;
        if (!is_mul_ok(v34, 0xAuLL))
          goto LABEL_67;
        v38 = __CFADD__(10 * v34, v42);
        v34 = 10 * v34 + v42;
        if (v38)
          goto LABEL_67;
        v36 = 0;
        ++v41;
        if (!--v40)
          goto LABEL_71;
      }
    }
LABEL_70:
    v36 = 0;
    goto LABEL_71;
  }
  if (v26 != 45)
  {
    if (!v29 || (v26 - 48) > 9u)
      goto LABEL_53;
    v34 = (v26 - 48);
    if (v29 == 1)
      goto LABEL_56;
    if ((BYTE1(v26) - 48) > 9u)
      goto LABEL_53;
    v34 = 10 * (v26 - 48) + (BYTE1(v26) - 48);
    v43 = v29 - 2;
    v33 = (uint64_t)v53;
    if (v43)
    {
      v44 = (unsigned __int8 *)v55 + 2;
      while (1)
      {
        v45 = *v44 - 48;
        if (v45 > 9)
          goto LABEL_67;
        if (!is_mul_ok(v34, 0xAuLL))
          goto LABEL_67;
        v38 = __CFADD__(10 * v34, v45);
        v34 = 10 * v34 + v45;
        if (v38)
          goto LABEL_67;
        v36 = 0;
        ++v44;
        if (!--v43)
          goto LABEL_71;
      }
    }
    goto LABEL_70;
  }
  if (v29)
  {
    if (v29 != 1)
    {
      v37 = BYTE1(v26) - 48;
      if ((BYTE1(v26) - 48) <= 9u)
      {
        v34 = 0;
        v38 = v37 == 0;
        v39 = -(uint64_t)v37;
        if (!v38)
          goto LABEL_54;
        if (v29 == 2)
        {
          v36 = 0;
          v34 = v39;
          v33 = (uint64_t)v53;
LABEL_71:
          swift_bridgeObjectRelease();
          goto LABEL_72;
        }
        v46 = BYTE2(v26) - 48;
        if ((BYTE2(v26) - 48) <= 9u)
        {
          v33 = (uint64_t)v53;
          if (is_mul_ok(v39, 0xAuLL))
          {
            v47 = 10 * v39;
            v34 = v47 - v46;
            if (v47 >= v46)
            {
              v48 = v29 - 3;
              if (!v48)
                goto LABEL_70;
              v49 = (unsigned __int8 *)v55 + 3;
              while (1)
              {
                v50 = *v49 - 48;
                if (v50 > 9)
                  break;
                if (!is_mul_ok(v34, 0xAuLL))
                  break;
                v38 = 10 * v34 >= v50;
                v34 = 10 * v34 - v50;
                if (!v38)
                  break;
                v36 = 0;
                ++v49;
                if (!--v48)
                  goto LABEL_71;
              }
            }
          }
LABEL_67:
          v34 = 0;
          v36 = 1;
          goto LABEL_71;
        }
      }
    }
LABEL_53:
    v34 = 0;
LABEL_54:
    v36 = 1;
    v33 = (uint64_t)v53;
    goto LABEL_71;
  }
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

_QWORD *AchievementClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for AchievementClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE08920C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t AchievementClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0893F8);
}

uint64_t type metadata accessor for AchievementClient()
{
  return objc_opt_self();
}

uint64_t AchievementClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE089308);
}

uint64_t sub_1CE08821C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for AchievementEnvironmentCacheUpdated();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v8 = sub_1CE0B57A4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a1, v8);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v4, v2, &protocol witness table for AchievementEnvironmentCacheUpdated, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_1CE08958C((uint64_t)v4);
  }
  return result;
}

uint64_t AchievementClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AchievementClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t AchievementClient.runHistoricalEvaluation()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD00000000000006ELL;
  v2._object = (void *)0x80000001CE0CD090;
  v3._object = (void *)0x80000001CE0CD100;
  v3._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 269;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t AchievementClient.queryTemplates()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD00000000000006ELL;
  v2._object = (void *)0x80000001CE0CD090;
  v3._object = (void *)0x80000001CE0CD120;
  v3._countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 270;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  v8 = sub_1CE089464();
  v9 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F00A0, &qword_1ED8F05C8, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D96828]);
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t AchievementClient.populateAchievementProgressUpdates(forTemplateNames:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD00000000000006ELL;
  v4._object = (void *)0x80000001CE0CD090;
  v5._object = (void *)0x80000001CE0CD140;
  v5._countAndFlagsBits = 0xD000000000000035;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 271;
  v13 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  v10 = sub_1CE089464();
  v11 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F00A0, &qword_1ED8F05C8, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D96828]);
  return v8(&v14, &v13, v9, v10, v11, ObjectType, v6);
}

uint64_t AchievementClient.fetchSeymourAchievement(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD00000000000006ELL;
  v6._object = (void *)0x80000001CE0CD090;
  v7._object = (void *)0x80000001CE0CD180;
  v7._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 272;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B3E84();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D8FC90], MEMORY[0x1E0D8FC98], ObjectType, v8);
}

uint64_t AchievementClient.fetchSeymourAchievementProgress(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD00000000000006ELL;
  v4._object = (void *)0x80000001CE0CD090;
  v5._object = (void *)0x80000001CE0CD1A0;
  v5._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 278;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63688);
  v11 = sub_1CE089464();
  v12 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F00A0, &qword_1ED8F05C8, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D96828]);
  v13 = sub_1CDFB0260(&qword_1EFA63690, &qword_1EFA63688, MEMORY[0x1E0D8FCB8], MEMORY[0x1E0D8FCC0]);
  v14 = sub_1CDFB2F18(&qword_1EFA63698, &qword_1EFA63688, (uint64_t (*)(void))sub_1CE0894C0, MEMORY[0x1E0D968E8]);
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t AchievementClient.queryAchievementEnvironmentCache()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD00000000000006ELL;
  v2._object = (void *)0x80000001CE0CD090;
  v3._object = (void *)0x80000001CE0CD1D0;
  v3._countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 273;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B57A4();
  return v6(&v9, v7, MEMORY[0x1E0D94E08], MEMORY[0x1E0D94E10], ObjectType, v4);
}

uint64_t AchievementClient.fetchProgressUpdates(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 274;
  v13 = a1;
  v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA636A8);
  v8 = sub_1CE089464();
  v9 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F00A0, &qword_1ED8F05C8, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D96828]);
  v10 = sub_1CDFB0260(&qword_1EFA636B0, &qword_1EFA636A8, MEMORY[0x1E0D8FD18], MEMORY[0x1E0D8FD20]);
  v11 = sub_1CDFB2F18(&qword_1EFA636B8, &qword_1EFA636A8, (uint64_t (*)(void))sub_1CE089504, MEMORY[0x1E0D968E8]);
  return v5(&v14, &v13, v6, v7, v8, v9, v10, v11, ObjectType, v3);
}

uint64_t AchievementClient.queryEligibleToPresentAwardToast(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD v8[2];
  __int16 v9;

  v5 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v9 = 275;
  v8[0] = a1;
  v8[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v5 + 32))(&v9, v8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEAFA0], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], ObjectType, v5);
}

uint64_t AchievementClient.fetchCurrentStreakNotification()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 276;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E0D95CC8], MEMORY[0x1E0D95CB8], MEMORY[0x1E0D95CC0], ObjectType, v1);
}

uint64_t AchievementClient.journalAchievementNotificationRecord(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  __int16 v8;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 277;
  v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 16);
  v6 = sub_1CE0B58B8();
  return v5(&v8, a1, v6, MEMORY[0x1E0D95470], MEMORY[0x1E0D95478], ObjectType, v3);
}

uint64_t AchievementClient.deleteAchievementNotificationRecord(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v11[2];
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD00000000000006ELL;
  v6._object = (void *)0x80000001CE0CD090;
  v7._object = (void *)0x80000001CE0CD200;
  v7._countAndFlagsBits = 0xD000000000000029;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v12 = 279;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v8);
}

uint64_t sub_1CE088E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD v8[2];
  __int16 v9;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  ObjectType = swift_getObjectType();
  v9 = 275;
  v8[0] = a1;
  v8[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v5 + 32))(&v9, v8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEAFA0], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], ObjectType, v5);
}

uint64_t sub_1CE088EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 276;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E0D95CC8], MEMORY[0x1E0D95CB8], MEMORY[0x1E0D95CC0], ObjectType, v1);
}

uint64_t sub_1CE088F70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 274;
  v13 = a1;
  v5 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA636A8);
  v8 = sub_1CE089464();
  v9 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F00A0, &qword_1ED8F05C8, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D96828]);
  v10 = sub_1CDFB0260(&qword_1EFA636B0, &qword_1EFA636A8, MEMORY[0x1E0D8FD18], MEMORY[0x1E0D8FD20]);
  v11 = sub_1CDFB2F18(&qword_1EFA636B8, &qword_1EFA636A8, (uint64_t (*)(void))sub_1CE089504, MEMORY[0x1E0D968E8]);
  return v5(&v14, &v13, v6, v7, v8, v9, v10, v11, ObjectType, v3);
}

uint64_t sub_1CE0890A0(uint64_t a1, uint64_t a2)
{
  return AchievementClient.fetchSeymourAchievement(for:)(a1, a2);
}

uint64_t sub_1CE0890C0(uint64_t a1)
{
  return AchievementClient.fetchSeymourAchievementProgress(for:)(a1);
}

uint64_t sub_1CE0890E0(uint64_t a1)
{
  return AchievementClient.populateAchievementProgressUpdates(forTemplateNames:)(a1);
}

uint64_t sub_1CE089100()
{
  return AchievementClient.queryTemplates()();
}

uint64_t sub_1CE089120()
{
  return AchievementClient.queryAchievementEnvironmentCache()();
}

uint64_t sub_1CE089140()
{
  return AchievementClient.runHistoricalEvaluation()();
}

uint64_t sub_1CE089160(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v6;
  __int16 v8;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 277;
  v5 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 16);
  v6 = sub_1CE0B58B8();
  return v5(&v8, a1, v6, MEMORY[0x1E0D95470], MEMORY[0x1E0D95478], ObjectType, v3);
}

uint64_t sub_1CE0891EC(uint64_t a1, uint64_t a2)
{
  return AchievementClient.deleteAchievementNotificationRecord(for:)(a1, a2);
}

_QWORD *sub_1CE08920C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v11 = a1;
  v10 = 53;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B57A4();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v10, (uint64_t)sub_1CE089584, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D94E08], MEMORY[0x1E0D94E10]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE089308(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v15 = a1;
  v14 = 53;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B57A4();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v14, (uint64_t)sub_1CE089584, v11, ObjectType, v12, a7, MEMORY[0x1E0D94E08], MEMORY[0x1E0D94E10]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE0893F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for AchievementClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CE089308(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE089464()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED8F0098;
  if (!qword_1ED8F0098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F05C8);
    v2 = MEMORY[0x1E0D96790];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96820], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F0098);
  }
  return result;
}

unint64_t sub_1CE0894C0()
{
  unint64_t result;

  result = qword_1EFA636A0;
  if (!qword_1EFA636A0)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D8FCC8], MEMORY[0x1E0D8FCD8]);
    atomic_store(result, (unint64_t *)&qword_1EFA636A0);
  }
  return result;
}

unint64_t sub_1CE089504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA636C0;
  if (!qword_1EFA636C0)
  {
    v1 = sub_1CE0B3E90();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D8FD28], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA636C0);
  }
  return result;
}

uint64_t method lookup function for AchievementClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AchievementClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE089560()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE089584(uint64_t a1)
{
  return sub_1CE08821C(a1);
}

uint64_t sub_1CE08958C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AchievementEnvironmentCacheUpdated();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void static EngagementBannerRulesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t CoachingEventEnded.coachingEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CoachingEventEnded.init(coachingEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static CoachingEventEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for CoachingEventEnded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE08966C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CoachingEventEnded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0896B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CoachingEventEnded()
{
  uint64_t result;

  result = qword_1EFA63720;
  if (!qword_1EFA63720)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE089730()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1F20);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1F20);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE0897F0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C100);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C100);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE0898A8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C130);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C130);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089960()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1FB0);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1FB0);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089A18()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1FC8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1FC8);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089AD4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F2010);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F2010);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089B88()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C148);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C148);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089C3C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C160);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C160);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089D00()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C178);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C178);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089DBC()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C1A8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C1A8);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089E74()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C1C0);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C1C0);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089F38()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C1D8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C1D8);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE089FF0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1FE0);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1FE0);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A0B4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1F50);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1F50);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A178()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1EB8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1EB8);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A22C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1F80);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1F80);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A2E0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1FF8);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1FF8);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A394()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C1F0);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C1F0);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A44C()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C208);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C208);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A4FC()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1F68);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1F68);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A5AC()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C220);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C220);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A664()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C238);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C238);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A720()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F2058);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F2058);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CE08A7D4()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C298);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C298);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

void **sub_1CE08A88C(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1CE0B6080();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1CE0B6020();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t sub_1CE08A95C(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1CE0B6080();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + *(int *)(a2 + 24);
  v7 = sub_1CE0B6020();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

void **sub_1CE08A9D0(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CE0B6080();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1CE0B6020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **sub_1CE08AA78(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1CE0B6080();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1CE0B6020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

_QWORD *sub_1CE08AB1C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1CE0B6080();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1CE0B6020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **sub_1CE08ABB4(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CE0B6080();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1CE0B6020();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1CE08AC54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE08AC60(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1CE0B6080();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for ActivityTracer();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1CE08AD00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1CE08AD0C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1CE0B6080();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for ActivityTracer();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t CatalogWorkout.reference()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;
  uint64_t v67;
  void (*v68)(char *, unint64_t, uint64_t);
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int64_t v79;
  unint64_t v80;
  void (*v81)(char *, unint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  int64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;

  v129 = a1;
  v148 = sub_1CE0B3F38();
  v154 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v147 = (char *)&v125 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_1CE0B49AC();
  v127 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v126 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CE0B3CB0();
  MEMORY[0x1E0C80A78](v4);
  v130 = (char *)&v125 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_1CE0B5F84();
  v153 = *(_QWORD *)(v146 - 8);
  MEMORY[0x1E0C80A78](v146);
  v145 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v144 = sub_1CE0B5E70();
  v152 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1CE0B4244();
  v151 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v141 = (char *)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = sub_1CE0B3EF0();
  v150 = *(_QWORD *)(v140 - 8);
  MEMORY[0x1E0C80A78](v140);
  v139 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1CE0B5FC0();
  v149 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v137 = (char *)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = sub_1CE0B40A0();
  v135 = *(_QWORD *)(v136 - 8);
  v11 = MEMORY[0x1E0C80A78](v136);
  v134 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v133 = (char *)&v125 - v13;
  v131 = v1;
  v14 = sub_1CE0B46F4();
  v15 = *(_QWORD *)(v14 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  if (v15)
  {
    v155 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCF9BC(0, v15, 0);
    result = sub_1CDFD0128(v14);
    v18 = result;
    v20 = v19;
    v22 = v21 & 1;
    v132 = v14 + 56;
    while ((v18 & 0x8000000000000000) == 0 && v18 < 1 << *(_BYTE *)(v14 + 32))
    {
      if (((*(_QWORD *)(v132 + (((unint64_t)v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
        goto LABEL_66;
      if (*(_DWORD *)(v14 + 36) != (_DWORD)v20)
        goto LABEL_67;
      v23 = v135;
      v24 = v133;
      v25 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v133, *(_QWORD *)(v14 + 48) + *(_QWORD *)(v135 + 72) * v18, v136);
      v26 = v134;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v134, v24, v25);
      v27 = sub_1CE0B4094();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v25);
      v30 = v155;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CDFCF9BC(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = v155;
      }
      v32 = *(_QWORD *)(v30 + 16);
      v31 = *(_QWORD *)(v30 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1CDFCF9BC(v31 > 1, v32 + 1, 1);
        v30 = v155;
      }
      *(_QWORD *)(v30 + 16) = v32 + 1;
      v33 = v30 + 16 * v32;
      *(_QWORD *)(v33 + 32) = v27;
      *(_QWORD *)(v33 + 40) = v29;
      result = sub_1CDFD01CC(v18, v20, v22 & 1, v14);
      v18 = result;
      v20 = v34;
      v22 = v35 & 1;
      if (!--v15)
      {
        v136 = v30;
        sub_1CDFCD5BC(result, v34, v35 & 1);
        swift_bridgeObjectRelease();
        v16 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v136 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v36 = sub_1CE0B4814();
    v37 = *(_QWORD *)(v36 + 16);
    if (v37)
    {
      v155 = v16;
      sub_1CDFCF9BC(0, v37, 0);
      v38 = v36 + ((*(unsigned __int8 *)(v149 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v149 + 80));
      v39 = *(_QWORD *)(v149 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v149 + 16);
      do
      {
        v41 = v137;
        v42 = v138;
        v40(v137, v38, v138);
        v43 = sub_1CE0B5FB4();
        v45 = v44;
        (*(void (**)(char *, uint64_t))(v149 + 8))(v41, v42);
        v46 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v46 + 16) + 1, 1);
          v46 = v155;
        }
        v48 = *(_QWORD *)(v46 + 16);
        v47 = *(_QWORD *)(v46 + 24);
        if (v48 >= v47 >> 1)
        {
          sub_1CDFCF9BC(v47 > 1, v48 + 1, 1);
          v46 = v155;
        }
        *(_QWORD *)(v46 + 16) = v48 + 1;
        v49 = v46 + 16 * v48;
        *(_QWORD *)(v49 + 32) = v43;
        *(_QWORD *)(v49 + 40) = v45;
        v38 += v39;
        --v37;
      }
      while (v37);
      v149 = v46;
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v149 = MEMORY[0x1E0DEE9D8];
    }
    v50 = sub_1CE0B46D0();
    v51 = *(_QWORD *)(v50 + 16);
    if (v51)
    {
      v155 = v16;
      sub_1CDFCF9BC(0, v51, 0);
      v52 = v50 + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
      v53 = *(_QWORD *)(v150 + 72);
      v54 = *(void (**)(char *, unint64_t, uint64_t))(v150 + 16);
      do
      {
        v55 = v139;
        v56 = v140;
        v54(v139, v52, v140);
        v57 = sub_1CE0B3EE4();
        v59 = v58;
        (*(void (**)(char *, uint64_t))(v150 + 8))(v55, v56);
        v60 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v60 + 16) + 1, 1);
          v60 = v155;
        }
        v62 = *(_QWORD *)(v60 + 16);
        v61 = *(_QWORD *)(v60 + 24);
        if (v62 >= v61 >> 1)
        {
          sub_1CDFCF9BC(v61 > 1, v62 + 1, 1);
          v60 = v155;
        }
        *(_QWORD *)(v60 + 16) = v62 + 1;
        v63 = v60 + 16 * v62;
        *(_QWORD *)(v63 + 32) = v57;
        *(_QWORD *)(v63 + 40) = v59;
        v52 += v53;
        --v51;
      }
      while (v51);
      v150 = v60;
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v150 = MEMORY[0x1E0DEE9D8];
    }
    v64 = sub_1CE0B479C();
    v65 = *(_QWORD *)(v64 + 16);
    if (v65)
    {
      v155 = v16;
      sub_1CDFCF9BC(0, v65, 0);
      v66 = v64 + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
      v67 = *(_QWORD *)(v151 + 72);
      v68 = *(void (**)(char *, unint64_t, uint64_t))(v151 + 16);
      do
      {
        v70 = v141;
        v69 = v142;
        v68(v141, v66, v142);
        v71 = sub_1CE0B4238();
        v73 = v72;
        (*(void (**)(char *, uint64_t))(v151 + 8))(v70, v69);
        v74 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v74 + 16) + 1, 1);
          v74 = v155;
        }
        v76 = *(_QWORD *)(v74 + 16);
        v75 = *(_QWORD *)(v74 + 24);
        if (v76 >= v75 >> 1)
        {
          sub_1CDFCF9BC(v75 > 1, v76 + 1, 1);
          v74 = v155;
        }
        *(_QWORD *)(v74 + 16) = v76 + 1;
        v77 = v74 + 16 * v76;
        *(_QWORD *)(v77 + 32) = v71;
        *(_QWORD *)(v77 + 40) = v73;
        v66 += v67;
        --v65;
      }
      while (v65);
      v142 = v74;
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
      v142 = MEMORY[0x1E0DEE9D8];
    }
    v78 = sub_1CE0B4808();
    v79 = *(_QWORD *)(v78 + 16);
    if (v79)
    {
      v155 = v16;
      sub_1CDFCF9BC(0, v79, 0);
      v80 = v78 + ((*(unsigned __int8 *)(v152 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80));
      v151 = *(_QWORD *)(v152 + 72);
      v81 = *(void (**)(char *, unint64_t, uint64_t))(v152 + 16);
      do
      {
        v82 = v143;
        v83 = v144;
        v81(v143, v80, v144);
        v84 = sub_1CE0B5E10();
        v86 = v85;
        (*(void (**)(char *, uint64_t))(v152 + 8))(v82, v83);
        v87 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v87 + 16) + 1, 1);
          v87 = v155;
        }
        v89 = *(_QWORD *)(v87 + 16);
        v88 = *(_QWORD *)(v87 + 24);
        if (v89 >= v88 >> 1)
        {
          sub_1CDFCF9BC(v88 > 1, v89 + 1, 1);
          v87 = v155;
        }
        *(_QWORD *)(v87 + 16) = v89 + 1;
        v90 = v87 + 16 * v89;
        *(_QWORD *)(v90 + 32) = v84;
        *(_QWORD *)(v90 + 40) = v86;
        v80 += v151;
        --v79;
      }
      while (v79);
      swift_bridgeObjectRelease();
      v16 = MEMORY[0x1E0DEE9D8];
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v91 = sub_1CE0B46C4();
    v92 = *(_QWORD *)(v91 + 16);
    if (v92)
    {
      v155 = v16;
      sub_1CDFCF9BC(0, v92, 0);
      v93 = v91 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
      v94 = *(_QWORD *)(v153 + 72);
      v151 = *(_QWORD *)(v153 + 16);
      v152 = v94;
      do
      {
        v95 = v145;
        v96 = v146;
        ((void (*)(char *, unint64_t, uint64_t))v151)(v145, v93, v146);
        v97 = sub_1CE0B5F78();
        v99 = v98;
        (*(void (**)(char *, uint64_t))(v153 + 8))(v95, v96);
        v100 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v100 + 16) + 1, 1);
          v100 = v155;
        }
        v102 = *(_QWORD *)(v100 + 16);
        v101 = *(_QWORD *)(v100 + 24);
        if (v102 >= v101 >> 1)
        {
          sub_1CDFCF9BC(v101 > 1, v102 + 1, 1);
          v100 = v155;
        }
        *(_QWORD *)(v100 + 16) = v102 + 1;
        v103 = v100 + 16 * v102;
        *(_QWORD *)(v103 + 32) = v97;
        *(_QWORD *)(v103 + 40) = v99;
        v93 += v152;
        --v92;
      }
      while (v92);
    }
    swift_bridgeObjectRelease();
    v104 = sub_1CE0B46E8();
    v105 = *(_QWORD *)(v104 + 16);
    if (v105)
    {
      v155 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v105, 0);
      v106 = v104 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      v153 = *(_QWORD *)(v154 + 72);
      v107 = *(_QWORD *)(v154 + 16);
      v151 = v104;
      v152 = v107;
      do
      {
        v109 = v147;
        v108 = v148;
        ((void (*)(char *, unint64_t, uint64_t))v152)(v147, v106, v148);
        v110 = sub_1CE0B3F2C();
        v112 = v111;
        (*(void (**)(char *, uint64_t))(v154 + 8))(v109, v108);
        v113 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v113 + 16) + 1, 1);
          v113 = v155;
        }
        v115 = *(_QWORD *)(v113 + 16);
        v114 = *(_QWORD *)(v113 + 24);
        if (v115 >= v114 >> 1)
        {
          sub_1CDFCF9BC(v114 > 1, v115 + 1, 1);
          v113 = v155;
        }
        *(_QWORD *)(v113 + 16) = v115 + 1;
        v116 = v113 + 16 * v115;
        *(_QWORD *)(v116 + 32) = v110;
        *(_QWORD *)(v116 + 40) = v112;
        v106 += v153;
        --v105;
      }
      while (v105);
    }
    swift_bridgeObjectRelease();
    v117 = sub_1CE0B4724();
    v153 = v118;
    v154 = v117;
    LODWORD(v152) = v119 & 1;
    sub_1CE0B4700();
    sub_1CE0B47E4();
    v151 = sub_1CE0B47C0();
    v120 = sub_1CE0B46AC();
    v147 = v121;
    v148 = v120;
    v122 = sub_1CE0B4820();
    v145 = v123;
    v146 = v122;
    v124 = v126;
    sub_1CE0B47FC();
    sub_1CE0B491C();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v124, v128);
    sub_1CE0B4790();
    sub_1CE0B47A8();
    return sub_1CE0B52A0();
  }
  return result;
}

uint64_t MultiUserSession.applyingTimestampOffset(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E800);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E808);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B4CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_1CE0B4CDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_1CE0B4BD4();
  sub_1CE0B4BE0();
  sub_1CDFB13F8((uint64_t)v2, &qword_1EFA5E800);
  return sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5E808);
}

uint64_t sub_1CE08BBA4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E800);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E808);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B4CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_1CE0B4CDC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 1, 1, v7);
  sub_1CE0B4BD4();
  sub_1CE0B4BE0();
  sub_1CDFB13F8((uint64_t)v2, &qword_1EFA5E800);
  return sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5E808);
}

id sub_1CE08BCF8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CE0C21B0;
  v1 = (void *)*MEMORY[0x1E0C967A0];
  v2 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C967A0];
  *(_QWORD *)(v0 + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0C966A8];
  v9 = (id)*MEMORY[0x1E0C967C0];
  v4 = *MEMORY[0x1E0C967C0];
  v10 = v0;
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0C966A8];
  *(_QWORD *)(v0 + 56) = v4;
  sub_1CE0B644C();
  qword_1EFA63760 = v10;
  v5 = v1;
  v6 = v2;
  v7 = v3;
  return v9;
}

uint64_t static ContactService.defaultKeys.getter()
{
  if (qword_1EFA5D628 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t ContactService.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  ContactService.init()();
  return v0;
}

id sub_1CE08BE18()
{
  id v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1CDFB103C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA637D0);
  v1 = (void *)sub_1CE0B6434();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_smu_meContactWithKeysToFetch_error_, v1, v7);

  v3 = v7[0];
  if (!v2)
  {
    v4 = v3;
    v5 = (void *)sub_1CE0B3CC8();

    swift_willThrow();
    return 0;
  }
  return v2;
}

uint64_t ContactService.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

Swift::String_optional __swiftcall ContactService.userFirstName()()
{
  id v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  Swift::String_optional result;

  v0 = sub_1CE08BE18();
  if (v0)
  {
    v1 = v0;
    v2 = sub_1CE08CA2C(v0);
    v4 = v3;

  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v5 = v2;
  v6 = v4;
  result.value._object = v6;
  result.value._countAndFlagsBits = v5;
  return result;
}

Swift::String_optional __swiftcall ContactService.firstName(for:)(Swift::String a1)
{
  void *object;
  void *countAndFlagsBits;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  uint64_t v27;
  void *v28;
  Swift::String_optional result;
  id v30;
  void *v31;
  uint64_t v32;

  object = a1._object;
  countAndFlagsBits = (void *)a1._countAndFlagsBits;
  v32 = *MEMORY[0x1E0C80C00];
  v3 = sub_1CDFB103C();
  v30 = countAndFlagsBits;
  v31 = object;
  sub_1CDFC7620();
  if ((sub_1CE0B692C() & 1) != 0 || (v30 = countAndFlagsBits, v31 = object, (sub_1CE0B692C() & 1) != 0))
  {
    v4 = (void *)objc_opt_self();
    v5 = (id)sub_1CE0B626C();
    v6 = objc_msgSend(v4, sel_predicateForContactsMatchingEmailAddress_, v5);
  }
  else
  {
    v7 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1CE0B626C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v7, sel_initWithStringValue_, v8);

    v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsMatchingPhoneNumber_, v5);
  }
  v9 = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CE0C4590;
  v11 = (void *)*MEMORY[0x1E0C967A0];
  v12 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v10 + 32) = *MEMORY[0x1E0C967A0];
  *(_QWORD *)(v10 + 40) = v12;
  sub_1CE0B644C();
  v13 = v11;
  v14 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA637D0);
  v15 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  v30 = 0;
  v16 = objc_msgSend(v3, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v15, &v30);

  v17 = v30;
  if (!v16)
  {
    v25 = v30;
    v26 = (void *)sub_1CE0B3CC8();

    swift_willThrow();
    v23 = 0;
    v20 = 0;
    goto LABEL_15;
  }
  sub_1CE08CADC();
  v18 = sub_1CE0B6440();
  v19 = v17;

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_8;
LABEL_14:
    swift_bridgeObjectRelease();
    v23 = 0;
    goto LABEL_15;
  }
  v20 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v20)
    goto LABEL_14;
LABEL_8:
  if ((v18 & 0xC000000000000001) != 0)
  {
    v21 = (id)MEMORY[0x1D17BFD98](0, v18);
  }
  else
  {
    if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v21 = *(id *)(v18 + 32);
  }
  v22 = v21;
  swift_bridgeObjectRelease();
  v23 = sub_1CE08CA2C(v22);
  v20 = v24;

LABEL_15:
  v27 = v23;
  v28 = (void *)v20;
  result.value._object = v28;
  result.value._countAndFlagsBits = v27;
  return result;
}

Swift::String_optional __swiftcall ContactService.lastName(for:)(Swift::String a1)
{
  void *object;
  void *countAndFlagsBits;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void **v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  unint64_t v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  Swift::String_optional result;
  id v35;
  void *v36;
  uint64_t v37;

  object = a1._object;
  countAndFlagsBits = (void *)a1._countAndFlagsBits;
  v37 = *MEMORY[0x1E0C80C00];
  v3 = sub_1CDFB103C();
  v35 = countAndFlagsBits;
  v36 = object;
  sub_1CDFC7620();
  if ((sub_1CE0B692C() & 1) != 0 || (v35 = countAndFlagsBits, v36 = object, (sub_1CE0B692C() & 1) != 0))
  {
    v4 = (void *)objc_opt_self();
    v5 = (id)sub_1CE0B626C();
    v6 = objc_msgSend(v4, sel_predicateForContactsMatchingEmailAddress_, v5);
  }
  else
  {
    v7 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1CE0B626C();
    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v7, sel_initWithStringValue_, v8);

    v6 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsMatchingPhoneNumber_, v5);
  }
  v9 = v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  v10 = swift_allocObject();
  v11 = (void **)MEMORY[0x1E0C967A0];
  *(_OWORD *)(v10 + 16) = xmmword_1CE0C45A0;
  v12 = *v11;
  v13 = (void *)*MEMORY[0x1E0C966C0];
  *(_QWORD *)(v10 + 32) = *v11;
  *(_QWORD *)(v10 + 40) = v13;
  v14 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v10 + 48) = *MEMORY[0x1E0C966D0];
  sub_1CE0B644C();
  v15 = v12;
  v16 = v13;
  v17 = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA637D0);
  v18 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  v35 = 0;
  v19 = objc_msgSend(v3, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v18, &v35);

  v20 = v35;
  if (!v19)
  {
    v29 = v35;
    v30 = (void *)sub_1CE0B3CC8();

    swift_willThrow();
LABEL_15:
    v26 = 0;
    v28 = 0;
    goto LABEL_16;
  }
  sub_1CE08CADC();
  v21 = sub_1CE0B6440();
  v22 = v20;

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    if (v31)
      goto LABEL_8;
    goto LABEL_14;
  }
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_8:
  if ((v21 & 0xC000000000000001) != 0)
  {
    v23 = (id)MEMORY[0x1D17BFD98](0, v21);
  }
  else
  {
    if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v23 = *(id *)(v21 + 32);
  }
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v24, sel_familyName);
  v26 = sub_1CE0B6278();
  v28 = v27;

LABEL_16:
  v32 = v26;
  v33 = v28;
  result.value._object = v33;
  result.value._countAndFlagsBits = v32;
  return result;
}

uint64_t ContactService.thumbnailImageData(for:)(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v28;
  uint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = sub_1CDFB103C();
  v28 = a1;
  v29 = a2;
  sub_1CDFC7620();
  if ((sub_1CE0B692C() & 1) != 0 || (v28 = a1, v29 = a2, (sub_1CE0B692C() & 1) != 0))
  {
    v5 = (void *)objc_opt_self();
    v6 = (id)sub_1CE0B626C();
    v7 = objc_msgSend(v5, sel_predicateForContactsMatchingEmailAddress_, v6);
  }
  else
  {
    v8 = objc_allocWithZone(MEMORY[0x1E0C97398]);
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1CE0B626C();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v8, sel_initWithStringValue_, v9);

    v7 = objc_msgSend((id)objc_opt_self(), sel_predicateForContactsMatchingPhoneNumber_, v6);
  }
  v10 = v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CE0C21C0;
  v12 = (void *)*MEMORY[0x1E0C96890];
  *(_QWORD *)(v11 + 32) = *MEMORY[0x1E0C96890];
  sub_1CE0B644C();
  v13 = v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA637D0);
  v14 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  v28 = 0;
  v15 = objc_msgSend(v4, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v10, v14, &v28);

  v16 = v28;
  if (!v15)
  {
    v24 = v28;
    v25 = (void *)sub_1CE0B3CC8();

    swift_willThrow();
    return 0;
  }
  sub_1CE08CADC();
  v17 = sub_1CE0B6440();
  v18 = v16;

  if (!(v17 >> 62))
  {
    if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v26 = sub_1CE0B6B30();
  swift_bridgeObjectRelease();
  if (!v26)
    goto LABEL_16;
LABEL_8:
  if ((v17 & 0xC000000000000001) != 0)
  {
    v19 = (id)MEMORY[0x1D17BFD98](0, v17);
  }
  else
  {
    if (!*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
      __break(1u);
    v19 = *(id *)(v17 + 32);
  }
  v20 = v19;
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v20, sel_thumbnailImageData);
  if (!v21)
  {

    return 0;
  }
  v22 = v21;
  v23 = sub_1CE0B3D64();

  return v23;
}

uint64_t sub_1CE08C978()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = sub_1CE08BE18();
  if (!v0)
    return 0;
  v1 = v0;
  v2 = sub_1CE08CA2C(v0);

  return v2;
}

uint64_t sub_1CE08C9CC(uint64_t a1, uint64_t a2)
{
  return ContactService.firstName(for:)(*(Swift::String *)&a1).value._countAndFlagsBits;
}

uint64_t sub_1CE08C9EC(uint64_t a1, uint64_t a2)
{
  return ContactService.lastName(for:)(*(Swift::String *)&a1).value._countAndFlagsBits;
}

uint64_t sub_1CE08CA0C(void *a1, uint64_t a2)
{
  return ContactService.thumbnailImageData(for:)(a1, a2);
}

uint64_t sub_1CE08CA2C(void *a1)
{
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  char **v7;
  id v8;
  uint64_t v9;

  v2 = objc_msgSend(a1, sel_nickname);
  v3 = sub_1CE0B6278();
  v5 = v4;

  swift_bridgeObjectRelease();
  v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0)
    v6 = v3 & 0xFFFFFFFFFFFFLL;
  if (v6)
    v7 = &selRef_nickname;
  else
    v7 = &selRef_givenName;
  v8 = objc_msgSend(a1, *v7);
  v9 = sub_1CE0B6278();

  return v9;
}

unint64_t sub_1CE08CADC()
{
  unint64_t result;

  result = qword_1EFA637E0;
  if (!qword_1EFA637E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFA637E0);
  }
  return result;
}

uint64_t dispatch thunk of ContactServiceProtocol.userFirstName()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactServiceProtocol.firstName(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ContactServiceProtocol.lastName(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of ContactServiceProtocol.thumbnailImageData(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t method lookup function for ContactService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContactService.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t CatalogModality.reference()()
{
  uint64_t v0;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA637E8);
  MEMORY[0x1E0C80A78](v0);
  sub_1CE0B49A0();
  sub_1CE0B4940();
  sub_1CE0B494C();
  sub_1CE0B491C();
  sub_1CE0B4964();
  sub_1CE0B4958();
  sub_1CE0B4970();
  return sub_1CE0B5408();
}

uint64_t storeEnumTagSinglePayload for BlockingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE08CC78 + 4 * byte_1CE0C461D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE08CCAC + 4 * byte_1CE0C4618[v4]))();
}

uint64_t sub_1CE08CCAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE08CCB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE08CCBCLL);
  return result;
}

uint64_t sub_1CE08CCC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE08CCD0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE08CCD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE08CCDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BlockingError()
{
  return &type metadata for BlockingError;
}

unint64_t sub_1CE08CCFC()
{
  unint64_t result;

  result = qword_1EFA637F0;
  if (!qword_1EFA637F0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C4674, &type metadata for BlockingError);
    atomic_store(result, (unint64_t *)&qword_1EFA637F0);
  }
  return result;
}

uint64_t sub_1CE08CD40()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_1CE0B6218();
  if (*(_QWORD *)(v2 + 16) && (sub_1CDFD1DAC(0xD000000000000024, 0x80000001CE0CD330), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1CE0B3CEC();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1CE0B3CEC();
  }
}

uint64_t static URL.mobileCachesDirectory()()
{
  return sub_1CE08CFD8();
}

uint64_t static URL.mobileLibrarySeymourDirectory()()
{
  return sub_1CE08CFD8();
}

uint64_t static URL.seymourJournalDirectory()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v0 = sub_1CE0B3D10();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v9 - v5;
  sub_1CE08CD40();
  sub_1CE0B3CF8();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v4, v0);
  sub_1CE0B3CF8();
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

uint64_t static URL.userManagedAssetsDirectory()()
{
  return sub_1CE08CFD8();
}

uint64_t static URL.mobileLibrarySeymourAwardAssetDirectory()()
{
  return sub_1CE08CFD8();
}

uint64_t sub_1CE08CFD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1CE0B3D10();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE08CD40();
  sub_1CE0B3CF8();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t ArchivedSessionsUpdated.init(workoutIdentifiers:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t ArchivedSessionsUpdated.workoutIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

void static ArchivedSessionsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

_QWORD *StreamingKeyDeliveryClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for StreamingKeyDeliveryClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *StreamingKeyDeliveryClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE08DA5C(a1, v3, ObjectType, a2, a3);
}

uint64_t StreamingKeyDeliveryClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t StreamingKeyDeliveryClient.fetchCertificateContext()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  __int16 v17;

  v2 = v1;
  v16 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E000);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v10, (uint64_t)v9);
  v11 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v17 = 136;
  v13 = *(void (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 24);
  v14 = sub_1CE0B50B4();
  swift_retain();
  v13(&v17, v14, MEMORY[0x1E0D93458], MEMORY[0x1E0D93460], ObjectType, v11);
  sub_1CDFDED00("StreamingKeyDeliveryClient::fetchCertificateContext", 51, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return sub_1CE03ACA4((uint64_t)v9);
}

uint64_t StreamingKeyDeliveryClient.fetchContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DFF0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B50D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 137;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B3EB4();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D935C8], MEMORY[0x1E0D935D0], MEMORY[0x1E0D8FEF0], MEMORY[0x1E0D8FEF8], ObjectType, v16);
  sub_1CDFDF3B8("StreamingKeyDeliveryClient::fetchContext", 40, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CE03ACA4((uint64_t)v14);
}

uint64_t StreamingKeyDeliveryClient.renewContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DFF0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B50D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 138;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B3EB4();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D935C8], MEMORY[0x1E0D935D0], MEMORY[0x1E0D8FEF0], MEMORY[0x1E0D8FEF8], ObjectType, v16);
  sub_1CDFDF3B8("StreamingKeyDeliveryClient::renewContext", 40, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CE03ACA4((uint64_t)v14);
}

uint64_t StreamingKeyDeliveryClient.releaseContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;

  v3 = v2;
  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B50D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v23 = 139;
  v18 = *(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(&v23, v11, v8, MEMORY[0x1E0D935C8], MEMORY[0x1E0D935D0], ObjectType, v16);
  sub_1CDFDB0F0("StreamingKeyDeliveryClient::releaseContext", 42, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1CE03ACA4((uint64_t)v14);
}

uint64_t sub_1CE08D9DC@<X0>(uint64_t a1@<X8>)
{
  return StreamingKeyDeliveryClient.fetchCertificateContext()(a1);
}

uint64_t sub_1CE08D9FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingKeyDeliveryClient.fetchContext(spc:)(a1, a2);
}

uint64_t sub_1CE08DA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingKeyDeliveryClient.renewContext(spc:)(a1, a2);
}

uint64_t sub_1CE08DA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StreamingKeyDeliveryClient.releaseContext(spc:)(a1, a2);
}

_QWORD *sub_1CE08DA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for StreamingKeyDeliveryClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for StreamingKeyDeliveryClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StreamingKeyDeliveryClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t EnergyMetricUpdated.energyMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4274();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t EnergyMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for EnergyMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for EnergyMetricUpdated()
{
  uint64_t result;

  result = qword_1EFA638F0;
  if (!qword_1EFA638F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t EnergyMetricUpdated.init(energyMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B4274();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for EnergyMetricUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static EnergyMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for EnergyMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B4274();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EnergyMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4274();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B4274();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B4274();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B4274();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for EnergyMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B4274();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnergyMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE08DE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B4274();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for EnergyMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE08DEF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B4274();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CE08DF74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4274();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AnalyticsEventOccurred.init(event:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CDFC3290(a1, a2);
}

void static AnalyticsEventOccurred.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeWithCopy for AnalyticsEventOccurred(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for AnalyticsEventOccurred(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t assignWithTake for AnalyticsEventOccurred(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnalyticsEventOccurred(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnalyticsEventOccurred(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnalyticsEventOccurred()
{
  return &type metadata for AnalyticsEventOccurred;
}

uint64_t PersonalizationPlaylist.init(_:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v6 = sub_1CE0B42A4();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v48 - v10;
  MEMORY[0x1E0C80A78](v9);
  v58 = (char *)&v48 - v11;
  v12 = sub_1CE0B57EC();
  v66 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v57 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v48 - v15;
  v16 = sub_1CE0B3DF4();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B5F30();
  v20 = (void *)sub_1CE0B3DAC();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v21 = objc_msgSend(a2, sel_stringFromDate_, v20);

  v22 = sub_1CE0B6278();
  v53 = v23;
  v54 = v22;

  v24 = sub_1CE0B5F24();
  v51 = v25;
  v52 = v24;
  v26 = sub_1CE0B5F54();
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v48 = a3;
    v49 = a2;
    v50 = a1;
    v68 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCFAEC(0, v27, 0);
    result = sub_1CDFD0128(v26);
    v30 = result;
    v32 = v31 & 1;
    v55 = v26;
    v56 = v26 + 56;
    v33 = v62;
    v34 = v59;
    v35 = v57;
    while ((v30 & 0x8000000000000000) == 0 && v30 < 1 << *(_BYTE *)(v26 + 32))
    {
      if (((*(_QWORD *)(v56 + (((unint64_t)v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v26 + 36) != (_DWORD)v29)
        goto LABEL_17;
      v63 = v32;
      v64 = v29;
      v36 = *(_QWORD *)(v26 + 48);
      v37 = v61;
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
      v39 = v58;
      v38(v58, v36 + *(_QWORD *)(v61 + 72) * v30, v33);
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v39, v33);
      v40 = v60;
      v38(v60, (uint64_t)v34, v33);
      sub_1CE0B4280();
      sub_1CE0B4298();
      sub_1CE0B428C();
      sub_1CE0B57E0();
      v41 = *(void (**)(char *, uint64_t))(v37 + 8);
      v41(v40, v33);
      v42 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
      v42(v65, v35, v67);
      v41(v34, v33);
      v43 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CDFCFAEC(0, *(_QWORD *)(v43 + 16) + 1, 1);
        v43 = v68;
      }
      v45 = *(_QWORD *)(v43 + 16);
      v44 = *(_QWORD *)(v43 + 24);
      v26 = v55;
      if (v45 >= v44 >> 1)
      {
        sub_1CDFCFAEC(v44 > 1, v45 + 1, 1);
        v43 = v68;
      }
      *(_QWORD *)(v43 + 16) = v45 + 1;
      v42((char *)(v43+ ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v45), v65, v67);
      v68 = v43;
      result = sub_1CDFD01CC(v30, v64, v63 & 1, v26);
      v30 = result;
      v32 = v46 & 1;
      if (!--v27)
      {
        sub_1CDFCD5BC(result, v29, v32);
        swift_bridgeObjectRelease();
        a2 = v49;
        a1 = v50;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v43 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    sub_1CDFD0608(v43);
    swift_bridgeObjectRelease();
    sub_1CE0B5F48();
    sub_1CE0B5354();

    v47 = sub_1CE0B5F60();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(a1, v47);
  }
  return result;
}

uint64_t PersonalizationPlaylistItem.init(_:)(uint64_t a1)
{
  uint64_t v2;

  sub_1CE0B4280();
  sub_1CE0B4298();
  sub_1CE0B428C();
  sub_1CE0B57E0();
  v2 = sub_1CE0B42A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t PersonalizationArchivedSession.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  char v12;
  unsigned __int8 v13;
  BOOL v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  unsigned int v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[2];
  char v40;

  v4 = sub_1CE0B3DF4();
  MEMORY[0x1E0C80A78](v4);
  result = sub_1CE0B48D4();
  v7 = v6;
  v8 = HIBYTE(v6) & 0xF;
  v9 = result & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0)
    v10 = v8;
  else
    v10 = result & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
    goto LABEL_58;
  }
  if ((v7 & 0x1000000000000000) != 0)
  {
    v35 = sub_1CE08EF1C(result, v7, 10);
    swift_bridgeObjectRelease();
    if ((v35 & 0x100000000) == 0)
      goto LABEL_37;
    goto LABEL_58;
  }
  if ((v7 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0)
      v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v11 = (unsigned __int8 *)sub_1CE0B6A64();
    v40 = ((unint64_t)sub_1CE08F150(v11, v9, 10) >> 32) & 1;
    v12 = v40;
LABEL_36:
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
LABEL_37:
      sub_1CE0B48E0();
      sub_1CE0B48F8();
      sub_1CE0B593C();
LABEL_59:

      v38 = sub_1CE0B4904();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(a1, v38);
    }
LABEL_58:
    v36 = sub_1CE0B4ED4();
    sub_1CE08F000();
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v37, *MEMORY[0x1E0D92C80], v36);
    swift_willThrow();
    goto LABEL_59;
  }
  v39[0] = result;
  v39[1] = v7 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v8)
      goto LABEL_62;
    if (v8 != 1)
    {
      v16 = (BYTE1(result) - 48);
      if (v16 <= 9)
      {
        if (v8 == 2)
          goto LABEL_35;
        if ((BYTE2(result) - 48) <= 9u)
        {
          v17 = 10 * v16 + (BYTE2(result) - 48);
          v18 = v8 - 3;
          if (v18)
          {
            v19 = (unsigned __int8 *)v39 + 3;
            while (1)
            {
              v20 = *v19 - 48;
              if (v20 > 9)
                goto LABEL_33;
              v21 = 10 * v17;
              if ((v21 & 0xFFFFFFFF00000000) != 0)
                goto LABEL_33;
              v17 = v21 + v20;
              if (__CFADD__((_DWORD)v21, v20))
                goto LABEL_33;
              v12 = 0;
              ++v19;
              if (!--v18)
                goto LABEL_36;
            }
          }
          goto LABEL_35;
        }
      }
    }
LABEL_33:
    v12 = 1;
    goto LABEL_36;
  }
  if (result != 45)
  {
    if (v8)
    {
      v22 = (result - 48);
      if (v22 <= 9)
      {
        if (v8 == 1)
          goto LABEL_35;
        if ((BYTE1(result) - 48) <= 9u)
        {
          v23 = 10 * v22 + (BYTE1(result) - 48);
          v24 = v8 - 2;
          if (v24)
          {
            v25 = (unsigned __int8 *)v39 + 2;
            while (1)
            {
              v26 = *v25 - 48;
              if (v26 > 9)
                goto LABEL_33;
              v27 = 10 * v23;
              if ((v27 & 0xFFFFFFFF00000000) != 0)
                goto LABEL_33;
              v23 = v27 + v26;
              if (__CFADD__((_DWORD)v27, v26))
                goto LABEL_33;
              v12 = 0;
              ++v25;
              if (!--v24)
                goto LABEL_36;
            }
          }
          goto LABEL_35;
        }
      }
    }
    goto LABEL_33;
  }
  if (v8)
  {
    if (v8 == 1)
      goto LABEL_33;
    v13 = BYTE1(result) - 48;
    if ((BYTE1(result) - 48) > 9u)
      goto LABEL_33;
    v14 = v13 == 0;
    v15 = -v13;
    if (!v14)
      goto LABEL_33;
    if (v8 == 2)
    {
      v12 = 0;
      goto LABEL_36;
    }
    v28 = BYTE2(result) - 48;
    if ((BYTE2(result) - 48) > 9u)
      goto LABEL_33;
    v29 = 10 * v15;
    if ((v29 & 0xFFFFFFFF00000000) != 0)
      goto LABEL_33;
    v30 = v29 - v28;
    if (v29 < v28)
      goto LABEL_33;
    v31 = v8 - 3;
    if (v31)
    {
      v32 = (unsigned __int8 *)v39 + 3;
      while (1)
      {
        v33 = *v32 - 48;
        if (v33 > 9)
          goto LABEL_33;
        v34 = 10 * v30;
        if ((v34 & 0xFFFFFFFF00000000) != 0)
          goto LABEL_33;
        v30 = v34 - v33;
        if (v34 < v33)
          goto LABEL_33;
        v12 = 0;
        ++v32;
        if (!--v31)
          goto LABEL_36;
      }
    }
LABEL_35:
    v12 = 0;
    goto LABEL_36;
  }
  __break(1u);
LABEL_62:
  __break(1u);
  return result;
}

unint64_t sub_1CE08E9B8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unint64_t v8;
  char v9;
  int v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;

  v3 = HIBYTE(a2) & 0xF;
  v4 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v21 = 0;
    LOBYTE(v20) = 1;
    return v21 | ((unint64_t)v20 << 32);
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1CE0B6A64();
      v7 = sub_1CE08F150(v6, v4, 10);
      LODWORD(v8) = (_DWORD)v7;
      v27 = BYTE4(v7) & 1;
      v9 = BYTE4(v7) & 1;
      goto LABEL_38;
    }
    v26[0] = a1;
    v26[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    v10 = a1;
    if (a1 == 43)
    {
      if (v3)
      {
        if (v3 != 1)
        {
          LODWORD(v8) = (BYTE1(a1) - 48);
          if (v8 <= 9)
          {
            v15 = v3 - 2;
            if (v15)
            {
              v16 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                v17 = *v16 - 48;
                if (v17 > 9)
                  goto LABEL_35;
                v18 = 10 * v8;
                if ((v18 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_35;
                LODWORD(v8) = v18 + v17;
                if (__CFADD__((_DWORD)v18, v17))
                  goto LABEL_35;
                v9 = 0;
                ++v16;
                if (!--v15)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (a1 != 45)
      {
        if (v3)
        {
          LODWORD(v8) = (a1 - 48);
          if (v8 <= 9)
          {
            v19 = v3 - 1;
            if (v19)
            {
              v23 = (unsigned __int8 *)v26 + 1;
              while (1)
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  goto LABEL_35;
                v25 = 10 * v8;
                if ((v25 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_35;
                LODWORD(v8) = v25 + v24;
                if (__CFADD__((_DWORD)v25, v24))
                  goto LABEL_35;
                v9 = 0;
                ++v23;
                if (!--v19)
                  goto LABEL_38;
              }
            }
            goto LABEL_37;
          }
        }
        goto LABEL_35;
      }
      if (v3)
      {
        if (v3 != 1 && (BYTE1(a1) - 48) <= 9u)
        {
          v10 = 0;
          LODWORD(v8) = -(BYTE1(a1) - 48);
          if (BYTE1(a1) == 48)
          {
            v11 = v3 - 2;
            if (v11)
            {
              v12 = (unsigned __int8 *)v26 + 2;
              while (1)
              {
                v13 = *v12 - 48;
                if (v13 > 9)
                  goto LABEL_35;
                v14 = 10 * v8;
                if ((v14 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_35;
                LODWORD(v8) = v14 - v13;
                if (v14 < v13)
                  goto LABEL_35;
                v9 = 0;
                ++v12;
                if (!--v11)
                  goto LABEL_38;
              }
            }
LABEL_37:
            v9 = 0;
            goto LABEL_38;
          }
LABEL_53:
          v9 = 1;
          LODWORD(v8) = v10;
          goto LABEL_38;
        }
LABEL_35:
        LODWORD(v8) = 0;
        v9 = 1;
LABEL_38:
        swift_bridgeObjectRelease();
        LODWORD(v20) = v9 & 1;
        goto LABEL_39;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_53;
  }
  v8 = sub_1CE08EF1C(a1, a2, 10);
  swift_bridgeObjectRelease();
  v20 = HIDWORD(v8) & 1;
LABEL_39:
  v21 = v8;
  if ((_DWORD)v20)
    v21 = 0;
  return v21 | ((unint64_t)v20 << 32);
}

uint64_t sub_1CE08EC14(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1CE0B6A64();
      v7 = (uint64_t)sub_1CE08F3D0(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = sub_1CE08F060(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CE08F3D0);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t sub_1CE08EE68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1CE0B6344();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1D17BF690](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1CE08EEE0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE08F150(a1, a2, a3);
}

unsigned __int8 *sub_1CE08EEF4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE08F3D0(a1, a2, a3);
}

unsigned __int8 *sub_1CE08EF08(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_1CE08F64C(a1, a2, a3);
}

uint64_t sub_1CE08EF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1CE0B6368();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1CE08F8C8();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1CE0B6A64();
  }
LABEL_7:
  v11 = sub_1CE08F150(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11 | ((((unint64_t)v11 >> 32) & 1) << 32);
}

unint64_t sub_1CE08F000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA63928;
  if (!qword_1EFA63928)
  {
    v1 = sub_1CE0B4ED4();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D92CC8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA63928);
  }
  return result;
}

uint64_t sub_1CE08F048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE08F060(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CE08F3D0);
}

uint64_t sub_1CE08F054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE08F060(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CE08F64C);
}

uint64_t sub_1CE08F060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1CE0B6368();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1CE08F8C8();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1CE0B6A64();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1CE08F150(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned int v8;
  unsigned __int8 *v9;
  unsigned int v10;
  char v11;
  unsigned int v12;
  unsigned __int8 v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned int v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      v16 = a2 - 1;
      if (a2 != 1)
      {
        v17 = a3 + 87;
        if (a3 > 10)
        {
          v18 = a3 + 55;
        }
        else
        {
          v17 = 97;
          v18 = 65;
        }
        if (a3 <= 10)
          v19 = a3 + 48;
        else
          v19 = 58;
        if (result)
        {
          v8 = 0;
          v20 = result + 1;
          do
          {
            v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                v12 = 0;
                v13 = 1;
                if (v21 < 0x61 || v21 >= v17)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v22 = -87;
              }
              else
              {
                v22 = -55;
              }
            }
            else
            {
              v22 = -48;
            }
            v23 = v8 * (unint64_t)a3;
            if ((v23 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v24 = v21 + v22;
            v8 = v23 + v24;
            if (__CFADD__((_DWORD)v23, v24))
              goto LABEL_72;
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          v13 = 0;
          v12 = v8;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
LABEL_72:
      v12 = 0;
      v13 = 1;
      return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        v25 = a3 + 87;
        if (a3 > 10)
        {
          v26 = a3 + 55;
        }
        else
        {
          v25 = 97;
          v26 = 65;
        }
        if (a3 <= 10)
          v27 = a3 + 48;
        else
          v27 = 58;
        if (result)
        {
          v28 = 0;
          do
          {
            v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                v12 = 0;
                v13 = 1;
                if (v29 < 0x61 || v29 >= v25)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v30 = -87;
              }
              else
              {
                v30 = -55;
              }
            }
            else
            {
              v30 = -48;
            }
            v31 = v28 * (unint64_t)a3;
            if ((v31 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v32 = v29 + v30;
            v28 = v31 + v32;
            if (__CFADD__((_DWORD)v31, v32))
              goto LABEL_72;
            ++result;
            --a2;
          }
          while (a2);
          v13 = 0;
          v12 = v28;
          return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      v4 = a2 - 1;
      if (a2 != 1)
      {
        v5 = a3 + 87;
        if (a3 > 10)
        {
          v6 = a3 + 55;
        }
        else
        {
          v5 = 97;
          v6 = 65;
        }
        if (a3 <= 10)
          v7 = a3 + 48;
        else
          v7 = 58;
        if (result)
        {
          v8 = 0;
          v9 = result + 1;
          while (1)
          {
            v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                v12 = 0;
                v13 = 1;
                if (v10 < 0x61 || v10 >= v5)
                  return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
                v11 = -87;
              }
              else
              {
                v11 = -55;
              }
            }
            else
            {
              v11 = -48;
            }
            v14 = v8 * (unint64_t)a3;
            if ((v14 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_72;
            v15 = v10 + v11;
            v8 = v14 - v15;
            if (v14 < v15)
              goto LABEL_72;
            ++v9;
            if (!--v4)
              goto LABEL_48;
          }
        }
LABEL_71:
        v12 = 0;
        v13 = 0;
        return (unsigned __int8 *)(v12 | ((unint64_t)v13 << 32));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1CE08F3D0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_1CE08F64C(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  unint64_t v13;
  unsigned __int8 v14;
  BOOL v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  unsigned __int8 *v20;
  unsigned int v21;
  char v22;
  unint64_t v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unint64_t v28;
  unsigned int v29;
  char v30;
  unint64_t v31;
  unsigned __int8 v32;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              if (!is_mul_ok(v9, a3))
                return 0;
              v13 = v9 * a3;
              v14 = v11 + v12;
              v15 = v13 >= v14;
              v9 = v13 - v14;
              if (!v15)
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v25 = a3 + 48;
      v26 = a3 + 55;
      v27 = a3 + 87;
      if (a3 > 10)
      {
        v25 = 58;
      }
      else
      {
        v27 = 97;
        v26 = 65;
      }
      if (result)
      {
        v28 = 0;
        do
        {
          v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27)
                return 0;
              v30 = -87;
            }
            else
            {
              v30 = -55;
            }
          }
          else
          {
            v30 = -48;
          }
          if (!is_mul_ok(v28, a3))
            return 0;
          v31 = v28 * a3;
          v32 = v29 + v30;
          v15 = __CFADD__(v31, v32);
          v28 = v31 + v32;
          if (v15)
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v16 = a2 - 1;
  if (a2 == 1)
    return 0;
  v17 = a3 + 48;
  v18 = a3 + 55;
  v19 = a3 + 87;
  if (a3 > 10)
  {
    v17 = 58;
  }
  else
  {
    v19 = 97;
    v18 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v20 = result + 1;
  do
  {
    v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19)
          return 0;
        v22 = -87;
      }
      else
      {
        v22 = -55;
      }
    }
    else
    {
      v22 = -48;
    }
    if (!is_mul_ok(v9, a3))
      return 0;
    v23 = v9 * a3;
    v24 = v21 + v22;
    v15 = __CFADD__(v23, v24);
    v9 = v23 + v24;
    if (v15)
      return 0;
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1CE08F8C8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1CE0B6374();
  v4 = sub_1CE08F944(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CE08F944(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1CE08FA88(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1CDFC786C(v9, 0);
      v12 = sub_1CE08FB74((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1D17BF630](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D17BF630);
LABEL_9:
      sub_1CE0B6A64();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D17BF630]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1CE08FA88(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1CE08EE68(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1CE08EE68(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1CE0B632C();
  }
  __break(1u);
  return result;
}

unint64_t sub_1CE08FB74(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1CE08EE68(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1CE0B6338();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1CE0B6A64();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1CE08EE68(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1CE0B6314();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t PersonalizationHealthKitWorkout.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1CE0B3DF4();
  MEMORY[0x1E0C80A78](v4);
  sub_1CE0B4BA4();
  sub_1CE0B4B8C();
  sub_1CE0B4BB0();
  sub_1CE0B4B98();
  sub_1CE0B5A38();

  v5 = sub_1CE0B4BBC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
}

uint64_t PersonalizationWorkoutPlan.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  id v12;

  v12 = a2;
  v3 = sub_1CE0B3F50();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1CE0B3E24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B3DF4();
  MEMORY[0x1E0C80A78](v8);
  sub_1CE0B4184();
  sub_1CE0B4178();
  sub_1CE0B3E00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1CE0B41B4();
  sub_1CE0B41CC();
  sub_1CE0B41C0();
  sub_1CE0B5714();

  v9 = sub_1CE0B41D8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
}

uint64_t PersonalizationCatalogWorkoutReference.init(_:with:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned __int8 *v24;
  char v25;
  unsigned __int8 v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t *v63;
  char *v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t *v75;
  char *v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t *v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  int v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t *v95;
  char *v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  int v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  int v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t *v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  int v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 *v125;
  unsigned int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE v132[12];
  int v133;
  uint64_t v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _BYTE *v149;
  uint64_t v150;
  id v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 v160;

  v148 = a3;
  v6 = sub_1CE0B3CB0();
  v146 = *(_QWORD *)(v6 - 8);
  v147 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = &v132[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1CE0B3E60();
  v144 = *(_QWORD *)(v9 - 8);
  v145 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = &v132[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v132[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1CE0B3DF4();
  v142 = *(_QWORD *)(v15 - 8);
  v143 = v15;
  MEMORY[0x1E0C80A78](v15);
  v149 = &v132[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  result = sub_1CE0B5258();
  v19 = v18;
  v20 = HIBYTE(v18) & 0xF;
  v21 = result & 0xFFFFFFFFFFFFLL;
  if ((v19 & 0x2000000000000000) != 0)
    v22 = v20;
  else
    v22 = result & 0xFFFFFFFFFFFFLL;
  v151 = a2;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    goto LABEL_138;
  }
  if ((v19 & 0x1000000000000000) != 0)
  {
    v128 = sub_1CE08EF1C(result, v19, 10);
    swift_bridgeObjectRelease();
    v141 = v128;
    if ((v128 & 0x100000000) != 0)
      goto LABEL_138;
    goto LABEL_51;
  }
  if ((v19 & 0x2000000000000000) != 0)
  {
    v158 = result;
    v159 = v19 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v20)
        goto LABEL_141;
      if (v20 == 1)
        goto LABEL_33;
      v27 = (BYTE1(result) - 48);
      if (v27 > 9)
        goto LABEL_33;
      if (v20 != 2)
      {
        if ((BYTE2(result) - 48) > 9u)
          goto LABEL_33;
        v27 = 10 * (_DWORD)v27 + (BYTE2(result) - 48);
        v30 = v20 - 3;
        if (v30)
        {
          v31 = (unsigned __int8 *)&v158 + 3;
          while (1)
          {
            v32 = *v31 - 48;
            if (v32 > 9)
              goto LABEL_33;
            v33 = 10 * v27;
            if ((v33 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_33;
            v28 = __CFADD__((_DWORD)v33, v32);
            v27 = v33 + v32;
            if (v28)
              goto LABEL_33;
            v25 = 0;
            ++v31;
            if (!--v30)
              goto LABEL_49;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v20)
        {
          if (v20 != 1)
          {
            v26 = BYTE1(result) - 48;
            if ((BYTE1(result) - 48) <= 9u)
            {
              v27 = 0;
              v28 = v26 == 0;
              v29 = -v26;
              if (!v28)
                goto LABEL_34;
              if (v20 == 2)
              {
                v25 = 0;
                v27 = v29;
LABEL_49:
                v141 = v27;
                goto LABEL_50;
              }
              v38 = BYTE2(result) - 48;
              if ((BYTE2(result) - 48) <= 9u)
              {
                v39 = 10 * v29;
                if ((v39 & 0xFFFFFFFF00000000) == 0)
                {
                  v27 = v39 - v38;
                  if (v39 >= v38)
                  {
                    v40 = v20 - 3;
                    if (!v40)
                      goto LABEL_48;
                    v125 = (unsigned __int8 *)&v158 + 3;
                    while (1)
                    {
                      v126 = *v125 - 48;
                      if (v126 > 9)
                        break;
                      v127 = 10 * v27;
                      if ((v127 & 0xFFFFFFFF00000000) != 0)
                        break;
                      v28 = v127 >= v126;
                      v27 = v127 - v126;
                      if (!v28)
                        break;
                      v25 = 0;
                      ++v125;
                      if (!--v40)
                        goto LABEL_49;
                    }
                  }
                }
              }
            }
          }
LABEL_33:
          v27 = 0;
LABEL_34:
          v25 = 1;
          goto LABEL_49;
        }
        __break(1u);
LABEL_141:
        __break(1u);
        return result;
      }
      if (!v20)
        goto LABEL_33;
      v27 = (result - 48);
      if (v27 > 9)
        goto LABEL_33;
      if (v20 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_33;
        v27 = 10 * (_DWORD)v27 + (BYTE1(result) - 48);
        v34 = v20 - 2;
        if (v34)
        {
          v35 = (unsigned __int8 *)&v158 + 2;
          while (1)
          {
            v36 = *v35 - 48;
            if (v36 > 9)
              goto LABEL_33;
            v37 = 10 * v27;
            if ((v37 & 0xFFFFFFFF00000000) != 0)
              goto LABEL_33;
            v28 = __CFADD__((_DWORD)v37, v36);
            v27 = v37 + v36;
            if (v28)
              goto LABEL_33;
            v25 = 0;
            ++v35;
            if (!--v34)
              goto LABEL_49;
          }
        }
      }
    }
LABEL_48:
    v25 = 0;
    goto LABEL_49;
  }
  if ((result & 0x1000000000000000) != 0)
    v23 = (unsigned __int8 *)((v19 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v23 = (unsigned __int8 *)sub_1CE0B6A64();
  v24 = sub_1CE08EEE0(v23, v21, 10);
  LOBYTE(v156) = BYTE4(v24) & 1;
  v25 = BYTE4(v24) & 1;
  v141 = (uint64_t)v24;
LABEL_50:
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
  {
LABEL_138:
    v129 = sub_1CE0B4ED4();
    sub_1CE08F000();
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v129 - 8) + 104))(v130, *MEMORY[0x1E0D92C80], v129);
    swift_willThrow();

    v131 = sub_1CE0B530C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 8))(a1, v131);
  }
LABEL_51:
  v41 = sub_1CE0B5288();
  v43 = sub_1CE08E9B8(v41, v42);
  if ((v43 & 0x100000000) != 0)
    goto LABEL_138;
  v139 = v43;
  v140 = v3;
  v44 = sub_1CE0B5300();
  v150 = a1;
  v46 = v45;
  v48 = v47 & 1;
  v158 = v44;
  v159 = v45;
  v160 = v47 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63930);
  sub_1CE0B42B0();
  sub_1CDFF37CC(v44, v46, v48);
  v154 = v156;
  v155 = v157;
  sub_1CE09123C();
  sub_1CE0B42BC();
  v138 = v158;
  v137 = v159;
  v136 = v160;
  v49 = sub_1CE0B52AC();
  v50 = *(_QWORD *)(v49 + 16);
  if (v50)
  {
    swift_bridgeObjectRetain();
    v51 = (unint64_t *)(v49 + 40);
    v153 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v54 = *(v51 - 1);
      v53 = *v51;
      swift_bridgeObjectRetain();
      v55 = sub_1CE08E9B8(v54, v53);
      if ((v55 & 0x100000000) == 0)
      {
        v56 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v153 = sub_1CE091130(0, *((_QWORD *)v153 + 2) + 1, 1, v153);
        v58 = *((_QWORD *)v153 + 2);
        v57 = *((_QWORD *)v153 + 3);
        if (v58 >= v57 >> 1)
          v153 = sub_1CE091130((char *)(v57 > 1), v58 + 1, 1, v153);
        v52 = v153;
        *((_QWORD *)v153 + 2) = v58 + 1;
        *(_DWORD *)&v52[4 * v58 + 32] = v56;
      }
      v51 += 2;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
  }
  else
  {
    v153 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v135 = sub_1CE0B5270();
  v134 = v59;
  v133 = v60;
  v61 = sub_1CE0B52DC();
  v62 = *(_QWORD *)(v61 + 16);
  if (v62)
  {
    swift_bridgeObjectRetain();
    v63 = (unint64_t *)(v61 + 40);
    v152 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v66 = *(v63 - 1);
      v65 = *v63;
      swift_bridgeObjectRetain();
      v67 = sub_1CE08E9B8(v66, v65);
      if ((v67 & 0x100000000) == 0)
      {
        v68 = v67;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v152 = sub_1CE091130(0, *((_QWORD *)v152 + 2) + 1, 1, v152);
        v70 = *((_QWORD *)v152 + 2);
        v69 = *((_QWORD *)v152 + 3);
        if (v70 >= v69 >> 1)
          v152 = sub_1CE091130((char *)(v69 > 1), v70 + 1, 1, v152);
        v64 = v152;
        *((_QWORD *)v152 + 2) = v70 + 1;
        *(_DWORD *)&v64[4 * v70 + 32] = v68;
      }
      v63 += 2;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    v152 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  sub_1CE0B3E30();
  sub_1CE0B5264();
  sub_1CE0B3E3C();
  (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v8, v147);
  (*(void (**)(_BYTE *, uint64_t))(v144 + 8))(v11, v145);
  v72 = v142;
  v71 = v143;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v142 + 48))(v14, 1, v143) == 1)
  {
    sub_1CE0B3DDC();
    sub_1CDFB9A24((uint64_t)v14);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v72 + 32))(v149, v14, v71);
  }
  sub_1CE0B52F4();
  v73 = sub_1CE0B52B8();
  v74 = *(_QWORD *)(v73 + 16);
  if (v74)
  {
    swift_bridgeObjectRetain();
    v75 = (unint64_t *)(v73 + 40);
    v76 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v78 = *(v75 - 1);
      v77 = *v75;
      swift_bridgeObjectRetain();
      v79 = sub_1CE08E9B8(v78, v77);
      if ((v79 & 0x100000000) == 0)
      {
        v80 = v79;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v76 = sub_1CE091130(0, *((_QWORD *)v76 + 2) + 1, 1, v76);
        v82 = *((_QWORD *)v76 + 2);
        v81 = *((_QWORD *)v76 + 3);
        if (v82 >= v81 >> 1)
          v76 = sub_1CE091130((char *)(v81 > 1), v82 + 1, 1, v76);
        *((_QWORD *)v76 + 2) = v82 + 1;
        *(_DWORD *)&v76[4 * v82 + 32] = v80;
      }
      v75 += 2;
      --v74;
    }
    while (v74);
    swift_bridgeObjectRelease();
  }
  else
  {
    v76 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v83 = sub_1CE0B52C4();
  v84 = *(_QWORD *)(v83 + 16);
  if (v84)
  {
    swift_bridgeObjectRetain();
    v85 = (unint64_t *)(v83 + 40);
    v86 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v88 = *(v85 - 1);
      v87 = *v85;
      swift_bridgeObjectRetain();
      v89 = sub_1CE08E9B8(v88, v87);
      if ((v89 & 0x100000000) == 0)
      {
        v90 = v89;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v86 = sub_1CE091130(0, *((_QWORD *)v86 + 2) + 1, 1, v86);
        v92 = *((_QWORD *)v86 + 2);
        v91 = *((_QWORD *)v86 + 3);
        if (v92 >= v91 >> 1)
          v86 = sub_1CE091130((char *)(v91 > 1), v92 + 1, 1, v86);
        *((_QWORD *)v86 + 2) = v92 + 1;
        *(_DWORD *)&v86[4 * v92 + 32] = v90;
      }
      v85 += 2;
      --v84;
    }
    while (v84);
    swift_bridgeObjectRelease();
  }
  v147 = (uint64_t)v76;
  swift_bridgeObjectRelease();
  v93 = sub_1CE0B52D0();
  v94 = *(_QWORD *)(v93 + 16);
  if (v94)
  {
    swift_bridgeObjectRetain();
    v95 = (unint64_t *)(v93 + 40);
    v96 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v98 = *(v95 - 1);
      v97 = *v95;
      swift_bridgeObjectRetain();
      v99 = sub_1CE08E9B8(v98, v97);
      if ((v99 & 0x100000000) == 0)
      {
        v100 = v99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v96 = sub_1CE091130(0, *((_QWORD *)v96 + 2) + 1, 1, v96);
        v102 = *((_QWORD *)v96 + 2);
        v101 = *((_QWORD *)v96 + 3);
        if (v102 >= v101 >> 1)
          v96 = sub_1CE091130((char *)(v101 > 1), v102 + 1, 1, v96);
        *((_QWORD *)v96 + 2) = v102 + 1;
        *(_DWORD *)&v96[4 * v102 + 32] = v100;
      }
      v95 += 2;
      --v94;
    }
    while (v94);
    swift_bridgeObjectRelease();
  }
  LODWORD(v146) = v133 & 1;
  swift_bridgeObjectRelease();
  v103 = sub_1CE0B527C();
  v104 = *(_QWORD *)(v103 + 16);
  if (v104)
  {
    swift_bridgeObjectRetain();
    v105 = (unint64_t *)(v103 + 40);
    v106 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v108 = *(v105 - 1);
      v107 = *v105;
      swift_bridgeObjectRetain();
      v109 = sub_1CE08E9B8(v108, v107);
      if ((v109 & 0x100000000) == 0)
      {
        v110 = v109;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v106 = sub_1CE091130(0, *((_QWORD *)v106 + 2) + 1, 1, v106);
        v112 = *((_QWORD *)v106 + 2);
        v111 = *((_QWORD *)v106 + 3);
        if (v112 >= v111 >> 1)
          v106 = sub_1CE091130((char *)(v111 > 1), v112 + 1, 1, v106);
        *((_QWORD *)v106 + 2) = v112 + 1;
        *(_DWORD *)&v106[4 * v112 + 32] = v110;
      }
      v105 += 2;
      --v104;
    }
    while (v104);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v113 = sub_1CE0B5294();
  v114 = *(_QWORD *)(v113 + 16);
  if (v114)
  {
    swift_bridgeObjectRetain();
    v145 = v113;
    v115 = (unint64_t *)(v113 + 40);
    v116 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v118 = *(v115 - 1);
      v117 = *v115;
      swift_bridgeObjectRetain();
      v119 = sub_1CE08E9B8(v118, v117);
      if ((v119 & 0x100000000) == 0)
      {
        v120 = v119;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v116 = sub_1CE091130(0, *((_QWORD *)v116 + 2) + 1, 1, v116);
        v122 = *((_QWORD *)v116 + 2);
        v121 = *((_QWORD *)v116 + 3);
        if (v122 >= v121 >> 1)
          v116 = sub_1CE091130((char *)(v121 > 1), v122 + 1, 1, v116);
        *((_QWORD *)v116 + 2) = v122 + 1;
        *(_DWORD *)&v116[4 * v122 + 32] = v120;
      }
      v115 += 2;
      --v114;
    }
    while (v114);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v123 = v150;
  sub_1CE0B52E8();
  sub_1CE0B5BAC();

  v124 = sub_1CE0B530C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v123, v124);
}

_QWORD *sub_1CE090C80(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1CE091368(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1CE090D8C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EF728);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CDFC84A4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE090E84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5F4F8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91F50]);
}

uint64_t sub_1CE090E98(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5D988, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91A30]);
}

uint64_t sub_1CE090EAC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1CE0B6ADC();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CE091458(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1CE0910B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5F4F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91FA0]);
}

uint64_t sub_1CE0910CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5F508, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96538]);
}

uint64_t sub_1CE0910E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5F548, (uint64_t (*)(_QWORD))MEMORY[0x1E0D956C0]);
}

uint64_t sub_1CE0910F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, qword_1EFA5D9A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D904E0]);
}

uint64_t sub_1CE091108(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5D978, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
}

uint64_t sub_1CE09111C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1CE090EAC(a1, a2, a3, a4, &qword_1EFA5D968, (uint64_t (*)(_QWORD))MEMORY[0x1E0D907B0]);
}

char *sub_1CE091130(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63940);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1CE091280(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1CE09123C()
{
  unint64_t result;

  result = qword_1EFA63938;
  if (!qword_1EFA63938)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D958E8], MEMORY[0x1E0D958E0]);
    atomic_store(result, (unint64_t *)&qword_1EFA63938);
  }
  return result;
}

char *sub_1CE091280(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE091368(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE091458(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CE091570(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int64_t v21;
  _QWORD v22[2];
  int v23;
  char v24;

  v3 = a1 + 56;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v21 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v8++, 1))
      break;
    if (v8 >= v21)
      goto LABEL_31;
    v13 = *(_QWORD *)(v3 + 8 * v8);
    if (!v13)
    {
      v14 = v8 + 1;
      if (v8 + 1 >= v21)
        goto LABEL_31;
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (v13)
        goto LABEL_15;
      v14 = v8 + 2;
      if (v8 + 2 >= v21)
        goto LABEL_31;
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (v13)
        goto LABEL_15;
      v14 = v8 + 3;
      if (v8 + 3 >= v21)
        goto LABEL_31;
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (v13)
      {
LABEL_15:
        v8 = v14;
      }
      else
      {
        v20 = v8 + 4;
        if (v8 + 4 >= v21)
        {
LABEL_31:
          swift_release();
          return v9;
        }
        v13 = *(_QWORD *)(v3 + 8 * v20);
        for (v8 += 4; !v13; ++v20)
        {
          v8 = v20 + 1;
          if (__OFADD__(v20, 1))
            goto LABEL_34;
          if (v8 >= v21)
            goto LABEL_31;
          v13 = *(_QWORD *)(v3 + 8 * v8);
        }
      }
    }
    v6 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_17:
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v16 = v15[1];
    v22[0] = *v15;
    v22[1] = v16;
    swift_bridgeObjectRetain();
    sub_1CE091A64((unint64_t)v22, (uint64_t)&v23);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v9;
    }
    result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      v17 = v23;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1CE091130(0, *(_QWORD *)(v9 + 16) + 1, 1, (char *)v9);
        v9 = result;
      }
      v19 = *(_QWORD *)(v9 + 16);
      v18 = *(_QWORD *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        result = (uint64_t)sub_1CE091130((char *)(v18 > 1), v19 + 1, 1, (char *)v9);
        v9 = result;
      }
      *(_QWORD *)(v9 + 16) = v19 + 1;
      *(_DWORD *)(v9 + 4 * v19 + 32) = v17;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t PersonalizationUserOnboardingData.init(_:with:)(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];

  v4 = sub_1CE0B3DF4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v20[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_1CE0B5180();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1CE0919DC(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1CE091A24((uint64_t)v10);
    sub_1CE0B5AC8();

    return sub_1CE091A24(a1);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1CE0B515C();
    v16 = (void *)sub_1CE0B3DAC();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v17 = objc_msgSend(a2, sel_stringFromDate_, v16);

    sub_1CE0B6278();
    v18 = sub_1CE0B5168();
    v19 = sub_1CE091570(v18);
    swift_bridgeObjectRelease();
    sub_1CDFD062C(v19);
    swift_bridgeObjectRelease();
    sub_1CE0B5AC8();

    sub_1CE091A24(a1);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1CE0919DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE091A24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CE091A64@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  char v28;

  v3 = *(_QWORD *)result;
  v4 = *(_QWORD *)(result + 8);
  v5 = HIBYTE(v4) & 0xF;
  v6 = *(_QWORD *)result & 0xFFFFFFFFFFFFLL;
  if ((v4 & 0x2000000000000000) != 0)
    v7 = HIBYTE(v4) & 0xF;
  else
    v7 = *(_QWORD *)result & 0xFFFFFFFFFFFFLL;
  if (!v7)
  {
    LOBYTE(v5) = 1;
LABEL_41:
    *(_DWORD *)a2 = v7;
    *(_BYTE *)(a2 + 4) = v5;
    return result;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v26 = sub_1CE08EF1C(v3, v4, 10);
    swift_bridgeObjectRelease();
    v5 = HIDWORD(v26) & 1;
    result = v26;
LABEL_38:
    if ((_DWORD)v5)
      LODWORD(v7) = 0;
    else
      LODWORD(v7) = result;
    goto LABEL_41;
  }
  if ((v4 & 0x2000000000000000) == 0)
  {
    if ((v3 & 0x1000000000000000) != 0)
      v8 = (unsigned __int8 *)((v4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    else
      v8 = (unsigned __int8 *)sub_1CE0B6A64();
    result = (unint64_t)sub_1CE08EEE0(v8, v6, 10);
    v28 = BYTE4(result) & 1;
    LOBYTE(v5) = BYTE4(result) & 1;
    goto LABEL_37;
  }
  v27[0] = *(_QWORD *)result;
  v27[1] = v4 & 0xFFFFFFFFFFFFFFLL;
  if (v3 == 43)
  {
    if (v5)
    {
      if (v5 != 1)
      {
        result = (BYTE1(v3) - 48);
        if (result <= 9)
        {
          if (v5 == 2)
            goto LABEL_36;
          if ((BYTE2(v3) - 48) <= 9u)
          {
            result = 10 * (_DWORD)result + (BYTE2(v3) - 48);
            v12 = v5 - 3;
            if (v5 != 3)
            {
              v13 = (unsigned __int8 *)v27 + 3;
              while (1)
              {
                v14 = *v13 - 48;
                if (v14 > 9)
                  goto LABEL_33;
                v15 = 10 * result;
                if ((v15 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_33;
                result = v15 + v14;
                if (__CFADD__((_DWORD)v15, v14))
                  goto LABEL_33;
                LOBYTE(v5) = 0;
                ++v13;
                if (!--v12)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
        }
        goto LABEL_33;
      }
      goto LABEL_63;
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (v5)
      {
        result = (v3 - 48);
        if (result <= 9)
        {
          if (v5 == 1)
            goto LABEL_36;
          if ((BYTE1(v3) - 48) <= 9u)
          {
            result = 10 * (_DWORD)result + (BYTE1(v3) - 48);
            v16 = v5 - 2;
            if (v5 != 2)
            {
              v17 = (unsigned __int8 *)v27 + 2;
              while (1)
              {
                v18 = *v17 - 48;
                if (v18 > 9)
                  goto LABEL_33;
                v19 = 10 * result;
                if ((v19 & 0xFFFFFFFF00000000) != 0)
                  goto LABEL_33;
                result = v19 + v18;
                if (__CFADD__((_DWORD)v19, v18))
                  goto LABEL_33;
                LOBYTE(v5) = 0;
                ++v17;
                if (!--v16)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
        }
      }
LABEL_33:
      result = 0;
LABEL_34:
      LOBYTE(v5) = 1;
      goto LABEL_37;
    }
    if (v5)
    {
      if (v5 != 1)
      {
        v9 = BYTE1(v3) - 48;
        if ((BYTE1(v3) - 48) <= 9u)
        {
          result = 0;
          v10 = v9 == 0;
          v11 = -v9;
          if (!v10)
            goto LABEL_34;
          if (v5 == 2)
          {
            LOBYTE(v5) = 0;
            result = v11;
LABEL_37:
            LODWORD(v5) = v5 & 1;
            goto LABEL_38;
          }
          v20 = BYTE2(v3) - 48;
          if ((BYTE2(v3) - 48) <= 9u)
          {
            v21 = 10 * v11;
            if ((v21 & 0xFFFFFFFF00000000) == 0)
            {
              result = v21 - v20;
              if (v21 >= v20)
              {
                v22 = v5 - 3;
                if (v5 != 3)
                {
                  v23 = (unsigned __int8 *)v27 + 3;
                  while (1)
                  {
                    v24 = *v23 - 48;
                    if (v24 > 9)
                      goto LABEL_33;
                    v25 = 10 * result;
                    if ((v25 & 0xFFFFFFFF00000000) != 0)
                      goto LABEL_33;
                    result = v25 - v24;
                    if (v25 < v24)
                      goto LABEL_33;
                    LOBYTE(v5) = 0;
                    ++v23;
                    if (!--v22)
                      goto LABEL_37;
                  }
                }
LABEL_36:
                LOBYTE(v5) = 0;
                goto LABEL_37;
              }
            }
          }
        }
        goto LABEL_33;
      }
LABEL_63:
      result = 0;
      goto LABEL_37;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DisplayPreferencesUpdated.displayPreferences.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4D84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DisplayPreferencesUpdated.init(displayPreferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static DisplayPreferencesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for DisplayPreferencesUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4D84();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DisplayPreferencesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DisplayPreferencesUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE091F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DisplayPreferencesUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE091FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DisplayPreferencesUpdated()
{
  uint64_t result;

  result = qword_1EFA639A0;
  if (!qword_1EFA639A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE09201C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4D84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t StorefrontCache.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t StorefrontCache.deinit()
{
  uint64_t v0;

  return v0;
}

Swift::String_optional __swiftcall StorefrontCache.queryStorefrontIdentifier()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = sub_1CE092224();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall StorefrontCache.updateStorefrontIdentifier(_:)(Swift::String a1)
{
  sub_1CE09212C();
}

Swift::String_optional __swiftcall StorefrontCache.queryLanguageCode()()
{
  uint64_t v0;
  void *v1;
  Swift::String_optional result;

  v0 = sub_1CE092224();
  result.value._object = v1;
  result.value._countAndFlagsBits = v0;
  return result;
}

Swift::Void __swiftcall StorefrontCache.updateLanguageCode(_:)(Swift::String a1)
{
  sub_1CE09212C();
}

void sub_1CE09212C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_1CE0B626C();
  v2 = (id)sub_1CE0B626C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

}

uint64_t sub_1CE0921D8()
{
  return sub_1CE092224();
}

void sub_1CE092204()
{
  sub_1CDFAED54();
}

uint64_t sub_1CE092224()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_1CE0B626C();
  v2 = objc_msgSend(v0, sel_stringForKey_, v1);

  if (!v2)
    return 0;
  v3 = sub_1CE0B6278();

  return v3;
}

uint64_t sub_1CE0922D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF7F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void _s13SeymourClient15StorefrontCacheC25updateContentAvailabilityyy0A4Core0fG0OF_0()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  sub_1CE0B4E74();
  v1 = (void *)sub_1CE0B626C();
  swift_bridgeObjectRelease();
  v2 = (id)sub_1CE0B626C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

}

uint64_t dispatch thunk of StorefrontCaching.queryStorefrontIdentifier()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of StorefrontCaching.updateStorefrontIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of StorefrontCaching.updateContentAvailability(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t method lookup function for StorefrontCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StorefrontCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:)(a1, a2, a3, a4, a5, a6, 0.0);
}

uint64_t SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;

  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B4A90();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, double))(a6 + 16))(a1, a2, a3, a4, v16, a5, a6, a7);
  return sub_1CE0924E8((uint64_t)v16);
}

uint64_t sub_1CE0924E8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SessionClientProtocol.updateSession(token:activityRings:audioFocusPreference:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(void))(a25 + 96))();
}

uint64_t dispatch thunk of SessionClientProtocol.queryActiveSession()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionClientProtocol.createSession(token:catalogWorkout:supportedMetrics:workoutActivityType:startTime:queueIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of SessionClientProtocol.detachRemoteDisplay()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SessionClientProtocol.requestDistributedSessionWithParticipant(havingRole:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SessionClientProtocol.requestDistributedSessionWithParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of SessionClientProtocol.activateDistributedSession(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of SessionClientProtocol.cancelDistributedSessionWithParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SessionClientProtocol.sendCountdownIntent(_:token:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SessionClientProtocol.startCountdown(_:token:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of SessionClientProtocol.reportAppRequirementCompleted()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of SessionClientProtocol.reportAppRequirementFailed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of SessionClientProtocol.applySessionUpdate(token:activityRings:audioFocusPreference:displayPreferences:distanceMetric:energyMetric:gymKitConnection:heartRateMetric:meditation:mindfulMinutesMetric:multiUserSession:multiUserSessionIdentities:paceMetric:playbackIntent:playback:remoteDisplayConnection:scoreMetric:termination:unitPreferences:userMassMetric:workoutDeviceConnection:watchConnectionRejection:workout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return (*(uint64_t (**)(void))(a25 + 96))();
}

uint64_t static RecommendationConstants.daysOfWorkoutsToIncludeInInferenceRequest.getter()
{
  return 3;
}

uint64_t static RecommendationConstants.personalizationInferenceRequestVersion.getter()
{
  return 3;
}

uint64_t static RecommendationConstants.personalizationHeroContentRequestVersion.getter()
{
  return 1;
}

ValueMetadata *type metadata accessor for RecommendationConstants()
{
  return &type metadata for RecommendationConstants;
}

void static AllowedContentRatingsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

_QWORD *ScriptClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *result;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));

  type metadata accessor for ScriptClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v10;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  result[5] = a1;
  result[6] = a2;
  return result;
}

_QWORD *ScriptClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE092B68(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t type metadata accessor for ScriptClient()
{
  return objc_opt_self();
}

_QWORD *ScriptClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD9B4(a1, a4, a5, v5, ObjectType, a2, a3);
}

uint64_t ScriptClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ScriptClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ScriptClient.updateJetPack()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._object = (void *)0x80000001CE0CD510;
  v2._countAndFlagsBits = 0xD000000000000064;
  v3._countAndFlagsBits = 0x654A657461647075;
  v3._object = (void *)0xEF29286B63615074;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 251;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t ScriptClient.queryJetPackInfo()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000064;
  v2._object = (void *)0x80000001CE0CD510;
  v3._object = (void *)0x80000001CE0CD580;
  v3._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 252;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v4);
}

uint64_t sub_1CE092A70()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  __int16 v8;

  v1 = *v0;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
  v3._object = (void *)0x80000001CE0CD510;
  v3._countAndFlagsBits = 0xD000000000000064;
  v4._countAndFlagsBits = 0x654A657461647075;
  v4._object = (void *)0xEF29286B63615074;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 251;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1CE092B48()
{
  return ScriptClient.queryJetPackInfo()();
}

_QWORD *sub_1CE092B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *result;

  type metadata accessor for ScriptClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a6;
  result[4] = a7;
  result[5] = a2;
  result[6] = a3;
  return result;
}

uint64_t method lookup function for ScriptClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScriptClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.fetchCertificateContext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.fetchContext(spc:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.renewContext(spc:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of KeyDeliveryClientProtocol.releaseContext(spc:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void static HealthKitMindfulSessionsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for HealthKitMindfulSessionsUpdated()
{
  return &type metadata for HealthKitMindfulSessionsUpdated;
}

uint64_t XPCServer.dispatchService.getter()
{
  return swift_retain();
}

id sub_1CE092C28(uint64_t a1, void *a2)
{
  id v4;
  id v5;

  v4 = objc_msgSend((id)objc_opt_self(), sel_serviceListener);
  v5 = objc_allocWithZone((Class)type metadata accessor for XPCServer());
  swift_bridgeObjectRetain();
  return sub_1CE092D5C(v4, a1, a2);
}

uint64_t type metadata accessor for XPCServer()
{
  return objc_opt_self();
}

id XPCServer.__allocating_init(machServiceName:requiredEntitlements:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v6;
  void *v7;
  id v8;
  id v9;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B58]);
  v7 = (void *)sub_1CE0B626C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithMachServiceName_, v7);

  v9 = objc_allocWithZone((Class)type metadata accessor for XPCServer());
  return sub_1CE092D5C(v8, a3, a4);
}

id sub_1CE092D5C(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  char *v7;
  id v8;
  _DWORD *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  _DWORD *v18;
  id v19;
  objc_super v21;
  _QWORD v22[2];

  *(_QWORD *)&v3[OBJC_IVAR____TtC13SeymourClient9XPCServer_listener] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC13SeymourClient9XPCServer_requiredEntitlements] = a2;
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = v3;
  v8 = a1;
  v9 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v9;
  *v9 = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC13SeymourClient9XPCServer_lock] = v6;
  strcpy((char *)v22, "XPCListener: ");
  HIWORD(v22[1]) = -4864;
  v10 = objc_msgSend(v8, sel_serviceName);
  if (v10)
  {
    v11 = v10;
    sub_1CE0B6278();

  }
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  v12 = v22[0];
  v13 = v22[1];
  type metadata accessor for TransportDispatchService();
  v14 = (_QWORD *)swift_allocObject();
  v15 = MEMORY[0x1E0DEE9E0];
  v14[6] = MEMORY[0x1E0DEE9E0];
  v14[7] = v15;
  v14[2] = a3;
  v14[4] = v12;
  v14[5] = v13;
  v16 = swift_allocObject();
  v17 = a3;
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v16 + 16) = v18;
  *v18 = 0;
  v14[3] = v16;
  *(_QWORD *)&v7[OBJC_IVAR____TtC13SeymourClient9XPCServer_dispatchService] = v14;
  *(_QWORD *)&v7[OBJC_IVAR____TtC13SeymourClient9XPCServer_clients] = MEMORY[0x1E0DEE9E8];

  v21.receiver = v7;
  v21.super_class = (Class)type metadata accessor for XPCServer();
  v19 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(v8, sel_setDelegate_, v19);

  return v19;
}

id sub_1CE092F5C()
{
  return sub_1CE092FA8(0x6574617669746361, (void *)0xEA00000000002928, (SEL *)&selRef_resume);
}

id sub_1CE092F80()
{
  return sub_1CE092FA8(0x6176697463616564, (void *)0xEC00000029286574, (SEL *)&selRef_suspend);
}

id sub_1CE092FA8(uint64_t a1, void *a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0CD5D0;
  v8._countAndFlagsBits = 0xD000000000000061;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  return objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC13SeymourClient9XPCServer_listener), *a3);
}

void sub_1CE093054(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22[3];

  v7 = a2 + 16;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v8 = sub_1CE0B6080();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED8F1870);
  v9 = a1;
  v10 = sub_1CE0B6068();
  v11 = sub_1CE0B671C();
  if (os_log_type_enabled(v10, v11))
  {
    v21 = a3;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v22[0] = v13;
    *(_DWORD *)v12 = 136446210;
    v14 = objc_msgSend(v9, sel_serviceName);
    if (v14)
    {
      v15 = v14;
      v16 = sub_1CE0B6278();
      v18 = v17;

    }
    else
    {
      v18 = 0xEB00000000646569;
      v16 = 0x6669636570736E75;
    }
    sub_1CDFC7270(v16, v18, v22);
    sub_1CE0B68F0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v10, v11, a4, v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v13, -1, -1);
    MEMORY[0x1D17C092C](v12, -1, -1);

    a3 = v21;
  }
  else
  {

  }
  swift_beginAccess();
  v19 = MEMORY[0x1D17C09E0](v7);
  if (v19)
  {
    v20 = (void *)v19;
    sub_1CE093278(a3);

  }
}

void sub_1CE093278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000061;
  v4._object = (void *)0x80000001CE0CD5D0;
  v5._object = (void *)0x80000001CE0CD6C0;
  v5._countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  *(_BYTE *)(a1 + 48) = 1;
  swift_beginAccess();
  sub_1CE09D3E0();
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
}

id XPCServer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void XPCServer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id XPCServer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Bool __swiftcall XPCServer.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  return sub_1CDFBC17C(shouldAcceptNewConnection.super.isa);
}

uint64_t XPCServer.sendRequest(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CE0B48C8();
  sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  v1 = swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x1E0D913B8], v0);
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  return sub_1CE0B5C0C();
}

{
  return swift_task_switch();
}

uint64_t XPCServer.sendRequest<A>(_:payload:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CE0B48C8();
  sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  v1 = swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x1E0D913B8], v0);
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  return sub_1CE0B5C0C();
}

{
  return swift_task_switch();
}

void XPCServer.sendRequest<A>(_:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v0 = sub_1CE0B48C8();
  sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  v1 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x1E0D913B8], v0);
  sub_1CE0B5C18();

}

void XPCServer.sendRequest<A, B>(_:payload:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v0 = sub_1CE0B48C8();
  sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  v1 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x1E0D913B8], v0);
  sub_1CE0B5C18();

}

uint64_t XPCServer.sendRequest<A>(_:)()
{
  return swift_task_switch();
}

uint64_t XPCServer.sendRequest<A, B>(_:payload:)()
{
  return swift_task_switch();
}

uint64_t sub_1CE093834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1CE0B48C8();
  sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, *MEMORY[0x1E0D913B8], v1);
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void XPCServer.broadcastEvent<A>(_:payload:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  _QWORD v31[9];

  v9 = *a1;
  v10 = *(_QWORD *)(v5 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  v11 = (uint64_t *)(v5 + OBJC_IVAR____TtC13SeymourClient9XPCServer_clients);
  swift_beginAccess();
  v12 = *v11;
  v13 = *(os_unfair_lock_s **)(v10 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  if ((v12 & 0xC000000000000001) != 0)
  {
    sub_1CE0B6968();
    type metadata accessor for XPCClient();
    sub_1CDFB1900((unint64_t *)&unk_1EFA63AC8, (uint64_t (*)(uint64_t))type metadata accessor for XPCClient, (uint64_t)&protocol conformance descriptor for XPCClient);
    sub_1CE0B66BC();
    v12 = v31[4];
    v29 = v31[5];
    v14 = v31[6];
    v15 = v31[7];
    v16 = v31[8];
  }
  else
  {
    v15 = 0;
    v17 = -1 << *(_BYTE *)(v12 + 32);
    v29 = v12 + 56;
    v14 = ~v17;
    v18 = -v17;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v16 = v19 & *(_QWORD *)(v12 + 56);
  }
  v28 = (unint64_t)(v14 + 64) >> 6;
  if (v12 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v16)
    {
      v20 = (v16 - 1) & v16;
      v21 = __clz(__rbit64(v16)) | (v15 << 6);
      v22 = v15;
      goto LABEL_27;
    }
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v24 >= v28)
      goto LABEL_30;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    v22 = v15 + 1;
    if (!v25)
    {
      v22 = v15 + 2;
      if (v15 + 2 >= v28)
        goto LABEL_30;
      v25 = *(_QWORD *)(v29 + 8 * v22);
      if (!v25)
      {
        v22 = v15 + 3;
        if (v15 + 3 >= v28)
          goto LABEL_30;
        v25 = *(_QWORD *)(v29 + 8 * v22);
        if (!v25)
        {
          v22 = v15 + 4;
          if (v15 + 4 >= v28)
            goto LABEL_30;
          v25 = *(_QWORD *)(v29 + 8 * v22);
          if (!v25)
          {
            v26 = v15 + 5;
            while (v28 != v26)
            {
              v25 = *(_QWORD *)(v29 + 8 * v26++);
              if (v25)
              {
                v22 = v26 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1CDFC879C();
            return;
          }
        }
      }
    }
LABEL_26:
    v20 = (v25 - 1) & v25;
    v21 = __clz(__rbit64(v25)) + (v22 << 6);
LABEL_27:
    v27 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v21);
    swift_retain();
    if (!v27)
      goto LABEL_30;
    while (1)
    {
      LOBYTE(v31[0]) = v9;
      XPCClient.broadcastEvent<A>(_:payload:)((unsigned __int8 *)v31, a2, a3, a4, a5);
      swift_release();
      v15 = v22;
      v16 = v20;
      if ((v12 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1CE0B698C())
      {
        type metadata accessor for XPCClient();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v23 = v31[0];
        swift_unknownObjectRelease();
        v22 = v15;
        v20 = v16;
        if (v23)
          continue;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_1CE093BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CE0B48C8();
  sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  v1 = swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x1E0D913B8], v0);
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  return sub_1CE0B5C0C();
}

uint64_t sub_1CE093C84()
{
  return XPCServer.sendRequest<A>(_:payload:)();
}

void sub_1CE093C98()
{
  XPCServer.sendRequest<A>(_:)();
}

void sub_1CE093CAC()
{
  XPCServer.sendRequest<A, B>(_:payload:)();
}

uint64_t sub_1CE093CC0()
{
  return swift_task_switch();
}

uint64_t sub_1CE093CD4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD38;
  return swift_task_switch();
}

uint64_t sub_1CE093D2C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD3C;
  return swift_task_switch();
}

uint64_t sub_1CE093D88()
{
  return swift_retain();
}

uint64_t sub_1CE093D9C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B4148();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63C10, v11, MEMORY[0x1E0D904F0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D904E0], MEMORY[0x1E0D904F8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE097C94((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE093FF8(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B509C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, v11, MEMORY[0x1E0D932F0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63D10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D93300]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE097EE8((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE094254(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B4C10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63C70, v11, MEMORY[0x1E0D91F60]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], MEMORY[0x1E0D91F68]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE09813C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE0944B0(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B54F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E280, v11, MEMORY[0x1E0D94950]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94940], MEMORY[0x1E0D94958]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE098390((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE09470C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B5444();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63CC0, v11, MEMORY[0x1E0D944E0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63CC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944E8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE0985E4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE094968(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B53FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E2B0, v11, MEMORY[0x1E0D94348]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63CB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94338], MEMORY[0x1E0D94350]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE098838((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE094BC4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B4C28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA63CF0, v11, MEMORY[0x1E0D91FB0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA61490, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], MEMORY[0x1E0D91FB8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE098A8C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE094E20(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B54B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E260, v11, MEMORY[0x1E0D94740]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94748]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE098CE0((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE09507C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B51C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E388, v11, MEMORY[0x1E0D93B78]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], MEMORY[0x1E0D93B80]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE098F34((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE0952D8(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B5F60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5D990, v11, MEMORY[0x1E0D96548]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96550]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE099188((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE095534(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B58A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA63BE0, v11, MEMORY[0x1E0D951E0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA61450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE0993DC((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE095790(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B5EC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E380, v11, MEMORY[0x1E0D963D0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE099630((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE0959EC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B5948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63C40, v11, MEMORY[0x1E0D956D0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D956C0], MEMORY[0x1E0D956D8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE099884((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE095C48(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B58B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E390, v11, MEMORY[0x1E0D95490]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], MEMORY[0x1E0D95498]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE099AD8((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE095EA4(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v25;

  v3 = v2;
  v6 = *v2;
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B40C4();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  v7 = sub_1CE0B6D64();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = sub_1CE0B40C4();
    v12 = v11;
    if (v10 == sub_1CE0B40C4() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    v15 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      result = 0;
      LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    v16 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v16;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v17 = sub_1CE0B40C4();
      v19 = v18;
      if (v17 == sub_1CE0B40C4() && v19 == v20)
        goto LABEL_17;
      v22 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v3;
  *v3 = 0x8000000000000000;
  sub_1CE099D2C(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v25;
  swift_bridgeObjectRelease();
  result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

uint64_t sub_1CE0960BC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B4244();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63BB0, v11, MEMORY[0x1E0D907C0]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63BB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], MEMORY[0x1E0D907C8]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE099F50((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE096318(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B57EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5D958, v11, MEMORY[0x1E0D94F78]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94F68], MEMORY[0x1E0D94F80]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE09A1A4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE096574(_DWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = MEMORY[0x1D17C008C](*(_QWORD *)(v6 + 40), a2, 4);
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE09A3F8(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != (_DWORD)a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_DWORD *)(v10 + 4 * v9) != (_DWORD)a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1CE096674(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1CE0B5324();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63B70, v11, MEMORY[0x1E0D94050]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94040], MEMORY[0x1E0D94058]);
      v21 = sub_1CE0B6260();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CE09A51C((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1CE0968D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0CE0);
    v2 = sub_1CE0B69E0();
    v14 = v2;
    sub_1CE0B6968();
    if (sub_1CE0B698C())
    {
      type metadata accessor for XPCClient();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1CE09793C();
          v2 = v14;
        }
        sub_1CE0B6D34();
        sub_1CE0B6860();
        result = sub_1CE0B6D64();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1CE0B698C());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1CE096AD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0050);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1CE0B6D34();
      sub_1CE0B4490();
      sub_1CE0B62CC();
      swift_bridgeObjectRelease();
      result = sub_1CE0B6D64();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CE096DA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63CA0);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1CE0B6D34();
      sub_1CE0B62CC();
      result = sub_1CE0B6D64();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CE097084(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1CE0B69D4();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1CDFB1900(v45, v44, v46);
      result = sub_1CE0B6230();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_1CE0973E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63C08);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
      sub_1CE0B6D34();
      sub_1CE0B40C4();
      sub_1CE0B62CC();
      swift_bridgeObjectRelease();
      result = sub_1CE0B6D64();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CE0976B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63B90);
  result = sub_1CE0B69D4();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
      result = MEMORY[0x1D17C008C](*(_QWORD *)(v4 + 40), v18, 4);
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1CE09793C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0CE0);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_33;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_33;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_33;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v27 = 1 << *(_BYTE *)(v2 + 32);
                if (v27 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v12 >= v9)
                    goto LABEL_33;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_23:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      sub_1CE0B6D34();
      sub_1CE0B6860();
      result = sub_1CE0B6D64();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1CE097BF4(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1CE0B6D34();
  sub_1CE0B6860();
  sub_1CE0B6D64();
  result = sub_1CE0B695C();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1CE097C94(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B4148();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D904E0], (uint64_t *)&unk_1EFA63C20, &qword_1EFA63C10, MEMORY[0x1E0D904F0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D904E0], (uint64_t *)&unk_1EFA63C20);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D904E0], (uint64_t *)&unk_1EFA63C20, &qword_1EFA63C10, MEMORY[0x1E0D904F0]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA63C10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D904E0], MEMORY[0x1E0D904F0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63C18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D904E0], MEMORY[0x1E0D904F8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE097EE8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B509C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], &qword_1EFA63D18, (unint64_t *)&unk_1EFA64C70, MEMORY[0x1E0D932F0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D932E0], &qword_1EFA63D18);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], &qword_1EFA63D18, (unint64_t *)&unk_1EFA64C70, MEMORY[0x1E0D932F0]);
  }
  v13 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932F0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63D10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D93300]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE09813C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B4C10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], (uint64_t *)&unk_1EFA63C80, &qword_1EFA63C70, MEMORY[0x1E0D91F60]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D91F50], (uint64_t *)&unk_1EFA63C80);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], (uint64_t *)&unk_1EFA63C80, &qword_1EFA63C70, MEMORY[0x1E0D91F60]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA63C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], MEMORY[0x1E0D91F60]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], MEMORY[0x1E0D91F68]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE098390(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B54F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94940], &qword_1EFA61500, &qword_1EFA5E280, MEMORY[0x1E0D94950]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D94940], &qword_1EFA61500);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94940], &qword_1EFA61500, &qword_1EFA5E280, MEMORY[0x1E0D94950]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5E280, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94940], MEMORY[0x1E0D94950]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63CE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94940], MEMORY[0x1E0D94958]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE0985E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B5444();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D944D0], (uint64_t *)&unk_1EFA63CD0, &qword_1EFA63CC0, MEMORY[0x1E0D944E0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D944D0], (uint64_t *)&unk_1EFA63CD0);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D944D0], (uint64_t *)&unk_1EFA63CD0, &qword_1EFA63CC0, MEMORY[0x1E0D944E0]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA63CC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944E0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63CC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944E8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE098838(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B53FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94338], &qword_1EFA614F8, &qword_1EFA5E2B0, MEMORY[0x1E0D94348]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D94338], &qword_1EFA614F8);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94338], &qword_1EFA614F8, &qword_1EFA5E2B0, MEMORY[0x1E0D94348]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5E2B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94338], MEMORY[0x1E0D94348]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63CB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94338], MEMORY[0x1E0D94350]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE098A8C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B4C28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], (uint64_t *)&unk_1EFA63D00, (unint64_t *)&unk_1EFA63CF0, MEMORY[0x1E0D91FB0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D91FA0], (uint64_t *)&unk_1EFA63D00);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], (uint64_t *)&unk_1EFA63D00, (unint64_t *)&unk_1EFA63CF0, MEMORY[0x1E0D91FB0]);
  }
  v13 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA63CF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], MEMORY[0x1E0D91FB0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA61490, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], MEMORY[0x1E0D91FB8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE098CE0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B54B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], &qword_1EFA63C98, &qword_1EFA5E260, MEMORY[0x1E0D94740]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D94730], &qword_1EFA63C98);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], &qword_1EFA63C98, &qword_1EFA5E260, MEMORY[0x1E0D94740]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5E260, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94740]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94748]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE098F34(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B51C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], &qword_1EFA61508, &qword_1EFA5E388, MEMORY[0x1E0D93B78]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D93B68], &qword_1EFA61508);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], &qword_1EFA61508, &qword_1EFA5E388, MEMORY[0x1E0D93B78]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5E388, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], MEMORY[0x1E0D93B78]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], MEMORY[0x1E0D93B80]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE099188(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B5F60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], &qword_1EFA61460, &qword_1EFA5D990, MEMORY[0x1E0D96548]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D96538], &qword_1EFA61460);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], &qword_1EFA61460, &qword_1EFA5D990, MEMORY[0x1E0D96548]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5D990, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96548]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96550]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE0993DC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B58A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], (uint64_t *)&unk_1EFA63BF0, (unint64_t *)&unk_1EFA63BE0, MEMORY[0x1E0D951E0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D951D0], (uint64_t *)&unk_1EFA63BF0);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], (uint64_t *)&unk_1EFA63BF0, (unint64_t *)&unk_1EFA63BE0, MEMORY[0x1E0D951E0]);
  }
  v13 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA63BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA61450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE099630(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B5EC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], &qword_1EFA61440, &qword_1EFA5E380, MEMORY[0x1E0D963D0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D963C0], &qword_1EFA61440);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], &qword_1EFA61440, &qword_1EFA5E380, MEMORY[0x1E0D963D0]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5E380, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE099884(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B5948();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D956C0], (uint64_t *)&unk_1EFA63C50, &qword_1EFA63C40, MEMORY[0x1E0D956D0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D956C0], (uint64_t *)&unk_1EFA63C50);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D956C0], (uint64_t *)&unk_1EFA63C50, &qword_1EFA63C40, MEMORY[0x1E0D956D0]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA63C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D956C0], MEMORY[0x1E0D956D0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63C48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D956C0], MEMORY[0x1E0D956D8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE099AD8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B58B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], &qword_1EFA63C38, &qword_1EFA5E390, MEMORY[0x1E0D95490]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D95480], &qword_1EFA63C38);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], &qword_1EFA63C38, &qword_1EFA5E390, MEMORY[0x1E0D95490]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5E390, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], MEMORY[0x1E0D95490]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], MEMORY[0x1E0D95498]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE099D2C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1CE0973E4();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1CE09AAB0();
LABEL_22:
      v24 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_BYTE *)(*(_QWORD *)(v24 + 48) + a2) = v6;
      v25 = *(_QWORD *)(v24 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (!v26)
      {
        *(_QWORD *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1CE09BA08();
  }
  v9 = *v3;
  sub_1CE0B6D34();
  sub_1CE0B40C4();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  result = sub_1CE0B6D64();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v11 = sub_1CE0B40C4();
  v13 = v12;
  if (v11 == sub_1CE0B40C4() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v16 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v18 = sub_1CE0B40C4();
      v20 = v19;
      if (v18 == sub_1CE0B40C4() && v20 == v21)
        goto LABEL_25;
      v23 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE099F50(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B4244();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], (uint64_t *)&unk_1EFA63BC0, &qword_1EFA63BB0, MEMORY[0x1E0D907C0]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D907B0], (uint64_t *)&unk_1EFA63BC0);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], (uint64_t *)&unk_1EFA63BC0, &qword_1EFA63BB0, MEMORY[0x1E0D907C0]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA63BB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], MEMORY[0x1E0D907C0]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63BB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], MEMORY[0x1E0D907C8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE09A1A4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B57EC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94F68], &qword_1EFA63BA8, &qword_1EFA5D958, MEMORY[0x1E0D94F78]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D94F68], &qword_1EFA63BA8);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94F68], &qword_1EFA63BA8, &qword_1EFA5D958, MEMORY[0x1E0D94F78]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA5D958, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94F68], MEMORY[0x1E0D94F78]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94F68], MEMORY[0x1E0D94F80]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

uint64_t sub_1CE09A3F8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1CE0976B8();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1CE09AC40();
      goto LABEL_14;
    }
    sub_1CE09BCA8();
  }
  v8 = *v3;
  result = MEMORY[0x1D17C008C](*(_QWORD *)(*v3 + 40), v5, 4);
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      result = sub_1CE0B6C8C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_DWORD *)(v10 + 4 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(_QWORD *)(v12 + 48) + 4 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_1CE09A51C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1CE0B5324();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1CE097084(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94040], (uint64_t *)&unk_1EFA63B80, &qword_1EFA63B70, MEMORY[0x1E0D94050]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D94040], (uint64_t *)&unk_1EFA63B80);
      goto LABEL_12;
    }
    sub_1CE09B6EC(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94040], (uint64_t *)&unk_1EFA63B80, &qword_1EFA63B70, MEMORY[0x1E0D94050]);
  }
  v13 = *v3;
  sub_1CDFB1900(&qword_1EFA63B70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94040], MEMORY[0x1E0D94050]);
  v14 = sub_1CE0B6230();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1CDFB1900(&qword_1EFA63B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94040], MEMORY[0x1E0D94058]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

void *sub_1CE09A770()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0050);
  v2 = *v0;
  v3 = sub_1CE0B69C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CE09A900()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63CA0);
  v2 = *v0;
  v3 = sub_1CE0B69C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CE09AAB0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63C08);
  v2 = *v0;
  v3 = sub_1CE0B69C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CE09AC40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63B90);
  v2 = *v0;
  v3 = sub_1CE0B69C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CE09ADD4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0CE0);
  v2 = *v0;
  v3 = sub_1CE0B69C8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = (void *)swift_retain();
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CE09AF7C(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1CE0B69C8();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1CE09B1A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0050);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1CE0B6D34();
    sub_1CE0B4490();
    sub_1CE0B62CC();
    swift_bridgeObjectRelease();
    result = sub_1CE0B6D64();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CE09B440()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63CA0);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1CE0B6D34();
    swift_bridgeObjectRetain();
    sub_1CE0B62CC();
    result = sub_1CE0B6D64();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CE09B6EC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1CE0B69D4();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1CDFB1900(v40, v39, v41);
    result = sub_1CE0B6230();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CE09BA08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63C08);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    sub_1CE0B6D34();
    sub_1CE0B40C4();
    sub_1CE0B62CC();
    swift_bridgeObjectRelease();
    result = sub_1CE0B6D64();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CE09BCA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63B90);
  result = sub_1CE0B69D4();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v14);
    result = MEMORY[0x1D17C008C](*(_QWORD *)(v4 + 40), v18, 4);
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + 4 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CE09BF0C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0CE0);
  v3 = sub_1CE0B69D4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    sub_1CE0B6D34();
    swift_retain();
    sub_1CE0B6860();
    result = sub_1CE0B6D64();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1CE09C198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B4C10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA63C70, v11, MEMORY[0x1E0D91F60]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], MEMORY[0x1E0D91F68]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D91F50], (uint64_t *)&unk_1EFA63C80);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], &qword_1EFA63C70, MEMORY[0x1E0D91F60]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09C3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B54B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E260, v11, MEMORY[0x1E0D94740]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], MEMORY[0x1E0D94748]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D94730], &qword_1EFA63C98);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94730], &qword_1EFA5E260, MEMORY[0x1E0D94740]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09C660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B51C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E388, v11, MEMORY[0x1E0D93B78]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63C60, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], MEMORY[0x1E0D93B80]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D93B68], &qword_1EFA61508);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93B68], &qword_1EFA5E388, MEMORY[0x1E0D93B78]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09C8C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B62CC();
  v6 = sub_1CE0B6D64();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1CE0B6C50() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1CE0B6C50() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CE09A900();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1CE09DA34(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1CE09CA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B58B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E390, v11, MEMORY[0x1E0D95490]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], MEMORY[0x1E0D95498]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D95480], &qword_1EFA63C38);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D95480], &qword_1EFA5E390, MEMORY[0x1E0D95490]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09CCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B5F60();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5D990, v11, MEMORY[0x1E0D96548]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900((unint64_t *)&unk_1EFA63BD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96550]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D96538], &qword_1EFA61460);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], &qword_1EFA5D990, MEMORY[0x1E0D96548]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09CF18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B58A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900((unint64_t *)&unk_1EFA63BE0, v11, MEMORY[0x1E0D951E0]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900(&qword_1EFA61450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], MEMORY[0x1E0D951E8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D951D0], (uint64_t *)&unk_1EFA63BF0);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D951D0], (unint64_t *)&unk_1EFA63BE0, MEMORY[0x1E0D951E0]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09D17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1CE0B5EC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1CDFB1900(&qword_1EFA5E380, v11, MEMORY[0x1E0D963D0]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1CE0B6230();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1CDFB1900(&qword_1EFA63C00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963D8]);
      v19 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1CE09AF7C((uint64_t (*)(_QWORD))MEMORY[0x1E0D963C0], &qword_1EFA61440);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1CE09D7AC(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], &qword_1EFA5E380, MEMORY[0x1E0D963D0]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1CE09D3E0()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v13;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_1CE0B6998();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_1CE09D5E4();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B6860();
  v4 = sub_1CE0B6D64();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_12;
  sub_1CDFB53C8(0, (unint64_t *)&qword_1ED8F03A8);
  swift_retain();
  v7 = sub_1CE0B6854();
  swift_release();
  if ((v7 & 1) == 0)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_12;
      swift_retain();
      v9 = sub_1CE0B6854();
      swift_release();
    }
    while ((v9 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v0;
  v13 = *v0;
  *v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CE09ADD4();
    v11 = v13;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v6);
  sub_1CE09DBF8(v6);
  *v0 = v13;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1CE09D5E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1CE0B6974();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1CE0968D0(v3, v2);
  v13 = v4;
  sub_1CE0B6D34();
  swift_retain();
  sub_1CE0B6860();
  v5 = sub_1CE0B6D64();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1CDFB53C8(0, (unint64_t *)&qword_1ED8F03A8);
    swift_retain();
    v8 = sub_1CE0B6854();
    swift_release();
    if ((v8 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v11 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1CE09DBF8(v7);
      if ((sub_1CE0B6854() & 1) != 0)
      {
        *v1 = v13;
        return v11;
      }
      __break(1u);
    }
    else
    {
      v9 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        swift_retain();
        v10 = sub_1CE0B6854();
        swift_release();
        if ((v10 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1CE09D7AC(int64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t (*v33)(uint64_t);
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a3;
  v35 = a4;
  v33 = a2;
  v6 = a2(0);
  v36 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = *v4;
  v11 = *v4 + 56;
  v12 = -1 << *(_BYTE *)(*v4 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(v11 + 8 * (v13 >> 6))) != 0)
  {
    v30 = v4;
    v14 = ~v12;
    swift_retain();
    v15 = sub_1CE0B6950();
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v32 = (v15 + 1) & v14;
      v16 = *(_QWORD *)(v36 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      do
      {
        v17 = v11;
        v18 = v16;
        v19 = v16 * v13;
        v31(v9, *(_QWORD *)(v10 + 48) + v16 * v13, v6);
        sub_1CDFB1900(v34, v33, v35);
        v20 = sub_1CE0B6230();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v6);
        v21 = v20 & v14;
        if (a1 >= (uint64_t)v32)
        {
          if (v21 >= v32 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v16 = v18;
            v24 = v18 * a1;
            if (v18 * a1 < v19
              || *(_QWORD *)(v10 + 48) + v18 * a1 >= (unint64_t)(*(_QWORD *)(v10 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v13;
            }
            else
            {
              a1 = v13;
              if (v24 != v19)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v13;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v32 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v16 = v18;
LABEL_5:
        v13 = (v13 + 1) & v14;
        v11 = v17;
      }
      while (((*(_QWORD *)(v17 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    *(_QWORD *)(v11 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v4 = v30;
  }
  else
  {
    *(_QWORD *)(v11 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v4;
  v26 = *(_QWORD *)(*v4 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
  return result;
}

unint64_t sub_1CE09DA34(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1CE0B6950();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1CE0B6D34();
        swift_bridgeObjectRetain();
        sub_1CE0B62CC();
        v10 = sub_1CE0B6D64();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1CE09DBF8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1CE0B6950();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1CE0B6D34();
        swift_retain();
        sub_1CE0B6860();
        v10 = sub_1CE0B6D64();
        swift_release();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_QWORD *)(v12 + 8 * v2);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1CE09DDB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CE09DDD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE09DDFC()
{
  return swift_deallocObject();
}

uint64_t sub_1CE09DE0C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE09DE30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE09DEAC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t method lookup function for XPCServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static XPCServer.service(requiredEntitlements:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of XPCServer.activate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of XPCServer.deactivate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t sub_1CE09DF24()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1CE09DF4C()
{
  uint64_t v0;

  sub_1CE093054(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), "XPC client connection (%{public}s) invalidated");
}

uint64_t objectdestroy_24Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CE09DFA8()
{
  uint64_t v0;

  sub_1CE093054(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), "XPC client connection (%{public}s) interrupted");
}

uint64_t SessionActivated.init(session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t SessionActivated.session.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static SessionActivated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for SessionActivated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE09E070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionActivated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE09E0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t Collection<>.sortedByLastCompleted(calendar:)()
{
  return sub_1CE0B63B0();
}

uint64_t sub_1CE09E14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  char v52;
  void (*v53)(uint64_t, uint64_t);
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;

  v72 = (char *)a3;
  v73 = a2;
  v8 = sub_1CE0B3E24();
  v65 = *(_QWORD *)(v8 - 8);
  v66 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v62 - v11;
  v71 = sub_1CE0B3DF4();
  v12 = *(_QWORD **)(v71 - 8);
  v13 = MEMORY[0x1E0C80A78](v71);
  v67 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v70 = (char *)&v62 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  v17 = MEMORY[0x1E0C80A78](v16);
  v68 = (uint64_t)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v62 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v62 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v62 - v25;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(a6 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v29 = (uint64_t)v72;
  v69 = a1;
  v27(v72, AssociatedTypeWitness, a6);
  v30 = v29;
  v31 = a6;
  v32 = a6;
  v33 = v71;
  v27((char *)v30, AssociatedTypeWitness, v32);
  v72 = v24;
  sub_1CE09E62C((uint64_t)v24, (uint64_t)v21);
  v34 = (unsigned int (*)(char *, uint64_t, uint64_t))v12[6];
  if (v34(v21, 1, v33) == 1)
  {
    sub_1CDFB9A24((uint64_t)v21);
    v35 = (uint64_t)v26;
    if (v34(v26, 1, v33) == 1)
    {
      v36 = v31;
      v37 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 16);
      v38 = AssociatedTypeWitness;
      v39 = v37(AssociatedTypeWitness, v36);
      v41 = v40;
      if (v39 == v37(v38, v36) && v41 == v42)
      {
        swift_bridgeObjectRelease_n();
        v43 = v66;
      }
      else
      {
        v52 = sub_1CE0B6C50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v43 = v66;
        if ((v52 & 1) == 0)
        {
          v57 = v37(v38, v36);
          v59 = v58;
          if (v57 == v37(v38, v36) && v59 == v60)
            v48 = 0;
          else
            v48 = sub_1CE0B6C50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      v53 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v54 = v63;
      v53(v38, v36);
      v55 = v64;
      v53(v38, v36);
      v48 = MEMORY[0x1D17BD17C](v54, v55);
      v56 = *(void (**)(char *, uint64_t))(v65 + 8);
      v56(v55, v43);
      v56(v54, v43);
    }
    else
    {
      v48 = 0;
    }
LABEL_17:
    v49 = (uint64_t)v72;
    goto LABEL_18;
  }
  v44 = v67;
  v45 = (void (*)(char *, char *, uint64_t))v12[4];
  v46 = v70;
  v45(v70, v21, v33);
  v47 = v68;
  sub_1CE09E62C((uint64_t)v26, v68);
  v35 = (uint64_t)v26;
  if (v34((char *)v47, 1, v33) != 1)
  {
    v50 = v44;
    v45(v44, (char *)v47, v33);
    v48 = sub_1CE0B3DB8();
    v51 = (void (*)(char *, uint64_t))v12[1];
    v51(v50, v33);
    v51(v46, v33);
    goto LABEL_17;
  }
  ((void (*)(char *, uint64_t))v12[1])(v46, v33);
  sub_1CDFB9A24((uint64_t)v72);
  v48 = 1;
  v49 = v47;
LABEL_18:
  sub_1CDFB9A24(v49);
  sub_1CDFB9A24(v35);
  return v48 & 1;
}

uint64_t sub_1CE09E5F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1CE09E14C(a1, a2, v2[5], v2[2], v2[3], v2[4]) & 1;
}

uint64_t dispatch thunk of WorkoutPlanLastCompletedSortable.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WorkoutPlanLastCompletedSortable.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WorkoutPlanLastCompletedSortable.lastCompletedEndDate(calendar:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1CE09E62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE09E674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  v1 = sub_1CE0B5738();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B572C();
  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000077;
  v6._object = (void *)0x80000001CE0CD700;
  v7._object = (void *)0x80000001CE0CD780;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v14 = 109;
  v10 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B4FB8();
  v10(&v14, v4, v1, v11, MEMORY[0x1E0D94D50], MEMORY[0x1E0D94D58], MEMORY[0x1E0D92DA8], MEMORY[0x1E0D92DB0], ObjectType, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

_QWORD *ServiceSubscriptionClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for ServiceSubscriptionClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE09EF10(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t ServiceSubscriptionClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE09EFF0);
}

uint64_t sub_1CE09E924()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CE09E978();
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE09E978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(uint64_t);
  void (*v16)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCA0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 64);
  v3 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v19 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE09E674();
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1CE09F094;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1CE09F0C0;
  *(_QWORD *)(v12 + 24) = v11;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  v13 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v14 + v13, v4, v0);
  v15 = (uint64_t (**)(uint64_t))(v14 + ((v2 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v15 = sub_1CE09F0D8;
  v15[1] = (uint64_t (*)(uint64_t))v12;
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)(v17 + 24) = 0;
  v16(sub_1CDFF3920, v17);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v7);
}

uint64_t sub_1CE09EBC0@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  v3 = result;
  if (result)
  {
    v4 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8))(ObjectType, &type metadata for ServiceSubscriptionUpdated, &protocol witness table for ServiceSubscriptionUpdated, ObjectType, v4);
    result = swift_unknownObjectRelease();
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t ServiceSubscriptionClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1CE09EC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v7[2];

  sub_1CDFAC5C8(a1, (uint64_t)v7);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  sub_1CDFC3290(v7, v5 + 32);
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE09ED10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = sub_1CE0B4FB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v10 + v9, (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE09EE0C(void (*a1)(uint64_t *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v8;
  char v9;

  a3(&v8, a5);
  v6 = v8;
  v9 = 0;
  a1(&v8);
  return sub_1CDFC2DF0(v6, 0);
}

_QWORD *sub_1CE09EE84(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr))
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = a2(&v5);
  if ((v5 & 1) != 0)
  {
    v3 = sub_1CE0B4304();
    sub_1CE09F2B4();
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(v4, *MEMORY[0x1E0D908D8], v3);
    return (_QWORD *)swift_willThrow();
  }
  return result;
}

_QWORD *sub_1CE09EF10(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  char v9;
  uint64_t v10;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v10 = a1;
  v9 = 11;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v9, (uint64_t)sub_1CE09F2FC, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE09EFF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for ServiceSubscriptionClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB1478(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t method lookup function for ServiceSubscriptionClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ServiceSubscriptionClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE09F070()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE09F094@<X0>(BOOL *a1@<X8>)
{
  return sub_1CE09EBC0(a1);
}

uint64_t sub_1CE09F09C()
{
  swift_release();
  return swift_deallocObject();
}

_QWORD *sub_1CE09F0C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE09EE84(a1, *(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16));
}

uint64_t sub_1CE09F0D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE09ED10(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE09F0E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCA0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE09F15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCA0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFF1DA4(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1CE09F1C4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE09F1F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B4FB8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE09F264(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B4FB8() - 8) + 80);
  return sub_1CE09EE0C(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + ((v5 + 32) & ~v5));
}

unint64_t sub_1CE09F2B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA63E60;
  if (!qword_1EFA63E60)
  {
    v1 = sub_1CE0B4304();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D908F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA63E60);
  }
  return result;
}

uint64_t sub_1CE09F2FC()
{
  return sub_1CE09E924();
}

uint64_t sub_1CE09F304()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_1CE09F330(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  return sub_1CE09EE0C(a1, a2, *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), v2 + 32);
}

id AchievementProgressEnvironment.__allocating_init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return AchievementProgressEnvironment.init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)(a1, a2, a3);
}

id AchievementProgressEnvironment.init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  id v20;
  uint64_t v21;
  uint64_t v23;
  objc_super v24;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0180);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_bestEnergyBurnedOfWorkoutModality] = 0;
  v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_isSessionGuided] = 0;
  v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_isSessionCompletingProgram] = 0;
  v10 = &v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_modalityIdentifier];
  *v10 = 0;
  v10[1] = 0xE000000000000000;
  *(_QWORD *)&v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_sessionDuration] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_sessionEnergyBurned] = 0;
  v11 = v3;
  v12 = sub_1CE0B5780();
  v13 = sub_1CE09F888(v12);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfWorkoutsOver5MinutesForModalities] = v13;
  v14 = sub_1CE0B5798();
  v15 = sub_1CE09F888(v14);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfGuidedWorkoutsOver5MinutesForModalities] = v15;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfWorkoutsOver5Minutes] = sub_1CE0B5768();
  sub_1CE0B5750();
  v16 = sub_1CE0B521C();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    sub_1CE09FAA8((uint64_t)v9);
    v18 = 0;
  }
  else
  {
    v18 = sub_1CE0B5210();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
  }
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_currentWeeklyStreak] = v18;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_longestWeeklyStreak] = sub_1CE0B575C();
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_currentPlanCompletedNumberOfWorkouts] = a2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_currentPlanTotalNumberOfWorkouts] = a3;

  v19 = (objc_class *)type metadata accessor for AchievementProgressEnvironment();
  v24.receiver = v11;
  v24.super_class = v19;
  v20 = objc_msgSendSuper2(&v24, sel_init);
  v21 = sub_1CE0B57A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
  return v20;
}

id sub_1CE09F660(uint64_t a1)
{
  return sub_1CE09F6C4(a1, &OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfGuidedWorkoutsOver5MinutesForModalities);
}

id sub_1CE09F6B8(uint64_t a1)
{
  return sub_1CE09F6C4(a1, &OBJC_IVAR____TtC13SeymourClient30AchievementProgressEnvironment_numberOfWorkoutsOver5MinutesForModalities);
}

id sub_1CE09F6C4(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  id v8;

  v3 = *(_QWORD *)(v2 + *a2);
  v4 = sub_1CE0B6278();
  if (*(_QWORD *)(v3 + 16) && (v6 = sub_1CDFD1DAC(v4, v5), (v7 & 1) != 0))
  {
    v8 = *(id *)(*(_QWORD *)(v3 + 56) + 8 * v6);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    swift_bridgeObjectRelease();
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, 0);
  }
}

id AchievementProgressEnvironment.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AchievementProgressEnvironment.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id AchievementProgressEnvironment.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AchievementProgressEnvironment();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_1CE09F888(uint64_t a1)
{
  _QWORD *result;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  char *v27;
  uint64_t v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F06B8);
  result = (_QWORD *)sub_1CE0B6B3C();
  v3 = result;
  v4 = 0;
  v28 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  v6 = a1 + 64;
  v5 = v7;
  v8 = 1 << *(_BYTE *)(v6 - 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v5;
  v25 = v6;
  v26 = (unint64_t)(v8 + 63) >> 6;
  v27 = (char *)(result + 8);
  if ((v9 & v5) == 0)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v11 | (v4 << 6); ; i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v28 + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v28 + 56) + 8 * i);
    v20 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    swift_bridgeObjectRetain();
    result = objc_msgSend(v20, sel_initWithInteger_, v19);
    *(_QWORD *)&v27[(i >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << i;
    v21 = (_QWORD *)(v3[6] + 16 * i);
    *v21 = v17;
    v21[1] = v18;
    *(_QWORD *)(v3[7] + 8 * i) = result;
    v22 = v3[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v24;
    if (v10)
      goto LABEL_4;
LABEL_5:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_24;
    if (v13 >= v26)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v13);
    ++v4;
    if (!v14)
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v26)
        return v3;
      v14 = *(_QWORD *)(v25 + 8 * v4);
      if (!v14)
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v26)
          return v3;
        v14 = *(_QWORD *)(v25 + 8 * v4);
        if (!v14)
          break;
      }
    }
LABEL_18:
    v10 = (v14 - 1) & v14;
  }
  v15 = v13 + 3;
  if (v15 >= v26)
    return v3;
  v14 = *(_QWORD *)(v25 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v26)
      return v3;
    v14 = *(_QWORD *)(v25 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1CE09FAA8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0180);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for AchievementProgressEnvironment()
{
  return objc_opt_self();
}

uint64_t method lookup function for AchievementProgressEnvironment()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AchievementProgressEnvironment.__allocating_init(cache:activePlanCompletedNumberOfWorkouts:activePlanTotalNumberOfWorkouts:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.willBeginActivity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.waitForSession(activity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.joinActivity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.leaveActivity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.terminateActivity(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.queryJoinedActivity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.launchActivityApplication(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.sendMediaPlayerSyncUpdate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.handleMediaPlayerSyncAnnouncement(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.sendCelebrationType(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.requestMediaPlayerCatchup()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MultiUserClientProtocol.queryUserIdentity()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

BOOL SessionOrigin.isLocal.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v7;

  v1 = type metadata accessor for SessionOrigin();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE09FC2C(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v5 = sub_1CE0B5E04();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  else
  {
    sub_1CE09FC70((uint64_t)v3);
  }
  return EnumCaseMultiPayload != 1;
}

uint64_t sub_1CE09FC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionOrigin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE09FC70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SessionOrigin();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SessionOrigin.token.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = sub_1CE0B5E04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SessionOrigin();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE09FC2C(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() != 1)
    return *(_QWORD *)v8;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  v9 = sub_1CE0B5C9C();
  v11 = v10;
  type metadata accessor for SessionToken();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v11;
  *(_BYTE *)(v12 + 32) = 0;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t SessionOrigin.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1CE0B5E04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SessionOrigin();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE09FC2C(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v9 = sub_1CE0B5C9C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v9 = *(_QWORD *)(*(_QWORD *)v8 + 16);
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v9;
}

uint64_t SessionOrigin.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v1 = v0;
  v2 = sub_1CE0B5E04();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SessionOrigin();
  MEMORY[0x1E0C80A78](v6);
  v8 = (_QWORD *)((char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CE09FC2C(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1CE0B6D40();
    sub_1CDFB1900(&qword_1EFA63ED0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96250], MEMORY[0x1E0D96260]);
    sub_1CE0B623C();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v10 = *v8;
    sub_1CE0B6D40();
    v11 = *(_QWORD *)(v10 + 24);
    v12[0] = *(_QWORD *)(v10 + 16);
    v12[1] = v11;
    swift_bridgeObjectRetain();
    sub_1CE0B62F0();
    swift_bridgeObjectRelease();
    sub_1CE0B6350();
    swift_bridgeObjectRelease();
    sub_1CE0B6D40();
    return swift_release();
  }
}

uint64_t SessionOrigin.hashValue.getter()
{
  sub_1CE0B6D34();
  SessionOrigin.hash(into:)();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0A00E4()
{
  sub_1CE0B6D34();
  SessionOrigin.hash(into:)();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0A0124()
{
  sub_1CE0B6D34();
  SessionOrigin.hash(into:)();
  return sub_1CE0B6D64();
}

uint64_t _s13SeymourClient13SessionOriginO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v29;
  char v31;
  uint64_t v32;

  v4 = sub_1CE0B5E04();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SessionOrigin();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v32 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63F88);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (uint64_t)&v17[*(int *)(v15 + 48)];
  sub_1CE09FC2C(a1, (uint64_t)v17);
  sub_1CE09FC2C(a2, v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1CE09FC2C((uint64_t)v17, (uint64_t)v13);
    v21 = *v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_release();
LABEL_7:
      sub_1CE0A07E4((uint64_t)v17);
LABEL_8:
      v19 = 0;
      return v19 & 1;
    }
    v23 = *(_QWORD *)v18;
    if (*(_BYTE *)(v21 + 32))
      v24 = 0x6576697463616E69;
    else
      v24 = 0x657669746361;
    if (*(_BYTE *)(v21 + 32))
      v25 = 0xE800000000000000;
    else
      v25 = 0xE600000000000000;
    if (*(_BYTE *)(*(_QWORD *)v18 + 32))
      v26 = 0x6576697463616E69;
    else
      v26 = 0x657669746361;
    if (*(_BYTE *)(*(_QWORD *)v18 + 32))
      v27 = 0xE800000000000000;
    else
      v27 = 0xE600000000000000;
    if (v24 == v26 && v25 == v27)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v29 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        swift_release();
        swift_release();
LABEL_34:
        sub_1CE09FC70((uint64_t)v17);
        goto LABEL_8;
      }
    }
    if (*(_QWORD *)(v21 + 16) == *(_QWORD *)(v23 + 16) && *(_QWORD *)(v21 + 24) == *(_QWORD *)(v23 + 24))
    {
      swift_release();
      swift_release();
    }
    else
    {
      v31 = sub_1CE0B6C50();
      swift_release();
      swift_release();
      if ((v31 & 1) == 0)
        goto LABEL_34;
    }
    sub_1CE09FC70((uint64_t)v17);
    v19 = 1;
    return v19 & 1;
  }
  sub_1CE09FC2C((uint64_t)v17, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v18, v4);
  v19 = MEMORY[0x1D17BF138](v11, v7);
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v11, v4);
  sub_1CE09FC70((uint64_t)v17);
  return v19 & 1;
}

uint64_t sub_1CE0A0454()
{
  return sub_1CDFB1900(&qword_1EFA63ED8, (uint64_t (*)(uint64_t))type metadata accessor for SessionOrigin, (uint64_t)&protocol conformance descriptor for SessionOrigin);
}

uint64_t *initializeBufferWithCopyOfBuffer for SessionOrigin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1CE0B5E04();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SessionOrigin(uint64_t a1)
{
  uint64_t v2;

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v2 = sub_1CE0B5E04();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

_QWORD *initializeWithCopy for SessionOrigin(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1CE0B5E04();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for SessionOrigin(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_1CE09FC70((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1CE0B5E04();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for SessionOrigin(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1CE0B5E04();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for SessionOrigin(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1CE09FC70((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1CE0B5E04();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1CE0A07E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63F88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static BagKey.addFundsURL.getter()
{
  return 0x73646E7546646441;
}

uint64_t static BagKey.countryCode.getter()
{
  return 0x437972746E756F63;
}

unint64_t static BagKey.mediaHost.getter()
{
  return 0xD000000000000012;
}

unint64_t static BagKey.fitnessPlusEnabled.getter()
{
  return 0xD000000000000012;
}

uint64_t static BagKey.fpsCert.getter()
{
  return 0x747265632D737066;
}

uint64_t static BagKey.jetPackHost.getter()
{
  return 0x752D7070612D736ALL;
}

uint64_t static BagKey.languageTag.getter()
{
  return 0x65676175676E616CLL;
}

unint64_t static BagKey.processRedirectURLEndpoint.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static BagKey.processRedirectURLQueryParameters.getter()
{
  return 0xD000000000000029;
}

unint64_t static BagKey.syncBackOffIntervalMinutes.getter()
{
  return 0xD000000000000021;
}

unint64_t static BagKey.syncTokenIntervalMinutes.getter()
{
  return 0xD000000000000018;
}

unint64_t static BagKey.workoutLicenseOfflineStart.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static BagKey.workoutLicenseOfflineStop.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static BagKey.workoutLicenseOfflineStopNonce.getter()
{
  return 0xD000000000000024;
}

unint64_t static BagKey.workoutLicenseStreamingStart.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static BagKey.workoutLicenseStreamingRenew.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static BagKey.workoutLicenseStreamingStop.getter()
{
  return 0xD00000000000001ELL;
}

ValueMetadata *type metadata accessor for BagKey()
{
  return &type metadata for BagKey;
}

uint64_t Error.errorCodeString.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16[2];
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v8((char *)v16 - v9, v1, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F02A8);
  if (swift_dynamicCast())
  {
    sub_1CDFC3290(v16, (uint64_t)v18);
    v10 = v19;
    v11 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
    v14 = v13;
    v8(v7, v2, a1);
    if (!v14)
    {
      *(_QWORD *)&v16[0] = sub_1CE0B6CBC();
      v12 = sub_1CE0B6C14();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
  else
  {
    v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1CE0A0BD4((uint64_t)v16);
    v18[0] = sub_1CE0B6CBC();
    return sub_1CE0B6C14();
  }
  return v12;
}

uint64_t sub_1CE0A0BD4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0A08);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Error.errorDomainString.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16[2];
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v8((char *)v16 - v9, v1, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F02A8);
  if (swift_dynamicCast())
  {
    sub_1CDFC3290(v16, (uint64_t)v18);
    v10 = v19;
    v11 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
    v14 = v13;
    v8(v7, v2, a1);
    if (!v14)
      v12 = sub_1CE0B6CC8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v18);
  }
  else
  {
    v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1CE0A0BD4((uint64_t)v16);
    return sub_1CE0B6CC8();
  }
  return v12;
}

void static ThreeRingsCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ThreeRingsCompleted()
{
  return &type metadata for ThreeRingsCompleted;
}

uint64_t UserBodyMassMetricUpdated.userBodyMassMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4DD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t UserBodyMassMetricUpdated.init(userBodyMassMetric:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static UserBodyMassMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for UserBodyMassMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4DD8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for UserBodyMassMetricUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for UserBodyMassMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A0FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for UserBodyMassMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A1014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4DD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UserBodyMassMetricUpdated()
{
  uint64_t result;

  result = qword_1EFA63FE8;
  if (!qword_1EFA63FE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0A1090()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4DD8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OpenLinkAction.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CE0A1130 + 4 * byte_1CE0C4BCC[a1]))(0x6E6974656B72616DLL, 0xE900000000000067);
}

uint64_t sub_1CE0A1130()
{
  return 0x726F777472617473;
}

uint64_t sub_1CE0A1150()
{
  return 0x65735569746C756DLL;
}

unint64_t sub_1CE0A1168()
{
  return 0xD000000000000014;
}

void sub_1CE0A1188(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1CE0A11E8@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CE0A1250 + 4 * byte_1CE0C4BD4[a1]))(0x726F777472617473);
}

uint64_t sub_1CE0A1250(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726F777472617473 && v1 == 0xEC00000074756F6BLL)
    v2 = 1;
  else
    v2 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1CE0A1304@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s13SeymourClient14OpenLinkActionO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1CE0A1330()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1CE0A1364 + 4 * byte_1CE0C4BD8[*v0]))();
}

void sub_1CE0A1364(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "startworkout");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1CE0A1388(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x65735569746C756DLL;
  a1[1] = v1 + 11;
}

void sub_1CE0A13A4(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000014;
  a1[1] = 0x80000001CE0C7680;
}

uint64_t sub_1CE0A13C4()
{
  sub_1CE0A1804();
  return sub_1CE0B6410();
}

uint64_t sub_1CE0A1420()
{
  sub_1CE0A1804();
  return sub_1CE0B63F8();
}

void sub_1CE0A146C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CE0B6D34();
  __asm { BR              X9 }
}

uint64_t sub_1CE0A14BC()
{
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

void sub_1CE0A1538()
{
  __asm { BR              X10 }
}

uint64_t sub_1CE0A1578()
{
  sub_1CE0B62CC();
  return swift_bridgeObjectRelease();
}

void sub_1CE0A15E0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1CE0B6D34();
  __asm { BR              X9 }
}

uint64_t sub_1CE0A162C()
{
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t _s13SeymourClient14OpenLinkActionO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1CE0B6BC0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1CE0A16F4()
{
  unint64_t result;

  result = qword_1EFA64020;
  if (!qword_1EFA64020)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for OpenLinkAction, &type metadata for OpenLinkAction);
    atomic_store(result, (unint64_t *)&qword_1EFA64020);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OpenLinkAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CE0A1784 + 4 * byte_1CE0C4BED[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CE0A17B8 + 4 * byte_1CE0C4BE8[v4]))();
}

uint64_t sub_1CE0A17B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0A17C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE0A17C8);
  return result;
}

uint64_t sub_1CE0A17D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE0A17DCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CE0A17E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0A17E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OpenLinkAction()
{
  return &type metadata for OpenLinkAction;
}

unint64_t sub_1CE0A1804()
{
  unint64_t result;

  result = qword_1EFA64028;
  if (!qword_1EFA64028)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for OpenLinkAction, &type metadata for OpenLinkAction);
    atomic_store(result, (unint64_t *)&qword_1EFA64028);
  }
  return result;
}

uint64_t PlaybackIntentUpdated.playbackIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaybackIntentUpdated.init(playbackIntent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static PlaybackIntentUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PlaybackIntentUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4880();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PlaybackIntentUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaybackIntentUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A1A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlaybackIntentUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A1AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PlaybackIntentUpdated()
{
  uint64_t result;

  result = qword_1EFA64088;
  if (!qword_1EFA64088)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0A1B1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4880();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AssetClientProtocol.fetchImageData(remoteURL:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 240))(a1, a2, 1, 1, a3, a4);
}

uint64_t AssetClientProtocol.fetchImageData(remoteURL:priority:pixelWidth:pixelHeight:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;

  v13 = sub_1CE0B5ED0();
  v15 = v14;
  v16 = sub_1CE0B5EDC();
  v19 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, uint64_t, uint64_t))(a7 + 248))(a1, a2, a3, a4, a5, v13, v15, v16, v17, 1, v19, a6, a7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of AssetClientProtocol.deleteAllAssets()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetClientProtocol.requestAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AssetClientProtocol.requestAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AssetClientProtocol.pauseAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AssetClientProtocol.pauseAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of AssetClientProtocol.cancelAssetRequest(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AssetClientProtocol.cancelAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of AssetClientProtocol.cancelAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of AssetClientProtocol.failAssetEntry(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of AssetClientProtocol.loadIncompleteAssetBundles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of AssetClientProtocol.prefetchAssetBundles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of AssetClientProtocol.renewKeys()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of AssetClientProtocol.validateAssets()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryCompletedAssetBundlesOnCurrentDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryCompletedAssetBundleCountOnCurrentDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryCompletedAssetBundlesOnActivePairedDevice()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAssetBundles(workoutIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetEntries()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetRequests()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetResumableLoads()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of AssetClientProtocol.insertDemoAssetBundle(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of AssetClientProtocol.filterAssetBundlesOnCurrentDevice(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryStandardImageBestMatches(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of AssetClientProtocol.evaluateStandardImageURLs(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 200))();
}

uint64_t dispatch thunk of AssetClientProtocol.evaluateStandardImageMatches(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryPreferredStreamingURL(workout:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of AssetClientProtocol.queryLocalURL(remoteURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of AssetClientProtocol.fetchLocalURL(type:remoteURL:priority:expirationPolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a7 + 232))(a1, a2, a3, a4, a5 & 1);
}

uint64_t dispatch thunk of AssetClientProtocol.fetchImageData(remoteURL:priority:expirationPolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a6 + 240))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of AssetClientProtocol.fetchImageData(remoteURL:priority:pixelWidth:pixelHeight:cropCode:fileType:expirationPolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a13 + 248))(a1, a2);
}

_QWORD *AssetClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for AssetClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE0A52C4(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t AssetClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0A543C);
}

uint64_t sub_1CE0A1EB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;

  v9 = a3(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = *(_QWORD *)(result + 48);
    ObjectType = swift_getObjectType();
    v15 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, a1, v15);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v11, v9, a5, ObjectType, v13);
    sub_1CDFE19F8((uint64_t)v11, a3);
    return swift_release();
  }
  return result;
}

uint64_t AssetClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t AssetClient.deleteAllAssets()()
{
  return sub_1CE0A2A00(0xD000000000000011, (void *)0x80000001CE0CDDE0, 12);
}

uint64_t AssetClient.requestAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, unint64_t a2)
{
  return sub_1CE0A242C(a1, a2, "requestAssetBundleOnCurrentDevice - workout identifier: %{public}s", 33);
}

uint64_t AssetClient.requestAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, unint64_t a2)
{
  return sub_1CE0A242C(a1, a2, "requestAssetBundleOnActivePairedDevice - workout identifier: %{public}s", 34);
}

uint64_t AssetClient.insertDemoAssetBundle(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1CE0B50F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED8EF680);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  if (os_log_type_enabled(v11, v12))
  {
    v23 = v2;
    v13 = swift_slowAlloc();
    v25 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v27 = v15;
    v24 = a2;
    *(_DWORD *)v14 = 136446210;
    sub_1CDFB1900(&qword_1EFA640C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93878], MEMORY[0x1E0D93888]);
    v16 = sub_1CE0B6C14();
    v26 = sub_1CDFC7270(v16, v17, &v27);
    v3 = v23;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1CDFAA000, v11, v12, "insertDemoAssetBundle request: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v15, -1, -1);
    v18 = v14;
    a1 = v25;
    MEMORY[0x1D17C092C](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  v19 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  LOWORD(v27) = 38;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v19 + 16))(&v27, a1, v6, MEMORY[0x1E0D93868], MEMORY[0x1E0D93870], ObjectType, v19);
}

uint64_t AssetClient.renewKeys()()
{
  return sub_1CE0A22B4("renewKeys", 35);
}

uint64_t AssetClient.validateAssets()()
{
  return sub_1CE0A22B4("validateAssets", 36);
}

uint64_t sub_1CE0A22B4(const char *a1, __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  v5 = v2;
  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v6 = sub_1CE0B6080();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED8EF680);
  v7 = sub_1CE0B6068();
  v8 = sub_1CE0B6734();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1CDFAA000, v7, v8, a1, v9, 2u);
    MEMORY[0x1D17C092C](v9, -1, -1);
  }

  v10 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType();
  v13 = a2;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t AssetClient.pauseAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2)
{
  return sub_1CE0A2658(a1, a2, 0xD000000000000033, (void *)0x80000001CE0CDE00, 18);
}

uint64_t AssetClient.pauseAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, uint64_t a2)
{
  return sub_1CE0A2658(a1, a2, 0xD000000000000038, (void *)0x80000001CE0CDE40, 19);
}

uint64_t AssetClient.cancelAssetBundleOnCurrentDevice(workoutIdentifier:)(uint64_t a1, unint64_t a2)
{
  return sub_1CE0A242C(a1, a2, "cancelAssetBundleOnCurrentDevice - workoutIdentifier: %{public}s", 9);
}

uint64_t AssetClient.cancelAssetBundleOnActivePairedDevice(workoutIdentifier:)(uint64_t a1, unint64_t a2)
{
  return sub_1CE0A242C(a1, a2, "cancelAssetBundleOnActivePairedDevice - workoutIdentifier: %{public}s", 10);
}

uint64_t sub_1CE0A242C(uint64_t a1, unint64_t a2, char *a3, __int16 a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  char *format;
  uint64_t v19;
  uint64_t v20[2];

  v7 = v4;
  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED8EF680);
  swift_bridgeObjectRetain_n();
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  if (os_log_type_enabled(v11, v12))
  {
    format = a3;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v20[0] = v14;
    *(_DWORD *)v13 = 136446210;
    swift_bridgeObjectRetain();
    v19 = sub_1CDFC7270(a1, a2, v20);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CDFAA000, v11, v12, format, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v14, -1, -1);
    MEMORY[0x1D17C092C](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v15 = *(_QWORD *)(v7 + 24);
  ObjectType = swift_getObjectType();
  LOWORD(v19) = a4;
  v20[0] = a1;
  v20[1] = a2;
  return (*(uint64_t (**)(uint64_t *, uint64_t *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v15 + 16))(&v19, v20, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v15);
}

uint64_t AssetClient.cancelAssetRequest(identifier:)(uint64_t a1, uint64_t a2)
{
  return sub_1CE0A2658(a1, a2, 0xD00000000000001FLL, (void *)0x80000001CE0CDE80, 11);
}

uint64_t sub_1CE0A2658(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, __int16 a5)
{
  uint64_t v5;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t ObjectType;
  _QWORD v17[2];
  __int16 v18;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v11 = sub_1CE0B6080();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED8EF680);
  v12._object = (void *)0x80000001CE0CDD70;
  v12._countAndFlagsBits = 0xD000000000000063;
  v13._countAndFlagsBits = a3;
  v13._object = a4;
  Logger.trace(file:function:)(v12, v13);
  v14 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType();
  v18 = a5;
  v17[0] = a1;
  v17[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 16))(&v18, v17, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v14);
}

uint64_t AssetClient.failAssetEntry(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1CE0B3D10();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED8EF680);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v24 = a2;
    v14 = v13;
    v15 = swift_slowAlloc();
    v23 = v15;
    *(_DWORD *)v14 = 141558274;
    v26 = 1752392040;
    v27 = v15;
    v25 = a1;
    sub_1CE0B68F0();
    *(_WORD *)(v14 + 12) = 2080;
    v16 = sub_1CE0B3CE0();
    v26 = sub_1CDFC7270(v16, v17, &v27);
    a1 = v25;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1CDFAA000, v11, v12, "Client - failAssetEntry for %{mask.hash}s", (uint8_t *)v14, 0x16u);
    v18 = v23;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v18, -1, -1);
    MEMORY[0x1D17C092C](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  v19 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  LOWORD(v27) = 13;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v19 + 16))(&v27, a1, v6, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], ObjectType, v19);
}

uint64_t AssetClient.loadIncompleteAssetBundles()()
{
  return sub_1CE0A2A00(0xD00000000000001CLL, (void *)0x80000001CE0CDEA0, 17);
}

uint64_t AssetClient.prefetchAssetBundles()()
{
  return sub_1CE0A2A00(0xD000000000000016, (void *)0x80000001CE0CDEC0, 20);
}

uint64_t sub_1CE0A2A00(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8EF680);
  v8._object = (void *)0x80000001CE0CDD70;
  v8._countAndFlagsBits = 0xD000000000000063;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t AssetClient.queryCompletedAssetBundlesOnCurrentDevice()()
{
  return sub_1CDFCB6C8(0xD00000000000002BLL, (void *)0x80000001CE0CDEE0, 26);
}

uint64_t AssetClient.queryCompletedAssetBundleCountOnCurrentDevice()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF680);
  v2._countAndFlagsBits = 0xD000000000000063;
  v2._object = (void *)0x80000001CE0CDD70;
  v3._object = (void *)0x80000001CE0CDF10;
  v3._countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 39;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E0DEB418], MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v4);
}

uint64_t AssetClient.queryCompletedAssetBundlesOnActivePairedDevice()()
{
  return sub_1CDFCB6C8(0xD000000000000030, (void *)0x80000001CE0CDF40, 27);
}

uint64_t AssetClient.queryAssetBundles(workoutIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF680);
  v4._countAndFlagsBits = 0xD000000000000063;
  v4._object = (void *)0x80000001CE0CDD70;
  v5._object = (void *)0x80000001CE0CDF80;
  v5._countAndFlagsBits = 0xD000000000000026;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 29;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA640C8);
  v11 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v12 = sub_1CDFB1DD8();
  v13 = sub_1CDFB0260(&qword_1EFA640D0, &qword_1EFA640C8, MEMORY[0x1E0D90178], MEMORY[0x1E0D90180]);
  v14 = sub_1CDFC8720();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t AssetClient.queryAllAssetEntries()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF680);
  v2._countAndFlagsBits = 0xD000000000000063;
  v2._object = (void *)0x80000001CE0CDD70;
  v3._object = (void *)0x80000001CE0CDFB0;
  v3._countAndFlagsBits = 0xD000000000000016;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 22;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA640E8);
  v8 = sub_1CDFB0260(&qword_1EFA640F0, &qword_1EFA640E8, MEMORY[0x1E0D8FD80], MEMORY[0x1E0D8FD88]);
  v9 = sub_1CE0A54A8();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t AssetClient.queryAllAssetRequests()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF680);
  v2._countAndFlagsBits = 0xD000000000000063;
  v2._object = (void *)0x80000001CE0CDD70;
  v3._object = (void *)0x80000001CE0CDFD0;
  v3._countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 24;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64108);
  v8 = sub_1CDFB0260(&qword_1EFA64110, &qword_1EFA64108, MEMORY[0x1E0D906E0], MEMORY[0x1E0D906E8]);
  v9 = sub_1CE0A5524();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t AssetClient.queryAllAssetResumableLoads()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF680);
  v2._countAndFlagsBits = 0xD000000000000063;
  v2._object = (void *)0x80000001CE0CDD70;
  v3._object = (void *)0x80000001CE0CDFF0;
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 25;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64128);
  v8 = sub_1CDFB0260(&qword_1EFA64130, &qword_1EFA64128, MEMORY[0x1E0D926A8], MEMORY[0x1E0D926B0]);
  v9 = sub_1CE0A55A0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t AssetClient.queryAllAssetLoadFailures()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t (*v3)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __int16 v8;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v8 = 23;
  v3 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v1 + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64148);
  v5 = sub_1CDFB0260(&qword_1EFA64150, &qword_1EFA64148, MEMORY[0x1E0D91AF8], MEMORY[0x1E0D91B00]);
  v6 = sub_1CE0A561C();
  return v3(&v8, v4, v5, v6, ObjectType, v1);
}

uint64_t AssetClient.queryLocalURL(remoteURL:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF680);
  v4._countAndFlagsBits = 0xD000000000000063;
  v4._object = (void *)0x80000001CE0CDD70;
  v5._object = (void *)0x80000001CE0CE030;
  v5._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 28;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B3D10();
  return v8(&v11, a1, v9, v9, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], ObjectType, v6);
}

uint64_t AssetClient.queryPreferredStreamingURL(workout:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF680);
  v4._countAndFlagsBits = 0xD000000000000063;
  v4._object = (void *)0x80000001CE0CDD70;
  v5._object = (void *)0x80000001CE0CE050;
  v5._countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 37;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B482C();
  v10 = sub_1CE0B3D10();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D911E0], MEMORY[0x1E0D911E8], MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], ObjectType, v6);
}

uint64_t AssetClient.evaluateStandardImageURLs(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  __int16 v16;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8EF680);
  v6._countAndFlagsBits = 0xD000000000000063;
  v6._object = (void *)0x80000001CE0CDD70;
  v7._object = (void *)0x80000001CE0CE080;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v16 = 31;
  v15[0] = a1;
  v15[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 32);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64168);
  v12 = sub_1CDFB0260(&qword_1EFA64170, &qword_1EFA64168, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8]);
  v13 = sub_1CE0A5698();
  return v10(&v16, v15, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], v12, v13, ObjectType, v8);
}

uint64_t AssetClient.evaluateStandardImageMatches(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF680);
  v4._countAndFlagsBits = 0xD000000000000063;
  v4._object = (void *)0x80000001CE0CDD70;
  v5._object = (void *)0x80000001CE0CE0A0;
  v5._countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 30;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5A50();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64188);
  v11 = sub_1CDFC889C(&qword_1EFA64190, &qword_1EFA64188, MEMORY[0x1E0D8FBA0]);
  v12 = sub_1CE0A5714();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D95948], MEMORY[0x1E0D95950], v11, v12, ObjectType, v6);
}

uint64_t AssetClient.filterAssetBundlesOnCurrentDevice(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF680);
  v4._countAndFlagsBits = 0xD000000000000063;
  v4._object = (void *)0x80000001CE0CDD70;
  v5._object = (void *)0x80000001CE0CE0D0;
  v5._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 40;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4C58();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA640C8);
  v11 = sub_1CDFB0260(&qword_1EFA640D0, &qword_1EFA640C8, MEMORY[0x1E0D90178], MEMORY[0x1E0D90180]);
  v12 = sub_1CDFC8720();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D92148], MEMORY[0x1E0D92150], v11, v12, ObjectType, v6);
}

uint64_t AssetClient.queryStandardImageBestMatches(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF680);
  v4._countAndFlagsBits = 0xD000000000000063;
  v4._object = (void *)0x80000001CE0CDD70;
  v5._object = (void *)0x80000001CE0CE100;
  v5._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 32;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5B1C();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64168);
  v11 = sub_1CDFB0260(&qword_1EFA64170, &qword_1EFA64168, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8]);
  v12 = sub_1CE0A5698();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D95C38], MEMORY[0x1E0D95C40], v11, v12, ObjectType, v6);
}

uint64_t AssetClient.fetchLocalURL(type:remoteURL:priority:expirationPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t ObjectType;
  void (*v27)(__int16 *, _BYTE *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t (**v36)(uint64_t);
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;

  v39 = a5;
  v42 = a4;
  v43 = a3;
  v49 = a6;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E558);
  v8 = *(_QWORD *)(v50 - 8);
  v9 = MEMORY[0x1E0C80A78](v50);
  v45 = v10;
  v46 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v41 = &v38[-v11];
  v12 = sub_1CE0B3D10();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v38[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1CE0B4B44();
  MEMORY[0x1E0C80A78](v16);
  v18 = &v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v40 = sub_1CE0B4208();
  v44 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v20 = &v38[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v21 = sub_1CE0B6080();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED8EF680);
  v22._countAndFlagsBits = 0xD000000000000063;
  v22._object = (void *)0x80000001CE0CDD70;
  v23._object = (void *)0x80000001CE0CE130;
  v23._countAndFlagsBits = 0xD000000000000038;
  Logger.trace(file:function:)(v22, v23);
  sub_1CE0B3D7C();
  sub_1CE0B629C();
  sub_1CE0A5790(a1, (uint64_t)v18);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  v48 = v12;
  if ((v39 & 1) != 0 && !v42)
    sub_1CE0B6668();
  else
    sub_1CE0B665C();
  sub_1CE0B41FC();
  v24 = (uint64_t (*)(uint64_t))v47;
  v25 = *(_QWORD *)(v47 + 24);
  ObjectType = swift_getObjectType();
  v51 = 14;
  v27 = *(void (**)(__int16 *, _BYTE *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v25 + 32);
  v28 = sub_1CE0B43E8();
  v29 = v40;
  v30 = v41;
  v27(&v51, v20, v40, v28, MEMORY[0x1E0D906E0], MEMORY[0x1E0D906E8], MEMORY[0x1E0D90A98], MEMORY[0x1E0D90AA0], ObjectType, v25);
  v31 = v46;
  v32 = v50;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v46, v30, v50);
  v33 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v34 = (v45 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v35 + v33, v31, v32);
  v36 = (uint64_t (**)(uint64_t))(v35 + v34);
  *v36 = sub_1CE0A57D4;
  v36[1] = v24;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v30, v32);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v44 + 8))(v20, v29);
}

uint64_t sub_1CE0A3CF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1CE0B43E8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_1CE0B3D10();
  return sub_1CE0B5C0C();
}

uint64_t sub_1CE0A3DD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t a13)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  id v32;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  char *v46;
  Swift::String v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t ObjectType;
  void (*v51)(uint64_t *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t (**v70)@<X0>(uint64_t *@<X0>, uint64_t@<X8>);
  id v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v88 = a6;
  v89 = a7;
  v86 = a4;
  v87 = a5;
  v85 = a3;
  v84 = a2;
  v96 = a9;
  v94 = sub_1CE0B3D10();
  v92 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v90 = v15;
  v91 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E548);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v95 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v19;
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v72 - v20;
  v22 = sub_1CE0B5B1C();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v97 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1;
  swift_getErrorValue();
  v26 = sub_1CE0B6CC8();
  v28 = v27;
  if (v26 == sub_1CE0B6278() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v31 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0)
    {
      *(_QWORD *)(swift_allocObject() + 16) = v25;
      v32 = v25;
      return sub_1CE0B5C0C();
    }
  }
  v80 = v23;
  v81 = v21;
  v76 = a13;
  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v82 = v17;
  v83 = v16;
  v79 = a12;
  v78 = a11;
  v77 = a10;
  v34 = sub_1CE0B6080();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED8EF680);
  v35 = v25;
  v36 = v25;
  v37 = sub_1CE0B6068();
  v38 = sub_1CE0B671C();
  v39 = os_log_type_enabled(v37, v38);
  v75 = v25;
  if (v39)
  {
    v40 = swift_slowAlloc();
    v73 = a8;
    v41 = (uint8_t *)v40;
    v42 = swift_slowAlloc();
    v101 = v42;
    *(_DWORD *)v41 = 136446210;
    swift_getErrorValue();
    v43 = MEMORY[0x1D17C0050](v99, v100);
    v98 = sub_1CDFC7270(v43, v44, &v101);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v37, v38, "Fallback - querying completed closest match due to error: %{public}s", v41, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v42, -1, -1);
    v45 = v41;
    a8 = v73;
    MEMORY[0x1D17C092C](v45, -1, -1);
  }
  else
  {

  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46 = v97;
  sub_1CE0B5B10();
  v47._countAndFlagsBits = 0xD000000000000063;
  v47._object = (void *)0x80000001CE0CDD70;
  v48._object = (void *)0x80000001CE0CE100;
  v48._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v47, v48);
  v49 = *(_QWORD *)(a8 + 24);
  ObjectType = swift_getObjectType();
  LOWORD(v101) = 32;
  v51 = *(void (**)(uint64_t *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v49 + 32);
  v52 = a8;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64168);
  v54 = sub_1CDFB0260(&qword_1EFA64170, &qword_1EFA64168, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8]);
  v55 = sub_1CE0A5698();
  v56 = v81;
  v74 = v22;
  v51(&v101, v46, v22, v53, MEMORY[0x1E0D95C38], MEMORY[0x1E0D95C40], v54, v55, ObjectType, v49);
  v58 = v91;
  v57 = v92;
  v59 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v91, v76, v94);
  v60 = (*(unsigned __int8 *)(v57 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  v61 = swift_allocObject();
  v62 = v75;
  *(_QWORD *)(v61 + 16) = v75;
  *(_QWORD *)(v61 + 24) = v52;
  v63 = v78;
  *(_QWORD *)(v61 + 32) = v77;
  *(_QWORD *)(v61 + 40) = v63;
  *(_BYTE *)(v61 + 48) = v79 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v61 + v60, v58, v59);
  v64 = v82;
  v65 = v95;
  v66 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v95, v56, v83);
  v67 = (*(unsigned __int8 *)(v64 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v68 = (v93 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  v69 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v69 + v67, v65, v66);
  v70 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))(v69 + v68);
  *v70 = sub_1CE0A5A6C;
  v70[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))v61;
  v71 = v62;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v56, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v80 + 8))(v97, v74);
}

uint64_t sub_1CE0A4450@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  void *v32;
  id v33;
  int v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (**v48)(uint64_t);
  uint64_t v49;
  char *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a3;
  v55 = a7;
  v51 = a6;
  v52 = a4;
  v53 = a5;
  v58 = a2;
  v60 = a8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E550);
  v59 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v56 = v11;
  v57 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B3D10();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v49 - v25;
  sub_1CDFE3720(*a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1CE01B1A0((uint64_t)v16);
    if (qword_1ED8EF698[0] != -1)
      swift_once();
    v27 = sub_1CE0B6080();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED8EF680);
    v28 = sub_1CE0B6068();
    v29 = sub_1CE0B671C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1CDFAA000, v28, v29, "Fallback - no close match found", v30, 2u);
      MEMORY[0x1D17C092C](v30, -1, -1);
    }

    v31 = swift_allocObject();
    v32 = v58;
    *(_QWORD *)(v31 + 16) = v58;
    v33 = v32;
    return sub_1CE0B5C0C();
  }
  else
  {
    v35 = v51 & 1;
    v58 = (void *)v9;
    v36 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    v36(v26, v16, v17);
    v50 = v13;
    AssetClient.fetchImageData(remoteURL:priority:expirationPolicy:)((uint64_t)v26, v52, v53, v35, (uint64_t)v13);
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v37(v24, v55, v17);
    v37(v21, (uint64_t)v26, v17);
    v38 = *(unsigned __int8 *)(v18 + 80);
    v39 = (v38 + 16) & ~v38;
    v40 = (v19 + v38 + v39) & ~v38;
    v41 = swift_allocObject();
    v36((char *)(v41 + v39), v24, v17);
    v36((char *)(v41 + v40), v21, v17);
    v43 = v58;
    v42 = v59;
    v44 = v57;
    (*(void (**)(char *, char *, void *))(v59 + 16))(v57, v50, v58);
    v45 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    v46 = (v56 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = swift_allocObject();
    (*(void (**)(unint64_t, char *, void *))(v42 + 32))(v47 + v45, v44, v43);
    v48 = (void (**)(uint64_t))(v47 + v46);
    *v48 = sub_1CE0A5B68;
    v48[1] = (void (*)(uint64_t))v41;
    sub_1CE0B5C00();
    (*(void (**)(char *, void *))(v42 + 8))(v50, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v26, v17);
  }
}

void sub_1CE0A4834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1CE0B3D10();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - v11;
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    if (qword_1ED8EF698[0] != -1)
      swift_once();
    v13 = sub_1CE0B6080();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED8EF680);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v14(v12, a2, v6);
    v14(v10, a3, v6);
    v15 = sub_1CE0B6068();
    v16 = sub_1CE0B6734();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v27 = v18;
      *(_DWORD *)v17 = 141558786;
      v28 = 1752392040;
      v29 = v18;
      sub_1CE0B68F0();
      *(_WORD *)(v17 + 12) = 2080;
      v19 = sub_1CE0B3CE0();
      v28 = sub_1CDFC7270(v19, v20, &v29);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v21 = *(void (**)(char *, uint64_t))(v7 + 8);
      v21(v12, v6);
      *(_WORD *)(v17 + 22) = 2160;
      v28 = 1752392040;
      sub_1CE0B68F0();
      *(_WORD *)(v17 + 32) = 2080;
      v22 = sub_1CE0B3CE0();
      v28 = sub_1CDFC7270(v22, v23, &v29);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      v21(v10, v6);
      _os_log_impl(&dword_1CDFAA000, v15, v16, "Fallback - close match for %{mask.hash}s found: %{mask.hash}s", (uint8_t *)v17, 0x2Au);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v24, -1, -1);
      MEMORY[0x1D17C092C](v17, -1, -1);
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t))(v7 + 8);
      v25(v12, v6);
      v25(v10, v6);
    }

  }
}

uint64_t sub_1CE0A4B00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = sub_1CE0B3D10();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B43DC();
  v7 = sub_1CE0B3D1C();
  if (v1)
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10 = v7;
  v11 = v8;
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v10;
  a1[1] = v11;
  return result;
}

uint64_t AssetClient.fetchPersistableKeys(for:workoutIdentifier:userIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;

  v22 = a3;
  v23 = a2;
  v21 = a1;
  v27 = a4;
  v20 = sub_1CE0B3D10();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B3DF4();
  MEMORY[0x1E0C80A78](v7);
  v24 = sub_1CE0B5234();
  v26 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B629C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CE0B629C();
  sub_1CE0B3DE8();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v21, v20);
  sub_1CE0B5228();
  v10 = *(_QWORD *)(v25 + 24);
  ObjectType = swift_getObjectType();
  v28 = 15;
  v12 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 32);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA641A8);
  v14 = sub_1CDFC889C(&qword_1EFA641B0, &qword_1EFA641A8, MEMORY[0x1E0D90A98]);
  v15 = sub_1CE0A593C();
  v18 = ObjectType;
  v16 = v24;
  v12(&v28, v9, v24, v13, MEMORY[0x1E0D93D78], MEMORY[0x1E0D93D80], v14, v15, v18, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v16);
}

uint64_t sub_1CE0A4DE8()
{
  return AssetClient.deleteAllAssets()();
}

uint64_t sub_1CE0A4E08(uint64_t a1, unint64_t a2)
{
  return AssetClient.requestAssetBundleOnCurrentDevice(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0A4E28(uint64_t a1, unint64_t a2)
{
  return AssetClient.requestAssetBundleOnActivePairedDevice(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0A4E48(uint64_t a1, uint64_t a2)
{
  return AssetClient.pauseAssetBundleOnCurrentDevice(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0A4E68(uint64_t a1, uint64_t a2)
{
  return AssetClient.pauseAssetBundleOnActivePairedDevice(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0A4E88(uint64_t a1, uint64_t a2)
{
  return AssetClient.cancelAssetRequest(identifier:)(a1, a2);
}

uint64_t sub_1CE0A4EA8(uint64_t a1, unint64_t a2)
{
  return AssetClient.cancelAssetBundleOnCurrentDevice(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0A4EC8(uint64_t a1, unint64_t a2)
{
  return AssetClient.cancelAssetBundleOnActivePairedDevice(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0A4EE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return AssetClient.failAssetEntry(for:)(a1, a2);
}

uint64_t sub_1CE0A4F08()
{
  return AssetClient.loadIncompleteAssetBundles()();
}

uint64_t sub_1CE0A4F28()
{
  return AssetClient.prefetchAssetBundles()();
}

uint64_t sub_1CE0A4F48()
{
  return AssetClient.renewKeys()();
}

uint64_t sub_1CE0A4F68()
{
  return AssetClient.validateAssets()();
}

uint64_t sub_1CE0A4F88()
{
  return AssetClient.queryCompletedAssetBundlesOnCurrentDevice()();
}

uint64_t sub_1CE0A4FA8()
{
  return AssetClient.queryCompletedAssetBundleCountOnCurrentDevice()();
}

uint64_t sub_1CE0A4FC8()
{
  return AssetClient.queryCompletedAssetBundlesOnActivePairedDevice()();
}

uint64_t sub_1CE0A4FE8(uint64_t a1)
{
  return AssetClient.queryAssetBundles(workoutIdentifiers:)(a1);
}

uint64_t sub_1CE0A5008()
{
  return AssetClient.queryAllAssetEntries()();
}

uint64_t sub_1CE0A5028()
{
  return AssetClient.queryAllAssetRequests()();
}

uint64_t sub_1CE0A5048()
{
  return AssetClient.queryAllAssetResumableLoads()();
}

uint64_t sub_1CE0A5068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return AssetClient.insertDemoAssetBundle(_:)(a1, a2);
}

uint64_t sub_1CE0A5088(uint64_t a1)
{
  return AssetClient.filterAssetBundlesOnCurrentDevice(_:)(a1);
}

uint64_t sub_1CE0A50A8(uint64_t a1)
{
  return AssetClient.queryStandardImageBestMatches(for:)(a1);
}

uint64_t sub_1CE0A50C8(uint64_t a1, uint64_t a2)
{
  return AssetClient.evaluateStandardImageURLs(for:)(a1, a2);
}

uint64_t sub_1CE0A50E8(uint64_t a1)
{
  return AssetClient.evaluateStandardImageMatches(for:)(a1);
}

uint64_t sub_1CE0A5108(uint64_t a1)
{
  return AssetClient.queryPreferredStreamingURL(workout:)(a1);
}

uint64_t sub_1CE0A5128(uint64_t a1)
{
  return AssetClient.queryLocalURL(remoteURL:)(a1);
}

uint64_t sub_1CE0A5148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  return AssetClient.fetchLocalURL(type:remoteURL:priority:expirationPolicy:)(a1, a2, a3, a4, a5 & 1, a6);
}

uint64_t sub_1CE0A516C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  return AssetClient.fetchImageData(remoteURL:priority:expirationPolicy:)(a1, a2, a3, a4 & 1, a5);
}

uint64_t sub_1CE0A5190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B6C0B8, (uint64_t)sub_1CE0A5E48);
}

uint64_t sub_1CE0A51AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DC90, (uint64_t)&unk_1E8B6C090, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A51C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DC98, (uint64_t)&unk_1E8B6C068, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A51E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DCA0, (uint64_t)&unk_1E8B6C040, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A5200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DD38, (uint64_t)&unk_1E8B6C018, (uint64_t)sub_1CE0A5E48);
}

uint64_t sub_1CE0A521C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DE08, (uint64_t)&unk_1E8B6BFF0, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A5238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DE40, (uint64_t)&unk_1E8B6BFC8, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A5254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DE48, (uint64_t)&unk_1E8B6BFA0, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A5270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DF28, (uint64_t)&unk_1E8B6BF78, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A528C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5E000, (uint64_t)&unk_1E8B6BF50, (uint64_t)sub_1CE0A5E2C);
}

uint64_t sub_1CE0A52A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DFF0, (uint64_t)&unk_1E8B6BF28, (uint64_t)sub_1CE0A5E2C);
}

_QWORD *sub_1CE0A52C4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v13 = a1;
  v12 = 1;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B4E44();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1CE0A5DC8, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D92948], MEMORY[0x1E0D92950]);
  swift_release();
  v13 = a1;
  v12 = 2;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = sub_1CE0B3F44();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1CE0A5DF8, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D90178], MEMORY[0x1E0D90180]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE0A543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for AssetClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB2314(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE0A54A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA640F8;
  if (!qword_1EFA640F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA640E8);
    v2 = sub_1CDFB1900(&qword_1EFA64100, MEMORY[0x1E0D8FD98], MEMORY[0x1E0D8FD90]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA640F8);
  }
  return result;
}

unint64_t sub_1CE0A5524()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64118;
  if (!qword_1EFA64118)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64108);
    v2 = sub_1CDFB1900(&qword_1EFA64120, (uint64_t (*)(uint64_t))MEMORY[0x1E0D906F8], MEMORY[0x1E0D906F0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64118);
  }
  return result;
}

unint64_t sub_1CE0A55A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64138;
  if (!qword_1EFA64138)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64128);
    v2 = sub_1CDFB1900(&qword_1EFA64140, MEMORY[0x1E0D926C0], MEMORY[0x1E0D926B8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64138);
  }
  return result;
}

unint64_t sub_1CE0A561C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64158;
  if (!qword_1EFA64158)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64148);
    v2 = sub_1CDFB1900(&qword_1EFA64160, MEMORY[0x1E0D91B10], MEMORY[0x1E0D91B08]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64158);
  }
  return result;
}

unint64_t sub_1CE0A5698()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64178;
  if (!qword_1EFA64178)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64168);
    v2 = sub_1CDFB1900(&qword_1EFA64180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0D8FBB0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64178);
  }
  return result;
}

unint64_t sub_1CE0A5714()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64198;
  if (!qword_1EFA64198)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64188);
    v2 = sub_1CDFB1900(&qword_1EFA64180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0D8FBB0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64198);
  }
  return result;
}

uint64_t sub_1CE0A5790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE0A57D4(uint64_t a1)
{
  return sub_1CE0A3CF8(a1);
}

uint64_t sub_1CE0A57DC()
{
  return objectdestroy_5Tm(&qword_1EFA5E558);
}

uint64_t sub_1CE0A57E8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5E558, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1DDC);
}

uint64_t sub_1CE0A57FC()
{
  return objectdestroy_5Tm(&qword_1EFA5E558);
}

uint64_t sub_1CE0A5808(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5E558, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1DC0);
}

uint64_t sub_1CE0A581C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B3D10();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0A58A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B3D10() - 8) + 80);
  return sub_1CE0A3DD8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_DWORD *)(v2 + 32), *(_DWORD *)(v2 + 36), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a2, *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(_BYTE *)(v2 + 80), v2 + ((v5 + 81) & ~v5));
}

uint64_t sub_1CE0A591C()
{
  return objectdestroy_5Tm(&qword_1EFA5E550);
}

uint64_t sub_1CE0A5928(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5E550, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE05DF88);
}

unint64_t sub_1CE0A593C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA641B8;
  if (!qword_1EFA641B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA641A8);
    v2 = sub_1CDFB1900(&qword_1EFA641C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90AB0], MEMORY[0x1E0D90AA8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA641B8);
  }
  return result;
}

uint64_t method lookup function for AssetClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssetClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE0A59CC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CE0A59F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B3D10();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0A5A6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B3D10() - 8) + 80);
  return sub_1CE0A4450(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), v2 + ((v5 + 49) & ~v5), a2);
}

uint64_t sub_1CE0A5AC4()
{
  return objectdestroy_5Tm(&qword_1EFA5E548);
}

uint64_t sub_1CE0A5AD0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5E548, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1DF8);
}

uint64_t sub_1CE0A5AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v1 = sub_1CE0B3D10();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v3 + v4) & ~v3;
  v6 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v6(v0 + v4, v1);
  v6(v0 + v5, v1);
  return swift_deallocObject();
}

void sub_1CE0A5B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(sub_1CE0B3D10() - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  sub_1CE0A4834(a1, v1 + ((v4 + 16) & ~v4), v1 + ((*(_QWORD *)(v3 + 64) + v4 + ((v4 + 16) & ~v4)) & ~v4));
}

uint64_t sub_1CE0A5BB8()
{
  return objectdestroy_5Tm(&qword_1EFA5E550);
}

uint64_t sub_1CE0A5BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E550) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFF1B24(a1, a2, v2 + v6, *v7, v7[1], &qword_1EFA5E550, (uint64_t)&unk_1E8B6BE88, (uint64_t)sub_1CE0A5C4C);
}

uint64_t sub_1CE0A5C4C(__int128 *a1)
{
  uint64_t v1;
  void (*v2)(__int128 *);
  uint64_t (*v3)(__int128 *);
  char v4;
  __int128 v6;
  char v7;

  v2 = *(void (**)(__int128 *))(v1 + 16);
  v3 = *(uint64_t (**)(__int128 *))(v1 + 32);
  v4 = *((_BYTE *)a1 + 16);
  v6 = *a1;
  v7 = v4;
  v2(&v6);
  return v3(&v6);
}

uint64_t sub_1CE0A5CA8@<X0>(uint64_t *a1@<X8>)
{
  sub_1CE0B43E8();
  return sub_1CE0A4B00(a1);
}

uint64_t objectdestroy_37Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1CE0B43E8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0A5D54()
{
  sub_1CE0B43E8();
  return sub_1CE0B43DC();
}

uint64_t sub_1CE0A5DA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE0A5DC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0A1EB0(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for AssetBundleProgressUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92958], (uint64_t)&protocol witness table for AssetBundleProgressUpdated);
}

uint64_t sub_1CE0A5DF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0A1EB0(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for AssetBundleUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90190], (uint64_t)&protocol witness table for AssetBundleUpdated);
}

uint64_t sub_1CE0A5E58(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  v3 = *(uint64_t (**)(uint64_t))(v1 + 32);
  (*(void (**)(void))(v1 + 16))();
  return v3(a1);
}

uint64_t sub_1CE0A5E9C(uint64_t *a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t (*v3)(uint64_t *);
  char v4;
  uint64_t v6;
  char v7;

  v2 = *(void (**)(uint64_t *))(v1 + 16);
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v4 = *((_BYTE *)a1 + 8);
  v6 = *a1;
  v7 = v4;
  v2(&v6);
  return v3(&v6);
}

uint64_t ActivityTracer.trace<A>(_:dso:telemetryEnabled:promise:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, void (*a6)(uint64_t)@<X5>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  void *v21;
  int v22;

  v22 = a5;
  v21 = a4;
  v14 = sub_1CE0B5C6C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v20 - v17;
  a6(v16);
  ActivityTracer.trace<A>(_:dso:telemetryEnabled:promise:)(a1, a2, a3, v21, v22, (uint64_t)v18, a7, a8);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

Swift::Void __swiftcall ActivityTracing.endTrace()()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1CE0A5FF0()
{
  uint64_t v0;

  v0 = sub_1CE0B6080();
  __swift_allocate_value_buffer(v0, qword_1ED8F1EE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1EE0);
  return sub_1CE0B6074();
}

uint64_t ActivityTracer.trace<A>(_:dso:telemetryEnabled:block:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 96) = a8;
  *(_QWORD *)(v9 + 104) = v8;
  *(_QWORD *)(v9 + 80) = a5;
  *(_QWORD *)(v9 + 88) = a7;
  *(_BYTE *)(v9 + 129) = a6;
  *(_BYTE *)(v9 + 128) = a4;
  *(_QWORD *)(v9 + 64) = a2;
  *(_QWORD *)(v9 + 72) = a3;
  *(_QWORD *)(v9 + 56) = a1;
  return swift_task_switch();
}

uint64_t sub_1CE0A6090()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = *(int **)(v0 + 88);
  ActivityTracer.beginTrace(_:dso:telemetryEnabled:)(*(char **)(v0 + 64), *(_QWORD *)(v0 + 72), *(unsigned __int8 *)(v0 + 128), *(void **)(v0 + 80), *(unsigned __int8 *)(v0 + 129), (void (**)(void *))(v0 + 16));
  v4 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v2;
  *v2 = v0;
  v2[1] = sub_1CE0A610C;
  return v4(*(_QWORD *)(v0 + 56));
}

uint64_t sub_1CE0A610C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0A6170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 8))(0, v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0A61D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v2);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 8))(0, v2, v3);
  swift_willThrow();
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v1, v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t ActivityTracer.trace<A>(_:dso:telemetryEnabled:promise:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;

  v9 = v8;
  v64 = a7;
  v65 = a6;
  LODWORD(v59) = a5;
  v68 = a8;
  v66 = sub_1CE0B5C6C();
  v69 = *(_QWORD *)(v66 - 8);
  MEMORY[0x1E0C80A78](v66);
  v73 = (char *)&v53 - v14;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v67 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CE0B3DF4();
  v61 = *(_QWORD *)(v16 - 8);
  v62 = *(_QWORD *)(v61 + 64);
  v63 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v60 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v58 = (char *)&v53 - v19;
  v20 = sub_1CE0B6020();
  v54 = *(_QWORD *)(v20 - 8);
  v21 = v54;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1CE0B5FFC();
  v56 = *(_QWORD *)(v24 - 8);
  v57 = v24;
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v71 = a1;
  v27 = a2;
  v70 = a3;
  v28 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v9;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v30(v23, v29, v20);
  type metadata accessor for Signpost();
  v31 = swift_allocObject();
  v32 = v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v32 = a1;
  *(_QWORD *)(v32 + 8) = v27;
  v53 = v27;
  *(_BYTE *)(v32 + 16) = a3;
  v33 = v56;
  v34 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v26, v57);
  *(_BYTE *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v59;
  v30((char *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v23, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v35 = swift_allocObject();
  *(_DWORD *)(v35 + 24) = 0;
  *(_QWORD *)(v35 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v20);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v34);
  *(_QWORD *)(v31 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v35;
  v75 = v28;
  v36 = sub_1CE0B6290();
  v59 = v36;
  v38 = v37;
  v39 = v58;
  sub_1CE0B3DDC();
  v40 = swift_allocObject();
  v55 = v28;
  *(_QWORD *)(v40 + 16) = v28;
  *(_QWORD *)(v40 + 24) = v31;
  *(_QWORD *)(v40 + 32) = v36;
  *(_QWORD *)(v40 + 40) = v38;
  v57 = v38;
  *(_QWORD *)(v40 + 48) = v71;
  *(_QWORD *)(v40 + 56) = v27;
  *(_BYTE *)(v40 + 64) = v70;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1CE0B5C00();
  v41 = v64;
  sub_1CE0B5C30();
  v42 = v60;
  v43 = v61;
  v44 = v63;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v60, v39, v63);
  v45 = (*(unsigned __int8 *)(v43 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v46 = (v62 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = swift_allocObject();
  v48 = v59;
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v48;
  v49 = v71;
  *(_QWORD *)(v47 + 32) = v57;
  *(_QWORD *)(v47 + 40) = v49;
  *(_QWORD *)(v47 + 48) = v53;
  *(_BYTE *)(v47 + 56) = v70;
  (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v47 + v45, v42, v44);
  *(_QWORD *)(v47 + v46) = v31;
  *(_QWORD *)(v47 + ((v46 + 15) & 0xFFFFFFFFFFFFFFF8)) = v55;
  swift_retain();
  swift_retain();
  v50 = v66;
  v51 = v73;
  sub_1CE0B5C24();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v51, v50);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v74);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v44);
  return swift_release();
}

uint64_t sub_1CE0A6760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B3DF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CE0A6800(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  os_unfair_lock_s *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  uint64_t *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  char v26;
  void *v27;
  char v28;

  v10 = *(os_unfair_lock_s **)(a3 + 40);
  v11 = (uint64_t)&v10[4];
  v12 = v10 + 11;
  os_unfair_lock_lock(v10 + 11);
  sub_1CDFBEB38(v11);
  os_unfair_lock_unlock(v12);
  v13 = *(os_unfair_lock_s **)(a4 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  v14 = (uint64_t *)&v13[4];
  v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1CDFBDBCC(v14, a4);
  os_unfair_lock_unlock(v15);
  if (qword_1ED8F0980 != -1)
    swift_once();
  v16 = sub_1CE0B6080();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED8F1EE0);
  swift_bridgeObjectRetain_n();
  v17 = sub_1CE0B6068();
  v18 = sub_1CE0B6734();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v27 = (void *)v20;
    *(_DWORD *)v19 = 136446466;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(a5, a6, (uint64_t *)&v27);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2082;
    v21 = sub_1CE0B6A1C();
    v25 = sub_1CDFC7270(v21, v22, (uint64_t *)&v27);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v17, v18, "[%{public}s] %{public}s begin", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v20, -1, -1);
    MEMORY[0x1D17C092C](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  sub_1CE0B6D94();
  v23 = v27;
  v24 = v28;
  v25 = (uint64_t)v27;
  v26 = v28;
  a1(&v25);
  sub_1CDFC2DF4(v23, v24);
}

void sub_1CE0A6ABC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  id v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  os_unfair_lock_s *v59;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  os_unfair_lock_s *v62;
  uint64_t *v63;
  os_unfair_lock_s *v64;
  uint64_t v65;
  uint64_t v66;
  os_log_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[2];

  v72 = a6;
  v70 = a4;
  v71 = a5;
  v69 = a2;
  v74 = a8;
  v75 = a9;
  v12 = sub_1CE0B3DF4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v65 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v65 - v19;
  v68 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v21 = sub_1CE0B6DA0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (void **)((char *)&v65 - v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)&v65 - v23, a1, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v24;
    if (qword_1ED8F0980 != -1)
      swift_once();
    v26 = sub_1CE0B6080();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a7, v12);
    swift_bridgeObjectRetain();
    v27 = v25;
    swift_bridgeObjectRetain();
    v28 = v25;
    v29 = sub_1CE0B6068();
    v30 = sub_1CE0B671C();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      LODWORD(v67) = v31;
      v33 = v32;
      v66 = swift_slowAlloc();
      v77[0] = v66;
      *(_DWORD *)v33 = 136446978;
      swift_bridgeObjectRetain();
      v76 = sub_1CDFC7270(v69, a3, v77);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 12) = 2082;
      v34 = sub_1CE0B6A1C();
      v76 = sub_1CDFC7270(v34, v35, v77);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 22) = 2048;
      v36 = v73;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v38 = v37;
      v39 = *(void (**)(char *, uint64_t))(v13 + 8);
      v39(v36, v12);
      v76 = v38;
      sub_1CE0B68F0();
      v39(v16, v12);
      *(_WORD *)(v33 + 32) = 2082;
      v76 = (uint64_t)v25;
      v40 = v25;
      v41 = sub_1CE0B6290();
      v76 = sub_1CDFC7270(v41, v42, v77);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v29, (os_log_type_t)v67, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v33, 0x2Au);
      v43 = v66;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v43, -1, -1);
      MEMORY[0x1D17C092C](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);

    }
  }
  else
  {
    if (qword_1ED8F0980 != -1)
      swift_once();
    v44 = sub_1CE0B6080();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED8F1EE0);
    v45 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v20, a7, v12);
    swift_bridgeObjectRetain_n();
    v46 = sub_1CE0B6068();
    v47 = sub_1CE0B6734();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v77[0] = v68;
      *(_DWORD *)v49 = 136446722;
      v67 = v46;
      swift_bridgeObjectRetain();
      v76 = sub_1CDFC7270(v69, a3, v77);
      v69 = v45;
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v49 + 12) = 2082;
      v50 = sub_1CE0B6A1C();
      v76 = sub_1CDFC7270(v50, v51, v77);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 22) = 2048;
      v52 = v73;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v54 = v53;
      v72 = v48;
      v55 = *(void (**)(char *, uint64_t))(v69 + 8);
      v55(v52, v12);
      v76 = v54;
      sub_1CE0B68F0();
      v55(v20, v12);
      v56 = v67;
      _os_log_impl(&dword_1CDFAA000, v67, (os_log_type_t)v72, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v49, 0x20u);
      v57 = v68;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v57, -1, -1);
      MEMORY[0x1D17C092C](v49, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v20, v12);

    }
    (*(void (**)(void **, uint64_t))(v22 + 8))(v24, v21);
  }
  v58 = v74;
  v59 = *(os_unfair_lock_s **)(v74 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  v60 = v59 + 4;
  v61 = v59 + 6;
  os_unfair_lock_lock(v59 + 6);
  sub_1CDFBE684(v60, v58);
  os_unfair_lock_unlock(v61);
  v62 = *(os_unfair_lock_s **)(v75 + 40);
  v63 = (uint64_t *)&v62[4];
  v64 = v62 + 11;
  os_unfair_lock_lock(v62 + 11);
  sub_1CDFBE5F8(v63);
  os_unfair_lock_unlock(v64);
}

uint64_t sub_1CE0A7188()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE0A71BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B3DF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CE0A725C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1CE0B3DF4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1CE0A6ABC(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t dispatch thunk of ActivityTracing.endTrace(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for ActivityTracer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t assignWithCopy for ActivityTracer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ActivityTracer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ActivityTracer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityTracer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A73FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ActivityTracer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A7444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1CE0A7484()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B6020();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ActivityTracer.Trace(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ActivityTracer.Trace(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ActivityTracer.Trace(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityTracer.Trace(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityTracer.Trace(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityTracer.Trace()
{
  return &type metadata for ActivityTracer.Trace;
}

SeymourClient::StorefrontLanguageUpdated __swiftcall StorefrontLanguageUpdated.init(languageCode:)(SeymourClient::StorefrontLanguageUpdated languageCode)
{
  SeymourClient::StorefrontLanguageUpdated *v1;

  *v1 = languageCode;
  return languageCode;
}

uint64_t StorefrontLanguageUpdated.languageCode.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static StorefrontLanguageUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t RemoteDisplayConnection.applyingTimestampOffset(_:)()
{
  sub_1CE0B536C();
  return sub_1CE0B5378();
}

uint64_t sub_1CE0A76A4()
{
  sub_1CE0B536C();
  return sub_1CE0B5378();
}

uint64_t FetchedGatedResource.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FetchedGatedResource.init(logger:)(a1);
  return v2;
}

char *FetchedGatedResource.init(logger:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = v1;
  v4 = *(_QWORD *)v1;
  v5 = sub_1CE0B6080();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v9(&v2[qword_1EFA6C2B0], a1, v5);
  v17[0] = 0;
  v17[1] = 0;
  v10 = *(_QWORD *)(v4 + 80);
  type metadata accessor for FetchedGatedResource.State(0, v10, v11, v12);
  *(_QWORD *)&v2[qword_1EFA6C2B8] = sub_1CDFF01F8();
  type metadata accessor for GatedResource(0, v10, v13, v14);
  v9(v8, a1, v5);
  v15 = GatedResource.__allocating_init(logger:)((uint64_t)v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  *(_QWORD *)&v2[qword_1EFA6C2C0] = v15;
  return v2;
}

uint64_t FetchedGatedResource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  FetchedGatedResource.deactivate()();
  v1 = v0 + qword_1EFA6C2B0;
  v2 = sub_1CE0B6080();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

Swift::Void __swiftcall FetchedGatedResource.deactivate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + qword_1EFA6C2B8);
  type metadata accessor for FetchedGatedResource.State(0, *(_QWORD *)(*(_QWORD *)v2 + 80), v0, v1);
  sub_1CDFEFEA0((void (*)(uint64_t))sub_1CE0A81FC, v2, v3);
}

uint64_t FetchedGatedResource.__deallocating_deinit()
{
  FetchedGatedResource.deinit();
  return swift_deallocClassInstance();
}

void sub_1CE0A7934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  v5 = *v4;
  v6 = *(uint64_t *)((char *)v4 + qword_1EFA6C2B8);
  v7[3] = a1;
  type metadata accessor for FetchedGatedResource.State(0, *(_QWORD *)(v5 + 80), a3, a4);
  sub_1CDFEFEA0((void (*)(uint64_t))sub_1CE0A85D4, (uint64_t)v7, v6);
}

uint64_t sub_1CE0A79A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a1;
  v9[5] = a2;
  v9[6] = v2;
  swift_retain();
  swift_retain();
  sub_1CE03AF58((uint64_t)v7, (uint64_t)&unk_1EFA643F8, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_1CE0A7A80(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);

  v6[2] = a6;
  v8 = *(_QWORD *)(*(_QWORD *)a6 + 80);
  v6[3] = v8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v9 = sub_1CE0B6DA0();
  v6[4] = v9;
  v6[5] = *(_QWORD *)(v9 - 8);
  v6[6] = swift_task_alloc();
  v6[7] = *(_QWORD *)(v8 - 8);
  v10 = swift_task_alloc();
  v6[8] = v10;
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v6[9] = v11;
  *v11 = v6;
  v11[1] = sub_1CE0A7B5C;
  return v13(v10);
}

uint64_t sub_1CE0A7B5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0A7BC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v6);
  swift_storeEnumTagMultiPayload();
  sub_1CE0A7934(v3, v7, v8, v9);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0A7C70()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(void **)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD **)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 32);
  *v2 = v1;
  swift_storeEnumTagMultiPayload();
  v5 = v1;
  sub_1CE0A7934((uint64_t)v2, v6, v7, v8);

  (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void FetchedGatedResource.activate(fetching:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[6];

  v5 = *v4;
  v6 = *(uint64_t *)((char *)v4 + qword_1EFA6C2B8);
  v7[3] = a1;
  v7[4] = a2;
  type metadata accessor for FetchedGatedResource.State(0, *(_QWORD *)(v5 + 80), a3, a4);
  sub_1CDFEFEA0((void (*)(uint64_t))sub_1CE0A8214, (uint64_t)v7, v6);
}

uint64_t sub_1CE0A7D7C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  Swift::String v7;
  Swift::String v8;
  char v9;

  v6 = (_QWORD *)result;
  if (*(_QWORD *)result)
  {
    if (*(_QWORD *)result != 2)
      return result;
    GatedResource.reset()();
  }
  v7._countAndFlagsBits = 0xD000000000000077;
  v7._object = (void *)0x80000001CE0CE1B0;
  v8._object = (void *)0x80000001CE0CE230;
  v8._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v7, v8);
  *v6 = a3;
  v6[1] = a4;
  swift_retain();
  result = GatedResource.queueCount.getter();
  if ((v9 & 1) == 0 && result >= 1)
  {
    swift_release();
    *(_OWORD *)v6 = xmmword_1CE0C4E30;
    return sub_1CE0A79A4(a3, a4);
  }
  return result;
}

unint64_t sub_1CE0A7E74(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t result;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v2 = sub_1CE0B6DA0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v11 - v4);
  result = *a1;
  if (*a1 >= 2)
  {
    if (*a1 == 2)
      return result;
    sub_1CE0A850C(result);
  }
  v7._object = (void *)0x80000001CE0CE1B0;
  v7._countAndFlagsBits = 0xD000000000000077;
  v8._countAndFlagsBits = 0x6176697463616564;
  v8._object = (void *)0xEC00000029286574;
  Logger.trace(file:function:)(v7, v8);
  *(_OWORD *)a1 = xmmword_1CE0C4E40;
  sub_1CDFF0BCC();
  v9 = swift_allocError();
  *v10 = 1;
  *v5 = v9;
  swift_storeEnumTagMultiPayload();
  GatedResource.release(with:)((uint64_t)v5);
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
}

void FetchedGatedResource.query()(uint64_t a1@<X8>)
{
  GatedResource.query()(a1);
}

uint64_t FetchedGatedResource.fetch()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_1CE0A801C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = v4[3];
  v6 = *(_QWORD *)(v5 + qword_1EFA6C2B8);
  type metadata accessor for FetchedGatedResource.State(0, *(_QWORD *)(v4[4] + 80), a3, a4);
  sub_1CDFEFEA0((void (*)(uint64_t))sub_1CE0A8230, v5, v6);
  v7 = (_QWORD *)swift_task_alloc();
  v4[5] = (uint64_t)v7;
  *v7 = v4;
  v7[1] = sub_1CE084404;
  return GatedResource.fetch()(v4[2]);
}

unint64_t *sub_1CE0A80C4(unint64_t *result)
{
  unint64_t v1;
  uint64_t v2;

  v1 = *result;
  if (*result >= 3)
  {
    v2 = result[1];
    *(_OWORD *)result = xmmword_1CE0C4E30;
    sub_1CE0A79A4(v1, v2);
    return (unint64_t *)sub_1CE0A850C(v1);
  }
  return result;
}

void sub_1CE0A8124(uint64_t a1@<X8>)
{
  FetchedGatedResource.query()(a1);
}

uint64_t sub_1CE0A8144(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD3C;
  v5[2] = a1;
  v5[3] = v4;
  v5[4] = *v4;
  return swift_task_switch();
}

void sub_1CE0A81B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  FetchedGatedResource.activate(fetching:)(a1, a2, a3, a4);
}

void sub_1CE0A81D0()
{
  FetchedGatedResource.deactivate()();
}

uint64_t type metadata accessor for FetchedGatedResource.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchedGatedResource.State);
}

unint64_t sub_1CE0A81FC(unint64_t *a1)
{
  return sub_1CE0A7E74(a1);
}

uint64_t sub_1CE0A8214(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CE0A7D7C(a1, v1[2], v1[3], v1[4]);
}

unint64_t *sub_1CE0A8230(unint64_t *a1)
{
  return sub_1CE0A80C4(a1);
}

uint64_t sub_1CE0A8248()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B6080();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FetchedGatedResource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FetchedGatedResource);
}

uint64_t method lookup function for FetchedGatedResource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FetchedGatedResource.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *sub_1CE0A82E8(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release();
  return result;
}

uint64_t sub_1CE0A8304(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *sub_1CE0A834C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1CE0A83D8(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_release();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_release();
  return a1;
}

uint64_t sub_1CE0A8440(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t sub_1CE0A849C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

_QWORD *sub_1CE0A84EC(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

unint64_t sub_1CE0A850C(unint64_t result)
{
  if (result >= 3)
    return swift_release();
  return result;
}

uint64_t sub_1CE0A8520()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0A8554(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1CDFACD3C;
  return sub_1CE0A7A80(a1, v4, v5, v6, v7, v8);
}

void sub_1CE0A85D4(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)a1 == 1)
  {
    v2 = *(_QWORD *)(v1 + 24);
    *a1 = xmmword_1CE0C4E40;
    GatedResource.release(with:)(v2);
  }
}

SeymourClient::AssetDevice_optional __swiftcall AssetDevice.init(rawValue:)(Swift::Int rawValue)
{
  SeymourClient::AssetDevice_optional v1;

  if (rawValue == 1)
    v1.value = SeymourClient_AssetDevice_activePaired;
  else
    v1.value = SeymourClient_AssetDevice_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

void *static AssetDevice.allCases.getter()
{
  return &unk_1E8B617B0;
}

uint64_t AssetDevice.rawValue.getter(char a1)
{
  return a1 & 1;
}

unint64_t sub_1CE0A8654()
{
  unint64_t result;

  result = qword_1EFA64400;
  if (!qword_1EFA64400)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for AssetDevice, &type metadata for AssetDevice);
    atomic_store(result, (unint64_t *)&qword_1EFA64400);
  }
  return result;
}

_QWORD *sub_1CE0A8698@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

unint64_t sub_1CE0A86BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA64408;
  if (!qword_1EFA64408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64410);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA64408);
  }
  return result;
}

void sub_1CE0A8708(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E8B617D8;
}

uint64_t storeEnumTagSinglePayload for AssetDevice(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE0A8764 + 4 * byte_1CE0C4EB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE0A8798 + 4 * byte_1CE0C4EB0[v4]))();
}

uint64_t sub_1CE0A8798(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0A87A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE0A87A8);
  return result;
}

uint64_t sub_1CE0A87B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE0A87BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE0A87C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0A87C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AssetDevice()
{
  return &type metadata for AssetDevice;
}

uint64_t dispatch thunk of AnalyticsEvent.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsEvent.payload.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t WatchConnectionRejection.applyingTimestampOffset(_:)()
{
  sub_1CE0B5468();
  return sub_1CE0B5474();
}

uint64_t sub_1CE0A883C()
{
  sub_1CE0B5468();
  return sub_1CE0B5474();
}

uint64_t sub_1CE0A8884(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return MindfulSessionAccumulating.finalize(heartRate:)(a1, a2 & 1, a3, a4);
}

uint64_t MindfulSessionAccumulating.finalize(heartRate:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 24))(a1, a2 & 1);
}

uint64_t MindfulSessionAccumulator.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;

  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = 0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + 24) = v3;
  return v0;
}

uint64_t MindfulSessionAccumulator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_1CDFC9DE4(v0 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state);
  return v0;
}

void MindfulSessionAccumulator.startAccumulating(startDate:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  sub_1CE0A89B4(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

void sub_1CE0A89B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _BYTE v21[24];

  v4 = type metadata accessor for MindfulSessionAccumulator.State(0);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v21[-v8];
  v10 = a1 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state;
  swift_beginAccess();
  sub_1CE0A9DF4(v10, (uint64_t)v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v12 = *(_QWORD *)(v11 - 8);
  LODWORD(a1) = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11);
  sub_1CDFC9DE4((uint64_t)v9);
  if ((_DWORD)a1 == 1)
  {
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v13 = sub_1CE0B6080();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED8F0FD0);
    v14._countAndFlagsBits = 0xD00000000000007ALL;
    v14._object = (void *)0x80000001CE0CE250;
    v15._object = (void *)0x80000001CE0CE360;
    v15._countAndFlagsBits = 0xD00000000000001DLL;
    Logger.trace(file:function:)(v14, v15);
    v16 = sub_1CE0B3DF4();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v7, a2, v16);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    swift_beginAccess();
    sub_1CE0A9E38((uint64_t)v7, v10);
    swift_endAccess();
  }
  else
  {
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v17 = sub_1CE0B6080();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED8F0FD0);
    v18 = sub_1CE0B6068();
    v19 = sub_1CE0B671C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1CDFAA000, v18, v19, "Repeat calls to start accumulating, ignoring", v20, 2u);
      MEMORY[0x1D17C092C](v20, -1, -1);
    }

  }
}

void MindfulSessionAccumulator.stopAccumulating(endDate:heartRate:)(char *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  int v6;
  uint64_t v7;

  v6 = a3 & 1;
  v7 = *(_QWORD *)(v3 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1CE0A8C98(v3, a1, a2, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
}

void sub_1CE0A8C98(uint64_t a1, char *a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  Swift::String v35;
  Swift::String v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;

  v50 = a4;
  v58 = a3;
  v52 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  MEMORY[0x1E0C80A78](v6);
  v53 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B5324();
  v59 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v55 = (uint64_t)&v46 - v12;
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v46 - v13;
  v14 = type metadata accessor for MindfulSessionAccumulator.State(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v46 - v17;
  v19 = sub_1CE0B3DF4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v46 - v25;
  MEMORY[0x1E0C80A78](v24);
  v61 = (char *)&v46 - v27;
  v60 = a1;
  v28 = a1 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state;
  swift_beginAccess();
  sub_1CE0A9DF4(v28, (uint64_t)v18);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v51 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v18, 1, v29) == 1)
  {
    sub_1CDFC9DE4((uint64_t)v18);
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v30 = sub_1CE0B6080();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED8F0FD0);
    v31 = sub_1CE0B6068();
    v32 = sub_1CE0B671C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1CDFAA000, v31, v32, "Stop accumulating called in incorrect state", v33, 2u);
      MEMORY[0x1D17C092C](v33, -1, -1);
    }

  }
  else
  {
    v48 = v8;
    v49 = v4;
    v50 &= 1u;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v61, v18, v19);
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v34 = sub_1CE0B6080();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED8F0FD0);
    v35._countAndFlagsBits = 0xD00000000000007ALL;
    v35._object = (void *)0x80000001CE0CE250;
    v36._object = (void *)0x80000001CE0CE330;
    v36._countAndFlagsBits = 0xD000000000000024;
    Logger.trace(file:function:)(v35, v36);
    sub_1CE0B629C();
    v47 = v20;
    v37 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    v37(v26, v61, v19);
    v37(v23, v52, v19);
    v38 = sub_1CE0B4A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v53, 1, 1, v38);
    v39 = v54;
    sub_1CE0B5318();
    v40 = v59;
    v41 = v56;
    v42 = v48;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v39, v48);
    swift_beginAccess();
    v43 = v55;
    sub_1CE096674(v55, v41);
    v44 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v44(v43, v42);
    swift_endAccess();
    v45 = (uint64_t)v57;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v57, 1, 1, v29);
    swift_beginAccess();
    sub_1CE0A9E38(v45, v28);
    swift_endAccess();
    v44((uint64_t)v39, v42);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v61, v19);
  }
}

uint64_t MindfulSessionAccumulator.finalize(heartRate:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_1CE0B3DF4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v10 = a2 & 1;
  v11 = sub_1CE0B6080();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED8F0FD0);
  v12._countAndFlagsBits = 0xD00000000000007ALL;
  v12._object = (void *)0x80000001CE0CE250;
  v13._object = (void *)0x80000001CE0CE2D0;
  v13._countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v12, v13);
  sub_1CE0B3DE8();
  v14 = *(_QWORD *)(v3 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  sub_1CE0A92C8(v3, v9, a1, v10, &v18);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  v15 = v18;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v15;
}

uint64_t sub_1CE0A92C8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  _QWORD v45[3];
  char *v46;
  uint64_t v47;
  int v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  uint64_t v59;

  v58 = a5;
  v48 = a4;
  v53 = a3;
  v50 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B5324();
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v51 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v52 = (uint64_t)v45 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v45 - v13;
  v15 = sub_1CE0B3DF4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)v45 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v45 - v23;
  v25 = type metadata accessor for MindfulSessionAccumulator.State(0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v57 = (char *)v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)v45 - v28;
  v59 = a1;
  v30 = a1 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state;
  swift_beginAccess();
  sub_1CE0A9DF4(v30, (uint64_t)v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v56 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v29, 1, v31) != 1)
  {
    v48 &= 1u;
    v32 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v46 = v24;
    v47 = v16;
    v32(v24, v29, v15);
    v45[2] = sub_1CE0B629C();
    v45[1] = v33;
    v34 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v34(v22, v24, v15);
    v34(v19, v50, v15);
    v35 = sub_1CE0B4A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v49, 1, 1, v35);
    sub_1CE0B5318();
    v37 = v54;
    v36 = v55;
    v38 = v51;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v14, v55);
    swift_beginAccess();
    v39 = v52;
    sub_1CE096674(v52, v38);
    v40 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v40(v39, v36);
    swift_endAccess();
    v40((uint64_t)v14, v36);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v15);
  }
  v41 = (uint64_t)v57;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v57, 1, 1, v31);
  swift_beginAccess();
  sub_1CE0A9E38(v41, v30);
  swift_endAccess();
  v42 = v59;
  result = swift_beginAccess();
  v44 = *(_QWORD *)(v42 + 16);
  *(_QWORD *)(v42 + 16) = MEMORY[0x1E0DEE9E8];
  *v58 = v44;
  return result;
}

void sub_1CE0A969C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v4 + 16));
  sub_1CE0A89B4(v3, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
}

void sub_1CE0A96EC(char *a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v6 = a3 & 1;
  v7 = *v3;
  v8 = *(_QWORD *)(v7 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  sub_1CE0A8C98(v7, a1, a2, v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
}

uint64_t sub_1CE0A9754(uint64_t a1, char a2)
{
  return MindfulSessionAccumulator.finalize(heartRate:)(a1, a2 & 1);
}

uint64_t MindfulSessionAccumulating.stopAccumulating(date:heartRate:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 16))(a1, a2, a3 & 1);
}

uint64_t MindfulSessionAccumulating.startAccumulating(date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MindfulSessionAccumulating.startAccumulating(startDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MindfulSessionAccumulating.stopAccumulating(endDate:heartRate:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 16))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of MindfulSessionAccumulating.finalize(heartRate:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 24))(a1, a2 & 1);
}

uint64_t sub_1CE0A97AC()
{
  return type metadata accessor for MindfulSessionAccumulator(0);
}

uint64_t method lookup function for MindfulSessionAccumulator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MindfulSessionAccumulator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t *sub_1CE0A97C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1CE0B3DF4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1CE0A98A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1CE0B3DF4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1CE0A9908(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1CE0B3DF4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1CE0A99BC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1CE0B3DF4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1CE0A9AC0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1CE0B3DF4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1CE0A9AC0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1CE0A9B00(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1CE0B3DF4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1CE0A9BB4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1CE0B3DF4();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1CE0A9AC0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1CE0B3DF4();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1CE0A9CB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A9CC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1CE0A9D14()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0A9D20(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1CE0A9D74(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1CE0A9DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1CE0A9DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MindfulSessionAccumulator.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE0A9E38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MindfulSessionAccumulator.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t CountdownStarted.countdown.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5FA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CountdownStarted.init(countdown:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static CountdownStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CountdownStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CountdownStarted(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5FA8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CountdownStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CountdownStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CountdownStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CountdownStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0AA08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CountdownStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0AA0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5FA8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CountdownStarted()
{
  uint64_t result;

  result = qword_1EFA645E8;
  if (!qword_1EFA645E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0AA150()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5FA8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *SearchClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for SearchClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE0AB2AC(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t SearchClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0AB498);
}

uint64_t type metadata accessor for SearchClient()
{
  return objc_opt_self();
}

uint64_t SearchClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0AB3A8);
}

uint64_t sub_1CE0AA320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for RecentSearchTermsUpdated();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v8 = sub_1CE0B5504();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a1, v8);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v4, v2, &protocol witness table for RecentSearchTermsUpdated, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_1CE0AB740((uint64_t)v4);
  }
  return result;
}

uint64_t SearchClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SearchClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SearchClient.fetchSearchLandingShelfTileDescriptors()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = v0;
  return swift_task_switch();
}

uint64_t sub_1CE0AA494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F0EB8);
  v3._countAndFlagsBits = 0xD000000000000064;
  v3._object = (void *)0x80000001CE0CE380;
  v4._object = (void *)0x80000001CE0CE3F0;
  v4._countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 332;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 56) + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64628);
  v9 = sub_1CE0AB504();
  v10 = sub_1CE0AB560();
  *v7 = v0;
  v7[1] = sub_1CE058EC4;
  return v12(v0 + 16, v0 + 48, v8, v9, v10, ObjectType, v5);
}

uint64_t SearchClient.fetchSearchResults(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_1CE0AA5F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F0EB8);
  v3._countAndFlagsBits = 0xD000000000000064;
  v3._object = (void *)0x80000001CE0CE380;
  v4._object = (void *)0x80000001CE0CE420;
  v4._countAndFlagsBits = 0xD00000000000001CLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 56) = 327;
  v7 = **(int **)(v5 + 64) + *(_QWORD *)(v5 + 64);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v6;
  sub_1CE0B449C();
  sub_1CE0B48B0();
  *v6 = v0;
  v6[1] = sub_1CDFAC82C;
  __asm { BR              X8 }
}

uint64_t SearchClient.fetchSearchSuggestions(term:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[6] = a3;
  v4[7] = v3;
  v4[4] = a1;
  v4[5] = a2;
  return swift_task_switch();
}

void sub_1CE0AA764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = sub_1CE0B6080();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F0EB8);
  v5._countAndFlagsBits = 0xD000000000000064;
  v5._object = (void *)0x80000001CE0CE380;
  v6._object = (void *)0x80000001CE0CE440;
  v6._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v5, v6);
  v7 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 80) = 331;
  *(_QWORD *)(v0 + 16) = v3;
  *(_QWORD *)(v0 + 24) = v2;
  v9 = **(int **)(v7 + 64) + *(_QWORD *)(v7 + 64);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v8;
  sub_1CE0B569C();
  *v8 = v0;
  v8[1] = sub_1CE0AA8C4;
  __asm { BR              X8 }
}

uint64_t sub_1CE0AA8C4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE0AA930()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t SearchClient.insertRecentSearchTerm(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE0AA954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F0EB8);
  v3._countAndFlagsBits = 0xD000000000000064;
  v3._object = (void *)0x80000001CE0CE380;
  v4._object = (void *)0x80000001CE0CE460;
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 328;
  v10 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 48)
                                                                                           + *(_QWORD *)(v5 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B4C10();
  *v7 = v0;
  v7[1] = sub_1CDFADC8C;
  return v10(v0 + 48, *(_QWORD *)(v0 + 16), v8, MEMORY[0x1E0D91F38], MEMORY[0x1E0D91F40], ObjectType, v5);
}

uint64_t SearchClient.deleteRecentSearchTerms(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE0AAA98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0EB8);
  v4._countAndFlagsBits = 0xD000000000000064;
  v4._object = (void *)0x80000001CE0CE380;
  v5._object = (void *)0x80000001CE0CE480;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 56) = 329;
  *(_QWORD *)(v0 + 16) = v2;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v6 + 48) + *(_QWORD *)(v6 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64668);
  v10 = sub_1CDFB0260(&qword_1EFA64670, &qword_1EFA64668, MEMORY[0x1E0D91F38], MEMORY[0x1E0D91F40]);
  v11 = sub_1CE0AB5DC();
  *v8 = v0;
  v8[1] = sub_1CDFAC82C;
  return v13(v0 + 56, v0 + 16, v9, v10, v11, ObjectType, v6);
}

uint64_t SearchClient.deleteAllRecentSearchTerms(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE0AAC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0EB8);
  v4._countAndFlagsBits = 0xD000000000000064;
  v4._object = (void *)0x80000001CE0CE380;
  v5._object = (void *)0x80000001CE0CE4A0;
  v5._countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 56) = 333;
  *(_QWORD *)(v0 + 16) = v2;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v6 + 48) + *(_QWORD *)(v6 + 48));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64690);
  v10 = sub_1CDFB0260(&qword_1EFA64698, &qword_1EFA64690, MEMORY[0x1E0D96418], MEMORY[0x1E0D96420]);
  v11 = sub_1CE0AB658();
  *v8 = v0;
  v8[1] = sub_1CE057AEC;
  return v13(v0 + 56, v0 + 16, v9, v10, v11, ObjectType, v6);
}

uint64_t SearchClient.queryRecentSearchTerms(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = v1;
  return swift_task_switch();
}

void sub_1CE0AADA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  if (qword_1ED8F0ED0 != -1)
    swift_once();
  v2 = *(_QWORD *)(v0 + 32);
  v1 = *(_QWORD *)(v0 + 40);
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0EB8);
  v4._countAndFlagsBits = 0xD000000000000064;
  v4._object = (void *)0x80000001CE0CE380;
  v5._object = (void *)0x80000001CE0CE4D0;
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  *(_WORD *)(v0 + 64) = 330;
  *(_QWORD *)(v0 + 24) = v2;
  v8 = **(int **)(v6 + 64) + *(_QWORD *)(v6 + 64);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64690);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64668);
  sub_1CDFB0260(&qword_1EFA64698, &qword_1EFA64690, MEMORY[0x1E0D96418], MEMORY[0x1E0D96420]);
  sub_1CE0AB658();
  sub_1CDFB0260(&qword_1EFA64670, &qword_1EFA64668, MEMORY[0x1E0D91F38], MEMORY[0x1E0D91F40]);
  sub_1CE0AB5DC();
  *v7 = v0;
  v7[1] = sub_1CE0AAF6C;
  __asm { BR              X8 }
}

uint64_t sub_1CE0AAF6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 56) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0AAFD0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *v0;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CE05CCD0;
  v3[3] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE0AB030(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  v7[3] = a2;
  v7[4] = v6;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE0AB0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;

  v8 = *v3;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  v9[6] = a3;
  v9[7] = v8;
  v9[4] = a1;
  v9[5] = a2;
  return swift_task_switch();
}

uint64_t sub_1CE0AB11C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE0AB180(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD3C;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE0AB1E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v5[3] = a1;
  v5[4] = v4;
  return swift_task_switch();
}

uint64_t sub_1CE0AB248(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFE1AFC;
  v5[4] = a1;
  v5[5] = v4;
  return swift_task_switch();
}

_QWORD *sub_1CE0AB2AC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v11 = a1;
  v10 = 49;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B5504();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v10, (uint64_t)sub_1CE0AB738, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D94968], MEMORY[0x1E0D94970]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE0AB3A8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v15 = a1;
  v14 = 49;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B5504();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v14, (uint64_t)sub_1CE0AB738, v11, ObjectType, v12, a7, MEMORY[0x1E0D94968], MEMORY[0x1E0D94970]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE0AB498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for SearchClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CE0AB3A8(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE0AB504()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64630;
  if (!qword_1EFA64630)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64628);
    v2 = MEMORY[0x1E0D92E38];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96820], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64630);
  }
  return result;
}

unint64_t sub_1CE0AB560()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64638;
  if (!qword_1EFA64638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64628);
    v2 = sub_1CDFB1900(&qword_1EFA64640, MEMORY[0x1E0D92E48], MEMORY[0x1E0D92E40]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64638);
  }
  return result;
}

unint64_t sub_1CE0AB5DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64678;
  if (!qword_1EFA64678)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64668);
    v2 = sub_1CDFB1900(&qword_1EFA64680, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], MEMORY[0x1E0D91F48]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64678);
  }
  return result;
}

unint64_t sub_1CE0AB658()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFA646A0;
  if (!qword_1EFA646A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64690);
    v2 = sub_1CE0AB6BC();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA646A0);
  }
  return result;
}

unint64_t sub_1CE0AB6BC()
{
  unint64_t result;

  result = qword_1EFA646A8;
  if (!qword_1EFA646A8)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96428], MEMORY[0x1E0D96440]);
    atomic_store(result, (unint64_t *)&qword_1EFA646A8);
  }
  return result;
}

uint64_t method lookup function for SearchClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SearchClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE0AB714()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE0AB738(uint64_t a1)
{
  return sub_1CE0AA320(a1);
}

uint64_t sub_1CE0AB740(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RecentSearchTermsUpdated();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *AnalyticsEventMonitor.__allocating_init(eventHub:reporter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;

  swift_allocObject();
  v6 = sub_1CDFB7CEC(a1, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

_QWORD *sub_1CE0AB7DC(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v3 = result[8];
    v4 = result[9];
    __swift_project_boxed_opaque_existential_1(result + 5, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t AnalyticsEventMonitor.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return v0;
}

uint64_t method lookup function for AnalyticsEventMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AnalyticsEventMonitor.__allocating_init(eventHub:reporter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1CE0AB8A8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

_QWORD *sub_1CE0AB8CC(uint64_t a1)
{
  return sub_1CE0AB7DC(a1);
}

_QWORD *ArchivedSessionClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for ArchivedSessionClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE0AC470(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t ArchivedSessionClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0AC590);
}

uint64_t sub_1CE0ABA10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v10;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v4 = sub_1CE0B6080();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1870);
    v5._countAndFlagsBits = 0xD000000000000078;
    v5._object = (void *)0x80000001CE0CE560;
    v6._object = (void *)0x80000001CE0CE770;
    v6._countAndFlagsBits = 0xD000000000000032;
    Logger.trace(file:function:)(v5, v6);
    v7 = *(_QWORD *)(v3 + 48);
    ObjectType = swift_getObjectType();
    v10 = v1;
    v9 = *(void (**)(uint64_t *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    v9(&v10, &type metadata for ArchivedSessionsUpdated, &protocol witness table for ArchivedSessionsUpdated, ObjectType, v7);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ArchivedSessionClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ArchivedSessionClient.insertArchivedSession(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000078;
  v4._object = (void *)0x80000001CE0CE560;
  v5._object = (void *)0x80000001CE0CE5E0;
  v5._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 2;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4904();
  return v8(&v11, a1, v9, MEMORY[0x1E0D91458], MEMORY[0x1E0D91460], ObjectType, v6);
}

uint64_t ArchivedSessionClient.deleteAllArchivedSessions()()
{
  return sub_1CE0ABEF0(0xD00000000000001BLL, (void *)0x80000001CE0CE600, 0);
}

uint64_t ArchivedSessionClient.queryAllArchivedSessions()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000078;
  v2._object = (void *)0x80000001CE0CE560;
  v3._object = (void *)0x80000001CE0CE620;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 3;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64848);
  v8 = sub_1CDFB0260(&qword_1EFA64850, &qword_1EFA64848, MEMORY[0x1E0D91458], MEMORY[0x1E0D91460]);
  v9 = sub_1CE0AC5FC();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t ArchivedSessionClient.queryArchivedSession(sessionIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000078;
  v6._object = (void *)0x80000001CE0CE560;
  v7._object = (void *)0x80000001CE0CE640;
  v7._countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 4;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B4904();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D91458], MEMORY[0x1E0D91460], ObjectType, v8);
}

uint64_t ArchivedSessionClient.requireArchivedSessions()()
{
  return sub_1CE0ABEF0(0xD000000000000019, (void *)0x80000001CE0CE670, 8);
}

uint64_t sub_1CE0ABEF0(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0CE560;
  v8._countAndFlagsBits = 0xD000000000000078;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t ArchivedSessionClient.deleteArchivedSession(sessionIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v11[2];
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000078;
  v6._object = (void *)0x80000001CE0CE560;
  v7._object = (void *)0x80000001CE0CE690;
  v7._countAndFlagsBits = 0xD000000000000029;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v12 = 1;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v8);
}

uint64_t ArchivedSessionClient.queryResumableSession(workoutIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._countAndFlagsBits = 0xD000000000000078;
  v6._object = (void *)0x80000001CE0CE560;
  v7._object = (void *)0x80000001CE0CE6E0;
  v7._countAndFlagsBits = 0xD000000000000029;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 5;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B4C28();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D91F88], MEMORY[0x1E0D91F90], ObjectType, v8);
}

uint64_t ArchivedSessionClient.queryResumableSessions(workoutIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000078;
  v4._object = (void *)0x80000001CE0CE560;
  v5._object = (void *)0x80000001CE0CE710;
  v5._countAndFlagsBits = 0xD00000000000002BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 7;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64868);
  v11 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v12 = sub_1CDFB1DD8();
  v13 = sub_1CDFB0260(&qword_1EFA64870, &qword_1EFA64868, MEMORY[0x1E0D91F88], MEMORY[0x1E0D91F90]);
  v14 = sub_1CDFC8640();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t sub_1CE0AC370(uint64_t a1)
{
  return ArchivedSessionClient.insertArchivedSession(_:)(a1);
}

uint64_t sub_1CE0AC390()
{
  return ArchivedSessionClient.deleteAllArchivedSessions()();
}

uint64_t sub_1CE0AC3B0(uint64_t a1, uint64_t a2)
{
  return ArchivedSessionClient.deleteArchivedSession(sessionIdentifier:)(a1, a2);
}

uint64_t sub_1CE0AC3D0()
{
  return ArchivedSessionClient.queryAllArchivedSessions()();
}

uint64_t sub_1CE0AC3F0(uint64_t a1, uint64_t a2)
{
  return ArchivedSessionClient.queryArchivedSession(sessionIdentifier:)(a1, a2);
}

uint64_t sub_1CE0AC410(uint64_t a1, uint64_t a2)
{
  return ArchivedSessionClient.queryResumableSession(workoutIdentifier:)(a1, a2);
}

uint64_t sub_1CE0AC430(uint64_t a1)
{
  return ArchivedSessionClient.queryResumableSessions(workoutIdentifiers:)(a1);
}

uint64_t sub_1CE0AC450()
{
  return ArchivedSessionClient.requireArchivedSessions()();
}

_QWORD *sub_1CE0AC470(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;
  uint64_t v13;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v13 = a1;
  v12 = 0;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v9 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v10 = sub_1CDFB1DD8();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1CE0AC6F0, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, v9, v10);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE0AC590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for ArchivedSessionClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB1CC4(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE0AC5FC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64858;
  if (!qword_1EFA64858)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64848);
    v2 = sub_1CDFB1900(&qword_1EFA64860, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91470], MEMORY[0x1E0D91468]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64858);
  }
  return result;
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.insertArchivedSession(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.deleteAllArchivedSessions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.deleteArchivedSession(sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.queryAllArchivedSessions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.queryArchivedSession(sessionIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.queryResumableSession(workoutIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.queryResumableSessions(workoutIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.requireArchivedSessions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t method lookup function for ArchivedSessionClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ArchivedSessionClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE0AC6CC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE0AC6F0(uint64_t *a1)
{
  return sub_1CE0ABA10(a1);
}

unint64_t Platform.appBundle(for:)(char a1, char a2)
{
  unint64_t v2;

  v2 = 0x6C7070612E6D6F63;
  if (a1 != 2)
    v2 = 0xD00000000000001BLL;
  if (a2 == 2)
    return v2;
  else
    return 0xD000000000000011;
}

uint64_t Platform.supportedFeatures.getter(char a1)
{
  return sub_1CDFEA104((uint64_t)*(&off_1E8B6C6D0 + a1));
}

BOOL static EventDispatchStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t EventDispatchStrategy.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t EventDispatchStrategy.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

unint64_t sub_1CE0AC808()
{
  unint64_t result;

  result = qword_1EFA64938;
  if (!qword_1EFA64938)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for EventDispatchStrategy, &type metadata for EventDispatchStrategy);
    atomic_store(result, (unint64_t *)&qword_1EFA64938);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for EventDispatchStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE0AC898 + 4 * byte_1CE0C51E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE0AC8CC + 4 * byte_1CE0C51E0[v4]))();
}

uint64_t sub_1CE0AC8CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0AC8D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE0AC8DCLL);
  return result;
}

uint64_t sub_1CE0AC8E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE0AC8F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE0AC8F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0AC8FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t MeditationUpdated.meditation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B3ED8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MeditationUpdated.init(meditation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MeditationUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MeditationUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MeditationUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B3ED8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MeditationUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MeditationUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MeditationUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MeditationUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MeditationUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0ACB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MeditationUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0ACB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3ED8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MeditationUpdated()
{
  uint64_t result;

  result = qword_1EFA64998;
  if (!qword_1EFA64998)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0ACBDC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B3ED8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MetricPlayback.playbackTopic.getter()
{
  return sub_1CE0B485C() & 1;
}

uint64_t MediaPlayerSyncUpdated.syncUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B50C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static MediaPlayerSyncUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MediaPlayerSyncUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MediaPlayerSyncUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B50C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MediaPlayerSyncUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MediaPlayerSyncUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MediaPlayerSyncUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MediaPlayerSyncUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaPlayerSyncUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0ACE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaPlayerSyncUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0ACE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B50C0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaPlayerSyncUpdated()
{
  uint64_t result;

  result = qword_1EFA64A28;
  if (!qword_1EFA64A28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0ACEF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B50C0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static HealthKitWorkoutsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for HealthKitWorkoutsUpdated()
{
  return &type metadata for HealthKitWorkoutsUpdated;
}

_QWORD *HealthDataClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for HealthDataClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE0ADD78(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t HealthDataClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0ADF34);
}

uint64_t sub_1CE0AD0BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v11 = sub_1CE0B6080();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED8F0FD0);
    v12._object = (void *)0x80000001CE0CE7B0;
    v12._countAndFlagsBits = 0xD00000000000006DLL;
    v13._countAndFlagsBits = a2;
    v13._object = a3;
    Logger.trace(file:function:)(v12, v13);
    v14 = *(_QWORD *)(v10 + 48);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8))(ObjectType, a4, a5, ObjectType, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE0AD1B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for MindfulMinutesMetricUpdated();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = result;
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v7 = sub_1CE0B6080();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F0FD0);
    v8._countAndFlagsBits = 0xD00000000000006DLL;
    v8._object = (void *)0x80000001CE0CE7B0;
    v9._object = (void *)0x80000001CE0CE9B0;
    v9._countAndFlagsBits = 0xD000000000000037;
    Logger.trace(file:function:)(v8, v9);
    v10 = *(_QWORD *)(v6 + 48);
    ObjectType = swift_getObjectType();
    v12 = sub_1CE0B5078();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, a1, v12);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v10 + 8))(v4, v2, &protocol witness table for MindfulMinutesMetricUpdated, ObjectType, v10);
    sub_1CE0AE158((uint64_t)v4);
    return swift_release();
  }
  return result;
}

uint64_t HealthDataClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t HealthDataClient.queryAllHealthKitWorkouts()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F0FD0);
  v2._countAndFlagsBits = 0xD00000000000006DLL;
  v2._object = (void *)0x80000001CE0CE7B0;
  v3._object = (void *)0x80000001CE0CE820;
  v3._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 128;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64A60);
  v8 = sub_1CDFB0260(&qword_1EFA64A68, &qword_1EFA64A60, MEMORY[0x1E0D91CC8], MEMORY[0x1E0D91CD0]);
  v9 = sub_1CE0ADFA0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t HealthDataClient.queryHealthKitWorkoutsUsingThreshold(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0CE7B0;
  v5._object = (void *)0x80000001CE0CE840;
  v5._countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 129;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B54D4();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64A60);
  v11 = sub_1CDFB0260(&qword_1EFA64A68, &qword_1EFA64A60, MEMORY[0x1E0D91CC8], MEMORY[0x1E0D91CD0]);
  v12 = sub_1CE0ADFA0();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D94858], MEMORY[0x1E0D94860], v11, v12, ObjectType, v6);
}

uint64_t HealthDataClient.queryHealthKitWorkout(sessionIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F0FD0);
  v6._countAndFlagsBits = 0xD00000000000006DLL;
  v6._object = (void *)0x80000001CE0CE7B0;
  v7._object = (void *)0x80000001CE0CE870;
  v7._countAndFlagsBits = 0xD000000000000029;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 132;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B4BBC();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D91CC8], MEMORY[0x1E0D91CD0], ObjectType, v8);
}

uint64_t HealthDataClient.insertHealthKitStandaloneWorkoutJob(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0CE7B0;
  v5._object = (void *)0x80000001CE0CE8A0;
  v5._countAndFlagsBits = 0xD000000000000027;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 130;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B58C4();
  return v8(&v11, a1, v9, MEMORY[0x1E0D95500], MEMORY[0x1E0D95508], ObjectType, v6);
}

uint64_t HealthDataClient.insertHealthKitWorkout(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0CE7B0;
  v5._object = (void *)0x80000001CE0CE8D0;
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 131;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4BBC();
  return v8(&v11, a1, v9, MEMORY[0x1E0D91CC8], MEMORY[0x1E0D91CD0], ObjectType, v6);
}

uint64_t HealthDataClient.insertHealthKitMindfulSession(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0CE7B0;
  v5._object = (void *)0x80000001CE0CE8F0;
  v5._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 133;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B5324();
  return v8(&v11, a1, v9, MEMORY[0x1E0D94028], MEMORY[0x1E0D94030], ObjectType, v6);
}

uint64_t HealthDataClient.insertHealthKitStandaloneMindfulSessionJob(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0CE7B0;
  v5._object = (void *)0x80000001CE0CE920;
  v5._countAndFlagsBits = 0xD00000000000002ELL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 135;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B5B58();
  return v8(&v11, a1, v9, MEMORY[0x1E0D95D90], MEMORY[0x1E0D95D98], ObjectType, v6);
}

uint64_t HealthDataClient.queryHealthKitMindfulSessionsUsingThreshold(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F0FD0);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0CE7B0;
  v5._object = (void *)0x80000001CE0CE950;
  v5._countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 134;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5A68();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64A80);
  v11 = sub_1CDFB0260(&qword_1EFA64A88, &qword_1EFA64A80, MEMORY[0x1E0D94028], MEMORY[0x1E0D94030]);
  v12 = sub_1CE0AE01C();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D959A8], MEMORY[0x1E0D959B0], v11, v12, ObjectType, v6);
}

uint64_t sub_1CE0ADC78()
{
  return HealthDataClient.queryAllHealthKitWorkouts()();
}

uint64_t sub_1CE0ADC98(uint64_t a1)
{
  return HealthDataClient.queryHealthKitWorkoutsUsingThreshold(_:)(a1);
}

uint64_t sub_1CE0ADCB8(uint64_t a1)
{
  return HealthDataClient.insertHealthKitWorkout(_:)(a1);
}

uint64_t sub_1CE0ADCD8(uint64_t a1)
{
  return HealthDataClient.insertHealthKitStandaloneWorkoutJob(_:)(a1);
}

uint64_t sub_1CE0ADCF8(uint64_t a1, uint64_t a2)
{
  return HealthDataClient.queryHealthKitWorkout(sessionIdentifier:)(a1, a2);
}

uint64_t sub_1CE0ADD18(uint64_t a1)
{
  return HealthDataClient.insertHealthKitMindfulSession(_:)(a1);
}

uint64_t sub_1CE0ADD38(uint64_t a1)
{
  return HealthDataClient.insertHealthKitStandaloneMindfulSessionJob(_:)(a1);
}

uint64_t sub_1CE0ADD58(uint64_t a1)
{
  return HealthDataClient.queryHealthKitMindfulSessionsUsingThreshold(_:)(a1);
}

_QWORD *sub_1CE0ADD78(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v13 = a1;
  v12 = 43;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v12, (uint64_t)sub_1CE0AE0D0, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v13 = a1;
  v12 = 44;
  v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v12, (uint64_t)sub_1CE0AE110, v8, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v13 = a1;
  v12 = 45;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = sub_1CE0B5078();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1CE0AE150, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D931D0], MEMORY[0x1E0D931D8]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE0ADF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for HealthDataClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB2F7C(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE0ADFA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64A70;
  if (!qword_1EFA64A70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64A60);
    v2 = sub_1CDFB1900(&qword_1EFA64A78, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91CE0], MEMORY[0x1E0D91CD8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64A70);
  }
  return result;
}

unint64_t sub_1CE0AE01C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64A90;
  if (!qword_1EFA64A90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64A80);
    v2 = sub_1CDFB1900(&qword_1EFA64A98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94040], MEMORY[0x1E0D94038]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64A90);
  }
  return result;
}

uint64_t method lookup function for HealthDataClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthDataClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE0AE0AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE0AE0D0()
{
  uint64_t v0;

  return sub_1CE0AD0BC(v0, 0xD000000000000020, (void *)0x80000001CE0CEA20, (uint64_t)&type metadata for HealthKitWorkoutsUpdated, (uint64_t)&protocol witness table for HealthKitWorkoutsUpdated);
}

uint64_t sub_1CE0AE110()
{
  uint64_t v0;

  return sub_1CE0AD0BC(v0, 0xD000000000000027, (void *)0x80000001CE0CE9F0, (uint64_t)&type metadata for HealthKitMindfulSessionsUpdated, (uint64_t)&protocol witness table for HealthKitMindfulSessionsUpdated);
}

uint64_t sub_1CE0AE150(uint64_t a1)
{
  return sub_1CE0AD1B8(a1);
}

uint64_t sub_1CE0AE158(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MindfulMinutesMetricUpdated();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t GymKitConnection.applyingTimestampOffset(_:)()
{
  sub_1CE0B4B68();
  return sub_1CE0B4B74();
}

uint64_t sub_1CE0AE1D4()
{
  sub_1CE0B4B68();
  return sub_1CE0B4B74();
}

uint64_t DaemonSessionUpdate.update.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DaemonSessionUpdate.init(update:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static DaemonSessionUpdate.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for DaemonSessionUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for DaemonSessionUpdate(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for DaemonSessionUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DaemonSessionUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DaemonSessionUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DaemonSessionUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DaemonSessionUpdate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0AE424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DaemonSessionUpdate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0AE46C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4604();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DaemonSessionUpdate()
{
  uint64_t result;

  result = qword_1EFA64BB8;
  if (!qword_1EFA64BB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0AE4E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4604();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AudioFocusSelectionChanged.currentFocusSelection.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AudioFocusSelectionChanged.init(currentFocusSelection:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result & 1;
  return result;
}

void static AudioFocusSelectionChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t storeEnumTagSinglePayload for AudioFocusSelectionChanged(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE0AE5C0 + 4 * byte_1CE0C53D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE0AE5F4 + 4 * asc_1CE0C53D0[v4]))();
}

uint64_t sub_1CE0AE5F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0AE5FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE0AE604);
  return result;
}

uint64_t sub_1CE0AE610(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE0AE618);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE0AE61C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE0AE624(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AudioFocusSelectionChanged()
{
  return &type metadata for AudioFocusSelectionChanged;
}

_QWORD *TransportDispatchService.__allocating_init(queue:label:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v6 = (_QWORD *)swift_allocObject();
  v7 = MEMORY[0x1E0DEE9E0];
  v6[6] = MEMORY[0x1E0DEE9E0];
  v6[7] = v7;
  v6[2] = a1;
  v6[4] = a2;
  v6[5] = a3;
  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v8 + 16) = v9;
  *v9 = 0;
  v6[3] = v8;
  return v6;
}

uint64_t sub_1CE0AE6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void (*v17)(_BYTE *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *boxed_opaque_existential_1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  int v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  unint64_t v58;
  int v59;
  _QWORD *v60;
  _OWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  char v66;
  _QWORD *v67;
  char v68;
  uint64_t v69;
  _BYTE *v70;
  void (*v71)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v72;
  os_log_type_t v73;
  BOOL v74;
  _BYTE *v75;
  uint8_t *v76;
  void (*v77)(_BYTE *, uint64_t);
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  id v84;
  void *v85;
  void *v86;
  uint64_t result;
  uint64_t v88;
  _BYTE v89[4];
  int v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(_BYTE *, uint64_t);
  _BYTE *v98;
  void (*v99)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  int64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _OWORD v114[2];
  _OWORD v115[2];
  _OWORD v116[2];
  __int128 v117;
  _QWORD v118[4];
  __int128 v119;
  __int128 v120;

  v1 = v0;
  v2 = sub_1CE0B48C8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v98 = &v89[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x1E0C80A78](v4);
  v100 = &v89[-v7];
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v89[-v9];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v89[-v11];
  v14 = sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, v13, MEMORY[0x1E0D91400]);
  v15 = *(_QWORD *)(sub_1CE0B6CD4() + 16);
  swift_bridgeObjectRelease();
  v99 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
  v99(v12, v1, v2);
  if (v15)
  {
    v94 = v3;
    v97 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v97(v12, v2);
  }
  else
  {
    v16 = (void *)sub_1CE0B6CB0();
    v17 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v17(v12, v2);

    if (!v16)
    {
      v99(v10, v1, v2);
      v78 = sub_1CE0B6C38();
      if (v78)
      {
        v79 = (id)v78;
        v17(v10, v2);
      }
      else
      {
        v79 = (id)swift_allocError();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 32))(v88, v10, v2);
      }
      return (uint64_t)v79;
    }
    v97 = v17;
    v94 = v3;
  }
  v18 = sub_1CE0B6CD4();
  v102 = v14;
  v103 = v2;
  v104 = v1;
  v19 = sub_1CE0B6CB0();
  if (v19)
  {
    v20 = (void *)v19;
    v21 = sub_1CE0B6278();
    v23 = v22;
    swift_getErrorValue();
    v24 = (void *)Error.sanitized()(v111, v112);
    swift_getErrorValue();
    v25 = v109;
    v26 = v110;
    *((_QWORD *)&v120 + 1) = v110;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v119);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(boxed_opaque_existential_1, v25, v26);

    sub_1CDFB96B0(&v119, &v117);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v116[0] = v18;
    sub_1CDFE7184(&v117, v21, v23, isUniquelyReferenced_nonNull_native);
    v18 = *(_QWORD *)&v116[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  v29 = *(_QWORD *)(v18 + 64);
  v106 = v18 + 64;
  v30 = 1 << *(_BYTE *)(v18 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & v29;
  v33 = (unint64_t)(v30 + 63) >> 6;
  v108 = v118;
  v95 = *MEMORY[0x1E0CB28A8];
  v91 = v33 - 1;
  swift_bridgeObjectRetain();
  v101 = 0;
  v34 = 0;
  v107 = v33;
  v92 = v18 + 112;
  v93 = v33 - 6;
  v96 = MEMORY[0x1E0DEE9B8] + 8;
  v105 = v18;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v32)
        {
          v36 = __clz(__rbit64(v32));
          v32 &= v32 - 1;
          v37 = v36 | (v34 << 6);
          goto LABEL_14;
        }
        v41 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
          goto LABEL_80;
        }
        if (v41 >= v107)
        {
          v43 = v34;
        }
        else
        {
          v42 = *(_QWORD *)(v106 + 8 * v41);
          if (v42)
            goto LABEL_18;
          v46 = v34 + 2;
          v43 = v34 + 1;
          if ((uint64_t)(v34 + 2) < v107)
          {
            v42 = *(_QWORD *)(v106 + 8 * v46);
            if (v42)
              goto LABEL_27;
            v43 = v34 + 2;
            if ((uint64_t)(v34 + 3) < v107)
            {
              v42 = *(_QWORD *)(v106 + 8 * (v34 + 3));
              if (v42)
              {
                v41 = v34 + 3;
LABEL_18:
                v32 = (v42 - 1) & v42;
                v37 = __clz(__rbit64(v42)) + (v41 << 6);
                v34 = v41;
LABEL_14:
                v38 = *(_QWORD *)(v18 + 56);
                v39 = (_QWORD *)(*(_QWORD *)(v18 + 48) + 16 * v37);
                v40 = v39[1];
                *(_QWORD *)&v117 = *v39;
                *((_QWORD *)&v117 + 1) = v40;
                sub_1CDFC74F8(v38 + 32 * v37, (uint64_t)v108);
                swift_bridgeObjectRetain();
                goto LABEL_21;
              }
              v46 = v34 + 4;
              v43 = v34 + 3;
              if ((uint64_t)(v34 + 4) < v107)
              {
                v42 = *(_QWORD *)(v106 + 8 * v46);
                if (v42)
                {
LABEL_27:
                  v41 = v46;
                  goto LABEL_18;
                }
                v41 = v34 + 5;
                v43 = v34 + 4;
                if ((uint64_t)(v34 + 5) < v107)
                {
                  v42 = *(_QWORD *)(v106 + 8 * v41);
                  if (v42)
                    goto LABEL_18;
                  while (v93 != v34)
                  {
                    v42 = *(_QWORD *)(v92 + 8 * v34++);
                    if (v42)
                    {
                      v41 = v34 + 5;
                      goto LABEL_18;
                    }
                  }
                  v43 = v91;
                }
              }
            }
          }
        }
        v32 = 0;
        memset(v118, 0, sizeof(v118));
        v34 = v43;
        v117 = 0u;
LABEL_21:
        sub_1CDFBA448((uint64_t)&v117, (uint64_t)&v119, (uint64_t *)&unk_1EFA623E0);
        v3 = *((_QWORD *)&v119 + 1);
        if (!*((_QWORD *)&v119 + 1))
        {
          swift_release();
          v3 = v103;
          v18 = v104;
          if ((v101 & 1) == 0)
          {
LABEL_76:
            sub_1CE0B6CC8();
            v83 = sub_1CE0B6CBC();
            v84 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
            v85 = (void *)sub_1CE0B626C();
            swift_bridgeObjectRelease();
            v86 = (void *)sub_1CE0B620C();
            swift_bridgeObjectRelease();
            v79 = objc_msgSend(v84, sel_initWithDomain_code_userInfo_, v85, v83, v86);

            return (uint64_t)v79;
          }
          if (qword_1ED8F1890 == -1)
          {
LABEL_67:
            v69 = sub_1CE0B6080();
            __swift_project_value_buffer(v69, (uint64_t)qword_1ED8F1870);
            v71 = (void (*)(_BYTE *, _BYTE *, uint64_t))v99;
            v70 = v100;
            v99(v100, v18, v3);
            v72 = sub_1CE0B6068();
            v73 = sub_1CE0B671C();
            v74 = os_log_type_enabled(v72, v73);
            v75 = v98;
            if (v74)
            {
              v76 = (uint8_t *)swift_slowAlloc();
              v108 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v76 = 138412290;
              v71(v75, v70, v3);
              if (sub_1CE0B6C38())
              {
                v77 = v97;
                v97(v75, v3);
              }
              else
              {
                swift_allocError();
                (*(void (**)(uint64_t, _BYTE *, uint64_t))(v94 + 32))(v80, v75, v3);
                v77 = v97;
              }
              v81 = _swift_stdlib_bridgeErrorToNSError();
              *(_QWORD *)&v119 = v81;
              sub_1CE0B68F0();
              v82 = (uint64_t)v108;
              *v108 = v81;
              v77(v100, v3);
              _os_log_impl(&dword_1CDFAA000, v72, v73, "Found Errors from Core Data, original error before sanitization: %@", v76, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64BF0);
              swift_arrayDestroy();
              MEMORY[0x1D17C092C](v82, -1, -1);
              MEMORY[0x1D17C092C](v76, -1, -1);
            }
            else
            {
              v97(v70, v3);
            }

            goto LABEL_76;
          }
LABEL_80:
          swift_once();
          goto LABEL_67;
        }
        v44 = v119;
        sub_1CDFB96B0(&v120, v116);
        if (v44 == sub_1CE0B6278() && v45 == v3)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        v35 = sub_1CE0B6C50();
        swift_bridgeObjectRelease();
        if ((v35 & 1) != 0)
          goto LABEL_11;
        sub_1CDFC74F8((uint64_t)v116, (uint64_t)&v117);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
        if (!swift_dynamicCast())
        {
          sub_1CDFC74F8((uint64_t)v116, (uint64_t)&v117);
          goto LABEL_35;
        }
        swift_unknownObjectRelease();
        sub_1CDFC74F8((uint64_t)v116, (uint64_t)&v117);
        sub_1CDFC74F8((uint64_t)&v117, (uint64_t)v115);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62460);
        v47 = swift_dynamicCast();
        sub_1CDFC74F8((uint64_t)&v117, (uint64_t)v115);
        if ((v47 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v115);
LABEL_35:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v117);
          sub_1CDFC74F8((uint64_t)v116, (uint64_t)v115);
LABEL_36:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v115);
          break;
        }
        sub_1CDFB96B0(v115, v114);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C10);
        v66 = swift_dynamicCast();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v117);
        sub_1CDFC74F8((uint64_t)v116, (uint64_t)v115);
        if ((v66 & 1) != 0)
          goto LABEL_36;
        sub_1CDFB96B0(v115, v114);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C00);
        if ((swift_dynamicCast() & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v117);
          if ((sub_1CE0AF2BC((uint64_t)v116) & 1) == 0)
            break;
        }
LABEL_11:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v116);
        swift_bridgeObjectRelease();
      }
      v48 = sub_1CE0B6CC8();
      v50 = v49;
      if (v48 == sub_1CE0B6278() && v50 == v51)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
      v90 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v90 & 1) != 0)
        break;
      *(_QWORD *)&v117 = 0;
      *((_QWORD *)&v117 + 1) = 0xE000000000000000;
      sub_1CE0B6AA0();
      v118[1] = MEMORY[0x1E0DEA968];
      sub_1CDFB96B0(&v117, v114);
      v67 = (_QWORD *)v105;
      v68 = swift_isUniquelyReferenced_nonNull_native();
      v113 = v67;
      sub_1CDFE7184(v114, v44, v3, v68);
      v105 = (uint64_t)v113;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v116);
    }
    v118[1] = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v117 = 0x657070697274733CLL;
    *((_QWORD *)&v117 + 1) = 0xEA00000000003E64;
    sub_1CDFB96B0(&v117, v114);
    v52 = (_QWORD *)v105;
    v101 = swift_isUniquelyReferenced_nonNull_native();
    v113 = v52;
    v54 = sub_1CDFD1DAC(v44, v3);
    v55 = v52[2];
    v56 = (v53 & 1) == 0;
    v57 = v55 + v56;
    if (__OFADD__(v55, v56))
      break;
    if (v52[3] >= v57)
    {
      if ((v101 & 1) == 0)
      {
        LODWORD(v105) = v53;
        sub_1CDFE85CC();
        LOBYTE(v53) = v105;
      }
    }
    else
    {
      LODWORD(v105) = v53;
      sub_1CDFE6080(v57, v101);
      v58 = sub_1CDFD1DAC(v44, v3);
      v59 = v53 & 1;
      LOBYTE(v53) = v105;
      if ((v105 & 1) != v59)
        goto LABEL_83;
      v54 = v58;
    }
    v60 = v113;
    v105 = (uint64_t)v113;
    if ((v53 & 1) != 0)
    {
      v61 = (_OWORD *)(v113[7] + 32 * v54);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
      sub_1CDFB96B0(v114, v61);
    }
    else
    {
      v113[(v54 >> 6) + 8] |= 1 << v54;
      v62 = (uint64_t *)(v60[6] + 16 * v54);
      *v62 = v44;
      v62[1] = v3;
      sub_1CDFB96B0(v114, (_OWORD *)(v60[7] + 32 * v54));
      v63 = v60[2];
      v64 = __OFADD__(v63, 1);
      v65 = v63 + 1;
      if (v64)
        goto LABEL_82;
      v60[2] = v65;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v116);
    v101 = 1;
  }
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

uint64_t sub_1CE0AF2BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  int v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char v29;
  void (*v30)(char *, uint64_t);
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t AssociatedTypeWitness;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  _QWORD v67[6];
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD v72[2];
  _OWORD v73[2];
  __int128 v74;
  uint64_t v75;
  _OWORD v76[2];
  __int128 v77;
  uint64_t v78;

  v2 = sub_1CE0B48C8();
  v64 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v53 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v53 - v9;
  sub_1CDFC74F8(a1, (uint64_t)&v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1050);
  v11 = MEMORY[0x1E0DEE9B8] + 8;
  result = swift_dynamicCast();
  v63 = v2;
  if (!(_DWORD)result)
  {
    sub_1CDFC74F8(a1, (uint64_t)&v74);
    v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C00);
    if ((swift_dynamicCast() & 1) == 0)
    {
      v67[0] = 0;
      v65 = 0u;
      v66 = 0u;
      sub_1CDFB13F8((uint64_t)&v65, &qword_1EFA64C20);
      return 1;
    }
    sub_1CDFC3290(&v65, (uint64_t)&v68);
    v36 = __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
    MEMORY[0x1E0C80A78](v36);
    (*(void (**)(char *))(v38 + 16))((char *)&v53 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    *((_QWORD *)&v66 + 1) = swift_getAssociatedTypeWitness();
    v67[0] = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v65);
    sub_1CE0B6380();
    v60 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v65, *((uint64_t *)&v66 + 1));
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      v40 = sub_1CE0B68A8();
      v41 = *(_QWORD *)(v40 - 8);
      MEMORY[0x1E0C80A78](v40);
      v43 = (char *)&v53 - v42;
      sub_1CE0B68E4();
      v44 = *(_QWORD *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v43, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
        return 1;
      }
      v75 = AssociatedTypeWitness;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v74);
      (*(void (**)(uint64_t *, char *, uint64_t))(v44 + 32))(boxed_opaque_existential_1, v43, AssociatedTypeWitness);
      sub_1CDFB96B0(&v74, &v77);
      sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
      if (swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
        v46 = v63;
        v47 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v5, v62, v63);
        sub_1CDFC74F8((uint64_t)&v77, (uint64_t)&v74);
        v48 = sub_1CE0AF2BC(&v74);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v5, v46);
        if ((v48 & 1) == 0)
          goto LABEL_71;
      }
      else
      {
        v49 = v63;
        v50 = v64;
        (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v5, v62, v63);
        sub_1CDFC74F8((uint64_t)&v77, (uint64_t)&v74);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
        (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v49);
      }
      sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
      if (!swift_dynamicCast())
        break;
      swift_unknownObjectRelease();
      sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
      sub_1CDFC74F8((uint64_t)v76, (uint64_t)v73);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62460);
      v51 = swift_dynamicCast();
      sub_1CDFC74F8((uint64_t)v76, (uint64_t)v73);
      if ((v51 & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
        goto LABEL_70;
      }
      sub_1CDFB96B0(v73, v72);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C10);
      v52 = swift_dynamicCast();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
      if ((v52 & 1) != 0)
        goto LABEL_71;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
    }
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
LABEL_70:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
LABEL_71:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v68);
    return 0;
  }
  v61 = 0;
  v13 = *(_QWORD *)(v65 + 64);
  v55 = v65 + 64;
  v59 = v11;
  v60 = v65;
  v14 = 1 << *(_BYTE *)(v65 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v57 = &v67[1];
  v58 = &v71;
  v56 = (unint64_t)(v14 + 63) >> 6;
  v54 = v56 - 1;
  v17 = v62;
  while (1)
  {
    v18 = v64;
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v61 << 6);
LABEL_7:
      v21 = v60;
      sub_1CDFB92E8(*(_QWORD *)(v60 + 48) + 40 * v20, (uint64_t)&v65);
      sub_1CDFC74F8(*(_QWORD *)(v21 + 56) + 32 * v20, (uint64_t)v57);
      goto LABEL_29;
    }
    v22 = v61 + 1;
    if (__OFADD__(v61, 1))
    {
      __break(1u);
      goto LABEL_74;
    }
    if (v22 < v56)
    {
      v23 = *(_QWORD *)(v55 + 8 * v22);
      if (v23)
        goto LABEL_11;
      v24 = v61 + 2;
      ++v61;
      if (v22 + 1 < v56)
      {
        v23 = *(_QWORD *)(v55 + 8 * v24);
        if (v23)
          goto LABEL_14;
        v61 = v22 + 1;
        if (v22 + 2 < v56)
        {
          v23 = *(_QWORD *)(v55 + 8 * (v22 + 2));
          if (v23)
          {
            v22 += 2;
            goto LABEL_11;
          }
          v61 = v22 + 2;
          if (v22 + 3 < v56)
          {
            v23 = *(_QWORD *)(v55 + 8 * (v22 + 3));
            if (v23)
            {
              v22 += 3;
              goto LABEL_11;
            }
            v24 = v22 + 4;
            v61 = v22 + 3;
            if (v22 + 4 < v56)
              break;
          }
        }
      }
    }
LABEL_28:
    v16 = 0;
    memset(v67, 0, 40);
    v65 = 0u;
    v66 = 0u;
LABEL_29:
    sub_1CDFBA448((uint64_t)&v65, (uint64_t)&v68, qword_1EFA62470);
    if (!*((_QWORD *)&v69 + 1))
    {
      swift_release();
      return 1;
    }
    sub_1CDFB96B0(v58, &v74);
    v78 = MEMORY[0x1E0DEC198];
    v25 = swift_allocObject();
    *(_QWORD *)&v77 = v25;
    v26 = v69;
    *(_OWORD *)(v25 + 16) = v68;
    *(_OWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 48) = v70;
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C00);
    v27 = swift_dynamicCast();
    if (v27)
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v28(v10, v17, v2);
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)&v65);
    if (v27)
    {
      v29 = sub_1CE0AF2BC(&v65);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
      v30 = *(void (**)(char *, uint64_t))(v18 + 8);
      v30(v10, v2);
      if ((v29 & 1) == 0)
        goto LABEL_64;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
      v30 = *(void (**)(char *, uint64_t))(v18 + 8);
      v30(v10, v2);
    }
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
    if (!swift_dynamicCast())
    {
      sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
LABEL_62:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
      goto LABEL_64;
    }
    swift_unknownObjectRelease();
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
    sub_1CDFC74F8((uint64_t)v76, (uint64_t)v73);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62460);
    v31 = swift_dynamicCast();
    sub_1CDFC74F8((uint64_t)v76, (uint64_t)v73);
    if ((v31 & 1) != 0)
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v73);
      goto LABEL_62;
    }
    sub_1CDFB96B0(v73, v72);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C10);
    v32 = swift_dynamicCast();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v76);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
    if ((v32 & 1) != 0)
      goto LABEL_65;
    sub_1CDFC74F8((uint64_t)&v74, (uint64_t)&v77);
    if (swift_dynamicCast())
    {
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
      v2 = v63;
      v28(v8, v17, v63);
      sub_1CDFC74F8((uint64_t)&v74, (uint64_t)&v65);
      v33 = sub_1CE0AF2BC(&v65);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
      v30(v8, v2);
      if ((v33 & 1) == 0)
        goto LABEL_65;
    }
    else
    {
      v2 = v63;
      v28(v8, v17, v63);
      sub_1CDFC74F8((uint64_t)&v74, (uint64_t)&v65);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v65);
      v30(v8, v2);
    }
    sub_1CDFC74F8((uint64_t)&v74, (uint64_t)&v77);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
    if (!swift_dynamicCast())
    {
      sub_1CDFC74F8((uint64_t)&v74, (uint64_t)&v77);
LABEL_64:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
LABEL_65:
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
LABEL_66:
      swift_release();
      return 0;
    }
    swift_unknownObjectRelease();
    sub_1CDFC74F8((uint64_t)&v74, (uint64_t)&v77);
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62460);
    v34 = swift_dynamicCast();
    sub_1CDFC74F8((uint64_t)&v77, (uint64_t)v76);
    if ((v34 & 1) != 0)
      goto LABEL_62;
    sub_1CDFB96B0(v76, v73);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C10);
    v35 = swift_dynamicCast();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v77);
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
    if ((v35 & 1) != 0)
      goto LABEL_66;
  }
  v23 = *(_QWORD *)(v55 + 8 * v24);
  if (v23)
  {
LABEL_14:
    v22 = v24;
LABEL_11:
    v16 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v22 << 6);
    v61 = v22;
    goto LABEL_7;
  }
  while (1)
  {
    v22 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v22 >= v56)
    {
      v61 = v54;
      goto LABEL_28;
    }
    v23 = *(_QWORD *)(v55 + 8 * v22);
    ++v24;
    if (v23)
      goto LABEL_11;
  }
LABEL_74:
  __break(1u);
  return result;
}

_QWORD *TransportDispatchService.init(queue:label:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;

  v4 = MEMORY[0x1E0DEE9E0];
  v3[6] = MEMORY[0x1E0DEE9E0];
  v3[7] = v4;
  v3[2] = a1;
  v3[4] = a2;
  v3[5] = a3;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  v3[3] = v5;
  return v3;
}

uint64_t sub_1CE0AFDE8(__int16 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE0AFE34(a1, a2, a3, (uint64_t)&unk_1E8B6C9C0, (uint64_t)sub_1CDFC11C8);
}

uint64_t sub_1CE0AFDFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0AFE20(__int16 *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE0AFE34(a1, a2, a3, (uint64_t)&unk_1E8B6C9E8, (uint64_t)sub_1CE01AB64);
}

uint64_t sub_1CE0AFE34(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  __int16 v10;

  v10 = *a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  sub_1CE0B10F0(&v10, a5, v8);
  return swift_release();
}

uint64_t sub_1CE0AFEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = a3;
  v14[7] = a4;
  swift_retain();
  swift_retain();
  sub_1CE03AF58((uint64_t)v12, (uint64_t)&unk_1EFA64C68, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1CE0AFF90(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(void);

  v7[16] = a6;
  v7[17] = a7;
  v10 = (uint64_t (*)(void))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  v7[18] = v8;
  *v8 = v7;
  v8[1] = sub_1CE0AFFE8;
  return v10();
}

uint64_t sub_1CE0AFFE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B004C()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  v1 = *(void (**)(uint64_t))(v0 + 128);
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_BYTE *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  v1(v0 + 72);
  sub_1CDFBA598(v0 + 72);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B00A0()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  id v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(void (**)(uint64_t))(v0 + 128);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 64) = 1;
  v3 = v1;
  v2(v0 + 16);

  sub_1CDFBA598(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B0108(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1CE0B020C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E8B6CA10, (uint64_t)sub_1CDFC09D4);
}

uint64_t sub_1CE0B011C(uint64_t a1, void (*a2)(_BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v9[56];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v4 = sub_1CE0B6DA0();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 16))(&v9[-v6 - 8], a1);
  sub_1CE0B4AA8();
  a2(v9);
  return sub_1CDFBA598((uint64_t)v9);
}

uint64_t sub_1CE0B01F8(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1CE0B020C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E8B6CA38, (uint64_t)sub_1CDFC0D6C);
}

uint64_t sub_1CE0B020C(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v14;
  __int16 v16;

  v16 = *a1;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a6;
  v14[5] = a2;
  v14[6] = a3;
  swift_retain();
  sub_1CE0B10F0(&v16, a8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1CE0B02A0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;

  v8[19] = v15;
  v8[20] = v16;
  v8[17] = a7;
  v8[18] = a8;
  v8[16] = a6;
  v10 = sub_1CE0B68A8();
  v8[21] = v10;
  v8[22] = *(_QWORD *)(v10 - 8);
  v8[23] = swift_task_alloc();
  v11 = swift_task_alloc();
  v8[24] = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  v8[25] = v12;
  *v12 = v8;
  v12[1] = sub_1CE0B0358;
  return v14(v11);
}

uint64_t sub_1CE0B0358()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B03BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 144);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 16))(v1, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 168));
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 184);
  if (v4 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 160);
    v13 = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v0 + 96) = v13;
    *(_QWORD *)(v0 + 112) = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 72));
    (*(void (**)(uint64_t *, uint64_t, _QWORD))(v3 + 32))(boxed_opaque_existential_1, v5, v13);
  }
  v8 = *(_QWORD *)(v0 + 192);
  v9 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 176);
  v11 = *(void (**)(uint64_t))(v0 + 128);
  *(_BYTE *)(v0 + 120) = 0;
  v11(v0 + 72);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  sub_1CDFBA598(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B04C4()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  id v3;

  v1 = *(void **)(v0 + 208);
  v2 = *(void (**)(uint64_t))(v0 + 128);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 64) = 1;
  v3 = v1;
  v2(v0 + 16);

  sub_1CDFBA598(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B053C(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1CE0B020C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E8B6CA60, (uint64_t)sub_1CDFC9E88);
}

uint64_t sub_1CE0B0550(uint64_t a1, void (*a2)(_BYTE *))
{
  _BYTE v4[56];

  sub_1CDFB33FC(*(id *)a1, *(_BYTE *)(a1 + 8));
  sub_1CE0B4AB4();
  a2(v4);
  return sub_1CDFBA598((uint64_t)v4);
}

uint64_t sub_1CE0B05B4(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1CE0B020C(a1, a2, a3, a4, a5, a6, (uint64_t)&unk_1E8B6CA88, (uint64_t)sub_1CE0B1344);
}

uint64_t sub_1CE0B05C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;

  v24 = a5;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = a7;
  v20[5] = a8;
  v20[6] = a9;
  v20[7] = a1;
  v21 = v24;
  v20[8] = a2;
  v20[9] = v21;
  v20[10] = a6;
  v20[11] = a3;
  v20[12] = a4;
  sub_1CDFC2094(a1, a2);
  swift_retain();
  swift_retain();
  sub_1CE03AF58((uint64_t)v18, (uint64_t)&unk_1EFA64C48, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1CE0B06F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8[22] = v11;
  v8[23] = v12;
  v8[20] = a8;
  v8[21] = v10;
  v8[18] = a6;
  v8[19] = a7;
  v8[16] = a4;
  v8[17] = a5;
  v8[24] = *(_QWORD *)(v11 - 8);
  v8[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B0758()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD);

  sub_1CDFC2094(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  sub_1CE0B56A8();
  v3 = (uint64_t (*)(_QWORD))(**(int **)(v0 + 144) + *(_QWORD *)(v0 + 144));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_1CE0B085C;
  return v3(*(_QWORD *)(v0 + 200));
}

uint64_t sub_1CE0B085C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B08C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(void (**)(uint64_t))(v0 + 160);
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_BYTE *)(v0 + 120) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  v4(v0 + 72);
  sub_1CDFBA598(v0 + 72);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B0944()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  id v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  v1 = *(void **)(v0 + 216);
  v2 = *(void (**)(uint64_t))(v0 + 160);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 64) = 1;
  v3 = v1;
  v2(v0 + 16);

  sub_1CDFBA598(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B09C4(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1CE0B0B10(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1E8B6CAB0, (uint64_t)sub_1CDFC0B44);
}

uint64_t sub_1CE0B09FC(uint64_t a1, void (*a2)(_BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v9[56];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v4 = sub_1CE0B6DA0();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 16))(&v9[-v6 - 8], a1);
  sub_1CE0B4AA8();
  a2(v9);
  return sub_1CDFBA598((uint64_t)v9);
}

uint64_t sub_1CE0B0AD8(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1CE0B0B10(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t)&unk_1E8B6CAD8, (uint64_t)sub_1CE0B1374);
}

uint64_t sub_1CE0B0B10(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v18;
  __int16 v20;

  v20 = *a1;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  v18[6] = a8;
  v18[7] = a9;
  v18[8] = a2;
  v18[9] = a3;
  swift_retain();
  sub_1CE0B10F0(&v20, a11, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_1CE0B0BC4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a5;
  v25 = a3;
  v23 = a9;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = 0;
  *(_QWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 32) = a7;
  *(_QWORD *)(v21 + 40) = a8;
  *(_OWORD *)(v21 + 48) = v23;
  *(_QWORD *)(v21 + 64) = a10;
  *(_QWORD *)(v21 + 72) = a11;
  *(_QWORD *)(v21 + 80) = a1;
  *(_QWORD *)(v21 + 88) = a2;
  *(_QWORD *)(v21 + 96) = v24;
  *(_QWORD *)(v21 + 104) = a6;
  *(_QWORD *)(v21 + 112) = v25;
  *(_QWORD *)(v21 + 120) = a4;
  sub_1CDFC2094(a1, a2);
  swift_retain();
  swift_retain();
  sub_1CE03AF58((uint64_t)v19, (uint64_t)&unk_1EFA64C30, v21);
  return swift_release();
}

uint64_t sub_1CE0B0CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8[25] = v15;
  v8[26] = v16;
  v8[23] = v13;
  v8[24] = v14;
  v8[21] = v11;
  v8[22] = v12;
  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v9 = sub_1CE0B68A8();
  v8[27] = v9;
  v8[28] = *(_QWORD *)(v9 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  v8[31] = *(_QWORD *)(v12 - 8);
  v8[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B0DAC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(_QWORD, _QWORD);

  sub_1CDFC2094(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
  sub_1CE0B56A8();
  v3 = (uint64_t (*)(_QWORD, _QWORD))(**(int **)(v0 + 144) + *(_QWORD *)(v0 + 144));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v1;
  *v1 = v0;
  v1[1] = sub_1CE0B0ECC;
  return v3(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 256));
}

uint64_t sub_1CE0B0ECC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B0F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 184);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 16))(v1, *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 232);
  if (v4 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    *(_OWORD *)(v0 + 88) = 0u;
    *(_OWORD *)(v0 + 104) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v0 + 96) = v6;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 200);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 72));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 32))(boxed_opaque_existential_1, v5, v6);
  }
  v9 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(_QWORD *)(v0 + 216);
  v12 = *(_QWORD *)(v0 + 224);
  v13 = *(_QWORD *)(v0 + 176);
  v14 = *(void (**)(uint64_t))(v0 + 160);
  *(_BYTE *)(v0 + 120) = 0;
  v14(v0 + 72);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v13);
  sub_1CDFBA598(v0 + 72);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0B105C()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t);
  id v3;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 176));
  v1 = *(void **)(v0 + 272);
  v2 = *(void (**)(uint64_t))(v0 + 160);
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 64) = 1;
  v3 = v1;
  v2(v0 + 16);

  sub_1CDFBA598(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CE0B10F0(__int16 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  __int16 v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[2];

  v6 = *a1;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v8 = sub_1CE0B6068();
  v9 = sub_1CE0B6734();
  if (os_log_type_enabled(v8, v9))
  {
    v19 = a3;
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v13 = v3[4];
    v12 = v3[5];
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v13, v12, v20);
    sub_1CE0B68F0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    v14 = sub_1CE0B25C0();
    v15 = MEMORY[0x1D17BF33C](&type metadata for TransportRequest, v14);
    sub_1CDFC7270(v15, v16, v20);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v8, v9, "Registering request handler (%{public}s): %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v11, -1, -1);
    v17 = v10;
    a3 = v19;
    MEMORY[0x1D17C092C](v17, -1, -1);

  }
  else
  {

    swift_release();
  }
  v18 = v3[3];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  sub_1CE0B1380(v3, v6, a2, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
}

uint64_t sub_1CE0B1320()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0B1344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CDFC0960(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CE0B05C8);
}

uint64_t sub_1CE0B1350()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0B1374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CDFC0B0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CE0B0BC4);
}

uint64_t sub_1CE0B1380(_QWORD *a1, __int16 a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24[3];
  uint64_t v25;

  v8 = a1 + 6;
  swift_beginAccess();
  if (*(_QWORD *)(a1[6] + 16))
  {
    sub_1CDFC20F4(a2);
    if ((v9 & 1) != 0)
    {
      if (qword_1ED8F1890 != -1)
        swift_once();
      v10 = sub_1CE0B6080();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED8F1870);
      swift_retain();
      v11 = sub_1CE0B6068();
      v12 = sub_1CE0B671C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v24[0] = v23;
        *(_DWORD *)v13 = 136446466;
        type = v12;
        v14 = a1[4];
        v15 = a1[5];
        swift_bridgeObjectRetain();
        v25 = sub_1CDFC7270(v14, v15, v24);
        sub_1CE0B68F0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2082;
        LOWORD(v25) = a2;
        v16 = sub_1CE0B25C0();
        v17 = MEMORY[0x1D17BF33C](&type metadata for TransportRequest, v16);
        v25 = sub_1CDFC7270(v17, v18, v24);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CDFAA000, v11, type, "Overwriting existing handler (%{public}s): %{public}s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v23, -1, -1);
        MEMORY[0x1D17C092C](v13, -1, -1);

      }
      else
      {

        swift_release();
      }
    }
  }
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v8;
  *v8 = 0x8000000000000000;
  sub_1CDFE72B4((uint64_t)sub_1CE0B3448, v19, a2, isUniquelyReferenced_nonNull_native);
  *v8 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1CE0B1644(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = a1[1];
  v7 = *a2;
  v6 = a2[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  swift_retain();
  a3(v4, v5, sub_1CDFBA114, v8);
  return swift_release();
}

uint64_t sub_1CE0B16C4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  char v7;

  v7 = *a1;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a3;
  swift_retain();
  sub_1CDFC6750(&v7, (uint64_t)sub_1CDFC9EAC, v5);
  return swift_release();
}

void sub_1CE0B1738(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD v22[5];
  uint64_t v23;

  v8 = *(_QWORD *)(a5 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFC2094(v9, v12);
  sub_1CE0B56A8();
  if (v5)
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v13 = sub_1CE0B6080();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED8F1870);
    v14 = v5;
    v15 = v5;
    v16 = sub_1CE0B6068();
    v17 = sub_1CE0B671C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v23 = v19;
      *(_DWORD *)v18 = 136446210;
      swift_getErrorValue();
      v20 = MEMORY[0x1D17C0050](v22[3], v22[4]);
      v22[1] = sub_1CDFC7270(v20, v21, &v23);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v16, v17, "Error deserializing event payload: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v19, -1, -1);
      MEMORY[0x1D17C092C](v18, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    a3(v11);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a5);
  }
}

void sub_1CE0B19A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CE0B1738(a1, a2, *(void (**)(char *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16));
}

void sub_1CE0B19C4(__int16 *a1)
{
  _QWORD *v1;
  __int16 v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];

  v2 = *a1;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v4 = sub_1CE0B6068();
  v5 = sub_1CE0B6734();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15[0] = v7;
    *(_DWORD *)v6 = 136446466;
    v8 = v1[4];
    v9 = v1[5];
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v8, v9, v15);
    sub_1CE0B68F0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    v10 = sub_1CE0B25C0();
    v11 = MEMORY[0x1D17BF33C](&type metadata for TransportRequest, v10);
    sub_1CDFC7270(v11, v12, v15);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v4, v5, "Unregistering request handler (%{public}s): %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v7, -1, -1);
    MEMORY[0x1D17C092C](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  v13 = v1[3];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 16));
  swift_beginAccess();
  v14 = sub_1CE0B2518(v2);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  if (v14)
    sub_1CDFC2DA0(v14);
}

uint64_t sub_1CE0B1C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, _QWORD *))
{
  uint64_t v8;
  _QWORD v10[2];
  _QWORD v11[2];

  v11[0] = a1;
  v11[1] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[0] = sub_1CDFBA114;
  v10[1] = v8;
  swift_retain();
  a5(v11, v10);
  return swift_release();
}

void sub_1CE0B1C90(char *a1)
{
  _QWORD *v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];

  v2 = *a1;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v4 = sub_1CE0B6068();
  v5 = sub_1CE0B6734();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15[0] = v7;
    *(_DWORD *)v6 = 136446466;
    v8 = v1[4];
    v9 = v1[5];
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v8, v9, v15);
    sub_1CE0B68F0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2082;
    v10 = sub_1CDFC6E98();
    v11 = MEMORY[0x1D17BF33C](&type metadata for TransportEvent, v10);
    sub_1CDFC7270(v11, v12, v15);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v4, v5, "Unregistering event handler (%{public}s): %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v7, -1, -1);
    MEMORY[0x1D17C092C](v6, -1, -1);

  }
  else
  {

    swift_release();
  }
  v13 = v1[3];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v13 + 16));
  swift_beginAccess();
  v14 = sub_1CE0B2604(v2);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  if (v14)
    sub_1CDFC2DA0(v14);
}

void sub_1CE0B1ED8(Swift::Int a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD, unint64_t, void *), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int16 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v6 = v5;
  v36 = a3;
  v37 = a2;
  v10 = sub_1CE0B6140();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B6158();
  v38 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  TransportRequest.init(rawValue:)(a1);
  v17 = aBlock[0];
  if (LOWORD(aBlock[0]) == 334)
  {
    v18 = sub_1CE0B48C8();
    sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
    v19 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v20, *MEMORY[0x1E0D913C8], v18);
    a4(0, 0xF000000000000000, v19);

    return;
  }
  v34 = v14;
  v21 = v6[3];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v21 + 16));
  swift_beginAccess();
  v22 = v6[6];
  v23 = *(_QWORD *)(v22 + 16);
  v35 = v11;
  if (!v23 || (v24 = sub_1CDFC20F4(v17), (v25 & 1) == 0))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 16));
    goto LABEL_8;
  }
  v33 = *(_OWORD *)(*(_QWORD *)(v22 + 56) + 16 * v24);
  v26 = *(os_unfair_lock_s **)(v21 + 16);
  swift_retain();
  os_unfair_lock_unlock(v26);
  if (!(_QWORD)v33)
  {
LABEL_8:
    v28 = 0;
    v27 = 0;
    goto LABEL_9;
  }
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v33;
  v28 = sub_1CE0B26B4;
LABEL_9:
  v29 = v36;
  v36 = v6[2];
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v28;
  *(_QWORD *)(v30 + 24) = v27;
  *(_QWORD *)(v30 + 32) = v6;
  *(_WORD *)(v30 + 40) = v17;
  *(_QWORD *)(v30 + 48) = a4;
  *(_QWORD *)(v30 + 56) = a5;
  v31 = v37;
  *(_QWORD *)(v30 + 64) = v37;
  *(_QWORD *)(v30 + 72) = v29;
  aBlock[4] = sub_1CE0B26B0;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_19;
  v32 = _Block_copy(aBlock);
  sub_1CDFB6BE4((uint64_t)v28);
  swift_retain();
  swift_retain();
  sub_1CDFC2094(v31, v29);
  sub_1CE0B614C();
  v39 = MEMORY[0x1E0DEE9D8];
  sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
  sub_1CDFC20A8();
  sub_1CE0B6944();
  MEMORY[0x1D17BFB04](0, v16, v13, v32);
  _Block_release(v32);
  sub_1CDFC2DA0((uint64_t)v28);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v34);
  swift_release();
}

uint64_t TransportDispatchService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CE0B229C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1CE0B5204();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  v10 = sub_1CDFD1E10(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, 1, 1, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v3;
  v19 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CDFE77D0();
    v13 = v19;
  }
  v14 = *(_QWORD *)(v13 + 48);
  v15 = sub_1CE0B509C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
  v16 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 32);
  v16(v9, *(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v10, v6);
  sub_1CE0B27C4(v10, v13);
  *v3 = v13;
  swift_bridgeObjectRelease();
  v16(a2, (unint64_t)v9, v6);
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v6);
}

double sub_1CE0B2420@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1CDFD1DAC(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1CDFE7D14();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1CDFC3290((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_1CE0B2A98(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1CE0B2518(__int16 a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1CDFC20F4(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CDFE8280();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v5);
  sub_1CE0B2C80(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1CE0B25C0()
{
  unint64_t result;

  result = qword_1ED8F0A00;
  if (!qword_1ED8F0A00)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for TransportRequest, &type metadata for TransportRequest);
    atomic_store(result, (unint64_t *)&qword_1ED8F0A00);
  }
  return result;
}

uint64_t sub_1CE0B2604(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1CDFC6D80(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1CDFE8428();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v5);
  sub_1CE0B2E40(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1CE0B26B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CE0B1C0C(a1, a2, a3, a4, *(void (**)(_QWORD *, _QWORD *))(v4 + 16));
}

uint64_t sub_1CE0B26BC()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 40);
  if (v1 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + 32), v1);
  return swift_deallocObject();
}

uint64_t method lookup function for TransportDispatchService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransportDispatchService.__allocating_init(queue:label:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of TransportDispatchService.register(request:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of TransportDispatchService.register<A>(request:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of TransportDispatchService.register<A, B>(request:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of TransportDispatchService.register(event:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of TransportDispatchService.register<A>(event:handler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of TransportDispatchService.unregister(request:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of TransportDispatchService.unregister(event:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of TransportDispatchService.dispatchRequest(_:data:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of TransportDispatchService.dispatchEvent(_:data:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

unint64_t sub_1CE0B27C4(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_1CE0B509C();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1CE0B6950();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932F0]);
        v18 = sub_1CE0B6230();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(sub_1CE0B5204() - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CE0B2A98(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CE0B6950();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CE0B6D34();
        swift_bridgeObjectRetain();
        sub_1CE0B62CC();
        v11 = sub_1CE0B6D64();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CE0B2C80(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _WORD *v11;
  _WORD *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CE0B6950();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CE0B6D34();
        sub_1CE0B6D40();
        result = sub_1CE0B6D64();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_WORD *)(v10 + 2 * v3);
          v12 = (_WORD *)(v10 + 2 * v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1CE0B2E40(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1CE0B6950();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1CE0B6D34();
        sub_1CE0B6D40();
        result = sub_1CE0B6D64();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1CE0B3000()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1CE0B3028()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CE0B304C()
{
  uint64_t v0;
  unint64_t v1;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 88);
  if (v1 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + 80), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0B3098(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v11 = v1[2];
  v10 = v1[3];
  v3 = v1[10];
  v4 = v1[11];
  v5 = v1[12];
  v6 = v1[13];
  v7 = v1[14];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1CDFACD3C;
  return sub_1CE0B0CFC(a1, v11, v10, v3, v4, v5, v6, v7);
}

uint64_t sub_1CE0B3168(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0B09FC(a1, *(void (**)(_BYTE *))(v1 + 64));
}

uint64_t sub_1CE0B3198()
{
  uint64_t v0;
  unint64_t v1;

  swift_unknownObjectRelease();
  v1 = *(_QWORD *)(v0 + 64);
  if (v1 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + 56), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0B31E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = swift_task_alloc();
  v5 = *(_OWORD *)(v0 + 72);
  v6 = *(_OWORD *)(v0 + 88);
  v7 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_1CDFACD38;
  *(_OWORD *)(v4 + 160) = v6;
  *(_OWORD *)(v4 + 176) = v7;
  *(_OWORD *)(v4 + 144) = v5;
  *(_QWORD *)(v4 + 128) = v2;
  *(_QWORD *)(v4 + 136) = v3;
  *(_QWORD *)(v4 + 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE0B3280(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0B0550(a1, *(void (**)(_BYTE *))(v1 + 16));
}

uint64_t sub_1CE0B329C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0B32D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v12 = v1[4];
  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[7];
  v7 = v1[8];
  v8 = v1[9];
  v9 = v1[10];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1CDFACD38;
  return sub_1CE0B02A0(a1, v4, v5, v6, v7, v8, v9, v12);
}

uint64_t sub_1CE0B3378(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0B011C(a1, *(void (**)(_BYTE *))(v1 + 40));
}

uint64_t sub_1CE0B3388()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0B33BC()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v2 = *(int **)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1CDFACD38;
  *(_OWORD *)(v3 + 128) = v4;
  v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 144) = v5;
  *v5 = v3;
  v5[1] = sub_1CE0AFFE8;
  return v7();
}

uint64_t sub_1CE0B3448(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1CE0B1644(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t (*)(), uint64_t))(v2 + 16));
}

_QWORD *ConfigurationClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for ConfigurationClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *ConfigurationClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE0B365C(a1, v3, ObjectType, a2, a3);
}

uint64_t ConfigurationClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t ConfigurationClient.resetConfiguration()()
{
  return sub_1CDFB0AB4(0xD000000000000014, (void *)0x80000001CE0CEB70, 108);
}

uint64_t sub_1CE0B363C()
{
  return ConfigurationClient.resetConfiguration()();
}

_QWORD *sub_1CE0B365C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for ConfigurationClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t dispatch thunk of ConfigurationClientProtocol.resetConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t method lookup function for ConfigurationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConfigurationClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void static ServiceSubscriptionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t dispatch thunk of ScheduledTimer.onFire.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ScheduledTimer.onFire.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of ScheduledTimer.onFire.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ScheduledTimer.schedule()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ScheduledTimer.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t compatibilityInitializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(1);
}

uint64_t __isPlatformVersionAtLeast(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v8;

  if (qword_1EFA6C0C8 == -1)
  {
    if (qword_1EFA6C0D0)
      return _availability_version_check();
  }
  else
  {
    dispatch_once_f(&qword_1EFA6C0C8, 0, (dispatch_function_t)initializeAvailabilityCheck);
    if (qword_1EFA6C0D0)
      return _availability_version_check();
  }
  if (qword_1EFA6C0C0 == -1)
  {
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  else
  {
    dispatch_once_f(&qword_1EFA6C0C0, 0, (dispatch_function_t)compatibilityInitializeAvailabilityCheck);
    v8 = _MergedGlobals < a2;
    if (_MergedGlobals > a2)
      return 1;
  }
  if (v8)
    return 0;
  if (dword_1EFA6C0B4 > a3)
    return 1;
  return dword_1EFA6C0B4 >= a3 && dword_1EFA6C0B8 >= a4;
}

uint64_t initializeAvailabilityCheck()
{
  return _initializeAvailabilityCheck(0);
}

uint64_t _initializeAvailabilityCheck(uint64_t result)
{
  uint64_t (*v1)(void);
  BOOL v2;
  unsigned __int8 *v4;
  uint64_t (*v5)(_QWORD);
  unint64_t v6;
  uint64_t (*v7)(_QWORD, uint64_t, _QWORD, _QWORD);
  uint64_t (*v8)(_QWORD, const char *, uint64_t, unsigned __int8 *);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(void);
  FILE *v12;
  FILE *v13;
  uint64_t v14;
  size_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  FILE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  FILE *v27;
  unsigned int (*v28)(uint64_t, char *, uint64_t, uint64_t);
  char v29[32];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v1 = (uint64_t (*)(void))qword_1EFA6C0D0;
  if (qword_1EFA6C0D0)
    v2 = (_DWORD)result == 0;
  else
    v2 = 0;
  if (!v2)
  {
    if (MEMORY[0x1E0C80CC0])
    {
      qword_1EFA6C0D0 = (uint64_t)MEMORY[0x1E0C80CC0];
      v1 = MEMORY[0x1E0C80CC0];
    }
    if (!v1 || (_DWORD)result != 0)
    {
      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "kCFAllocatorNull");
      if (result)
      {
        v4 = *(unsigned __int8 **)result;
        result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDataCreateWithBytesNoCopy");
        if (result)
        {
          v5 = (uint64_t (*)(_QWORD))result;
          v6 = (unint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateWithData");
          result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFPropertyListCreateFromXMLData");
          if (v6 | result)
          {
            v7 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD))result;
            result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringCreateWithCStringNoCopy");
            if (result)
            {
              v8 = (uint64_t (*)(_QWORD, const char *, uint64_t, unsigned __int8 *))result;
              result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFDictionaryGetValue");
              if (result)
              {
                v9 = (uint64_t (*)(uint64_t, uint64_t))result;
                result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFGetTypeID");
                if (result)
                {
                  v10 = (uint64_t (*)(uint64_t))result;
                  result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetTypeID");
                  if (result)
                  {
                    v11 = (uint64_t (*)(void))result;
                    result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFStringGetCString");
                    v28 = (unsigned int (*)(uint64_t, char *, uint64_t, uint64_t))result;
                    if (result)
                    {
                      result = (uint64_t)dlsym((void *)0xFFFFFFFFFFFFFFFELL, "CFRelease");
                      if (result)
                      {
                        v12 = (FILE *)result;
                        result = (uint64_t)fopen("/System/Library/CoreServices/SystemVersion.plist", "r");
                        if (result)
                        {
                          v13 = (FILE *)result;
                          v27 = v12;
                          fseek((FILE *)result, 0, 2);
                          v14 = MEMORY[0x1D17C0308](v13);
                          if (v14 < 0)
                          {
                            v16 = 0;
                          }
                          else
                          {
                            v15 = v14;
                            rewind(v13);
                            v16 = malloc(v15);
                            if (v16)
                            {
                              v26 = v16;
                              if (fread(v16, 1uLL, v15, v13) == v15)
                              {
                                v17 = v5(0);
                                if (v17)
                                {
                                  v18 = v17;
                                  v19 = v13;
                                  if (v6)
                                    v20 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))v6)(0, v17, 0, 0, 0);
                                  else
                                    v20 = v7(0, v17, 0, 0);
                                  v21 = v20;
                                  if (v20)
                                  {
                                    v22 = v8(0, "ProductVersion", 1536, v4);
                                    if (v22)
                                    {
                                      v23 = v22;
                                      v24 = v9(v21, v22);
                                      ((void (*)(uint64_t))v27)(v23);
                                      if (v24)
                                      {
                                        v25 = v10(v24);
                                        if (v25 == v11())
                                        {
                                          if (v28(v24, v29, 32, 134217984))
                                            sscanf(v29, "%d.%d.%d", &_MergedGlobals, &dword_1EFA6C0B4, &dword_1EFA6C0B8);
                                        }
                                      }
                                    }
                                    ((void (*)(uint64_t))v27)(v21);
                                    v19 = v13;
                                  }
                                  ((void (*)(uint64_t))v27)(v18);
                                }
                                else
                                {
                                  v19 = v13;
                                }
                                v16 = v26;
                              }
                              else
                              {
                                v16 = v26;
                                v19 = v13;
                              }
                              goto LABEL_41;
                            }
                          }
                          v19 = v13;
LABEL_41:
                          free(v16);
                          return fclose(v19);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CE0B3BC0()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1CE0B3BCC()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1CE0B3BD8()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1CE0B3BE4()
{
  return MEMORY[0x1E0CAE670]();
}

uint64_t sub_1CE0B3BF0()
{
  return MEMORY[0x1E0CAE678]();
}

uint64_t sub_1CE0B3BFC()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1CE0B3C08()
{
  return MEMORY[0x1E0CAE768]();
}

uint64_t sub_1CE0B3C14()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_1CE0B3C20()
{
  return MEMORY[0x1E0CAE7C8]();
}

uint64_t sub_1CE0B3C2C()
{
  return MEMORY[0x1E0CAE7F0]();
}

uint64_t sub_1CE0B3C38()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t sub_1CE0B3C44()
{
  return MEMORY[0x1E0CAE860]();
}

uint64_t sub_1CE0B3C50()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_1CE0B3C5C()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1CE0B3C68()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1CE0B3C74()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1CE0B3C80()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1CE0B3C8C()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1CE0B3C98()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1CE0B3CA4()
{
  return MEMORY[0x1E0CAE9B8]();
}

uint64_t sub_1CE0B3CB0()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1CE0B3CBC()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1CE0B3CC8()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1CE0B3CD4()
{
  return MEMORY[0x1E0D8FBC8]();
}

uint64_t sub_1CE0B3CE0()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1CE0B3CEC()
{
  return MEMORY[0x1E0CAFDD8]();
}

uint64_t sub_1CE0B3CF8()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1CE0B3D04()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1CE0B3D10()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1CE0B3D1C()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1CE0B3D28()
{
  return MEMORY[0x1E0CB00B0]();
}

uint64_t sub_1CE0B3D34()
{
  return MEMORY[0x1E0CB00E8]();
}

uint64_t sub_1CE0B3D40()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1CE0B3D4C()
{
  return MEMORY[0x1E0CB01D0]();
}

uint64_t sub_1CE0B3D58()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1CE0B3D64()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1CE0B3D70()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1CE0B3D7C()
{
  return MEMORY[0x1E0CB03D0]();
}

uint64_t sub_1CE0B3D88()
{
  return MEMORY[0x1E0D8FBF0]();
}

uint64_t sub_1CE0B3D94()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1CE0B3DA0()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1CE0B3DAC()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1CE0B3DB8()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1CE0B3DC4()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1CE0B3DD0()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1CE0B3DDC()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1CE0B3DE8()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1CE0B3DF4()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1CE0B3E00()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1CE0B3E0C()
{
  return MEMORY[0x1E0CB0938]();
}

uint64_t sub_1CE0B3E18()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1CE0B3E24()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1CE0B3E30()
{
  return MEMORY[0x1E0CB1030]();
}

uint64_t sub_1CE0B3E3C()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1CE0B3E48()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1CE0B3E54()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1CE0B3E60()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1CE0B3E6C()
{
  return MEMORY[0x1E0D8FC58]();
}

uint64_t sub_1CE0B3E78()
{
  return MEMORY[0x1E0D8FC78]();
}

uint64_t sub_1CE0B3E84()
{
  return MEMORY[0x1E0D8FCA0]();
}

uint64_t sub_1CE0B3E90()
{
  return MEMORY[0x1E0D8FD30]();
}

uint64_t sub_1CE0B3E9C()
{
  return MEMORY[0x1E0D8FE98]();
}

uint64_t sub_1CE0B3EA8()
{
  return MEMORY[0x1E0D8FEC0]();
}

uint64_t sub_1CE0B3EB4()
{
  return MEMORY[0x1E0D8FF00]();
}

uint64_t sub_1CE0B3EC0()
{
  return MEMORY[0x1E0D8FF10]();
}

uint64_t sub_1CE0B3ECC()
{
  return MEMORY[0x1E0D8FF38]();
}

uint64_t sub_1CE0B3ED8()
{
  return MEMORY[0x1E0D8FF40]();
}

uint64_t sub_1CE0B3EE4()
{
  return MEMORY[0x1E0D8FF90]();
}

uint64_t sub_1CE0B3EF0()
{
  return MEMORY[0x1E0D8FFC0]();
}

uint64_t sub_1CE0B3EFC()
{
  return MEMORY[0x1E0D90030]();
}

uint64_t sub_1CE0B3F08()
{
  return MEMORY[0x1E0D90050]();
}

uint64_t sub_1CE0B3F14()
{
  return MEMORY[0x1E0D90058]();
}

uint64_t sub_1CE0B3F20()
{
  return MEMORY[0x1E0D90060]();
}

uint64_t sub_1CE0B3F2C()
{
  return MEMORY[0x1E0D90080]();
}

uint64_t sub_1CE0B3F38()
{
  return MEMORY[0x1E0D900B8]();
}

uint64_t sub_1CE0B3F44()
{
  return MEMORY[0x1E0D90190]();
}

uint64_t sub_1CE0B3F50()
{
  return MEMORY[0x1E0D901F0]();
}

uint64_t sub_1CE0B3F5C()
{
  return MEMORY[0x1E0D90220]();
}

uint64_t sub_1CE0B3F68()
{
  return MEMORY[0x1E0D90228]();
}

uint64_t sub_1CE0B3F74()
{
  return MEMORY[0x1E0D90230]();
}

uint64_t sub_1CE0B3F80()
{
  return MEMORY[0x1E0D90238]();
}

uint64_t sub_1CE0B3F8C()
{
  return MEMORY[0x1E0D90240]();
}

uint64_t sub_1CE0B3F98()
{
  return MEMORY[0x1E0D90248]();
}

uint64_t sub_1CE0B3FA4()
{
  return MEMORY[0x1E0D90250]();
}

uint64_t sub_1CE0B3FB0()
{
  return MEMORY[0x1E0D90258]();
}

uint64_t sub_1CE0B3FBC()
{
  return MEMORY[0x1E0D90260]();
}

uint64_t sub_1CE0B3FC8()
{
  return MEMORY[0x1E0D90268]();
}

uint64_t sub_1CE0B3FD4()
{
  return MEMORY[0x1E0D90270]();
}

uint64_t sub_1CE0B3FE0()
{
  return MEMORY[0x1E0D90278]();
}

uint64_t sub_1CE0B3FEC()
{
  return MEMORY[0x1E0D90280]();
}

uint64_t sub_1CE0B3FF8()
{
  return MEMORY[0x1E0D90288]();
}

uint64_t sub_1CE0B4004()
{
  return MEMORY[0x1E0D90290]();
}

uint64_t sub_1CE0B4010()
{
  return MEMORY[0x1E0D90298]();
}

uint64_t sub_1CE0B401C()
{
  return MEMORY[0x1E0D902A0]();
}

uint64_t sub_1CE0B4028()
{
  return MEMORY[0x1E0D902A8]();
}

uint64_t sub_1CE0B4034()
{
  return MEMORY[0x1E0D902B0]();
}

uint64_t sub_1CE0B4040()
{
  return MEMORY[0x1E0D902B8]();
}

uint64_t sub_1CE0B404C()
{
  return MEMORY[0x1E0D902C0]();
}

uint64_t sub_1CE0B4058()
{
  return MEMORY[0x1E0D902C8]();
}

uint64_t sub_1CE0B4064()
{
  return MEMORY[0x1E0D902D0]();
}

uint64_t sub_1CE0B4070()
{
  return MEMORY[0x1E0D902D8]();
}

uint64_t sub_1CE0B407C()
{
  return MEMORY[0x1E0D902E0]();
}

uint64_t sub_1CE0B4088()
{
  return MEMORY[0x1E0D902F0]();
}

uint64_t sub_1CE0B4094()
{
  return MEMORY[0x1E0D90300]();
}

uint64_t sub_1CE0B40A0()
{
  return MEMORY[0x1E0D90338]();
}

uint64_t sub_1CE0B40AC()
{
  return MEMORY[0x1E0D90388]();
}

uint64_t sub_1CE0B40B8()
{
  return MEMORY[0x1E0D90458]();
}

uint64_t sub_1CE0B40C4()
{
  return MEMORY[0x1E0D90460]();
}

uint64_t sub_1CE0B40D0()
{
  return MEMORY[0x1E0D90490]();
}

uint64_t sub_1CE0B40DC()
{
  return MEMORY[0x1E0D90498]();
}

uint64_t sub_1CE0B40E8()
{
  return MEMORY[0x1E0D904A0]();
}

uint64_t sub_1CE0B40F4()
{
  return MEMORY[0x1E0D904A8]();
}

uint64_t sub_1CE0B4100()
{
  return MEMORY[0x1E0D904B0]();
}

uint64_t sub_1CE0B410C()
{
  return MEMORY[0x1E0D904B8]();
}

uint64_t sub_1CE0B4118()
{
  return MEMORY[0x1E0D904C0]();
}

uint64_t sub_1CE0B4124()
{
  return MEMORY[0x1E0D904C8]();
}

uint64_t sub_1CE0B4130()
{
  return MEMORY[0x1E0D904D0]();
}

uint64_t sub_1CE0B413C()
{
  return MEMORY[0x1E0D904D8]();
}

uint64_t sub_1CE0B4148()
{
  return MEMORY[0x1E0D904E0]();
}

uint64_t sub_1CE0B4154()
{
  return MEMORY[0x1E0D90500]();
}

uint64_t sub_1CE0B4160()
{
  return MEMORY[0x1E0D90520]();
}

uint64_t sub_1CE0B416C()
{
  return MEMORY[0x1E0D90528]();
}

uint64_t sub_1CE0B4178()
{
  return MEMORY[0x1E0D90548]();
}

uint64_t sub_1CE0B4184()
{
  return MEMORY[0x1E0D90558]();
}

uint64_t sub_1CE0B4190()
{
  return MEMORY[0x1E0D90570]();
}

uint64_t sub_1CE0B419C()
{
  return MEMORY[0x1E0D90578]();
}

uint64_t sub_1CE0B41A8()
{
  return MEMORY[0x1E0D90580]();
}

uint64_t sub_1CE0B41B4()
{
  return MEMORY[0x1E0D90588]();
}

uint64_t sub_1CE0B41C0()
{
  return MEMORY[0x1E0D90590]();
}

uint64_t sub_1CE0B41CC()
{
  return MEMORY[0x1E0D905C0]();
}

uint64_t sub_1CE0B41D8()
{
  return MEMORY[0x1E0D905E0]();
}

uint64_t sub_1CE0B41E4()
{
  return MEMORY[0x1E0D90660]();
}

uint64_t sub_1CE0B41F0()
{
  return MEMORY[0x1E0D90678]();
}

uint64_t sub_1CE0B41FC()
{
  return MEMORY[0x1E0D90688]();
}

uint64_t sub_1CE0B4208()
{
  return MEMORY[0x1E0D906F8]();
}

uint64_t sub_1CE0B4214()
{
  return MEMORY[0x1E0D90720]();
}

uint64_t sub_1CE0B4220()
{
  return MEMORY[0x1E0D90728]();
}

uint64_t sub_1CE0B422C()
{
  return MEMORY[0x1E0D90758]();
}

uint64_t sub_1CE0B4238()
{
  return MEMORY[0x1E0D90778]();
}

uint64_t sub_1CE0B4244()
{
  return MEMORY[0x1E0D907B0]();
}

uint64_t sub_1CE0B4250()
{
  return MEMORY[0x1E0D907D0]();
}

uint64_t sub_1CE0B425C()
{
  return MEMORY[0x1E0D907D8]();
}

uint64_t sub_1CE0B4268()
{
  return MEMORY[0x1E0D907E0]();
}

uint64_t sub_1CE0B4274()
{
  return MEMORY[0x1E0D907E8]();
}

uint64_t sub_1CE0B4280()
{
  return MEMORY[0x1E0D90820]();
}

uint64_t sub_1CE0B428C()
{
  return MEMORY[0x1E0D90828]();
}

uint64_t sub_1CE0B4298()
{
  return MEMORY[0x1E0D90830]();
}

uint64_t sub_1CE0B42A4()
{
  return MEMORY[0x1E0D90848]();
}

uint64_t sub_1CE0B42B0()
{
  return MEMORY[0x1E0D90868]();
}

uint64_t sub_1CE0B42BC()
{
  return MEMORY[0x1E0D90870]();
}

uint64_t sub_1CE0B42C8()
{
  return MEMORY[0x1E0D90878]();
}

uint64_t sub_1CE0B42D4()
{
  return MEMORY[0x1E0D90880]();
}

uint64_t sub_1CE0B42E0()
{
  return MEMORY[0x1E0D90888]();
}

uint64_t sub_1CE0B42EC()
{
  return MEMORY[0x1E0D90890]();
}

uint64_t sub_1CE0B42F8()
{
  return MEMORY[0x1E0D908C0]();
}

uint64_t sub_1CE0B4304()
{
  return MEMORY[0x1E0D908E0]();
}

uint64_t sub_1CE0B4310()
{
  return MEMORY[0x1E0D908F8]();
}

uint64_t sub_1CE0B431C()
{
  return MEMORY[0x1E0D90900]();
}

uint64_t sub_1CE0B4328()
{
  return MEMORY[0x1E0D90908]();
}

uint64_t sub_1CE0B4334()
{
  return MEMORY[0x1E0D90910]();
}

uint64_t sub_1CE0B4340()
{
  return MEMORY[0x1E0D90918]();
}

uint64_t sub_1CE0B434C()
{
  return MEMORY[0x1E0D90920]();
}

uint64_t sub_1CE0B4358()
{
  return MEMORY[0x1E0D90928]();
}

uint64_t sub_1CE0B4364()
{
  return MEMORY[0x1E0D909A0]();
}

uint64_t sub_1CE0B4370()
{
  return MEMORY[0x1E0D909F0]();
}

uint64_t sub_1CE0B437C()
{
  return MEMORY[0x1E0D90A10]();
}

uint64_t sub_1CE0B4388()
{
  return MEMORY[0x1E0D90A18]();
}

uint64_t sub_1CE0B4394()
{
  return MEMORY[0x1E0D90A20]();
}

uint64_t sub_1CE0B43A0()
{
  return MEMORY[0x1E0D90A28]();
}

uint64_t sub_1CE0B43AC()
{
  return MEMORY[0x1E0D90A30]();
}

uint64_t sub_1CE0B43B8()
{
  return MEMORY[0x1E0D90A38]();
}

uint64_t sub_1CE0B43C4()
{
  return MEMORY[0x1E0D90A68]();
}

uint64_t sub_1CE0B43D0()
{
  return MEMORY[0x1E0D90A70]();
}

uint64_t sub_1CE0B43DC()
{
  return MEMORY[0x1E0D90A88]();
}

uint64_t sub_1CE0B43E8()
{
  return MEMORY[0x1E0D90AB0]();
}

uint64_t sub_1CE0B43F4()
{
  return MEMORY[0x1E0D90AD8]();
}

uint64_t sub_1CE0B4400()
{
  return MEMORY[0x1E0D90AE0]();
}

uint64_t sub_1CE0B440C()
{
  return MEMORY[0x1E0D90AE8]();
}

uint64_t sub_1CE0B4418()
{
  return MEMORY[0x1E0D90AF0]();
}

uint64_t sub_1CE0B4424()
{
  return MEMORY[0x1E0D90AF8]();
}

uint64_t sub_1CE0B4430()
{
  return MEMORY[0x1E0D90B00]();
}

uint64_t sub_1CE0B443C()
{
  return MEMORY[0x1E0D90B08]();
}

uint64_t sub_1CE0B4448()
{
  return MEMORY[0x1E0D90B50]();
}

uint64_t sub_1CE0B4454()
{
  return MEMORY[0x1E0D90B78]();
}

uint64_t sub_1CE0B4460()
{
  return MEMORY[0x1E0D90BE8]();
}

uint64_t sub_1CE0B446C()
{
  return MEMORY[0x1E0D90CB8]();
}

uint64_t sub_1CE0B4478()
{
  return MEMORY[0x1E0D90CC8]();
}

uint64_t sub_1CE0B4484()
{
  return MEMORY[0x1E0D90CD0]();
}

uint64_t sub_1CE0B4490()
{
  return MEMORY[0x1E0D90CD8]();
}

uint64_t sub_1CE0B449C()
{
  return MEMORY[0x1E0D90DA0]();
}

uint64_t sub_1CE0B44A8()
{
  return MEMORY[0x1E0D90DF8]();
}

uint64_t sub_1CE0B44B4()
{
  return MEMORY[0x1E0D90E18]();
}

uint64_t sub_1CE0B44C0()
{
  return MEMORY[0x1E0D90E20]();
}

uint64_t sub_1CE0B44CC()
{
  return MEMORY[0x1E0D90E28]();
}

uint64_t sub_1CE0B44D8()
{
  return MEMORY[0x1E0D90E30]();
}

uint64_t sub_1CE0B44E4()
{
  return MEMORY[0x1E0D90E38]();
}

uint64_t sub_1CE0B44F0()
{
  return MEMORY[0x1E0D90E40]();
}

uint64_t sub_1CE0B44FC()
{
  return MEMORY[0x1E0D90E48]();
}

uint64_t sub_1CE0B4508()
{
  return MEMORY[0x1E0D90E50]();
}

uint64_t sub_1CE0B4514()
{
  return MEMORY[0x1E0D90E58]();
}

uint64_t sub_1CE0B4520()
{
  return MEMORY[0x1E0D90E60]();
}

uint64_t sub_1CE0B452C()
{
  return MEMORY[0x1E0D90E68]();
}

uint64_t sub_1CE0B4538()
{
  return MEMORY[0x1E0D90E70]();
}

uint64_t sub_1CE0B4544()
{
  return MEMORY[0x1E0D90E78]();
}

uint64_t sub_1CE0B4550()
{
  return MEMORY[0x1E0D90E80]();
}

uint64_t sub_1CE0B455C()
{
  return MEMORY[0x1E0D90E88]();
}

uint64_t sub_1CE0B4568()
{
  return MEMORY[0x1E0D90E90]();
}

uint64_t sub_1CE0B4574()
{
  return MEMORY[0x1E0D90E98]();
}

uint64_t sub_1CE0B4580()
{
  return MEMORY[0x1E0D90EA0]();
}

uint64_t sub_1CE0B458C()
{
  return MEMORY[0x1E0D90EA8]();
}

uint64_t sub_1CE0B4598()
{
  return MEMORY[0x1E0D90EB0]();
}

uint64_t sub_1CE0B45A4()
{
  return MEMORY[0x1E0D90EB8]();
}

uint64_t sub_1CE0B45B0()
{
  return MEMORY[0x1E0D90EC0]();
}

uint64_t sub_1CE0B45BC()
{
  return MEMORY[0x1E0D90EC8]();
}

uint64_t sub_1CE0B45C8()
{
  return MEMORY[0x1E0D90ED0]();
}

uint64_t sub_1CE0B45D4()
{
  return MEMORY[0x1E0D90ED8]();
}

uint64_t sub_1CE0B45E0()
{
  return MEMORY[0x1E0D90EE0]();
}

uint64_t sub_1CE0B45EC()
{
  return MEMORY[0x1E0D90EE8]();
}

uint64_t sub_1CE0B45F8()
{
  return MEMORY[0x1E0D90EF0]();
}

uint64_t sub_1CE0B4604()
{
  return MEMORY[0x1E0D90F08]();
}

uint64_t sub_1CE0B4610()
{
  return MEMORY[0x1E0D90FD0]();
}

uint64_t sub_1CE0B461C()
{
  return MEMORY[0x1E0D90FF0]();
}

uint64_t sub_1CE0B4628()
{
  return MEMORY[0x1E0D91028]();
}

uint64_t sub_1CE0B4634()
{
  return MEMORY[0x1E0D91070]();
}

uint64_t sub_1CE0B4640()
{
  return MEMORY[0x1E0D91078]();
}

uint64_t sub_1CE0B464C()
{
  return MEMORY[0x1E0D91080]();
}

uint64_t sub_1CE0B4658()
{
  return MEMORY[0x1E0D91088]();
}

uint64_t sub_1CE0B4664()
{
  return MEMORY[0x1E0D91090]();
}

uint64_t sub_1CE0B4670()
{
  return MEMORY[0x1E0D91098]();
}

uint64_t sub_1CE0B467C()
{
  return MEMORY[0x1E0D910A0]();
}

uint64_t sub_1CE0B4688()
{
  return MEMORY[0x1E0D910A8]();
}

uint64_t sub_1CE0B4694()
{
  return MEMORY[0x1E0D910B0]();
}

uint64_t sub_1CE0B46A0()
{
  return MEMORY[0x1E0D910B8]();
}

uint64_t sub_1CE0B46AC()
{
  return MEMORY[0x1E0D910D8]();
}

uint64_t sub_1CE0B46B8()
{
  return MEMORY[0x1E0D910E0]();
}

uint64_t sub_1CE0B46C4()
{
  return MEMORY[0x1E0D910E8]();
}

uint64_t sub_1CE0B46D0()
{
  return MEMORY[0x1E0D910F0]();
}

uint64_t sub_1CE0B46DC()
{
  return MEMORY[0x1E0D910F8]();
}

uint64_t sub_1CE0B46E8()
{
  return MEMORY[0x1E0D91100]();
}

uint64_t sub_1CE0B46F4()
{
  return MEMORY[0x1E0D91108]();
}

uint64_t sub_1CE0B4700()
{
  return MEMORY[0x1E0D91110]();
}

uint64_t sub_1CE0B470C()
{
  return MEMORY[0x1E0D91118]();
}

uint64_t sub_1CE0B4718()
{
  return MEMORY[0x1E0D91120]();
}

uint64_t sub_1CE0B4724()
{
  return MEMORY[0x1E0D91128]();
}

uint64_t sub_1CE0B4730()
{
  return MEMORY[0x1E0D91130]();
}

uint64_t sub_1CE0B473C()
{
  return MEMORY[0x1E0D91138]();
}

uint64_t sub_1CE0B4748()
{
  return MEMORY[0x1E0D91140]();
}

uint64_t sub_1CE0B4754()
{
  return MEMORY[0x1E0D91148]();
}

uint64_t sub_1CE0B4760()
{
  return MEMORY[0x1E0D91150]();
}

uint64_t sub_1CE0B476C()
{
  return MEMORY[0x1E0D91160]();
}

uint64_t sub_1CE0B4778()
{
  return MEMORY[0x1E0D91168]();
}

uint64_t sub_1CE0B4784()
{
  return MEMORY[0x1E0D91170]();
}

uint64_t sub_1CE0B4790()
{
  return MEMORY[0x1E0D91178]();
}

uint64_t sub_1CE0B479C()
{
  return MEMORY[0x1E0D91180]();
}

uint64_t sub_1CE0B47A8()
{
  return MEMORY[0x1E0D91188]();
}

uint64_t sub_1CE0B47B4()
{
  return MEMORY[0x1E0D91190]();
}

uint64_t sub_1CE0B47C0()
{
  return MEMORY[0x1E0D91198]();
}

uint64_t sub_1CE0B47CC()
{
  return MEMORY[0x1E0D911A0]();
}

uint64_t sub_1CE0B47D8()
{
  return MEMORY[0x1E0D911A8]();
}

uint64_t sub_1CE0B47E4()
{
  return MEMORY[0x1E0D911B0]();
}

uint64_t sub_1CE0B47F0()
{
  return MEMORY[0x1E0D911B8]();
}

uint64_t sub_1CE0B47FC()
{
  return MEMORY[0x1E0D911C0]();
}

uint64_t sub_1CE0B4808()
{
  return MEMORY[0x1E0D911C8]();
}

uint64_t sub_1CE0B4814()
{
  return MEMORY[0x1E0D911D0]();
}

uint64_t sub_1CE0B4820()
{
  return MEMORY[0x1E0D911D8]();
}

uint64_t sub_1CE0B482C()
{
  return MEMORY[0x1E0D911F8]();
}

uint64_t sub_1CE0B4838()
{
  return MEMORY[0x1E0D91210]();
}

uint64_t sub_1CE0B4844()
{
  return MEMORY[0x1E0D91218]();
}

uint64_t sub_1CE0B4850()
{
  return MEMORY[0x1E0D91220]();
}

uint64_t sub_1CE0B485C()
{
  return MEMORY[0x1E0D91240]();
}

uint64_t sub_1CE0B4868()
{
  return MEMORY[0x1E0D91268]();
}

uint64_t sub_1CE0B4874()
{
  return MEMORY[0x1E0D91270]();
}

uint64_t sub_1CE0B4880()
{
  return MEMORY[0x1E0D91278]();
}

uint64_t sub_1CE0B488C()
{
  return MEMORY[0x1E0D912B8]();
}

uint64_t sub_1CE0B4898()
{
  return MEMORY[0x1E0D912D8]();
}

uint64_t sub_1CE0B48A4()
{
  return MEMORY[0x1E0D91318]();
}

uint64_t sub_1CE0B48B0()
{
  return MEMORY[0x1E0D91350]();
}

uint64_t sub_1CE0B48BC()
{
  return MEMORY[0x1E0D91390]();
}

uint64_t sub_1CE0B48C8()
{
  return MEMORY[0x1E0D913F0]();
}

uint64_t sub_1CE0B48D4()
{
  return MEMORY[0x1E0D91430]();
}

uint64_t sub_1CE0B48E0()
{
  return MEMORY[0x1E0D91438]();
}

uint64_t sub_1CE0B48EC()
{
  return MEMORY[0x1E0D91440]();
}

uint64_t sub_1CE0B48F8()
{
  return MEMORY[0x1E0D91450]();
}

uint64_t sub_1CE0B4904()
{
  return MEMORY[0x1E0D91470]();
}

uint64_t sub_1CE0B4910()
{
  return MEMORY[0x1E0D91528]();
}

uint64_t sub_1CE0B491C()
{
  return MEMORY[0x1E0D91538]();
}

uint64_t sub_1CE0B4928()
{
  return MEMORY[0x1E0D91540]();
}

uint64_t sub_1CE0B4934()
{
  return MEMORY[0x1E0D91550]();
}

uint64_t sub_1CE0B4940()
{
  return MEMORY[0x1E0D91558]();
}

uint64_t sub_1CE0B494C()
{
  return MEMORY[0x1E0D91560]();
}

uint64_t sub_1CE0B4958()
{
  return MEMORY[0x1E0D91568]();
}

uint64_t sub_1CE0B4964()
{
  return MEMORY[0x1E0D91570]();
}

uint64_t sub_1CE0B4970()
{
  return MEMORY[0x1E0D91578]();
}

uint64_t sub_1CE0B497C()
{
  return MEMORY[0x1E0D91580]();
}

uint64_t sub_1CE0B4988()
{
  return MEMORY[0x1E0D91588]();
}

uint64_t sub_1CE0B4994()
{
  return MEMORY[0x1E0D91590]();
}

uint64_t sub_1CE0B49A0()
{
  return MEMORY[0x1E0D91598]();
}

uint64_t sub_1CE0B49AC()
{
  return MEMORY[0x1E0D915A8]();
}

uint64_t sub_1CE0B49B8()
{
  return MEMORY[0x1E0D91608]();
}

uint64_t sub_1CE0B49C4()
{
  return MEMORY[0x1E0D91648]();
}

uint64_t sub_1CE0B49D0()
{
  return MEMORY[0x1E0D91650]();
}

uint64_t sub_1CE0B49DC()
{
  return MEMORY[0x1E0D91658]();
}

uint64_t sub_1CE0B49E8()
{
  return MEMORY[0x1E0D91660]();
}

uint64_t sub_1CE0B49F4()
{
  return MEMORY[0x1E0D91668]();
}

uint64_t sub_1CE0B4A00()
{
  return MEMORY[0x1E0D91688]();
}

uint64_t sub_1CE0B4A0C()
{
  return MEMORY[0x1E0D916B8]();
}

uint64_t sub_1CE0B4A18()
{
  return MEMORY[0x1E0D916C0]();
}

uint64_t sub_1CE0B4A24()
{
  return MEMORY[0x1E0D916C8]();
}

uint64_t sub_1CE0B4A30()
{
  return MEMORY[0x1E0D91728]();
}

uint64_t sub_1CE0B4A3C()
{
  return MEMORY[0x1E0D91770]();
}

uint64_t sub_1CE0B4A48()
{
  return MEMORY[0x1E0D917D0]();
}

uint64_t sub_1CE0B4A54()
{
  return MEMORY[0x1E0D917E8]();
}

uint64_t sub_1CE0B4A60()
{
  return MEMORY[0x1E0D917F0]();
}

uint64_t sub_1CE0B4A6C()
{
  return MEMORY[0x1E0D917F8]();
}

uint64_t sub_1CE0B4A78()
{
  return MEMORY[0x1E0D918D0]();
}

uint64_t sub_1CE0B4A84()
{
  return MEMORY[0x1E0D918E0]();
}

uint64_t sub_1CE0B4A90()
{
  return MEMORY[0x1E0D918F8]();
}

uint64_t sub_1CE0B4A9C()
{
  return MEMORY[0x1E0D91950]();
}

uint64_t sub_1CE0B4AA8()
{
  return MEMORY[0x1E0D91998]();
}

uint64_t sub_1CE0B4AB4()
{
  return MEMORY[0x1E0D919A0]();
}

uint64_t sub_1CE0B4AC0()
{
  return MEMORY[0x1E0D919A8]();
}

uint64_t sub_1CE0B4ACC()
{
  return MEMORY[0x1E0D919B0]();
}

uint64_t sub_1CE0B4AD8()
{
  return MEMORY[0x1E0D919B8]();
}

uint64_t sub_1CE0B4AE4()
{
  return MEMORY[0x1E0D919C0]();
}

uint64_t sub_1CE0B4AF0()
{
  return MEMORY[0x1E0D919F0]();
}

uint64_t sub_1CE0B4AFC()
{
  return MEMORY[0x1E0D919F8]();
}

uint64_t sub_1CE0B4B08()
{
  return MEMORY[0x1E0D91A30]();
}

uint64_t sub_1CE0B4B14()
{
  return MEMORY[0x1E0D91A78]();
}

uint64_t sub_1CE0B4B20()
{
  return MEMORY[0x1E0D91AA8]();
}

uint64_t sub_1CE0B4B2C()
{
  return MEMORY[0x1E0D91AB0]();
}

uint64_t sub_1CE0B4B38()
{
  return MEMORY[0x1E0D91AB8]();
}

uint64_t sub_1CE0B4B44()
{
  return MEMORY[0x1E0D91AC8]();
}

uint64_t sub_1CE0B4B50()
{
  return MEMORY[0x1E0D91BD8]();
}

uint64_t sub_1CE0B4B5C()
{
  return MEMORY[0x1E0D91BF0]();
}

uint64_t sub_1CE0B4B68()
{
  return MEMORY[0x1E0D91C48]();
}

uint64_t sub_1CE0B4B74()
{
  return MEMORY[0x1E0D91C70]();
}

uint64_t sub_1CE0B4B80()
{
  return MEMORY[0x1E0D91C78]();
}

uint64_t sub_1CE0B4B8C()
{
  return MEMORY[0x1E0D91C90]();
}

uint64_t sub_1CE0B4B98()
{
  return MEMORY[0x1E0D91CA8]();
}

uint64_t sub_1CE0B4BA4()
{
  return MEMORY[0x1E0D91CB8]();
}

uint64_t sub_1CE0B4BB0()
{
  return MEMORY[0x1E0D91CC0]();
}

uint64_t sub_1CE0B4BBC()
{
  return MEMORY[0x1E0D91CE0]();
}

uint64_t sub_1CE0B4BC8()
{
  return MEMORY[0x1E0D91E18]();
}

uint64_t sub_1CE0B4BD4()
{
  return MEMORY[0x1E0D91E38]();
}

uint64_t sub_1CE0B4BE0()
{
  return MEMORY[0x1E0D91E50]();
}

uint64_t sub_1CE0B4BEC()
{
  return MEMORY[0x1E0D91E68]();
}

uint64_t sub_1CE0B4BF8()
{
  return MEMORY[0x1E0D91E98]();
}

uint64_t sub_1CE0B4C04()
{
  return MEMORY[0x1E0D91F18]();
}

uint64_t sub_1CE0B4C10()
{
  return MEMORY[0x1E0D91F50]();
}

uint64_t sub_1CE0B4C1C()
{
  return MEMORY[0x1E0D91F78]();
}

uint64_t sub_1CE0B4C28()
{
  return MEMORY[0x1E0D91FA0]();
}

uint64_t sub_1CE0B4C34()
{
  return MEMORY[0x1E0D92008]();
}

uint64_t sub_1CE0B4C40()
{
  return MEMORY[0x1E0D920D0]();
}

uint64_t sub_1CE0B4C4C()
{
  return MEMORY[0x1E0D92120]();
}

uint64_t sub_1CE0B4C58()
{
  return MEMORY[0x1E0D92158]();
}

uint64_t sub_1CE0B4C64()
{
  return MEMORY[0x1E0D92168]();
}

uint64_t sub_1CE0B4C70()
{
  return MEMORY[0x1E0D92188]();
}

uint64_t sub_1CE0B4C7C()
{
  return MEMORY[0x1E0D921B0]();
}

uint64_t sub_1CE0B4C88()
{
  return MEMORY[0x1E0D92240]();
}

uint64_t sub_1CE0B4C94()
{
  return MEMORY[0x1E0D922A8]();
}

uint64_t sub_1CE0B4CA0()
{
  return MEMORY[0x1E0D92310]();
}

uint64_t sub_1CE0B4CAC()
{
  return MEMORY[0x1E0D92388]();
}

uint64_t sub_1CE0B4CB8()
{
  return MEMORY[0x1E0D923E0]();
}

uint64_t sub_1CE0B4CC4()
{
  return MEMORY[0x1E0D923E8]();
}

uint64_t sub_1CE0B4CD0()
{
  return MEMORY[0x1E0D923F0]();
}

uint64_t sub_1CE0B4CDC()
{
  return MEMORY[0x1E0D92410]();
}

uint64_t sub_1CE0B4CE8()
{
  return MEMORY[0x1E0D92478]();
}

uint64_t sub_1CE0B4CF4()
{
  return MEMORY[0x1E0D924A0]();
}

uint64_t sub_1CE0B4D00()
{
  return MEMORY[0x1E0D924A8]();
}

uint64_t sub_1CE0B4D0C()
{
  return MEMORY[0x1E0D924E0]();
}

uint64_t sub_1CE0B4D18()
{
  return MEMORY[0x1E0D924F8]();
}

uint64_t sub_1CE0B4D24()
{
  return MEMORY[0x1E0D92568]();
}

uint64_t sub_1CE0B4D30()
{
  return MEMORY[0x1E0D92570]();
}

uint64_t sub_1CE0B4D3C()
{
  return MEMORY[0x1E0D925A0]();
}

uint64_t sub_1CE0B4D48()
{
  return MEMORY[0x1E0D925B8]();
}

uint64_t sub_1CE0B4D54()
{
  return MEMORY[0x1E0D926E8]();
}

uint64_t sub_1CE0B4D60()
{
  return MEMORY[0x1E0D92710]();
}

uint64_t sub_1CE0B4D6C()
{
  return MEMORY[0x1E0D92720]();
}

uint64_t sub_1CE0B4D78()
{
  return MEMORY[0x1E0D92728]();
}

uint64_t sub_1CE0B4D84()
{
  return MEMORY[0x1E0D92730]();
}

uint64_t sub_1CE0B4D90()
{
  return MEMORY[0x1E0D92768]();
}

uint64_t sub_1CE0B4D9C()
{
  return MEMORY[0x1E0D92790]();
}

uint64_t sub_1CE0B4DA8()
{
  return MEMORY[0x1E0D92848]();
}

uint64_t sub_1CE0B4DB4()
{
  return MEMORY[0x1E0D92860]();
}

uint64_t sub_1CE0B4DC0()
{
  return MEMORY[0x1E0D92868]();
}

uint64_t sub_1CE0B4DCC()
{
  return MEMORY[0x1E0D92870]();
}

uint64_t sub_1CE0B4DD8()
{
  return MEMORY[0x1E0D92878]();
}

uint64_t sub_1CE0B4DE4()
{
  return MEMORY[0x1E0D928A0]();
}

uint64_t sub_1CE0B4DF0()
{
  return MEMORY[0x1E0D928D8]();
}

uint64_t sub_1CE0B4DFC()
{
  return MEMORY[0x1E0D92900]();
}

uint64_t sub_1CE0B4E08()
{
  return MEMORY[0x1E0D92920]();
}

uint64_t sub_1CE0B4E14()
{
  return MEMORY[0x1E0D92928]();
}

uint64_t sub_1CE0B4E20()
{
  return MEMORY[0x1E0D92930]();
}

uint64_t _s13SeymourClient26AssetBundleProgressUpdatedV18debounceIdentifierSSvg_0()
{
  return MEMORY[0x1E0D92938]();
}

uint64_t sub_1CE0B4E38()
{
  return MEMORY[0x1E0D92940]();
}

uint64_t sub_1CE0B4E44()
{
  return MEMORY[0x1E0D92958]();
}

uint64_t sub_1CE0B4E50()
{
  return MEMORY[0x1E0D92980]();
}

uint64_t sub_1CE0B4E5C()
{
  return MEMORY[0x1E0D929D0]();
}

uint64_t sub_1CE0B4E68()
{
  return MEMORY[0x1E0D92AE8]();
}

uint64_t sub_1CE0B4E74()
{
  return MEMORY[0x1E0D92AF0]();
}

uint64_t sub_1CE0B4E80()
{
  return MEMORY[0x1E0D92B10]();
}

uint64_t sub_1CE0B4E8C()
{
  return MEMORY[0x1E0D92B38]();
}

uint64_t sub_1CE0B4E98()
{
  return MEMORY[0x1E0D92B40]();
}

uint64_t sub_1CE0B4EA4()
{
  return MEMORY[0x1E0D92B48]();
}

uint64_t sub_1CE0B4EB0()
{
  return MEMORY[0x1E0D92B60]();
}

uint64_t sub_1CE0B4EBC()
{
  return MEMORY[0x1E0D92B78]();
}

uint64_t sub_1CE0B4EC8()
{
  return MEMORY[0x1E0D92BE0]();
}

uint64_t sub_1CE0B4ED4()
{
  return MEMORY[0x1E0D92CB8]();
}

uint64_t sub_1CE0B4EE0()
{
  return MEMORY[0x1E0D92D10]();
}

uint64_t sub_1CE0B4EEC()
{
  return MEMORY[0x1E0D92D18]();
}

uint64_t sub_1CE0B4EF8()
{
  return MEMORY[0x1E0D92D20]();
}

uint64_t sub_1CE0B4F04()
{
  return MEMORY[0x1E0D92D28]();
}

uint64_t sub_1CE0B4F10()
{
  return MEMORY[0x1E0D92D30]();
}

uint64_t sub_1CE0B4F1C()
{
  return MEMORY[0x1E0D92D38]();
}

uint64_t sub_1CE0B4F28()
{
  return MEMORY[0x1E0D92D40]();
}

uint64_t sub_1CE0B4F34()
{
  return MEMORY[0x1E0D92D50]();
}

uint64_t sub_1CE0B4F40()
{
  return MEMORY[0x1E0D92D58]();
}

uint64_t sub_1CE0B4F4C()
{
  return MEMORY[0x1E0D92D60]();
}

uint64_t sub_1CE0B4F58()
{
  return MEMORY[0x1E0D92D68]();
}

uint64_t sub_1CE0B4F64()
{
  return MEMORY[0x1E0D92D70]();
}

uint64_t sub_1CE0B4F70()
{
  return MEMORY[0x1E0D92D78]();
}

uint64_t sub_1CE0B4F7C()
{
  return MEMORY[0x1E0D92D80]();
}

uint64_t sub_1CE0B4F88()
{
  return MEMORY[0x1E0D92D88]();
}

uint64_t sub_1CE0B4F94()
{
  return MEMORY[0x1E0D92D90]();
}

uint64_t sub_1CE0B4FA0()
{
  return MEMORY[0x1E0D92D98]();
}

uint64_t sub_1CE0B4FAC()
{
  return MEMORY[0x1E0D92DA0]();
}

uint64_t sub_1CE0B4FB8()
{
  return MEMORY[0x1E0D92DB8]();
}

uint64_t sub_1CE0B4FC4()
{
  return MEMORY[0x1E0D92EC8]();
}

uint64_t sub_1CE0B4FD0()
{
  return MEMORY[0x1E0D92EF8]();
}

uint64_t sub_1CE0B4FDC()
{
  return MEMORY[0x1E0D92F30]();
}

uint64_t sub_1CE0B4FE8()
{
  return MEMORY[0x1E0D92F98]();
}

uint64_t sub_1CE0B4FF4()
{
  return MEMORY[0x1E0D92FA0]();
}

uint64_t sub_1CE0B5000()
{
  return MEMORY[0x1E0D92FA8]();
}

uint64_t sub_1CE0B500C()
{
  return MEMORY[0x1E0D92FD8]();
}

uint64_t sub_1CE0B5018()
{
  return MEMORY[0x1E0D93000]();
}

uint64_t sub_1CE0B5024()
{
  return MEMORY[0x1E0D930B0]();
}

uint64_t sub_1CE0B5030()
{
  return MEMORY[0x1E0D930D8]();
}

uint64_t sub_1CE0B503C()
{
  return MEMORY[0x1E0D93128]();
}

uint64_t sub_1CE0B5048()
{
  return MEMORY[0x1E0D93158]();
}

uint64_t sub_1CE0B5054()
{
  return MEMORY[0x1E0D931B8]();
}

uint64_t sub_1CE0B5060()
{
  return MEMORY[0x1E0D931C0]();
}

uint64_t sub_1CE0B506C()
{
  return MEMORY[0x1E0D931C8]();
}

uint64_t sub_1CE0B5078()
{
  return MEMORY[0x1E0D931E0]();
}

uint64_t sub_1CE0B5084()
{
  return MEMORY[0x1E0D93228]();
}

uint64_t sub_1CE0B5090()
{
  return MEMORY[0x1E0D93288]();
}

uint64_t sub_1CE0B509C()
{
  return MEMORY[0x1E0D932E0]();
}

uint64_t sub_1CE0B50A8()
{
  return MEMORY[0x1E0D933F0]();
}

uint64_t sub_1CE0B50B4()
{
  return MEMORY[0x1E0D93468]();
}

uint64_t sub_1CE0B50C0()
{
  return MEMORY[0x1E0D934C8]();
}

uint64_t sub_1CE0B50CC()
{
  return MEMORY[0x1E0D93550]();
}

uint64_t sub_1CE0B50D8()
{
  return MEMORY[0x1E0D935D8]();
}

uint64_t sub_1CE0B50E4()
{
  return MEMORY[0x1E0D937F0]();
}

uint64_t sub_1CE0B50F0()
{
  return MEMORY[0x1E0D93878]();
}

uint64_t sub_1CE0B50FC()
{
  return MEMORY[0x1E0D938E8]();
}

uint64_t sub_1CE0B5108()
{
  return MEMORY[0x1E0D938F0]();
}

uint64_t sub_1CE0B5114()
{
  return MEMORY[0x1E0D938F8]();
}

uint64_t sub_1CE0B5120()
{
  return MEMORY[0x1E0D93900]();
}

uint64_t sub_1CE0B512C()
{
  return MEMORY[0x1E0D93908]();
}

uint64_t sub_1CE0B5138()
{
  return MEMORY[0x1E0D93910]();
}

uint64_t sub_1CE0B5144()
{
  return MEMORY[0x1E0D939B8]();
}

uint64_t sub_1CE0B5150()
{
  return MEMORY[0x1E0D939D8]();
}

uint64_t sub_1CE0B515C()
{
  return MEMORY[0x1E0D939E0]();
}

uint64_t sub_1CE0B5168()
{
  return MEMORY[0x1E0D939E8]();
}

uint64_t sub_1CE0B5174()
{
  return MEMORY[0x1E0D939F0]();
}

uint64_t sub_1CE0B5180()
{
  return MEMORY[0x1E0D93A10]();
}

uint64_t sub_1CE0B518C()
{
  return MEMORY[0x1E0D93A40]();
}

uint64_t sub_1CE0B5198()
{
  return MEMORY[0x1E0D93A80]();
}

uint64_t sub_1CE0B51A4()
{
  return MEMORY[0x1E0D93AA0]();
}

uint64_t sub_1CE0B51B0()
{
  return MEMORY[0x1E0D93B40]();
}

uint64_t sub_1CE0B51BC()
{
  return MEMORY[0x1E0D93B48]();
}

uint64_t sub_1CE0B51C8()
{
  return MEMORY[0x1E0D93B68]();
}

uint64_t sub_1CE0B51D4()
{
  return MEMORY[0x1E0D93BB0]();
}

uint64_t sub_1CE0B51E0()
{
  return MEMORY[0x1E0D93BB8]();
}

uint64_t sub_1CE0B51EC()
{
  return MEMORY[0x1E0D93CB0]();
}

uint64_t sub_1CE0B51F8()
{
  return MEMORY[0x1E0D93CB8]();
}

uint64_t sub_1CE0B5204()
{
  return MEMORY[0x1E0D93CC0]();
}

uint64_t sub_1CE0B5210()
{
  return MEMORY[0x1E0D93CE0]();
}

uint64_t sub_1CE0B521C()
{
  return MEMORY[0x1E0D93CF0]();
}

uint64_t sub_1CE0B5228()
{
  return MEMORY[0x1E0D93D28]();
}

uint64_t sub_1CE0B5234()
{
  return MEMORY[0x1E0D93D88]();
}

uint64_t sub_1CE0B5240()
{
  return MEMORY[0x1E0D93E00]();
}

uint64_t sub_1CE0B524C()
{
  return MEMORY[0x1E0D93E58]();
}

uint64_t sub_1CE0B5258()
{
  return MEMORY[0x1E0D93ED8]();
}

uint64_t sub_1CE0B5264()
{
  return MEMORY[0x1E0D93EE0]();
}

uint64_t sub_1CE0B5270()
{
  return MEMORY[0x1E0D93EE8]();
}

uint64_t sub_1CE0B527C()
{
  return MEMORY[0x1E0D93EF0]();
}

uint64_t sub_1CE0B5288()
{
  return MEMORY[0x1E0D93EF8]();
}

uint64_t sub_1CE0B5294()
{
  return MEMORY[0x1E0D93F00]();
}

uint64_t sub_1CE0B52A0()
{
  return MEMORY[0x1E0D93F08]();
}

uint64_t sub_1CE0B52AC()
{
  return MEMORY[0x1E0D93F10]();
}

uint64_t sub_1CE0B52B8()
{
  return MEMORY[0x1E0D93F18]();
}

uint64_t sub_1CE0B52C4()
{
  return MEMORY[0x1E0D93F20]();
}

uint64_t sub_1CE0B52D0()
{
  return MEMORY[0x1E0D93F28]();
}

uint64_t sub_1CE0B52DC()
{
  return MEMORY[0x1E0D93F30]();
}

uint64_t sub_1CE0B52E8()
{
  return MEMORY[0x1E0D93F40]();
}

uint64_t sub_1CE0B52F4()
{
  return MEMORY[0x1E0D93F50]();
}

uint64_t sub_1CE0B5300()
{
  return MEMORY[0x1E0D93F58]();
}

uint64_t sub_1CE0B530C()
{
  return MEMORY[0x1E0D93F80]();
}

uint64_t sub_1CE0B5318()
{
  return MEMORY[0x1E0D93FF8]();
}

uint64_t sub_1CE0B5324()
{
  return MEMORY[0x1E0D94040]();
}

uint64_t sub_1CE0B5330()
{
  return MEMORY[0x1E0D94090]();
}

uint64_t sub_1CE0B533C()
{
  return MEMORY[0x1E0D940A0]();
}

uint64_t sub_1CE0B5348()
{
  return MEMORY[0x1E0D940E0]();
}

uint64_t sub_1CE0B5354()
{
  return MEMORY[0x1E0D94118]();
}

uint64_t sub_1CE0B5360()
{
  return MEMORY[0x1E0D94130]();
}

uint64_t sub_1CE0B536C()
{
  return MEMORY[0x1E0D94150]();
}

uint64_t sub_1CE0B5378()
{
  return MEMORY[0x1E0D94168]();
}

uint64_t sub_1CE0B5384()
{
  return MEMORY[0x1E0D94170]();
}

uint64_t sub_1CE0B5390()
{
  return MEMORY[0x1E0D94198]();
}

uint64_t sub_1CE0B539C()
{
  return MEMORY[0x1E0D941D8]();
}

uint64_t sub_1CE0B53A8()
{
  return MEMORY[0x1E0D94200]();
}

uint64_t sub_1CE0B53B4()
{
  return MEMORY[0x1E0D94240]();
}

uint64_t sub_1CE0B53C0()
{
  return MEMORY[0x1E0D94248]();
}

uint64_t sub_1CE0B53CC()
{
  return MEMORY[0x1E0D94278]();
}

uint64_t sub_1CE0B53D8()
{
  return MEMORY[0x1E0D942A0]();
}

uint64_t sub_1CE0B53E4()
{
  return MEMORY[0x1E0D942F0]();
}

uint64_t sub_1CE0B53F0()
{
  return MEMORY[0x1E0D94318]();
}

uint64_t sub_1CE0B53FC()
{
  return MEMORY[0x1E0D94338]();
}

uint64_t sub_1CE0B5408()
{
  return MEMORY[0x1E0D943D0]();
}

uint64_t sub_1CE0B5414()
{
  return MEMORY[0x1E0D94420]();
}

uint64_t sub_1CE0B5420()
{
  return MEMORY[0x1E0D94438]();
}

uint64_t sub_1CE0B542C()
{
  return MEMORY[0x1E0D94488]();
}

uint64_t sub_1CE0B5438()
{
  return MEMORY[0x1E0D944B0]();
}

uint64_t sub_1CE0B5444()
{
  return MEMORY[0x1E0D944D0]();
}

uint64_t sub_1CE0B5450()
{
  return MEMORY[0x1E0D94500]();
}

uint64_t sub_1CE0B545C()
{
  return MEMORY[0x1E0D94588]();
}

uint64_t sub_1CE0B5468()
{
  return MEMORY[0x1E0D94598]();
}

uint64_t sub_1CE0B5474()
{
  return MEMORY[0x1E0D945A8]();
}

uint64_t sub_1CE0B5480()
{
  return MEMORY[0x1E0D945B0]();
}

uint64_t sub_1CE0B548C()
{
  return MEMORY[0x1E0D94688]();
}

uint64_t sub_1CE0B5498()
{
  return MEMORY[0x1E0D94698]();
}

uint64_t sub_1CE0B54A4()
{
  return MEMORY[0x1E0D94710]();
}

uint64_t sub_1CE0B54B0()
{
  return MEMORY[0x1E0D94730]();
}

uint64_t sub_1CE0B54BC()
{
  return MEMORY[0x1E0D947B0]();
}

uint64_t sub_1CE0B54C8()
{
  return MEMORY[0x1E0D947C8]();
}

uint64_t sub_1CE0B54D4()
{
  return MEMORY[0x1E0D94868]();
}

uint64_t sub_1CE0B54E0()
{
  return MEMORY[0x1E0D948F8]();
}

uint64_t sub_1CE0B54EC()
{
  return MEMORY[0x1E0D94920]();
}

uint64_t sub_1CE0B54F8()
{
  return MEMORY[0x1E0D94940]();
}

uint64_t sub_1CE0B5504()
{
  return MEMORY[0x1E0D94978]();
}

uint64_t sub_1CE0B5510()
{
  return MEMORY[0x1E0D949A0]();
}

uint64_t sub_1CE0B551C()
{
  return MEMORY[0x1E0D949A8]();
}

uint64_t sub_1CE0B5528()
{
  return MEMORY[0x1E0D949B0]();
}

uint64_t sub_1CE0B5534()
{
  return MEMORY[0x1E0D949B8]();
}

uint64_t sub_1CE0B5540()
{
  return MEMORY[0x1E0D949C0]();
}

uint64_t sub_1CE0B554C()
{
  return MEMORY[0x1E0D949C8]();
}

uint64_t sub_1CE0B5558()
{
  return MEMORY[0x1E0D949D0]();
}

uint64_t sub_1CE0B5564()
{
  return MEMORY[0x1E0D949D8]();
}

uint64_t sub_1CE0B5570()
{
  return MEMORY[0x1E0D949E0]();
}

uint64_t sub_1CE0B557C()
{
  return MEMORY[0x1E0D949E8]();
}

uint64_t sub_1CE0B5588()
{
  return MEMORY[0x1E0D949F0]();
}

uint64_t sub_1CE0B5594()
{
  return MEMORY[0x1E0D949F8]();
}

uint64_t sub_1CE0B55A0()
{
  return MEMORY[0x1E0D94A00]();
}

uint64_t sub_1CE0B55AC()
{
  return MEMORY[0x1E0D94A08]();
}

uint64_t sub_1CE0B55B8()
{
  return MEMORY[0x1E0D94A10]();
}

uint64_t sub_1CE0B55C4()
{
  return MEMORY[0x1E0D94A18]();
}

uint64_t sub_1CE0B55D0()
{
  return MEMORY[0x1E0D94A20]();
}

uint64_t sub_1CE0B55DC()
{
  return MEMORY[0x1E0D94A28]();
}

uint64_t sub_1CE0B55E8()
{
  return MEMORY[0x1E0D94A30]();
}

uint64_t sub_1CE0B55F4()
{
  return MEMORY[0x1E0D94A38]();
}

uint64_t sub_1CE0B5600()
{
  return MEMORY[0x1E0D94A40]();
}

uint64_t sub_1CE0B560C()
{
  return MEMORY[0x1E0D94A48]();
}

uint64_t sub_1CE0B5618()
{
  return MEMORY[0x1E0D94A50]();
}

uint64_t sub_1CE0B5624()
{
  return MEMORY[0x1E0D94A58]();
}

uint64_t sub_1CE0B5630()
{
  return MEMORY[0x1E0D94A60]();
}

uint64_t sub_1CE0B563C()
{
  return MEMORY[0x1E0D94A68]();
}

uint64_t sub_1CE0B5648()
{
  return MEMORY[0x1E0D94A70]();
}

uint64_t sub_1CE0B5654()
{
  return MEMORY[0x1E0D94A78]();
}

uint64_t sub_1CE0B5660()
{
  return MEMORY[0x1E0D94A80]();
}

uint64_t sub_1CE0B566C()
{
  return MEMORY[0x1E0D94A90]();
}

uint64_t sub_1CE0B5678()
{
  return MEMORY[0x1E0D94A98]();
}

uint64_t sub_1CE0B5684()
{
  return MEMORY[0x1E0D94AA8]();
}

uint64_t sub_1CE0B5690()
{
  return MEMORY[0x1E0D94AC0]();
}

uint64_t sub_1CE0B569C()
{
  return MEMORY[0x1E0D94B28]();
}

uint64_t sub_1CE0B56A8()
{
  return MEMORY[0x1E0D94B40]();
}

uint64_t sub_1CE0B56B4()
{
  return MEMORY[0x1E0D94B48]();
}

uint64_t sub_1CE0B56C0()
{
  return MEMORY[0x1E0D94BA0]();
}

uint64_t sub_1CE0B56CC()
{
  return MEMORY[0x1E0D94C58]();
}

uint64_t sub_1CE0B56D8()
{
  return MEMORY[0x1E0D94C70]();
}

uint64_t sub_1CE0B56E4()
{
  return MEMORY[0x1E0D94C88]();
}

uint64_t sub_1CE0B56F0()
{
  return MEMORY[0x1E0D94C90]();
}

uint64_t sub_1CE0B56FC()
{
  return MEMORY[0x1E0D94CC0]();
}

uint64_t sub_1CE0B5708()
{
  return MEMORY[0x1E0D94CE0]();
}

uint64_t sub_1CE0B5714()
{
  return MEMORY[0x1E0D94CE8]();
}

uint64_t sub_1CE0B5720()
{
  return MEMORY[0x1E0D94D10]();
}

uint64_t sub_1CE0B572C()
{
  return MEMORY[0x1E0D94D40]();
}

uint64_t sub_1CE0B5738()
{
  return MEMORY[0x1E0D94D60]();
}

uint64_t sub_1CE0B5744()
{
  return MEMORY[0x1E0D94DA8]();
}

uint64_t sub_1CE0B5750()
{
  return MEMORY[0x1E0D94DB0]();
}

uint64_t sub_1CE0B575C()
{
  return MEMORY[0x1E0D94DB8]();
}

uint64_t sub_1CE0B5768()
{
  return MEMORY[0x1E0D94DC0]();
}

uint64_t sub_1CE0B5774()
{
  return MEMORY[0x1E0D94DC8]();
}

uint64_t sub_1CE0B5780()
{
  return MEMORY[0x1E0D94DD8]();
}

uint64_t sub_1CE0B578C()
{
  return MEMORY[0x1E0D94DE0]();
}

uint64_t sub_1CE0B5798()
{
  return MEMORY[0x1E0D94DF0]();
}

uint64_t sub_1CE0B57A4()
{
  return MEMORY[0x1E0D94E18]();
}

uint64_t sub_1CE0B57B0()
{
  return MEMORY[0x1E0D94EB0]();
}

uint64_t sub_1CE0B57BC()
{
  return MEMORY[0x1E0D94ED8]();
}

uint64_t sub_1CE0B57C8()
{
  return MEMORY[0x1E0D94EF8]();
}

uint64_t sub_1CE0B57D4()
{
  return MEMORY[0x1E0D94F38]();
}

uint64_t sub_1CE0B57E0()
{
  return MEMORY[0x1E0D94F60]();
}

uint64_t sub_1CE0B57EC()
{
  return MEMORY[0x1E0D94F68]();
}

uint64_t sub_1CE0B57F8()
{
  return MEMORY[0x1E0D94FF8]();
}

uint64_t sub_1CE0B5804()
{
  return MEMORY[0x1E0D95010]();
}

uint64_t sub_1CE0B5810()
{
  return MEMORY[0x1E0D95028]();
}

uint64_t sub_1CE0B581C()
{
  return MEMORY[0x1E0D95048]();
}

uint64_t sub_1CE0B5828()
{
  return MEMORY[0x1E0D95058]();
}

uint64_t sub_1CE0B5834()
{
  return MEMORY[0x1E0D95060]();
}

uint64_t sub_1CE0B5840()
{
  return MEMORY[0x1E0D95080]();
}

uint64_t sub_1CE0B584C()
{
  return MEMORY[0x1E0D950A0]();
}

uint64_t sub_1CE0B5858()
{
  return MEMORY[0x1E0D950A8]();
}

uint64_t sub_1CE0B5864()
{
  return MEMORY[0x1E0D950C0]();
}

uint64_t sub_1CE0B5870()
{
  return MEMORY[0x1E0D950E8]();
}

uint64_t sub_1CE0B587C()
{
  return MEMORY[0x1E0D95110]();
}

uint64_t sub_1CE0B5888()
{
  return MEMORY[0x1E0D95128]();
}

uint64_t sub_1CE0B5894()
{
  return MEMORY[0x1E0D951C8]();
}

uint64_t sub_1CE0B58A0()
{
  return MEMORY[0x1E0D951D0]();
}

uint64_t sub_1CE0B58AC()
{
  return MEMORY[0x1E0D95238]();
}

uint64_t sub_1CE0B58B8()
{
  return MEMORY[0x1E0D95480]();
}

uint64_t sub_1CE0B58C4()
{
  return MEMORY[0x1E0D95510]();
}

uint64_t sub_1CE0B58D0()
{
  return MEMORY[0x1E0D95538]();
}

uint64_t sub_1CE0B58DC()
{
  return MEMORY[0x1E0D95550]();
}

uint64_t sub_1CE0B58E8()
{
  return MEMORY[0x1E0D95558]();
}

uint64_t sub_1CE0B58F4()
{
  return MEMORY[0x1E0D95560]();
}

uint64_t sub_1CE0B5900()
{
  return MEMORY[0x1E0D95568]();
}

uint64_t sub_1CE0B590C()
{
  return MEMORY[0x1E0D95570]();
}

uint64_t sub_1CE0B5918()
{
  return MEMORY[0x1E0D95578]();
}

uint64_t sub_1CE0B5924()
{
  return MEMORY[0x1E0D95590]();
}

uint64_t sub_1CE0B5930()
{
  return MEMORY[0x1E0D955B0]();
}

uint64_t sub_1CE0B593C()
{
  return MEMORY[0x1E0D956B8]();
}

uint64_t sub_1CE0B5948()
{
  return MEMORY[0x1E0D956C0]();
}

uint64_t sub_1CE0B5954()
{
  return MEMORY[0x1E0D956F0]();
}

uint64_t sub_1CE0B5960()
{
  return MEMORY[0x1E0D95708]();
}

uint64_t sub_1CE0B596C()
{
  return MEMORY[0x1E0D95758]();
}

uint64_t sub_1CE0B5978()
{
  return MEMORY[0x1E0D95780]();
}

uint64_t sub_1CE0B5984()
{
  return MEMORY[0x1E0D957A0]();
}

uint64_t sub_1CE0B5990()
{
  return MEMORY[0x1E0D957C8]();
}

uint64_t sub_1CE0B599C()
{
  return MEMORY[0x1E0D95868]();
}

uint64_t sub_1CE0B59A8()
{
  return MEMORY[0x1E0D95870]();
}

uint64_t sub_1CE0B59B4()
{
  return MEMORY[0x1E0D95878]();
}

uint64_t sub_1CE0B59C0()
{
  return MEMORY[0x1E0D95880]();
}

uint64_t sub_1CE0B59CC()
{
  return MEMORY[0x1E0D95888]();
}

uint64_t sub_1CE0B59D8()
{
  return MEMORY[0x1E0D95890]();
}

uint64_t sub_1CE0B59E4()
{
  return MEMORY[0x1E0D95898]();
}

uint64_t sub_1CE0B59F0()
{
  return MEMORY[0x1E0D958A0]();
}

uint64_t sub_1CE0B59FC()
{
  return MEMORY[0x1E0D958A8]();
}

uint64_t sub_1CE0B5A08()
{
  return MEMORY[0x1E0D958B0]();
}

uint64_t sub_1CE0B5A14()
{
  return MEMORY[0x1E0D958B8]();
}

uint64_t sub_1CE0B5A20()
{
  return MEMORY[0x1E0D958C0]();
}

uint64_t sub_1CE0B5A2C()
{
  return MEMORY[0x1E0D958C8]();
}

uint64_t sub_1CE0B5A38()
{
  return MEMORY[0x1E0D958F0]();
}

uint64_t sub_1CE0B5A44()
{
  return MEMORY[0x1E0D95938]();
}

uint64_t sub_1CE0B5A50()
{
  return MEMORY[0x1E0D95958]();
}

uint64_t sub_1CE0B5A5C()
{
  return MEMORY[0x1E0D95980]();
}

uint64_t sub_1CE0B5A68()
{
  return MEMORY[0x1E0D959B8]();
}

uint64_t sub_1CE0B5A74()
{
  return MEMORY[0x1E0D959F8]();
}

uint64_t sub_1CE0B5A80()
{
  return MEMORY[0x1E0D95A08]();
}

uint64_t sub_1CE0B5A8C()
{
  return MEMORY[0x1E0D95A88]();
}

uint64_t sub_1CE0B5A98()
{
  return MEMORY[0x1E0D95AE0]();
}

uint64_t sub_1CE0B5AA4()
{
  return MEMORY[0x1E0D95B00]();
}

uint64_t sub_1CE0B5AB0()
{
  return MEMORY[0x1E0D95B10]();
}

uint64_t sub_1CE0B5ABC()
{
  return MEMORY[0x1E0D95B48]();
}

uint64_t sub_1CE0B5AC8()
{
  return MEMORY[0x1E0D95B58]();
}

uint64_t sub_1CE0B5AD4()
{
  return MEMORY[0x1E0D95B68]();
}

uint64_t sub_1CE0B5AE0()
{
  return MEMORY[0x1E0D95B78]();
}

uint64_t sub_1CE0B5AEC()
{
  return MEMORY[0x1E0D95B80]();
}

uint64_t sub_1CE0B5AF8()
{
  return MEMORY[0x1E0D95B88]();
}

uint64_t sub_1CE0B5B04()
{
  return MEMORY[0x1E0D95BD0]();
}

uint64_t sub_1CE0B5B10()
{
  return MEMORY[0x1E0D95C28]();
}

uint64_t sub_1CE0B5B1C()
{
  return MEMORY[0x1E0D95C48]();
}

uint64_t sub_1CE0B5B28()
{
  return MEMORY[0x1E0D95CA8]();
}

uint64_t sub_1CE0B5B34()
{
  return MEMORY[0x1E0D95CF0]();
}

uint64_t sub_1CE0B5B40()
{
  return MEMORY[0x1E0D95D18]();
}

uint64_t sub_1CE0B5B4C()
{
  return MEMORY[0x1E0D95D20]();
}

uint64_t sub_1CE0B5B58()
{
  return MEMORY[0x1E0D95DA0]();
}

uint64_t sub_1CE0B5B64()
{
  return MEMORY[0x1E0D95DD0]();
}

uint64_t sub_1CE0B5B70()
{
  return MEMORY[0x1E0D95DD8]();
}

uint64_t sub_1CE0B5B7C()
{
  return MEMORY[0x1E0D95DF0]();
}

uint64_t sub_1CE0B5B88()
{
  return MEMORY[0x1E0D95E00]();
}

uint64_t sub_1CE0B5B94()
{
  return MEMORY[0x1E0D95E28]();
}

uint64_t sub_1CE0B5BA0()
{
  return MEMORY[0x1E0D95E90]();
}

uint64_t sub_1CE0B5BAC()
{
  return MEMORY[0x1E0D95EA0]();
}

uint64_t sub_1CE0B5BB8()
{
  return MEMORY[0x1E0D95EF0]();
}

uint64_t sub_1CE0B5BC4()
{
  return MEMORY[0x1E0D95F40]();
}

uint64_t sub_1CE0B5BD0()
{
  return MEMORY[0x1E0D96040]();
}

uint64_t sub_1CE0B5BDC()
{
  return MEMORY[0x1E0D96048]();
}

uint64_t sub_1CE0B5BE8()
{
  return MEMORY[0x1E0D96050]();
}

uint64_t sub_1CE0B5BF4()
{
  return MEMORY[0x1E0D96078]();
}

uint64_t sub_1CE0B5C00()
{
  return MEMORY[0x1E0D960E0]();
}

uint64_t sub_1CE0B5C0C()
{
  return MEMORY[0x1E0D960E8]();
}

uint64_t sub_1CE0B5C18()
{
  return MEMORY[0x1E0D960F0]();
}

uint64_t sub_1CE0B5C24()
{
  return MEMORY[0x1E0D960F8]();
}

uint64_t sub_1CE0B5C30()
{
  return MEMORY[0x1E0D96100]();
}

uint64_t sub_1CE0B5C3C()
{
  return MEMORY[0x1E0D96108]();
}

uint64_t sub_1CE0B5C48()
{
  return MEMORY[0x1E0D96110]();
}

uint64_t sub_1CE0B5C54()
{
  return MEMORY[0x1E0D96118]();
}

uint64_t sub_1CE0B5C60()
{
  return MEMORY[0x1E0D96120]();
}

uint64_t sub_1CE0B5C6C()
{
  return MEMORY[0x1E0D96128]();
}

uint64_t sub_1CE0B5C78()
{
  return MEMORY[0x1E0D96138]();
}

uint64_t sub_1CE0B5C84()
{
  return MEMORY[0x1E0D96140]();
}

uint64_t sub_1CE0B5C90()
{
  return MEMORY[0x1E0D96148]();
}

uint64_t sub_1CE0B5C9C()
{
  return MEMORY[0x1E0D96150]();
}

uint64_t sub_1CE0B5CA8()
{
  return MEMORY[0x1E0D96158]();
}

uint64_t sub_1CE0B5CB4()
{
  return MEMORY[0x1E0D96160]();
}

uint64_t sub_1CE0B5CC0()
{
  return MEMORY[0x1E0D96168]();
}

uint64_t sub_1CE0B5CCC()
{
  return MEMORY[0x1E0D96170]();
}

uint64_t sub_1CE0B5CD8()
{
  return MEMORY[0x1E0D96178]();
}

uint64_t sub_1CE0B5CE4()
{
  return MEMORY[0x1E0D96180]();
}

uint64_t sub_1CE0B5CF0()
{
  return MEMORY[0x1E0D96188]();
}

uint64_t sub_1CE0B5CFC()
{
  return MEMORY[0x1E0D96190]();
}

uint64_t sub_1CE0B5D08()
{
  return MEMORY[0x1E0D96198]();
}

uint64_t sub_1CE0B5D14()
{
  return MEMORY[0x1E0D961A0]();
}

uint64_t sub_1CE0B5D20()
{
  return MEMORY[0x1E0D961A8]();
}

uint64_t sub_1CE0B5D2C()
{
  return MEMORY[0x1E0D961B0]();
}

uint64_t sub_1CE0B5D38()
{
  return MEMORY[0x1E0D961B8]();
}

uint64_t sub_1CE0B5D44()
{
  return MEMORY[0x1E0D961C0]();
}

uint64_t sub_1CE0B5D50()
{
  return MEMORY[0x1E0D961C8]();
}

uint64_t sub_1CE0B5D5C()
{
  return MEMORY[0x1E0D961D0]();
}

uint64_t sub_1CE0B5D68()
{
  return MEMORY[0x1E0D961D8]();
}

uint64_t sub_1CE0B5D74()
{
  return MEMORY[0x1E0D961E0]();
}

uint64_t sub_1CE0B5D80()
{
  return MEMORY[0x1E0D961E8]();
}

uint64_t sub_1CE0B5D8C()
{
  return MEMORY[0x1E0D961F0]();
}

uint64_t sub_1CE0B5D98()
{
  return MEMORY[0x1E0D961F8]();
}

uint64_t sub_1CE0B5DA4()
{
  return MEMORY[0x1E0D96200]();
}

uint64_t sub_1CE0B5DB0()
{
  return MEMORY[0x1E0D96208]();
}

uint64_t sub_1CE0B5DBC()
{
  return MEMORY[0x1E0D96210]();
}

uint64_t sub_1CE0B5DC8()
{
  return MEMORY[0x1E0D96218]();
}

uint64_t sub_1CE0B5DD4()
{
  return MEMORY[0x1E0D96220]();
}

uint64_t sub_1CE0B5DE0()
{
  return MEMORY[0x1E0D96228]();
}

uint64_t sub_1CE0B5DEC()
{
  return MEMORY[0x1E0D96230]();
}

uint64_t sub_1CE0B5DF8()
{
  return MEMORY[0x1E0D96238]();
}

uint64_t sub_1CE0B5E04()
{
  return MEMORY[0x1E0D96250]();
}

uint64_t sub_1CE0B5E10()
{
  return MEMORY[0x1E0D96278]();
}

uint64_t sub_1CE0B5E1C()
{
  return MEMORY[0x1E0D96280]();
}

uint64_t sub_1CE0B5E28()
{
  return MEMORY[0x1E0D96288]();
}

uint64_t sub_1CE0B5E34()
{
  return MEMORY[0x1E0D96290]();
}

uint64_t sub_1CE0B5E40()
{
  return MEMORY[0x1E0D96298]();
}

uint64_t sub_1CE0B5E4C()
{
  return MEMORY[0x1E0D962A0]();
}

uint64_t sub_1CE0B5E58()
{
  return MEMORY[0x1E0D962B0]();
}

uint64_t sub_1CE0B5E64()
{
  return MEMORY[0x1E0D962B8]();
}

uint64_t sub_1CE0B5E70()
{
  return MEMORY[0x1E0D962C8]();
}

uint64_t sub_1CE0B5E7C()
{
  return MEMORY[0x1E0D96320]();
}

uint64_t sub_1CE0B5E88()
{
  return MEMORY[0x1E0D96328]();
}

uint64_t sub_1CE0B5E94()
{
  return MEMORY[0x1E0D96358]();
}

uint64_t sub_1CE0B5EA0()
{
  return MEMORY[0x1E0D96360]();
}

uint64_t sub_1CE0B5EAC()
{
  return MEMORY[0x1E0D96368]();
}

uint64_t sub_1CE0B5EB8()
{
  return MEMORY[0x1E0D963A0]();
}

uint64_t sub_1CE0B5EC4()
{
  return MEMORY[0x1E0D963C0]();
}

uint64_t sub_1CE0B5ED0()
{
  return MEMORY[0x1E0D963E8]();
}

uint64_t sub_1CE0B5EDC()
{
  return MEMORY[0x1E0D963F0]();
}

uint64_t sub_1CE0B5EE8()
{
  return MEMORY[0x1E0D96450]();
}

uint64_t sub_1CE0B5EF4()
{
  return MEMORY[0x1E0D96458]();
}

uint64_t sub_1CE0B5F00()
{
  return MEMORY[0x1E0D96478]();
}

uint64_t sub_1CE0B5F0C()
{
  return MEMORY[0x1E0D964C8]();
}

uint64_t sub_1CE0B5F18()
{
  return MEMORY[0x1E0D964D0]();
}

uint64_t sub_1CE0B5F24()
{
  return MEMORY[0x1E0D964F0]();
}

uint64_t sub_1CE0B5F30()
{
  return MEMORY[0x1E0D964F8]();
}

uint64_t sub_1CE0B5F3C()
{
  return MEMORY[0x1E0D96500]();
}

uint64_t sub_1CE0B5F48()
{
  return MEMORY[0x1E0D96508]();
}

uint64_t sub_1CE0B5F54()
{
  return MEMORY[0x1E0D96510]();
}

uint64_t sub_1CE0B5F60()
{
  return MEMORY[0x1E0D96538]();
}

uint64_t sub_1CE0B5F6C()
{
  return MEMORY[0x1E0D96658]();
}

uint64_t sub_1CE0B5F78()
{
  return MEMORY[0x1E0D96690]();
}

uint64_t sub_1CE0B5F84()
{
  return MEMORY[0x1E0D966C0]();
}

uint64_t sub_1CE0B5F90()
{
  return MEMORY[0x1E0D966E0]();
}

uint64_t sub_1CE0B5F9C()
{
  return MEMORY[0x1E0D966E8]();
}

uint64_t sub_1CE0B5FA8()
{
  return MEMORY[0x1E0D966F0]();
}

uint64_t sub_1CE0B5FB4()
{
  return MEMORY[0x1E0D96728]();
}

uint64_t sub_1CE0B5FC0()
{
  return MEMORY[0x1E0D96758]();
}

uint64_t sub_1CE0B5FCC()
{
  return MEMORY[0x1E0D96778]();
}

uint64_t sub_1CE0B5FD8()
{
  return MEMORY[0x1E0D3EC88]();
}

uint64_t sub_1CE0B5FE4()
{
  return MEMORY[0x1E0DF20F8]();
}

uint64_t sub_1CE0B5FF0()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1CE0B5FFC()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1CE0B6008()
{
  return MEMORY[0x1E0DF2148]();
}

uint64_t sub_1CE0B6014()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1CE0B6020()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1CE0B602C()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1CE0B6038()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1CE0B6044()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1CE0B6050()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1CE0B605C()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1CE0B6068()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1CE0B6074()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1CE0B6080()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1CE0B608C()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_1CE0B6098()
{
  return MEMORY[0x1E0CCE388]();
}

uint64_t sub_1CE0B60A4()
{
  return MEMORY[0x1E0CCE6E0]();
}

uint64_t sub_1CE0B60B0()
{
  return MEMORY[0x1E0CCE6F0]();
}

uint64_t sub_1CE0B60BC()
{
  return MEMORY[0x1E0CCE6F8]();
}

uint64_t sub_1CE0B60C8()
{
  return MEMORY[0x1E0CCE700]();
}

uint64_t sub_1CE0B60D4()
{
  return MEMORY[0x1E0CCE728]();
}

uint64_t sub_1CE0B60E0()
{
  return MEMORY[0x1E0CCE730]();
}

uint64_t sub_1CE0B60EC()
{
  return MEMORY[0x1E0CCEA28]();
}

uint64_t sub_1CE0B60F8()
{
  return MEMORY[0x1E0CCEA48]();
}

uint64_t sub_1CE0B6104()
{
  return MEMORY[0x1E0CCEA88]();
}

uint64_t sub_1CE0B6110()
{
  return MEMORY[0x1E0CCEAB8]();
}

uint64_t sub_1CE0B611C()
{
  return MEMORY[0x1E0CCEAD0]();
}

uint64_t sub_1CE0B6128()
{
  return MEMORY[0x1E0CCEAD8]();
}

uint64_t sub_1CE0B6134()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1CE0B6140()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1CE0B614C()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1CE0B6158()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1CE0B6164()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1CE0B6170()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1CE0B617C()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1CE0B6188()
{
  return MEMORY[0x1E0DEF758]();
}

uint64_t sub_1CE0B6194()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1CE0B61A0()
{
  return MEMORY[0x1E0CA92A8]();
}

uint64_t sub_1CE0B61AC()
{
  return MEMORY[0x1E0CA92B0]();
}

uint64_t sub_1CE0B61B8()
{
  return MEMORY[0x1E0CA92C0]();
}

uint64_t sub_1CE0B61C4()
{
  return MEMORY[0x1E0CA92C8]();
}

uint64_t sub_1CE0B61D0()
{
  return MEMORY[0x1E0CA9A18]();
}

uint64_t sub_1CE0B61DC()
{
  return MEMORY[0x1E0CA9A48]();
}

uint64_t sub_1CE0B61E8()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1CE0B61F4()
{
  return MEMORY[0x1E0DF05B0]();
}

uint64_t sub_1CE0B6200()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_1CE0B620C()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1CE0B6218()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1CE0B6224()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1CE0B6230()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1CE0B623C()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1CE0B6248()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1CE0B6254()
{
  return MEMORY[0x1E0DEA510]();
}

uint64_t sub_1CE0B6260()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1CE0B626C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1CE0B6278()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1CE0B6284()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1CE0B6290()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1CE0B629C()
{
  return MEMORY[0x1E0D967B0]();
}

uint64_t sub_1CE0B62A8()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1CE0B62B4()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1CE0B62C0()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1CE0B62CC()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1CE0B62D8()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1CE0B62E4()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1CE0B62F0()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1CE0B62FC()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1CE0B6308()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1CE0B6314()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1CE0B6320()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1CE0B632C()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1CE0B6338()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1CE0B6344()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1CE0B6350()
{
  return MEMORY[0x1E0DEA950]();
}

uint64_t sub_1CE0B635C()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1CE0B6368()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1CE0B6374()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1CE0B6380()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1CE0B638C()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_1CE0B6398()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1CE0B63A4()
{
  return MEMORY[0x1E0DEAAB0]();
}

uint64_t sub_1CE0B63B0()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_1CE0B63BC()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1CE0B63C8()
{
  return MEMORY[0x1E0D967D8]();
}

uint64_t sub_1CE0B63D4()
{
  return MEMORY[0x1E0D967E0]();
}

uint64_t sub_1CE0B63E0()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1CE0B63EC()
{
  return MEMORY[0x1E0DEAC90]();
}

uint64_t sub_1CE0B63F8()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1CE0B6404()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1CE0B6410()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1CE0B641C()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1CE0B6428()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1CE0B6434()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1CE0B6440()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1CE0B644C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1CE0B6458()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1CE0B6464()
{
  return MEMORY[0x1E0DEADD8]();
}

uint64_t sub_1CE0B6470()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1CE0B647C()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_1CE0B6488()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1CE0B6494()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1CE0B64A0()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1CE0B64AC()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1CE0B64B8()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1CE0B64C4()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1CE0B64D0()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1CE0B64DC()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1CE0B64E8()
{
  return MEMORY[0x1E0D96850]();
}

uint64_t sub_1CE0B64F4()
{
  return MEMORY[0x1E0DF05C0]();
}

uint64_t sub_1CE0B6500()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1CE0B650C()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1CE0B6518()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1CE0B6524()
{
  return MEMORY[0x1E0DF05E0]();
}

uint64_t sub_1CE0B6530()
{
  return MEMORY[0x1E0DF0698]();
}

uint64_t sub_1CE0B653C()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1CE0B6548()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1CE0B6554()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1CE0B6560()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1CE0B656C()
{
  return MEMORY[0x1E0DF0790]();
}

uint64_t sub_1CE0B6578()
{
  return MEMORY[0x1E0DF07A0]();
}

uint64_t sub_1CE0B6584()
{
  return MEMORY[0x1E0DF07C0]();
}

uint64_t sub_1CE0B6590()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1CE0B659C()
{
  return MEMORY[0x1E0DF07E8]();
}

uint64_t sub_1CE0B65A8()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1CE0B65B4()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1CE0B65C0()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_1CE0B65CC()
{
  return MEMORY[0x1E0DF08C8]();
}

uint64_t sub_1CE0B65D8()
{
  return MEMORY[0x1E0DF08D0]();
}

uint64_t sub_1CE0B65E4()
{
  return MEMORY[0x1E0DF0958]();
}

uint64_t sub_1CE0B65F0()
{
  return MEMORY[0x1E0DF09A8]();
}

uint64_t sub_1CE0B65FC()
{
  return MEMORY[0x1E0DF09B0]();
}

uint64_t sub_1CE0B6608()
{
  return MEMORY[0x1E0DF09D0]();
}

uint64_t sub_1CE0B6614()
{
  return MEMORY[0x1E0DF0A40]();
}

uint64_t sub_1CE0B6620()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t sub_1CE0B662C()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t sub_1CE0B6638()
{
  return MEMORY[0x1E0DF0AD8]();
}

uint64_t sub_1CE0B6644()
{
  return MEMORY[0x1E0D96860]();
}

uint64_t sub_1CE0B6650()
{
  return MEMORY[0x1E0D96868]();
}

uint64_t sub_1CE0B665C()
{
  return MEMORY[0x1E0D96870]();
}

uint64_t sub_1CE0B6668()
{
  return MEMORY[0x1E0D96880]();
}

uint64_t sub_1CE0B6674()
{
  return MEMORY[0x1E0D96898]();
}

uint64_t sub_1CE0B6680()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1CE0B668C()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1CE0B6698()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1CE0B66A4()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1CE0B66B0()
{
  return MEMORY[0x1E0DEB2E8]();
}

uint64_t sub_1CE0B66BC()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1CE0B66C8()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1CE0B66D4()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1CE0B66E0()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1CE0B66EC()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1CE0B66F8()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1CE0B6704()
{
  return MEMORY[0x1E0CB1C58]();
}

uint64_t sub_1CE0B6710()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1CE0B671C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1CE0B6728()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1CE0B6734()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1CE0B6740()
{
  return MEMORY[0x1E0CB4540]();
}

uint64_t sub_1CE0B674C()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1CE0B6758()
{
  return MEMORY[0x1E0DEF7E8]();
}

uint64_t sub_1CE0B6764()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1CE0B6770()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1CE0B677C()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1CE0B6788()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1CE0B6794()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1CE0B67A0()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1CE0B67AC()
{
  return MEMORY[0x1E0DEF938]();
}

uint64_t sub_1CE0B67B8()
{
  return MEMORY[0x1E0DEF978]();
}

uint64_t sub_1CE0B67C4()
{
  return MEMORY[0x1E0DEF9E8]();
}

uint64_t sub_1CE0B67D0()
{
  return MEMORY[0x1E0DEF9F0]();
}

uint64_t sub_1CE0B67DC()
{
  return MEMORY[0x1E0DEFA18]();
}

uint64_t sub_1CE0B67E8()
{
  return MEMORY[0x1E0DEFA20]();
}

uint64_t sub_1CE0B67F4()
{
  return MEMORY[0x1E0DEFA30]();
}

uint64_t sub_1CE0B6800()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1CE0B680C()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1CE0B6818()
{
  return MEMORY[0x1E0DEFA60]();
}

uint64_t sub_1CE0B6824()
{
  return MEMORY[0x1E0DEFA70]();
}

uint64_t sub_1CE0B6830()
{
  return MEMORY[0x1E0DEFAA8]();
}

uint64_t sub_1CE0B683C()
{
  return MEMORY[0x1E0DEFAB0]();
}

uint64_t sub_1CE0B6848()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1CE0B6854()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1CE0B6860()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1CE0B686C()
{
  return MEMORY[0x1E0CB2190]();
}

uint64_t sub_1CE0B6878()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1CE0B6884()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1CE0B6890()
{
  return MEMORY[0x1E0DEB8E8]();
}

uint64_t sub_1CE0B689C()
{
  return MEMORY[0x1E0D96918]();
}

uint64_t sub_1CE0B68A8()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1CE0B68B4()
{
  return MEMORY[0x1E0DEB970]();
}

uint64_t sub_1CE0B68C0()
{
  return MEMORY[0x1E0DEB980]();
}

uint64_t sub_1CE0B68CC()
{
  return MEMORY[0x1E0DEB9A0]();
}

uint64_t sub_1CE0B68D8()
{
  return MEMORY[0x1E0DEB9C0]();
}

uint64_t sub_1CE0B68E4()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1CE0B68F0()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1CE0B68FC()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1CE0B6908()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1CE0B6914()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1CE0B6920()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1CE0B692C()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1CE0B6938()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1CE0B6944()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1CE0B6950()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1CE0B695C()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1CE0B6968()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1CE0B6974()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1CE0B6980()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1CE0B698C()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1CE0B6998()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1CE0B69A4()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1CE0B69B0()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1CE0B69BC()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1CE0B69C8()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1CE0B69D4()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1CE0B69E0()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1CE0B69EC()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1CE0B69F8()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1CE0B6A04()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1CE0B6A10()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1CE0B6A1C()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1CE0B6A28()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1CE0B6A34()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1CE0B6A40()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1CE0B6A4C()
{
  return MEMORY[0x1E0DEC508]();
}

uint64_t sub_1CE0B6A58()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1CE0B6A64()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1CE0B6A70()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1CE0B6A7C()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1CE0B6A88()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1CE0B6A94()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1CE0B6AA0()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1CE0B6AAC()
{
  return MEMORY[0x1E0DEC958]();
}

uint64_t sub_1CE0B6AB8()
{
  return MEMORY[0x1E0DEC960]();
}

uint64_t sub_1CE0B6AC4()
{
  return MEMORY[0x1E0DEC968]();
}

uint64_t sub_1CE0B6AD0()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_1CE0B6ADC()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1CE0B6AE8()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1CE0B6AF4()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1CE0B6B00()
{
  return MEMORY[0x1E0DECC38]();
}

uint64_t sub_1CE0B6B0C()
{
  return MEMORY[0x1E0DECC40]();
}

uint64_t sub_1CE0B6B18()
{
  return MEMORY[0x1E0DECC48]();
}

uint64_t sub_1CE0B6B24()
{
  return MEMORY[0x1E0DECC58]();
}

uint64_t sub_1CE0B6B30()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1CE0B6B3C()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1CE0B6B48()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1CE0B6B54()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1CE0B6B60()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1CE0B6B6C()
{
  return MEMORY[0x1E0DF0CC8]();
}

uint64_t sub_1CE0B6B78()
{
  return MEMORY[0x1E0DF0CD0]();
}

uint64_t sub_1CE0B6B84()
{
  return MEMORY[0x1E0DF0CD8]();
}

uint64_t sub_1CE0B6B90()
{
  return MEMORY[0x1E0DF0CE0]();
}

uint64_t sub_1CE0B6B9C()
{
  return MEMORY[0x1E0DF0CE8]();
}

uint64_t sub_1CE0B6BA8()
{
  return MEMORY[0x1E0DF0CF8]();
}

uint64_t sub_1CE0B6BB4()
{
  return MEMORY[0x1E0DF0D08]();
}

uint64_t sub_1CE0B6BC0()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1CE0B6BCC()
{
  return MEMORY[0x1E0DF0D38]();
}

uint64_t sub_1CE0B6BD8()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1CE0B6BE4()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1CE0B6BF0()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1CE0B6BFC()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1CE0B6C08()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1CE0B6C14()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1CE0B6C20()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1CE0B6C2C()
{
  return MEMORY[0x1E0DF0DD0]();
}

uint64_t sub_1CE0B6C38()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1CE0B6C44()
{
  return MEMORY[0x1E0DED5A8]();
}

uint64_t sub_1CE0B6C50()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1CE0B6C5C()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1CE0B6C68()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1CE0B6C74()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1CE0B6C80()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1CE0B6C8C()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1CE0B6C98()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1CE0B6CA4()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1CE0B6CB0()
{
  return MEMORY[0x1E0D96940]();
}

uint64_t sub_1CE0B6CBC()
{
  return MEMORY[0x1E0D96948]();
}

uint64_t sub_1CE0B6CC8()
{
  return MEMORY[0x1E0D96950]();
}

uint64_t sub_1CE0B6CD4()
{
  return MEMORY[0x1E0D96960]();
}

uint64_t sub_1CE0B6CE0()
{
  return MEMORY[0x1E0D96968]();
}

uint64_t sub_1CE0B6CEC()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1CE0B6CF8()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1CE0B6D04()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1CE0B6D10()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1CE0B6D1C()
{
  return MEMORY[0x1E0DEDEE0]();
}

uint64_t sub_1CE0B6D28()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1CE0B6D34()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1CE0B6D40()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1CE0B6D4C()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1CE0B6D58()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1CE0B6D64()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1CE0B6D70()
{
  return MEMORY[0x1E0D96978]();
}

uint64_t sub_1CE0B6D7C()
{
  return MEMORY[0x1E0D96988]();
}

uint64_t sub_1CE0B6D88()
{
  return MEMORY[0x1E0D96990]();
}

uint64_t sub_1CE0B6D94()
{
  return MEMORY[0x1E0D96998]();
}

uint64_t sub_1CE0B6DA0()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1CE0B6DAC()
{
  return MEMORY[0x1E0D969A8]();
}

uint64_t sub_1CE0B6DB8()
{
  return MEMORY[0x1E0CB2710]();
}

uint64_t sub_1CE0B6DC4()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1CE0B6DD0()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1CE0B6DDC()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1CE0B6DE8()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1CE0B6DF4()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

uint64_t HKWorkoutSessionStateToString()
{
  return MEMORY[0x1E0CB61C0]();
}

uint64_t MobileGestalt_copy_buildVersion_obj()
{
  return MEMORY[0x1E0DE2BB0]();
}

uint64_t MobileGestalt_copy_uniqueDeviceID_obj()
{
  return MEMORY[0x1E0DE2BE0]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x1E0DE2C00]();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return MEMORY[0x1E0DE2C08]();
}

uint64_t MobileGestalt_get_hasExtendedColorDisplay()
{
  return MEMORY[0x1E0DE2C30]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return MEMORY[0x1E0CA6F30]();
}

uint64_t _CTServerConnectionGetCellularDataIsEnabled()
{
  return MEMORY[0x1E0CA6F88]();
}

uint64_t _availability_version_check()
{
  return MEMORY[0x1E0C80CC0]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint64_t _swift_stdlib_strtof_clocale()
{
  return MEMORY[0x1E0DEEA58]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_once_f(dispatch_once_t *predicate, void *context, dispatch_function_t function)
{
  MEMORY[0x1E0C82E10](predicate, context, function);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

int fclose(FILE *a1)
{
  return MEMORY[0x1E0C832F8](a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return (FILE *)MEMORY[0x1E0C83460](__filename, __mode);
}

size_t fread(void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return MEMORY[0x1E0C834A0](__ptr, __size, __nitems, __stream);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

int fseek(FILE *a1, uint64_t a2, int a3)
{
  return MEMORY[0x1E0C83530](a1, a2, *(_QWORD *)&a3);
}

uint64_t ftell(FILE *a1)
{
  return MEMORY[0x1E0C83580](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

BOOL notify_is_valid_token(int val)
{
  return MEMORY[0x1E0C843F0](*(_QWORD *)&val);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x1E0C84A00]();
}

mach_port_t pthread_mach_thread_np(pthread_t a1)
{
  return MEMORY[0x1E0C84E00](a1);
}

pthread_t pthread_self(void)
{
  return (pthread_t)MEMORY[0x1E0C84ED8]();
}

void rewind(FILE *a1)
{
  MEMORY[0x1E0C85120](a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return MEMORY[0x1E0C85498](a1, a2);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return MEMORY[0x1E0DEEDC0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_stdlib_random()
{
  return MEMORY[0x1E0DEEE90]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

uint64_t xpc_dictionary_send_reply()
{
  return MEMORY[0x1E0C862F8]();
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x1E0C866E8](stream, targetq, handler);
}

