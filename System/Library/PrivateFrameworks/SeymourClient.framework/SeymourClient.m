unint64_t static AchievementConstants.templateSourceName.getter()
{
  return 0xD000000000000011;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for AsyncLock()
{
  return &type metadata for AsyncLock;
}

uint64_t sub_1CDFABD9C(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t static Log.discovery.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0380, (uint64_t)qword_1ED8F0A60, a1);
}

uint64_t static Log.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F1890, (uint64_t)qword_1ED8F1870, a1);
}

BOOL static DataProtectionClass.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t PersistenceQueryClauses.returnsObjectsAsFaults.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

ValueMetadata *type metadata accessor for PersistenceQueryClauses()
{
  return &type metadata for PersistenceQueryClauses;
}

uint64_t dispatch thunk of EventHubProtocol.subscribe<A>(_:subscriptionToken:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

{
  return (*(uint64_t (**)(void))(a8 + 40))();
}

uint64_t sub_1CDFABE10()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CDFABE64()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t PersistenceQueryClauses.limit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t PersistenceQueryClauses.sort.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PersistenceQueryClauses.predicates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t static Log.engagement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F1098, (uint64_t)qword_1ED8F1078, a1);
}

uint64_t (*PersistenceQueryClauses.predicates.modify())()
{
  return nullsub_1;
}

uint64_t TestProperty.init(_:fallback:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _BYTE *a6@<X8>)
{
  _BYTE *v8;

  *a6 = *a1;
  v8 = &a6[*(int *)(type metadata accessor for TestProperty(0, a3, a4, a5) + 44)];
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v8, a2, a3);
}

uint64_t type metadata accessor for TestProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TestProperty);
}

uint64_t type metadata accessor for SessionActivated()
{
  uint64_t result;

  result = qword_1EFA63D78;
  if (!qword_1EFA63D78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for Signpost.State()
{
  return swift_release();
}

uint64_t static Trace.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1ED8F0B50, (uint64_t)qword_1ED8F0B30, a1);
}

uint64_t PersistenceQueryClauses.returnsObjectsAsFaults.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t type metadata accessor for SessionDeactivated()
{
  uint64_t result;

  result = qword_1EFA62E18;
  if (!qword_1EFA62E18)
    return swift_getSingletonMetadata();
  return result;
}

_BYTE *sub_1CDFAC124(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

uint64_t destroy for ActivityTracer(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B6020();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t destroy for ActivityTrace.State(uint64_t a1)
{
  return j__swift_unknownObjectRelease(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

ValueMetadata *type metadata accessor for HealthStore()
{
  return &type metadata for HealthStore;
}

uint64_t static Log.triage.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F10A8, (uint64_t)qword_1ED8F1058, a1);
}

uint64_t type metadata accessor for PlaybackUpdated()
{
  uint64_t result;

  result = qword_1EFA62EA8;
  if (!qword_1EFA62EA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for HealthStore(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t dispatch thunk of XPCClient.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t EventHub.publish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6;

  sub_1CE0B3D7C();
  return EventHub.publish<A>(_:atTime:)(a1, a2, a3, v6);
}

uint64_t static Log.database.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F0028, (uint64_t)qword_1ED8F0008, a1);
}

uint64_t static Log.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8EFF78, (uint64_t)qword_1ED8EF7D8, a1);
}

uint64_t static Log.subscription.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8EFF70, (uint64_t)qword_1ED8EF7C0, a1);
}

uint64_t type metadata accessor for MultiUserSessionUpdated()
{
  uint64_t result;

  result = qword_1EFA5E648;
  if (!qword_1EFA5E648)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for BadgingCountsUpdated()
{
  return &type metadata for BadgingCountsUpdated;
}

uint64_t dispatch thunk of EventHubProtocol.publish<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for SessionUpdated()
{
  uint64_t result;

  result = qword_1EFA62D88;
  if (!qword_1EFA62D88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ContactService()
{
  return objc_opt_self();
}

uint64_t destroy for HealthStore(id *a1)
{
  uint64_t v1;

  v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_1Tm(v1);
}

uint64_t sub_1CDFAC3D8()
{
  sub_1CDFAC46C();
  sub_1CDFAC428();
  return sub_1CE0B63C8();
}

unint64_t sub_1CDFAC428()
{
  unint64_t result;

  result = qword_1ED8F1160;
  if (!qword_1ED8F1160)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D967A0], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED8F1160);
  }
  return result;
}

unint64_t sub_1CDFAC46C()
{
  unint64_t result;

  result = qword_1EFA60A30;
  if (!qword_1EFA60A30)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for FitnessMode, &type metadata for FitnessMode);
    atomic_store(result, (unint64_t *)&qword_1EFA60A30);
  }
  return result;
}

uint64_t sub_1CDFAC4B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2, v3);
}

uint64_t static Log.ui.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D550, (uint64_t)qword_1EFA63540, a1);
}

uint64_t static Log.workoutPlan.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1ED8F1020, (uint64_t)qword_1ED8F1000, a1);
}

uint64_t type metadata accessor for MultiUserSessionIdentitiesUpdated()
{
  uint64_t result;

  result = qword_1EFA5EF00;
  if (!qword_1EFA5EF00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ContentAvailabilityUpdated()
{
  uint64_t result;

  result = qword_1ED8EFD40;
  if (!qword_1ED8EFD40)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for StorefrontLanguageUpdated()
{
  return &type metadata for StorefrontLanguageUpdated;
}

uint64_t sub_1CDFAC5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for ExponentialBackoffIntervalProvider(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

ValueMetadata *type metadata accessor for DispatchTimerProvider()
{
  return &type metadata for DispatchTimerProvider;
}

ValueMetadata *type metadata accessor for CoreAnalyticsReporter()
{
  return &type metadata for CoreAnalyticsReporter;
}

uint64_t type metadata accessor for AnalyticsEventMonitor()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FitnessModeObserver()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for EventDeliveryStyle()
{
  return &type metadata for EventDeliveryStyle;
}

uint64_t dispatch thunk of StorefrontCaching.queryContentAvailability()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for UserDefaultsKeys()
{
  return &type metadata for UserDefaultsKeys;
}

uint64_t type metadata accessor for NetworkEvaluator()
{
  return objc_opt_self();
}

uint64_t sub_1CDFAC6E4()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFAC708(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFAC720(a1, *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CDFAC720(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v3 = sub_1CE0B6518();
  return sub_1CDFC1068(a2, v3);
}

void GatedResource.query()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + qword_1ED8F1ED0);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v5 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1CDFB54A0(v5, v4, v7, v8, a1);
  os_unfair_lock_unlock(v6);
}

void sub_1CDFAC824(uint64_t a1)
{
  uint64_t v1;

  sub_1CDFB5A14(a1, v1);
}

uint64_t sub_1CDFAC82C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CDFAC898()
{
  sub_1CDFAC8CC();
  return sub_1CE0B58DC();
}

unint64_t sub_1CDFAC8CC()
{
  unint64_t result;

  result = qword_1EFA60A38;
  if (!qword_1EFA60A38)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for FitnessMode, &type metadata for FitnessMode);
    atomic_store(result, (unint64_t *)&qword_1EFA60A38);
  }
  return result;
}

uint64_t UnfairLock.init()()
{
  uint64_t v0;
  _DWORD *v1;

  v1 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

uint64_t type metadata accessor for MultiUserClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BookmarkClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SessionClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CatalogClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for MetricClient()
{
  return objc_opt_self();
}

uint64_t sub_1CDFAC9D8(char a1)
{
  return MetricClient.queryUserIdentifier(for:)(a1);
}

uint64_t MetricClient.queryUserIdentifier(for:)(char a1)
{
  return sub_1CDFB49F8(a1, 0xD000000000000019, (void *)0x80000001CE0C7C20, 143);
}

uint64_t sub_1CDFACA18(char a1)
{
  return MetricClient.queryClientIdentifier(for:)(a1);
}

uint64_t MetricClient.queryClientIdentifier(for:)(char a1)
{
  return sub_1CDFB49F8(a1, 0xD00000000000001BLL, (void *)0x80000001CE0C7C40, 144);
}

uint64_t type metadata accessor for ScoreClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AssetClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for AdminClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SyncClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SiriClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for StreamingKeyDeliveryClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ServiceSubscriptionClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ContentAvailabilityClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for SessionPreferenceClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RemoteParticipantClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RemoteKeyDeliveryClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PrivacyPreferenceClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EstimatedCaloriesClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ArchivedSessionClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RemoteBrowsingClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for RecommendationClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ConfigurationClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WorkoutPlanClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UpNextQueueClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for HealthDataClient()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for EngagementClient()
{
  return objc_opt_self();
}

uint64_t XPCClient.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFACD3C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CDFACD84(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFB2480(a1, *(_QWORD *)(v1 + 40), *(_WORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1CDFACD94()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFACDC8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t type metadata accessor for MachTimer()
{
  return objc_opt_self();
}

uint64_t MachTimer.init(state:)(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;

  v2 = *a1;
  *(_QWORD *)(v1 + 16) = 0;
  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = 0;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = v2;
  sub_1CE0B6650();
  *(_QWORD *)(v1 + 24) = v5;
  return v1;
}

_BYTE *sub_1CDFACEC4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MachTimer.State()
{
  return &type metadata for MachTimer.State;
}

uint64_t type metadata accessor for EventHub()
{
  return objc_opt_self();
}

uint64_t static Log.bookmark.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D4D0, (uint64_t)qword_1EFA63408, a1);
}

uint64_t type metadata accessor for MultiUserBeginActivityCancelled()
{
  uint64_t result;

  result = qword_1EFA5FA80;
  if (!qword_1EFA5FA80)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for EngagementBannerRulesUpdated()
{
  return &type metadata for EngagementBannerRulesUpdated;
}

uint64_t dispatch thunk of ContentRestrictionObserving.queryAllowedContentRatings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for ServiceSubscriptionUpdated()
{
  return &type metadata for ServiceSubscriptionUpdated;
}

uint64_t type metadata accessor for MindfulSessionAccumulator(uint64_t a1)
{
  return sub_1CDFAD020(a1, qword_1EFA64448);
}

uint64_t MindfulSessionAccumulator.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;

  v1 = v0 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64418);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = 0;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + 24) = v3;
  return v0;
}

uint64_t sub_1CDFAD020(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TransportDispatchService.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of ContactServiceProtocol.userContact(keys:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

ValueMetadata *type metadata accessor for EventDispatchStrategy()
{
  return &type metadata for EventDispatchStrategy;
}

uint64_t sub_1CDFAD0B4(uint64_t a1)
{
  return sub_1CDFB6258(a1);
}

unint64_t static MachServiceConstants.daemon.getter()
{
  return 0xD000000000000011;
}

unint64_t static MachServiceConstants.sessionDaemon.getter()
{
  return 0xD000000000000019;
}

ValueMetadata *type metadata accessor for WorkoutPlansUpdated()
{
  return &type metadata for WorkoutPlansUpdated;
}

unint64_t static StorefrontConstants.languageCodeUserDefaultsKey.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_1CDFAD120()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CE0B5E04();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1CDFAD1A4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for SessionMonitorState(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionMonitorState);
}

uint64_t dispatch thunk of HealthStoreProtocol.fetchUnitPreferences()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 72) + *(_QWORD *)(a3 + 72));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t FitnessModeObserver.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  *(_DWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 36) = 1;
  return v2;
}

uint64_t dispatch thunk of StorefrontCaching.updateLanguageCode(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of StorefrontCaching.queryLanguageCode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t static PromiseConstants.defaultMaxConcurrentOperations.getter()
{
  return 5;
}

uint64_t dispatch thunk of NetworkEvaluator.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1CDFAD270()
{
  swift_allocObject();
  swift_weakInit();
  return sub_1CE0B5C00();
}

uint64_t type metadata accessor for StorefrontCache()
{
  return objc_opt_self();
}

uint64_t StorefrontCache.init()()
{
  uint64_t v0;

  return v0;
}

void sub_1CDFAD2FC()
{
  sub_1CDFAED54();
}

uint64_t sub_1CDFAD318()
{
  return sub_1CE092224();
}

uint64_t ContactService.init()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v7;

  *(_QWORD *)(v0 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1CE0C4590;
  v2 = (void *)*MEMORY[0x1E0C967A0];
  v3 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v1 + 32) = *MEMORY[0x1E0C967A0];
  *(_QWORD *)(v1 + 40) = v3;
  v7 = v1;
  sub_1CE0B644C();
  *(_QWORD *)(v0 + 24) = v7;
  v4 = v2;
  v5 = v3;
  return v0;
}

ValueMetadata *type metadata accessor for CatalogUpdated()
{
  return &type metadata for CatalogUpdated;
}

uint64_t sub_1CDFAD3E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFAC82C;
  return sub_1CE0B6C80();
}

uint64_t GatedResource.fetch()(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *v1;
  return swift_task_switch();
}

uint64_t sub_1CDFAD480(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_BYTE *sub_1CDFAD4A0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1CDFAD4F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static BagConstants.profileVersion.getter()
{
  return 49;
}

uint64_t static BagConstants.profileName.getter()
{
  return 0x7373656E746946;
}

id HealthStore.init()@<X0>(_QWORD *a1@<X8>)
{
  id result;

  a1[4] = &type metadata for ActivityRingsQueryProvider;
  a1[5] = &protocol witness table for ActivityRingsQueryProvider;
  a1[6] = 0x3FF0000000000000;
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1CDFAD5E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CDFACD38;
  v4[24] = a1;
  v4[25] = v1;
  return swift_task_switch();
}

uint64_t sub_1CDFAD640()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 248) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

void sub_1CDFAD6A0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = 0xEB00000000686374;
  v3 = *v1;
  v4 = 0xE900000000000073;
  v5 = 0x73656C6863746177;
  if (v3 != 1)
  {
    v5 = 0x615765746F6D6572;
    v4 = 0xEB00000000686374;
  }
  v6 = v3 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6157646572696170;
  if (!v6)
    v2 = v4;
  *a1 = v7;
  a1[1] = v2;
}

unint64_t _s13SeymourClient11FitnessModeO09healthKitD0ACSo09HKFitnessD0V_tcfC_0(uint64_t a1)
{
  unint64_t result;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  result = a1 - 1;
  if (result >= 3)
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v2 = sub_1CE0B6080();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
    v3 = sub_1CE0B6068();
    v4 = sub_1CE0B6728();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1CDFAA000, v3, v4, "### HKFitnessMode not handled", v5, 2u);
      MEMORY[0x1D17C092C](v5, -1, -1);
    }

    return 0;
  }
  return result;
}

uint64_t MultiUserClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFBB718);
}

uint64_t sub_1CDFAD7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  v14 = a6(a1, a4, a5, v6, ObjectType, a2, a3);
  swift_unknownObjectRelease();
  return v14;
}

uint64_t BookmarkClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB21A8);
}

uint64_t SessionClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB3408);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllTrainerReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllSkillLevels()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllBodyFocuses()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllEquipment()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogThemes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t CatalogClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB2CAC);
}

uint64_t dispatch thunk of MetricClientProtocol.queryUserIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MetricClientProtocol.queryClientIdentifier(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

_QWORD *sub_1CDFAD8CC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  a2[2] = a1;
  a2[3] = a4;
  a2[4] = a5;
  return a2;
}

_QWORD *MetricClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

_QWORD *ScoreClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

uint64_t AssetClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB2314);
}

_QWORD *AdminClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

_QWORD *sub_1CDFAD9B4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  return a4;
}

_QWORD *SyncClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD9B4(a1, a4, a5, v5, ObjectType, a2, a3);
}

_QWORD *SiriClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

_QWORD *StreamingKeyDeliveryClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

uint64_t dispatch thunk of ServiceSubscriptionClientProtocol.fetchServiceSubscription(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t ServiceSubscriptionClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB1478);
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryContentAvailability()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentAvailabilityClientProtocol.queryAllowedContentRatings()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ContentAvailabilityClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFB154C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFBB178);
}

_QWORD *SessionPreferenceClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

uint64_t RemoteParticipantClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFBB3B0);
}

_QWORD *RemoteKeyDeliveryClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.fetchOptInPrivacyPreference(ignoreCaches:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1CDFADB78(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFB4940(a1, a2, a3, 243, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
}

_QWORD *EstimatedCaloriesClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

uint64_t ArchivedSessionClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB1CC4);
}

uint64_t RemoteBrowsingClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB312C);
}

uint64_t RecommendationClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB11E4);
}

uint64_t dispatch thunk of ConfigurationClientProtocol.queryConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConfigurationClientProtocol.fetchRemoteConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1CDFADC10()
{
  return ConfigurationClient.queryConfiguration()();
}

_QWORD *ConfigurationClient.init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFAD8CC(a1, v3, ObjectType, a2, a3);
}

uint64_t WorkoutPlanClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB10A4);
}

uint64_t sub_1CDFADC80()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFADC8C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t UpNextQueueClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB1324);
}

uint64_t HealthDataClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB2F7C);
}

uint64_t dispatch thunk of EngagementClientProtocol.queryEngagementBannerRuleInfo()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1CDFADD18()
{
  return EngagementClient.queryEngagementBannerRuleInfo()();
}

uint64_t EngagementClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFB154C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFB15D8);
}

uint64_t EngagementBannerRuleInfo.contextProperties.getter()
{
  uint64_t v0;

  v0 = sub_1CE0B5414();
  return sub_1CDFB41BC(v0);
}

uint64_t MetricTopic.supportsSubscriptionFields.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu)
    return 1;
  else
    return sub_1CE0B512C();
}

uint64_t MetricTopic.supportsOptInConsentField.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu)
    return 1;
  else
    return sub_1CE0B5120();
}

uint64_t MetricTopic.isAnonymous.getter(unsigned __int8 a1)
{
  if (!(a1 >> 6))
    return sub_1CE0B50FC();
  if (a1 >> 6 == 1)
    return sub_1CE0B4EC8();
  return 1;
}

void sub_1CDFADDB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  if (*(_BYTE *)(v0 + 48) == 1)
  {
    *(_BYTE *)(v0 + 48) = 2;
    objc_msgSend(*(id *)(v0 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

void sub_1CDFADDFC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v6 = sub_1CE0B5E04();
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64))
    v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  else
    v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v8 = a2 - 2;
    if (v7 < 4)
    {
      v9 = v8 >> (8 * v7);
      v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    a1[v7] = a2;
  }
}

_QWORD *ContentAvailabilityClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  _QWORD *v17;

  v4 = v3;
  v8 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v9 = a3;
  v10 = (void *)sub_1CE0B626C();
  v11 = objc_msgSend(v8, sel_initWithMachServiceName_options_, v10, 0);

  v12 = type metadata accessor for XPCClient();
  swift_allocObject();
  v13 = sub_1CDFBC9EC(v11, v9);
  v14 = *(_QWORD *)(v13 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  if (*(_BYTE *)(v13 + 48) == 1)
  {
    *(_BYTE *)(v13 + 48) = 2;
    objc_msgSend(*(id *)(v13 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  ObjectType = swift_getObjectType();
  v16 = swift_retain();
  v17 = sub_1CDFCB8DC(v16, a1, v4, v12, ObjectType, (uint64_t)&protocol witness table for XPCClient, (uint64_t)&protocol witness table for XPCClient, a2);

  swift_release_n();
  return v17;
}

uint64_t sub_1CDFAE028(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *), uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void (*v23)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);

  v26 = a5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F06D0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFC2094(a1, a2);
  sub_1CE0B56A8();
  v25 = a4;
  v26(v18);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a7);
    return sub_1CDFB13F8((uint64_t)v15, qword_1ED8F06D0);
  }
  else
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = a3;
    *(_QWORD *)(v22 + 24) = v25;
    swift_retain();
    v23 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = sub_1CE0B3280;
    *(_QWORD *)(v24 + 24) = v22;
    swift_retain();
    v23(sub_1CDFF3920, v24);
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v15, v19);
  }
}

uint64_t sub_1CDFAE26C()
{
  return ContentAvailabilityClient.queryAllowedContentRatings()();
}

uint64_t ContentAvailabilityClient.queryAllowedContentRatings()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD00000000000007FLL;
  v2._object = (void *)0x80000001CE0C9DF0;
  v3._object = (void *)0x80000001CE0C9E70;
  v3._countAndFlagsBits = 0xD00000000000001CLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 110;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F800);
  v8 = sub_1CDFAE404();
  v9 = sub_1CDFAE3A0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFAE3A0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFA5F810;
  if (!qword_1EFA5F810)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F800);
    v2 = sub_1CDFCCAF0();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5F810);
  }
  return result;
}

unint64_t sub_1CDFAE404()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFA5F808;
  if (!qword_1EFA5F808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F800);
    v2[0] = MEMORY[0x1E0D90CE0];
    v2[1] = MEMORY[0x1E0D90CE8];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5F808);
  }
  return result;
}

uint64_t AssetClient.fetchImageData(remoteURL:priority:expirationPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t ObjectType;
  void (*v20)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(uint64_t);
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int16 v41;

  v39 = a5;
  v31 = a4;
  v32 = a3;
  v33 = a2;
  v30 = a1;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E558);
  v5 = *(_QWORD *)(v40 - 8);
  v6 = MEMORY[0x1E0C80A78](v40);
  v35 = v7;
  v36 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v30 - v8;
  v9 = sub_1CE0B3D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CE0B4B44();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_1CE0B4208();
  v34 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B3D7C();
  sub_1CE0B629C();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  if ((v31 & 1) != 0 && !v32)
    sub_1CE0B6668();
  else
    sub_1CE0B665C();
  sub_1CE0B41FC();
  v17 = (uint64_t (*)(uint64_t))v38;
  v18 = *(_QWORD *)(v38 + 24);
  ObjectType = swift_getObjectType();
  v41 = 14;
  v20 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v18 + 32);
  v21 = sub_1CE0B43E8();
  v22 = v37;
  v20(&v41, v16, v14, v21, MEMORY[0x1E0D906E0], MEMORY[0x1E0D906E8], MEMORY[0x1E0D90A98], MEMORY[0x1E0D90AA0], ObjectType, v18);
  v23 = v36;
  v24 = v40;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v36, v22, v40);
  v25 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v26 = (v35 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v27 + v25, v23, v24);
  v28 = (uint64_t (**)(uint64_t))(v27 + v26);
  *v28 = sub_1CDFCB5C4;
  v28[1] = v17;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v16, v14);
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t UnfairLock.__deallocating_deinit()
{
  uint64_t v0;

  MEMORY[0x1D17C092C](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFAE824()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  uint64_t v8;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);

  if (qword_1ED8F1020 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1000);
  v3._countAndFlagsBits = 0xD00000000000006FLL;
  v3._object = (void *)0x80000001CE0CB050;
  v4._object = (void *)0x80000001CE0CB230;
  v4._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  *(_WORD *)(v0 + 48) = 292;
  v10 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v5 + 56)
                                                                                           + *(_QWORD *)(v5 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v7;
  v8 = sub_1CE0B41D8();
  *v7 = v0;
  v7[1] = sub_1CDFADC8C;
  return v10(*(_QWORD *)(v0 + 16), v0 + 48, v8, MEMORY[0x1E0D905C8], MEMORY[0x1E0D905D0], ObjectType, v5);
}

uint64_t AssetClient.fetchImageData(remoteURL:priority:pixelWidth:pixelHeight:cropCode:fileType:expirationPolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (*a8)(char *, char *, uint64_t)@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t (**v48)@<X0>(void *@<X0>, uint64_t@<X8>);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v60 = a8;
  v64 = a9;
  v65 = a6;
  v55 = a3;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E550);
  v58 = *(_QWORD *)(v17 - 8);
  v59 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v56 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v19;
  MEMORY[0x1E0C80A78](v18);
  v66 = (uint64_t)&v49 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1CE0B3D10();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 64);
  v27 = MEMORY[0x1E0C80A78](v24);
  v50 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v61 = (char *)&v49 - v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = a1;
  v62 = a7;
  v63 = a2;
  v53 = a4;
  v54 = a5;
  URL.init(templateURLString:pixelWidth:pixelHeight:cropCode:fileType:)(a1, a2, a4, a5, v65, a7, (uint64_t)v60, a10, (uint64_t)v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_1CE01B1A0((uint64_t)v23);
    v29 = sub_1CE0B3E9C();
    sub_1CDFB1900(&qword_1EFA641A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8FE98], MEMORY[0x1E0D8FEA8]);
    v30 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x1E0D8FE10], v29);
    *(_QWORD *)(swift_allocObject() + 16) = v30;
    return sub_1CE0B5C0C();
  }
  else
  {
    v49 = a11;
    v33 = a12 & 1;
    v60 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v34 = (uint64_t)v61;
    v60(v61, v23, v24);
    v35 = v55;
    v36 = v57;
    AssetClient.fetchImageData(remoteURL:priority:expirationPolicy:)(v34, v55, a11, v33, v66);
    v37 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v50, v34, v24);
    v38 = (*(unsigned __int8 *)(v25 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v39 = swift_allocObject();
    v40 = v63;
    *(_QWORD *)(v39 + 16) = v51;
    *(_QWORD *)(v39 + 24) = v40;
    LODWORD(v40) = v54;
    *(_DWORD *)(v39 + 32) = v53;
    *(_DWORD *)(v39 + 36) = v40;
    v41 = v62;
    *(_QWORD *)(v39 + 40) = v65;
    *(_QWORD *)(v39 + 48) = v41;
    *(_QWORD *)(v39 + 56) = v36;
    *(_QWORD *)(v39 + 64) = v35;
    *(_QWORD *)(v39 + 72) = v49;
    *(_BYTE *)(v39 + 80) = v33;
    v60((char *)(v39 + v38), v37, v24);
    v43 = v58;
    v42 = v59;
    v44 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v56, v66, v59);
    v45 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v46 = (v52 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
    v47 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v47 + v45, v44, v42);
    v48 = (uint64_t (**)@<X0>(void *@<X0>, uint64_t@<X8>))(v47 + v46);
    *v48 = sub_1CE0A58A0;
    v48[1] = (uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>))v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1CE0B5C00();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v66, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v61, v24);
  }
}

void sub_1CDFAED54()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_1CE0B626C();
  v2 = (id)sub_1CE0B626C();
  objc_msgSend(v0, sel_setObject_forKey_, v1, v2);

}

void sub_1CDFAEDFC(Swift::Int a1, NSObject *a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  NSObject *v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  __int128 v39;
  unint64_t v40;
  NSObject *v41;
  uint64_t aBlock[6];
  uint64_t v43;

  v4 = v3;
  v41 = a2;
  v7 = sub_1CE0B6140();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B6158();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  TransportEvent.init(rawValue:)(a1);
  v15 = aBlock[0];
  if (LOBYTE(aBlock[0]) != 54)
  {
    v40 = a3;
    v19 = v4[3];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 16));
    swift_beginAccess();
    v20 = v4[7];
    if (*(_QWORD *)(v20 + 16) && (v21 = sub_1CDFC6D80(v15), (v22 & 1) != 0))
    {
      v39 = *(_OWORD *)(*(_QWORD *)(v20 + 56) + 16 * v21);
      v23 = *(os_unfair_lock_s **)(v19 + 16);
      swift_retain();
      os_unfair_lock_unlock(v23);
      if ((_QWORD)v39)
      {
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v39;
        *(_QWORD *)&v39 = v4[2];
        v25 = (_QWORD *)swift_allocObject();
        v25[2] = sub_1CDFCCB34;
        v25[3] = v24;
        v26 = v40;
        v27 = v41;
        v25[4] = v41;
        v25[5] = v26;
        aBlock[4] = (uint64_t)sub_1CDFC9EFC;
        aBlock[5] = (uint64_t)v25;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1CDFB33D0;
        aBlock[3] = (uint64_t)&block_descriptor_42;
        v28 = _Block_copy(aBlock);
        swift_retain_n();
        sub_1CDFC2094((uint64_t)v27, v26);
        sub_1CE0B614C();
        v43 = MEMORY[0x1E0DEE9D8];
        sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
        sub_1CDFC20A8();
        sub_1CE0B6944();
        MEMORY[0x1D17BFB04](0, v14, v10, v28);
        _Block_release(v28);
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_18:
        swift_release();
        return;
      }
    }
    else
    {
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
    }
    if (qword_1ED8F1890 != -1)
      swift_once();
    v29 = sub_1CE0B6080();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED8F1870);
    swift_retain();
    v30 = sub_1CE0B6068();
    v31 = sub_1CE0B671C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      aBlock[0] = v33;
      *(_DWORD *)v32 = 136446466;
      v34 = v4[4];
      v35 = v4[5];
      swift_bridgeObjectRetain();
      v43 = sub_1CDFC7270(v34, v35, aBlock);
      sub_1CE0B68F0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      LOBYTE(v43) = v15;
      v36 = sub_1CDFC6E98();
      v37 = MEMORY[0x1D17BF33C](&type metadata for TransportEvent, v36);
      v43 = sub_1CDFC7270(v37, v38, aBlock);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CDFAA000, v30, v31, "No dispatch handler on %{public}s found for event: %{public}s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v33, -1, -1);
      MEMORY[0x1D17C092C](v32, -1, -1);

      return;
    }

    goto LABEL_18;
  }
  if (qword_1ED8F1890 != -1)
    swift_once();
  v16 = sub_1CE0B6080();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED8F1870);
  v41 = sub_1CE0B6068();
  v17 = sub_1CE0B671C();
  if (os_log_type_enabled(v41, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v18 = 134349056;
    aBlock[0] = a1;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v41, v17, "Invalid eventIdentifier: %{public}ld", v18, 0xCu);
    MEMORY[0x1D17C092C](v18, -1, -1);
  }

}

uint64_t sub_1CDFAF358()
{
  return CatalogClient.queryAllTrainerReferences()();
}

uint64_t CatalogClient.queryAllTrainerReferences()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CCA10;
  v3._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 75;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0F78);
  v8 = sub_1CDFB0260(&qword_1ED8F0F80, &qword_1ED8F0F78, MEMORY[0x1E0D92020], MEMORY[0x1E0D92028]);
  v9 = sub_1CDFAF4A8();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFAF4A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED8F0F88;
  if (!qword_1ED8F0F88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F0F78);
    v2 = sub_1CDFB1900(&qword_1ED8F0F58, MEMORY[0x1E0D92038], MEMORY[0x1E0D92030]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F0F88);
  }
  return result;
}

uint64_t sub_1CDFAF524()
{
  return CatalogClient.queryAllBodyFocuses()();
}

uint64_t CatalogClient.queryAllBodyFocuses()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC940;
  v3._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 91;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA632F0);
  v8 = sub_1CDFB0260(&qword_1EFA632F8, &qword_1EFA632F0, MEMORY[0x1E0D966A8], MEMORY[0x1E0D966B0]);
  v9 = sub_1CDFAF674();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFAF674()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63300;
  if (!qword_1EFA63300)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA632F0);
    v2 = sub_1CDFB1900(&qword_1EFA63308, (uint64_t (*)(uint64_t))MEMORY[0x1E0D966C0], MEMORY[0x1E0D966B8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63300);
  }
  return result;
}

uint64_t sub_1CDFAF6F0()
{
  return CatalogClient.queryAllSkillLevels()();
}

uint64_t CatalogClient.queryAllSkillLevels()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC9F0;
  v3._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 94;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63390);
  v8 = sub_1CDFB0260(&qword_1EFA63398, &qword_1EFA63390, MEMORY[0x1E0D900A0], MEMORY[0x1E0D900A8]);
  v9 = sub_1CDFAF840();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFAF840()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA633A0;
  if (!qword_1EFA633A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63390);
    v2 = sub_1CDFB1900(&qword_1EFA633A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D900B8], MEMORY[0x1E0D900B0]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA633A0);
  }
  return result;
}

uint64_t sub_1CDFAF8BC()
{
  return CatalogClient.queryAllEquipment()();
}

uint64_t CatalogClient.queryAllEquipment()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC9B0;
  v3._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 93;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63350);
  v8 = sub_1CDFB0260(&qword_1EFA63358, &qword_1EFA63350, MEMORY[0x1E0D96740], MEMORY[0x1E0D96748]);
  v9 = sub_1CDFAFA0C();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFAFA0C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63360;
  if (!qword_1EFA63360)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63350);
    v2 = sub_1CDFB1900(&qword_1EFA63368, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96758], MEMORY[0x1E0D96750]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63360);
  }
  return result;
}

uint64_t GatedResource.queueCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + qword_1ED8F1ED0);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16);
  v4 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1CDFB5AA8(v3, v2, v5, v6, (uint64_t)&v8);
  os_unfair_lock_unlock(v4);
  return v8;
}

_QWORD *sub_1CDFAFB1C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  v5 = a2[4];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1CDFAFB60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = type metadata accessor for ActivityTracer();
  v6 = __swift_project_value_buffer(v5, a2);
  return sub_1CDFAFBAC(v6, a3);
}

uint64_t sub_1CDFAFBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityTracer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ActivityTracer()
{
  uint64_t result;

  result = qword_1ED8F1188;
  if (!qword_1ED8F1188)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t initializeWithCopy for ActivityTracer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B6020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t DispatchTimerProvider.makeTimer(fireAfter:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  void (*v31)(char *, _QWORD, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[7];

  v48 = a2;
  v49 = a3;
  v46 = a1;
  v5 = sub_1CE0B6140();
  v53 = *(_QWORD *)(v5 - 8);
  v54 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B6158();
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B6134();
  v45 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v44 = (char *)v41 - v13;
  v14 = sub_1CE0B6170();
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v41 - v18;
  v20 = sub_1CE0B67AC();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938];
  v22 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41[1] = sub_1CDFB7190();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1CDFB1900((unint64_t *)&qword_1ED8F0CC0, v21, MEMORY[0x1E0DEF948]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F0CA0);
  sub_1CDFB7C5C((unint64_t *)&qword_1ED8F0CB0, (uint64_t *)&unk_1ED8F0CA0);
  sub_1CE0B6944();
  v25 = sub_1CE0B67B8();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
  ObjectType = swift_getObjectType();
  sub_1CE0B6164();
  MEMORY[0x1D17BF4F8](v17, a4);
  v27 = v43;
  v28 = *(void (**)(char *, uint64_t))(v42 + 8);
  v28(v17, v43);
  v30 = v44;
  v29 = v45;
  v31 = *(void (**)(char *, _QWORD, uint64_t))(v45 + 104);
  v31(v44, *MEMORY[0x1E0DEF498], v9);
  *(_QWORD *)v12 = 0;
  v31(v12, *MEMORY[0x1E0DEF480], v9);
  MEMORY[0x1D17BFBA0](v19, v30, v12, ObjectType);
  v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v12, v9);
  v32(v30, v9);
  v28(v19, v27);
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v34 = (_QWORD *)swift_allocObject();
  v36 = v48;
  v35 = v49;
  v34[2] = v33;
  v34[3] = v36;
  v34[4] = v35;
  aBlock[4] = sub_1CE06CD10;
  aBlock[5] = v34;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_13;
  v37 = _Block_copy(aBlock);
  swift_retain();
  sub_1CDFB6BE4(v36);
  v38 = v47;
  sub_1CE0B614C();
  v39 = v50;
  sub_1CDFB70E4();
  sub_1CE0B67D0();
  _Block_release(v37);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v54);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v52);
  swift_release();
  swift_release();
  sub_1CE0B67E8();
  return v25;
}

uint64_t sub_1CDFB0094()
{
  return BookmarkClient.queryAllPlaylists()();
}

uint64_t BookmarkClient.queryAllPlaylists()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63408);
  v2._countAndFlagsBits = 0xD000000000000069;
  v2._object = (void *)0x80000001CE0C9AE0;
  v3._object = (void *)0x80000001CE0C9CA0;
  v3._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 47;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6E8);
  v8 = sub_1CDFB0260(&qword_1EFA5F6F0, &qword_1EFA5F6E8, MEMORY[0x1E0D96520], MEMORY[0x1E0D96528]);
  v9 = sub_1CDFB01E4();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFB01E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5F6F8;
  if (!qword_1EFA5F6F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F6E8);
    v2 = sub_1CDFB1900(&qword_1EFA5F700, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], MEMORY[0x1E0D96530]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5F6F8);
  }
  return result;
}

uint64_t sub_1CDFB0260(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t GatedResource.init(logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for GatedResource.State(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v15 - v8);
  v10 = v4 + qword_1ED8F1ED8;
  v11 = sub_1CE0B6080();
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B6518();
  *v9 = sub_1CE0B6488();
  swift_storeEnumTagMultiPayload();
  v13 = sub_1CDFB03F4();
  (*(void (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a1, v11);
  *(_QWORD *)(v4 + qword_1ED8F1ED0) = v13;
  return v4;
}

uint64_t sub_1CDFB03F4()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1CE0B6A58();
  return sub_1CE0B6A4C();
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1CDFCCFF0(a1, &qword_1ED8F0CB8);
}

Swift::Void __swiftcall XPCServer.broadcastEvent(_:)(SeymourClient::TransportEvent a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t (**v38)(uint64_t *);
  char *v39;
  uint64_t v40;
  void (*v41)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;

  v2 = (unsigned __int8 *)a1;
  v57 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v54 = *(_QWORD *)(v57 - 8);
  v3 = *(_QWORD *)(v54 + 64);
  v4 = MEMORY[0x1E0C80A78](v57);
  v56 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v55 = (char *)v44 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v52 = *(_QWORD *)(v6 - 8);
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = *v2;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_clients);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(os_unfair_lock_s **)(v8 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v11);
  if ((v10 & 0xC000000000000001) != 0)
  {
    sub_1CE0B6968();
    type metadata accessor for XPCClient();
    sub_1CDFB1900((unint64_t *)&unk_1EFA63AC8, (uint64_t (*)(uint64_t))type metadata accessor for XPCClient, (uint64_t)&protocol conformance descriptor for XPCClient);
    sub_1CE0B66BC();
    v10 = v62;
    v46 = v63;
    v12 = v64;
    v13 = v65;
    v14 = v66;
  }
  else
  {
    v13 = 0;
    v15 = -1 << *(_BYTE *)(v10 + 32);
    v16 = *(_QWORD *)(v10 + 56);
    v46 = v10 + 56;
    v12 = ~v15;
    v17 = -v15;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v14 = v18 & v16;
  }
  v44[1] = v10 & 0x7FFFFFFFFFFFFFFFLL;
  v45 = (unint64_t)(v12 + 64) >> 6;
  v48 = v3 + 7;
  v47 = MEMORY[0x1E0DEE9C0] + 8;
  v44[0] = MEMORY[0x1E0DEE9B0] + 8;
  v49 = v10;
  v20 = v54;
  v19 = v55;
  if (v10 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v14)
    {
      v21 = (v14 - 1) & v14;
      v22 = __clz(__rbit64(v14)) | (v13 << 6);
      v23 = v13;
      goto LABEL_27;
    }
    v26 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v26 >= v45)
      goto LABEL_30;
    v27 = *(_QWORD *)(v46 + 8 * v26);
    v23 = v13 + 1;
    if (!v27)
    {
      v23 = v13 + 2;
      if (v13 + 2 >= v45)
        goto LABEL_30;
      v27 = *(_QWORD *)(v46 + 8 * v23);
      if (!v27)
      {
        v23 = v13 + 3;
        if (v13 + 3 >= v45)
          goto LABEL_30;
        v27 = *(_QWORD *)(v46 + 8 * v23);
        if (!v27)
        {
          v23 = v13 + 4;
          if (v13 + 4 >= v45)
            goto LABEL_30;
          v27 = *(_QWORD *)(v46 + 8 * v23);
          if (!v27)
          {
            v28 = v13 + 5;
            while (v45 != v28)
            {
              v27 = *(_QWORD *)(v46 + 8 * v28++);
              if (v27)
              {
                v23 = v28 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1CDFC879C();
            return;
          }
        }
      }
    }
LABEL_26:
    v21 = (v27 - 1) & v27;
    v22 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_27:
    v25 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v22);
    swift_retain();
    if (!v25)
      goto LABEL_30;
    while (1)
    {
      v29 = swift_allocObject();
      v59 = v23;
      *(_QWORD *)(v29 + 16) = v25;
      *(_BYTE *)(v29 + 24) = 1;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
      sub_1CE0B5C00();
      v30 = swift_allocObject();
      *(_BYTE *)(v30 + 16) = v50;
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = sub_1CE000A8C;
      *(_QWORD *)(v31 + 24) = v30;
      v32 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
      v33 = v56;
      v58 = v21;
      v34 = v57;
      v32(v56, v19, v57);
      v35 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v36 = (v48 + v35) & 0xFFFFFFFFFFFFFFF8;
      v37 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v37 + v35, v33, v34);
      v38 = (uint64_t (**)(uint64_t *))(v37 + v36);
      *v38 = sub_1CE000B68;
      v38[1] = (uint64_t (*)(uint64_t *))v31;
      v39 = v51;
      sub_1CE0B5C00();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v19, v34);
      v40 = v53;
      v41 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = 0;
      *(_QWORD *)(v42 + 24) = 0;
      v41(sub_1CDFF3920, v42);
      swift_release();
      swift_release();
      v43 = v40;
      v10 = v49;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v39, v43);
      swift_release();
      v14 = v58;
      v13 = v59;
      if ((v10 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      v24 = sub_1CE0B698C();
      if (v24)
      {
        v60 = v24;
        type metadata accessor for XPCClient();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v25 = v61;
        swift_unknownObjectRelease();
        v23 = v13;
        v21 = v14;
        if (v25)
          continue;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t Promise.init(_:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a7;
  *(_QWORD *)(v14 + 24) = a3;
  *(_QWORD *)(v14 + 32) = a4;
  *(_BYTE *)(v14 + 40) = a5;
  *(_QWORD *)(v14 + 48) = a6;
  *(_QWORD *)(v14 + 56) = a1;
  *(_QWORD *)(v14 + 64) = a2;
  return sub_1CE0B5C00();
}

uint64_t sub_1CDFB0A94()
{
  return ConfigurationClient.fetchRemoteConfiguration()();
}

uint64_t sub_1CDFB0AB4(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0CEAB0;
  v8._countAndFlagsBits = 0xD000000000000072;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t sub_1CDFB0B84(__int16 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = *a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_BYTE *)(v11 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = (v5 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v13, v7, v3);
  v16 = (_QWORD *)(v15 + v14);
  *v16 = sub_1CE001EC8;
  v16[1] = v12;
  swift_retain();
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t ConfigurationClient.fetchRemoteConfiguration()()
{
  return sub_1CDFB0AB4(0xD00000000000001ALL, (void *)0x80000001CE0CEB30, 107);
}

Swift::Void __swiftcall FitnessModeObserver.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD v12[6];

  if (*(_BYTE *)(v0 + 36) == 1)
  {
    v1 = *MEMORY[0x1E0CB50F8];
    if (*MEMORY[0x1E0CB50F8])
    {
      v2 = v0;
      v3 = (void *)objc_opt_self();
      sub_1CDFB7C20();
      v4 = (void *)sub_1CE0B6788();
      v5 = swift_allocObject();
      swift_weakInit();
      v12[4] = sub_1CE011314;
      v12[5] = v5;
      v12[0] = MEMORY[0x1E0C809B0];
      v12[1] = 1107296256;
      v12[2] = sub_1CDFB33D0;
      v12[3] = &block_descriptor_5;
      v6 = _Block_copy(v12);
      swift_release();
      v7 = objc_msgSend(v3, sel_registerNotification_queue_callback_, v1, v4, v6);
      _Block_release(v6);

      if (objc_msgSend(v3, sel_tokenIsValid_, v7))
      {
        *(_DWORD *)(v2 + 32) = (_DWORD)v7;
        *(_BYTE *)(v2 + 36) = 0;
      }
      else
      {
        if (qword_1ED8F1890 != -1)
          swift_once();
        v8 = sub_1CE0B6080();
        __swift_project_value_buffer(v8, (uint64_t)qword_1ED8F1870);
        v9 = sub_1CE0B6068();
        v10 = sub_1CE0B671C();
        if (os_log_type_enabled(v9, v10))
        {
          v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v11 = 0;
          _os_log_impl(&dword_1CDFAA000, v9, v10, "Failed to register for fitness mode changes", v11, 2u);
          MEMORY[0x1D17C092C](v11, -1, -1);
        }

      }
    }
    else
    {
      __break(1u);
    }
  }
}

unint64_t sub_1CDFB0F3C(Swift::OpaquePointer a1)
{
  return (unint64_t)ContactService.userContact(keys:)(a1);
}

CNContact_optional __swiftcall ContactService.userContact(keys:)(Swift::OpaquePointer keys)
{
  id v1;
  void *v2;
  objc_class *v3;
  id v4;
  Swift::Bool v5;
  void *v6;
  void *v7;
  objc_class *v8;
  id v9[2];
  CNContact_optional result;

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = sub_1CDFB103C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA637D0);
  v2 = (void *)sub_1CE0B6434();
  v9[0] = 0;
  v3 = (objc_class *)objc_msgSend(v1, sel_smu_meContactWithKeysToFetch_error_, v2, v9);

  v4 = v9[0];
  if (!v3)
  {
    v6 = v4;
    v7 = (void *)sub_1CE0B3CC8();

    swift_willThrow();
    v3 = 0;
  }
  v8 = v3;
  result.value.super.isa = v8;
  result.is_nil = v5;
  return result;
}

id sub_1CDFB103C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    v2 = *(id *)(v0 + 16);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
    v4 = *(void **)(v0 + 16);
    *(_QWORD *)(v0 + 16) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

_QWORD *sub_1CDFB10A4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v15 = a1;
  v14 = 47;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1CE05CC78, v11, ObjectType, a7);
  swift_release_n();
  v15 = a1;
  v14 = 48;
  v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1CE05CCA0, v12, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFB11E4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v15 = a1;
  v14 = 15;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1CE00386C, v11, ObjectType, a7);
  swift_release_n();
  v15 = a1;
  v14 = 16;
  v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1CE003894, v12, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFB1324(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  char v13;
  uint64_t v14;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v14 = a1;
  v13 = 46;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v13, (uint64_t)sub_1CDFEB34C, v11, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

uint64_t sub_1CDFB13F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1CDFB1434(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_QWORD *sub_1CDFB1478(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  char v13;
  uint64_t v14;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v14 = a1;
  v13 = 11;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v13, (uint64_t)sub_1CE09F2FC, v11, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

uint64_t sub_1CDFB154C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;

  ObjectType = swift_getObjectType();
  v14 = swift_getObjectType();
  v15 = a6(a1, a4, v6, ObjectType, v14, a2, a3, a5);
  swift_unknownObjectRelease();
  return v15;
}

_QWORD *sub_1CDFB15D8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType;
  uint64_t v12;
  char v14;
  uint64_t v15;

  a3[2] = a1;
  a3[3] = a6;
  a3[4] = a7;
  a3[5] = a2;
  a3[6] = a8;
  ObjectType = swift_getObjectType();
  v15 = a1;
  v14 = 14;
  v12 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v14, (uint64_t)sub_1CE08730C, v12, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a3;
}

uint64_t sub_1CDFB16AC(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1CDFB16E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFB16F0(a1, v1);
}

uint64_t sub_1CDFB16F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v4 = sub_1CE0B6140();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B6158();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = MEMORY[0x1D17C09E0](a2 + 16);
  if (result)
  {
    v13 = (void *)result;
    v14 = *(id *)(result + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_queue);

    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = a2;
    aBlock[4] = sub_1CDFC1334;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_6_0;
    v16 = _Block_copy(aBlock);
    swift_retain();
    sub_1CE0B614C();
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v11, v7, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CDFB1900(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D17C0848](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ResourceGating.release(returning:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v7 = sub_1CE0B6DA0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)&v12 - v9, a1, AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v10, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1CDFB1A3C(uint64_t a1)
{
  GatedResource.release(with:)(a1);
}

void GatedResource.release(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + qword_1ED8F1ED0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B6518();
  v4 = sub_1CE0B64C4();
  sub_1CE0B68A8();
  v5 = (_QWORD *)(v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16));
  v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1CDFB5D64(v5, v1, a1, &v8);
  os_unfair_lock_unlock(v6);
  if (v8)
  {
    MEMORY[0x1E0C80A78](v7);
    MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v4);
    sub_1CE0B63BC();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CDFB1BA4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  id v18;
  _QWORD v20[2];

  v20[0] = a2;
  v20[1] = a6;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v13, v14);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = (char *)swift_allocObject();
  *((_QWORD *)v17 + 2) = a3;
  *((_QWORD *)v17 + 3) = a4;
  *((_QWORD *)v17 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v17[v15], v12, a4);
  *(_QWORD *)&v17[v16] = v20[0];
  *(_QWORD *)&v17[(v16 + 15) & 0xFFFFFFFFFFFFFFF8] = a1;
  sub_1CE0B64C4();
  v18 = a1;
  return sub_1CE0B5C00();
}

_QWORD *sub_1CDFB1CC4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v16;
  uint64_t v17;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v17 = a1;
  v16 = 0;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v13 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v14 = sub_1CDFB1DD8();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE0AC6F0, v11, ObjectType, v12, a7, v13, v14);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

unint64_t sub_1CDFB1DD8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED8F0FC8;
  if (!qword_1ED8F0FC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F0E98);
    v2 = sub_1CDFAC428();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F0FC8);
  }
  return result;
}

uint64_t URL.init(templateURLString:pixelWidth:pixelHeight:cropCode:fileType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v36 = a7;
  v37 = a8;
  v34 = a5;
  v35 = a6;
  v38 = a9;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a1;
  v44 = a2;
  v41 = 8222587;
  v42 = 0xE300000000000000;
  LODWORD(v39) = a3;
  v39 = sub_1CE0B6C14();
  v40 = v16;
  sub_1CDFC7620();
  v17 = sub_1CE0B6920();
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = v17;
  v44 = v19;
  v41 = 8218747;
  v42 = 0xE300000000000000;
  LODWORD(v39) = a4;
  v39 = sub_1CE0B6C14();
  v40 = v20;
  v21 = sub_1CE0B6920();
  v23 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = v21;
  v44 = v23;
  v41 = 8217467;
  v42 = 0xE300000000000000;
  v39 = v34;
  v40 = v35;
  v24 = sub_1CE0B6920();
  v26 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v43 = v24;
  v44 = v26;
  v41 = 8218235;
  v42 = 0xE300000000000000;
  v39 = v36;
  v40 = v37;
  sub_1CE0B6920();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CE0B3D04();
  swift_bridgeObjectRelease();
  v27 = sub_1CE0B3D10();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v27))
  {
    sub_1CE01B1A0((uint64_t)v15);
    v29 = 1;
    v30 = v38;
  }
  else
  {
    v31 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v38, v15, v27);
    v29 = 0;
    v30 = v31;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v30, v29, 1, v27);
}

uint64_t sub_1CDFB2140()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1CDFB2168(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F06D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1CDFB21A8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v17 = a1;
  v16 = 3;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B4C70();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE01DEC8, v11, ObjectType, v12, a7, MEMORY[0x1E0D92178], MEMORY[0x1E0D92180]);
  swift_release();
  v17 = a1;
  v16 = 4;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = sub_1CE0B4D18();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE01DEF8, v13, ObjectType, v14, a7, MEMORY[0x1E0D924E8], MEMORY[0x1E0D924F0]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFB2314(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v17 = a1;
  v16 = 1;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B4E44();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE0A5DC8, v11, ObjectType, v12, a7, MEMORY[0x1E0D92948], MEMORY[0x1E0D92950]);
  swift_release();
  v17 = a1;
  v16 = 2;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = sub_1CE0B3F44();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE0A5DF8, v13, ObjectType, v14, a7, MEMORY[0x1E0D90178], MEMORY[0x1E0D90180]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

uint64_t sub_1CDFB2480(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  *(_QWORD *)(v12 + 32) = a6;
  *(_WORD *)(v12 + 40) = a3;
  *(_QWORD *)(v12 + 48) = a2;
  swift_retain();
  sub_1CDFB251C(1, a1, (void (*)(uint64_t, uint64_t))sub_1CDFB2968, v12, a4);
  return swift_release();
}

uint64_t sub_1CDFB251C(char a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v14;

  v6 = v5;
  v12 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  sub_1CDFB2618(v6, a1, a2, (uint64_t)a3, a4, a5, &v14);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  a3(v14, a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1CDFB2618@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD aBlock[8];

  v35 = a5;
  v36 = a4;
  v37 = a7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v12 = sub_1CE0B6518();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  if (*(_QWORD *)(a1 + 40))
  {
    v17 = *(_QWORD *)(a1 + 40);
LABEL_3:
    *v37 = v17;
    return swift_unknownObjectRetain();
  }
  v34 = a6;
  if (*(_BYTE *)(a1 + 48) == 2)
  {
    v19 = *(void **)(a1 + 24);
    v32 = v7;
    v33 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a3, v12);
    v20 = (*(unsigned __int8 *)(v13 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v34;
    *(_QWORD *)(v21 + 24) = a1;
    *(_BYTE *)(v21 + 32) = a2 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v20, v16, v12);
    v22 = (_QWORD *)(v21 + ((v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
    v23 = v35;
    *v22 = v36;
    v22[1] = v23;
    aBlock[4] = sub_1CE000F74;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFFC8A4;
    aBlock[3] = &block_descriptor_2;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v25 = objc_msgSend(v33, sel_remoteObjectProxyWithErrorHandler_, v24);
    _Block_release(v24);
    sub_1CE0B6938();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = aBlock[7];
      goto LABEL_3;
    }
  }
  if (qword_1ED8F1890 != -1)
    swift_once();
  v26 = sub_1CE0B6080();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED8F1870);
  v27 = sub_1CE0B6068();
  v28 = sub_1CE0B671C();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_1CDFAA000, v27, v28, "TransportServer unavailable", v29, 2u);
    MEMORY[0x1D17C092C](v29, -1, -1);
  }

  v30 = sub_1CE0B48C8();
  sub_1CDFC2DB0((unint64_t *)&qword_1EFA63A90, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v31, *MEMORY[0x1E0D913A8], v30);
  return swift_willThrow();
}

void sub_1CDFB2968(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CDFB297C(a1, a2, *(_WORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

void sub_1CDFB297C(void *a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  id v21;
  _QWORD aBlock[6];

  v20 = a7;
  v21 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v11 = sub_1CE0B6518();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - v13;
  v15 = qword_1CE0BCB90[a3];
  v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  v17 = (*(unsigned __int8 *)(v12 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = a5;
  *((_QWORD *)v18 + 3) = a6;
  *((_QWORD *)v18 + 4) = v20;
  *((_QWORD *)v18 + 5) = v16;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v18[v17], v14, v11);
  aBlock[4] = sub_1CDFBBD74;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_130;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v21, sel_receiveRequest_data_completion_, v15, 0, v19);
  _Block_release(v19);
}

uint64_t sub_1CDFB2B24@<X0>(uint64_t a1@<X8>)
{
  return StorefrontCache.queryContentAvailability()(a1);
}

uint64_t StorefrontCache.queryContentAvailability()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF7F8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v6 = (void *)sub_1CE0B626C();
  v7 = objc_msgSend(v5, sel_stringForKey_, v6);

  if (!v7)
    goto LABEL_4;
  sub_1CE0B6278();

  sub_1CE0B4E68();
  v8 = sub_1CE0B4E80();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_1CE0922D4((uint64_t)v4);
LABEL_4:
    v10 = *MEMORY[0x1E0D92AE0];
    v11 = sub_1CE0B4E80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v4, v8);
}

_QWORD *sub_1CDFB2CAC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v20 = a1;
  v19 = 8;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1CE0851F8, v11, ObjectType, a7);
  swift_release_n();
  v20 = a1;
  v19 = 5;
  v12 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CE085238, v12, ObjectType, MEMORY[0x1E0D93790], a7, MEMORY[0x1E0D93778], MEMORY[0x1E0D93780]);
  swift_release();
  v20 = a1;
  v19 = 6;
  v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1CE085240, v13, ObjectType, a7);
  swift_release_n();
  v20 = a1;
  v19 = 7;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v16 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v17 = sub_1CDFB2F18((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428, MEMORY[0x1E0D968E8]);
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CE085280, v14, ObjectType, v15, a7, v16, v17);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

uint64_t sub_1CDFB2F18(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x1D17C0848](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1CDFB2F7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v17 = a1;
  v16 = 43;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v16, (uint64_t)sub_1CE0AE0D0, v11, ObjectType, a7);
  swift_release_n();
  v17 = a1;
  v16 = 44;
  v12 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v16, (uint64_t)sub_1CE0AE110, v12, ObjectType, a7);
  swift_release_n();
  v17 = a1;
  v16 = 45;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = sub_1CE0B5078();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CE0AE150, v13, ObjectType, v14, a7, MEMORY[0x1E0D931D0], MEMORY[0x1E0D931D8]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFB312C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v20 = a1;
  v19 = 17;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B5B04();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CDFE1960, v11, ObjectType, v12, a7, MEMORY[0x1E0D95BC0], MEMORY[0x1E0D95BC8]);
  swift_release();
  v20 = a1;
  v19 = 18;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = sub_1CE0B5978();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CDFE1990, v13, ObjectType, v14, a7, MEMORY[0x1E0D95770], MEMORY[0x1E0D95778]);
  swift_release();
  v20 = a1;
  v19 = 25;
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = sub_1CE0B5B28();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CDFE19C0, v15, ObjectType, v16, a7, MEMORY[0x1E0D95C98], MEMORY[0x1E0D95CA0]);
  swift_release();
  v20 = a1;
  v19 = 19;
  v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1CDFE19F0, v17, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

uint64_t AsyncLockable.operation<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v10;

  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a3;
  v7[5] = a4;
  v7[2] = a1;
  v7[3] = a2;
  v10 = (_QWORD *)swift_task_alloc();
  v7[8] = v10;
  *v10 = v7;
  v10[1] = sub_1CDFB4694;
  return sub_1CDFB5450(a4, a6);
}

uint64_t sub_1CDFB33D0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_1CDFB33FC(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

_QWORD *sub_1CDFB3408(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v21 = a1;
  v20 = 31;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B4604();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE06755C, v11, ObjectType, v12, a7, MEMORY[0x1E0D90EF8], MEMORY[0x1E0D90F00]);
  swift_release();
  v21 = a1;
  v20 = 27;
  v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v20, (uint64_t)sub_1CE06758C, v13, ObjectType, a7);
  swift_release_n();
  v21 = a1;
  v20 = 29;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = sub_1CE0B5E04();
  v16 = MEMORY[0x1E0D96240];
  v17 = MEMORY[0x1E0D96248];
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE067594, v14, ObjectType, v15, a7, MEMORY[0x1E0D96240], MEMORY[0x1E0D96248]);
  swift_release();
  v21 = a1;
  v20 = 30;
  v18 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE0675C4, v18, ObjectType, v15, a7, v16, v17);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

void sub_1CDFB3644(char a1@<W0>, char a2@<W1>, char a3@<W2>, unsigned __int8 *a4@<X3>, char *a5@<X8>)
{
  int v9;
  uint64_t v10;
  Swift::String v11;
  Swift::String v12;
  char v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  os_log_type_t v18;
  const char *v19;
  NSObject *v20;
  uint8_t *v21;
  uint32_t v22;
  os_log_type_t v23;
  uint64_t v24;

  v9 = *a4;
  if (qword_1EFA5D4F8 != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EFA63468);
  v11._countAndFlagsBits = 0xD000000000000076;
  v12._object = (void *)0x80000001CE0CB9A0;
  v11._object = (void *)0x80000001CE0CBA20;
  v12._countAndFlagsBits = 0xD000000000000073;
  Logger.trace(file:function:)(v12, v11);
  if ((a2 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      v13 = 0;
      goto LABEL_16;
    }
LABEL_13:
    v14 = sub_1CE0B6068();
    v23 = sub_1CE0B6734();
    if (os_log_type_enabled(v14, v23))
    {
      v24 = swift_slowAlloc();
      *(_DWORD *)v24 = 67109376;
      sub_1CE0B68F0();
      *(_WORD *)(v24 + 8) = 1024;
      sub_1CE0B68F0();
      _os_log_impl(&dword_1CDFAA000, v14, v23, "[NetworkMonitor] Interface unavailable.\nWi-Fi: %{BOOL}d\nCellular data: %{BOOL}d", (uint8_t *)v24, 0xEu);
      MEMORY[0x1D17C092C](v24, -1, -1);
    }
LABEL_15:

    v13 = 1;
    goto LABEL_16;
  }
  if ((a3 & 1) == 0 && v9)
    goto LABEL_13;
  v13 = 0;
  if ((a1 & 1) != 0 && (a3 & 1) == 0)
  {
    v14 = sub_1CE0B6068();
    v15 = sub_1CE0B6734();
    v16 = os_log_type_enabled(v14, v15);
    if (v9)
    {
      if (v16)
      {
        v17 = swift_slowAlloc();
        *(_DWORD *)v17 = 67109632;
        v13 = 1;
        sub_1CE0B68F0();
        *(_WORD *)(v17 + 8) = 1024;
        sub_1CE0B68F0();
        *(_WORD *)(v17 + 14) = 1024;
        sub_1CE0B68F0();
        v18 = v15;
        v19 = "[NetworkMonitor] Interface unavailable.\n"
              "Airplane mode: %{BOOL}d\n"
              "Wi-Fi: %{BOOL}d\n"
              "Cellular data: %{BOOL}d";
        v20 = v14;
        v21 = (uint8_t *)v17;
        v22 = 20;
LABEL_19:
        _os_log_impl(&dword_1CDFAA000, v20, v18, v19, v21, v22);
        MEMORY[0x1D17C092C](v17, -1, -1);

        goto LABEL_16;
      }
    }
    else if (v16)
    {
      v17 = swift_slowAlloc();
      *(_DWORD *)v17 = 67109376;
      v13 = 1;
      sub_1CE0B68F0();
      *(_WORD *)(v17 + 8) = 1024;
      sub_1CE0B68F0();
      v18 = v15;
      v19 = "[NetworkMonitor] Interface unavailable.\nAirplane mode: %{BOOL}d\nWi-Fi: %{BOOL}d";
      v20 = v14;
      v21 = (uint8_t *)v17;
      v22 = 14;
      goto LABEL_19;
    }
    goto LABEL_15;
  }
LABEL_16:
  *a5 = v13;
}

uint64_t _s13SeymourClient26ContentRestrictionObserverC012queryAllowedC7RatingsShy0A4Core0C6RatingOGyF_0()
{
  id v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v0)
  {
    v1 = v0;
    if (objc_msgSend(v0, sel_isExplicitContentAllowedOutAsk_, 0))
    {
      v2 = sub_1CE0B4478();
      v3 = sub_1CDFD02B4(v2);

      swift_bridgeObjectRelease();
      return v3;
    }
    else
    {
      v9 = sub_1CDFE88CC((uint64_t)&unk_1E8B614D0);

      return v9;
    }
  }
  else
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v5 = sub_1CE0B6080();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
    v6 = sub_1CE0B6068();
    v7 = sub_1CE0B6734();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1CDFAA000, v6, v7, "[ContentRestrictionObserver] Failed to build shared profile connection, defaulting to clean content", v8, 2u);
      MEMORY[0x1D17C092C](v8, -1, -1);
    }

    return sub_1CDFE88CC((uint64_t)&unk_1E8B614F8);
  }
}

uint64_t sub_1CDFB3AA8(_BYTE *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v25;

  v3 = v2;
  v6 = *v2;
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B4490();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  v7 = sub_1CE0B6D64();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = sub_1CE0B4490();
    v12 = v11;
    if (v10 == sub_1CE0B4490() && v12 == v13)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      goto LABEL_18;
    }
    v15 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
LABEL_18:
      result = 0;
      LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v3 + 48) + v9);
      goto LABEL_19;
    }
    v16 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v16;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v17 = sub_1CE0B4490();
      v19 = v18;
      if (v17 == sub_1CE0B4490() && v19 == v20)
        goto LABEL_17;
      v22 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v3;
  *v3 = 0x8000000000000000;
  sub_1CDFB3CC0(a2, v9, isUniquelyReferenced_nonNull_native);
  *v3 = v25;
  swift_bridgeObjectRelease();
  result = 1;
LABEL_19:
  *a1 = a2;
  return result;
}

uint64_t sub_1CDFB3CC0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = v3;
  v6 = result;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_22;
  if ((a3 & 1) != 0)
  {
    sub_1CE096AD4();
  }
  else
  {
    if (v8 > v7)
    {
      result = (uint64_t)sub_1CE09A770();
LABEL_22:
      v24 = *v4;
      *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(_BYTE *)(*(_QWORD *)(v24 + 48) + a2) = v6;
      v25 = *(_QWORD *)(v24 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (!v26)
      {
        *(_QWORD *)(v24 + 16) = v27;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1CE09B1A0();
  }
  v9 = *v3;
  sub_1CE0B6D34();
  sub_1CE0B4490();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  result = sub_1CE0B6D64();
  v10 = -1 << *(_BYTE *)(v9 + 32);
  a2 = result & ~v10;
  if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
    goto LABEL_22;
  v11 = sub_1CE0B4490();
  v13 = v12;
  if (v11 == sub_1CE0B4490() && v13 == v14)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  v16 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
    v17 = ~v10;
    do
    {
      a2 = (a2 + 1) & v17;
      if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_22;
      v18 = sub_1CE0B4490();
      v20 = v19;
      if (v18 == sub_1CE0B4490() && v20 == v21)
        goto LABEL_25;
      v23 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
    while ((v23 & 1) == 0);
  }
LABEL_26:
  result = sub_1CE0B6C8C();
  __break(1u);
  return result;
}

unint64_t sub_1CDFB3EE4()
{
  unint64_t result;

  result = qword_1ED8EF7F0;
  if (!qword_1ED8EF7F0)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90D10], MEMORY[0x1E0D90D00]);
    atomic_store(result, (unint64_t *)&qword_1ED8EF7F0);
  }
  return result;
}

uint64_t sub_1CDFB3F28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t EventHub.subscribe<A>(_:subscriptionToken:handler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  _QWORD *v14;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a3;
  v14[5] = a4;
  swift_retain();
  EventHub.subscribe<A>(_:subscriptionToken:handler:)(a1, a2, (uint64_t)&unk_1EFA5E7C0, (uint64_t)v14, a5, a6, a7);
  return swift_release();
}

{
  _QWORD *v14;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a5;
  v14[3] = a6;
  v14[4] = a3;
  v14[5] = a4;
  v14[6] = a1;
  swift_retain();
  EventHub.subscribe<A>(_:subscriptionToken:handler:)(a2, (uint64_t)sub_1CDFC9640, (uint64_t)v14, a5, a6, a7);
  return swift_release();
}

uint64_t sub_1CDFB40A0(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = sub_1CE0B6080();
  __swift_allocate_value_buffer(v7, a2);
  v8 = __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v9 = type metadata accessor for LogSystem();
  v10 = __swift_project_value_buffer(v9, a4) + *(int *)(v9 + 20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v8, v10, v7);
}

uint64_t type metadata accessor for LogSystem()
{
  uint64_t result;

  result = qword_1ED8F16C8;
  if (!qword_1ED8F16C8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CDFB4180()
{
  unint64_t result;

  result = qword_1ED8F1868;
  if (!qword_1ED8F1868)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F1868);
  }
  return result;
}

uint64_t sub_1CDFB41BC(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1CE0B66A4();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1CDFB4350(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1CDFB4350(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1CE0B6D34();
  swift_bridgeObjectRetain();
  sub_1CE0B62CC();
  v8 = sub_1CE0B6D64();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1CE0B6C50() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1CE0B6C50() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1CDFB44FC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1CDFB44FC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1CE096DA8();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1CE09A900();
      goto LABEL_22;
    }
    sub_1CE09B440();
  }
  v11 = *v4;
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  result = sub_1CE0B6D64();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1CE0B6C50(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1CE0B6C8C();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1CE0B6C50();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1CDFB4694()
{
  uint64_t *v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v1 = *v0;
  v2 = *(int **)(*v0 + 24);
  v3 = *v0;
  swift_task_dealloc();
  v6 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 72) = v4;
  *v4 = v3;
  v4[1] = sub_1CDFB4770;
  return v6(*(_QWORD *)(v1 + 16));
}

_QWORD *assignWithTake for AsyncLock(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeBufferWithCopyOfBuffer for AsyncLock(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CDFB4770()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  sub_1CE0B64DC();
  return swift_task_switch();
}

uint64_t sub_1CDFB47F8(uint64_t a1)
{
  return ServiceSubscriptionClient.fetchServiceSubscription(with:)(a1);
}

uint64_t ServiceSubscriptionClient.fetchServiceSubscription(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD000000000000077;
  v4._object = (void *)0x80000001CE0CD700;
  v5._object = (void *)0x80000001CE0CD780;
  v5._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 109;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5738();
  v10 = sub_1CE0B4FB8();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D94D50], MEMORY[0x1E0D94D58], MEMORY[0x1E0D92DA8], MEMORY[0x1E0D92DB0], ObjectType, v6);
}

uint64_t sub_1CDFB4940(char a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(__int16 *, char *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  char v18;
  __int16 v19;

  v13 = *(_QWORD *)(*(_QWORD *)v7 + 24);
  ObjectType = swift_getObjectType();
  v19 = a4;
  v18 = a1;
  v15 = *(uint64_t (**)(__int16 *, char *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 32);
  v16 = a5(0);
  return v15(&v19, &v18, MEMORY[0x1E0DEAFA0], v16, MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], a6, a7, ObjectType, v13);
}

uint64_t sub_1CDFB49F8(char a1, uint64_t a2, void *a3, __int16 a4)
{
  uint64_t v4;
  uint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  uint64_t ObjectType;
  char v15;
  __int16 v16;

  if (qword_1ED8F0000 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8EFFE0);
  v10._object = (void *)0x80000001CE0C7B40;
  v10._countAndFlagsBits = 0xD000000000000065;
  v11._countAndFlagsBits = a2;
  v11._object = a3;
  Logger.trace(file:function:)(v10, v11);
  v12 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v16 = a4;
  v15 = a1;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 32))(&v16, &v15, MEMORY[0x1E0D90480], MEMORY[0x1E0DEA968], MEMORY[0x1E0D90468], MEMORY[0x1E0D90470], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v12);
}

uint64_t XPCClient.sendRequest<A, B>(_:payload:)@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[4];
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a7;
  v33 = a8;
  v30 = a5;
  v31 = a6;
  v35 = a9;
  v14 = *(_QWORD *)(a3 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](a1);
  v16 = &v27[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v34 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = *a1;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v9;
  *(_BYTE *)(v19 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, a2, a3);
  v20 = (*(unsigned __int8 *)(v14 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v21 = (v15 + v20 + 1) & 0xFFFFFFFFFFFFFFFELL;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a3;
  *((_QWORD *)v22 + 3) = a4;
  v23 = v31;
  *((_QWORD *)v22 + 4) = v30;
  *((_QWORD *)v22 + 5) = v23;
  v24 = v33;
  *((_QWORD *)v22 + 6) = v32;
  *((_QWORD *)v22 + 7) = v24;
  (*(void (**)(char *, _BYTE *, uint64_t))(v14 + 32))(&v22[v20], v16, a3);
  *(_WORD *)&v22[v21] = v28;
  *(_QWORD *)&v22[(v21 + 9) & 0xFFFFFFFFFFFFFFF8] = v9;
  swift_retain();
  v25 = v29;
  sub_1CE0B5C3C();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v34 + 8))(v18, v25);
}

uint64_t sub_1CDFB4CFC()
{
  _QWORD *v0;
  void **v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v22;

  v1 = (void **)v0[25];
  sub_1CDFB53C8(0, (unint64_t *)&qword_1EFA5D9F8);
  v2 = (void *)MEMORY[0x1D17BFAB0]((id)*MEMORY[0x1E0CB5A48]);
  v0[26] = v2;
  v3 = (void *)MEMORY[0x1D17BFAB0]((id)*MEMORY[0x1E0CB5A88]);
  v0[27] = v3;
  v4 = (void *)MEMORY[0x1D17BFAB0]((id)*MEMORY[0x1E0CB5C38]);
  v0[28] = v4;
  v5 = (void *)MEMORY[0x1D17BFAB0]((id)*MEMORY[0x1E0CB5C68]);
  v0[29] = v5;
  v6 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CE0C21B0;
  *(_QWORD *)(inited + 32) = v2;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  v22 = inited;
  sub_1CE0B644C();
  if (v22 >> 62)
  {
    v13 = v2;
    v14 = v3;
    v15 = v4;
    v16 = v5;
    swift_bridgeObjectRetain();
    v17 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    if (!v17)
      goto LABEL_5;
    goto LABEL_3;
  }
  v8 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  if (v8)
LABEL_3:
    sub_1CDFEA244(v22);
LABEL_5:
  swift_bridgeObjectRelease();
  sub_1CDFB4FFC();
  v18 = sub_1CE0B6680();
  v0[30] = v18;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 23;
  v0[2] = v0;
  v0[3] = sub_1CDFAD640;
  v19 = swift_continuation_init();
  v0[18] = MEMORY[0x1E0C809B0];
  v20 = v0 + 18;
  v20[1] = 0x40000000;
  v20[2] = sub_1CDFB4F28;
  v20[3] = &block_descriptor_8;
  v20[4] = v19;
  objc_msgSend(v6, sel_preferredUnitsForQuantityTypes_completion_, v18, v20);
  return swift_continuation_await();
}

uint64_t sub_1CDFB4F28(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    sub_1CDFB53C8(0, (unint64_t *)&qword_1EFA5D9F8);
    sub_1CDFB53C8(0, qword_1EFA60C10);
    sub_1CDFB4FFC();
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = sub_1CE0B6218();
    return swift_continuation_throwingResume();
  }
}

unint64_t sub_1CDFB4FFC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA60A50;
  if (!qword_1EFA60A50)
  {
    v1 = sub_1CDFB53C8(255, (unint64_t *)&qword_1EFA5D9F8);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA60A50);
  }
  return result;
}

uint64_t sub_1CDFB5054()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 184);

  v3 = v1;
  v4 = sub_1CDFB52F4(v3, v2);

  if (!v4)
    v4 = objc_msgSend((id)objc_opt_self(), sel_kilocalorieUnit);
  v5 = *(id *)(v0 + 216);
  v6 = sub_1CDFB52F4(v5, v2);

  if (!v6)
    v6 = objc_msgSend((id)objc_opt_self(), sel_kilocalorieUnit);
  v7 = *(id *)(v0 + 224);
  v8 = sub_1CDFB52F4(v7, v2);

  if (!v8)
    v8 = objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 9);
  v9 = *(id *)(v0 + 232);
  v10 = sub_1CDFB52F4(v9, v2);
  swift_bridgeObjectRelease();

  if (!v10)
    v10 = objc_msgSend((id)objc_opt_self(), sel_meterUnitWithMetricPrefix_, 9);
  v19 = *(void **)(v0 + 224);
  v20 = *(void **)(v0 + 232);
  v17 = *(void **)(v0 + 208);
  v18 = *(void **)(v0 + 216);
  v11 = objc_msgSend(v4, sel_unitString);
  sub_1CE0B6278();

  v16 = v4;
  v12 = objc_msgSend(v6, sel_unitString);
  sub_1CE0B6278();

  v13 = objc_msgSend(v8, sel_unitString);
  sub_1CE0B6278();

  v14 = objc_msgSend(v10, sel_unitString);
  sub_1CE0B6278();

  sub_1CE0B6650();
  sub_1CE0B4AC0();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_1CDFB52F4(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1CDFD1E74((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_1CE0B6AD0();

  if (!v4)
    return 0;
  sub_1CDFB53C8(0, qword_1EFA60C10);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t sub_1CDFB53C8(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t SubscriptionToken.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;

  ObjectType = swift_getObjectType();
  v6 = sub_1CDFD3EF8(a1, v2, ObjectType, a2);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1CDFB5450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = *(_QWORD *)(a2 + 8);
  v3[7] = sub_1CE0B64DC();
  v3[8] = v4;
  return swift_task_switch();
}

uint64_t sub_1CDFB54A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int EnumCaseMultiPayload;
  _BYTE *v13;
  _QWORD v15[2];

  v8 = type metadata accessor for GatedResource.State(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v15 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v15 - v10, a1, v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_1CDFF0BCC();
    swift_allocError();
    *v13 = 0;
    return swift_willThrow();
  }
  if (EnumCaseMultiPayload == 1)
    return swift_willThrow();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a5, v11, a2);
}

void sub_1CDFB55A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v5 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v34 - v10;
  v14 = type metadata accessor for GatedResource.State(0, v5, v12, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v34 - v16);
  (*(void (**)(char *, uint64_t *, uint64_t))(v15 + 16))((char *)&v34 - v16, a1, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v37 = *v17;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
      sub_1CE0B6518();
      sub_1CE0B6500();
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v6 + 32))(v11, v17, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
      sub_1CE0B6518();
      sub_1CE0B650C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v15 + 8))(a1, v14);
    v19 = *v17;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
    v20 = sub_1CE0B6518();
    sub_1CE0B6C20();
    v21 = *(_QWORD *)(v20 - 8);
    swift_allocObject();
    sub_1CE0B6458();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v22, v35, v20);
    sub_1CE0B64C4();
    v23 = sub_1CE0B647C();
    swift_bridgeObjectRelease();
    *a1 = v23;
    swift_storeEnumTagMultiPayload();
    v37 = a3;
    v24 = sub_1CE0B6290();
    v26 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_1CE0B6068();
    v28 = sub_1CE0B6734();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      v37 = v35;
      *(_DWORD *)v29 = 136446722;
      swift_bridgeObjectRetain();
      v36 = sub_1CDFC7270(v24, v26, &v37);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2082;
      v36 = v5;
      swift_getMetatypeMetadata();
      v30 = sub_1CE0B6290();
      v36 = sub_1CDFC7270(v30, v31, &v37);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2048;
      v32 = MEMORY[0x1D17BF81C](v19, v20);
      swift_bridgeObjectRelease();
      if (__OFADD__(v32, 1))
      {
        __break(1u);
      }
      else
      {
        v36 = v32 + 1;
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CDFAA000, v27, v28, "[%{public}s] GatedResource<%{public}s> is now at %ld", (uint8_t *)v29, 0x20u);
        v33 = v35;
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v33, -1, -1);
        MEMORY[0x1D17C092C](v29, -1, -1);

      }
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1CDFB5A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;

  v4 = *(_QWORD *)(a2 + qword_1ED8F1ED0);
  v5 = (uint64_t *)(v4 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v4 + 16));
  v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(_QWORD *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_1CDFB55A8(v5, a1, a2);
  os_unfair_lock_unlock(v6);
}

uint64_t type metadata accessor for GatedResource.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GatedResource.State);
}

uint64_t sub_1CDFB5AA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v7 = type metadata accessor for GatedResource.State(0, a2, a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v16 - v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v16 - v9, a1, v7);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
    v13 = 0;
  }
  else
  {
    v14 = *v10;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
    v15 = sub_1CE0B6518();
    v13 = MEMORY[0x1D17BF81C](v14, v15);
    result = swift_bridgeObjectRelease();
  }
  *(_QWORD *)a5 = v13;
  *(_BYTE *)(a5 + 8) = EnumCaseMultiPayload != 0;
  return result;
}

id *sub_1CDFB5BB4(id *a1, id *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    (*(void (**)(id *))(v4 + 16))(a1);
    v10 = 2;
  }
  else
  {
    if (v6 != 1)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v5) = 0;
      swift_bridgeObjectRetain();
      return a1;
    }
    v8 = *a2;
    v9 = *a2;
    *a1 = v8;
    v10 = 1;
  }
  *((_BYTE *)a1 + v5) = v10;
  return a1;
}

void sub_1CDFB5CB4(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2)
    {
      (*(void (**)(void))(v2 + 8))();
    }
    else if (v4 == 1)
    {

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    ((void (*)(void))((char *)&loc_1CDFB5CFC + 4 * byte_1CE0BC20D[v5]))();
  }
}

uint64_t sub_1CDFB5D64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  int EnumCaseMultiPayload;
  uint64_t (*v22)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  os_log_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;

  v60 = a4;
  v57 = a3;
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v56 = sub_1CE0B6DA0();
  v59 = *(_QWORD *)(v56 - 8);
  v8 = MEMORY[0x1E0C80A78](v56);
  v55 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v47 - v11;
  MEMORY[0x1E0C80A78](v10);
  v58 = (char *)&v47 - v13;
  v16 = type metadata accessor for GatedResource.State(0, v6, v14, v15);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v47 - v18);
  v20 = a1;
  (*(void (**)(char *, _QWORD *, uint64_t))(v17 + 16))((char *)&v47 - v18, a1, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v22 = *(uint64_t (**)(uint64_t *, uint64_t))(v17 + 8);
  if (EnumCaseMultiPayload)
  {
    result = v22(v19, v16);
    v24 = 0;
    v25 = v60;
  }
  else
  {
    v51 = v7;
    v52 = v12;
    v22(a1, v16);
    v24 = *v19;
    v62 = a2;
    v50 = sub_1CE0B6290();
    v27 = v26;
    v28 = v56;
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
    v54(v58, v57, v56);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v29 = sub_1CE0B6068();
    v30 = sub_1CE0B6734();
    v31 = os_log_type_enabled(v29, v30);
    v32 = v20;
    v33 = v55;
    v53 = v6;
    if (v31)
    {
      v34 = swift_slowAlloc();
      v47 = v29;
      v35 = v34;
      v48 = swift_slowAlloc();
      v62 = v48;
      *(_DWORD *)v35 = 136447234;
      v49 = v32;
      swift_bridgeObjectRetain();
      v61 = sub_1CDFC7270(v50, v27, &v62);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 12) = 2082;
      v50 = v35 + 14;
      v61 = v6;
      swift_getMetatypeMetadata();
      v36 = sub_1CE0B6290();
      v61 = sub_1CDFC7270(v36, v37, &v62);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 22) = 2048;
      v38 = sub_1CE0B6518();
      v39 = MEMORY[0x1D17BF81C](v24, v38);
      v51 = v16;
      v40 = v30;
      v41 = v39;
      swift_bridgeObjectRelease();
      v61 = v41;
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 32) = 2160;
      v61 = 1752392040;
      sub_1CE0B68F0();
      *(_WORD *)(v35 + 42) = 2080;
      v42 = v58;
      v54(v52, (uint64_t)v58, v28);
      v43 = sub_1CE0B6290();
      v61 = sub_1CDFC7270(v43, v44, &v62);
      v32 = v49;
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v28);
      v45 = v47;
      _os_log_impl(&dword_1CDFAA000, v47, v40, "[%{public}s] GatedResource<%{public}s> (%ld) released with %{mask.hash}s", (uint8_t *)v35, 0x34u);
      v46 = v48;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v46, -1, -1);
      MEMORY[0x1D17C092C](v35, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v28);
    }
    v54(v33, v57, v28);
    if (swift_getEnumCaseMultiPayload() == 1)
      *v32 = *(_QWORD *)v33;
    else
      (*(void (**)(_QWORD *, char *))(*(_QWORD *)(v53 - 8) + 32))(v32, v33);
    result = swift_storeEnumTagMultiPayload();
    v25 = v60;
  }
  *v25 = v24;
  return result;
}

uint64_t sub_1CDFB6258(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CDFB71CC(a1, result);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CDFB62B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t result;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1CE0B617C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(void **)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  LOBYTE(v6) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver), sel_setDelegate_, v1);
    *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver)
              + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate
              + 8) = &off_1E8B68F78;
    swift_unknownObjectWeakAssign();
    sub_1CDFB6428();
    *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver)
              + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_delegate
              + 8) = &off_1E8B68FA0;
    swift_unknownObjectWeakAssign();
    sub_1CDFB7620();
    *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_reachabilityObserver) + 24) = &off_1E8B68F90;
    swift_unknownObjectWeakAssign();
    return sub_1CDFB6960();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1CDFB6428()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  v1 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient);
  objc_msgSend(v1, sel_setDelegate_, v0);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_cellularData);
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v5[4] = sub_1CDFB16E8;
  v5[5] = v3;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1CDFB16AC;
  v5[3] = &block_descriptor_10;
  v4 = _Block_copy(v5);
  swift_release();
  objc_msgSend(v2, sel_setCellularDataRestrictionDidUpdateNotifier_, v4);
  _Block_release(v4);
  objc_msgSend(v1, sel_activate);
  sub_1CDFB6520();
  sub_1CDFB66B8();
}

void sub_1CDFB6520()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v5 = 0;
  if ((unint64_t)objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient), sel_cellularDataEnabled_, &v5) >> 32)
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v1 = sub_1CE0B6080();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
    v2 = sub_1CE0B6068();
    v3 = sub_1CE0B671C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = swift_slowAlloc();
      *(_DWORD *)v4 = 67240448;
      sub_1CE0B68F0();
      *(_WORD *)(v4 + 8) = 1026;
      sub_1CE0B68F0();
      _os_log_impl(&dword_1CDFAA000, v2, v3, "Core Telephony operation failed with domain: %{public}d and error code: %{public}d", (uint8_t *)v4, 0xEu);
      MEMORY[0x1D17C092C](v4, -1, -1);
    }

  }
  else
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled) = v5 != 0;
  }
}

void sub_1CDFB66B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16[2];

  v16[1] = *(id *)MEMORY[0x1E0C80C00];
  v15 = 0;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient);
  v16[0] = 0;
  objc_msgSend(v1, sel_roaming_error_, &v15, v16);
  v2 = v16[0];
  if (v16[0])
  {
    v3 = qword_1ED8F1890;
    v4 = v16[0];
    if (v3 != -1)
      swift_once();
    v5 = sub_1CE0B6080();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
    v6 = v4;
    v7 = sub_1CE0B6068();
    v8 = sub_1CE0B671C();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = (void *)swift_slowAlloc();
      v16[0] = v10;
      *(_DWORD *)v9 = 136446210;
      v11 = sub_1CE05D048();
      v12 = sub_1CDFB1900((unint64_t *)&unk_1EFA61950, (uint64_t (*)(uint64_t))sub_1CE05D048, MEMORY[0x1E0CB2080]);
      v13 = MEMORY[0x1D17C0050](v11, v12);
      sub_1CDFC7270(v13, v14, (uint64_t *)v16);
      sub_1CE0B68F0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CDFAA000, v7, v8, "Core Telephony operation failed with error: %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v10, -1, -1);
      MEMORY[0x1D17C092C](v9, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming) = v15 != 0;
  }

}

uint64_t sub_1CDFB6960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void *v6;
  id v7;
  char v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  _BYTE *v12;
  NSObject *v13;
  uint64_t v14;
  NSObject *v15;
  _BYTE v16[24];
  _OWORD v17[3];
  __int128 v18;
  char v19;
  void *v20;
  char v21;

  v1 = v0;
  v2 = sub_1CE0B617C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(void **)(v1 + 96);
  *v5 = v6;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF740], v2);
  v7 = v6;
  v8 = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 1) != 0)
  {
    swift_beginAccess();
    sub_1CDFC36F4(v1 + 32, (uint64_t)&v20);
    if (v21)
    {
      if (v21 == 1)
      {
        v10 = v20;
        swift_unknownObjectRelease();

        return sub_1CDFC3544();
      }
      else
      {
        v13 = dispatch_group_create();
        dispatch_group_enter(v13);
        v14 = sub_1CDFB6BF4();
        swift_getObjectType();
        sub_1CE0B67E8();
        sub_1CE0B67F4();
        *(_QWORD *)&v18 = v13;
        *((_QWORD *)&v18 + 1) = v14;
        v19 = 1;
        sub_1CDFB75EC(&v18, v17);
        swift_beginAccess();
        v15 = v13;
        swift_unknownObjectRetain();
        sub_1CDFB74F8((uint64_t)v17, v1 + 32);
        swift_endAccess();
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        sub_1CDFB6BE4((uint64_t)sub_1CDFAD0B4);
        sub_1CE0B60B0();
        swift_release_n();
        sub_1CE0B60BC();
        sub_1CDFC3544();

        return swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_1CE06D460();
      v11 = swift_allocError();
      *v12 = 0;
      *(_QWORD *)(swift_allocObject() + 16) = v11;
      sub_1CE0B5C0C();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v20);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CDFB6BE4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1CDFB6BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  void *v21;
  id v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  void *v28;
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  void (*v35)(_QWORD *, uint64_t);
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD aBlock[7];

  v1 = sub_1CE0B6134();
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v50 = (uint64_t *)((char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v49 = (uint64_t)&v38 - v4;
  v48 = sub_1CE0B6170();
  v46 = *(_QWORD *)(v48 - 8);
  v5 = MEMORY[0x1E0C80A78](v48);
  v45 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v47 = (char *)&v38 - v7;
  v8 = sub_1CE0B6140();
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B6158();
  v40 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B67AC();
  v39 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B617C();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = v0;
  v21 = *(void **)(v0 + 96);
  *v20 = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DEF740], v17);
  v22 = v21;
  v23 = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v18 + 8))(v20, v17);
  if ((v23 & 1) != 0)
  {
    sub_1CDFB7190();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1CDFB1900((unint64_t *)&qword_1ED8F0CC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F0CA0);
    sub_1CDFB7C5C((unint64_t *)&qword_1ED8F0CB0, (uint64_t *)&unk_1ED8F0CA0);
    sub_1CE0B6944();
    v25 = sub_1CE0B67B8();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v14);
    ObjectType = swift_getObjectType();
    v27 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_1CE06D458;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_14;
    v28 = _Block_copy(aBlock);
    swift_retain();
    sub_1CDFB70E0();
    sub_1CDFB70E4();
    sub_1CE0B67D0();
    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
    swift_release();
    swift_release();
    v29 = v45;
    sub_1CE0B6164();
    v30 = v47;
    MEMORY[0x1D17BF4F8](v29, 0.1);
    v31 = *(void (**)(char *, uint64_t))(v46 + 8);
    v32 = v48;
    v31(v29, v48);
    v33 = v49;
    sub_1CDFB709C(v49);
    v34 = v50;
    sub_1CDFB7054(v50);
    MEMORY[0x1D17BFBA0](v30, v33, v34, ObjectType);
    v35 = *(void (**)(_QWORD *, uint64_t))(v51 + 8);
    v36 = v34;
    v37 = v52;
    v35(v36, v52);
    v35((_QWORD *)v33, v37);
    v31(v30, v32);
    return v25;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CDFB7054@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x1E0DEF480];
  v3 = sub_1CE0B6134();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1CDFB709C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEF498];
  v3 = sub_1CE0B6134();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_1CDFB70E4()
{
  sub_1CE0B6140();
  sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
  sub_1CDFB7C5C((unint64_t *)&qword_1ED8F1590, (uint64_t *)&unk_1ED8F1580);
  return sub_1CE0B6944();
}

unint64_t sub_1CDFB7190()
{
  unint64_t result;

  result = qword_1ED8F0CD0;
  if (!qword_1ED8F0CD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F0CD0);
  }
  return result;
}

uint64_t sub_1CDFB71CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_1;
  void *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  id v13;
  uint64_t (*v14)(_QWORD *, uint64_t);
  uint64_t result;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  _BYTE v25[24];
  _OWORD v26[3];
  __int128 v27[2];
  char v28;
  NSObject *v29;
  char v30;
  uint64_t v31[6];

  v4 = sub_1CE0B617C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1CE0B6128();
  v31[3] = v8;
  v31[4] = (uint64_t)&off_1E8B6ADB0;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, a1, v8);
  v10 = *(void **)(a2 + 96);
  *v7 = v10;
  v11 = *MEMORY[0x1E0DEF740];
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v5 + 104);
  v12(v7, v11, v4);
  v13 = v10;
  LOBYTE(v10) = sub_1CE0B6194();
  v14 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v14(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_beginAccess();
  sub_1CDFC36F4(a2 + 32, (uint64_t)&v29);
  if (v30)
  {
    if (v30 == 1)
    {
      v16 = v29;
      swift_getObjectType();
      sub_1CE0B67DC();
      sub_1CDFAC5C8((uint64_t)v31, (uint64_t)v27);
      v28 = 0;
      sub_1CDFB75EC(v27, v26);
      swift_beginAccess();
      sub_1CDFB74F8((uint64_t)v26, a2 + 32);
      swift_endAccess();
      dispatch_group_leave(v16);
      v17 = MEMORY[0x1D17C09E0](a2 + 16);
      if (v17)
      {
        v18 = v17;
        v19 = *(void **)(v17 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
        *v7 = v19;
        v12(v7, v11, v4);
        v20 = v19;
        LOBYTE(v19) = sub_1CE0B6194();
        result = v14(v7, v4);
        if ((v19 & 1) != 0)
        {
          if (MEMORY[0x1D17C09E0](v18 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
          {
            sub_1CDFB7604();
            swift_unknownObjectRelease();

            swift_unknownObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();

          }
          swift_unknownObjectRelease();
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
        }
        goto LABEL_19;
      }
      swift_unknownObjectRelease();

    }
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  }
  sub_1CDFAC5C8((uint64_t)v31, (uint64_t)v27);
  v28 = 0;
  sub_1CDFB75EC(v27, v26);
  swift_beginAccess();
  sub_1CDFB74F8((uint64_t)v26, a2 + 32);
  swift_endAccess();
  v21 = MEMORY[0x1D17C09E0](a2 + 16);
  if (!v21)
  {
LABEL_13:
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v29);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  }
  v22 = v21;
  v23 = *(void **)(v21 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v7 = v23;
  v12(v7, v11, v4);
  v24 = v23;
  LOBYTE(v23) = sub_1CE0B6194();
  result = v14(v7, v4);
  if ((v23 & 1) != 0)
  {
    if (MEMORY[0x1D17C09E0](v22 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
    {
      sub_1CDFB7604();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
    goto LABEL_13;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_1CDFB74F8(uint64_t a1, uint64_t a2)
{
  assignWithTake for ReachabilityObserver.State(a2, a1);
  return a2;
}

uint64_t assignWithTake for ReachabilityObserver.State(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

      swift_unknownObjectRelease();
    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

_OWORD *sub_1CDFB75EC(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(__int128 *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_1CDFB7604()
{
  return sub_1CDFC466C("Network changed, updating cached network conditions", (uint64_t)&unk_1E8B65408, (uint64_t)sub_1CDFF3920);
}

void sub_1CDFB7620()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  unsigned __int8 v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  id aBlock[7];

  v1 = v0;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *(void **)(v0 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface);
  objc_msgSend(v2, sel_resume);
  v3 = (void *)swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1CE01BEC0;
  aBlock[5] = v3;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1CDFFC8A4;
  aBlock[3] = &block_descriptor_6;
  v4 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v2, sel_setEventHandler_, v4);
  _Block_release(v4);
  v5 = objc_msgSend(v2, sel_powerOn);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled) = v5;
  aBlock[0] = 0;
  if (objc_msgSend(v2, sel_startMonitoringEventType_error_, 1, aBlock))
  {
    v6 = aBlock[0];
  }
  else
  {
    v7 = aBlock[0];
    v8 = (void *)sub_1CE0B3CC8();

    swift_willThrow();
    objc_msgSend(v2, sel_invalidate);
    if (qword_1ED8F1890 != -1)
      swift_once();
    v9 = sub_1CE0B6080();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1870);
    v10 = v8;
    v11 = v8;
    v12 = sub_1CE0B6068();
    v13 = sub_1CE0B671C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = (void *)swift_slowAlloc();
      aBlock[0] = v15;
      *(_DWORD *)v14 = 136446210;
      swift_getErrorValue();
      v16 = MEMORY[0x1D17C0050]();
      sub_1CDFC7270(v16, v17, (uint64_t *)aBlock);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v12, v13, "Failed to start monitoring WiFi power events with error: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v15, -1, -1);
      MEMORY[0x1D17C092C](v14, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t NetworkEvaluator.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = sub_1CDFB799C(a1, a2);
  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_1CDFB799C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v22 = a2;
  v6 = sub_1CE0B677C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B6764();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1CE0B6158();
  MEMORY[0x1E0C80A78](v12);
  v21[1] = a1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  v21[0] = sub_1CDFB7C20();
  swift_unknownObjectRetain();
  sub_1CE0B614C();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1CDFB1900(&qword_1EFA5F168, v11, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F170);
  sub_1CDFB7C5C(&qword_1EFA5F178, &qword_1EFA5F170);
  sub_1CE0B6944();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D0], v6);
  v13 = (void *)sub_1CE0B67A0();
  *(_QWORD *)(v3 + 48) = v13;
  objc_allocWithZone((Class)type metadata accessor for NetworkMonitor());
  v14 = v13;
  v15 = sub_1CDFB7E28(v14);

  *(_QWORD *)(v3 + 32) = v15;
  type metadata accessor for SubscriptionToken();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 24) = 0;
  swift_unknownObjectWeakInit();
  v17 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v16 + 24) = v22;
  *(_QWORD *)(v16 + 32) = v17;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(v3 + 56) = v16;
  type metadata accessor for UnfairLock();
  v18 = swift_allocObject();
  v19 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v18 + 16) = v19;
  *v19 = 0;
  *(_QWORD *)(v3 + 40) = v18;
  *(_BYTE *)(v3 + 64) = 2;
  return v3;
}

unint64_t sub_1CDFB7C20()
{
  unint64_t result;

  result = qword_1ED8F0040;
  if (!qword_1ED8F0040)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F0040);
  }
  return result;
}

uint64_t sub_1CDFB7C5C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return objc_opt_self();
}

_QWORD *AnalyticsEventMonitor.init(eventHub:reporter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3 = sub_1CDFB7CEC(a1, a2, a3);
  swift_unknownObjectRelease();
  return v3;
}

_QWORD *sub_1CDFB7CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, ValueMetadata *, uint64_t, _QWORD *(*)(uint64_t), uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD v14[5];

  v4 = v3;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for SubscriptionToken();
  v8 = swift_allocObject();
  ObjectType = swift_getObjectType();
  v4[4] = sub_1CDFD3EF8(a1, v8, ObjectType, a2);
  sub_1CDFAC5C8(a3, (uint64_t)(v4 + 5));
  v10 = v4[4];
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = *(void (**)(_QWORD *__return_ptr, ValueMetadata *, uint64_t, _QWORD *(*)(uint64_t), uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 32);
  swift_unknownObjectRetain();
  v12(v14, &type metadata for AnalyticsEventOccurred, v10, sub_1CE0AB8CC, v11, &type metadata for AnalyticsEventOccurred, &protocol witness table for AnalyticsEventOccurred, ObjectType, a2);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  return v4;
}

uint64_t type metadata accessor for SubscriptionToken()
{
  return objc_opt_self();
}

id sub_1CDFB7E28(void *a1)
{
  char *v1;
  id v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  objc_class *v11;
  _BYTE *v12;
  uint64_t v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  id v18;
  objc_super v20;
  objc_super v21;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = objc_allocWithZone((Class)SMCAirplaneModeObserver);
  v4 = v1;
  v5 = objc_msgSend(v3, sel_initWithQueue_, a1);
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_airplaneModeObserver] = v5;
  v6 = objc_allocWithZone((Class)type metadata accessor for CoreTelephonyObserver());
  v7 = a1;
  v8 = sub_1CDFB8044(v7);

  *(_QWORD *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver] = v8;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue] = v7;
  type metadata accessor for ReachabilityObserver();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v9 + 80) = 0x3FB999999999999ALL;
  sub_1CE0B60E0();
  swift_allocObject();
  v10 = v7;
  *(_QWORD *)(v9 + 88) = sub_1CE0B60D4();
  *(_QWORD *)(v9 + 96) = v10;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_QWORD *)(v9 + 64) = 0;
  *(_BYTE *)(v9 + 72) = 2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_reachabilityObserver] = v9;
  v11 = (objc_class *)type metadata accessor for WiFiObserver();
  v12 = objc_allocWithZone(v11);
  *(_QWORD *)&v12[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v12[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled] = 0;
  v13 = OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface;
  v14 = objc_allocWithZone(MEMORY[0x1E0D1BA50]);
  v15 = v10;
  v16 = v12;
  *(_QWORD *)&v12[v13] = objc_msgSend(v14, sel_init);
  *(_QWORD *)&v16[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_queue] = v15;
  v17 = v15;

  v21.receiver = v16;
  v21.super_class = v11;
  v18 = objc_msgSendSuper2(&v21, sel_init);

  *(_QWORD *)&v4[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver] = v18;
  v20.receiver = v4;
  v20.super_class = (Class)type metadata accessor for NetworkMonitor();
  return objc_msgSendSuper2(&v20, sel_init);
}

id sub_1CDFB8044(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled] = 0;
  v1[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isRoaming] = 0;
  v3 = OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_cellularData;
  v4 = objc_allocWithZone(MEMORY[0x1E0CA6D10]);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_init);
  *(_QWORD *)&v5[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_queue] = a1;
  v6 = objc_msgSend(objc_allocWithZone((Class)SMCCoreTelephonyClient), sel_initWithQueue_, a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_coreTelephonyClient] = v6;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for CoreTelephonyObserver();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for CoreTelephonyObserver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ReachabilityObserver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WiFiObserver()
{
  return objc_opt_self();
}

uint64_t sub_1CDFB8194()
{
  uint64_t v0;

  sub_1CDFB81CC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFB81CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(&v9, a1, a2);
  result = v9;
  if (v9)
  {
    v10 = v9;
    if (*(_QWORD *)(v9 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
      sub_1CDFC0134(0, 1);
      v9 = v10;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 24))(&v9, a1, a2);
      sub_1CE0B650C();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {
      swift_bridgeObjectRelease();
      v9 = 0;
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 24))(&v9, a1, a2);
    }
  }
  return result;
}

uint64_t destroy for PersistenceQueryClauses()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t ServiceSubscription.dictionary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  BOOL v47;
  void (*v48)(uint64_t, uint64_t);
  unint64_t v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  unint64_t v109;
  _OWORD v110[2];
  __int128 v111;
  uint64_t v112;
  uint64_t v113[5];
  unint64_t v114;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  v1 = MEMORY[0x1E0C80A78](v0);
  v107 = (char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v103 - v3;
  v5 = sub_1CE0B3DF4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v104 = (char *)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v105 = (char *)&v103 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v103 - v11;
  v13 = sub_1CDFB98E4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v111 = 0xD000000000000012;
  *((_QWORD *)&v111 + 1) = 0x80000001CE0C8E30;
  sub_1CE0B69BC();
  v14 = sub_1CE0B4EEC();
  v15 = MEMORY[0x1E0DEDC60];
  v112 = MEMORY[0x1E0DEDC60];
  *(_QWORD *)&v111 = v14;
  sub_1CDFB96B0(&v111, v110);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v114 = v13;
  sub_1CDFB9088(v110, (uint64_t)v113, isUniquelyReferenced_nonNull_native);
  v17 = v114;
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v113);
  *(_QWORD *)&v111 = 0xD000000000000018;
  *((_QWORD *)&v111 + 1) = 0x80000001CE0C8E50;
  sub_1CE0B69BC();
  v18 = sub_1CE0B4F40();
  v112 = v15;
  *(_QWORD *)&v111 = v18;
  sub_1CDFB96B0(&v111, v110);
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v109 = v17;
  sub_1CDFB9088(v110, (uint64_t)v113, v19);
  v114 = v109;
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v113);
  sub_1CE0B4EE0();
  v106 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48);
  v20 = v106(v4, 1, v5);
  v21 = MEMORY[0x1E0DEB070];
  v108 = v6;
  if (v20 == 1)
  {
    sub_1CDFB9A24((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v4, v5);
    *(_QWORD *)&v111 = 0xD000000000000013;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C9010;
    sub_1CE0B69BC();
    sub_1CE0B3DC4();
    sub_1CE0B6644();
    v112 = v21;
    *(_QWORD *)&v111 = v22;
    sub_1CDFB96B0(&v111, v110);
    v23 = v114;
    v24 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v23;
    sub_1CDFB9088(v110, (uint64_t)v113, v24);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  v25 = v5;
  v26 = sub_1CE0B4F4C();
  if ((v27 & 1) == 0)
  {
    v28 = v26;
    *(_QWORD *)&v111 = 0xD00000000000001DLL;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8FF0;
    sub_1CE0B69BC();
    v112 = MEMORY[0x1E0DEDC60];
    *(_QWORD *)&v111 = v28;
    sub_1CDFB96B0(&v111, v110);
    v29 = v114;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v29;
    sub_1CDFB9088(v110, (uint64_t)v113, v30);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  v31 = sub_1CE0B4F70();
  if ((v32 & 1) != 0)
  {
    v34 = v21;
    v37 = v114;
  }
  else
  {
    v33 = v31;
    *(_QWORD *)&v111 = 0xD00000000000001FLL;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8FD0;
    sub_1CE0B69BC();
    v34 = v21;
    v112 = v21;
    *(_QWORD *)&v111 = v33;
    sub_1CDFB96B0(&v111, v110);
    v35 = v114;
    v36 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v35;
    sub_1CDFB9088(v110, (uint64_t)v113, v36);
    v37 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  *(_QWORD *)&v111 = 0xD00000000000001BLL;
  *((_QWORD *)&v111 + 1) = 0x80000001CE0C8E70;
  v38 = MEMORY[0x1E0DEA968];
  sub_1CE0B69BC();
  v39 = sub_1CE0B4EF8();
  v40 = MEMORY[0x1E0DEAFA0];
  v112 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v111) = v39 & 1;
  sub_1CDFB96B0(&v111, v110);
  v41 = swift_isUniquelyReferenced_nonNull_native();
  v109 = v37;
  sub_1CDFB9088(v110, (uint64_t)v113, v41);
  v42 = v109;
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v113);
  *(_QWORD *)&v111 = 0xD000000000000017;
  *((_QWORD *)&v111 + 1) = 0x80000001CE0C8E90;
  sub_1CE0B69BC();
  v43 = sub_1CE0B4FA0();
  v112 = v40;
  LOBYTE(v111) = v43 & 1;
  sub_1CDFB96B0(&v111, v110);
  v44 = swift_isUniquelyReferenced_nonNull_native();
  v109 = v42;
  sub_1CDFB9088(v110, (uint64_t)v113, v44);
  v114 = v109;
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v113);
  v45 = v38;
  *(_QWORD *)&v111 = 0xD000000000000018;
  *((_QWORD *)&v111 + 1) = 0x80000001CE0C8EB0;
  sub_1CE0B69BC();
  v46 = (uint64_t)v105;
  sub_1CE0B3DE8();
  v47 = ServiceSubscription.isSubscribed(date:)(v46);
  v48 = *(void (**)(uint64_t, uint64_t))(v108 + 8);
  v48(v46, v25);
  v112 = v40;
  LOBYTE(v111) = v47;
  sub_1CDFB96B0(&v111, v110);
  v49 = v114;
  v50 = swift_isUniquelyReferenced_nonNull_native();
  v109 = v49;
  sub_1CDFB9088(v110, (uint64_t)v113, v50);
  v51 = v109;
  v114 = v109;
  swift_bridgeObjectRelease();
  sub_1CDFB92B4((uint64_t)v113);
  v52 = sub_1CE0B4F94();
  if (v53)
  {
    v54 = v52;
    v55 = v53;
    *(_QWORD *)&v111 = 0xD000000000000014;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8FB0;
    sub_1CE0B69BC();
    v112 = v45;
    *(_QWORD *)&v111 = v54;
    *((_QWORD *)&v111 + 1) = v55;
    sub_1CDFB96B0(&v111, v110);
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v51;
    sub_1CDFB9088(v110, (uint64_t)v113, v56);
    v51 = v109;
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  v57 = sub_1CE0B4F10();
  v59 = v34;
  if (v58)
  {
    v60 = v57;
    v61 = v58;
    v62 = HIBYTE(v58) & 0xF;
    if ((v58 & 0x2000000000000000) == 0)
      v62 = v57 & 0xFFFFFFFFFFFFLL;
    if (v62)
    {
      *(_QWORD *)&v111 = 0xD000000000000017;
      *((_QWORD *)&v111 + 1) = 0x80000001CE0C8F90;
      sub_1CE0B69BC();
      v112 = v45;
      *(_QWORD *)&v111 = v60;
      *((_QWORD *)&v111 + 1) = v61;
      sub_1CDFB96B0(&v111, v110);
      v63 = swift_isUniquelyReferenced_nonNull_native();
      v109 = v51;
      sub_1CDFB9088(v110, (uint64_t)v113, v63);
      v114 = v109;
      swift_bridgeObjectRelease();
      sub_1CDFB92B4((uint64_t)v113);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  v64 = sub_1CE0B4F64();
  if ((v65 & 1) == 0)
  {
    v66 = v64;
    *(_QWORD *)&v111 = 0xD00000000000001BLL;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8F70;
    sub_1CE0B69BC();
    v112 = MEMORY[0x1E0DEDC60];
    *(_QWORD *)&v111 = v66;
    sub_1CDFB96B0(&v111, v110);
    v67 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v114;
    sub_1CDFB9088(v110, (uint64_t)v113, v67);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  v68 = sub_1CE0B4F34();
  if ((v69 & 1) == 0)
  {
    v70 = v68;
    *(_QWORD *)&v111 = 0xD00000000000001CLL;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8F50;
    sub_1CE0B69BC();
    v112 = v34;
    *(_QWORD *)&v111 = v70;
    sub_1CDFB96B0(&v111, v110);
    v71 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v114;
    sub_1CDFB9088(v110, (uint64_t)v113, v71);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  v72 = sub_1CE0B4F28();
  if ((v73 & 1) == 0)
  {
    v74 = v72;
    *(_QWORD *)&v111 = 0xD000000000000011;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8F30;
    sub_1CE0B69BC();
    v112 = MEMORY[0x1E0DEDC60];
    *(_QWORD *)&v111 = v74;
    sub_1CDFB96B0(&v111, v110);
    v75 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v114;
    sub_1CDFB9088(v110, (uint64_t)v113, v75);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  v76 = sub_1CE0B4F7C();
  if ((v77 & 1) == 0)
  {
    v78 = v76;
    *(_QWORD *)&v111 = 0xD00000000000001FLL;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8F10;
    sub_1CE0B69BC();
    v112 = MEMORY[0x1E0DEDC60];
    *(_QWORD *)&v111 = v78;
    sub_1CDFB96B0(&v111, v110);
    v79 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v114;
    sub_1CDFB9088(v110, (uint64_t)v113, v79);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
  }
  v80 = (uint64_t)v107;
  sub_1CE0B4FAC();
  if (v106((char *)v80, 1, v25) == 1)
  {
    sub_1CDFB9A24(v80);
  }
  else
  {
    v81 = v45;
    v82 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v104, v80, v25);
    *(_QWORD *)&v111 = 0xD000000000000015;
    *((_QWORD *)&v111 + 1) = 0x80000001CE0C8EF0;
    sub_1CE0B69BC();
    sub_1CE0B3DC4();
    sub_1CE0B6644();
    v112 = v59;
    *(_QWORD *)&v111 = v83;
    sub_1CDFB96B0(&v111, v110);
    v84 = v114;
    v85 = swift_isUniquelyReferenced_nonNull_native();
    v109 = v84;
    sub_1CDFB9088(v110, (uint64_t)v113, v85);
    v114 = v109;
    swift_bridgeObjectRelease();
    sub_1CDFB92B4((uint64_t)v113);
    v86 = v82;
    v45 = v81;
    v48((uint64_t)v86, v25);
  }
  v87 = sub_1CE0B4F58();
  if (v88)
  {
    v89 = v87;
    v90 = v88;
    v91 = HIBYTE(v88) & 0xF;
    if ((v88 & 0x2000000000000000) == 0)
      v91 = v87 & 0xFFFFFFFFFFFFLL;
    if (v91)
    {
      *(_QWORD *)&v111 = 0xD00000000000001ELL;
      *((_QWORD *)&v111 + 1) = 0x80000001CE0C8ED0;
      sub_1CE0B69BC();
      v112 = v45;
      *(_QWORD *)&v111 = v89;
      *((_QWORD *)&v111 + 1) = v90;
      sub_1CDFB96B0(&v111, v110);
      v92 = v114;
      v93 = swift_isUniquelyReferenced_nonNull_native();
      v109 = v92;
      sub_1CDFB9088(v110, (uint64_t)v113, v93);
      v114 = v109;
      swift_bridgeObjectRelease();
      sub_1CDFB92B4((uint64_t)v113);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if (qword_1ED8F0000 != -1)
    swift_once();
  v94 = sub_1CE0B6080();
  __swift_project_value_buffer(v94, (uint64_t)qword_1ED8EFFE0);
  v95 = sub_1CE0B6068();
  v96 = sub_1CE0B6710();
  if (os_log_type_enabled(v95, v96))
  {
    v97 = (uint8_t *)swift_slowAlloc();
    v98 = swift_slowAlloc();
    v113[0] = v98;
    *(_DWORD *)v97 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v99 = sub_1CE0B6224();
    v101 = v100;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v110[0] = sub_1CDFC7270(v99, v101, v113);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v95, v96, "Metric subscription fields generated: %s", v97, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v98, -1, -1);
    MEMORY[0x1D17C092C](v97, -1, -1);
  }

  swift_beginAccess();
  return v114;
}

_OWORD *sub_1CDFB9088(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  _OWORD *v17;
  _OWORD *result;
  unint64_t v19;
  char v20;
  _BYTE v21[40];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1CDFB91C0(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = (_OWORD *)(v16[7] + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
        return sub_1CDFB96B0(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1CDFE809C();
      goto LABEL_7;
    }
    sub_1CDFB939C(v13, a3 & 1);
    v19 = sub_1CDFB91C0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CDFB92E8(a2, (uint64_t)v21);
      return sub_1CDFB9324(v10, (uint64_t)v21, a1, v16);
    }
  }
  result = (_OWORD *)sub_1CE0B6C98();
  __break(1u);
  return result;
}

unint64_t sub_1CDFB91C0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B69A4();
  return sub_1CDFB91F0(a1, v2);
}

unint64_t sub_1CDFB91F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1CDFB92E8(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D17BFD20](v9, a1);
      sub_1CDFB92B4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1CDFB92B4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1CDFB92E8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

_OWORD *sub_1CDFB9324(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1CDFB96B0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_1CDFB939C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;
  uint64_t v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0D0);
  v6 = sub_1CE0B6B48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v11)
        goto LABEL_34;
      v23 = *(_QWORD *)(v36 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v23 = *(_QWORD *)(v36 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v14 = v24;
      }
    }
LABEL_21:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    v25 = *(_QWORD *)(v5 + 48) + 40 * v20;
    if ((a2 & 1) != 0)
    {
      v26 = *(_OWORD *)v25;
      v27 = *(_OWORD *)(v25 + 16);
      v40 = *(_QWORD *)(v25 + 32);
      v38 = v26;
      v39 = v27;
      sub_1CDFB96B0((_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1CDFB92E8(v25, (uint64_t)&v38);
      sub_1CDFC74F8(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    result = sub_1CE0B69A4();
    v28 = -1 << *(_BYTE *)(v7 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v16 = *(_QWORD *)(v7 + 48) + 40 * v15;
    v17 = v38;
    v18 = v39;
    *(_QWORD *)(v16 + 32) = v40;
    *(_OWORD *)v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    result = (uint64_t)sub_1CDFB96B0(v37, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_1CDFB96B0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

BOOL ServiceSubscription.isSubscribed(date:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  char v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v27 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1CE0B3DF4();
  v6 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B4FB8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v27 - v14;
  v16 = sub_1CE0B4F1C();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v17(v15, v2, v9);
  if ((v16 & 1) != 0)
    v18 = 1;
  else
    v18 = sub_1CE0B4F04();
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v19(v15, v9);
  v17(v13, v2, v9);
  if ((v18 & 1) != 0)
  {
    v19(v13, v9);
    return 1;
  }
  else
  {
    v21 = sub_1CE0B4EF8();
    v19(v13, v9);
    if ((v21 & 1) != 0)
    {
      return 1;
    }
    else
    {
      sub_1CE0B4EE0();
      v22 = v28;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v28) == 1)
      {
        sub_1CDFB9A24((uint64_t)v5);
        return 0;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v5, v22);
        sub_1CE0B3D70();
        v24 = v23;
        sub_1CE0B3D70();
        v26 = v25;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v22);
        return v26 < v24;
      }
    }
  }
}

unint64_t sub_1CDFB98E4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0D0);
  v2 = sub_1CE0B6B54();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CDFB1434(v6, (uint64_t)v15, &qword_1EFA5E0D8);
    result = sub_1CDFB91C0((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1CDFB96B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CDFB9A24(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CDFB9A64()
{
  return CatalogClient.queryAllCatalogThemes()();
}

uint64_t CatalogClient.queryAllCatalogThemes()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000066;
  v2._object = (void *)0x80000001CE0CC430;
  v3._object = (void *)0x80000001CE0CC990;
  v3._countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 84;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63330);
  v8 = sub_1CDFB0260(&qword_1EFA63338, &qword_1EFA63330, MEMORY[0x1E0D90798], MEMORY[0x1E0D907A0]);
  v9 = sub_1CDFB9BB4();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

unint64_t sub_1CDFB9BB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63340;
  if (!qword_1EFA63340)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63330);
    v2 = sub_1CDFB1900(&qword_1EFA63348, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], MEMORY[0x1E0D907A8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63340);
  }
  return result;
}

uint64_t EngagementClient.queryEngagementBannerRuleInfo()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1078);
  v2._countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001CE0CCE30;
  v3._object = (void *)0x80000001CE0CCF70;
  v3._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 121;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B5420();
  return v6(&v9, v7, MEMORY[0x1E0D94428], MEMORY[0x1E0D94430], ObjectType, v4);
}

uint64_t ConfigurationClient.queryConfiguration()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000072;
  v2._object = (void *)0x80000001CE0CEAB0;
  v3._object = (void *)0x80000001CE0CEB50;
  v3._countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 106;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B446C();
  return v6(&v9, v7, MEMORY[0x1E0D90CA0], MEMORY[0x1E0D90CA8], ObjectType, v4);
}

uint64_t sub_1CDFB9E28()
{
  return ContentAvailabilityClient.queryContentAvailability()();
}

uint64_t ContentAvailabilityClient.queryContentAvailability()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD00000000000007FLL;
  v2._object = (void *)0x80000001CE0C9DF0;
  v3._object = (void *)0x80000001CE0C9E90;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 111;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B4E80();
  return v6(&v9, v7, MEMORY[0x1E0D92B00], MEMORY[0x1E0D92B08], ObjectType, v4);
}

uint64_t XPCClient.sendRequest<A>(_:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int16 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v5;
  *(_BYTE *)(v15 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  *(_QWORD *)(v16 + 32) = a4;
  *(_WORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v5;
  swift_retain();
  sub_1CE0B5C3C();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t initializeWithCopy for PersistenceQueryClauses(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t type metadata accessor for AchievementConstants()
{
  return objc_opt_self();
}

uint64_t sub_1CDFBA114()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1CDFBA134(uint64_t a1)
{
  uint64_t v1;

  sub_1CDFBA13C(a1, *(void (**)(uint64_t, unint64_t, void *))(v1 + 16));
}

void sub_1CDFBA13C(uint64_t a1, void (*a2)(uint64_t, unint64_t, void *))
{
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  _BYTE v10[48];
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[6];
  char v14;

  sub_1CDFBA514(a1, (uint64_t)v13);
  if ((v14 & 1) != 0)
  {
    v3 = (void *)v13[0];
    swift_getErrorValue();
    v4 = (void *)Error.sanitized()(v11, v12);
    a2(0, 0xF000000000000000, v4);

  }
  else
  {
    sub_1CDFBA448((uint64_t)v13, (uint64_t)v10, (uint64_t *)&unk_1ED8F0200);
    sub_1CDFBA550((uint64_t)v10, (uint64_t)v8);
    v5 = v9;
    if (v9)
    {
      __swift_project_boxed_opaque_existential_1(v8, v9);
      v5 = sub_1CE0B56B4();
      v7 = v6;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
    }
    else
    {
      sub_1CDFB13F8((uint64_t)v8, (uint64_t *)&unk_1ED8F0200);
      v7 = 0xF000000000000000;
    }
    a2(v5, v7, 0);
    sub_1CDFC094C(v5, v7);
    sub_1CDFB13F8((uint64_t)v10, (uint64_t *)&unk_1ED8F0200);
  }
}

uint64_t sub_1CDFBA448(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1CDFBA48C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CDFBA494(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1CDFBA494(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  if (a2 >> 60 != 15)
  {
    v6 = (void *)sub_1CE0B3D58();
    if (a3)
      goto LABEL_3;
LABEL_5:
    v7 = 0;
    goto LABEL_6;
  }
  v6 = 0;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  v7 = sub_1CE0B3CBC();
LABEL_6:
  v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a4 + 16))(a4, v6);

}

uint64_t sub_1CDFBA514(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0D91990] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1CDFBA550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F0200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CDFBA598(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0D91990] - 8) + 8))();
  return a1;
}

uint64_t Error.sanitized()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  void *v17;
  void (*v18)(_BYTE *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *boxed_opaque_existential_1;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  unint64_t v59;
  int v60;
  _QWORD *v61;
  _OWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  _QWORD *v68;
  char v69;
  uint64_t v70;
  _BYTE *v71;
  void (*v72)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v73;
  os_log_type_t v74;
  _BOOL4 v75;
  _BYTE *v76;
  uint8_t *v77;
  _BYTE *v78;
  void (*v79)(_BYTE *, uint64_t);
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  void *v87;
  void *v88;
  uint64_t result;
  uint64_t v90;
  _BYTE v91[4];
  int v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(_BYTE *, uint64_t);
  _BYTE *v100;
  void (*v101)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _OWORD v116[2];
  _OWORD v117[2];
  _OWORD v118[2];
  __int128 v119;
  _QWORD v120[4];
  __int128 v121;
  __int128 v122;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v100 = &v91[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x1E0C80A78](v7);
  v102 = &v91[-v10];
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = &v91[-v12];
  MEMORY[0x1E0C80A78](v11);
  v15 = &v91[-v14];
  v16 = *(_QWORD *)(sub_1CE0B6CD4() + 16);
  swift_bridgeObjectRelease();
  v101 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v101(v15, v3, a1);
  if (v16)
  {
    v96 = v6;
    v99 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v99(v15, a1);
  }
  else
  {
    v17 = (void *)sub_1CE0B6CB0();
    v18 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
    v18(v15, a1);

    if (!v17)
    {
      v101(v13, v3, a1);
      v80 = sub_1CE0B6C38();
      if (v80)
      {
        v81 = (id)v80;
        v18(v13, a1);
      }
      else
      {
        v81 = (id)swift_allocError();
        (*(void (**)(uint64_t, _BYTE *, uint64_t))(v6 + 32))(v90, v13, a1);
      }
      return (uint64_t)v81;
    }
    v99 = v18;
    v96 = v6;
  }
  v19 = sub_1CE0B6CD4();
  v105 = a2;
  v106 = a1;
  v104 = v3;
  v20 = sub_1CE0B6CB0();
  v21 = *MEMORY[0x1E0CB3388];
  if (v20)
  {
    v22 = (void *)v20;
    v23 = sub_1CE0B6278();
    v25 = v24;
    swift_getErrorValue();
    v26 = (void *)Error.sanitized()(v113, v114);
    swift_getErrorValue();
    v27 = v111;
    v28 = v112;
    *((_QWORD *)&v122 + 1) = v112;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v121);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(boxed_opaque_existential_1, v27, v28);

    sub_1CDFB96B0(&v121, &v119);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v118[0] = v19;
    sub_1CDFE7184(&v119, v23, v25, isUniquelyReferenced_nonNull_native);
    v19 = *(_QWORD *)&v118[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  v31 = *(_QWORD *)(v19 + 64);
  v108 = v19 + 64;
  v32 = 1 << *(_BYTE *)(v19 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & v31;
  v35 = (unint64_t)(v32 + 63) >> 6;
  v110 = v120;
  v97 = *MEMORY[0x1E0CB28A8];
  v93 = v35 - 1;
  swift_bridgeObjectRetain();
  v103 = 0;
  v36 = 0;
  v109 = v35;
  v94 = v19 + 104;
  v95 = v35 - 5;
  v98 = MEMORY[0x1E0DEE9B8] + 8;
  v107 = v19;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        if (v34)
        {
          v38 = __clz(__rbit64(v34));
          v34 &= v34 - 1;
          v39 = v38 | (v36 << 6);
LABEL_14:
          v40 = *(_QWORD *)(v19 + 56);
          v41 = (_QWORD *)(*(_QWORD *)(v19 + 48) + 16 * v39);
          v42 = v41[1];
          *(_QWORD *)&v119 = *v41;
          *((_QWORD *)&v119 + 1) = v42;
          sub_1CDFC74F8(v40 + 32 * v39, (uint64_t)v110);
          swift_bridgeObjectRetain();
          goto LABEL_21;
        }
        v43 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
          goto LABEL_78;
        }
        if (v43 >= v109)
        {
          v45 = v36;
        }
        else
        {
          v44 = *(_QWORD *)(v108 + 8 * v43);
          if (v44)
            goto LABEL_18;
          v45 = v36 + 1;
          if ((uint64_t)(v36 + 2) < v109)
          {
            v44 = *(_QWORD *)(v108 + 8 * (v36 + 2));
            if (v44)
            {
              v43 = v36 + 2;
LABEL_18:
              v34 = (v44 - 1) & v44;
              v39 = __clz(__rbit64(v44)) + (v43 << 6);
              v36 = v43;
              goto LABEL_14;
            }
            v45 = v36 + 2;
            if ((uint64_t)(v36 + 3) < v109)
            {
              v44 = *(_QWORD *)(v108 + 8 * (v36 + 3));
              if (v44)
              {
                v43 = v36 + 3;
                goto LABEL_18;
              }
              v43 = v36 + 4;
              v45 = v36 + 3;
              if ((uint64_t)(v36 + 4) < v109)
              {
                v44 = *(_QWORD *)(v108 + 8 * v43);
                if (v44)
                  goto LABEL_18;
                while (v95 != v36)
                {
                  v44 = *(_QWORD *)(v94 + 8 * v36++);
                  if (v44)
                  {
                    v43 = v36 + 4;
                    goto LABEL_18;
                  }
                }
                v45 = v93;
              }
            }
          }
        }
        v34 = 0;
        memset(v120, 0, sizeof(v120));
        v36 = v45;
        v119 = 0u;
LABEL_21:
        sub_1CDFBA448((uint64_t)&v119, (uint64_t)&v121, (uint64_t *)&unk_1EFA623E0);
        v6 = *((_QWORD *)&v121 + 1);
        if (!*((_QWORD *)&v121 + 1))
        {
          swift_release();
          v6 = v106;
          v21 = v104;
          if ((v103 & 1) == 0)
          {
LABEL_74:
            sub_1CE0B6CC8();
            v85 = sub_1CE0B6CBC();
            v86 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
            v87 = (void *)sub_1CE0B626C();
            swift_bridgeObjectRelease();
            v88 = (void *)sub_1CE0B620C();
            swift_bridgeObjectRelease();
            v81 = objc_msgSend(v86, sel_initWithDomain_code_userInfo_, v87, v85, v88);

            return (uint64_t)v81;
          }
          if (qword_1ED8F1890 == -1)
          {
LABEL_65:
            v70 = sub_1CE0B6080();
            __swift_project_value_buffer(v70, (uint64_t)qword_1ED8F1870);
            v72 = (void (*)(_BYTE *, _BYTE *, uint64_t))v101;
            v71 = v102;
            v101(v102, v21, v6);
            v73 = sub_1CE0B6068();
            v74 = sub_1CE0B671C();
            v75 = os_log_type_enabled(v73, v74);
            v76 = v100;
            if (v75)
            {
              v77 = (uint8_t *)swift_slowAlloc();
              v110 = (_QWORD *)swift_slowAlloc();
              *(_DWORD *)v77 = 138412290;
              v72(v76, v71, v6);
              if (sub_1CE0B6C38())
              {
                v78 = v76;
                v79 = v99;
                v99(v78, v6);
              }
              else
              {
                swift_allocError();
                (*(void (**)(uint64_t, _BYTE *, uint64_t))(v96 + 32))(v82, v76, v6);
                v79 = v99;
              }
              v83 = _swift_stdlib_bridgeErrorToNSError();
              *(_QWORD *)&v121 = v83;
              sub_1CE0B68F0();
              v84 = (uint64_t)v110;
              *v110 = v83;
              v79(v102, v6);
              _os_log_impl(&dword_1CDFAA000, v73, v74, "Found Errors from Core Data, original error before sanitization: %@", v77, 0xCu);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64BF0);
              swift_arrayDestroy();
              MEMORY[0x1D17C092C](v84, -1, -1);
              MEMORY[0x1D17C092C](v77, -1, -1);
            }
            else
            {
              v99(v71, v6);
            }

            goto LABEL_74;
          }
LABEL_78:
          swift_once();
          goto LABEL_65;
        }
        v46 = v121;
        sub_1CDFB96B0(&v122, v118);
        if (v46 == sub_1CE0B6278() && v47 == v6)
        {
          swift_bridgeObjectRelease();
          goto LABEL_11;
        }
        v37 = sub_1CE0B6C50();
        swift_bridgeObjectRelease();
        if ((v37 & 1) != 0)
          goto LABEL_11;
        sub_1CDFC74F8((uint64_t)v118, (uint64_t)&v119);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62450);
        if (!swift_dynamicCast())
        {
          sub_1CDFC74F8((uint64_t)v118, (uint64_t)&v119);
          goto LABEL_35;
        }
        swift_unknownObjectRelease();
        sub_1CDFC74F8((uint64_t)v118, (uint64_t)&v119);
        sub_1CDFC74F8((uint64_t)&v119, (uint64_t)v117);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62460);
        v48 = swift_dynamicCast();
        sub_1CDFC74F8((uint64_t)&v119, (uint64_t)v117);
        if ((v48 & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v117);
LABEL_35:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
          sub_1CDFC74F8((uint64_t)v118, (uint64_t)v117);
LABEL_36:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v117);
          break;
        }
        sub_1CDFB96B0(v117, v116);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C10);
        v67 = swift_dynamicCast();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
        sub_1CDFC74F8((uint64_t)v118, (uint64_t)v117);
        if ((v67 & 1) != 0)
          goto LABEL_36;
        sub_1CDFB96B0(v117, v116);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64C00);
        if ((swift_dynamicCast() & 1) != 0)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v119);
          if ((Error.isContainerSanitized(object:)((uint64_t)v118, v106, v105) & 1) == 0)
            break;
        }
LABEL_11:
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
        swift_bridgeObjectRelease();
      }
      v49 = sub_1CE0B6CC8();
      v51 = v50;
      if (v49 == sub_1CE0B6278() && v51 == v52)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
      v92 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v92 & 1) != 0)
        break;
      *(_QWORD *)&v119 = 0;
      *((_QWORD *)&v119 + 1) = 0xE000000000000000;
      sub_1CE0B6AA0();
      v120[1] = MEMORY[0x1E0DEA968];
      sub_1CDFB96B0(&v119, v116);
      v68 = (_QWORD *)v107;
      v69 = swift_isUniquelyReferenced_nonNull_native();
      v115 = v68;
      sub_1CDFE7184(v116, v46, v6, v69);
      v107 = (uint64_t)v115;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
    }
    v120[1] = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v119 = 0x657070697274733CLL;
    *((_QWORD *)&v119 + 1) = 0xEA00000000003E64;
    sub_1CDFB96B0(&v119, v116);
    v53 = (_QWORD *)v107;
    v103 = swift_isUniquelyReferenced_nonNull_native();
    v115 = v53;
    v55 = sub_1CDFD1DAC(v46, v6);
    v56 = v53[2];
    v57 = (v54 & 1) == 0;
    v58 = v56 + v57;
    if (__OFADD__(v56, v57))
      break;
    if (v53[3] >= v58)
    {
      if ((v103 & 1) == 0)
      {
        LODWORD(v107) = v54;
        sub_1CDFE85CC();
        LOBYTE(v54) = v107;
      }
    }
    else
    {
      LODWORD(v107) = v54;
      sub_1CDFE6080(v58, v103);
      v59 = sub_1CDFD1DAC(v46, v6);
      v60 = v54 & 1;
      LOBYTE(v54) = v107;
      if ((v107 & 1) != v60)
        goto LABEL_81;
      v55 = v59;
    }
    v61 = v115;
    v107 = (uint64_t)v115;
    if ((v54 & 1) != 0)
    {
      v62 = (_OWORD *)(v115[7] + 32 * v55);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v62);
      sub_1CDFB96B0(v116, v62);
    }
    else
    {
      v115[(v55 >> 6) + 8] |= 1 << v55;
      v63 = (uint64_t *)(v61[6] + 16 * v55);
      *v63 = v46;
      v63[1] = v6;
      sub_1CDFB96B0(v116, (_OWORD *)(v61[7] + 32 * v55));
      v64 = v61[2];
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (v65)
        goto LABEL_80;
      v61[2] = v66;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v118);
    v103 = 1;
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

_QWORD *sub_1CDFBB178(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t ObjectType;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;

  a3[2] = a1;
  a3[3] = a6;
  a3[4] = a7;
  a3[5] = a2;
  a3[6] = a8;
  ObjectType = swift_getObjectType();
  v20 = a1;
  v19 = 10;
  v12 = swift_allocObject();
  swift_weakInit();
  v13 = sub_1CE0B4E80();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CE01F0E4, v12, ObjectType, v13, a7, MEMORY[0x1E0D92B00], MEMORY[0x1E0D92B08]);
  swift_release();
  v20 = a1;
  v19 = 9;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = sub_1CE0B5888();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CE01F0EC, v14, ObjectType, v15, a7, MEMORY[0x1E0D95118], MEMORY[0x1E0D95120]);
  swift_release();
  v20 = a1;
  v19 = 12;
  v16 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v19, (uint64_t)sub_1CE01F0F4, v16, ObjectType, MEMORY[0x1E0DEA968], a7, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  swift_release();
  v20 = a1;
  v19 = 13;
  v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v19, (uint64_t)sub_1CE01F0FC, v17, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a3;
}

_QWORD *sub_1CDFBB3B0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v25 = a1;
  v24 = 21;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B4D48();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v13 = MEMORY[0x1E0D925A8];
  v14 = MEMORY[0x1E0D925B0];
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1CE02CD64, v11, ObjectType, v12, a7, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0]);
  swift_release();
  v25 = a1;
  v24 = 24;
  v15 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1CE02CD94, v15, ObjectType, v12, a7, v13, v14);
  swift_release();
  v25 = a1;
  v24 = 26;
  v16 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1CE02CDC4, v16, ObjectType, v12, a7, v13, v14);
  swift_release();
  v25 = a1;
  v24 = 25;
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = sub_1CE0B5B28();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1CDFE19C0, v17, ObjectType, v18, a7, MEMORY[0x1E0D95C98], MEMORY[0x1E0D95CA0]);
  swift_release();
  v25 = a1;
  v24 = 20;
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = sub_1CE0B5B7C();
  TransportDispatching.register<A>(event:handler:)(&v24, (uint64_t)sub_1CE02CDF4, v19, ObjectType, v20, a7, MEMORY[0x1E0D95DE0], MEMORY[0x1E0D95DE8]);
  swift_release();
  v25 = a1;
  v24 = 22;
  v21 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v24, (uint64_t)sub_1CDFCBB6C, v21, ObjectType, a7);
  swift_release_n();
  v25 = a1;
  v24 = 23;
  v22 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v24, (uint64_t)sub_1CE02CE24, v22, ObjectType, a7);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFBB718(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v28 = a1;
  v27 = 36;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B56CC();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C0B4, v11, ObjectType, v12, a7, MEMORY[0x1E0D94C48], MEMORY[0x1E0D94C50]);
  swift_release();
  v28 = a1;
  v27 = 38;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = sub_1CE0B5144();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C0E4, v13, ObjectType, v14, a7, MEMORY[0x1E0D939A8], MEMORY[0x1E0D939B0]);
  swift_release();
  v28 = a1;
  v27 = 35;
  v15 = sub_1CE0B4CDC();
  v16 = MEMORY[0x1E0D92400];
  v17 = MEMORY[0x1E0D92408];
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02A228, 0, ObjectType, v15, a7, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408]);
  v28 = a1;
  v27 = 42;
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = sub_1CE0B4BEC();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C114, v18, ObjectType, v19, a7, MEMORY[0x1E0D91E58], MEMORY[0x1E0D91E60]);
  swift_release();
  v28 = a1;
  v27 = 34;
  v20 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C11C, v20, ObjectType, v15, a7, v16, v17);
  swift_release();
  v28 = a1;
  v27 = 39;
  v21 = swift_allocObject();
  swift_weakInit();
  v22 = sub_1CE0B5084();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C124, v21, ObjectType, v22, a7, MEMORY[0x1E0D93218], MEMORY[0x1E0D93220]);
  swift_release();
  v28 = a1;
  v27 = 37;
  v23 = swift_allocObject();
  swift_weakInit();
  v24 = sub_1CE0B50C0();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C12C, v23, ObjectType, v24, a7, MEMORY[0x1E0D934B8], MEMORY[0x1E0D934C0]);
  swift_release();
  v28 = a1;
  v27 = 41;
  v25 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v27, (uint64_t)sub_1CE02C15C, v25, ObjectType, v15, a7, MEMORY[0x1E0D92400], v17);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

uint64_t TransportDispatching.register(event:handler:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7;
  uint64_t v8;
  char v10;

  v7 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  v10 = v7;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  sub_1CDFC6750(&v10, (uint64_t)sub_1CDFC9E94, v8);
  swift_release();
  return swift_release();
}

uint64_t TransportDispatching.register<A>(event:handler:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char v13;
  char v15;

  v13 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  v15 = v13;
  sub_1CDFC66B8(&v15, a2, a3, a5, a7, a8);
  return swift_release();
}

uint64_t sub_1CDFBBC08()
{
  return swift_retain();
}

uint64_t sub_1CDFBBC14(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CDFBBC54(unint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  if (result)
  {
    v1 = result;
    v3 = 0;
    MEMORY[0x1D17C0944](&v3, 8);
    result = (v3 * (unsigned __int128)v1) >> 64;
    if (v3 * v1 < v1)
    {
      v2 = -(uint64_t)v1 % v1;
      if (v2 > v3 * v1)
      {
        do
        {
          v3 = 0;
          MEMORY[0x1D17C0944](&v3, 8);
        }
        while (v2 > v3 * v1);
        return (v3 * (unsigned __int128)v1) >> 64;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CDFBBCE0(uint64_t a1, void *a2, void *a3)
{
  void *v4;
  void (*v5)(void *, unint64_t, void *);
  id v6;
  unint64_t v7;
  unint64_t v8;
  id v9;

  v4 = a2;
  v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v6 = v4;
    v4 = (void *)sub_1CE0B3D64();
    v8 = v7;

  }
  else
  {
    swift_retain();
    v8 = 0xF000000000000000;
  }
  v9 = a3;
  v5(v4, v8, a3);

  sub_1CDFC094C((uint64_t)v4, v8);
  return swift_release();
}

uint64_t sub_1CDFBBD74(uint64_t a1, unint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = v3[2];
  v8 = v3[3];
  v9 = v3[4];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B6518() - 8) + 80);
  return sub_1CDFBBE0C(a1, a2, a3, v3[5], (uint64_t)v3 + ((v10 + 48) & ~v10), v7, v8, v9);
}

uint64_t sub_1CDFBBE0C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  char *v34;
  void *v35;
  uint64_t v36;
  id v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD aBlock[6];

  v40 = a7;
  v41 = a8;
  v39 = a5;
  v43 = a2;
  v44 = a3;
  v42 = a1;
  v9 = sub_1CE0B6140();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CE0B6158();
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v16 = sub_1CE0B6518();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 64);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v36 - v19;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v38 = v12;
    v22 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    v37 = *(id *)(v22 + 16);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v20, v39, v16);
    v23 = (*(unsigned __int8 *)(v17 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v24 = (v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    v39 = v10;
    v25 = v9;
    v26 = (char *)swift_allocObject();
    v27 = v40;
    *((_QWORD *)v26 + 2) = a6;
    *((_QWORD *)v26 + 3) = v27;
    *((_QWORD *)v26 + 4) = v41;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v26[v23], v20, v16);
    v28 = (uint64_t *)&v26[v24];
    v30 = v42;
    v29 = v43;
    *v28 = v42;
    v28[1] = v29;
    v31 = v44;
    *(_QWORD *)&v26[(v24 + 23) & 0xFFFFFFFFFFFFFFF8] = v44;
    aBlock[4] = sub_1CDFC0EBC;
    aBlock[5] = v26;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_136;
    v32 = _Block_copy(aBlock);
    sub_1CDFC2094(v30, v29);
    v33 = v31;
    sub_1CE0B614C();
    v47 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    v34 = v38;
    sub_1CE0B6944();
    v35 = v37;
    MEMORY[0x1D17BFB04](0, v15, v34, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v34, v25);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v46);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CDFBC17C(void *a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  void *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v25;
  char v26;
  _OWORD v27[2];
  uint64_t v28[4];

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_requiredEntitlements);
  v6 = v5 + 56;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 56);
  v25 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  v10 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v3 = *v16;
    v2 = v16[1];
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1CE0B626C();
    v18 = objc_msgSend(a1, sel_valueForEntitlement_, v17);

    if (v18)
    {
      sub_1CE0B6938();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v27, 0, sizeof(v27));
    }
    sub_1CDFBFD6C((uint64_t)v27, (uint64_t)v28);
    if (!v28[3])
      break;
    if ((swift_dynamicCast() & 1) == 0 || (v26 & 1) == 0)
      goto LABEL_28;
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_4;
LABEL_5:
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v6 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v6 + 8 * v10);
        if (!v14)
        {
          v15 = v13 + 3;
          if (v15 >= v25)
          {
LABEL_33:
            swift_release();
            sub_1CDFBC604(a1);
            return 1;
          }
          v14 = *(_QWORD *)(v6 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              v10 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_35;
              if (v10 >= v25)
                goto LABEL_33;
              v14 = *(_QWORD *)(v6 + 8 * v10);
              ++v15;
              if (v14)
                goto LABEL_18;
            }
          }
          v10 = v15;
        }
      }
    }
LABEL_18:
    v9 = (v14 - 1) & v14;
  }
  sub_1CDFBFDB4((uint64_t)v28);
LABEL_28:
  if (qword_1ED8F1890 == -1)
    goto LABEL_29;
LABEL_36:
  swift_once();
LABEL_29:
  v19 = sub_1CE0B6080();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED8F1870);
  swift_bridgeObjectRetain();
  v20 = sub_1CE0B6068();
  v21 = sub_1CE0B671C();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v28[0] = v23;
    *(_DWORD *)v22 = 141558274;
    *(_QWORD *)&v27[0] = 1752392040;
    sub_1CE0B68F0();
    *(_WORD *)(v22 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v27[0] = sub_1CDFC7270(v3, v2, v28);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CDFAA000, v20, v21, "Rejecting connection missing entitlement: %{mask.hash}s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v23, -1, -1);
    MEMORY[0x1D17C092C](v22, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease_n();
  }

  return 0;
}

uint64_t EventHub.init(queue:dispatchStrategy:timerProvider:)(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_1CDFF77A4(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v13;
}

uint64_t sub_1CDFBC604(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  void (*v27)();
  _QWORD *v28;

  v2 = v1;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v4 = sub_1CE0B6080();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1870);
  v5._countAndFlagsBits = 0xD000000000000061;
  v5._object = (void *)0x80000001CE0CD5D0;
  v6._object = (void *)0x80000001CE0CD6E0;
  v6._countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v5, v6);
  sub_1CDFB53C8(0, (unint64_t *)&qword_1ED8F0040);
  v7 = a1;
  v8 = (void *)sub_1CE0B6788();
  type metadata accessor for XPCClient();
  swift_allocObject();
  v9 = sub_1CDFBC9EC(v7, v8);
  sub_1CDFBCDFC(v9);
  v10 = (void *)objc_opt_self();
  v11 = objc_msgSend(v10, sel_interfaceWithProtocol_, &unk_1EFA6EE60);
  objc_msgSend(v7, sel_setExportedInterface_, v11);

  v12 = objc_msgSend(v10, sel_interfaceWithProtocol_, &unk_1EFA6EE60);
  objc_msgSend(v7, sel_setRemoteObjectInterface_, v12);

  objc_msgSend(v7, sel_setExportedObject_, v2);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v7;
  v14[3] = v13;
  v14[4] = v9;
  v27 = sub_1CE09DF4C;
  v28 = v14;
  v15 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1CDFB33D0;
  v26 = &block_descriptor_18;
  v16 = _Block_copy(&v23);
  v17 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_setInvalidationHandler_, v16);
  _Block_release(v16);
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v17;
  v19[3] = v18;
  v19[4] = v9;
  v27 = sub_1CE09DFA8;
  v28 = v19;
  v23 = v15;
  v24 = 1107296256;
  v25 = sub_1CDFB33D0;
  v26 = &block_descriptor_32;
  v20 = _Block_copy(&v23);
  v21 = v17;
  swift_retain();
  swift_release();
  objc_msgSend(v21, sel_setInterruptionHandler_, v20);
  _Block_release(v20);
  objc_msgSend(v21, sel_resume);
  return swift_release();
}

uint64_t XPCClient.__allocating_init(machServiceName:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v5 = (void *)sub_1CE0B626C();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithMachServiceName_options_, v5, 0);

  type metadata accessor for XPCClient();
  v7 = swift_allocObject();
  sub_1CDFBC9EC(v6, a3);
  return v7;
}

uint64_t type metadata accessor for XPCClient()
{
  return objc_opt_self();
}

uint64_t sub_1CDFBC9EC(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _DWORD *v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _DWORD *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;

  v3 = v2;
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 48) = 1;
  v35 = 0x6E65696C43435058;
  v36 = 0xEB00000000203A74;
  v8 = objc_msgSend(a1, sel_serviceName);
  if (v8)
  {
    v9 = v8;
    sub_1CE0B6278();

  }
  sub_1CE0B62F0();
  swift_bridgeObjectRelease();
  v10 = v35;
  v11 = v36;
  type metadata accessor for TransportDispatchService();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x1E0DEE9E0];
  v12[6] = MEMORY[0x1E0DEE9E0];
  v12[7] = v13;
  v12[2] = a2;
  v12[4] = v10;
  v12[5] = v11;
  v14 = swift_allocObject();
  v15 = a2;
  v16 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v14 + 16) = v16;
  *v16 = 0;
  v12[3] = v14;
  *(_QWORD *)(v3 + 16) = v12;
  *(_QWORD *)(v3 + 24) = a1;
  v17 = (void *)objc_opt_self();
  v18 = a1;
  v19 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_1EFA6EE60);
  objc_msgSend(v18, sel_setRemoteObjectInterface_, v19);

  v20 = *(id *)(v3 + 24);
  v21 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_1EFA6EE60);
  objc_msgSend(v20, sel_setExportedInterface_, v21);

  v22 = *(void **)(v3 + 24);
  type metadata accessor for XPCExportProxy();
  v23 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v24 = v22;
  objc_msgSend(v24, sel_setExportedObject_, v23);

  swift_release();
  v25 = *(void **)(v3 + 24);
  v26 = swift_allocObject();
  swift_weakInit();
  v39 = sub_1CE001D84;
  v40 = v26;
  v27 = MEMORY[0x1E0C809B0];
  v35 = MEMORY[0x1E0C809B0];
  v36 = 1107296256;
  v37 = sub_1CDFB33D0;
  v38 = &block_descriptor_277;
  v28 = _Block_copy(&v35);
  v29 = v25;
  swift_release();
  objc_msgSend(v29, sel_setInterruptionHandler_, v28);
  _Block_release(v28);

  v30 = *(void **)(v3 + 24);
  v31 = swift_allocObject();
  swift_weakInit();
  v39 = sub_1CE001DA4;
  v40 = v31;
  v35 = v27;
  v36 = 1107296256;
  v37 = sub_1CDFB33D0;
  v38 = &block_descriptor_281;
  v32 = _Block_copy(&v35);
  v33 = v30;
  swift_release();
  objc_msgSend(v33, sel_setInvalidationHandler_, v32);

  _Block_release(v32);
  return v3;
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for TransportDispatchService()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for XPCExportProxy()
{
  return objc_opt_self();
}

void sub_1CDFBCDFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._object = (void *)0x80000001CE0CD5D0;
  v4._countAndFlagsBits = 0xD000000000000061;
  v5._countAndFlagsBits = 0x6E65696C43646461;
  v5._object = (void *)0xED0000293A5F2874;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13SeymourClient9XPCServer_lock);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v6 + 16));
  *(_BYTE *)(a1 + 48) = 2;
  swift_beginAccess();
  swift_retain();
  sub_1CDFBCF10(&v7, a1);
  swift_endAccess();
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
}

uint64_t sub_1CDFBCF10(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1CE0B6980();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for XPCClient();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1CE0B6974();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1CE0968D0(v7, result + 1);
    v22 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1CE09793C();
      v17 = v22;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1CE097BF4(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  else
  {
    sub_1CE0B6D34();
    swift_bridgeObjectRetain();
    sub_1CE0B6860();
    v10 = sub_1CE0B6D64();
    v11 = -1 << *(_BYTE *)(v6 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
    {
      sub_1CDFB53C8(0, (unint64_t *)&qword_1ED8F03A8);
      swift_retain();
      v13 = sub_1CE0B6854();
      swift_release();
      if ((v13 & 1) != 0)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
        swift_retain();
        return 0;
      }
      v14 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v14;
        if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        swift_retain();
        v15 = sub_1CE0B6854();
        swift_release();
        if ((v15 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v2;
    *v2 = 0x8000000000000000;
    v19 = swift_retain();
    sub_1CDFBD1F4(v19, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
  }
  return 1;
}

uint64_t sub_1CDFBD1F4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1CE09793C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1CE09ADD4();
      goto LABEL_14;
    }
    sub_1CE09BF0C();
  }
  v8 = *v3;
  sub_1CE0B6D34();
  sub_1CE0B6860();
  result = sub_1CE0B6D64();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for XPCClient();
    sub_1CDFB53C8(0, (unint64_t *)&qword_1ED8F03A8);
    swift_retain();
    v10 = sub_1CE0B6854();
    result = swift_release();
    if ((v10 & 1) != 0)
    {
LABEL_13:
      result = sub_1CE0B6C8C();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        swift_retain();
        v12 = sub_1CE0B6854();
        result = swift_release();
        if ((v12 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v13 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * a2) = v5;
  v14 = *(_QWORD *)(v13 + 16);
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    *(_QWORD *)(v13 + 16) = v16;
  return result;
}

uint64_t sub_1CDFBD3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1CDFBE684((_QWORD *)(v1 + 16), v0);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  v2 = v0 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster;
  v3 = sub_1CE0B6020();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = v0 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID;
  v5 = sub_1CE0B5FFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t ActivityTracer.trace<A>(_:dso:telemetryEnabled:block:)(char *a1, uint64_t a2, int a3, void *a4, int a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v14[3])(void *);
  uint64_t v15;
  uint64_t v16;

  v8 = ActivityTracer.beginTrace(_:dso:telemetryEnabled:)(a1, a2, a3, a4, a5, v14);
  a6(v8);
  v9 = v15;
  v10 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 8))(0, v9, v10);
  if (v6)
  {
    swift_willThrow();
    v11 = v15;
    v12 = v16;
    __swift_project_boxed_opaque_existential_1(v14, v15);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(v6, v11, v12);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t destroy for ActivityTracer.Trace()
{
  return swift_release();
}

uint64_t sub_1CDFBD570()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

void sub_1CDFBD590(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1CE0B3DF4() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1CDFBDFB8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), v1 + v4, *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t ActivityTracer.beginTrace(_:dso:telemetryEnabled:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, void (**a6)(void *a1)@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  os_unfair_lock_s *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (**v60)(void *);
  uint64_t v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (**v75)(void *);
  int v76;
  uint64_t v77;
  uint64_t v78;

  v7 = v6;
  LODWORD(v68) = a5;
  v75 = a6;
  v12 = sub_1CE0B3DF4();
  v73 = *(_QWORD *)(v12 - 8);
  v74 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v69 = v14;
  v70 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v66 = (char *)&v62 - v15;
  v16 = sub_1CE0B6020();
  v64 = *(_QWORD *)(v16 - 8);
  v17 = v64;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1CE0B5FFC();
  v65 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v22 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v23 = v7;
  sub_1CE0B6014();
  v63 = v21;
  sub_1CE0B5FE4();
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v25 = v23;
  v26 = v16;
  v24(v19, v25, v16);
  type metadata accessor for Signpost();
  v27 = swift_allocObject();
  v28 = v27 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  v71 = a1;
  v72 = a2;
  *(_QWORD *)v28 = a1;
  *(_QWORD *)(v28 + 8) = a2;
  v76 = a3;
  *(_BYTE *)(v28 + 16) = a3;
  v29 = v65;
  v30 = v67;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 16))(v27 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v21, v67);
  *(_BYTE *)(v27 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v68;
  v31 = v19;
  v32 = v19;
  v33 = v26;
  v24((char *)(v27 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v34 = swift_allocObject();
  *(_DWORD *)(v34 + 24) = 0;
  *(_QWORD *)(v34 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v33);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v63, v30);
  *(_QWORD *)(v27 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v34;
  v78 = v22;
  v35 = sub_1CE0B6290();
  v37 = v36;
  v38 = v66;
  sub_1CE0B3DDC();
  v68 = v22;
  v39 = *(os_unfair_lock_s **)(v22 + 40);
  v40 = (uint64_t)&v39[4];
  v41 = v39 + 11;
  os_unfair_lock_lock(v39 + 11);
  sub_1CDFBEB38(v40);
  os_unfair_lock_unlock(v41);
  os_unfair_lock_lock((os_unfair_lock_t)(v34 + 24));
  v67 = v27;
  sub_1CDFBDBCC((uint64_t *)(v34 + 16), v27);
  os_unfair_lock_unlock((os_unfair_lock_t)(v34 + 24));
  if (qword_1ED8F0980 != -1)
    swift_once();
  v42 = sub_1CE0B6080();
  __swift_project_value_buffer(v42, (uint64_t)qword_1ED8F1EE0);
  swift_bridgeObjectRetain_n();
  v43 = sub_1CE0B6068();
  v44 = sub_1CE0B6734();
  v45 = os_log_type_enabled(v43, v44);
  v64 = v37;
  v65 = v35;
  if (v45)
  {
    v46 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v78 = v47;
    *(_DWORD *)v46 = 136446466;
    swift_bridgeObjectRetain();
    v77 = sub_1CDFC7270(v35, v37, &v78);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v46 + 12) = 2082;
    v49 = v71;
    v48 = v72;
    v50 = sub_1CE0B6A1C();
    v77 = sub_1CDFC7270(v50, v51, &v78);
    sub_1CE0B68F0();
    v52 = v48;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v43, v44, "[%{public}s] %{public}s begin", (uint8_t *)v46, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v47, -1, -1);
    MEMORY[0x1D17C092C](v46, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v49 = v71;
    v52 = v72;
  }
  v54 = v73;
  v53 = v74;
  v55 = v70;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v38, v74);
  v56 = (*(unsigned __int8 *)(v54 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
  v57 = (v69 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
  v58 = swift_allocObject();
  v59 = v64;
  *(_QWORD *)(v58 + 16) = v65;
  *(_QWORD *)(v58 + 24) = v59;
  *(_QWORD *)(v58 + 32) = v49;
  *(_QWORD *)(v58 + 40) = v52;
  *(_BYTE *)(v58 + 48) = v76;
  (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v58 + v56, v55, v53);
  *(_QWORD *)(v58 + v57) = v67;
  *(_QWORD *)(v58 + ((v57 + 15) & 0xFFFFFFFFFFFFFFF8)) = v68;
  v60 = v75;
  v75[3] = (void (*)(void *))&type metadata for ActivityTracer.Trace;
  v60[4] = (void (*)(void *))&off_1E8B6C1D0;
  *v60 = sub_1CDFBD590;
  v60[1] = (void (*)(void *))v58;
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v38, v53);
}

uint64_t type metadata accessor for Signpost()
{
  uint64_t result;

  result = qword_1ED8F0B58;
  if (!qword_1ED8F0B58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFBDBCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t result;
  uint64_t v14;
  NSObject *v15;
  int v16;
  const char *v17;
  char v18;
  uint64_t v19;
  void (*v20)(NSObject *, uint64_t, uint64_t);
  void (*v21)(NSObject *, uint64_t, uint64_t);
  uint8_t *v22;
  os_signpost_id_t v23;
  uint8_t *v24;
  void (*v25)(NSObject *, uint64_t, uint64_t);
  uint8_t *v26;
  os_signpost_id_t v27;
  uint8_t *v28;
  uint64_t v29;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  char *v33;
  char v34;
  char v35;

  v5 = sub_1CE0B5FFC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v30[-v11];
  result = MEMORY[0x1E0C80A78](v10);
  v15 = &v30[-v14];
  if (!*a1)
  {
    v16 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled);
    v17 = *(const char **)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier);
    v32 = v2;
    v33 = (char *)v17;
    v18 = *(_BYTE *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier + 16);
    v19 = a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID;
    v20 = *(void (**)(NSObject *, uint64_t, uint64_t))(v6 + 16);
    if (v16 != 1)
      goto LABEL_7;
    v20(&v30[-v14], v19, v5);
    v9 = sub_1CE0B6014();
    v31 = sub_1CE0B680C();
    result = sub_1CE0B6878();
    if ((result & 1) == 0)
    {
LABEL_11:

LABEL_24:
      v20(v12, (uint64_t)v15, v5);
      sub_1CE0B6050();
      swift_allocObject();
      v29 = sub_1CE0B6044();
      result = (*(uint64_t (**)(NSObject *, uint64_t))(v6 + 8))(v15, v5);
      *a1 = v29;
      return result;
    }
    if ((v18 & 1) != 0)
    {
      if ((unint64_t)v33 >> 32)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
      if (v33 >> 11 == 27)
      {
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      if (v33 >> 16 > 0x10)
        goto LABEL_28;
      v33 = &v34;
    }
    else if (!v33)
    {
      __break(1u);
LABEL_7:
      v20(v9, v19, v5);
      v15 = sub_1CE0B6014();
      v31 = sub_1CE0B680C();
      result = sub_1CE0B6878();
      if ((result & 1) == 0)
      {

LABEL_23:
        v15 = v9;
        goto LABEL_24;
      }
      if ((v18 & 1) == 0)
      {
        if (!v33)
        {
          __break(1u);
          goto LABEL_11;
        }
        goto LABEL_22;
      }
      if (!((unint64_t)v33 >> 32))
      {
        if (v33 >> 11 == 27)
        {
LABEL_31:
          __break(1u);
          return result;
        }
        if (v33 >> 16 <= 0x10)
        {
          v33 = &v35;
LABEL_22:
          v20(v12, (uint64_t)v9, v5);
          v25 = v20;
          v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v26 = 0;
          v27 = sub_1CE0B5FF0();
          _os_signpost_emit_with_name_impl(&dword_1CDFAA000, v15, (os_signpost_type_t)v31, v27, v33, "", v26, 2u);
          v28 = v26;
          v20 = v25;
          MEMORY[0x1D17C092C](v28, -1, -1);

          (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v12, v5);
          goto LABEL_23;
        }
        goto LABEL_29;
      }
      goto LABEL_27;
    }
    v20(v12, (uint64_t)v15, v5);
    v21 = v20;
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    v23 = sub_1CE0B5FF0();
    _os_signpost_emit_with_name_impl(&dword_1CDFAA000, v9, (os_signpost_type_t)v31, v23, v33, " enableTelemetry=YES ", v22, 2u);
    v24 = v22;
    v20 = v21;
    MEMORY[0x1D17C092C](v24, -1, -1);

    (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v12, v5);
    goto LABEL_24;
  }
  return result;
}

uint64_t sub_1CDFBDF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_activity_scope_state_s v4;

  v1 = *(_QWORD *)(v0 + 40);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 44));
  if (*(_BYTE *)(v1 + 40) == 1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    v4 = *(os_activity_scope_state_s *)(v1 + 24);
    os_activity_scope_leave(&v4);
    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 16) = v2;
    *(_BYTE *)(v1 + 40) = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 44));
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1CDFBDFB8(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  id v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  os_unfair_lock_s *v55;
  os_unfair_lock_s *v56;
  os_unfair_lock_s *v57;
  os_unfair_lock_s *v58;
  uint64_t *v59;
  os_unfair_lock_s *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69[2];

  v66 = a6;
  v64 = a4;
  v65 = a5;
  v63 = a2;
  v13 = a9;
  v14 = sub_1CE0B3DF4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v67 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v61 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v61 - v21;
  if (a1)
  {
    v23 = a1;
    if (qword_1ED8F0980 != -1)
      swift_once();
    v24 = sub_1CE0B6080();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, a7, v14);
    swift_bridgeObjectRetain();
    v25 = a1;
    swift_bridgeObjectRetain();
    v26 = a1;
    v27 = sub_1CE0B6068();
    v28 = sub_1CE0B671C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v62 = a9;
      v30 = v29;
      v61 = swift_slowAlloc();
      v69[0] = v61;
      *(_DWORD *)v30 = 136446978;
      swift_bridgeObjectRetain();
      v68 = sub_1CDFC7270(v63, a3, v69);
      v63 = a8;
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2082;
      v31 = sub_1CE0B6A1C();
      v68 = sub_1CDFC7270(v31, v32, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2048;
      v33 = v67;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v35 = v34;
      v36 = *(void (**)(char *, uint64_t))(v15 + 8);
      v36(v33, v14);
      v68 = v35;
      a8 = v63;
      sub_1CE0B68F0();
      v36(v20, v14);
      *(_WORD *)(v30 + 32) = 2082;
      v68 = (uint64_t)a1;
      v37 = a1;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
      v38 = sub_1CE0B6290();
      v68 = sub_1CDFC7270(v38, v39, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v27, v28, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v30, 0x2Au);
      v40 = v61;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v40, -1, -1);
      v41 = v30;
      v13 = v62;
      MEMORY[0x1D17C092C](v41, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);

    }
  }
  else
  {
    if (qword_1ED8F0980 != -1)
      swift_once();
    v42 = sub_1CE0B6080();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v22, a7, v14);
    swift_bridgeObjectRetain_n();
    v43 = sub_1CE0B6068();
    v44 = sub_1CE0B6734();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v62 = a9;
      v47 = v46;
      v69[0] = v46;
      *(_DWORD *)v45 = 136446722;
      swift_bridgeObjectRetain();
      v68 = sub_1CDFC7270(v63, a3, v69);
      v63 = a8;
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2082;
      v48 = sub_1CE0B6A1C();
      v68 = sub_1CDFC7270(v48, v49, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 22) = 2048;
      v50 = v67;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v52 = v51;
      v53 = *(void (**)(char *, uint64_t))(v15 + 8);
      v53(v50, v14);
      v68 = v52;
      a8 = v63;
      sub_1CE0B68F0();
      v53(v22, v14);
      _os_log_impl(&dword_1CDFAA000, v43, v44, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v45, 0x20u);
      swift_arrayDestroy();
      v54 = v47;
      v13 = v62;
      MEMORY[0x1D17C092C](v54, -1, -1);
      MEMORY[0x1D17C092C](v45, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    }

  }
  v55 = *(os_unfair_lock_s **)(a8 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  v56 = v55 + 4;
  v57 = v55 + 6;
  os_unfair_lock_lock(v55 + 6);
  sub_1CDFBE684(v56, a8);
  os_unfair_lock_unlock(v57);
  v58 = *(os_unfair_lock_s **)(v13 + 40);
  v59 = (uint64_t *)&v58[4];
  v60 = v58 + 11;
  os_unfair_lock_lock(v58 + 11);
  sub_1CDFBE5F8(v59);
  os_unfair_lock_unlock(v60);
}

void sub_1CDFBE5F8(uint64_t *a1)
{
  uint64_t v2;
  os_activity_scope_state_s v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  if (*((_BYTE *)a1 + 24) == 1)
  {
    v2 = *a1;
    v3 = *(os_activity_scope_state_s *)(a1 + 1);
    os_activity_scope_leave(&v3);
    a1[1] = 0;
    a1[2] = 0;
    *a1 = v2;
    *((_BYTE *)a1 + 24) = 0;
  }
}

uint64_t sub_1CDFBE684(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int v21;
  char v22;
  NSObject *v23;
  os_signpost_type_t v24;
  os_log_t v25;
  os_signpost_type_t v26;
  os_log_t v27;
  uint64_t v28;
  const char *v29;
  uint64_t v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  os_signpost_id_t v36;
  os_log_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  os_signpost_id_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  os_log_t v50;
  const char *v51;
  char v52;
  char v53;

  v5 = sub_1CE0B602C();
  v50 = *(os_log_t *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v45 - v9;
  v11 = sub_1CE0B5FFC();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  result = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v45 - v19;
  if (!*a1)
    return result;
  v45 = v18;
  v46 = v5;
  v47 = v17;
  v48 = result;
  v49 = v2;
  *a1 = 0;
  v21 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled);
  v51 = *(const char **)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier);
  v22 = *(_BYTE *)(a2 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier + 16);
  v23 = sub_1CE0B6014();
  if (v21 == 1)
  {
    sub_1CE0B6038();
    v24 = sub_1CE0B6800();
    result = sub_1CE0B6878();
    if ((result & 1) != 0)
    {
      if ((v22 & 1) != 0)
      {
        if (!((unint64_t)v51 >> 32))
        {
          v25 = v50;
          if (v51 >> 11 == 27)
          {
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          if (v51 >> 16 <= 0x10)
          {
            v51 = &v52;
            goto LABEL_18;
          }
          goto LABEL_35;
        }
        goto LABEL_33;
      }
      if (v51)
      {
        v25 = v50;
LABEL_18:
        v50 = v23;
        swift_retain();
        sub_1CE0B605C();
        swift_release();
        v28 = v46;
        if (((unsigned int (*)(char *, uint64_t))v25[11].isa)(v10, v46) == *MEMORY[0x1E0DF2190])
        {
          v29 = "[Error] Interval already ended";
        }
        else
        {
          ((void (*)(char *, uint64_t))v25[1].isa)(v10, v28);
          v29 = " enableTelemetry=YES ";
        }
        v32 = v48;
        v33 = v45;
        v34 = v47;
        (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v45, v20, v48);
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        v36 = sub_1CE0B5FF0();
        v37 = v50;
        _os_signpost_emit_with_name_impl(&dword_1CDFAA000, v50, v24, v36, v51, v29, v35, 2u);
        MEMORY[0x1D17C092C](v35, -1, -1);

        v38 = *(void (**)(char *, uint64_t))(v34 + 8);
        v38(v20, v32);
        swift_release();
        return ((uint64_t (*)(uint64_t, uint64_t))v38)(v33, v32);
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v48);
    return swift_release();
  }
  sub_1CE0B6038();
  v26 = sub_1CE0B6800();
  result = sub_1CE0B6878();
  if ((result & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v48);
    return swift_release();
  }
  if ((v22 & 1) != 0)
  {
    if ((unint64_t)v51 >> 32)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v27 = v50;
    if (v51 >> 11 == 27)
    {
LABEL_38:
      __break(1u);
      return result;
    }
    if (v51 >> 16 > 0x10)
      goto LABEL_36;
    v51 = &v53;
  }
  else
  {
    if (!v51)
      goto LABEL_32;
    v27 = v50;
  }
  swift_retain();
  sub_1CE0B605C();
  swift_release();
  v30 = v46;
  if (((unsigned int (*)(char *, uint64_t))v27[11].isa)(v8, v46) == *MEMORY[0x1E0DF2190])
  {
    v31 = "[Error] Interval already ended";
  }
  else
  {
    ((void (*)(char *, uint64_t))v27[1].isa)(v8, v30);
    v31 = "";
  }
  v39 = v48;
  v40 = v47;
  v41 = v45;
  (*(void (**)(void))(v47 + 16))();
  v42 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v42 = 0;
  v43 = sub_1CE0B5FF0();
  _os_signpost_emit_with_name_impl(&dword_1CDFAA000, v23, v26, v43, v51, v31, v42, 2u);
  MEMORY[0x1D17C092C](v42, -1, -1);

  v44 = *(void (**)(char *, uint64_t))(v40 + 8);
  v44(v14, v39);
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v44)(v41, v39);
}

uint64_t type metadata accessor for ActivityTrace()
{
  return objc_opt_self();
}

double sub_1CDFBEB38(uint64_t a1)
{
  NSObject *v2;
  double result;
  os_activity_scope_state_s v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(a1 + 24) & 1) == 0)
  {
    v2 = *(NSObject **)a1;
    v4 = (os_activity_scope_state_s)0;
    os_activity_scope_enter(v2, &v4);
    *(_QWORD *)a1 = v2;
    result = *(double *)v4.opaque;
    *(os_activity_scope_state_s *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 24) = 1;
  }
  return result;
}

uint64_t sub_1CDFBEBC8(char *description, uint64_t a2, char a3, void *dso)
{
  uint64_t v4;
  void *v5;
  os_activity_t v7;
  uint64_t v8;
  uint64_t result;

  if ((a3 & 1) == 0)
  {
    *(_QWORD *)(v4 + 16) = description;
    *(_QWORD *)(v4 + 24) = a2;
    *(_BYTE *)(v4 + 32) = a3;
    if (description)
    {
      v5 = dso;
      if (qword_1ED8F0220 == -1)
      {
LABEL_4:
        v7 = _os_activity_create(v5, description, (os_activity_t)qword_1ED8F0210, OS_ACTIVITY_FLAG_DEFAULT);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F03B0);
        v8 = swift_allocObject();
        *(_DWORD *)(v8 + 44) = 0;
        *(_QWORD *)(v8 + 24) = 0;
        *(_QWORD *)(v8 + 32) = 0;
        *(_QWORD *)(v8 + 16) = v7;
        *(_BYTE *)(v8 + 40) = 0;
        *(_QWORD *)(v4 + 40) = v8;
        return v4;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_4;
  }
  sub_1CE0B6A04();
  sub_1CE0B6A1C();
  swift_bridgeObjectRelease();
  sub_1CE0B62F0();
  result = sub_1CE0B6AE8();
  __break(1u);
  return result;
}

uint64_t TestProperty.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  unsigned __int8 v4;

  v4 = *v2;
  return static TestProperty.value(for:fallback:)(&v4, (uint64_t)&v2[*(int *)(a1 + 44)], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), a2);
}

uint64_t static TestProperty.value(for:fallback:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char v28;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v47 = a5;
  v11 = sub_1CE0B68A8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v42 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v46 = (char *)&v42 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v42 - v21;
  v48 = *a1;
  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a6, a2, a3);
  v43 = v22;
  v45 = a6;
  if (qword_1ED8F0398 != -1)
    swift_once();
  v23 = qword_1ED8F0388;
  LOBYTE(v50) = v48;
  v24 = UserDefaultsKeys.rawValue.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(v23, v24, v25, a3, a4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    a6 = v45;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a6, a2, a3);
  }
  v26 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v27 = v43;
  v26(v43, v15, a3);
  v28 = sub_1CE0B6260();
  a6 = v45;
  if ((v28 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v27, a3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a6, a2, a3);
  }
  if (qword_1ED8F1890 != -1)
    swift_once();
  v30 = sub_1CE0B6080();
  __swift_project_value_buffer(v30, (uint64_t)qword_1ED8F1870);
  v31 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  v32 = v46;
  v31(v46, v27, a3);
  v33 = sub_1CE0B6068();
  v34 = sub_1CE0B6734();
  v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    v36 = swift_slowAlloc();
    v47 = swift_slowAlloc();
    v50 = v47;
    *(_DWORD *)v36 = 136315394;
    LOBYTE(v49) = v48;
    v48 = v35;
    v37 = UserDefaultsKeys.rawValue.getter();
    v49 = sub_1CDFC7270(v37, v38, &v50);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    v31(v44, v32, a3);
    v39 = sub_1CE0B6290();
    v49 = sub_1CDFC7270(v39, v40, &v50);
    sub_1CE0B68F0();
    a6 = v45;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v32, a3);
    _os_log_impl(&dword_1CDFAA000, v33, (os_log_type_t)v48, "Non default value set for %s: %s", (uint8_t *)v36, 0x16u);
    v41 = v47;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v41, -1, -1);
    MEMORY[0x1D17C092C](v36, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v32, a3);
  }

  return ((uint64_t (*)(uint64_t, char *, uint64_t))v26)(a6, v43, a3);
}

uint64_t UserDefaultsKeys.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CDFBF1D8 + 4 * word_1CE0BC79C[*v0]))(0xD00000000000001ALL, 0x80000001CE0C6CB0);
}

uint64_t sub_1CDFBF1D8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8;
}

uint64_t sub_1CDFBF6F0()
{
  return 0x65655368746F6F53;
}

uint64_t sub_1CDFBF70C()
{
  return 0x616C6544636E7953;
}

uint64_t sub_1CDFBF72C()
{
  return 0x44636E795378614DLL;
}

uint64_t sub_1CDFBF74C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_1CDFBF778(a1, a2, a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t sub_1CDFBF778(void *a1, uint64_t a2, unint64_t a3)
{
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _BYTE *v21;
  uint64_t v23[4];
  uint64_t v24;
  double v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];

  v6 = (void *)sub_1CE0B626C();
  v7 = COERCE_DOUBLE(objc_msgSend(a1, sel_valueForKey_, v6));

  if (v7 != 0.0)
  {
    sub_1CE0B6938();
    swift_unknownObjectRelease();
    sub_1CDFB96B0(&v27, v29);
    sub_1CDFC74F8((uint64_t)v29, (uint64_t)&v27);
    if (swift_dynamicCast())
    {
      v7 = v25;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    }
    else
    {
      sub_1CDFC74F8((uint64_t)v29, (uint64_t)&v27);
      v8 = swift_dynamicCast();
      if ((_DWORD)v8)
      {
        v25 = 0.0;
        MEMORY[0x1E0C80A78](v8);
        if ((v26 & 0x1000000000000000) != 0 || !(v26 & 0x2000000000000000 | v9 & 0x1000000000000000))
        {
          sub_1CE0B69F8();
          swift_bridgeObjectRelease();
          v11 = v27;
        }
        else if ((v26 & 0x2000000000000000) != 0)
        {
          *(_QWORD *)&v27 = v9;
          *((_QWORD *)&v27 + 1) = v26 & 0xFFFFFFFFFFFFFFLL;
          v11 = (v9 > 0x20u || ((0x100003E01uLL >> v9) & 1) == 0)
             && (v21 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
             && *v21 == 0;
          swift_bridgeObjectRelease();
        }
        else
        {
          if ((v9 & 0x1000000000000000) != 0)
            v10 = (_BYTE *)((v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
          else
            v10 = (_BYTE *)sub_1CE0B6A64();
          sub_1CE047DEC(v10, (BOOL *)&v27);
          v11 = v27;
          swift_bridgeObjectRelease();
        }
        if (v11)
          v7 = v25;
        else
          v7 = 0.0;
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
      }
      else
      {
        sub_1CDFC74F8((uint64_t)v29, (uint64_t)&v27);
        if (swift_dynamicCast())
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
          v7 = *(float *)&v25;
        }
        else
        {
          if (qword_1ED8F1890 != -1)
            swift_once();
          v12 = sub_1CE0B6080();
          __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F1870);
          sub_1CDFC74F8((uint64_t)v29, (uint64_t)&v27);
          sub_1CDFC74F8((uint64_t)v29, (uint64_t)&v25);
          swift_bridgeObjectRetain_n();
          v13 = sub_1CE0B6068();
          v14 = sub_1CE0B671C();
          if (os_log_type_enabled(v13, v14))
          {
            v15 = swift_slowAlloc();
            v16 = swift_slowAlloc();
            v24 = v16;
            *(_DWORD *)v15 = 136315650;
            swift_bridgeObjectRetain();
            sub_1CDFC7270(a2, a3, &v24);
            sub_1CE0B68F0();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v15 + 12) = 2080;
            __swift_project_boxed_opaque_existential_1(&v27, v28);
            swift_getDynamicType();
            v17 = sub_1CE0B6DF4();
            v23[0] = sub_1CDFC7270(v17, v18, &v24);
            sub_1CE0B68F0();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
            *(_WORD *)(v15 + 22) = 2080;
            sub_1CDFC74F8((uint64_t)&v25, (uint64_t)v23);
            v19 = sub_1CE0B6290();
            v23[0] = sub_1CDFC7270(v19, v20, &v24);
            sub_1CE0B68F0();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
            _os_log_impl(&dword_1CDFAA000, v13, v14, "Couldn't parse Double at %s with type %s and value %s", (uint8_t *)v15, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x1D17C092C](v16, -1, -1);
            MEMORY[0x1D17C092C](v15, -1, -1);

            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
          }
          else
          {

            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v27);
            swift_bridgeObjectRelease_n();
            __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
          }
          v7 = 0.0;
        }
      }
    }
  }
  return *(_QWORD *)&v7;
}

uint64_t sub_1CDFBFC74@<X0>(void *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = _sSb13SeymourClientE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0(a1);
  *a2 = result;
  return result;
}

uint64_t _sSb13SeymourClientE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0(void *a1)
{
  void *v2;
  id v3;
  unsigned __int8 v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v2 = (void *)sub_1CE0B626C();
  v3 = objc_msgSend(a1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1CE0B6938();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1CDFBFD6C((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    if (swift_dynamicCast())
      return v5;
    else
      return 2;
  }
  else
  {
    sub_1CDFBFDB4((uint64_t)v7);
    return 2;
  }
}

uint64_t sub_1CDFBFD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F10C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CDFBFDB4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F10C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CDFBFDF4@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return static Optional<A>.read(from:key:)(*(_QWORD *)(a1 - 8), a2);
}

uint64_t static Optional<A>.read(from:key:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v3;

  (*(void (**)(void))(a1 + 8))();
  v3 = sub_1CE0B68A8();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

void sub_1CDFBFE4C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    v6 = sub_1CE0B6278();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

uint64_t sub_1CDFBFED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t *__return_ptr, _QWORD))(*(_QWORD *)(v0 + 32) + 16))(&v7, *(_QWORD *)(v0 + 24));
  if (v7)
  {
    v1 = *(_QWORD *)(v0 + 40);
    *(_QWORD *)(v0 + 16) = v7;
    v2 = swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v2;
    *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
    *(_QWORD *)(v2 + 32) = v0 + 16;
    *(_QWORD *)(v2 + 40) = v1;
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v3;
    *v3 = v0;
    v3[1] = sub_1CDFABE10;
    return sub_1CE0B6C2C();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 24);
    v7 = MEMORY[0x1E0DEE9D8];
    (*(void (**)(uint64_t *, uint64_t))(v5 + 24))(&v7, v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CDFBFFD8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(unint64_t *, uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03A0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v13 = *a2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a2 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_1CDFC02E0(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    *a2 = v13;
  }
  v16 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v13 + 24);
  if (v16 >= v15 >> 1)
  {
    v13 = sub_1CDFC02E0(v15 > 1, v16 + 1, 1, v13);
    *a2 = v13;
  }
  *(_QWORD *)(v13 + 16) = v16 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v16, v12, v9);
  v20 = *a2;
  v17 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(a5 + 24);
  swift_bridgeObjectRetain();
  return v17(&v20, a4, a5);
}

uint64_t sub_1CDFC0134(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_1CDFC02E0(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03A0) - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CDFC02E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0CE8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03A0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1CE0B6ADC();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03A0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CDFC04F0(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1CDFC04F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03A0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

void sub_1CDFC060C()
{
  uint64_t v0;

  sub_1CDFC0624(*(void (**)(uint64_t, uint64_t, void (*)(uint64_t), uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int16 *)(v0 + 40), *(void (**)(_QWORD, unint64_t, void *))(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

void sub_1CDFC0624(void (*a1)(uint64_t, uint64_t, void (*)(uint64_t a1), uint64_t), uint64_t a2, uint64_t a3, int a4, void (*a5)(_QWORD, unint64_t, void *), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD, unint64_t, void *);
  uint64_t v37;
  uint64_t v38;

  v15 = sub_1CE0B48C8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a5;
    *(_QWORD *)(v20 + 24) = a6;
    sub_1CDFB6BE4((uint64_t)a1);
    swift_retain();
    a1(a7, a8, sub_1CDFBA134, v20);
    swift_release();
    sub_1CDFC2DA0((uint64_t)a1);
  }
  else
  {
    v34 = a6;
    v35 = v17;
    HIDWORD(v33) = a4;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v36 = a5;
    v21 = sub_1CE0B6080();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED8F1870);
    swift_retain();
    v22 = sub_1CE0B6068();
    v23 = sub_1CE0B671C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v38 = v25;
      *(_DWORD *)v24 = 136446466;
      v27 = *(_QWORD *)(a3 + 32);
      v26 = *(_QWORD *)(a3 + 40);
      swift_bridgeObjectRetain();
      v37 = sub_1CDFC7270(v27, v26, &v38);
      sub_1CE0B68F0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      LOWORD(v37) = WORD2(v33);
      v28 = sub_1CE0B25C0();
      v29 = MEMORY[0x1D17BF33C](&type metadata for TransportRequest, v28);
      v37 = sub_1CDFC7270(v29, v30, &v38);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CDFAA000, v22, v23, "No dispatch handler on %{public}s found for request: %{public}s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v25, -1, -1);
      MEMORY[0x1D17C092C](v24, -1, -1);

    }
    else
    {

      swift_release();
    }
    v31 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v19, *MEMORY[0x1E0D913D8], v35);
    v32 = (void *)sub_1CE0AE6C8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v31);
    v36(0, 0xF000000000000000, v32);

  }
}

uint64_t sub_1CDFC094C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CDFC666C(a1, a2);
  return a1;
}

uint64_t sub_1CDFC0960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v5;

  return a5(a1, a2, a3, a4, v5[5], v5[6], v5[2], v5[3], v5[4]);
}

uint64_t sub_1CDFC0990(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1CDFC09D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CDFC0960(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFC09E0);
}

uint64_t sub_1CDFC09E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;

  v14 = sub_1CE0B5C6C();
  v15 = sub_1CE0B68A8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v23 - v18;
  a5(v17);
  v20 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) != 1)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a7;
    v21[3] = a8;
    v21[4] = a9;
    v21[5] = a3;
    v21[6] = a4;
    swift_retain();
    sub_1CE0B5C48();
    swift_release();
    v16 = v20;
    v15 = v14;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_1CDFC0B0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v5;

  return a5(a1, a2, a3, a4, v5[8], v5[9], v5[2], v5[3], v5[4], v5[5], v5[6], v5[7]);
}

uint64_t sub_1CDFC0B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CDFC0B0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFC0B50);
}

uint64_t sub_1CDFC0B50(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v28[1] = a6;
  v29 = a5;
  v31 = a3;
  v32 = a4;
  v30 = sub_1CE0B5C6C();
  v16 = sub_1CE0B68A8();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v28 - v19;
  v21 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v18);
  v23 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFC2094(a1, a2);
  sub_1CE0B56A8();
  v28[0] = v21;
  ((void (*)(char *))v29)(v23);
  v24 = v30;
  v25 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v20, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v28[0] + 8))(v23, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  else
  {
    v29 = v25;
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a7;
    v27[3] = a8;
    v27[4] = a9;
    v27[5] = a10;
    v27[6] = a11;
    v27[7] = a12;
    v27[8] = v31;
    v27[9] = v32;
    swift_retain();
    sub_1CE0B5C48();
    swift_release();
    (*(void (**)(char *, uint64_t))(v28[0] + 8))(v23, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v20, v24);
  }
}

uint64_t sub_1CDFC0D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CDFC0960(a1, a2, a3, a4, sub_1CDFC0D78);
}

uint64_t sub_1CDFC0D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;

  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = a7;
  v19[5] = a8;
  v19[6] = a9;
  v19[7] = a5;
  v19[8] = a6;
  v19[9] = a3;
  v19[10] = a4;
  swift_retain();
  swift_retain();
  sub_1CE03AF58((uint64_t)v17, (uint64_t)&unk_1EFA64C58, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1CDFC0E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1CDFC4C80(v0 + ((v2 + 40) & ~v2), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CDFC0EBC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = *(_QWORD *)(sub_1CE0B6518() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CDFC0F4C(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1CDFC0F4C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v7 = sub_1CE0B6DA0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - v9;
  sub_1CDFC2094(a2, a3);
  v11 = a4;
  sub_1CE0B6D70();
  v12 = sub_1CE0B6518();
  sub_1CDFC1068((uint64_t)v10, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1CDFC1068(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v8 + 24);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v5);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CE0B6DA0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v18 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v18 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    return sub_1CE0B6500();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v15, v3);
    return sub_1CE0B650C();
  }
}

uint64_t sub_1CDFC11C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CDFC11D0(a1, a2, a3, a4, *(void (**)(uint64_t))(v4 + 16));
}

uint64_t sub_1CDFC11D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  void (*v16)(uint64_t (*)(), uint64_t);
  uint64_t v17;
  uint64_t v18;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F06D0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5(v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1CDFB13F8((uint64_t)v11, qword_1ED8F06D0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  swift_retain();
  v16 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1CE0B34AC;
  *(_QWORD *)(v17 + 24) = v15;
  swift_retain();
  v16(sub_1CDFF4410, v17);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v11, v12);
}

void sub_1CDFC1334()
{
  uint64_t v0;

  sub_1CDFC133C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1CDFC133C(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[4];

  v4 = sub_1CE0B617C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >= 3)
    goto LABEL_10;
  swift_beginAccess();
  v8 = MEMORY[0x1D17C09E0](a2 + 16);
  if (!v8)
    return;
  v9 = (void *)v8;
  a1 = MEMORY[0x1D17C09E0](v8 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_delegate);

  if (!a1)
    return;
  v10 = *(void **)(a1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
  *v7 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
  v11 = v10;
  LOBYTE(v10) = sub_1CE0B6194();
  (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    v12[0] = 0;
    v12[1] = 0xE000000000000000;
    sub_1CE0B6A04();
    sub_1CE0B62F0();
    v12[3] = a1;
    type metadata accessor for CTCellularDataRestrictedState(0);
    sub_1CE0B6AA0();
    sub_1CE0B62F0();
    sub_1CE0B6AE8();
    __break(1u);
    return;
  }
  if (MEMORY[0x1D17C09E0](a1 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
  {
    sub_1CDFC1544();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1CDFC1544()
{
  return sub_1CDFC466C("Cellular data state changed, updating cached network conditions", (uint64_t)&unk_1E8B654F8, (uint64_t)sub_1CDFF4410);
}

uint64_t sub_1CDFC1560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (**v21)();
  _QWORD v22[2];

  v2 = v1;
  v22[1] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - v8;
  v10 = sub_1CE0B617C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v2 + 48);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v15 = v14;
  LOBYTE(v14) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    *(_QWORD *)(*(_QWORD *)(v2 + 32) + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate + 8) = &off_1E8B653D0;
    swift_unknownObjectWeakAssign();
    sub_1CDFB62B8();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = sub_1CDFC4BE8;
    *(_QWORD *)(v17 + 24) = v2;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    v18 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v19 = (v5 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v18, v7, v3);
    v21 = (uint64_t (**)())(v20 + v19);
    *v21 = sub_1CE00D394;
    v21[1] = (uint64_t (*)())v17;
    swift_retain();
    sub_1CE0B5C00();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1CDFC1778(void (*a1)(void))
{
  sub_1CDFC17A8(a1);
}

uint64_t dispatch thunk of UnfairLock.acquire<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

void sub_1CDFC17A8(void (*a1)(void))
{
  uint64_t v1;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  a1();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t EventHub.publish<A>(_:atTime:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[7];
  double v41;
  char v42;

  v36 = sub_1CE0B6140();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B6158();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a2 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v11);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 16);
  v37 = a1;
  v35 = v16(a2, a3);
  v18 = v17;
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(a3 + 8))(&v41, a2, a3);
  if ((v42 & 1) != 0)
  {
    v31 = v13;
    v32 = v10;
    v35 = v9;
    v19 = v36;
    swift_bridgeObjectRelease();
    v20 = v38;
    if ((*(_BYTE *)(v38 + 32) & 1) != 0)
    {
      return sub_1CDFC4C80(v37, a2, a3);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v37, a2);
      v25 = (*(unsigned __int8 *)(v14 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      v26 = (char *)swift_allocObject();
      *((_QWORD *)v26 + 2) = a2;
      *((_QWORD *)v26 + 3) = a3;
      *((_QWORD *)v26 + 4) = v20;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v26[v25], (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
      aBlock[4] = sub_1CDFC0E80;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1CDFB33D0;
      aBlock[3] = &block_descriptor_1;
      v27 = _Block_copy(aBlock);
      swift_retain();
      v28 = v31;
      sub_1CE0B614C();
      v39 = MEMORY[0x1E0DEE9D8];
      sub_1CDFC1B50();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
      sub_1CDFC20A8();
      v29 = v33;
      sub_1CE0B6944();
      MEMORY[0x1D17BFB04](0, v28, v29, v27);
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v19);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v35);
      return swift_release();
    }
  }
  else
  {
    v22 = v41;
    v23 = (_QWORD *)v38;
    v24 = *(_QWORD *)(v38 + 24);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 16));
    sub_1CDFF6E78(v23, v35, v18, v37, a2, a3, a4, v22);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 16));
    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1CDFC1B50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F1570;
  if (!qword_1ED8F1570)
  {
    v1 = sub_1CE0B6140();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F1570);
  }
  return result;
}

uint64_t _s13SeymourClient5EventPAAE18debounceIdentifierSSvg_0()
{
  swift_getMetatypeMetadata();
  return sub_1CE0B6290();
}

uint64_t sub_1CDFC1BC8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

uint64_t sub_1CDFC1CB8(Swift::Int a1, uint64_t a2, unint64_t a3, _QWORD *a4, void (**a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t (*v30)();
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[6];

  v38 = a3;
  v39 = a2;
  v8 = sub_1CE0B6140();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1CE0B6158();
  v12 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  TransportRequest.init(rawValue:)(a1);
  v16 = aBlock[0];
  if (LOWORD(aBlock[0]) == 334)
  {
    v17 = sub_1CE0B48C8();
    sub_1CDFB1900((unint64_t *)&qword_1EFA63A90, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
    v18 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0D913C8], v17);
    _Block_copy(a5);
    v20 = (void *)sub_1CE0B3CBC();
    ((void (**)(_QWORD, _QWORD, void *))a5)[2](a5, 0, v20);

    return swift_release();
  }
  v37 = v9;
  v22 = a4[3];
  v23 = *(os_unfair_lock_s **)(v22 + 16);
  _Block_copy(a5);
  os_unfair_lock_lock(v23);
  swift_beginAccess();
  v24 = a4[6];
  v25 = *(_QWORD *)(v24 + 16);
  v36 = v12;
  if (!v25 || (v26 = sub_1CDFC20F4(v16), (v27 & 1) == 0))
  {
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
    goto LABEL_8;
  }
  v35 = *(_OWORD *)(*(_QWORD *)(v24 + 56) + 16 * v26);
  v28 = *(os_unfair_lock_s **)(v22 + 16);
  swift_retain();
  os_unfair_lock_unlock(v28);
  if (!(_QWORD)v35)
  {
LABEL_8:
    v30 = 0;
    v29 = 0;
    goto LABEL_9;
  }
  v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = v35;
  v30 = sub_1CE0B3454;
LABEL_9:
  v31 = v38;
  v38 = a4[2];
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v30;
  *(_QWORD *)(v32 + 24) = v29;
  *(_QWORD *)(v32 + 32) = a4;
  *(_WORD *)(v32 + 40) = v16;
  *(_QWORD *)(v32 + 48) = sub_1CDFBA48C;
  *(_QWORD *)(v32 + 56) = v15;
  v33 = v39;
  *(_QWORD *)(v32 + 64) = v39;
  *(_QWORD *)(v32 + 72) = v31;
  aBlock[4] = sub_1CE0B26B0;
  aBlock[5] = v32;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_52;
  v34 = _Block_copy(aBlock);
  sub_1CDFB6BE4((uint64_t)v30);
  swift_retain();
  swift_retain();
  sub_1CDFC2094(v33, v31);
  sub_1CE0B614C();
  v41 = MEMORY[0x1E0DEE9D8];
  sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
  sub_1CDFC20A8();
  sub_1CE0B6944();
  MEMORY[0x1D17BFB04](0, v14, v11, v34);
  _Block_release(v34);
  sub_1CDFC2DA0((uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v40);
  swift_release();
  return swift_release();
}

uint64_t sub_1CDFC2094(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CDFC0990(a1, a2);
  return a1;
}

unint64_t sub_1CDFC20A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F1590;
  if (!qword_1ED8F1590)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED8F1580);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F1590);
  }
  return result;
}

unint64_t sub_1CDFC20F4(__int16 a1)
{
  uint64_t v2;

  sub_1CE0B6D34();
  sub_1CE0B6D40();
  v2 = sub_1CE0B6D64();
  return sub_1CDFC2158(a1, v2);
}

unint64_t sub_1CDFC2158(__int16 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = qword_1CE0B7E40[a1];
    v8 = *(_QWORD *)(v2 + 48);
    if (qword_1CE0B7E40[*(__int16 *)(v8 + 2 * result)] != v7)
    {
      v9 = ~v5;
      for (result = (result + 1) & v9;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v9)
      {
        if (qword_1CE0B7E40[*(__int16 *)(v8 + 2 * result)] == v7)
          break;
      }
    }
  }
  return result;
}

SeymourClient::TransportRequest_optional __swiftcall TransportRequest.init(rawValue:)(Swift::Int rawValue)
{
  __int16 *v1;
  __int16 v2;
  __int16 v3;

  v2 = 0;
  switch(rawValue)
  {
    case 0:
      goto LABEL_131;
    case 1:
      v2 = 1;
      goto LABEL_131;
    case 2:
      v2 = 2;
      goto LABEL_131;
    case 3:
      v2 = 3;
      goto LABEL_131;
    case 4:
      v2 = 4;
      goto LABEL_131;
    case 6:
      v2 = 5;
      goto LABEL_131;
    case 7:
      v2 = 6;
      goto LABEL_131;
    case 8:
      v2 = 7;
      goto LABEL_131;
    case 9:
      v2 = 8;
      goto LABEL_131;
    case 100:
      v2 = 9;
      goto LABEL_131;
    case 101:
      v2 = 10;
      goto LABEL_131;
    case 102:
      v2 = 11;
      goto LABEL_131;
    case 103:
      v2 = 12;
      goto LABEL_131;
    case 104:
      v2 = 13;
      goto LABEL_131;
    case 105:
      v2 = 14;
      goto LABEL_131;
    case 106:
      v2 = 15;
      goto LABEL_131;
    case 107:
      v2 = 16;
      goto LABEL_131;
    case 108:
      v2 = 17;
      goto LABEL_131;
    case 109:
      v2 = 18;
      goto LABEL_131;
    case 110:
      v2 = 19;
      goto LABEL_131;
    case 111:
      v2 = 20;
      goto LABEL_131;
    case 112:
      v2 = 21;
      goto LABEL_131;
    case 113:
      v2 = 22;
      goto LABEL_131;
    case 114:
      v2 = 23;
      goto LABEL_131;
    case 115:
      v2 = 24;
      goto LABEL_131;
    case 116:
      v2 = 25;
      goto LABEL_131;
    case 117:
      v2 = 26;
      goto LABEL_131;
    case 118:
      v2 = 27;
      goto LABEL_131;
    case 119:
      v2 = 28;
      goto LABEL_131;
    case 120:
      v2 = 29;
      goto LABEL_131;
    case 121:
      v2 = 30;
      goto LABEL_131;
    case 122:
      v2 = 31;
      goto LABEL_131;
    case 123:
      v2 = 32;
      goto LABEL_131;
    case 124:
      v2 = 33;
      goto LABEL_131;
    case 125:
      v2 = 34;
      goto LABEL_131;
    case 126:
      v2 = 35;
      goto LABEL_131;
    case 127:
      v2 = 36;
      goto LABEL_131;
    case 128:
      v2 = 37;
      goto LABEL_131;
    case 129:
      v2 = 38;
      goto LABEL_131;
    case 130:
      v2 = 39;
      goto LABEL_131;
    case 131:
      v2 = 40;
      goto LABEL_131;
    case 200:
      v2 = 41;
      goto LABEL_131;
    case 201:
      v2 = 42;
      goto LABEL_131;
    case 202:
      v2 = 43;
      goto LABEL_131;
    case 203:
      v2 = 44;
      goto LABEL_131;
    case 204:
      v2 = 45;
      goto LABEL_131;
    case 205:
      v2 = 46;
      goto LABEL_131;
    case 206:
      v2 = 47;
      goto LABEL_131;
    case 207:
      v2 = 48;
      goto LABEL_131;
    case 208:
      v2 = 49;
      goto LABEL_131;
    case 209:
      v2 = 50;
      goto LABEL_131;
    case 210:
      v2 = 51;
      goto LABEL_131;
    case 211:
      v2 = 52;
      goto LABEL_131;
    case 212:
      v2 = 53;
      goto LABEL_131;
    case 213:
      v2 = 54;
      goto LABEL_131;
    case 214:
      v2 = 55;
      goto LABEL_131;
    case 215:
      v2 = 56;
      goto LABEL_131;
    case 216:
      v2 = 57;
      goto LABEL_131;
    case 217:
      v2 = 58;
      goto LABEL_131;
    case 300:
      v2 = 59;
      goto LABEL_131;
    case 301:
      v2 = 60;
      goto LABEL_131;
    case 302:
      v2 = 61;
      goto LABEL_131;
    case 303:
      v2 = 62;
      goto LABEL_131;
    case 304:
      v2 = 63;
      goto LABEL_131;
    case 305:
      v2 = 64;
      goto LABEL_131;
    case 306:
      v2 = 65;
      goto LABEL_131;
    case 307:
      v2 = 66;
      goto LABEL_131;
    case 308:
      v2 = 67;
      goto LABEL_131;
    case 309:
      v2 = 68;
      goto LABEL_131;
    case 310:
      v2 = 69;
      goto LABEL_131;
    case 311:
      v2 = 70;
      goto LABEL_131;
    case 312:
      v2 = 71;
      goto LABEL_131;
    case 313:
      v2 = 72;
      goto LABEL_131;
    case 314:
      v2 = 73;
      goto LABEL_131;
    case 315:
      v2 = 74;
      goto LABEL_131;
    case 316:
      v2 = 75;
      goto LABEL_131;
    case 317:
      v2 = 76;
      goto LABEL_131;
    case 318:
      v2 = 77;
      goto LABEL_131;
    case 319:
      v2 = 78;
      goto LABEL_131;
    case 320:
      v2 = 79;
      goto LABEL_131;
    case 321:
      v2 = 80;
      goto LABEL_131;
    case 322:
      v2 = 81;
      goto LABEL_131;
    case 323:
      v2 = 82;
      goto LABEL_131;
    case 324:
      v2 = 83;
      goto LABEL_131;
    case 325:
      v2 = 84;
      goto LABEL_131;
    case 326:
      v2 = 85;
      goto LABEL_131;
    case 327:
      v2 = 86;
      goto LABEL_131;
    case 328:
      v2 = 87;
      goto LABEL_131;
    case 329:
      v2 = 88;
      goto LABEL_131;
    case 330:
      v2 = 89;
      goto LABEL_131;
    case 331:
      v2 = 90;
      goto LABEL_131;
    case 332:
      v2 = 91;
      goto LABEL_131;
    case 333:
      v2 = 92;
      goto LABEL_131;
    case 334:
      v2 = 93;
      goto LABEL_131;
    case 335:
      v2 = 94;
      goto LABEL_131;
    case 336:
      v2 = 95;
      goto LABEL_131;
    case 337:
      v2 = 96;
      goto LABEL_131;
    case 338:
      v2 = 97;
      goto LABEL_131;
    case 339:
      v2 = 98;
      goto LABEL_131;
    case 340:
      v2 = 99;
      goto LABEL_131;
    case 341:
      v2 = 100;
      goto LABEL_131;
    case 342:
      v2 = 101;
      goto LABEL_131;
    case 343:
      v2 = 102;
      goto LABEL_131;
    case 344:
      v2 = 103;
      goto LABEL_131;
    case 345:
      v2 = 104;
      goto LABEL_131;
    case 346:
      v2 = 105;
      goto LABEL_131;
    case 400:
      v2 = 106;
      goto LABEL_131;
    case 401:
      v2 = 107;
      goto LABEL_131;
    case 402:
      v2 = 108;
      goto LABEL_131;
    case 500:
      v2 = 109;
      goto LABEL_131;
    case 501:
      v2 = 110;
      goto LABEL_131;
    case 502:
      v2 = 111;
      goto LABEL_131;
    case 503:
      v2 = 112;
      goto LABEL_131;
    case 504:
      v2 = 113;
      goto LABEL_131;
    case 505:
      v2 = 114;
      goto LABEL_131;
    case 700:
      v2 = 115;
      goto LABEL_131;
    case 701:
      v2 = 116;
      goto LABEL_131;
    case 702:
      v2 = 117;
      goto LABEL_131;
    case 703:
      v2 = 118;
      goto LABEL_131;
    case 704:
      v2 = 119;
      goto LABEL_131;
    case 705:
      v2 = 120;
      goto LABEL_131;
    case 706:
      v2 = 121;
      goto LABEL_131;
    case 707:
      v2 = 122;
      goto LABEL_131;
    case 708:
      v2 = 123;
      goto LABEL_131;
    case 709:
      v2 = 124;
      goto LABEL_131;
    case 710:
      v2 = 125;
      goto LABEL_131;
    case 711:
      v2 = 126;
      goto LABEL_131;
    case 800:
      v2 = 127;
LABEL_131:
      v3 = v2;
LABEL_132:
      *v1 = v3;
      break;
    default:
      v2 = 128;
      switch(rawValue)
      {
        case 801:
          goto LABEL_131;
        case 802:
          v2 = 129;
          goto LABEL_131;
        case 803:
          v2 = 130;
          goto LABEL_131;
        case 804:
          v2 = 131;
          goto LABEL_131;
        case 805:
          v2 = 132;
          goto LABEL_131;
        case 806:
          v2 = 133;
          goto LABEL_131;
        case 807:
          v2 = 134;
          goto LABEL_131;
        case 808:
          v2 = 135;
          goto LABEL_131;
        case 900:
          v2 = 136;
          goto LABEL_131;
        case 901:
          v2 = 137;
          goto LABEL_131;
        case 902:
          v2 = 138;
          goto LABEL_131;
        case 904:
          v2 = 139;
          goto LABEL_131;
        case 1000:
          v2 = 140;
          goto LABEL_131;
        case 1001:
          v2 = 141;
          goto LABEL_131;
        case 1002:
          v2 = 142;
          goto LABEL_131;
        case 1003:
          v2 = 143;
          goto LABEL_131;
        case 1004:
          v2 = 144;
          goto LABEL_131;
        case 1005:
          v2 = 145;
          goto LABEL_131;
        case 1006:
          v2 = 146;
          goto LABEL_131;
        case 1007:
          v2 = 147;
          goto LABEL_131;
        case 1100:
          v2 = 148;
          goto LABEL_131;
        case 1101:
          v2 = 149;
          goto LABEL_131;
        case 1102:
          v2 = 150;
          goto LABEL_131;
        case 1104:
          v2 = 151;
          goto LABEL_131;
        case 1105:
          v2 = 152;
          goto LABEL_131;
        case 1106:
          v2 = 153;
          goto LABEL_131;
        case 1107:
          v2 = 154;
          goto LABEL_131;
        case 1108:
          v2 = 155;
          goto LABEL_131;
        case 1109:
          v2 = 156;
          goto LABEL_131;
        case 1110:
          v2 = 157;
          goto LABEL_131;
        case 1113:
          v2 = 158;
          goto LABEL_131;
        case 1114:
          v2 = 159;
          goto LABEL_131;
        case 1116:
          v2 = 160;
          goto LABEL_131;
        case 1117:
          v2 = 161;
          goto LABEL_131;
        case 1118:
          v2 = 162;
          goto LABEL_131;
        case 1200:
          v2 = 163;
          goto LABEL_131;
        case 1201:
          v2 = 164;
          goto LABEL_131;
        case 1202:
          v2 = 165;
          goto LABEL_131;
        case 1203:
          v2 = 166;
          goto LABEL_131;
        case 1204:
          v2 = 167;
          goto LABEL_131;
        case 1205:
          v2 = 168;
          goto LABEL_131;
        case 1206:
          v2 = 169;
          goto LABEL_131;
        case 1207:
          v2 = 170;
          goto LABEL_131;
        case 1208:
          v2 = 171;
          goto LABEL_131;
        case 1209:
          v2 = 172;
          goto LABEL_131;
        case 1210:
          v2 = 173;
          goto LABEL_131;
        case 1211:
          v2 = 174;
          goto LABEL_131;
        case 1212:
          v2 = 175;
          goto LABEL_131;
        case 1213:
          v2 = 176;
          goto LABEL_131;
        case 1214:
          v2 = 177;
          goto LABEL_131;
        case 1215:
          v2 = 178;
          goto LABEL_131;
        case 1216:
          v2 = 179;
          goto LABEL_131;
        case 1217:
          v2 = 180;
          goto LABEL_131;
        case 1218:
          v2 = 181;
          goto LABEL_131;
        case 1219:
          v2 = 182;
          goto LABEL_131;
        case 1220:
          v2 = 183;
          goto LABEL_131;
        case 1221:
          v2 = 184;
          goto LABEL_131;
        case 1222:
          v2 = 185;
          goto LABEL_131;
        case 1224:
          v2 = 186;
          goto LABEL_131;
        case 1226:
          v2 = 187;
          goto LABEL_131;
        case 1227:
          v2 = 188;
          goto LABEL_131;
        case 1228:
          v2 = 189;
          goto LABEL_131;
        case 1229:
          v2 = 190;
          goto LABEL_131;
        case 1230:
          v2 = 191;
          goto LABEL_131;
        default:
          if (rawValue <= 1899)
          {
            v2 = 192;
            switch(rawValue)
            {
              case 1231:
                goto LABEL_131;
              case 1232:
                v2 = 193;
                goto LABEL_131;
              case 1233:
                v2 = 194;
                goto LABEL_131;
              case 1234:
                v2 = 195;
                goto LABEL_131;
              case 1235:
                v2 = 196;
                goto LABEL_131;
              case 1236:
                v2 = 197;
                goto LABEL_131;
              case 1237:
                v2 = 198;
                goto LABEL_131;
              case 1238:
                v2 = 199;
                goto LABEL_131;
              case 1239:
                v2 = 200;
                goto LABEL_131;
              case 1240:
                v2 = 201;
                goto LABEL_131;
              case 1241:
                v2 = 202;
                goto LABEL_131;
              case 1242:
                v2 = 203;
                goto LABEL_131;
              case 1243:
                v2 = 204;
                goto LABEL_131;
              case 1300:
                v2 = 205;
                goto LABEL_131;
              case 1301:
                v2 = 206;
                goto LABEL_131;
              case 1302:
                v2 = 207;
                goto LABEL_131;
              case 1303:
                v2 = 208;
                goto LABEL_131;
              case 1304:
                v2 = 209;
                goto LABEL_131;
              case 1305:
                v2 = 210;
                goto LABEL_131;
              case 1306:
                v2 = 211;
                goto LABEL_131;
              case 1400:
                v2 = 212;
                goto LABEL_131;
              case 1401:
                v2 = 213;
                goto LABEL_131;
              case 1402:
                v2 = 214;
                goto LABEL_131;
              case 1403:
                v2 = 215;
                goto LABEL_131;
              case 1404:
                v2 = 216;
                goto LABEL_131;
              case 1500:
                v2 = 217;
                goto LABEL_131;
              case 1501:
                v2 = 218;
                goto LABEL_131;
              case 1502:
                v2 = 219;
                goto LABEL_131;
              case 1503:
                v2 = 220;
                goto LABEL_131;
              case 1504:
                v2 = 221;
                goto LABEL_131;
              case 1505:
                v2 = 222;
                goto LABEL_131;
              case 1506:
                v2 = 223;
                goto LABEL_131;
              case 1507:
                v2 = 224;
                goto LABEL_131;
              case 1508:
                v2 = 225;
                goto LABEL_131;
              case 1509:
                v2 = 226;
                goto LABEL_131;
              case 1510:
                v2 = 227;
                goto LABEL_131;
              case 1511:
                v2 = 228;
                goto LABEL_131;
              case 1512:
                v2 = 229;
                goto LABEL_131;
              case 1513:
                v2 = 230;
                goto LABEL_131;
              case 1514:
                v2 = 231;
                goto LABEL_131;
              case 1515:
                v2 = 232;
                goto LABEL_131;
              case 1516:
                v2 = 233;
                goto LABEL_131;
              case 1600:
                v2 = 234;
                goto LABEL_131;
              case 1601:
                v2 = 235;
                goto LABEL_131;
              case 1602:
                v2 = 236;
                goto LABEL_131;
              case 1603:
                v2 = 237;
                goto LABEL_131;
              case 1604:
                v2 = 238;
                goto LABEL_131;
              case 1605:
                v2 = 239;
                goto LABEL_131;
              case 1700:
                v2 = 240;
                goto LABEL_131;
              case 1701:
                v2 = 241;
                goto LABEL_131;
              case 1702:
                v2 = 242;
                goto LABEL_131;
              case 1703:
                v2 = 243;
                goto LABEL_131;
              case 1704:
                v2 = 244;
                goto LABEL_131;
              case 1705:
                v2 = 245;
                goto LABEL_131;
              case 1709:
                v2 = 246;
                goto LABEL_131;
              case 1710:
                v2 = 247;
                goto LABEL_131;
              case 1711:
                v2 = 248;
                goto LABEL_131;
              case 1712:
                v2 = 249;
                goto LABEL_131;
              case 1800:
                v2 = 250;
                goto LABEL_131;
              default:
                goto LABEL_266;
            }
          }
          if (rawValue <= 1999)
          {
            if (rawValue == 1900)
            {
              v2 = 251;
              goto LABEL_131;
            }
            if (rawValue == 1901)
            {
              v2 = 252;
              goto LABEL_131;
            }
          }
          else
          {
            switch(rawValue)
            {
              case 2000:
                v2 = 253;
                goto LABEL_131;
              case 2001:
                v2 = 254;
                goto LABEL_131;
              case 2002:
                v2 = 255;
                goto LABEL_131;
            }
          }
LABEL_266:
          v3 = 316;
          v2 = 256;
          switch(rawValue)
          {
            case 2101:
              goto LABEL_131;
            case 2102:
              v2 = 257;
              goto LABEL_131;
            case 2103:
              v2 = 258;
              goto LABEL_131;
            case 2104:
              v2 = 259;
              goto LABEL_131;
            case 2105:
              v2 = 260;
              goto LABEL_131;
            case 2106:
              v2 = 261;
              goto LABEL_131;
            case 2107:
              v2 = 262;
              goto LABEL_131;
            case 2108:
              v2 = 263;
              goto LABEL_131;
            case 2109:
              v2 = 264;
              goto LABEL_131;
            case 2110:
              v2 = 265;
              goto LABEL_131;
            case 2111:
              v2 = 266;
              goto LABEL_131;
            case 2112:
              v2 = 267;
              goto LABEL_131;
            case 2113:
              v2 = 268;
              goto LABEL_131;
            case 2201:
              v2 = 269;
              goto LABEL_131;
            case 2202:
              v2 = 270;
              goto LABEL_131;
            case 2203:
              v2 = 271;
              goto LABEL_131;
            case 2204:
              v2 = 272;
              goto LABEL_131;
            case 2205:
              v2 = 273;
              goto LABEL_131;
            case 2206:
              v2 = 274;
              goto LABEL_131;
            case 2207:
              v2 = 275;
              goto LABEL_131;
            case 2208:
              v2 = 276;
              goto LABEL_131;
            case 2209:
              v2 = 277;
              goto LABEL_131;
            case 2210:
              v2 = 278;
              goto LABEL_131;
            case 2211:
              v2 = 279;
              goto LABEL_131;
            case 2212:
              v2 = 280;
              goto LABEL_131;
            case 2301:
              v2 = 281;
              goto LABEL_131;
            case 2302:
              v2 = 282;
              goto LABEL_131;
            case 2303:
              v2 = 283;
              goto LABEL_131;
            case 2304:
              v2 = 284;
              goto LABEL_131;
            case 2400:
              v2 = 285;
              goto LABEL_131;
            case 2401:
              v2 = 286;
              goto LABEL_131;
            case 2500:
              v2 = 287;
              goto LABEL_131;
            case 2501:
              v2 = 288;
              goto LABEL_131;
            case 2502:
              v2 = 289;
              goto LABEL_131;
            case 2503:
              v2 = 290;
              goto LABEL_131;
            case 2504:
              v2 = 291;
              goto LABEL_131;
            case 2505:
              v2 = 292;
              goto LABEL_131;
            case 2506:
              v2 = 293;
              goto LABEL_131;
            case 2507:
              v2 = 294;
              goto LABEL_131;
            case 2508:
              v2 = 295;
              goto LABEL_131;
            case 2509:
              v2 = 296;
              goto LABEL_131;
            case 2510:
              v2 = 297;
              goto LABEL_131;
            case 2511:
              v2 = 298;
              goto LABEL_131;
            case 2512:
              v2 = 299;
              goto LABEL_131;
            case 2513:
              v2 = 300;
              goto LABEL_131;
            case 2514:
              v2 = 301;
              goto LABEL_131;
            case 2515:
              v2 = 302;
              goto LABEL_131;
            case 2516:
              v2 = 303;
              goto LABEL_131;
            case 2517:
              v2 = 304;
              goto LABEL_131;
            case 2518:
              v2 = 305;
              goto LABEL_131;
            case 2519:
              v2 = 306;
              goto LABEL_131;
            case 2520:
              v2 = 307;
              goto LABEL_131;
            case 2521:
              v2 = 308;
              goto LABEL_131;
            case 2522:
              v2 = 309;
              goto LABEL_131;
            case 2523:
              v2 = 310;
              goto LABEL_131;
            case 2524:
              v2 = 311;
              goto LABEL_131;
            case 2525:
              v2 = 312;
              goto LABEL_131;
            case 2526:
              v2 = 313;
              goto LABEL_131;
            case 2527:
              v2 = 314;
              goto LABEL_131;
            case 2528:
              v2 = 315;
              goto LABEL_131;
            case 2529:
              goto LABEL_132;
            case 2530:
              *v1 = 317;
              break;
            case 2531:
              *v1 = 318;
              break;
            case 2532:
              *v1 = 319;
              break;
            default:
              v3 = 320;
              switch(rawValue)
              {
                case 2533:
                  goto LABEL_132;
                case 2534:
                  *v1 = 321;
                  break;
                case 2535:
                  *v1 = 322;
                  break;
                case 2536:
                  *v1 = 323;
                  break;
                case 2537:
                  *v1 = 324;
                  break;
                case 2539:
                  *v1 = 325;
                  break;
                case 2540:
                  *v1 = 326;
                  break;
                case 2600:
                  *v1 = 327;
                  break;
                case 2601:
                  *v1 = 328;
                  break;
                case 2602:
                  *v1 = 329;
                  break;
                case 2603:
                  *v1 = 330;
                  break;
                case 2604:
                  *v1 = 331;
                  break;
                case 2605:
                  *v1 = 332;
                  break;
                case 2606:
                  *v1 = 333;
                  break;
                default:
                  *v1 = 334;
                  break;
              }
              break;
          }
          break;
      }
      break;
  }
  return (SeymourClient::TransportRequest_optional)rawValue;
}

uint64_t sub_1CDFC2DA0(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1CDFC2DB0(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1D17C0848](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1CDFC2DF4(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1CDFC2E00@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void (*v8)(char *, _QWORD, uint64_t);
  char v9;
  void (*v10)(char *, uint64_t);
  char v11;
  char v12;
  char v13;
  uint64_t v15;

  v4 = sub_1CE0B6098();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v8(v7, *MEMORY[0x1E0CCE378], v4);
  v9 = sub_1CE0B6104();
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if ((v9 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v8(v7, *MEMORY[0x1E0CCE368], v4);
    v12 = sub_1CE0B6104();
    v10(v7, v4);
    if ((v12 & 1) != 0)
    {
      v11 = 2;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      v8(v7, *MEMORY[0x1E0CCE360], v4);
      v13 = sub_1CE0B6104();
      v10(v7, v4);
      if ((v13 & 1) != 0)
        v11 = 1;
      else
        v11 = 3;
    }
  }
  *a2 = v11;
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1CDFC2F6C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int v11;
  char v12;
  uint64_t result;
  _QWORD v14[3];
  _QWORD v15[5];

  v4 = sub_1CE0B6110();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CE0B611C();
  v11 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v10, v4);
  if (v11 == *MEMORY[0x1E0CCEAB0])
  {
    v12 = 1;
LABEL_7:
    *a2 = v12;
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  if (v11 == *MEMORY[0x1E0CCEA98])
  {
    v12 = 2;
    goto LABEL_7;
  }
  if (v11 == *MEMORY[0x1E0CCEAA0])
  {
    v12 = 0;
    goto LABEL_7;
  }
  sub_1CDFAC5C8((uint64_t)a1, (uint64_t)v15);
  v14[1] = 0;
  v14[2] = 0xE000000000000000;
  sub_1CE0B6A04();
  sub_1CE0B62F0();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  sub_1CE0B611C();
  sub_1CE0B6AA0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  result = sub_1CE0B6AE8();
  __break(1u);
  return result;
}

uint64_t sub_1CDFC3150()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  __int128 v6[2];
  _BYTE v7[40];
  __int128 v8[2];
  char v9;

  swift_beginAccess();
  sub_1CDFC36F4(v0 + 32, (uint64_t)v8);
  if (v9)
  {
    if (v9 == 1)
    {
      v1 = *(void **)&v8[0];
      swift_unknownObjectRelease();

    }
    sub_1CE06D460();
    v2 = swift_allocError();
    *v3 = 1;
    *(_QWORD *)(swift_allocObject() + 16) = v2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62330);
    return sub_1CE0B5C0C();
  }
  else
  {
    sub_1CDFC3290(v8, (uint64_t)v7);
    sub_1CDFAC5C8((uint64_t)v7, (uint64_t)v6);
    v5 = swift_allocObject();
    sub_1CDFC3290(v6, v5 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62330);
    sub_1CE0B5C0C();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
  }
}

uint64_t sub_1CDFC3290(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1CDFC32AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (**v17)();
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62340);
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  v10 = *(_QWORD *)(v31 + 64);
  v11 = MEMORY[0x1E0C80A78](v9);
  v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v29 = (char *)&v28 - v12;
  sub_1CDFC3544();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1CDFC32A8;
  *(_QWORD *)(v13 + 24) = v1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v14 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v15 = (v4 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v16 + v14, v6, v2);
  v17 = (uint64_t (**)())(v16 + v15);
  *v17 = sub_1CE00D394;
  v17[1] = (uint64_t (*)())v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62330);
  v18 = v29;
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1CE06CD4C;
  *(_QWORD *)(v19 + 24) = 0;
  v21 = v30;
  v20 = v31;
  v22 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v30, v18, v32);
  v23 = v20;
  v24 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v25 + v24, v21, v22);
  v26 = (uint64_t (**)(uint64_t))(v25 + ((v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v26 = sub_1CE06D620;
  v26[1] = (uint64_t (*)(uint64_t))v19;
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v18, v22);
}

uint64_t sub_1CDFC3544()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v1 = sub_1CE0B617C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 96);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    swift_beginAccess();
    sub_1CDFC36F4(v0 + 32, (uint64_t)&v13);
    if (v14)
    {
      if (v14 == 1)
      {
        v8 = v13;
        swift_unknownObjectRelease();
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = v8;
        *(_QWORD *)(v9 + 24) = v0;
        swift_retain();
        return sub_1CE0B5C00();
      }
      else
      {
        sub_1CE06D460();
        v10 = swift_allocError();
        *v11 = 1;
        *(_QWORD *)(swift_allocObject() + 16) = v10;
        return sub_1CE0B5C0C();
      }
    }
    else
    {
      sub_1CE0B5C60();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v13);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CDFC36F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ReachabilityObserver.State(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for ReachabilityObserver.State(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  __int128 v4;
  void *v5;
  uint64_t v6;
  id v7;
  __int128 v8;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *(void **)a2;
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 40) = 1;
    v7 = v5;
    swift_unknownObjectRetain();
  }
  else if (v3)
  {
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t sub_1CDFC37BC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  unsigned __int8 v6[4];

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v6[0] = *a1;
  v6[1] = v2;
  v6[2] = v3;
  v6[3] = v4;
  return sub_1CDFC37FC(v6, a2);
}

uint64_t sub_1CDFC37FC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  int v16;
  int v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)(char *);
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  uint64_t v33;

  v3 = v2;
  v33 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E540);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - v10;
  v12 = sub_1CE0B617C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *a1;
  v31 = a1[1];
  v32 = v16;
  v17 = a1[2];
  v29 = a1[3];
  v30 = v17;
  v18 = *(void **)(v3 + 48);
  *v15 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v19 = v18;
  LOBYTE(v18) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v18 & 1) != 0)
  {
    NetworkMonitor.queryInterfaceAvailability()((uint64_t)v11);
    v21 = swift_allocObject();
    swift_weakInit();
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v21;
    *(_BYTE *)(v22 + 24) = v32;
    *(_BYTE *)(v22 + 25) = v31;
    *(_BYTE *)(v22 + 26) = v30;
    *(_BYTE *)(v22 + 27) = v29;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = sub_1CE00D408;
    *(_QWORD *)(v23 + 24) = v22;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    v24 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v25 = (v7 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    v26 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v24, v9, v5);
    v27 = (uint64_t (**)(char *))(v26 + v25);
    *v27 = sub_1CE00D478;
    v27[1] = (uint64_t (*)(char *))v23;
    sub_1CE0B5C00();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CDFC3A64@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;
  char v4;
  char v6[4];

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v6[0] = *a1;
  v6[1] = v2;
  v6[2] = v3;
  v6[3] = v4;
  return sub_1CDFC3AB0(v6, a2);
}

uint64_t sub_1CDFC3AB0@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  char v10;
  char v11;
  void *v12;
  char v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  _QWORD v22[2];

  v3 = v2;
  v22[1] = a2;
  v5 = sub_1CE0B617C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = *(void **)&v3[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  v13 = a1[3];
  *v8 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v14 = v12;
  LOBYTE(a1) = sub_1CE0B6194();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((a1 & 1) != 0)
  {
    if (qword_1EFA5D4F8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v15 = sub_1CE0B6080();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EFA63468);
  v16 = sub_1CE0B6068();
  v17 = sub_1CE0B6734();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1CDFAA000, v16, v17, "[NetworkMonitor:InterfaceAvailability] Querying interface availability", v18, 2u);
    MEMORY[0x1D17C092C](v18, -1, -1);
  }

  v19 = swift_allocObject();
  *(_BYTE *)(v19 + 16) = v9;
  *(_BYTE *)(v19 + 17) = v10;
  *(_BYTE *)(v19 + 18) = v11;
  *(_BYTE *)(v19 + 19) = v13;
  *(_QWORD *)(v19 + 24) = v3;
  v20 = v3;
  return sub_1CE0B5C0C();
}

uint64_t NetworkMonitor.queryInterfaceAvailability()@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (**v24)@<X0>(char *@<X0>, uint64_t@<X8>);
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (**v35)(void *);
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v42 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61960);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v37 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E540);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v37 = v12;
  v38 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v37 - v13;
  v14 = sub_1CE0B617C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = *(void **)&v2[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v19 = v18;
  LOBYTE(v18) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    sub_1CDFC32AC((uint64_t)v9);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v2;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    v22 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v23 + v22, v7, v3);
    v24 = (uint64_t (**)@<X0>(char *@<X0>, uint64_t@<X8>))(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v24 = sub_1CDFC3A64;
    v24[1] = (uint64_t (*)@<X0>(char *@<X0>, uint64_t@<X8>))v21;
    v25 = v2;
    v26 = v39;
    sub_1CE0B5C00();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v25;
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = sub_1CE05E2A4;
    *(_QWORD *)(v28 + 24) = v27;
    v30 = v40;
    v29 = v41;
    v31 = v38;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v38, v26, v41);
    v32 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v33 = (v37 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    v34 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34 + v32, v31, v29);
    v35 = (uint64_t (**)(void *))(v34 + v33);
    *v35 = sub_1CE05E3B4;
    v35[1] = (uint64_t (*)(void *))v28;
    v36 = v25;
    sub_1CE0B5C00();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v26, v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1CDFC3FD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_cellularData), sel_restrictedState);
  if ((unint64_t)result >= 3)
  {
    sub_1CE0B6A04();
    sub_1CE0B62F0();
    type metadata accessor for CTCellularDataRestrictedState(0);
    sub_1CE0B6AA0();
    sub_1CE0B62F0();
    result = (id)sub_1CE0B6AE8();
    __break(1u);
  }
  else
  {
    *a1 = 2 - (_BYTE)result;
  }
  return result;
}

void sub_1CDFC40F0(uint64_t a1, unsigned __int8 *a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  void *v14;
  unsigned int v15;
  void (*v16)(_QWORD *, _QWORD, uint64_t);
  id v17;
  void (*v18)(_QWORD *, uint64_t);
  char v19;
  uint64_t v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  int v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  int v47;
  os_log_t v48;
  int v49;
  int v50;
  void (*v51)(_QWORD *, uint64_t);
  void (*v52)(_QWORD *, _QWORD, uint64_t);
  int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;

  v4 = v3;
  v8 = sub_1CE0B617C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(unsigned __int8 *)(a1 + 3);
  LODWORD(v13) = *a2;
  v14 = *(void **)(v4 + 48);
  *v11 = v14;
  v15 = *MEMORY[0x1E0DEF740];
  v16 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104);
  v16(v11, *MEMORY[0x1E0DEF740], v8);
  v17 = v14;
  LOBYTE(v14) = sub_1CE0B6194();
  v18 = *(void (**)(_QWORD *, uint64_t))(v9 + 8);
  v18(v11, v8);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_33:
    swift_once();
    goto LABEL_6;
  }
  v53 = v13;
  v54 = v15;
  if (v12 == 1)
  {
    swift_bridgeObjectRelease();
    LODWORD(v13) = 0;
  }
  else
  {
    v19 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    LODWORD(v13) = (v19 & 1) == 0;
  }
  if (qword_1ED8F1890 != -1)
    goto LABEL_33;
LABEL_6:
  v20 = sub_1CE0B6080();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED8F1870);
  swift_retain_n();
  v21 = sub_1CE0B6068();
  v22 = sub_1CE0B6734();
  if (os_log_type_enabled(v21, (os_log_type_t)v22))
  {
    v47 = v22;
    v48 = v21;
    v51 = v18;
    v52 = v16;
    v49 = a3;
    v23 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v56 = v46;
    *(_DWORD *)v23 = 136447234;
    v50 = v13;
    v24 = sub_1CE0B4CF4();
    v55 = sub_1CDFC7270(v24, v25, &v56);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    if (v53)
      v26 = 0x616C696176616E75;
    else
      v26 = 0x6C62616C69617661;
    if (v53)
      v27 = 0xEB00000000656C62;
    else
      v27 = 0xE900000000000065;
    v55 = sub_1CDFC7270(v26, v27, &v56);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 22) = 2082;
    v28 = 0x6168636165726E75;
    if (v12 == 1)
    {
      v28 = 0x6C62616863616572;
      v29 = 0xE900000000000065;
    }
    else
    {
      v29 = 0xEB00000000656C62;
    }
    if (v12)
      v30 = v28;
    else
      v30 = 0x65526E6F69746361;
    if (v12)
      v31 = v29;
    else
      v31 = 0xEE00646572697571;
    v55 = sub_1CDFC7270(v30, v31, &v56);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 32) = 1026;
    v13 = *(_QWORD *)(v4 + 32);
    v32 = *(void **)(v13 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
    *v11 = v32;
    v52(v11, v54, v8);
    v33 = v32;
    LOBYTE(v32) = sub_1CE0B6194();
    v51(v11, v8);
    if ((v32 & 1) == 0)
    {
      __break(1u);
      return;
    }
    v34 = *(unsigned __int8 *)(*(_QWORD *)(v13 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_wifiObserver)
                             + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled);
    swift_release();
    LODWORD(v55) = v34;
    sub_1CE0B68F0();
    swift_release();
    *(_WORD *)(v23 + 38) = 1026;
    LODWORD(v55) = v49 & 1;
    sub_1CE0B68F0();
    v35 = v48;
    _os_log_impl(&dword_1CDFAA000, v48, (os_log_type_t)v47, "Cached network conditions updated\nNetwork conditions:%{public}s\nInterface availability: %{public}s\nNetwork status: %{public}s\nWi-Fi enabled: %{BOOL,public}d\nCellular availability:%{BOOL,public}d", (uint8_t *)v23, 0x2Cu);
    v36 = v46;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v36, -1, -1);
    MEMORY[0x1D17C092C](v23, -1, -1);

    LOBYTE(v13) = v50;
  }
  else
  {

    swift_release_n();
  }
  v37 = *(_QWORD *)(v4 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v37 + 16));
  if (*(unsigned __int8 *)(v4 + 64) <= 1u)
  {
    v38 = sub_1CE0B4D00();
    v40 = v39;
    if (v38 == sub_1CE0B4D00() && v40 == v41)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v42 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0)
      {
        v43 = *(_QWORD *)(v4 + 24);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v43 + 8))(ObjectType, &type metadata for NetworkConditionsChanged, &protocol witness table for NetworkConditionsChanged, ObjectType, v43);
      }
    }
  }
  *(_BYTE *)(v4 + 64) = v13;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
}

uint64_t sub_1CDFC466C(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F1890 != -1)
    swift_once();
  v9 = sub_1CE0B6080();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1870);
  v10 = sub_1CE0B6068();
  v11 = sub_1CE0B6734();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1CDFAA000, v10, v11, a1, v12, 2u);
    MEMORY[0x1D17C092C](v12, -1, -1);
  }

  sub_1CDFC4800((uint64_t)v8);
  v13 = (void (*)(uint64_t, uint64_t))sub_1CE0B5C54();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v14 + 24) = 0;
  v13(a3, v14);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1CDFC4800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)@<X0>(unsigned __int8 *@<X0>, uint64_t@<X8>);
  _QWORD v20[2];

  v2 = v1;
  v20[1] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61960);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v20 - v8;
  v10 = sub_1CE0B617C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v2 + 48);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v15 = v14;
  LOBYTE(v14) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    NetworkMonitor.queryCurrentNetwork()((uint64_t)v9);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    v17 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v18 + v17, v7, v3);
    v19 = (uint64_t (**)@<X0>(unsigned __int8 *@<X0>, uint64_t@<X8>))(v18
                                                                             + ((v5 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v19 = sub_1CDFC37BC;
    v19[1] = (uint64_t (*)@<X0>(unsigned __int8 *@<X0>, uint64_t@<X8>))v2;
    swift_retain();
    sub_1CE0B5C00();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t NetworkMonitor.queryCurrentNetwork()@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (**v21)(void *);
  char *v22;
  _QWORD v23[2];

  v2 = v1;
  v23[1] = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61960);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v23 - v8;
  v10 = sub_1CE0B617C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)&v2[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v15 = v14;
  LOBYTE(v14) = sub_1CE0B6194();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) != 0)
  {
    sub_1CDFC32AC((uint64_t)v9);
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v2;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_1CE05E2A4;
    *(_QWORD *)(v18 + 24) = v17;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    v19 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v20 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v19, v7, v3);
    v21 = (uint64_t (**)(void *))(v20 + ((v5 + v19 + 7) & 0xFFFFFFFFFFFFFFF8));
    *v21 = sub_1CE05E2C4;
    v21[1] = (uint64_t (*)(void *))v18;
    v22 = v2;
    sub_1CE0B5C00();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EventHub.subscribe<A>(_:subscriptionToken:handler:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a2;
  v12[5] = a3;
  swift_retain();
  EventHub.subscribe<A>(_:subscriptionToken:handler:)(a1, (uint64_t)sub_1CDFC6074, (uint64_t)v12, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1CDFC4C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29[5];

  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v8 = *(_QWORD *)(v3 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  swift_beginAccess();
  v9 = *(_QWORD *)(v3 + 80);
  if (*(_QWORD *)(v9 + 16) && (v10 = sub_1CDFC55EC(v7), (v11 & 1) != 0))
  {
    v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = MEMORY[0x1E0DEE9D8];
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = v12 + 32;
    v15 = &unk_1ED8F1000;
    v27 = a1;
    do
    {
      sub_1CDFAC5C8(v14, (uint64_t)v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EFCB8);
      type metadata accessor for Subscription(0, a2, a3, v16);
      if (swift_dynamicCast())
      {
        v28(a1);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v15[274] != -1)
          swift_once();
        v17 = sub_1CE0B6080();
        __swift_project_value_buffer(v17, (uint64_t)qword_1ED8F1870);
        v18 = sub_1CE0B6068();
        v19 = sub_1CE0B671C();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          v21 = swift_slowAlloc();
          v29[0] = v21;
          *(_DWORD *)v20 = 136446210;
          v22 = sub_1CE0B6254();
          *(_QWORD *)(v20 + 4) = sub_1CDFC7270(v22, v23, v29);
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CDFAA000, v18, v19, "Invalid subscription for event: %{public}s", (uint8_t *)v20, 0xCu);
          swift_arrayDestroy();
          v24 = v21;
          v15 = (_QWORD *)&unk_1ED8F1000;
          MEMORY[0x1D17C092C](v24, -1, -1);
          v25 = v20;
          a1 = v27;
          MEMORY[0x1D17C092C](v25, -1, -1);
        }

      }
      v14 += 40;
      --v13;
    }
    while (v13);
  }
  return swift_bridgeObjectRelease();
}

uint64_t SubscriptionToken.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      if (MEMORY[0x1D17C09E0](v0 + 16))
      {
        v4 = *(_QWORD *)(v0 + 24);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(v3, ObjectType, v4);
        swift_unknownObjectRelease();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1CDFC5D94(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void EventHub.unsubscribe(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
  v7 = *(_QWORD *)(v2 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1CDFC50AC(v2, v6, (uint64_t)a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
}

uint64_t sub_1CDFC50AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v14[4];
  uint64_t v15;

  v6 = (uint64_t *)(a1 + 80);
  v7 = swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 80);
  if (*(_QWORD *)(v8 + 16) && (v7 = sub_1CDFC55EC(a2), (v9 & 1) != 0))
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v7);
    v7 = swift_bridgeObjectRetain();
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v7);
  v14[2] = a3;
  v11 = sub_1CDFC590C((uint64_t)sub_1CDFC5A90, (uint64_t)v14, v10);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v6;
  *v6 = 0x8000000000000000;
  sub_1CDFC54B4(v11, a2, isUniquelyReferenced_nonNull_native);
  *v6 = v15;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

double EventHub.subscribe<A>(_:subscriptionToken:handler:)@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  __int128 v19;
  _OWORD v20[2];
  uint64_t v21;

  v7 = v6;
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
  swift_retain();
  Subscription.init(handler:)(a2, a3, a4, a5, (uint64_t *)v20);
  v15 = *(_QWORD *)(v7 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v15 + 16));
  sub_1CDFC52DC(v7, v14, (uint64_t)v20, a1, a4, a5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v15 + 16));
  a6[3] = type metadata accessor for Subscription(0, a4, a5, v16);
  a6[4] = (uint64_t)&protocol witness table for Subscription<A>;
  v17 = swift_allocObject();
  *a6 = v17;
  result = *(double *)v20;
  v19 = v20[1];
  *(_OWORD *)(v17 + 16) = v20[0];
  *(_OWORD *)(v17 + 32) = v19;
  *(_QWORD *)(v17 + 48) = v21;
  return result;
}

uint64_t sub_1CDFC52DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char isUniquelyReferenced_nonNull_native;
  __int128 v21;
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v11 = (uint64_t *)(a1 + 80);
  swift_beginAccess();
  v12 = *(_QWORD *)(a1 + 80);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_1CDFC55EC(a2), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9D8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0060);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CE0BB0F0;
  *(_QWORD *)(inited + 56) = type metadata accessor for Subscription(0, a5, a6, v17);
  *(_QWORD *)(inited + 64) = &protocol witness table for Subscription<A>;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v18;
  v19 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v18 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v18 + 32) = v19;
  *(_QWORD *)(v18 + 48) = *(_QWORD *)(a3 + 32);
  *(_QWORD *)&v24[0] = v15;
  sub_1CDFC5868(a3);
  sub_1CDFC60FC(inited);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v11;
  *v11 = 0x8000000000000000;
  sub_1CDFC54B4(v15, a2, isUniquelyReferenced_nonNull_native);
  *v11 = v23;
  swift_bridgeObjectRelease();
  swift_endAccess();
  v21 = *(_OWORD *)(a3 + 16);
  v24[0] = *(_OWORD *)a3;
  v24[1] = v21;
  v25 = *(_QWORD *)(a3 + 32);
  return sub_1CDFC56B8((uint64_t *)v24, a5, a6);
}

uint64_t sub_1CDFC54B4(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1CDFC55EC(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1CDFE7EFC();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1CDFC5DC0(result, a3 & 1);
  result = sub_1CDFC55EC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

unint64_t sub_1CDFC55EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B6D28();
  return sub_1CDFC561C(a1, v2);
}

unint64_t sub_1CDFC561C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1CDFC56B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a1;
  v17 = *(_OWORD *)(a1 + 1);
  v8 = a1[3];
  v7 = a1[4];
  v9 = (_QWORD *)(v3 + 32);
  swift_beginAccess();
  v10 = *(_QWORD **)(v3 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 32) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1CDFC6264(0, v10[2] + 1, 1, v10);
    *v9 = v10;
  }
  v14 = v10[2];
  v13 = v10[3];
  if (v14 >= v13 >> 1)
    *v9 = sub_1CDFC6264((_QWORD *)(v13 > 1), v14 + 1, 1, v10);
  v18 = v6;
  v19 = v17;
  v20 = v8;
  v21 = v7;
  v15 = type metadata accessor for Subscription(0, a2, a3, v12);
  sub_1CDFC57F0(v14, (uint64_t)&v18, (uint64_t *)(v3 + 32), v15, (uint64_t)&protocol witness table for Subscription<A>);
  return swift_endAccess();
}

uint64_t type metadata accessor for Subscription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Subscription);
}

uint64_t sub_1CDFC57F0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1CDFC3290(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1CDFC5868(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t Subscription.init(handler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = sub_1CE0B629C();
  v12 = v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  *a5 = v10;
  a5[1] = v12;
  a5[2] = result;
  a5[3] = a1;
  a5[4] = a2;
  return result;
}

uint64_t sub_1CDFC590C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(__int128 *);
  uint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(__int128 *);
  __int128 v15[2];
  __int128 v16[2];
  unint64_t v17;

  v5 = MEMORY[0x1E0DEE9D8];
  v17 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(__int128 *))result;
    v5 = 0;
    v8 = a3 + 32;
    v9 = MEMORY[0x1E0DEE9D8];
    v13 = *(_QWORD *)(a3 + 16);
    v14 = (uint64_t (*)(__int128 *))result;
    while (v5 < *(_QWORD *)(a3 + 16))
    {
      sub_1CDFAC5C8(v8, (uint64_t)v16);
      v10 = v7(v16);
      if (v3)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if ((v10 & 1) != 0)
      {
        sub_1CDFC3290(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1CDFC5BD8(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v17;
        v12 = *(_QWORD *)(v17 + 16);
        v11 = *(_QWORD *)(v17 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1CDFC5BD8(v11 > 1, v12 + 1, 1);
          v9 = v17;
        }
        *(_QWORD *)(v9 + 16) = v12 + 1;
        result = sub_1CDFC3290(v15, v9 + 40 * v12 + 32);
        v6 = v13;
        v7 = v14;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
      }
      ++v5;
      v8 += 40;
      if (v6 == v5)
      {
        v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_1CDFC5A90(_QWORD *a1)
{
  uint64_t v1;

  return sub_1CDFC5AAC(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_1CDFC5AAC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  char v13;

  v3 = a2[3];
  v4 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7 = v6;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  if (v5 == (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9) && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
    v13 = 0;
  }
  else
  {
    v12 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = v12 ^ 1;
  }
  return v13 & 1;
}

uint64_t sub_1CDFC5B90()
{
  uint64_t v0;

  v0 = sub_1CDFC5BC4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1CDFC5BC4()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Subscription.objectIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1CDFC5BD8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFC5BF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFC5BF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0060);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EFCB8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CDFC5D94(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1CDFC5DB8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1CDFC5DC0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EF720);
  result = sub_1CE0B6B48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1CE0B6D28();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CDFC6074()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1CDFC6094@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1CDFC60FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1CDFC6264(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EFCB8);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

_QWORD *sub_1CDFC6264(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0060);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CDFC6384(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CDFC6384(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EFCB8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_29Tm()
{
  _QWORD *v0;
  unint64_t v1;

  if (v0[2])
    swift_release();
  swift_release();
  swift_release();
  v1 = v0[9];
  if (v1 >> 60 != 15)
    sub_1CDFC666C(v0[8], v1);
  return swift_deallocObject();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17C0830]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D17C07D0](a1, v6, a5);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17C083C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1CDFC666C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1CDFC66B8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v11;
  char v13;

  v13 = *a1;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a6;
  v11[5] = a2;
  v11[6] = a3;
  swift_retain();
  sub_1CDFC6750(&v13, (uint64_t)sub_1CE0B19A4, (uint64_t)v11);
  return swift_release();
}

void sub_1CDFC6750(char *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[2];

  v6 = *a1;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v8 = sub_1CE0B6068();
  v9 = sub_1CE0B6734();
  if (os_log_type_enabled(v8, v9))
  {
    v19 = a3;
    v10 = swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20[0] = v11;
    *(_DWORD *)v10 = 136446466;
    v13 = v3[4];
    v12 = v3[5];
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v13, v12, v20);
    sub_1CE0B68F0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2082;
    v14 = sub_1CDFC6E98();
    v15 = MEMORY[0x1D17BF33C](&type metadata for TransportEvent, v14);
    sub_1CDFC7270(v15, v16, v20);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v8, v9, "Registering event handler (%{public}s): %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v11, -1, -1);
    v17 = v10;
    a3 = v19;
    MEMORY[0x1D17C092C](v17, -1, -1);

  }
  else
  {

    swift_release();
  }
  v18 = v3[3];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  sub_1CDFC6980(v3, v6, a2, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
}

uint64_t sub_1CDFC6980(_QWORD *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  char v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  os_log_type_t type;
  uint64_t v23;
  uint64_t v24[3];
  uint64_t v25;

  v8 = a1 + 7;
  swift_beginAccess();
  if (*(_QWORD *)(a1[7] + 16))
  {
    sub_1CDFC6D80(a2);
    if ((v9 & 1) != 0)
    {
      if (qword_1ED8F1890 != -1)
        swift_once();
      v10 = sub_1CE0B6080();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED8F1870);
      swift_retain();
      v11 = sub_1CE0B6068();
      v12 = sub_1CE0B671C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v23 = swift_slowAlloc();
        v24[0] = v23;
        *(_DWORD *)v13 = 136315394;
        type = v12;
        v14 = a1[4];
        v15 = a1[5];
        swift_bridgeObjectRetain();
        v25 = sub_1CDFC7270(v14, v15, v24);
        sub_1CE0B68F0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2082;
        LOBYTE(v25) = a2;
        v16 = sub_1CDFC6E98();
        v17 = MEMORY[0x1D17BF33C](&type metadata for TransportEvent, v16);
        v25 = sub_1CDFC7270(v17, v18, v24);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CDFAA000, v11, type, "Overwriting existing handler (%s): %{public}s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v23, -1, -1);
        MEMORY[0x1D17C092C](v13, -1, -1);

      }
      else
      {

        swift_release();
      }
    }
  }
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = a4;
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v8;
  *v8 = 0x8000000000000000;
  sub_1CDFC6C44((uint64_t)sub_1CDFCCB64, v19, a2, isUniquelyReferenced_nonNull_native);
  *v8 = v25;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1CDFC6C44(uint64_t a1, uint64_t a2, char a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1CDFC6D80(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1CDFE8428();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_BYTE *)(v18[6] + v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1CDFC7910(result, a4 & 1);
  result = sub_1CDFC6D80(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

unint64_t sub_1CDFC6D80(char a1)
{
  uint64_t v2;

  sub_1CE0B6D34();
  sub_1CE0B6D40();
  v2 = sub_1CE0B6D64();
  return sub_1CDFC6DE4(a1, v2);
}

unint64_t sub_1CDFC6DE4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = qword_1CE0B88B0[a1];
    v8 = *(_QWORD *)(v2 + 48);
    if (qword_1CE0B88B0[*(char *)(v8 + result)] != v7)
    {
      v9 = ~v5;
      for (result = (result + 1) & v9;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v9)
      {
        if (qword_1CE0B88B0[*(char *)(v8 + result)] == v7)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1CDFC6E98()
{
  unint64_t result;

  result = qword_1ED8F16A8;
  if (!qword_1ED8F16A8)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for TransportEvent, &type metadata for TransportEvent);
    atomic_store(result, (unint64_t *)&qword_1ED8F16A8);
  }
  return result;
}

Swift::Void __swiftcall Logger.trace(file:function:)(Swift::String file, Swift::String function)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  _opaque_pthread_t *v33;
  Swift::String v34;

  object = function._object;
  countAndFlagsBits = function._countAndFlagsBits;
  v4 = file._object;
  v5 = file._countAndFlagsBits;
  v34 = file;
  sub_1CDFC7620();
  v6 = sub_1CE0B6908();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + 16 * v7;
    v5 = *(_QWORD *)(v8 + 16);
    v4 = *(void **)(v8 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
  }
  sub_1CDFC7534(46, 0xE100000000000000, v5, (unint64_t)v4);
  v9 = sub_1CE0B6374();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x1D17BF624](v9, v11, v13, v15);
  v18 = v17;
  swift_bridgeObjectRelease();
  sub_1CDFC7534(40, 0xE100000000000000, countAndFlagsBits, (unint64_t)object);
  swift_bridgeObjectRetain();
  v19 = sub_1CE0B6374();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease();
  v26 = MEMORY[0x1D17BF624](v19, v21, v23, v25);
  v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = sub_1CE0B6068();
  v30 = sub_1CE0B6734();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v34._countAndFlagsBits = v32;
    *(_DWORD *)v31 = 67109634;
    v33 = pthread_self();
    pthread_mach_thread_np(v33);
    sub_1CE0B68F0();
    *(_WORD *)(v31 + 8) = 2082;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v16, v18, &v34._countAndFlagsBits);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 18) = 2082;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v26, v28, &v34._countAndFlagsBits);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CDFAA000, v29, v30, "[%u] %{public}s::%{public}s", (uint8_t *)v31, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v32, -1, -1);
    MEMORY[0x1D17C092C](v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

}

uint64_t sub_1CDFC7270(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1CDFC7340(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1CDFC74F8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1CDFC74F8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1CDFC7340(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1CE0B68FC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1CDFC7664(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1CE0B6A64();
  if (!v8)
  {
    sub_1CE0B6ADC();
    __break(1u);
LABEL_17:
    result = sub_1CE0B6B60();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1CDFC74F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1CDFC7534(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;

  v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v4 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v4)
    return 0;
  v7 = 4 * v4;
  v8 = 15;
  while (sub_1CE0B635C() != a1 || v9 != a2)
  {
    v10 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      return v8;
    v8 = sub_1CE0B62E4();
    if (v7 == v8 >> 14)
      return 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1CDFC7620()
{
  unint64_t result;

  result = qword_1ED8F1578;
  if (!qword_1ED8F1578)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED8F1578);
  }
  return result;
}

uint64_t sub_1CDFC7664(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1CDFC76F8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1CDFD1590(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1CDFD1590(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1CDFC76F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1CDFC786C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1CE0B6A10();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1CE0B6ADC();
      __break(1u);
LABEL_10:
      v2 = sub_1CE0B6308();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1CE0B6B60();
    __break(1u);
LABEL_14:
    result = sub_1CE0B6ADC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1CDFC786C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F10B0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1CDFC7910(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F15A0);
  result = sub_1CE0B6B48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_1CE0B6D34();
      sub_1CE0B6D40();
      result = sub_1CE0B6D64();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_2()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF730);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_45Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1CDFC83A0(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_1CDFC666C((uint64_t)a1, a2);
}

char *sub_1CDFC83AC(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0068);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1CDFC84A4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1CDFC84A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1CE0B6B60();
  __break(1u);
  return result;
}

unint64_t sub_1CDFC8588()
{
  unint64_t result;

  result = qword_1EFA5D9F8;
  if (!qword_1EFA5D9F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFA5D9F8);
  }
  return result;
}

unint64_t sub_1CDFC85C4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5F698;
  if (!qword_1EFA5F698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F688);
    v2 = sub_1CDFB1900(&qword_1EFA5F6A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D963C0], MEMORY[0x1E0D963B8]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5F698);
  }
  return result;
}

unint64_t sub_1CDFC8640()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA64878;
  if (!qword_1EFA64878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA64868);
    v2 = sub_1CDFB1900(&qword_1EFA64880, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], MEMORY[0x1E0D91F98]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA64878);
  }
  return result;
}

uint64_t sub_1CDFC86BC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CDFC8720()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA640D8;
  if (!qword_1EFA640D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA640C8);
    v2 = sub_1CDFB1900(&qword_1EFA640E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90190], MEMORY[0x1E0D90188]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA640D8);
  }
  return result;
}

uint64_t sub_1CDFC879C()
{
  return swift_release();
}

unint64_t sub_1CDFC87A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA63240;
  if (!qword_1EFA63240)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA63230);
    v2 = sub_1CDFB1900(&qword_1EFA63248, MEMORY[0x1E0D93608], MEMORY[0x1E0D93600]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA63240);
  }
  return result;
}

unint64_t sub_1CDFC8820()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5E168;
  if (!qword_1EFA5E168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5E158);
    v2 = sub_1CDFB1900(&qword_1EFA5E170, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91A30], MEMORY[0x1E0D91A28]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5E168);
  }
  return result;
}

uint64_t sub_1CDFC889C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3;
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96820], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CDFC88F4(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  v12 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *(_QWORD *)v12 = v6;
  *(_QWORD *)(v12 + 8) = sub_1CDFACD38;
  *(_QWORD *)(v12 + 40) = a5;
  *(_QWORD *)(v12 + 48) = v5;
  *(_QWORD *)(v12 + 24) = a3;
  *(_QWORD *)(v12 + 32) = a4;
  *(_QWORD *)(v12 + 16) = a1;
  *(_WORD *)(v12 + 80) = *a2;
  return swift_task_switch();
}

uint64_t sub_1CDFC8A10()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  __int128 v3;
  _QWORD *v4;

  v1 = *(_WORD *)(v0 + 80);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v2;
  v3 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 48) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *v4 = v0;
  v4[1] = sub_1CDFACDC8;
  return sub_1CE0B6C80();
}

uint64_t XPCClient.sendRequest<A>(_:payload:)@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v29;
  char *v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v35 = a5;
  v36 = a6;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v13 = *(_QWORD *)(v33 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v30 = (char *)&v29 - v16;
  v31 = *a1;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v6;
  *(_BYTE *)(v17 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, a3);
  v18 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = (v11 + v18 + 1) & 0xFFFFFFFFFFFFFFFELL;
  v20 = (char *)swift_allocObject();
  v21 = v34;
  *((_QWORD *)v20 + 2) = a3;
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = v35;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v20[v18], v12, a3);
  *(_WORD *)&v20[v19] = v31;
  *(_QWORD *)&v20[(v19 + 9) & 0xFFFFFFFFFFFFFFF8] = v6;
  v23 = v32;
  v22 = v33;
  v24 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v32, v30, v33);
  v25 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v26 + v25, v23, v22);
  v27 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v26 + ((v14 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v27 = sub_1CE00096C;
  v27[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v20;
  swift_retain();
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v24, v22);
}

uint64_t MachTimer.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFC8D3C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CE0B6080();
  if (v1 <= 0x3F)
  {
    result = sub_1CE0B6020();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1CDFC8DD0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C118);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C118);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC8E88()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C190);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C190);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC8F40()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1F98);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1F98);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC8FF8()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F2070);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F2070);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC90B0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1EA0);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1EA0);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC9164()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C250);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C250);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC9224()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C268);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C268);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC92D0()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F1F38);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1F38);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC9390()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F2028);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F2028);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC9450()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1EFA6C280);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1EFA6C280);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

uint64_t sub_1CDFC9510()
{
  uint64_t v0;
  _QWORD *v1;
  void *v2;
  id v3;

  v0 = type metadata accessor for LogSystem();
  __swift_allocate_value_buffer(v0, qword_1ED8F2040);
  v1 = (_QWORD *)__swift_project_value_buffer(v0, (uint64_t)qword_1ED8F2040);
  sub_1CDFB4180();
  v2 = (void *)sub_1CE0B6884();
  *v1 = v2;
  v3 = v2;
  sub_1CE0B608C();
  return sub_1CE0B6008();
}

void sub_1CDFC95CC()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1CE0B626C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    qword_1ED8F0388 = (uint64_t)v2;
  else
    __break(1u);
}

uint64_t sub_1CDFC9640(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CDFC9650(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

uint64_t sub_1CDFC9650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  uint64_t v20;
  uint64_t v21;

  v21 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CE0B6560();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a5);
  v17 = (*(unsigned __int8 *)(v11 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  *((_QWORD *)v18 + 4) = a5;
  *((_QWORD *)v18 + 5) = a6;
  *((_QWORD *)v18 + 6) = a2;
  *((_QWORD *)v18 + 7) = a3;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v18[v17], (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  *(_QWORD *)&v18[(v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8] = v21;
  swift_retain();
  sub_1CE03AF58((uint64_t)v15, (uint64_t)&unk_1EFA5E7D8, (uint64_t)v18);
  return swift_release();
}

ValueMetadata *type metadata accessor for Network()
{
  return &type metadata for Network;
}

uint64_t sub_1CDFC97CC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63408, &qword_1EFA5D580, (uint64_t)qword_1EFA6C118);
}

uint64_t sub_1CDFC97F0(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63468, &qword_1EFA5D5B0, (uint64_t)qword_1EFA6C190);
}

uint64_t sub_1CDFC9814(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EFFE0, &qword_1ED8F0C78, (uint64_t)qword_1ED8F1F98);
}

uint64_t sub_1CDFC9838(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F1870, &qword_1ED8F16C0, (uint64_t)qword_1ED8F2070);
}

uint64_t sub_1CDFC985C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EF680, qword_1ED8F0C58, (uint64_t)qword_1ED8F1EA0);
}

uint64_t static Log.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(qword_1ED8EF698, (uint64_t)qword_1ED8EF680, a1);
}

uint64_t sub_1CDFC989C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63510, &qword_1EFA5D600, (uint64_t)qword_1EFA6C250);
}

uint64_t static Log.tips.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFC6094(&qword_1EFA5D538, (uint64_t)qword_1EFA63510, a1);
}

uint64_t sub_1CDFC98DC(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63540, &qword_1EFA5D608, (uint64_t)qword_1EFA6C268);
}

uint64_t sub_1CDFC9900(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8EF7C0, qword_1ED8F0C38, (uint64_t)qword_1ED8F1F38);
}

uint64_t sub_1CDFC9924(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F1000, &qword_1ED8F1028, (uint64_t)qword_1ED8F2028);
}

uint64_t sub_1CDFC9948(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1EFA63558, qword_1EFA5D610, (uint64_t)qword_1EFA6C280);
}

uint64_t sub_1CDFC996C(uint64_t a1)
{
  return sub_1CDFB40A0(a1, qword_1ED8F1078, &qword_1ED8F1180, (uint64_t)qword_1ED8F2040);
}

uint64_t sub_1CDFC9990(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_1CE0B6290();
}

ValueMetadata *type metadata accessor for ExponentialBackoffIntervalProvider()
{
  return &type metadata for ExponentialBackoffIntervalProvider;
}

SeymourClient::ExponentialBackoffIntervalProvider __swiftcall ExponentialBackoffIntervalProvider.init(initialBackoffInterval:maxBackoffInterval:factor:)(Swift::Double initialBackoffInterval, Swift::Double_optional maxBackoffInterval, Swift::Double factor)
{
  char v3;
  uint64_t v4;
  SeymourClient::ExponentialBackoffIntervalProvider result;

  *(Swift::Double *)v4 = initialBackoffInterval;
  *(_QWORD *)(v4 + 8) = *(_QWORD *)&maxBackoffInterval.is_nil;
  *(_BYTE *)(v4 + 16) = v3 & 1;
  *(Swift::Double *)(v4 + 24) = maxBackoffInterval.value;
  result.maxBackoffInterval.value = maxBackoffInterval.value;
  result.maxBackoffInterval.is_nil = maxBackoffInterval.is_nil;
  result.factor = factor;
  result.currentBackoffInterval = initialBackoffInterval;
  return result;
}

uint64_t sub_1CDFC99E8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5B28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for RemoteParticipantPasswordRequired()
{
  uint64_t result;

  result = qword_1EFA629F0;
  if (!qword_1EFA629F0)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for RemoteParticipantDiscoveryExpired()
{
  return &type metadata for RemoteParticipantDiscoveryExpired;
}

uint64_t sub_1CDFC9A9C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61D00);
}

void sub_1CDFC9AA8(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1CDFC9AB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B56F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CDFC9B20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4CDC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MultiUserBeginActivityRequested()
{
  uint64_t result;

  result = qword_1EFA5ECB8;
  if (!qword_1EFA5ECB8)
    return swift_getSingletonMetadata();
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterfaceAvailability()
{
  return &type metadata for NetworkInterfaceAvailability;
}

uint64_t sub_1CDFC9BD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4D48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for RemoteParticipantDiscovered()
{
  uint64_t result;

  result = qword_1EFA621C0;
  if (!qword_1EFA621C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFC9C78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4E80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AssetBundleProgressUpdated()
{
  uint64_t result;

  result = qword_1ED8EFCD8;
  if (!qword_1ED8EFCD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MindfulSessionAccumulator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  sub_1CDFC9DE4(v0 + OBJC_IVAR____TtC13SeymourClient25MindfulSessionAccumulator_state);
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFC9D5C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for MindfulSessionAccumulator.State(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1CDFC9DE4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MindfulSessionAccumulator.State(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CDFC9E20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B3DF4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for MindfulSessionAccumulator.State(uint64_t a1)
{
  return sub_1CDFAD020(a1, (uint64_t *)&unk_1EFA64580);
}

uint64_t sub_1CDFC9E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CDFC0960(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFAE028);
}

uint64_t sub_1CDFC9E94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CDFC9ED4(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_1CDFC9EAC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1CDFC9ED4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1CDFC9EFC()
{
  uint64_t v0;

  return sub_1CDFC9F08(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1CDFC9F08(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

ValueMetadata *type metadata accessor for NetworkConditionsChanged()
{
  return &type metadata for NetworkConditionsChanged;
}

ValueMetadata *type metadata accessor for UpNextQueueItemsUpdated()
{
  return &type metadata for UpNextQueueItemsUpdated;
}

uint64_t sub_1CDFCA128()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4BEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ArchivedSessionsUpdated()
{
  return &type metadata for ArchivedSessionsUpdated;
}

uint64_t dispatch thunk of DispatchTimerProviding.cancelTimer(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DispatchTimerProviding.makeTimer(fireAfter:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for RemoteParticipantLost()
{
  uint64_t result;

  result = qword_1EFA604D8;
  if (!qword_1EFA604D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFCA1EC()
{
  swift_getObjectType();
  return sub_1CE0B67DC();
}

uint64_t sub_1CDFCA210(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return DispatchTimerProvider.makeTimer(fireAfter:queue:handler:)(a1, a2, a3, a4);
}

uint64_t AnalyticsEventMonitor.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCA2B0()
{
  uint64_t v0;

  sub_1CE0B60C8();
  sub_1CDFC5D94(v0 + 16);
  sub_1CDFCA364(v0 + 32);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t destroy for ReachabilityObserver.State(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
  {

    return swift_unknownObjectRelease();
  }
  else if (!v1)
  {
    return __swift_destroy_boxed_opaque_existential_1Tm(result);
  }
  return result;
}

uint64_t sub_1CDFCA364(uint64_t a1)
{
  destroy for ReachabilityObserver.State(a1);
  return a1;
}

uint64_t destroy for XPCStreamEventReceived()
{
  return swift_bridgeObjectRelease();
}

_QWORD *initializeBufferWithCopyOfBuffer for XPCStreamEventReceived(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CDFCA3C8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA61BB0);
}

uint64_t BadgingCountsUpdated.seymourTabBadges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BadgingCountsUpdated.appBadgeCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t BadgingCountsUpdated.init(appBadgeCount:seymourTabBadges:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1CDFCA3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_1CE0B5E04();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  if (*(_QWORD *)(v8 + 64) > v6)
    v6 = *(_QWORD *)(v8 + 64);
  if (*(unsigned __int8 *)(a1 + v6) >= 2u)
  {
    if (v6 <= 3)
      v9 = v6;
    else
      v9 = 4;
    __asm { BR              X16 }
  }
  if (*(_BYTE *)(a1 + v6))
  {
    v5 = *(_QWORD *)(v7 - 8);
    v4 = *(_QWORD *)(a2 + 16);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t FitnessModeObserver.__deallocating_deinit()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 36) & 1) == 0)
    objc_msgSend((id)objc_opt_self(), sel_cancelToken_, *(unsigned int *)(v0 + 32));
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCA520()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5E04();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CDFCA588()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B3F44();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for AssetBundleUpdated()
{
  uint64_t result;

  result = qword_1ED8EFBD8;
  if (!qword_1ED8EFBD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFCA62C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4D18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for PlaylistsUpdated()
{
  uint64_t result;

  result = qword_1ED8F09F0;
  if (!qword_1ED8F09F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t NetworkEvaluator.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCA714()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4C70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for BookmarksUpdated()
{
  uint64_t result;

  result = qword_1ED8F0988;
  if (!qword_1ED8F0988)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StorefrontCache.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCA7C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5F18();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransportEvent()
{
  return &type metadata for TransportEvent;
}

unint64_t sub_1CDFCA934()
{
  unint64_t result;

  result = qword_1ED8F1330;
  if (!qword_1ED8F1330)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for TransportEvent, &type metadata for TransportEvent);
    atomic_store(result, (unint64_t *)&qword_1ED8F1330);
  }
  return result;
}

SeymourClient::TransportEvent_optional __swiftcall TransportEvent.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue > 999)
  {
    if (rawValue > 1299)
    {
      if (rawValue <= 1599)
      {
        if (rawValue > 1401)
        {
          if (rawValue == 1402)
          {
            *v1 = 48;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
          if (rawValue == 1500)
          {
            *v1 = 49;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
        }
        else
        {
          if (rawValue == 1300)
          {
            *v1 = 46;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
          if (rawValue == 1401)
          {
            *v1 = 47;
            return (SeymourClient::TransportEvent_optional)rawValue;
          }
        }
        goto LABEL_84;
      }
      if (rawValue > 1601)
      {
        if (rawValue == 1602)
        {
          *v1 = 52;
          return (SeymourClient::TransportEvent_optional)rawValue;
        }
        if (rawValue == 1700)
        {
          *v1 = 53;
          return (SeymourClient::TransportEvent_optional)rawValue;
        }
        goto LABEL_84;
      }
      if (rawValue == 1600)
        *v1 = 50;
      else
        *v1 = 51;
    }
    else
    {
      v2 = 36;
      switch(rawValue)
      {
        case 1100:
          *v1 = 34;
          break;
        case 1101:
          *v1 = 35;
          break;
        case 1102:
          goto LABEL_44;
        case 1103:
          *v1 = 37;
          break;
        case 1104:
          *v1 = 38;
          break;
        case 1105:
          *v1 = 39;
          break;
        case 1106:
          *v1 = 40;
          break;
        case 1107:
        case 1110:
        case 1111:
        case 1112:
        case 1113:
        case 1114:
        case 1115:
        case 1116:
        case 1117:
        case 1118:
        case 1119:
        case 1120:
        case 1121:
        case 1122:
        case 1123:
        case 1124:
        case 1125:
        case 1126:
        case 1127:
        case 1128:
        case 1129:
        case 1130:
        case 1131:
        case 1132:
        case 1133:
        case 1134:
        case 1135:
        case 1136:
        case 1137:
        case 1138:
        case 1139:
        case 1140:
        case 1141:
        case 1142:
        case 1143:
        case 1144:
        case 1145:
        case 1146:
        case 1147:
        case 1148:
        case 1149:
        case 1150:
        case 1151:
        case 1152:
        case 1153:
        case 1154:
        case 1155:
        case 1156:
        case 1157:
        case 1158:
        case 1159:
        case 1160:
        case 1161:
        case 1162:
        case 1163:
        case 1164:
        case 1165:
        case 1166:
        case 1167:
        case 1168:
        case 1169:
        case 1170:
        case 1171:
        case 1172:
        case 1173:
        case 1174:
        case 1175:
        case 1176:
        case 1177:
        case 1178:
        case 1179:
        case 1180:
        case 1181:
        case 1182:
        case 1183:
        case 1184:
        case 1185:
        case 1186:
        case 1187:
        case 1188:
        case 1189:
        case 1190:
        case 1191:
        case 1192:
        case 1193:
        case 1194:
        case 1195:
        case 1196:
        case 1197:
        case 1198:
        case 1199:
          goto LABEL_84;
        case 1108:
          *v1 = 41;
          break;
        case 1109:
          *v1 = 42;
          break;
        case 1200:
          *v1 = 43;
          break;
        case 1201:
          *v1 = 44;
          break;
        case 1202:
          *v1 = 45;
          break;
        default:
          if (rawValue != 1000)
            goto LABEL_84;
          *v1 = 33;
          break;
      }
    }
  }
  else if (rawValue > 700)
  {
    if (rawValue <= 799)
    {
      switch(rawValue)
      {
        case 701:
          *v1 = 17;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 702:
          *v1 = 18;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 703:
          *v1 = 19;
          return (SeymourClient::TransportEvent_optional)rawValue;
      }
      goto LABEL_84;
    }
    switch(rawValue)
    {
      case 800:
        *v1 = 20;
        break;
      case 801:
        *v1 = 21;
        break;
      case 802:
        *v1 = 22;
        break;
      case 803:
        *v1 = 23;
        break;
      case 804:
        *v1 = 24;
        break;
      case 805:
        *v1 = 25;
        break;
      case 806:
        *v1 = 26;
        break;
      case 900:
        *v1 = 27;
        break;
      case 901:
        *v1 = 28;
        break;
      case 902:
        *v1 = 29;
        break;
      case 903:
        *v1 = 30;
        break;
      case 904:
        *v1 = 31;
        break;
      case 905:
        *v1 = 32;
        break;
      default:
        goto LABEL_84;
    }
  }
  else if (rawValue > 399)
  {
    if (rawValue > 499)
    {
      switch(rawValue)
      {
        case 500:
          *v1 = 14;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 600:
          *v1 = 15;
          return (SeymourClient::TransportEvent_optional)rawValue;
        case 601:
          *v1 = 16;
          return (SeymourClient::TransportEvent_optional)rawValue;
      }
      goto LABEL_84;
    }
    switch(rawValue)
    {
      case 400:
        *v1 = 9;
        break;
      case 401:
        *v1 = 10;
        break;
      case 402:
        *v1 = 11;
        break;
      case 403:
        *v1 = 12;
        break;
      case 404:
        *v1 = 13;
        break;
      default:
        goto LABEL_84;
    }
  }
  else if (rawValue > 199)
  {
    switch(rawValue)
    {
      case 300:
        *v1 = 5;
        break;
      case 301:
        *v1 = 6;
        break;
      case 302:
        *v1 = 7;
        break;
      case 303:
        *v1 = 8;
        break;
      default:
        if (rawValue == 200)
        {
          *v1 = 3;
        }
        else
        {
          if (rawValue != 201)
            goto LABEL_84;
          *v1 = 4;
        }
        break;
    }
  }
  else
  {
    if (!rawValue)
    {
      *v1 = 0;
      return (SeymourClient::TransportEvent_optional)rawValue;
    }
    if (rawValue != 100)
    {
      if (rawValue == 101)
      {
        *v1 = 2;
        return (SeymourClient::TransportEvent_optional)rawValue;
      }
LABEL_84:
      *v1 = 54;
      return (SeymourClient::TransportEvent_optional)rawValue;
    }
    v2 = 1;
LABEL_44:
    *v1 = v2;
  }
  return (SeymourClient::TransportEvent_optional)rawValue;
}

uint64_t sub_1CDFCAD7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4604();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ContactService.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCAE88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5E04();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for SessionOrigin()
{
  uint64_t result;

  result = qword_1EFA63F50;
  if (!qword_1EFA63F50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t GatedResource.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED8F1ED8;
  v2 = sub_1CE0B6080();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t GatedResource.__deallocating_deinit()
{
  GatedResource.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCAFB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B6080();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for GatedResource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for GatedResource);
}

uint64_t sub_1CDFCB038()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of UnfairLock.assertAcquired()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

void sub_1CDFCB168()
{
  uint64_t v0;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0 + 16));
}

uint64_t dispatch thunk of TransportClient.broadcastEvent(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t MultiUserClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryAllPlaylists()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryAllBookmarks()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t BookmarkClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCB1E0()
{
  return BookmarkClient.queryAllBookmarks()();
}

uint64_t BookmarkClient.queryAllBookmarks()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63408);
  v2._countAndFlagsBits = 0xD000000000000069;
  v2._object = (void *)0x80000001CE0C9AE0;
  v3._object = (void *)0x80000001CE0C9B50;
  v3._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 42;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F688);
  v8 = sub_1CDFB0260(&qword_1EFA5F690, &qword_1EFA5F688, MEMORY[0x1E0D963A8], MEMORY[0x1E0D963B0]);
  v9 = sub_1CDFC85C4();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t SessionClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTipShelfLockupDescriptors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t CatalogClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCB390()
{
  return CatalogClient.fetchRemoteTipShelfLockupDescriptors()();
}

uint64_t sub_1CDFCB3B0(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int16 v17;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0CC430;
  v8._countAndFlagsBits = 0xD000000000000066;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v17 = a3;
  v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63230);
  v14 = sub_1CDFC889C(&qword_1EFA63238, &qword_1EFA63230, MEMORY[0x1E0D935F8]);
  v15 = sub_1CDFC87A4();
  return v12(&v17, v13, v14, v15, ObjectType, v10);
}

uint64_t CatalogClient.fetchRemoteTipShelfLockupDescriptors()()
{
  return sub_1CDFCB3B0(0xD000000000000026, (void *)0x80000001CE0CC600, 87);
}

uint64_t MetricClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ScoreClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of AssetClientProtocol.queryAllAssetBundles()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t AssetClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCB568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void (*a8)(char *, char *, uint64_t)@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12)
{
  return AssetClient.fetchImageData(remoteURL:priority:pixelWidth:pixelHeight:cropCode:fileType:expirationPolicy:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12 & 1);
}

uint64_t sub_1CDFCB5A4()
{
  return AssetClient.queryAllAssetBundles()();
}

uint64_t sub_1CDFCB5C4(uint64_t a1)
{
  return sub_1CDFCB5CC(a1);
}

uint64_t sub_1CDFCB5CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_1CE0B43E8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v6 + v5, (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  return sub_1CE0B5C0C();
}

uint64_t AssetClient.queryAllAssetBundles()()
{
  return sub_1CDFCB6C8(0xD000000000000016, (void *)0x80000001CE0CE010, 21);
}

uint64_t sub_1CDFCB6C8(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int16 v17;

  if (qword_1ED8EF698[0] != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8EF680);
  v8._object = (void *)0x80000001CE0CDD70;
  v8._countAndFlagsBits = 0xD000000000000063;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v17 = a3;
  v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA640C8);
  v14 = sub_1CDFB0260(&qword_1EFA640D0, &qword_1EFA640C8, MEMORY[0x1E0D90178], MEMORY[0x1E0D90180]);
  v15 = sub_1CDFC8720();
  return v12(&v17, v13, v14, v15, ObjectType, v10);
}

uint64_t AdminClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SyncClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t SiriClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t StreamingKeyDeliveryClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ServiceSubscriptionClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ContentAvailabilityClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1CDFCB8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v15;

  type metadata accessor for ContentAvailabilityClient();
  v15 = (_QWORD *)swift_allocObject();
  return sub_1CDFBB178(a1, a2, v15, a4, a5, a6, a7, a8);
}

uint64_t SessionPreferenceClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of RemoteParticipantClientProtocol.beginDiscoveringParticipantsWithRole(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t RemoteParticipantClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCB9B0(char a1)
{
  return RemoteParticipantClient.beginDiscoveringParticipantsWithRole(_:)(a1);
}

uint64_t RemoteParticipantClient.beginDiscoveringParticipantsWithRole(_:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  char v9;
  __int16 v10;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD00000000000007CLL;
  v4._object = (void *)0x80000001CE0CA820;
  v5._object = (void *)0x80000001CE0CA8F0;
  v5._countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v10 = 206;
  v9 = a1;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16))(&v10, &v9, MEMORY[0x1E0D93598], MEMORY[0x1E0D93580], MEMORY[0x1E0D93588], ObjectType, v6);
}

uint64_t sub_1CDFCBACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(ObjectType, a2, a3, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1CDFCBB6C()
{
  uint64_t v0;

  return sub_1CDFCBACC(v0, (uint64_t)&type metadata for RemoteParticipantDiscoveryExpired, (uint64_t)&protocol witness table for RemoteParticipantDiscoveryExpired);
}

uint64_t RemoteKeyDeliveryClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.fetchNoticePrivacyPreference(ignoreCaches:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t PrivacyPreferenceClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCBBE4(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFB4940(a1, a2, a3, 242, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
}

uint64_t EstimatedCaloriesClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of ArchivedSessionClientProtocol.queryAllResumableSessions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t ArchivedSessionClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCBC5C()
{
  return ArchivedSessionClient.queryAllResumableSessions()();
}

uint64_t ArchivedSessionClient.queryAllResumableSessions()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD000000000000078;
  v2._object = (void *)0x80000001CE0CE560;
  v3._object = (void *)0x80000001CE0CE6C0;
  v3._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 6;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA64868);
  v8 = sub_1CDFB0260(&qword_1EFA64870, &qword_1EFA64868, MEMORY[0x1E0D91F88], MEMORY[0x1E0D91F90]);
  v9 = sub_1CDFC8640();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RemoteBrowsingClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RecommendationClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t ConfigurationClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of WorkoutPlanClientProtocol.queryActiveWorkoutPlan()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t WorkoutPlanClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCBED0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD3C;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t dispatch thunk of UpNextQueueClientProtocol.queryUpNextQueue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t UpNextQueueClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCBF68()
{
  return UpNextQueueClient.queryUpNextQueue()();
}

uint64_t UpNextQueueClient.queryUpNextQueue()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1EFA5D558 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63558);
  v2._countAndFlagsBits = 0xD000000000000070;
  v2._object = (void *)0x80000001CE0C86D0;
  v3._object = (void *)0x80000001CE0C8750;
  v3._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 285;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E158);
  v8 = sub_1CDFC889C(&qword_1EFA5E160, &qword_1EFA5E158, MEMORY[0x1E0D91A20]);
  v9 = sub_1CDFC8820();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t HealthDataClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryWhatsNewSheet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryIntroSheet()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryEngagementBadges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t EngagementClient.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFCC120()
{
  return EngagementClient.queryWhatsNewSheet()();
}

uint64_t sub_1CDFCC140()
{
  return EngagementClient.queryIntroSheet()();
}

uint64_t sub_1CDFCC160()
{
  return EngagementClient.queryEngagementBadges()();
}

uint64_t EngagementClient.queryWhatsNewSheet()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1078);
  v2._countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001CE0CCE30;
  v3._object = (void *)0x80000001CE0CD040;
  v3._countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 126;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B461C();
  return v6(&v9, v7, MEMORY[0x1E0D90FE0], MEMORY[0x1E0D90FE8], ObjectType, v4);
}

uint64_t EngagementClient.queryIntroSheet()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1078);
  v2._countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001CE0CCE30;
  v3._object = (void *)0x80000001CE0CD020;
  v3._countAndFlagsBits = 0xD000000000000011;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 125;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B3EA8();
  return v6(&v9, v7, MEMORY[0x1E0D8FEB0], MEMORY[0x1E0D8FEB8], ObjectType, v4);
}

uint64_t EngagementClient.queryEngagementBadges()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1098 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1078);
  v2._countAndFlagsBits = 0xD00000000000006CLL;
  v2._object = (void *)0x80000001CE0CCE30;
  v3._object = (void *)0x80000001CE0CCF50;
  v3._countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 120;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA63658);
  v8 = sub_1CDFB0260(&qword_1EFA63660, &qword_1EFA63658, MEMORY[0x1E0D91710], MEMORY[0x1E0D91718]);
  v9 = sub_1CDFC86BC(&qword_1EFA63668, &qword_1EFA63658, (uint64_t (*)(void))sub_1CDFCC75C);
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t sub_1CDFCC4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  __int128 v29[2];

  v25 = a4;
  v26 = a5;
  v27 = a3;
  v28 = a7;
  v24 = a1;
  v10 = *(_QWORD *)(a6 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v12);
  sub_1CDFAC5C8(a2, (uint64_t)v29);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(a6 + 16);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v13, (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  v18 = v25;
  *(_QWORD *)(v17 + v14) = v24;
  v19 = (uint64_t *)(v17 + v15);
  v20 = v26;
  *v19 = v18;
  v19[1] = v20;
  sub_1CDFC3290(v29, v17 + v16);
  v21 = v27;
  *(_QWORD *)(v17 + ((v16 + 47) & 0xFFFFFFFFFFFFFFF8)) = v27;
  sub_1CDFB6BE4(v18);
  v22 = v21;
  return sub_1CE0B5C00();
}

uint64_t Promise.retryWithBackoff(maximumAttempts:backoffIntervalProvider:queue:retryCondition:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];

  v25 = a4;
  v26 = a5;
  v24 = a1;
  v27 = a7;
  v11 = *(_QWORD *)(a6 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v13);
  sub_1CDFAC5C8(a2, (uint64_t)v28);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(a6 + 16);
  *(_QWORD *)(v17 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  *(_QWORD *)(v17 + v15) = v24;
  sub_1CDFC3290(v28, v17 + v16);
  v18 = (uint64_t *)(v17 + ((v16 + 47) & 0xFFFFFFFFFFFFFFF8));
  v20 = v25;
  v19 = v26;
  *v18 = v25;
  v18[1] = v19;
  v21 = a3;
  sub_1CDFB6BE4(v20);
  return sub_1CE0B5C00();
}

unint64_t sub_1CDFCC75C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA63670;
  if (!qword_1EFA63670)
  {
    v1 = sub_1CE0B4A30();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D91720], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA63670);
  }
  return result;
}

uint64_t AssetLoadStatus.init<A>(result:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void *v16;
  id v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD v29[10];

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5EFD0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CE0B3E9C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v29 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v12 = sub_1CE0B6DA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (void **)((char *)v29 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v29 - v14, a1, v12);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v22 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v22(a1, v12);
    v22((uint64_t)v15, v12);
    return 5;
  }
  v16 = *v15;
  v29[9] = v16;
  v17 = v16;
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if ((v18 & 1) != 0)
  {
    v19(v4, 0, 1, v5);
    v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v20(v11, v4, v5);
    v20(v9, v11, v5);
    if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v9, v5) == *MEMORY[0x1E0D8FDD8])
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return 4;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    v19(v4, 1, 1, v5);
    sub_1CE00AE7C((uint64_t)v4);
  }
  swift_getErrorValue();
  v23 = sub_1CE0B6CC8();
  v25 = v24;
  if (v23 == sub_1CE0B6278() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v27 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);

      return 6;
    }
  }
  swift_getErrorValue();
  v28 = sub_1CE0B6CBC();

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  if (v28 == -999)
    return 8;
  return 6;
}

unint64_t sub_1CDFCCAF0()
{
  unint64_t result;

  result = qword_1EFA5F818;
  if (!qword_1EFA5F818)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90CF0], MEMORY[0x1E0D90D00]);
    atomic_store(result, (unint64_t *)&qword_1EFA5F818);
  }
  return result;
}

uint64_t sub_1CDFCCB34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v5[1] = a2;
  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  return v3(v5);
}

uint64_t sub_1CDFCCB64(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

Swift::Double __swiftcall ExponentialBackoffIntervalProvider.nextInterval()()
{
  uint64_t v0;
  double v1;
  Swift::Double result;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    v1 = *(double *)v0;
    result = *(double *)v0;
  }
  else
  {
    v1 = *(double *)v0;
    result = *(double *)(v0 + 8);
    if (*(double *)v0 < result)
      result = *(double *)v0;
  }
  *(double *)v0 = v1 * *(double *)(v0 + 24);
  return result;
}

void sub_1CDFCCEA0()
{
  double *v0;

  *v0 = *v0 * v0[3];
}

uint64_t dispatch thunk of BackoffIntervalProviding.nextInterval()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ExponentialBackoffIntervalProvider(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ExponentialBackoffIntervalProvider(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for QualityOfService(uint64_t a1)
{
  sub_1CDFCCFF0(a1, &qword_1EFA5D648);
}

void type metadata accessor for MatchingFlags(uint64_t a1)
{
  sub_1CDFCCFF0(a1, (unint64_t *)&unk_1EFA5D650);
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
  sub_1CDFCCFF0(a1, &qword_1EFA5D6C0);
}

void type metadata accessor for HKFitnessMode(uint64_t a1)
{
  sub_1CDFCCFF0(a1, &qword_1EFA5D6C8);
}

void type metadata accessor for CTCellularDataRestrictedState(uint64_t a1)
{
  sub_1CDFCCFF0(a1, (unint64_t *)&unk_1EFA5D6D0);
}

uint64_t sub_1CDFCCF94(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CDFCCFB4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for os_activity_scope_state_s(uint64_t a1)
{
  sub_1CDFCCFF0(a1, &qword_1ED8F0E58);
}

void sub_1CDFCCFF0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t ScoreMetric.scale(by:)()
{
  uint64_t v0;

  v0 = sub_1CE0B49F4();
  MEMORY[0x1E0C80A78](v0);
  sub_1CE0B4118();
  sub_1CE0B4124();
  sub_1CE0B413C();
  sub_1CE0B4100();
  sub_1CE0B4DCC();
  sub_1CE0B40D0();
  sub_1CE0B4DCC();
  sub_1CE0B40E8();
  sub_1CE0B4DCC();
  sub_1CE0B40F4();
  sub_1CE0B4DCC();
  sub_1CE0B40DC();
  sub_1CE0B4DCC();
  return sub_1CE0B410C();
}

uint64_t UserBodyMassMetric.applyingTimestampOffset(_:)()
{
  sub_1CE0B4DB4();
  return sub_1CE0B4DC0();
}

uint64_t sub_1CDFCD1C0()
{
  sub_1CE0B4DB4();
  return sub_1CE0B4DC0();
}

uint64_t sub_1CDFCD204()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_1CE0B626C();
  v2 = objc_msgSend(v0, sel_stringArrayForKey_, v1);

  if (!v2)
    return sub_1CDFE88CC((uint64_t)&unk_1E8B60910);
  v3 = sub_1CE0B6440();

  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = (uint64_t *)(v3 + 40);
    v6 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      v7 = *(v5 - 1);
      v8 = *v5;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x1D17BD7F4](v7, v8);
      if (v9 != 3)
      {
        v10 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1CE090D8C(0, *((_QWORD *)v6 + 2) + 1, 1, v6);
        v12 = *((_QWORD *)v6 + 2);
        v11 = *((_QWORD *)v6 + 3);
        if (v12 >= v11 >> 1)
          v6 = sub_1CE090D8C((char *)(v11 > 1), v12 + 1, 1, v6);
        *((_QWORD *)v6 + 2) = v12 + 1;
        v6[v12 + 32] = v10;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v14 = sub_1CDFD02B4((uint64_t)v6);
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1CDFCD3CC(uint64_t a1)
{
  id v2;
  void *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v20 = v2;
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCF9BC(0, v4, 0);
    v5 = sub_1CDFD0128(a1);
    v7 = v6;
    v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v7)
        goto LABEL_14;
      v10 = sub_1CE0B4490();
      v12 = v11;
      v14 = *(_QWORD *)(v22 + 16);
      v13 = *(_QWORD *)(v22 + 24);
      if (v14 >= v13 >> 1)
        sub_1CDFCF9BC(v13 > 1, v14 + 1, 1);
      *(_QWORD *)(v22 + 16) = v14 + 1;
      v15 = v22 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v16 = sub_1CDFD01CC(v5, v7, v9 & 1, a1);
      v5 = v16;
      v7 = v17;
      v9 = v18 & 1;
      if (!--v4)
      {
        sub_1CDFCD5BC(v16, v17, v18 & 1);
        v3 = v20;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  else
  {
LABEL_11:
    v19 = (void *)sub_1CE0B6434();
    swift_bridgeObjectRelease();
    v21 = (id)sub_1CE0B626C();
    objc_msgSend(v3, sel_setValue_forKey_, v19, v21);

  }
}

uint64_t sub_1CDFCD5BC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1CDFCD5C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = sub_1CE0B509C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v25 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, v12, MEMORY[0x1E0D932F0]);
  result = sub_1CE0B66A4();
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v26 = result;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_5;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v19)
        goto LABEL_23;
      v23 = *(_QWORD *)(v25 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v19)
          goto LABEL_23;
        v23 = *(_QWORD *)(v25 + 8 * v14);
        if (!v23)
        {
          v14 = v22 + 3;
          if (v22 + 3 >= v19)
            goto LABEL_23;
          v23 = *(_QWORD *)(v25 + 8 * v14);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v18 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v11, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v21, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v11, v2);
    sub_1CE093FF8((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  v24 = v22 + 4;
  if (v24 >= v19)
  {
LABEL_23:
    swift_release();
    return v26;
  }
  v23 = *(_QWORD *)(v25 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v19)
      goto LABEL_23;
    v23 = *(_QWORD *)(v25 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Session.applyingTimestampOffset(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  int64_t v121;
  uint64_t result;
  int64_t v123;
  int v124;
  int v125;
  char v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  int64_t v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  uint64_t v295;
  char *v296;
  char *v297;
  char *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;
  int v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  char v331;
  char v332;
  char v333;
  char v334;
  char v335;
  uint64_t v336;

  v295 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  v3 = MEMORY[0x1E0C80A78](v2);
  v302 = (char *)&v268 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v268 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v268 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v268 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  v14 = MEMORY[0x1E0C80A78](v13);
  v291 = (char *)&v268 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v304 = (uint64_t)&v268 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  v18 = MEMORY[0x1E0C80A78](v17);
  v290 = (char *)&v268 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v303 = (char *)&v268 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  v22 = MEMORY[0x1E0C80A78](v21);
  v289 = (char *)&v268 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v301 = (char *)&v268 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  v26 = MEMORY[0x1E0C80A78](v25);
  v288 = (char *)&v268 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v300 = (char *)&v268 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  v30 = MEMORY[0x1E0C80A78](v29);
  v287 = (char *)&v268 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v268 - v32;
  v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  MEMORY[0x1E0C80A78](v34);
  v298 = (char *)&v268 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  v37 = MEMORY[0x1E0C80A78](v36);
  v286 = (char *)&v268 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v297 = (char *)&v268 - v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D898);
  MEMORY[0x1E0C80A78](v40);
  v275 = (char *)&v268 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  v43 = MEMORY[0x1E0C80A78](v42);
  v285 = (char *)&v268 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v268 - v45;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  v48 = MEMORY[0x1E0C80A78](v47);
  v284 = (char *)&v268 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v320 = (uint64_t)&v268 - v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v51);
  v312 = (uint64_t)&v268 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v53);
  v311 = (uint64_t)&v268 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v55);
  v310 = (uint64_t)&v268 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v57);
  v309 = (uint64_t)&v268 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  v60 = MEMORY[0x1E0C80A78](v59);
  v283 = (char *)&v268 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v63 = (char *)&v268 - v62;
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  v65 = MEMORY[0x1E0C80A78](v64);
  v282 = (char *)&v268 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v65);
  v319 = (uint64_t)&v268 - v67;
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  v69 = MEMORY[0x1E0C80A78](v68);
  v281 = (char *)&v268 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v69);
  v318 = (uint64_t)&v268 - v71;
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  v73 = MEMORY[0x1E0C80A78](v72);
  v280 = (char *)&v268 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v73);
  v317 = (uint64_t)&v268 - v75;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F0);
  MEMORY[0x1E0C80A78](v76);
  v274 = (char *)&v268 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F8);
  MEMORY[0x1E0C80A78](v78);
  v273 = (char *)&v268 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D900);
  MEMORY[0x1E0C80A78](v80);
  v272 = (char *)&v268 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  v83 = MEMORY[0x1E0C80A78](v82);
  v279 = (char *)&v268 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v83);
  v316 = (uint64_t)&v268 - v85;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  v87 = MEMORY[0x1E0C80A78](v86);
  v296 = (char *)&v268 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v87);
  v315 = (uint64_t)&v268 - v89;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  v91 = MEMORY[0x1E0C80A78](v90);
  v278 = (char *)&v268 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v91);
  v314 = (uint64_t)&v268 - v93;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  v95 = MEMORY[0x1E0C80A78](v94);
  v277 = (char *)&v268 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v95);
  v98 = (char *)&v268 - v97;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D928);
  v100 = MEMORY[0x1E0C80A78](v99);
  v271 = (char *)&v268 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v100);
  v270 = (char *)&v268 - v102;
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D930);
  MEMORY[0x1E0C80A78](v103);
  v269 = (char *)&v268 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D938);
  MEMORY[0x1E0C80A78](v105);
  v325 = (char *)&v268 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1CE0B4148();
  v329 = *(_QWORD *)(v107 - 8);
  v330 = v107;
  v108 = MEMORY[0x1E0C80A78](v107);
  v324 = (char *)&v268 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = MEMORY[0x1E0C80A78](v108);
  v323 = (char *)&v268 - v111;
  MEMORY[0x1E0C80A78](v110);
  v328 = (char *)&v268 - v112;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v114 = MEMORY[0x1E0C80A78](v113);
  v276 = (char *)&v268 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v114);
  v313 = (uint64_t)&v268 - v116;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D948);
  MEMORY[0x1E0C80A78](v117);
  v307 = (uint64_t)&v268 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1CE0B5CD8();
  v120 = v33;
  v121 = *(_QWORD *)(v119 + 16);
  v299 = (uint64_t)v120;
  v305 = v1;
  v294 = v6;
  v293 = v12;
  v306 = v46;
  v292 = v10;
  v326 = v63;
  v308 = v98;
  if (v121)
  {
    v336 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCF9D8(0, v121, 0);
    result = sub_1CDFD012C(v119);
    v123 = result;
    v125 = v124;
    v127 = v126 & 1;
    v321 = v119;
    v322 = v119 + 56;
    v128 = v329;
    while ((v123 & 0x8000000000000000) == 0 && v123 < 1 << *(_BYTE *)(v119 + 32))
    {
      if (((*(_QWORD *)(v322 + (((unint64_t)v123 >> 3) & 0xFFFFFFFFFFFFF8)) >> v123) & 1) == 0)
        goto LABEL_73;
      if (*(_DWORD *)(v119 + 36) != v125)
        goto LABEL_74;
      v327 = v127;
      v129 = *(_QWORD *)(v128 + 72);
      v130 = *(_QWORD *)(v119 + 48) + v129 * v123;
      v131 = v323;
      v132 = v330;
      (*(void (**)(char *, int64_t, uint64_t))(v128 + 16))(v323, v130, v330);
      v133 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
      v134 = v324;
      v133(v324, v131, v132);
      sub_1CE0B4118();
      v135 = sub_1CE0B49F4();
      v136 = (uint64_t)v325;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 56))(v325, 1, 1, v135);
      v335 = 1;
      v334 = 1;
      v333 = 1;
      v332 = 1;
      v331 = 1;
      sub_1CE0B4130();
      sub_1CDFB13F8(v136, &qword_1EFA5D938);
      (*(void (**)(char *, uint64_t))(v128 + 8))(v134, v132);
      v137 = v336;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CDFCF9D8(0, *(_QWORD *)(v137 + 16) + 1, 1);
        v137 = v336;
      }
      v139 = *(_QWORD *)(v137 + 16);
      v138 = *(_QWORD *)(v137 + 24);
      v119 = v321;
      if (v139 >= v138 >> 1)
      {
        sub_1CDFCF9D8(v138 > 1, v139 + 1, 1);
        v137 = v336;
      }
      *(_QWORD *)(v137 + 16) = v139 + 1;
      v133((char *)(v137+ ((*(unsigned __int8 *)(v329 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v329 + 80))+ v139 * v129), v328, v330);
      v336 = v137;
      result = sub_1CDFD01D0(v123, v125, v327 & 1, v119);
      v123 = result;
      v125 = v140;
      v127 = v141 & 1;
      --v121;
      v63 = v326;
      if (!v121)
      {
        v330 = v137;
        sub_1CDFCD5BC(result, v140, v127);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v330 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v142 = (uint64_t)v296;
    v143 = sub_1CE0B482C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v307, 1, 1, v143);
    v144 = (uint64_t)v276;
    sub_1CE0B5CE4();
    v145 = sub_1CE0B43B8();
    v146 = *(_QWORD *)(v145 - 8);
    v147 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145);
    v148 = (uint64_t)v278;
    if (v147 == 1)
    {
      sub_1CDFB13F8(v144, &qword_1EFA5D940);
      v149 = 1;
      v150 = v313;
    }
    else
    {
      v151 = sub_1CE0B4B38();
      v152 = (uint64_t)v269;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v151 - 8) + 56))(v269, 1, 1, v151);
      v153 = sub_1CE0B41F0();
      v154 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56);
      v155 = (uint64_t)v270;
      v154(v270, 1, 1, v153);
      v156 = v271;
      v154(v271, 1, 1, v153);
      sub_1CE0B437C();
      v150 = v313;
      sub_1CE0B43AC();
      v157 = (uint64_t)v156;
      v142 = (uint64_t)v296;
      sub_1CDFB13F8(v157, &qword_1EFA5D928);
      sub_1CDFB13F8(v155, &qword_1EFA5D928);
      sub_1CDFB13F8(v152, &qword_1EFA5D930);
      (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v144, v145);
      v149 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 56))(v150, v149, 1, v145);
    v158 = (uint64_t)v277;
    sub_1CE0B5D80();
    v159 = sub_1CE0B5000();
    v160 = *(_QWORD *)(v159 - 8);
    v161 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v160 + 48))(v158, 1, v159);
    v162 = (uint64_t)v308;
    if (v161 == 1)
    {
      sub_1CDFB13F8(v158, &qword_1EFA5D920);
      v163 = 1;
    }
    else
    {
      sub_1CE0B4FE8();
      sub_1CE0B4FF4();
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v158, v159);
      v163 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56))(v162, v163, 1, v159);
    sub_1CE0B5DF8();
    v164 = sub_1CE0B5FA8();
    v165 = *(_QWORD *)(v164 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v165 + 48))(v148, 1, v164) == 1)
    {
      sub_1CDFB13F8(v148, &qword_1EFA5D918);
      v166 = 1;
      v167 = v314;
    }
    else
    {
      sub_1CE0B5F90();
      v167 = v314;
      sub_1CE0B5F9C();
      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v148, v164);
      v166 = 0;
    }
    v168 = v315;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v165 + 56))(v167, v166, 1, v164);
    sub_1CE0B5D20();
    v169 = sub_1CE0B4A24();
    v170 = *(_QWORD *)(v169 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v142, 1, v169) == 1)
    {
      sub_1CDFB13F8(v142, &qword_1EFA5D910);
      v171 = 1;
    }
    else
    {
      sub_1CE0B4A0C();
      sub_1CE0B4A18();
      (*(void (**)(uint64_t, uint64_t))(v170 + 8))(v142, v169);
      v171 = 0;
    }
    v172 = (uint64_t)v282;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v170 + 56))(v168, v171, 1, v169);
    v173 = (uint64_t)v279;
    sub_1CE0B5D68();
    v174 = sub_1CE0B4D84();
    v175 = *(_QWORD *)(v174 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v173, 1, v174) == 1)
    {
      sub_1CDFB13F8(v173, &qword_1EFA5D908);
      v176 = 1;
      v177 = v316;
    }
    else
    {
      v178 = sub_1CE0B53FC();
      v179 = (uint64_t)v272;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(v272, 1, 1, v178);
      v180 = sub_1CE0B5444();
      v181 = (uint64_t)v273;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 56))(v273, 1, 1, v180);
      v182 = sub_1CE0B54F8();
      v183 = (uint64_t)v274;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v182 - 8) + 56))(v274, 1, 1, v182);
      v184 = v173;
      sub_1CE0B4D6C();
      v177 = v316;
      sub_1CE0B4D78();
      sub_1CDFB13F8(v183, &qword_1EFA5D8F0);
      sub_1CDFB13F8(v181, &qword_1EFA5D8F8);
      sub_1CDFB13F8(v179, &qword_1EFA5D900);
      (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v184, v174);
      v176 = 0;
    }
    v185 = v320;
    v187 = v317;
    v186 = v318;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v175 + 56))(v177, v176, 1, v174);
    v188 = (uint64_t)v280;
    sub_1CE0B5CFC();
    v189 = sub_1CE0B4850();
    v190 = *(_QWORD *)(v189 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189) == 1)
    {
      sub_1CDFB13F8(v188, &qword_1EFA5D8E8);
      v191 = 1;
    }
    else
    {
      sub_1CE0B4838();
      sub_1CE0B4844();
      (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v188, v189);
      v191 = 0;
    }
    v192 = (uint64_t)v285;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v190 + 56))(v187, v191, 1, v189);
    v193 = (uint64_t)v281;
    sub_1CE0B5CCC();
    v194 = sub_1CE0B4274();
    v195 = *(_QWORD *)(v194 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194) == 1)
    {
      sub_1CDFB13F8(v193, &qword_1EFA5D8E0);
      v196 = 1;
    }
    else
    {
      sub_1CE0B4250();
      sub_1CE0B4268();
      (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v193, v194);
      v196 = 0;
    }
    v197 = (uint64_t)v290;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v195 + 56))(v186, v196, 1, v194);
    sub_1CE0B5D50();
    v198 = sub_1CE0B4B80();
    v199 = *(_QWORD *)(v198 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v172, 1, v198) == 1)
    {
      sub_1CDFB13F8(v172, &qword_1EFA5D8D8);
      v200 = 1;
      v201 = v319;
    }
    else
    {
      sub_1CE0B4B68();
      v201 = v319;
      sub_1CE0B4B74();
      (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v172, v198);
      v200 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v199 + 56))(v201, v200, 1, v198);
    v202 = (uint64_t)v283;
    sub_1CE0B5D2C();
    v203 = sub_1CE0B4A6C();
    v204 = *(_QWORD *)(v203 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v202, 1, v203) == 1)
    {
      sub_1CDFB13F8(v202, &qword_1EFA5D8D0);
      v205 = 1;
    }
    else
    {
      sub_1CE0B4A54();
      sub_1CE0B4A60();
      (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v202, v203);
      v205 = 0;
    }
    v206 = (uint64_t)v284;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v204 + 56))(v63, v205, 1, v203);
    v207 = sub_1CE0B3ED8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v207 - 8) + 56))(v309, 1, 1, v207);
    v208 = sub_1CE0B5078();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56))(v310, 1, 1, v208);
    v209 = sub_1CE0B4BEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v209 - 8) + 56))(v311, 1, 1, v209);
    v210 = sub_1CE0B56F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v210 - 8) + 56))(v312, 1, 1, v210);
    sub_1CE0B5CB4();
    v211 = sub_1CE0B3F20();
    v212 = *(_QWORD *)(v211 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v212 + 48))(v206, 1, v211) == 1)
    {
      sub_1CDFB13F8(v206, &qword_1EFA5D8A8);
      v213 = 1;
    }
    else
    {
      sub_1CE0B3F08();
      sub_1CE0B3F14();
      (*(void (**)(uint64_t, uint64_t))(v212 + 8))(v206, v211);
      v213 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v212 + 56))(v185, v213, 1, v211);
    sub_1CE0B5DEC();
    v214 = sub_1CE0B5F18();
    v215 = *(_QWORD *)(v214 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v215 + 48))(v192, 1, v214) == 1)
    {
      sub_1CDFB13F8(v192, &qword_1EFA5D8A0);
      v216 = 1;
      v217 = (uint64_t)v291;
      v218 = v297;
      v219 = (uint64_t)v306;
    }
    else
    {
      sub_1CE0B5EF4();
      v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D950);
      v221 = (uint64_t)v275;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v220 - 8) + 56))(v275, 1, 1, v220);
      v219 = (uint64_t)v306;
      sub_1CE0B5F0C();
      sub_1CDFB13F8(v221, &qword_1EFA5D898);
      (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v192, v214);
      v216 = 0;
      v217 = (uint64_t)v291;
      v218 = v297;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v215 + 56))(v219, v216, 1, v214);
    v222 = (uint64_t)v286;
    sub_1CE0B5D08();
    v223 = sub_1CE0B4880();
    v224 = *(_QWORD *)(v223 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223) == 1)
    {
      sub_1CDFB13F8(v222, &qword_1EFA5D890);
      v225 = 1;
    }
    else
    {
      sub_1CE0B4868();
      sub_1CE0B4874();
      (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v222, v223);
      v225 = 0;
    }
    v226 = (uint64_t)v287;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v224 + 56))(v218, v225, 1, v223);
    v227 = sub_1CE0B4A90();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v227 - 8) + 56))(v298, 1, 1, v227);
    sub_1CE0B5DA4();
    v228 = sub_1CE0B5384();
    v229 = *(_QWORD *)(v228 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v229 + 48))(v226, 1, v228) == 1)
    {
      sub_1CDFB13F8(v226, &qword_1EFA5D888);
      v230 = 1;
      v231 = (uint64_t)v294;
      v232 = v299;
    }
    else
    {
      sub_1CE0B536C();
      v232 = v299;
      sub_1CE0B5378();
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v226, v228);
      v230 = 0;
      v231 = (uint64_t)v294;
    }
    v233 = v330;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v229 + 56))(v232, v230, 1, v228);
    v330 = sub_1CDFD03DC(v233, (uint64_t (*)(uint64_t))MEMORY[0x1E0D904E0], &qword_1EFA63C10, MEMORY[0x1E0D904F0], (void (*)(char *, char *))sub_1CE093D9C);
    swift_bridgeObjectRelease();
    v234 = (uint64_t)v288;
    sub_1CE0B5CC0();
    v235 = sub_1CE0B416C();
    v236 = *(_QWORD *)(v235 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235) == 1)
    {
      sub_1CDFB13F8(v234, &qword_1EFA5D880);
      v237 = 1;
      v238 = v300;
    }
    else
    {
      sub_1CE0B4154();
      v238 = v300;
      sub_1CE0B4160();
      (*(void (**)(uint64_t, uint64_t))(v236 + 8))(v234, v235);
      v237 = 0;
    }
    v239 = (uint64_t)v293;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v236 + 56))(v238, v237, 1, v235);
    v240 = (uint64_t)v289;
    sub_1CE0B5D44();
    v241 = sub_1CE0B4AE4();
    v242 = *(_QWORD *)(v241 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v240, 1, v241) == 1)
    {
      sub_1CDFB13F8(v240, &qword_1EFA5D878);
      v243 = 1;
      v244 = v301;
    }
    else
    {
      sub_1CE0B4ACC();
      v244 = v301;
      sub_1CE0B4AD8();
      (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v240, v241);
      v243 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v242 + 56))(v244, v243, 1, v241);
    sub_1CE0B5D14();
    v245 = sub_1CE0B4DD8();
    v246 = *(_QWORD *)(v245 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48))(v197, 1, v245) == 1)
    {
      sub_1CDFB13F8(v197, &qword_1EFA5D870);
      v247 = 1;
      v248 = v303;
    }
    else
    {
      sub_1CE0B4DB4();
      v248 = v303;
      sub_1CE0B4DC0();
      (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v197, v245);
      v247 = 0;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v246 + 56))(v248, v247, 1, v245);
    sub_1CE0B5DBC();
    v249 = sub_1CE0B5480();
    v250 = *(_QWORD *)(v249 - 8);
    v251 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v250 + 48))(v217, 1, v249);
    v252 = v304;
    if (v251 == 1)
    {
      sub_1CDFB13F8(v217, &qword_1EFA5D868);
      v253 = 1;
    }
    else
    {
      sub_1CE0B5468();
      sub_1CE0B5474();
      (*(void (**)(uint64_t, uint64_t))(v250 + 8))(v217, v249);
      v253 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v250 + 56))(v252, v253, 1, v249);
    v254 = (uint64_t)v292;
    sub_1CE0B5DD4();
    v255 = sub_1CE0B5EAC();
    v256 = *(_QWORD *)(v255 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v256 + 48))(v254, 1, v255) == 1)
    {
      sub_1CDFB13F8(v254, &qword_1EFA62FF0);
      v257 = 1;
    }
    else
    {
      sub_1CE0B5E88();
      sub_1CE0B5EA0();
      (*(void (**)(uint64_t, uint64_t))(v256 + 8))(v254, v255);
      v257 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v256 + 56))(v239, v257, 1, v255);
    sub_1CE0B5DB0();
    v258 = (uint64_t)v302;
    v259 = sub_1CE0B53C0();
    v260 = *(_QWORD *)(v259 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v258, 1, v259) == 1)
    {
      sub_1CDFB13F8(v258, &qword_1EFA5D860);
      v261 = 1;
    }
    else
    {
      sub_1CE0B53A8();
      sub_1CE0B53B4();
      (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v258, v259);
      v261 = 0;
    }
    v262 = (uint64_t)v303;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v260 + 56))(v231, v261, 1, v259);
    v263 = (uint64_t)v301;
    v264 = (uint64_t)v300;
    v265 = v299;
    v266 = (uint64_t)v298;
    v267 = (uint64_t)v297;
    sub_1CE0B5DE0();
    swift_bridgeObjectRelease();
    sub_1CDFB13F8(v231, &qword_1EFA5D860);
    sub_1CDFB13F8(v239, &qword_1EFA62FF0);
    sub_1CDFB13F8(v304, &qword_1EFA5D868);
    sub_1CDFB13F8(v262, &qword_1EFA5D870);
    sub_1CDFB13F8(v263, &qword_1EFA5D878);
    sub_1CDFB13F8(v264, &qword_1EFA5D880);
    sub_1CDFB13F8(v265, &qword_1EFA5D888);
    sub_1CDFB13F8(v266, (uint64_t *)&unk_1EFA62FC0);
    sub_1CDFB13F8(v267, &qword_1EFA5D890);
    sub_1CDFB13F8((uint64_t)v306, &qword_1EFA5D8A0);
    sub_1CDFB13F8(v320, &qword_1EFA5D8A8);
    sub_1CDFB13F8(v312, &qword_1EFA5D8B0);
    sub_1CDFB13F8(v311, &qword_1EFA5D8B8);
    sub_1CDFB13F8(v310, &qword_1EFA5D8C0);
    sub_1CDFB13F8(v309, &qword_1EFA5D8C8);
    sub_1CDFB13F8((uint64_t)v326, &qword_1EFA5D8D0);
    sub_1CDFB13F8(v319, &qword_1EFA5D8D8);
    sub_1CDFB13F8(v318, &qword_1EFA5D8E0);
    sub_1CDFB13F8(v317, &qword_1EFA5D8E8);
    sub_1CDFB13F8(v316, &qword_1EFA5D908);
    sub_1CDFB13F8(v315, &qword_1EFA5D910);
    sub_1CDFB13F8(v314, &qword_1EFA5D918);
    sub_1CDFB13F8((uint64_t)v308, &qword_1EFA5D920);
    sub_1CDFB13F8(v313, &qword_1EFA5D940);
    return sub_1CDFB13F8(v307, &qword_1EFA5D948);
  }
  return result;
}

uint64_t sub_1CDFCF9BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CDFCFB18(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CDFCF9D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFCFF48(a1, a2, a3, (_QWORD *)*v3, qword_1EFA5D9A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D904E0]);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFCFA04(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFCFF48(a1, a2, a3, (_QWORD *)*v3, &qword_1EFA5D988, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91A30]);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFCFA30(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CDFCFC94(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CDFCFA4C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1CDFCFDFC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1CDFCFA68(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFCFF48(a1, a2, a3, (_QWORD *)*v3, &qword_1EFA5D978, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFCFA94(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFCFF48(a1, a2, a3, (_QWORD *)*v3, &qword_1EFA5D970, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95028]);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFCFAC0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFCFF48(a1, a2, a3, (_QWORD *)*v3, &qword_1EFA5D968, (uint64_t (*)(_QWORD))MEMORY[0x1E0D907B0]);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFCFAEC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CDFCFF48(a1, a2, a3, (_QWORD *)*v3, &qword_1EFA5D960, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94F68]);
  *v3 = result;
  return result;
}

uint64_t sub_1CDFCFB18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CDFCFC80(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1CDFCFF48(a1, a2, a3, a4, &qword_1EFA5D988, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91A30]);
}

uint64_t sub_1CDFCFC94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D980);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CDFCFDFC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F06C0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CDFCFF48(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t sub_1CDFD012C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1CDFD01D0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CDFD02B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1CDFB3EE4();
  result = sub_1CE0B66A4();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1CDFB3AA8(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1CDFD0324(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1CE0B66A4();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1CDFB4350(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1CDFD03B8(uint64_t a1)
{
  return sub_1CDFD03DC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D956C0], &qword_1EFA63C40, MEMORY[0x1E0D956D0], (void (*)(char *, char *))sub_1CE0959EC);
}

uint64_t sub_1CDFD03DC(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  sub_1CDFB1900(a3, a2, a4);
  result = sub_1CE0B66A4();
  v23 = result;
  if (v17)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = *(_QWORD *)(v11 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v21(v14, v19, v10);
      a5(v16, v14);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_1CDFD0508(uint64_t a1)
{
  return sub_1CDFD03DC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96538], &qword_1EFA5D990, MEMORY[0x1E0D96548], (void (*)(char *, char *))sub_1CE0952D8);
}

uint64_t sub_1CDFD052C(uint64_t a1)
{
  return sub_1CDFD03DC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91FA0], (unint64_t *)&unk_1EFA63CF0, MEMORY[0x1E0D91FB0], (void (*)(char *, char *))sub_1CE094BC4);
}

uint64_t sub_1CDFD0550(uint64_t a1)
{
  return sub_1CDFD03DC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91F50], &qword_1EFA63C70, MEMORY[0x1E0D91F60], (void (*)(char *, char *))sub_1CE094254);
}

uint64_t sub_1CDFD0574(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned int v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1CDFD069C();
  result = sub_1CE0B66A4();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1CE095EA4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1CDFD05E4(uint64_t a1)
{
  return sub_1CDFD03DC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907B0], &qword_1EFA63BB0, MEMORY[0x1E0D907C0], (void (*)(char *, char *))sub_1CE0960BC);
}

uint64_t sub_1CDFD0608(uint64_t a1)
{
  return sub_1CDFD03DC(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94F68], &qword_1EFA5D958, MEMORY[0x1E0D94F78], (void (*)(char *, char *))sub_1CE096318);
}

uint64_t sub_1CDFD062C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  unsigned int *v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1CE0B66A4();
  v7 = result;
  if (v2)
  {
    v4 = (unsigned int *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_1CE096574(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

unint64_t sub_1CDFD069C()
{
  unint64_t result;

  result = qword_1ED8F01F8;
  if (!qword_1ED8F01F8)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90488], MEMORY[0x1E0D90480]);
    atomic_store(result, (unint64_t *)&qword_1ED8F01F8);
  }
  return result;
}

uint64_t DisplayPreferences.applyingTimestampOffset(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D900);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B53FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = sub_1CE0B5444();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = sub_1CE0B54F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_1CE0B4D6C();
  sub_1CE0B4D78();
  sub_1CDFB13F8((uint64_t)v2, &qword_1EFA5D8F0);
  sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5D8F8);
  return sub_1CDFB13F8((uint64_t)v8, &qword_1EFA5D900);
}

uint64_t sub_1CDFD088C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D900);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B53FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = sub_1CE0B5444();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = sub_1CE0B54F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v2, 1, 1, v11);
  sub_1CE0B4D6C();
  sub_1CE0B4D78();
  sub_1CDFB13F8((uint64_t)v2, &qword_1EFA5D8F0);
  sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5D8F8);
  return sub_1CDFB13F8((uint64_t)v8, &qword_1EFA5D900);
}

uint64_t BookmarksUpdated.changeset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t BookmarksUpdated.init(changeset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static BookmarksUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for BookmarksUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for BookmarksUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookmarksUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFD0C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for BookmarksUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFD0C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4C70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t XPCStreamHandler.init(publisher:streams:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;

  result = sub_1CDFC3290(a1, a3);
  *(_QWORD *)(a3 + 40) = a2;
  return result;
}

Swift::Void __swiftcall XPCStreamHandler.activate()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  NSObject *v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];
  _OWORD v25[3];

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v0;
    sub_1CDFB7C20();
    swift_bridgeObjectRetain();
    v4 = (uint64_t *)(v1 + 56);
    do
    {
      v10 = *(v4 - 3);
      v11 = *(v4 - 2);
      v13 = *(v4 - 1);
      v12 = *v4;
      v14 = qword_1ED8F1890;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 != -1)
        swift_once();
      v15 = sub_1CE0B6080();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F1870);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1CE0B6068();
      v17 = sub_1CE0B6734();
      if (os_log_type_enabled(v16, v17))
      {
        v23 = v13;
        v18 = swift_slowAlloc();
        v19 = v3;
        v20 = swift_slowAlloc();
        *(_QWORD *)&v25[0] = v20;
        *(_DWORD *)v18 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v18 + 4) = sub_1CDFC7270(v10, v11, (uint64_t *)v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1CDFAA000, v16, v17, "Registering xpc stream handler: %{public}s", (uint8_t *)v18, 0xCu);
        swift_arrayDestroy();
        v21 = v20;
        v3 = v19;
        MEMORY[0x1D17C092C](v21, -1, -1);
        v22 = v18;
        v13 = v23;
        MEMORY[0x1D17C092C](v22, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v4 += 4;
      v5 = sub_1CE0B6788();
      sub_1CDFD14F4(v3, (uint64_t)v25);
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v10;
      *(_QWORD *)(v6 + 24) = v11;
      *(_QWORD *)(v6 + 32) = v13;
      *(_QWORD *)(v6 + 40) = v12;
      v7 = v25[1];
      *(_OWORD *)(v6 + 48) = v25[0];
      *(_OWORD *)(v6 + 64) = v7;
      *(_OWORD *)(v6 + 80) = v25[2];
      aBlock[4] = sub_1CDFD1580;
      aBlock[5] = v6;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1CDFD14AC;
      aBlock[3] = &block_descriptor;
      v8 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v9 = sub_1CE0B62A8();
      xpc_set_event_stream_handler((const char *)(v9 + 32), v5, v8);
      swift_release();
      _Block_release(v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

void sub_1CDFD0FFC(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL4 v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v35;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED8F1870);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  if (os_log_type_enabled(v11, v12))
  {
    v33 = a5;
    v13 = a2;
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v35 = v15;
    *(_DWORD *)v14 = 136446210;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(v13, a3, &v35);
    a5 = v33;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CDFAA000, v11, v12, "Handling xpc stream event: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v15, -1, -1);
    MEMORY[0x1D17C092C](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x1E0C81298]))
  {
    v16 = sub_1CE0B62FC();
    v18 = v17;
    swift_bridgeObjectRetain_n();
    v19 = sub_1CE0B6068();
    v20 = sub_1CE0B6734();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v35 = v22;
      *(_DWORD *)v21 = 136446210;
      swift_bridgeObjectRetain();
      sub_1CDFC7270(v16, v18, &v35);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CDFAA000, v19, v20, "Publishing stream event: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v22, -1, -1);
      MEMORY[0x1D17C092C](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v23 = a6[3];
    v24 = a6[4];
    __swift_project_boxed_opaque_existential_1(a6, v23);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v24 + 8))(v16, v18, v23, v24);
    swift_bridgeObjectRelease();
  }
  if (a5 && (v25 = sub_1CE0B62A8(), v26 = xpc_dictionary_get_BOOL(a1, (const char *)(v25 + 32)), swift_release(), v26))
  {
    if (xpc_dictionary_create_reply(a1))
    {
      v27 = sub_1CE0B6068();
      v28 = sub_1CE0B6734();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1CDFAA000, v27, v28, "Sending xpc stream reply", v29, 2u);
        MEMORY[0x1D17C092C](v29, -1, -1);
      }

      xpc_dictionary_send_reply();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v30 = sub_1CE0B6068();
    v31 = sub_1CE0B6734();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1CDFAA000, v30, v31, "No reply required", v32, 2u);
      MEMORY[0x1D17C092C](v32, -1, -1);
    }

  }
}

uint64_t sub_1CDFD14AC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1CDFD14F4(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v4;
  (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a2, a1);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1CDFD1544()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 48);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CDFD1580(void *a1)
{
  _QWORD *v1;

  sub_1CDFD0FFC(a1, v1[2], v1[3], v1[4], v1[5], v1 + 6);
}

uint64_t sub_1CDFD1590(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F10B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

uint64_t destroy for XPCStreamHandler(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for XPCStreamHandler(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for XPCStreamHandler(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for XPCStreamHandler(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCStreamHandler(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCStreamHandler(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCStreamHandler()
{
  return &type metadata for XPCStreamHandler;
}

uint64_t NoticePrivacyPreferenceUpdated.preference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5348();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t NoticePrivacyPreferenceUpdated.init(preference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static NoticePrivacyPreferenceUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for NoticePrivacyPreferenceUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5348();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for NoticePrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoticePrivacyPreferenceUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFD1BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NoticePrivacyPreferenceUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFD1C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5348();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NoticePrivacyPreferenceUpdated()
{
  uint64_t result;

  result = qword_1ED8F01B8;
  if (!qword_1ED8F01B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFD1CBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5348();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t EngagementBannerRuleInfo.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  char v8;

  v6 = sub_1CE0B5414();
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    v7 = sub_1CDFD1DAC(a1, a2);
    if ((v8 & 1) != 0)
    {
      sub_1CDFC74F8(*(_QWORD *)(v6 + 56) + 32 * v7, (uint64_t)a3);
    }
    else
    {
      *a3 = 0u;
      a3[1] = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_1CDFD1DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CE0B6D34();
  sub_1CE0B62CC();
  v4 = sub_1CE0B6D64();
  return sub_1CDFD1EA4(a1, a2, v4);
}

unint64_t sub_1CDFD1E10(uint64_t a1)
{
  uint64_t v2;

  sub_1CE0B509C();
  sub_1CDFD21C4((unint64_t *)&unk_1EFA64C70, MEMORY[0x1E0D932F0]);
  v2 = sub_1CE0B6230();
  return sub_1CDFD1F84(a1, v2);
}

unint64_t sub_1CDFD1E74(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B6848();
  return sub_1CDFD20BC(a1, v2);
}

unint64_t sub_1CDFD1EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CE0B6C50() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CE0B6C50() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CDFD1F84(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1CE0B509C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1CDFD21C4(&qword_1EFA63D10, MEMORY[0x1E0D93300]);
      v14 = sub_1CE0B6260();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1CDFD20BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1CDFC8588();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1CE0B6854();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1CE0B6854();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

uint64_t sub_1CDFD21C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CE0B509C();
    result = MEMORY[0x1D17C0848](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

BOOL static MachTimer.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t MachTimer.State.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t MachTimer.State.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

BOOL sub_1CDFD2288(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1CDFD22A0()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t sub_1CDFD22E4()
{
  return sub_1CE0B6D40();
}

uint64_t sub_1CDFD230C()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

double sub_1CDFD234C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  double v3;
  double v4;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = *(double *)(v0 + 16);
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    sub_1CE0B6650();
    v3 = v3 + v4 - *(double *)(v0 + 24);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t MachTimer.__allocating_init(state:)(char *a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;

  v2 = swift_allocObject();
  v3 = *a1;
  *(_QWORD *)(v2 + 16) = 0;
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)(v2 + 32) = v4;
  *(_BYTE *)(v2 + 40) = v3;
  sub_1CE0B6650();
  *(_QWORD *)(v2 + 24) = v6;
  return v2;
}

uint64_t sub_1CDFD2440(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;
  double v4;

  v2 = *a1;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 32) + 16));
  result = sub_1CE0B6650();
  if (*(_BYTE *)(v1 + 40) == 1)
    *(double *)(v1 + 16) = *(double *)(v1 + 16) + v4 - *(double *)(v1 + 24);
  *(double *)(v1 + 24) = v4;
  *(_BYTE *)(v1 + 40) = v2;
  return result;
}

uint64_t sub_1CDFD2490()
{
  return sub_1CDFD24A0(1);
}

uint64_t sub_1CDFD2498()
{
  return sub_1CDFD24A0(0);
}

uint64_t sub_1CDFD24A0(char a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char v6;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  v6 = a1;
  sub_1CDFD2440(&v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t MachTimer.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

unint64_t sub_1CDFD251C()
{
  unint64_t result;

  result = qword_1EFA5DA00;
  if (!qword_1EFA5DA00)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for MachTimer.State, &type metadata for MachTimer.State);
    atomic_store(result, (unint64_t *)&qword_1EFA5DA00);
  }
  return result;
}

uint64_t method lookup function for MachTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MachTimer.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MachTimer.__allocating_init(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of MachTimer.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MachTimer.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t getEnumTagSinglePayload for MachTimer.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MachTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CDFD2674 + 4 * byte_1CE0B8A65[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CDFD26A8 + 4 * byte_1CE0B8A60[v4]))();
}

uint64_t sub_1CDFD26A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CDFD26B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CDFD26B8);
  return result;
}

uint64_t sub_1CDFD26C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CDFD26CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CDFD26D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CDFD26D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t TransportRequest.rawValue.getter()
{
  __int16 *v0;

  return qword_1CE0BA360[*v0];
}

BOOL sub_1CDFD26F8(__int16 *a1, __int16 *a2)
{
  return qword_1CE0BA360[*a1] == qword_1CE0BA360[*a2];
}

unint64_t sub_1CDFD2720()
{
  unint64_t result;

  result = qword_1ED8EFAE8;
  if (!qword_1ED8EFAE8)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for TransportRequest, &type metadata for TransportRequest);
    atomic_store(result, (unint64_t *)&qword_1ED8EFAE8);
  }
  return result;
}

uint64_t sub_1CDFD2764()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

uint64_t sub_1CDFD27B0()
{
  return sub_1CE0B6D40();
}

uint64_t sub_1CDFD27E4()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

SeymourClient::TransportRequest_optional sub_1CDFD282C(Swift::Int *a1)
{
  return TransportRequest.init(rawValue:)(*a1);
}

void sub_1CDFD2834(_QWORD *a1@<X8>)
{
  __int16 *v1;

  *a1 = qword_1CE0BA360[*v1];
}

_WORD *__swift_memcpy2_2(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TransportRequest(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFEB3)
    goto LABEL_17;
  if (a2 + 333 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 333 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 333;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 333;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 333;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14E;
  v8 = v6 - 334;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransportRequest(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;
  uint64_t v5;

  if (a3 + 333 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 333 < 0xFF0000)
    v4 = 1;
  else
    v4 = v3;
  if (a3 >= 0xFEB3)
    v5 = v4;
  else
    v5 = 0;
  if (a2 <= 0xFEB2)
    return ((uint64_t (*)(void))((char *)&loc_1CDFD293C + 4 * byte_1CE0B9D3B[v5]))();
  *a1 = a2 + 333;
  return ((uint64_t (*)(void))((char *)sub_1CDFD2974 + 4 * byte_1CE0B9D36[v5]))();
}

uint64_t sub_1CDFD2974(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1CDFD297C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1CDFD2984);
  return result;
}

uint64_t sub_1CDFD2990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1CDFD2998);
  *(_WORD *)result = a2 + 333;
  return result;
}

uint64_t sub_1CDFD299C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1CDFD29A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1CDFD29B0(unsigned __int16 *a1)
{
  return *a1;
}

_WORD *sub_1CDFD29B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TransportRequest()
{
  return &type metadata for TransportRequest;
}

ValueMetadata *type metadata accessor for BagConstants()
{
  return &type metadata for BagConstants;
}

void sub_1CDFD29E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t Strong;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[6];

  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v10 = (void *)Strong;
    if (a3 >> 60 == 15)
      v11 = 0;
    else
      v11 = (void *)sub_1CE0B3D58();
    v13[4] = a4;
    v13[5] = a5;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1CDFBBCE0;
    v13[3] = &block_descriptor_0;
    v12 = _Block_copy(v13);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_receiveRequest_data_completion_, a1, v11, v12);
    _Block_release(v12);
    swift_release();

  }
}

uint64_t sub_1CDFD2BA4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void static ServiceSubscriptionObserverUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ServiceSubscriptionObserverUpdated()
{
  return &type metadata for ServiceSubscriptionObserverUpdated;
}

void sub_1CDFD2BEC()
{
  qword_1EFA5DB48 = 0;
  unk_1EFA5DB50 = 0;
  byte_1EFA5DB40 = 16;
}

uint64_t HKActivitySummary.activityRings()@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;

  v53 = a1;
  v2 = sub_1CE0B41F0();
  v3 = MEMORY[0x1E0C80A78](v2);
  v52 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = sub_1CE0B4B38();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v50 - v9;
  if (qword_1EFA5D440 != -1)
    swift_once();
  v11 = qword_1EFA5DB48;
  v12 = unk_1EFA5DB50;
  v13 = byte_1EFA5DB40;
  swift_bridgeObjectRetain();
  sub_1CDFD3308(v13, v11, v12);
  v15 = v14;
  swift_bridgeObjectRelease();
  if (v15 && sub_1CE0B4B14() != 2)
  {
    v29 = objc_msgSend(v1, sel_activeEnergyBurned);
    v30 = objc_msgSend(v1, sel_activeEnergyBurned);
    v31 = objc_msgSend(v30, sel__unit);

    objc_msgSend(v29, sel_doubleValueForUnit_, v31);
    v32 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    v33 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    v34 = objc_msgSend(v33, sel__unit);

    objc_msgSend(v32, sel_doubleValueForUnit_, v34);
    sub_1CE0B41E4();
    goto LABEL_10;
  }
  v16 = objc_msgSend(v1, sel_activityMoveMode);
  if (v16 == (id)2)
  {
    v17 = objc_msgSend(v1, sel_appleMoveTime);
    v18 = objc_msgSend(v1, sel_appleMoveTime);
    v19 = objc_msgSend(v18, sel__unit);

    objc_msgSend(v17, sel_doubleValueForUnit_, v19);
    v20 = objc_msgSend(v1, sel_appleMoveTimeGoal);
    v21 = objc_msgSend(v1, sel_appleMoveTimeGoal);
    v22 = objc_msgSend(v21, sel__unit);

    objc_msgSend(v20, sel_doubleValueForUnit_, v22);
    sub_1CE0B41E4();
LABEL_10:
    sub_1CE0B4B20();
    v35 = objc_msgSend(v1, sel_appleExerciseTime);
    v36 = objc_msgSend(v1, sel_appleExerciseTime);
    v37 = objc_msgSend(v36, sel__unit);

    objc_msgSend(v35, sel_doubleValueForUnit_, v37);
    v38 = objc_msgSend(v1, sel_appleExerciseTimeGoal);
    v39 = objc_msgSend(v1, sel_appleExerciseTimeGoal);
    v40 = objc_msgSend(v39, sel__unit);

    objc_msgSend(v38, sel_doubleValueForUnit_, v40);
    v41 = objc_msgSend(v1, sel_appleStandHours);
    v42 = objc_msgSend(v1, sel_appleStandHours);
    v43 = objc_msgSend(v42, sel__unit);

    objc_msgSend(v41, sel_doubleValueForUnit_, v43);
    v44 = objc_msgSend(v1, sel_appleStandHoursGoal);
    v45 = objc_msgSend(v1, sel_appleStandHoursGoal);
    v46 = objc_msgSend(v45, sel__unit);

    objc_msgSend(v44, sel_doubleValueForUnit_, v46);
    objc_msgSend(v1, sel__isStandalonePhoneSummary);
    v48 = v50;
    v47 = v51;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v8, v10, v51);
    sub_1CE0B41E4();
    sub_1CE0B41E4();
    objc_msgSend(v1, sel_paused);
    sub_1CE0B6650();
    sub_1CE0B4394();
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v10, v47);
  }
  if (v16 == (id)1)
  {
    v23 = objc_msgSend(v1, sel_activeEnergyBurned);
    v24 = objc_msgSend(v1, sel_activeEnergyBurned);
    v25 = objc_msgSend(v24, sel__unit);

    objc_msgSend(v23, sel_doubleValueForUnit_, v25);
    v26 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    v27 = objc_msgSend(v1, sel_activeEnergyBurnedGoal);
    v28 = objc_msgSend(v27, sel__unit);

    objc_msgSend(v26, sel_doubleValueForUnit_, v28);
    sub_1CE0B41E4();
    goto LABEL_10;
  }
  result = sub_1CE0B6AE8();
  __break(1u);
  return result;
}

uint64_t sub_1CDFD3308(char a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) == 0)
    goto LABEL_18;
  if (qword_1ED8F0398 != -1)
    swift_once();
  v6 = (void *)qword_1ED8F0388;
  LOBYTE(v22) = a1;
  UserDefaultsKeys.rawValue.getter();
  v7 = (void *)sub_1CE0B626C();
  v8 = objc_msgSend(v6, sel_stringForKey_, v7, v22);

  if (v8)
  {
    v9 = sub_1CE0B6278();
    v11 = v10;
    swift_bridgeObjectRelease();

    if (a3 && (v9 == a2 && v11 == a3 || (sub_1CE0B6C50() & 1) != 0))
    {
      swift_bridgeObjectRelease();
LABEL_18:
      swift_bridgeObjectRetain();
      return a2;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (!a3)
      goto LABEL_18;
    v9 = 0;
  }
  if (qword_1ED8F1890 != -1)
    swift_once();
  v12 = sub_1CE0B6080();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F1870);
  swift_bridgeObjectRetain_n();
  v13 = sub_1CE0B6068();
  v14 = sub_1CE0B6734();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v23 = v16;
    *(_DWORD *)v15 = 136315394;
    v17 = UserDefaultsKeys.rawValue.getter();
    sub_1CDFC7270(v17, v18, &v23);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0030);
    v19 = sub_1CE0B6290();
    sub_1CDFC7270(v19, v20, &v23);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v13, v14, "Non default value set for %s: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v16, -1, -1);
    MEMORY[0x1D17C092C](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v9;
}

uint64_t sub_1CDFD3658(char a1, char a2)
{
  void *v4;
  char v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) != 0)
  {
    if (qword_1ED8F0398 != -1)
      swift_once();
    v4 = (void *)qword_1ED8F0388;
    LOBYTE(v17) = a1;
    UserDefaultsKeys.rawValue.getter();
    v5 = _sSb13SeymourClientE4read4from3keySbSgSo14NSUserDefaultsC_SStFZ_0(v4);
    swift_bridgeObjectRelease();
    if (v5 != 2 && (v5 & 1) != (a2 & 1))
    {
      if (qword_1ED8F1890 != -1)
        swift_once();
      v7 = sub_1CE0B6080();
      __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
      v8 = sub_1CE0B6068();
      v9 = sub_1CE0B6734();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = swift_slowAlloc();
        v11 = swift_slowAlloc();
        v17 = v11;
        *(_DWORD *)v10 = 136315394;
        v12 = UserDefaultsKeys.rawValue.getter();
        sub_1CDFC7270(v12, v13, &v17);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v10 + 12) = 2080;
        v14 = sub_1CE0B6290();
        sub_1CDFC7270(v14, v15, &v17);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CDFAA000, v8, v9, "Non default value set for %s: %s", (uint8_t *)v10, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v11, -1, -1);
        MEMORY[0x1D17C092C](v10, -1, -1);
      }

      a2 = v5;
    }
  }
  return a2 & 1;
}

double sub_1CDFD38F0(char a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;

  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) != 0)
  {
    if (qword_1ED8F0398 != -1)
      swift_once();
    v4 = qword_1ED8F0388;
    LOBYTE(v19) = a1;
    v5 = UserDefaultsKeys.rawValue.getter();
    v7 = COERCE_DOUBLE(sub_1CDFBF778((void *)v4, v5, v6));
    LOBYTE(v4) = v8;
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0 && v7 != a2)
    {
      if (qword_1ED8F1890 != -1)
        swift_once();
      v9 = sub_1CE0B6080();
      __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1870);
      v10 = sub_1CE0B6068();
      v11 = sub_1CE0B6734();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        v13 = swift_slowAlloc();
        v19 = v13;
        *(_DWORD *)v12 = 136315394;
        v14 = UserDefaultsKeys.rawValue.getter();
        sub_1CDFC7270(v14, v15, &v19);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        v16 = sub_1CE0B6290();
        sub_1CDFC7270(v16, v17, &v19);
        sub_1CE0B68F0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CDFAA000, v10, v11, "Non default value set for %s: %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17C092C](v13, -1, -1);
        MEMORY[0x1D17C092C](v12, -1, -1);
      }

      return v7;
    }
  }
  return a2;
}

id NSURLSessionConfiguration.forBundleAttribution(bundleIdentifier:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v4;

  if (a2)
    v2 = (void *)sub_1CE0B626C();
  else
    v2 = 0;
  objc_msgSend(v4, sel_set_sourceApplicationBundleIdentifier_, v2);

  return v4;
}

id NSURLSession.forBundleAttribution(bundleIdentifier:)(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  id v5;
  id v7;

  v3 = v2;
  v7 = v3;
  v5 = objc_msgSend(v3, sel_configuration);
  if (a2)
    a2 = (void *)sub_1CE0B626C();
  objc_msgSend(v5, sel_set_sourceApplicationBundleIdentifier_, a2);

  return v7;
}

uint64_t ScoreSummary.scale(by:)()
{
  sub_1CE0B4358();
  sub_1CE0B4340();
  sub_1CE0B4DCC();
  sub_1CE0B4310();
  sub_1CE0B4DCC();
  sub_1CE0B4328();
  sub_1CE0B4DCC();
  sub_1CE0B4334();
  sub_1CE0B4DCC();
  sub_1CE0B431C();
  sub_1CE0B4DCC();
  return sub_1CE0B434C();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryAudioSelection()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryBurnBarDisplayPreference(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryMetricsDisplayPreference(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.queryProgressDisplayPreference(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateAudioFocusSelection(_:)(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(a3 + 40))(a1 & 1);
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateBurnBarDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateMetricsDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of SessionPreferenceClientProtocol.updateProgressDisplayPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t SubscriptionToken.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 24) = a2;
  *(_QWORD *)(v3 + 32) = v4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t SubscriptionToken.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      if (MEMORY[0x1D17C09E0](v0 + 16))
      {
        v4 = *(_QWORD *)(v0 + 24);
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(v3, ObjectType, v4);
        swift_unknownObjectRelease();
      }
      v3 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 32) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  sub_1CDFC5D94(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CDFD3EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;

  *(_QWORD *)(a2 + 24) = 0;
  swift_unknownObjectWeakInit();
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 24) = a4;
  *(_QWORD *)(a2 + 32) = v6;
  swift_unknownObjectWeakAssign();
  return a2;
}

uint64_t method lookup function for SubscriptionToken()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SubscriptionToken.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of NetworkEvaluating.queryNetworkConditions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t ScoreMetric.applyingTimestampOffset(_:)()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE v5[32];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D938);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v5[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1CE0B4118();
  v3 = sub_1CE0B49F4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5[28] = 1;
  v5[24] = 1;
  v5[20] = 1;
  v5[16] = 1;
  v5[12] = 1;
  sub_1CE0B4130();
  return sub_1CDFD407C((uint64_t)v2);
}

uint64_t sub_1CDFD407C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D938);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CDFD40BC()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  _BYTE v5[32];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D938);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v5[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1CE0B4118();
  v3 = sub_1CE0B49F4();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v5[28] = 1;
  v5[24] = 1;
  v5[20] = 1;
  v5[16] = 1;
  v5[12] = 1;
  sub_1CE0B4130();
  return sub_1CDFD407C((uint64_t)v2);
}

uint64_t dispatch thunk of RecommendationClientProtocol.deduplicateOnboardingSurveyResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.deleteAllOnboardingSurveyResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.evaluateAllRecommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.evaluateRecommendedGuidedAudioWorkouts()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchRemoteForYouCanvas()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchOnboardingDetail()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchPersonalizationInferenceResponse(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.fetchPersonalizationAwardProgressReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.makePersonalizationInferenceRequest(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryAllRecommendations()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryAllOnboardingSurveyResults()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryOnboardingSurveyResult()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.queryRelatedWorkouts(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of RecommendationClientProtocol.updateOnboardingSurveyResult(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

double MediaPlayerPlaybackStarting.expectedElapsedTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

SeymourClient::MediaPlayerPlaybackStarting __swiftcall MediaPlayerPlaybackStarting.init(expectedElapsedTime:)(SeymourClient::MediaPlayerPlaybackStarting expectedElapsedTime)
{
  SeymourClient::MediaPlayerPlaybackStarting *v1;

  v1->expectedElapsedTime = expectedElapsedTime.expectedElapsedTime;
  return expectedElapsedTime;
}

void static MediaPlayerPlaybackStarting.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MediaPlayerPlaybackStarting()
{
  return &type metadata for MediaPlayerPlaybackStarting;
}

uint64_t EnergyMetric.applyingTimestampOffset(_:)()
{
  sub_1CE0B4250();
  return sub_1CE0B4268();
}

uint64_t sub_1CDFD42C4()
{
  sub_1CE0B4250();
  return sub_1CE0B4268();
}

uint64_t dispatch thunk of TimestampTransforming.applyingTimestampOffset(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t SessionTerminated.termination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B416C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t SessionTerminated.init(termination:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static SessionTerminated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for SessionTerminated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B416C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for SessionTerminated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionTerminated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFD4528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SessionTerminated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFD4570(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B416C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SessionTerminated()
{
  uint64_t result;

  result = qword_1EFA5DBB0;
  if (!qword_1EFA5DBB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFD45EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B416C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static Task<>.sleep(seconds:)(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch();
}

void sub_1CDFD466C()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v2;
    *v2 = v0;
    v2[1] = sub_1CDFD4708;
    sub_1CE0B65D8();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1CDFD4708()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t dispatch thunk of AchievementClientProtocol.queryEligibleToPresentAwardToast(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchCurrentStreakNotification()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchProgressUpdates(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchSeymourAchievement(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AchievementClientProtocol.fetchSeymourAchievementProgress(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AchievementClientProtocol.populateAchievementProgressUpdates(forTemplateNames:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AchievementClientProtocol.queryTemplates()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AchievementClientProtocol.queryAchievementEnvironmentCache()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AchievementClientProtocol.runHistoricalEvaluation()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AchievementClientProtocol.journalAchievementNotificationRecord(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of AchievementClientProtocol.deleteAchievementNotificationRecord(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

_QWORD *MetricClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for MetricClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *MetricClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CDFD4ED4(a1, v3, ObjectType, a2, a3);
}

uint64_t MetricClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t MetricClient.recordMetricClickStream(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0000 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EFFE0);
  v4._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001CE0C7B40;
  v5._object = (void *)0x80000001CE0C7BB0;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 140;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4CAC();
  return v8(&v11, a1, v9, MEMORY[0x1E0D92378], MEMORY[0x1E0D92380], ObjectType, v6);
}

uint64_t MetricClient.recordMetricPerformanceStream(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0000 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EFFE0);
  v4._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001CE0C7B40;
  v5._object = (void *)0x80000001CE0C7BD0;
  v5._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 147;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B5330();
  return v8(&v11, a1, v9, MEMORY[0x1E0D94080], MEMORY[0x1E0D94088], ObjectType, v6);
}

uint64_t MetricClient.recordMetricPlayStream(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F0000 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EFFE0);
  v4._countAndFlagsBits = 0xD000000000000065;
  v4._object = (void *)0x80000001CE0C7B40;
  v5._object = (void *)0x80000001CE0C7C00;
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 141;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4BC8();
  return v8(&v11, a1, v9, MEMORY[0x1E0D91E08], MEMORY[0x1E0D91E10], ObjectType, v6);
}

uint64_t MetricClient.flushMetrics()()
{
  return sub_1CDFD4C8C(0x74654D6873756C66, (void *)0xEE00292873636972, 142);
}

uint64_t MetricClient.updateMetricIdentifiers()()
{
  return sub_1CDFD4C8C(0xD000000000000019, (void *)0x80000001CE0C7C60, 145);
}

uint64_t MetricClient.resetMetricIdentifiers()()
{
  return sub_1CDFD4C8C(0xD000000000000018, (void *)0x80000001CE0C7C80, 146);
}

uint64_t sub_1CDFD4C8C(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F0000 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8EFFE0);
  v8._object = (void *)0x80000001CE0C7B40;
  v8._countAndFlagsBits = 0xD000000000000065;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t sub_1CDFD4D5C(uint64_t a1)
{
  return MetricClient.recordMetricClickStream(_:)(a1);
}

uint64_t sub_1CDFD4D7C(uint64_t a1)
{
  return MetricClient.recordMetricPerformanceStream(_:)(a1);
}

uint64_t sub_1CDFD4D9C(uint64_t a1)
{
  return MetricClient.recordMetricPlayStream(_:)(a1);
}

uint64_t sub_1CDFD4DBC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  __int16 v8;

  v1 = *v0;
  if (qword_1ED8F0000 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8EFFE0);
  v3._object = (void *)0x80000001CE0C7B40;
  v3._countAndFlagsBits = 0xD000000000000065;
  v4._countAndFlagsBits = 0x74654D6873756C66;
  v4._object = (void *)0xEE00292873636972;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 142;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1CDFD4E94()
{
  return MetricClient.updateMetricIdentifiers()();
}

uint64_t sub_1CDFD4EB4()
{
  return MetricClient.resetMetricIdentifiers()();
}

_QWORD *sub_1CDFD4ED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for MetricClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for MetricClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MetricClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *RemoteBrowsingClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CDFE0DD0(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t RemoteBrowsingClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFE1018);
}

uint64_t sub_1CDFD506C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;

  v9 = a3(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v15 = a4(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v11, a1, v15);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(v11, v9, a5, ObjectType, v13);
    swift_unknownObjectRelease();
    return sub_1CDFE19F8((uint64_t)v11, a3);
  }
  return result;
}

uint64_t sub_1CDFD5190()
{
  uint64_t result;
  uint64_t v1;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for RemoteBrowsingGuestVerificationCompleted, &protocol witness table for RemoteBrowsingGuestVerificationCompleted, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t RemoteBrowsingClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteBrowsingClient.insertConnectionRecord(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;

  v3 = v2;
  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B596C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v23 = 163;
  v18 = *(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(&v23, v11, v8, MEMORY[0x1E0D95748], MEMORY[0x1E0D95750], ObjectType, v16);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertConnectionRecord", 44, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.queryConnectionRecord()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  __int16 v17;

  v2 = v1;
  v16 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DC90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v10, (uint64_t)v9);
  v11 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v17 = 177;
  v13 = *(void (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 24);
  v14 = sub_1CE0B596C();
  swift_retain();
  v13(&v17, v14, MEMORY[0x1E0D95748], MEMORY[0x1E0D95750], ObjectType, v11);
  sub_1CDFDB748("RemoteBrowsingClient::queryConnectionRecord", 43, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return sub_1CDFE19F8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestEnvironment(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DC98);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 165;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B5690();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], MEMORY[0x1E0D94AB0], MEMORY[0x1E0D94AB8], ObjectType, v16);
  sub_1CDFDBE00("RemoteBrowsingClient::requestEnvironment", 40, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestEnvironmentWithConfirmation(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DC98);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 164;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B5690();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], MEMORY[0x1E0D94AB0], MEMORY[0x1E0D94AB8], ObjectType, v16);
  sub_1CDFDBE00("RemoteBrowsingClient::requestEnvironmentWithConfirmation", 56, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.cancelRemoteBrowsingEnvironmentRequest(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;

  v3 = v2;
  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v23 = 182;
  v18 = *(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(&v23, v11, v8, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], ObjectType, v16);
  sub_1CDFDB0F0("RemoteBrowsingClient::cancelRemoteBrowsingEnvironmentRequest", 60, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestServiceSubscription(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCA0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 167;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B4FB8();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], MEMORY[0x1E0D92DA8], MEMORY[0x1E0D92DB0], ObjectType, v16);
  sub_1CDFDC4B8("RemoteBrowsingClient::requestServiceSubscription", 48, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestGuestAuthentication(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;

  v3 = v2;
  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v23 = 170;
  v18 = *(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(&v23, v11, v8, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], ObjectType, v16);
  sub_1CDFDB0F0("RemoteBrowsingClient::requestGuestAuthentication", 48, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.allowPendingConfirmationRequest()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(__int16 *, uint64_t, uint64_t);
  _BYTE v16[14];
  __int16 v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EFA5D480 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v11, (uint64_t)v10);
  v12 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v17 = 168;
  v14 = *(void (**)(__int16 *, uint64_t, uint64_t))(v12 + 8);
  swift_retain();
  v14(&v17, ObjectType, v12);
  sub_1CDFDB0F0("RemoteBrowsingClient::allowPendingConfirmationRequest", 53, 2, &dword_1CDFAA000, 0, (uint64_t)v7, a1);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return sub_1CDFE19F8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.denyPendingConfirmationRequest()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  void (*v14)(__int16 *, uint64_t, uint64_t);
  _BYTE v16[14];
  __int16 v17;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1EFA5D480 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v11, (uint64_t)v10);
  v12 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v17 = 169;
  v14 = *(void (**)(__int16 *, uint64_t, uint64_t))(v12 + 8);
  swift_retain();
  v14(&v17, ObjectType, v12);
  sub_1CDFDB0F0("RemoteBrowsingClient::denyPendingConfirmationRequest", 52, 2, &dword_1CDFAA000, 0, (uint64_t)v7, a1);
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  swift_release();
  return sub_1CDFE19F8((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.tryPassword(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  void (*v16)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  __int16 v22;

  v4 = v3;
  v19 = a3;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v7 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v13, (uint64_t)v12);
  v14 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v22 = 210;
  v21[0] = a1;
  v21[1] = a2;
  v16 = *(void (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v16(&v22, v21, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v14);
  sub_1CDFDB0F0("RemoteBrowsingClient::tryPassword", 33, 2, &dword_1CDFAA000, 0, (uint64_t)v9, v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v20);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1CDFE19F8((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateAudioFocusSelection(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCA8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 198;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DCB0, &qword_1EFA5DCA8, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DCB8, &qword_1EFA5DCA8, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateAudioFocusSelection", 47, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateBurnBarDisplayPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCC0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 172;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DCC8, &qword_1EFA5DCC0, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DCD0, &qword_1EFA5DCC0, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateBurnBarDisplayPreference", 52, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateMetricsDisplayPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCD8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 173;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DCE0, &qword_1EFA5DCD8, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DCE8, &qword_1EFA5DCD8, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateMetricsDisplayPreference", 52, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateProgressDisplayPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCF0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 176;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DCF8, &qword_1EFA5DCF0, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DD00, &qword_1EFA5DCF0, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateProgressDisplayPreference", 53, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateNoticePrivacyPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD08);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 174;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD10, &qword_1EFA5DD08, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DD18, &qword_1EFA5DD08, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateNoticePrivacyPreference", 51, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateOptInPrivacyPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD20);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 175;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD28, &qword_1EFA5DD20, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DD30, &qword_1EFA5DD20, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateOptInPrivacyPreference", 50, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.queryAllPrivacyAcknowledgements()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;

  v2 = v1;
  v18 = a1;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD38);
  v3 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v9, (uint64_t)v8);
  v10 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v20 = 246;
  v12 = *(void (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  swift_retain();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD40);
  v14 = sub_1CDFE1084();
  v15 = sub_1CDFE10E8();
  v12(&v20, v13, v14, v15, ObjectType, v10);
  sub_1CDFDCB70("RemoteBrowsingClient::queryAllPrivacyAcknowledgements", 53, 2, &dword_1CDFAA000, 0, (uint64_t)v5, v18);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
  swift_release();
  return sub_1CDFE19F8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertPrivacyAcknowledgement(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD60);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 178;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD68, &qword_1EFA5DD60, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DD70, &qword_1EFA5DD60, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertPrivacyAcknowledgement", 50, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertBookmarks(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD78);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 179;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD80, &qword_1EFA5DD78, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DD88, &qword_1EFA5DD78, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertBookmarks", 37, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.removeBookmarks(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD78);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 180;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD80, &qword_1EFA5DD78, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DD88, &qword_1EFA5DD78, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::removeBookmark", 36, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertPlaylist(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD90);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 184;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD98, &qword_1EFA5DD90, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DDA0, &qword_1EFA5DD90, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertPlaylist", 36, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.deletePlaylist(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD90);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 185;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DD98, &qword_1EFA5DD90, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DDA0, &qword_1EFA5DD90, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::deletePlaylist", 36, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertArchivedSession(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DDA8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 183;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DDB0, &qword_1EFA5DDA8, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DDB8, &qword_1EFA5DDA8, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertArchivedSession", 43, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertCatalogTipJournal(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DDC0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 188;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DDC8, &qword_1EFA5DDC0, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DDD0, &qword_1EFA5DDC0, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertCatalogTipJournal", 45, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertCompletedMarketingVideo(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DDD8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 181;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DDE0, &qword_1EFA5DDD8, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DDE8, &qword_1EFA5DDD8, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertCompletedMarketingVideo", 51, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.processUpNextQueueUpdates(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DDF0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 196;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DDF8, &qword_1EFA5DDF0, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DE00, &qword_1EFA5DDF0, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::processUpNextQueueUpdates", 47, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.repeatWorkoutPlan(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void (*v23)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE08);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE10);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v25 = v12;
  v14 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v30 = 313;
  v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 32);
  v16 = sub_1CE0B41D8();
  v24 = v7;
  v17 = sub_1CDFE1194(&qword_1EFA5DE18, &qword_1EFA5DE10, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DE20, &qword_1EFA5DE10, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v22 = v14;
  v19 = (uint64_t)v26;
  v23(&v30, v9, v6, v16, v17, v18, MEMORY[0x1E0D905C8], MEMORY[0x1E0D905D0], ObjectType, v22);
  v20 = (uint64_t)v25;
  sub_1CDFDD220("RemoteBrowsingClient::repeatWorkoutPlan", 39, 2, &dword_1CDFAA000, 0, v19, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v29);
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  return sub_1CDFE19F8(v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateWorkoutPlan(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void (*v23)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE08);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE28);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v25 = v12;
  v14 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v30 = 195;
  v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 32);
  v16 = sub_1CE0B41D8();
  v24 = v7;
  v17 = sub_1CDFE1194(&qword_1EFA5DE30, &qword_1EFA5DE28, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DE38, &qword_1EFA5DE28, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v22 = v14;
  v19 = (uint64_t)v26;
  v23(&v30, v9, v6, v16, v17, v18, MEMORY[0x1E0D905C8], MEMORY[0x1E0D905D0], ObjectType, v22);
  v20 = (uint64_t)v25;
  sub_1CDFDD220("RemoteBrowsingClient::updateWorkoutPlan", 39, 2, &dword_1CDFAA000, 0, v19, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v29);
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  return sub_1CDFE19F8(v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestWorkoutPlanAlternatives(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE40);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B5990();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 300;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B53CC();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D957B8], MEMORY[0x1E0D957C0], MEMORY[0x1E0D94268], MEMORY[0x1E0D94270], ObjectType, v16);
  sub_1CDFDD8D8("RemoteBrowsingClient::requestWorkoutPlanAlternatives", 52, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.showWorkoutPlanCreationPrompt(on:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;

  v3 = v2;
  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v23 = 301;
  v18 = *(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(&v23, v11, v8, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], ObjectType, v16);
  sub_1CDFDB0F0("RemoteBrowsingClient::showWorkoutPlanCreationPrompt", 51, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requireActiveWorkoutPlan(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE48);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B4D48();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 187;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B53D8();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0], MEMORY[0x1E0D94290], MEMORY[0x1E0D94298], ObjectType, v16);
  sub_1CDFDDF90("RemoteBrowsingClient::requireActiveWorkoutPlan", 46, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CDFE19F8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertWorkoutPlanSummaryViewed(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE50);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 194;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DE58, &qword_1EFA5DE50, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DE60, &qword_1EFA5DE50, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertWorkoutPlanSummaryViewed", 52, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertArchivedWorkoutPlanSession(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE68);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 197;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DE70, &qword_1EFA5DE68, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DE78, &qword_1EFA5DE68, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertArchivedWorkoutPlanSession", 54, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestWorkoutPlanTemplateUpdate(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 190;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DE88, &qword_1EFA5DE80, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DE90, &qword_1EFA5DE80, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::requestWorkoutPlanTemplateUpdate", 54, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestEndWorkoutPlan(request:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE98);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 189;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DEA0, &qword_1EFA5DE98, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DEA8, &qword_1EFA5DE98, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::requestEndWorkoutPlan", 43, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.updateOnboardingSurveyResult(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DEB0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 202;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DEB8, &qword_1EFA5DEB0, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DEC0, &qword_1EFA5DEB0, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::updateOnboardingSurveyResult", 50, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertRecentSearchTerm(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DEC8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 199;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DED0, &qword_1EFA5DEC8, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DED8, &qword_1EFA5DEC8, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertRecentSearchTerm", 44, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.deleteRecentSearchTerms(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DEE0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 200;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DEE8, &qword_1EFA5DEE0, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DEF0, &qword_1EFA5DEE0, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::deleteRecentSearchTerm", 44, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertAchievementNotificationRecord(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DEF8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 201;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DF00, &qword_1EFA5DEF8, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DF08, &qword_1EFA5DEF8, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertAchievementNotificationRecord", 57, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.insertPersonalizationPrivacyPreference(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  void (*v21)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int16 v27;

  v24 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DF10);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v11, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v14, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v15 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v27 = 203;
  v21 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 16);
  v22 = ObjectType;
  v23 = v8;
  v17 = sub_1CDFE1194(&qword_1EFA5DF18, &qword_1EFA5DF10, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DF20, &qword_1EFA5DF10, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v21(&v27, v10, v7, v17, v18, v22, v15);
  sub_1CDFDB0F0("RemoteBrowsingClient::insertPersonalizationPrivacyPreference", 60, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v24);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  swift_release();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v7);
  return sub_1CDFE19F8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t RemoteBrowsingClient.requestRemoteSyncableCounts(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void (*v23)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;

  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DF28);
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DF30);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D480 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v10, (uint64_t)qword_1EFA5F3A8);
  sub_1CDFAFBAC(v13, (uint64_t)v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v25 = v12;
  v14 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v30 = 204;
  v23 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v14 + 32);
  v16 = sub_1CE0B48BC();
  v24 = v7;
  v17 = sub_1CDFE1194(&qword_1EFA5DF38, &qword_1EFA5DF30, MEMORY[0x1E0D95AC0]);
  v18 = sub_1CDFE1194(&qword_1EFA5DF40, &qword_1EFA5DF30, MEMORY[0x1E0D95AC8]);
  swift_retain();
  v22 = v14;
  v19 = (uint64_t)v26;
  v23(&v30, v9, v6, v16, v17, v18, MEMORY[0x1E0D91380], MEMORY[0x1E0D91388], ObjectType, v22);
  v20 = (uint64_t)v25;
  sub_1CDFDE648("RemoteBrowsingClient::requestRemoteSyncableCounts", 49, 2, &dword_1CDFAA000, 0, v19, v27);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v19, v29);
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v6);
  return sub_1CDFE19F8(v20, (uint64_t (*)(_QWORD))type metadata accessor for ActivityTracer);
}

uint64_t sub_1CDFDABD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertConnectionRecord(_:)(a1, a2);
}

uint64_t sub_1CDFDABF0@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.queryConnectionRecord()(a1);
}

uint64_t sub_1CDFDAC10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestEnvironment(from:)(a1, a2);
}

uint64_t sub_1CDFDAC30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestEnvironmentWithConfirmation(from:)(a1, a2);
}

uint64_t sub_1CDFDAC50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.cancelRemoteBrowsingEnvironmentRequest(for:)(a1, a2);
}

uint64_t sub_1CDFDAC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestServiceSubscription(from:)(a1, a2);
}

uint64_t sub_1CDFDAC90@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.allowPendingConfirmationRequest()(a1);
}

uint64_t sub_1CDFDACB0@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.denyPendingConfirmationRequest()(a1);
}

uint64_t sub_1CDFDACD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestGuestAuthentication(to:)(a1, a2);
}

uint64_t sub_1CDFDACF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return RemoteBrowsingClient.tryPassword(_:)(a1, a2, a3);
}

uint64_t sub_1CDFDAD10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateAudioFocusSelection(_:)(a1, a2);
}

uint64_t sub_1CDFDAD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateBurnBarDisplayPreference(_:)(a1, a2);
}

uint64_t sub_1CDFDAD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateMetricsDisplayPreference(_:)(a1, a2);
}

uint64_t sub_1CDFDAD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateProgressDisplayPreference(_:)(a1, a2);
}

uint64_t sub_1CDFDAD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateNoticePrivacyPreference(_:)(a1, a2);
}

uint64_t sub_1CDFDADB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateOptInPrivacyPreference(_:)(a1, a2);
}

uint64_t sub_1CDFDADD0@<X0>(uint64_t a1@<X8>)
{
  return RemoteBrowsingClient.queryAllPrivacyAcknowledgements()(a1);
}

uint64_t sub_1CDFDADF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertPrivacyAcknowledgement(_:)(a1, a2);
}

uint64_t sub_1CDFDAE10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertBookmarks(_:)(a1, a2);
}

uint64_t sub_1CDFDAE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.removeBookmarks(_:)(a1, a2);
}

uint64_t sub_1CDFDAE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertArchivedSession(_:)(a1, a2);
}

uint64_t sub_1CDFDAE70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertCatalogTipJournal(_:)(a1, a2);
}

uint64_t sub_1CDFDAE90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertPlaylist(_:)(a1, a2);
}

uint64_t sub_1CDFDAEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.deletePlaylist(_:)(a1, a2);
}

uint64_t sub_1CDFDAED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertCompletedMarketingVideo(_:)(a1, a2);
}

uint64_t sub_1CDFDAEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.processUpNextQueueUpdates(_:)(a1, a2);
}

uint64_t sub_1CDFDAF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.repeatWorkoutPlan(_:)(a1, a2);
}

uint64_t sub_1CDFDAF30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateWorkoutPlan(_:)(a1, a2);
}

uint64_t sub_1CDFDAF50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestEndWorkoutPlan(request:)(a1, a2);
}

uint64_t sub_1CDFDAF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestWorkoutPlanTemplateUpdate(request:)(a1, a2);
}

uint64_t sub_1CDFDAF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestWorkoutPlanAlternatives(_:)(a1, a2);
}

uint64_t sub_1CDFDAFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.showWorkoutPlanCreationPrompt(on:)(a1, a2);
}

uint64_t sub_1CDFDAFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requireActiveWorkoutPlan(from:)(a1, a2);
}

uint64_t sub_1CDFDAFF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertWorkoutPlanSummaryViewed(_:)(a1, a2);
}

uint64_t sub_1CDFDB010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertArchivedWorkoutPlanSession(_:)(a1, a2);
}

uint64_t sub_1CDFDB030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.updateOnboardingSurveyResult(_:)(a1, a2);
}

uint64_t sub_1CDFDB050@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertRecentSearchTerm(_:)(a1, a2);
}

uint64_t sub_1CDFDB070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.deleteRecentSearchTerms(_:)(a1, a2);
}

uint64_t sub_1CDFDB090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertAchievementNotificationRecord(_:)(a1, a2);
}

uint64_t sub_1CDFDB0B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.insertPersonalizationPrivacyPreference(_:)(a1, a2);
}

uint64_t sub_1CDFDB0D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteBrowsingClient.requestRemoteSyncableCounts(_:)(a1, a2);
}

uint64_t sub_1CDFDB0F0@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (**v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  _QWORD *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void (*v54)(uint64_t, char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t (**v58)@<X0>(uint64_t@<X8>);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t (**v72)(uint64_t);
  void (*v73)(char *, uint64_t);
  _QWORD v75[2];
  unint64_t v76;
  uint64_t v77;
  void (**v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  _QWORD *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;

  v8 = v7;
  v85 = a6;
  LODWORD(v93) = a5;
  v91 = a7;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v97 = *(_QWORD **)(v13 - 8);
  v83 = (void (*)(uint64_t, char *, uint64_t))v97[8];
  v84 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v87 = (char *)v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v96 = (char *)v75 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v90 = (char *)v75 - v19;
  MEMORY[0x1E0C80A78](v18);
  v95 = (char *)v75 - v20;
  v21 = sub_1CE0B3DF4();
  v98 = *(_QWORD *)(v21 - 8);
  v88 = *(_QWORD *)(v98 + 64);
  v89 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v86 = (char *)v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v99 = (char *)v75 - v24;
  v25 = sub_1CE0B6020();
  v78 = *(void (***)(char *, uint64_t))(v25 - 8);
  v26 = v78;
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1CE0B5FFC();
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v30 = (char *)v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v94 = a1;
  v92 = a3;
  v31 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v32 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v33 = v26[2];
  v34 = v28;
  ((void (*)(char *, uint64_t, uint64_t))v33)(v28, v32, v25);
  type metadata accessor for Signpost();
  v35 = swift_allocObject();
  v36 = v35 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v36 = a1;
  *(_QWORD *)(v36 + 8) = a2;
  v81 = a2;
  *(_BYTE *)(v36 + 16) = a3;
  v37 = v79;
  v38 = v80;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v35 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v30, v80);
  *(_BYTE *)(v35 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v93;
  ((void (*)(uint64_t, char *, uint64_t))v33)(v35 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster, v34, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v39 = swift_allocObject();
  *(_DWORD *)(v39 + 24) = 0;
  *(_QWORD *)(v39 + 16) = 0;
  v78[1](v34, v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
  *(_QWORD *)(v35 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v39;
  v100 = v31;
  v40 = sub_1CE0B6290();
  v80 = v40;
  v42 = v41;
  sub_1CE0B3DDC();
  v43 = swift_allocObject();
  v82 = v31;
  *(_QWORD *)(v43 + 16) = v31;
  *(_QWORD *)(v43 + 24) = v35;
  v77 = v35;
  *(_QWORD *)(v43 + 32) = v40;
  *(_QWORD *)(v43 + 40) = v42;
  v79 = v42;
  *(_QWORD *)(v43 + 48) = v94;
  *(_QWORD *)(v43 + 56) = a2;
  *(_BYTE *)(v43 + 64) = v92;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v93 = MEMORY[0x1E0DEE9C0] + 8;
  v44 = v95;
  sub_1CE0B5C00();
  v45 = v96;
  v46 = v97;
  v47 = (void (*)(char *, uint64_t, uint64_t))v97[2];
  v48 = v84;
  v47(v96, v85, v84);
  v49 = (void (*)(char *, char *, uint64_t))v47;
  v78 = (void (**)(char *, uint64_t))v47;
  v50 = *((unsigned __int8 *)v46 + 80);
  v51 = (v50 + 16) & ~v50;
  v52 = (char *)v83 + v51;
  v85 = v50 | 7;
  v53 = swift_allocObject();
  v75[0] = v51;
  v54 = (void (*)(uint64_t, char *, uint64_t))v46[4];
  v55 = v48;
  v54(v53 + v51, v45, v48);
  v83 = v54;
  v56 = v87;
  v49(v87, v44, v55);
  v75[1] = ((unint64_t)(v52 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v76 = (unint64_t)(v52 + 7) & 0xFFFFFFFFFFFFFFF8;
  v57 = swift_allocObject();
  v54(v57 + v51, v56, v55);
  v58 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v57 + ((unint64_t)(v52 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v58 = sub_1CDFE1700;
  v58[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v53;
  v59 = v90;
  sub_1CE0B5C00();
  v60 = v98;
  v61 = v86;
  v62 = v89;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v86, v99, v89);
  v63 = (*(unsigned __int8 *)(v60 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  v64 = (v88 + v63 + 7) & 0xFFFFFFFFFFFFFFF8;
  v65 = swift_allocObject();
  v66 = v79;
  *(_QWORD *)(v65 + 16) = v80;
  *(_QWORD *)(v65 + 24) = v66;
  v67 = v81;
  *(_QWORD *)(v65 + 32) = v94;
  *(_QWORD *)(v65 + 40) = v67;
  *(_BYTE *)(v65 + 48) = v92;
  v68 = v65 + v63;
  v69 = v62;
  (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v68, v61, v62);
  *(_QWORD *)(v65 + v64) = v77;
  *(_QWORD *)(v65 + ((v64 + 15) & 0xFFFFFFFFFFFFFFF8)) = v82;
  v70 = v96;
  ((void (*)(char *, char *, uint64_t))v78)(v96, v59, v55);
  v71 = swift_allocObject();
  v83(v71 + v75[0], v70, v55);
  v72 = (uint64_t (**)(uint64_t))(v71 + v76);
  *v72 = sub_1CDFE1814;
  v72[1] = (uint64_t (*)(uint64_t))v65;
  swift_retain();
  sub_1CE0B5C00();
  v73 = (void (*)(char *, uint64_t))v97[1];
  v73(v59, v55);
  v73(v95, v55);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v69);
  return swift_release();
}

uint64_t sub_1CDFDB748@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DC90);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE15E0;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B596C();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE1610;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDBE00@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DC98);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE1574;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B5690();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE15A4;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDC4B8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DCA0);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE1508;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B4FB8();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE1538;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDCB70@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t (**v56)@<X0>(uint64_t@<X8>);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t (**v70)(uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;

  v8 = v7;
  v82 = a6;
  LODWORD(v78) = a5;
  v87 = a7;
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD38);
  v92 = *(_QWORD *)(v94 - 8);
  v80 = *(_QWORD *)(v92 + 64);
  v13 = MEMORY[0x1E0C80A78](v94);
  v91 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v86 = (char *)&v72 - v15;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v93 = *(_QWORD *)(v95 - 8);
  v81 = *(_QWORD *)(v93 + 64);
  v16 = MEMORY[0x1E0C80A78](v95);
  v79 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v90 = (char *)&v72 - v18;
  v96 = sub_1CE0B3DF4();
  v19 = *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64);
  v84 = *(_QWORD *)(v96 - 8);
  v85 = v19;
  v20 = MEMORY[0x1E0C80A78](v96);
  v83 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v97 = (char *)&v72 - v22;
  v23 = sub_1CE0B6020();
  v73 = *(_QWORD *)(v23 - 8);
  v24 = v73;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1CE0B5FFC();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v28 = (char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v89 = a1;
  v88 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v76 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v77 = a3;
  v34 = v74;
  v35 = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v75);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v78;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v88;
  v98 = v88;
  v38 = sub_1CE0B6290();
  v78 = v38;
  v40 = v39;
  sub_1CE0B3DDC();
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v37;
  *(_QWORD *)(v41 + 24) = v32;
  *(_QWORD *)(v41 + 32) = v38;
  *(_QWORD *)(v41 + 40) = v40;
  v75 = v40;
  *(_QWORD *)(v41 + 48) = v89;
  *(_QWORD *)(v41 + 56) = a2;
  *(_BYTE *)(v41 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v42 = v90;
  sub_1CE0B5C00();
  v43 = v92;
  v74 = *(_QWORD *)(v92 + 16);
  v44 = v91;
  v45 = v94;
  ((void (*)(char *, uint64_t, uint64_t))v74)(v91, v82, v94);
  v46 = *(unsigned __int8 *)(v43 + 80);
  v72 = ((v46 + 16) & ~v46) + v80;
  v47 = (v46 + 16) & ~v46;
  v82 = v47;
  v80 = v46 | 7;
  v48 = swift_allocObject();
  v73 = *(_QWORD *)(v43 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v73)(v48 + v47, v44, v45);
  v49 = v93;
  v50 = v79;
  v51 = v95;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v79, v42, v95);
  v52 = v49;
  v53 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v54 = (v81 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
  v55 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v52 + 32))(v55 + v53, v50, v51);
  v56 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v55 + v54);
  *v56 = sub_1CDFE1484;
  v56[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD40);
  v57 = v86;
  sub_1CE0B5C00();
  v58 = v83;
  v59 = v84;
  v60 = v96;
  (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v83, v97, v96);
  v61 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v62 = (v85 + v61 + 7) & 0xFFFFFFFFFFFFFFF8;
  v63 = swift_allocObject();
  v64 = v75;
  *(_QWORD *)(v63 + 16) = v78;
  *(_QWORD *)(v63 + 24) = v64;
  v65 = v76;
  *(_QWORD *)(v63 + 32) = v89;
  *(_QWORD *)(v63 + 40) = v65;
  *(_BYTE *)(v63 + 48) = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v63 + v61, v58, v60);
  *(_QWORD *)(v63 + v62) = v32;
  *(_QWORD *)(v63 + ((v62 + 15) & 0xFFFFFFFFFFFFFFF8)) = v88;
  v66 = v91;
  v67 = v94;
  ((void (*)(char *, char *, uint64_t))v74)(v91, v57, v94);
  v68 = (v72 + 7) & 0xFFFFFFFFFFFFFFF8;
  v69 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v73)(v69 + v82, v66, v67);
  v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *v70 = sub_1CDFE14B4;
  v70[1] = (uint64_t (*)(uint64_t))v63;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v57, v67);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v95);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v97, v96);
  return swift_release();
}

uint64_t sub_1CDFDD220@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE08);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE1418;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B41D8();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE1448;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDD8D8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE40);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE13AC;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B53CC();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE13DC;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDDF90@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE48);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE1340;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B53D8();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE1370;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDE648@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DF28);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE12D4;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B48BC();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE1304;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDED00@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E000);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE1268;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B50B4();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE1298;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

uint64_t sub_1CDFDF3B8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t (**v57)@<X0>(uint64_t@<X8>);
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (**v71)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v8 = v7;
  v83 = a6;
  LODWORD(v79) = a5;
  v89 = a7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DFF0);
  v95 = *(_QWORD *)(v97 - 8);
  v81 = *(_QWORD *)(v95 + 64);
  v13 = MEMORY[0x1E0C80A78](v97);
  v94 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v88 = (char *)&v73 - v15;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v96 = *(_QWORD *)(v98 - 8);
  v82 = *(_QWORD *)(v96 + 64);
  v16 = MEMORY[0x1E0C80A78](v98);
  v80 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v93 = (char *)&v73 - v18;
  v19 = sub_1CE0B3DF4();
  v85 = *(_QWORD *)(v19 - 8);
  v86 = *(_QWORD *)(v85 + 64);
  v87 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v84 = (char *)&v73 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v91 = (char *)&v73 - v22;
  v23 = sub_1CE0B6020();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = v74;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = sub_1CE0B5FFC();
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v28 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActivityTrace();
  swift_allocObject();
  v92 = a1;
  v90 = sub_1CDFBEBC8(a1, a2, a3, a4);
  swift_retain();
  v29 = v8;
  sub_1CE0B6014();
  sub_1CE0B5FE4();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v31 = v26;
  v30(v26, v29, v23);
  type metadata accessor for Signpost();
  v32 = swift_allocObject();
  v33 = v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_identifier;
  *(_QWORD *)v33 = a1;
  *(_QWORD *)(v33 + 8) = a2;
  v77 = a2;
  *(_BYTE *)(v33 + 16) = a3;
  v78 = a3;
  v34 = v75;
  v35 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v75 + 16))(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_signpostID, v28, v76);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_telemetryEnabled) = v79;
  v30((char *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_poster), (uint64_t)v31, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C0);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 24) = 0;
  *(_QWORD *)(v36 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v74 + 8))(v31, v23);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v35);
  *(_QWORD *)(v32 + OBJC_IVAR____TtC13SeymourClient8Signpost_state) = v36;
  v37 = v90;
  v99 = v90;
  v38 = sub_1CE0B6290();
  v79 = v38;
  v40 = v39;
  v41 = v91;
  sub_1CE0B3DDC();
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v32;
  *(_QWORD *)(v42 + 32) = v38;
  *(_QWORD *)(v42 + 40) = v40;
  v76 = v40;
  *(_QWORD *)(v42 + 48) = v92;
  *(_QWORD *)(v42 + 56) = a2;
  *(_BYTE *)(v42 + 64) = a3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v43 = v93;
  sub_1CE0B5C00();
  v44 = v95;
  v75 = *(_QWORD *)(v95 + 16);
  v45 = v94;
  v46 = v97;
  ((void (*)(char *, uint64_t, uint64_t))v75)(v94, v83, v97);
  v47 = *(unsigned __int8 *)(v44 + 80);
  v73 = ((v47 + 16) & ~v47) + v81;
  v48 = (v47 + 16) & ~v47;
  v83 = v48;
  v81 = v47 | 7;
  v49 = swift_allocObject();
  v74 = *(_QWORD *)(v44 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v49 + v48, v45, v46);
  v50 = v96;
  v51 = v80;
  v52 = v98;
  (*(void (**)(char *, char *, uint64_t))(v96 + 16))(v80, v43, v98);
  v53 = v50;
  v54 = (*(unsigned __int8 *)(v50 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  v55 = (v82 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
  v56 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v56 + v54, v51, v52);
  v57 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v56 + v55);
  *v57 = sub_1CDFE11FC;
  v57[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v49;
  v82 = sub_1CE0B3EB4();
  v58 = v88;
  sub_1CE0B5C00();
  v60 = v84;
  v59 = v85;
  v61 = v87;
  (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v41, v87);
  v62 = (*(unsigned __int8 *)(v59 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v63 = (v86 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = swift_allocObject();
  v65 = v76;
  *(_QWORD *)(v64 + 16) = v79;
  *(_QWORD *)(v64 + 24) = v65;
  v66 = v77;
  *(_QWORD *)(v64 + 32) = v92;
  *(_QWORD *)(v64 + 40) = v66;
  *(_BYTE *)(v64 + 48) = v78;
  (*(void (**)(unint64_t, char *, uint64_t))(v59 + 32))(v64 + v62, v60, v61);
  *(_QWORD *)(v64 + v63) = v32;
  *(_QWORD *)(v64 + ((v63 + 15) & 0xFFFFFFFFFFFFFFF8)) = v90;
  v67 = v94;
  v68 = v97;
  ((void (*)(char *, char *, uint64_t))v75)(v94, v58, v97);
  v69 = (v73 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  ((void (*)(uint64_t, char *, uint64_t))v74)(v70 + v83, v67, v68);
  v71 = (void (**)(uint64_t))(v70 + v69);
  *v71 = sub_1CDFE122C;
  v71[1] = (void (*)(uint64_t))v64;
  swift_retain();
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v58, v68);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v98);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v91, v61);
  return swift_release();
}

void sub_1CDFDFA70(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  id v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  id v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  os_unfair_lock_s *v56;
  os_unfair_lock_s *v57;
  os_unfair_lock_s *v58;
  os_unfair_lock_s *v59;
  uint64_t *v60;
  os_unfair_lock_s *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[2];

  v66 = a7;
  v64 = a5;
  v65 = a6;
  v15 = a10;
  v68 = a9;
  v16 = sub_1CE0B3DF4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v62 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v62 - v23;
  if ((a2 & 1) != 0)
  {
    v38 = a1;
    if (qword_1ED8F0980 != -1)
      swift_once();
    v39 = sub_1CE0B6080();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v22, a8, v16);
    swift_bridgeObjectRetain();
    sub_1CDFB33FC(a1, 1);
    swift_bridgeObjectRetain();
    sub_1CDFB33FC(a1, 1);
    v40 = sub_1CE0B6068();
    v41 = sub_1CE0B671C();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = swift_slowAlloc();
      v63 = a10;
      v43 = v42;
      v62 = swift_slowAlloc();
      v70[0] = v62;
      *(_DWORD *)v43 = 136446978;
      swift_bridgeObjectRetain();
      v69 = sub_1CDFC7270(a3, a4, v70);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2082;
      v44 = sub_1CE0B6A1C();
      v69 = sub_1CDFC7270(v44, v45, v70);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2048;
      v46 = v67;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v48 = v47;
      v49 = *(void (**)(char *, uint64_t))(v17 + 8);
      v49(v46, v16);
      v69 = v48;
      sub_1CE0B68F0();
      v49(v22, v16);
      *(_WORD *)(v43 + 32) = 2082;
      v69 = (uint64_t)a1;
      v50 = a1;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
      v51 = sub_1CE0B6290();
      v69 = sub_1CDFC7270(v51, v52, v70);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      sub_1CDFC2DF4(a1, 1);
      sub_1CDFC2DF4(a1, 1);
      _os_log_impl(&dword_1CDFAA000, v40, v41, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v43, 0x2Au);
      v53 = v62;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v53, -1, -1);
      v54 = v43;
      v15 = v63;
      MEMORY[0x1D17C092C](v54, -1, -1);

      sub_1CDFC2DF4(a1, 1);
    }
    else
    {
      sub_1CDFC2DF4(a1, 1);
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
      sub_1CDFC2DF4(a1, 1);
      sub_1CDFC2DF4(a1, 1);

    }
  }
  else
  {
    if (qword_1ED8F0980 != -1)
      swift_once();
    v25 = sub_1CE0B6080();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v24, a8, v16);
    swift_bridgeObjectRetain_n();
    v26 = sub_1CE0B6068();
    v27 = sub_1CE0B6734();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v63 = a10;
      v30 = v29;
      v70[0] = v29;
      *(_DWORD *)v28 = 136446722;
      swift_bridgeObjectRetain();
      v69 = sub_1CDFC7270(a3, a4, v70);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2082;
      v31 = sub_1CE0B6A1C();
      v69 = sub_1CDFC7270(v31, v32, v70);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2048;
      v33 = v67;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v35 = v34;
      v36 = *(void (**)(char *, uint64_t))(v17 + 8);
      v36(v33, v16);
      v69 = v35;
      sub_1CE0B68F0();
      v36(v24, v16);
      _os_log_impl(&dword_1CDFAA000, v26, v27, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      v37 = v30;
      v15 = v63;
      MEMORY[0x1D17C092C](v37, -1, -1);
      MEMORY[0x1D17C092C](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
    }

  }
  v55 = v68;
  v56 = *(os_unfair_lock_s **)(v68 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  v57 = v56 + 4;
  v58 = v56 + 6;
  os_unfair_lock_lock(v56 + 6);
  sub_1CDFBE684(v57, v55);
  os_unfair_lock_unlock(v58);
  v59 = *(os_unfair_lock_s **)(v15 + 40);
  v60 = (uint64_t *)&v59[4];
  v61 = v59 + 11;
  os_unfair_lock_lock(v59 + 11);
  sub_1CDFBE5F8(v60);
  os_unfair_lock_unlock(v61);
}

void sub_1CDFE00C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t *a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  id v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_BYTE *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  os_unfair_lock_s *v56;
  os_unfair_lock_s *v57;
  os_unfair_lock_s *v58;
  os_unfair_lock_s *v59;
  uint64_t *v60;
  os_unfair_lock_s *v61;
  _BYTE v62[4];
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];

  v68 = a6;
  v66 = a4;
  v67 = a5;
  v65 = a2;
  v70 = a8;
  v71 = a9;
  v13 = sub_1CE0B3DF4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v69 = &v62[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = &v62[-v18];
  MEMORY[0x1E0C80A78](v17);
  v21 = &v62[-v20];
  v22 = __swift_instantiateConcreteTypeFromMangledName(a10);
  MEMORY[0x1E0C80A78](v22);
  v24 = (void **)&v62[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1CDFB1434(a1, (uint64_t)v24, a10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v24;
    if (qword_1ED8F0980 != -1)
      swift_once();
    v26 = sub_1CE0B6080();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v19, a7, v13);
    swift_bridgeObjectRetain();
    v27 = v25;
    swift_bridgeObjectRetain();
    v28 = v25;
    v29 = sub_1CE0B6068();
    v30 = sub_1CE0B671C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v64 = swift_slowAlloc();
      v73[0] = v64;
      *(_DWORD *)v31 = 136446978;
      swift_bridgeObjectRetain();
      v72 = sub_1CDFC7270(v65, a3, v73);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      v32 = sub_1CE0B6A1C();
      v72 = sub_1CDFC7270(v32, v33, v73);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 22) = 2048;
      v34 = v69;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v36 = v35;
      v37 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
      v37(v34, v13);
      v72 = v36;
      sub_1CE0B68F0();
      v37(v19, v13);
      *(_WORD *)(v31 + 32) = 2082;
      v72 = (uint64_t)v25;
      v38 = v25;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
      v39 = sub_1CE0B6290();
      v72 = sub_1CDFC7270(v39, v40, v73);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v29, v30, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v31, 0x2Au);
      v41 = v64;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v41, -1, -1);
      MEMORY[0x1D17C092C](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);

    }
  }
  else
  {
    if (qword_1ED8F0980 != -1)
      swift_once();
    v42 = sub_1CE0B6080();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v21, a7, v13);
    swift_bridgeObjectRetain_n();
    v43 = sub_1CE0B6068();
    v44 = sub_1CE0B6734();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v63 = v45;
      v47 = v46;
      v64 = swift_slowAlloc();
      v73[0] = v64;
      *(_DWORD *)v47 = 136446722;
      swift_bridgeObjectRetain();
      v72 = sub_1CDFC7270(v65, a3, v73);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v47 + 12) = 2082;
      v48 = sub_1CE0B6A1C();
      v72 = sub_1CDFC7270(v48, v49, v73);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2048;
      v50 = v69;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v52 = v51;
      v53 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
      v53(v50, v13);
      v72 = v52;
      sub_1CE0B68F0();
      v53(v21, v13);
      _os_log_impl(&dword_1CDFAA000, v43, (os_log_type_t)v63, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v47, 0x20u);
      v54 = v64;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v54, -1, -1);
      MEMORY[0x1D17C092C](v47, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v21, v13);
    }

    sub_1CDFB13F8((uint64_t)v24, a10);
  }
  v55 = v70;
  v56 = *(os_unfair_lock_s **)(v70 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  v57 = v56 + 4;
  v58 = v56 + 6;
  os_unfair_lock_lock(v56 + 6);
  sub_1CDFBE684(v57, v55);
  os_unfair_lock_unlock(v58);
  v59 = *(os_unfair_lock_s **)(v71 + 40);
  v60 = (uint64_t *)&v59[4];
  v61 = v59 + 11;
  os_unfair_lock_lock(v59 + 11);
  sub_1CDFBE5F8(v60);
  os_unfair_lock_unlock(v61);
}

void sub_1CDFE0758(void *a1, char a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  id v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  os_unfair_lock_s *v53;
  os_unfair_lock_s *v54;
  os_unfair_lock_s *v55;
  os_unfair_lock_s *v56;
  uint64_t *v57;
  os_unfair_lock_s *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69[2];

  v65 = a7;
  v63 = a5;
  v64 = a6;
  v62 = a3;
  v14 = a9;
  v67 = a10;
  v15 = sub_1CE0B3DF4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v59 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v59 - v23;
  if ((a2 & 1) != 0)
  {
    v36 = a1;
    if (qword_1ED8F0980 != -1)
      swift_once();
    v37 = sub_1CE0B6080();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v22, a8, v15);
    sub_1CDFE14E0(a1, 1);
    swift_bridgeObjectRetain();
    sub_1CDFE14E0(a1, 1);
    swift_bridgeObjectRetain();
    v38 = sub_1CE0B6068();
    v39 = sub_1CE0B671C();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      v66 = a9;
      v42 = v41;
      v61 = (id)swift_slowAlloc();
      v69[0] = (uint64_t)v61;
      *(_DWORD *)v42 = 136446978;
      LODWORD(v60) = v40;
      swift_bridgeObjectRetain();
      v68 = sub_1CDFC7270(v62, a4, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v42 + 12) = 2082;
      v43 = sub_1CE0B6A1C();
      v68 = sub_1CDFC7270(v43, v44, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 22) = 2048;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v46 = v45;
      v47 = *(void (**)(char *, uint64_t))(v16 + 8);
      v47(v19, v15);
      v68 = v46;
      sub_1CE0B68F0();
      v47(v22, v15);
      *(_WORD *)(v42 + 32) = 2082;
      v68 = (uint64_t)a1;
      v48 = a1;
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
      v49 = sub_1CE0B6290();
      v68 = sub_1CDFC7270(v49, v50, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      sub_1CDFE14EC(a1, 1);
      sub_1CDFE14EC(a1, 1);
      _os_log_impl(&dword_1CDFAA000, v38, (os_log_type_t)v60, "[%{public}s] %{public}s ended in %fs -> %{public}s", (uint8_t *)v42, 0x2Au);
      v51 = v61;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v51, -1, -1);
      v52 = v42;
      v14 = v66;
      MEMORY[0x1D17C092C](v52, -1, -1);

      sub_1CDFE14EC(a1, 1);
    }
    else
    {
      sub_1CDFE14EC(a1, 1);
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      sub_1CDFE14EC(a1, 1);
      sub_1CDFE14EC(a1, 1);

    }
  }
  else
  {
    v66 = a9;
    v25 = qword_1ED8F0980;
    v61 = a1;
    swift_bridgeObjectRetain();
    if (v25 != -1)
      swift_once();
    v26 = sub_1CE0B6080();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED8F1EE0);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v24, a8, v15);
    swift_bridgeObjectRetain_n();
    v27 = sub_1CE0B6068();
    v28 = sub_1CE0B6734();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v60 = swift_slowAlloc();
      v69[0] = v60;
      *(_DWORD *)v29 = 136446722;
      swift_bridgeObjectRetain();
      v68 = sub_1CDFC7270(v62, a4, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2082;
      v30 = sub_1CE0B6A1C();
      v68 = sub_1CDFC7270(v30, v31, v69);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2048;
      sub_1CE0B3DDC();
      sub_1CE0B3DA0();
      v33 = v32;
      v34 = *(void (**)(char *, uint64_t))(v16 + 8);
      v34(v19, v15);
      v68 = v33;
      sub_1CE0B68F0();
      v34(v24, v15);
      _os_log_impl(&dword_1CDFAA000, v27, v28, "[%{public}s] %{public}s ended in %fs", (uint8_t *)v29, 0x20u);
      v35 = v60;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v35, -1, -1);
      MEMORY[0x1D17C092C](v29, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v24, v15);
    }

    sub_1CDFE14EC(v61, 0);
    v14 = v66;
  }
  v53 = *(os_unfair_lock_s **)(v14 + OBJC_IVAR____TtC13SeymourClient8Signpost_state);
  v54 = v53 + 4;
  v55 = v53 + 6;
  os_unfair_lock_lock(v53 + 6);
  sub_1CDFBE684(v54, v14);
  os_unfair_lock_unlock(v55);
  v56 = *(os_unfair_lock_s **)(v67 + 40);
  v57 = (uint64_t *)&v56[4];
  v58 = v56 + 11;
  os_unfair_lock_lock(v56 + 11);
  sub_1CDFBE5F8(v57);
  os_unfair_lock_unlock(v58);
}

_QWORD *sub_1CDFE0DD0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v16 = a1;
  v15 = 17;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B5B04();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1CDFE1960, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95BC0], MEMORY[0x1E0D95BC8]);
  swift_release();
  v16 = a1;
  v15 = 18;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = sub_1CE0B5978();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1CDFE1990, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95770], MEMORY[0x1E0D95778]);
  swift_release();
  v16 = a1;
  v15 = 25;
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = sub_1CE0B5B28();
  TransportDispatching.register<A>(event:handler:)(&v15, (uint64_t)sub_1CDFE19C0, v11, ObjectType, v12, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95C98], MEMORY[0x1E0D95CA0]);
  swift_release();
  v16 = a1;
  v15 = 19;
  v13 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v15, (uint64_t)sub_1CDFE19F0, v13, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFE1018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB312C(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CDFE1084()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFA5DD48;
  if (!qword_1EFA5DD48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5DD40);
    v2[0] = MEMORY[0x1E0D93B50];
    v2[1] = MEMORY[0x1E0D93B58];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5DD48);
  }
  return result;
}

unint64_t sub_1CDFE10E8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFA5DD50;
  if (!qword_1EFA5DD50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5DD40);
    v2 = sub_1CDFE114C();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5DD50);
  }
  return result;
}

unint64_t sub_1CDFE114C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5DD58;
  if (!qword_1EFA5DD58)
  {
    v1 = sub_1CE0B51C8();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D93B60], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA5DD58);
  }
  return result;
}

uint64_t sub_1CDFE1194(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D17C0848](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for RemoteBrowsingClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteBrowsingClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CDFE11F0()
{
  return objectdestroy_2Tm(&qword_1EFA5DFF0);
}

uint64_t sub_1CDFE11FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DFF0, a1);
}

uint64_t sub_1CDFE1208()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE1214(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1D6C);
}

void sub_1CDFE122C(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5DFF8);
}

uint64_t sub_1CDFE1238()
{
  return objectdestroy_5Tm(&qword_1EFA5DFF0);
}

uint64_t sub_1CDFE1244(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DFF0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A52A8);
}

uint64_t sub_1CDFE125C()
{
  return objectdestroy_2Tm(&qword_1EFA5E000);
}

uint64_t sub_1CDFE1268@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5E000, a1);
}

uint64_t sub_1CDFE1274()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE1280(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1D50);
}

void sub_1CDFE1298(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E008);
}

uint64_t sub_1CDFE12A4()
{
  return objectdestroy_5Tm(&qword_1EFA5E000);
}

uint64_t sub_1CDFE12B0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5E000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A528C);
}

uint64_t sub_1CDFE12C8()
{
  return objectdestroy_2Tm(&qword_1EFA5DF28);
}

uint64_t sub_1CDFE12D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DF28, a1);
}

uint64_t sub_1CDFE12E0()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE12EC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1C8C);
}

void sub_1CDFE1304(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E010);
}

uint64_t sub_1CDFE1310()
{
  return objectdestroy_5Tm(&qword_1EFA5DF28);
}

uint64_t sub_1CDFE131C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DF28, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A5270);
}

uint64_t sub_1CDFE1334()
{
  return objectdestroy_2Tm(&qword_1EFA5DE48);
}

uint64_t sub_1CDFE1340@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DE48, a1);
}

uint64_t sub_1CDFE134C()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE1358(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1C70);
}

void sub_1CDFE1370(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E018);
}

uint64_t sub_1CDFE137C()
{
  return objectdestroy_5Tm(&qword_1EFA5DE48);
}

uint64_t sub_1CDFE1388(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DE48, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A5254);
}

uint64_t sub_1CDFE13A0()
{
  return objectdestroy_2Tm(&qword_1EFA5DE40);
}

uint64_t sub_1CDFE13AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DE40, a1);
}

uint64_t sub_1CDFE13B8()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE13C4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1C54);
}

void sub_1CDFE13DC(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E020);
}

uint64_t sub_1CDFE13E8()
{
  return objectdestroy_5Tm(&qword_1EFA5DE40);
}

uint64_t sub_1CDFE13F4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DE40, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A5238);
}

uint64_t sub_1CDFE140C()
{
  return objectdestroy_2Tm(&qword_1EFA5DE08);
}

uint64_t sub_1CDFE1418@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DE08, a1);
}

uint64_t sub_1CDFE1424()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE1430(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1C38);
}

void sub_1CDFE1448(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E028);
}

uint64_t sub_1CDFE1454()
{
  return objectdestroy_5Tm(&qword_1EFA5DE08);
}

uint64_t sub_1CDFE1460(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DE08, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A521C);
}

uint64_t sub_1CDFE1478()
{
  return objectdestroy_2Tm(&qword_1EFA5DD38);
}

uint64_t sub_1CDFE1484@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DD38, a1);
}

uint64_t sub_1CDFE1490()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE149C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1C1C);
}

uint64_t sub_1CDFE14B4(uint64_t a1)
{
  return sub_1CDFE1820(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1CDFE0758);
}

uint64_t sub_1CDFE14C0()
{
  return objectdestroy_5Tm(&qword_1EFA5DD38);
}

uint64_t sub_1CDFE14CC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DD38, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A5200);
}

id sub_1CDFE14E0(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1CDFE14EC(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1CDFE14FC()
{
  return objectdestroy_2Tm(&qword_1EFA5DCA0);
}

uint64_t sub_1CDFE1508@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DCA0, a1);
}

uint64_t sub_1CDFE1514()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE1520(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1C00);
}

void sub_1CDFE1538(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E030);
}

uint64_t sub_1CDFE1544()
{
  return objectdestroy_5Tm(&qword_1EFA5DCA0);
}

uint64_t sub_1CDFE1550(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DCA0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A51E4);
}

uint64_t sub_1CDFE1568()
{
  return objectdestroy_2Tm(&qword_1EFA5DC98);
}

uint64_t sub_1CDFE1574@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DC98, a1);
}

uint64_t sub_1CDFE1580()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE158C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1BE4);
}

void sub_1CDFE15A4(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E038);
}

uint64_t sub_1CDFE15B0()
{
  return objectdestroy_5Tm(&qword_1EFA5DC98);
}

uint64_t sub_1CDFE15BC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DC98, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A51C8);
}

uint64_t sub_1CDFE15D4()
{
  return objectdestroy_2Tm(&qword_1EFA5DC90);
}

uint64_t sub_1CDFE15E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1EFA5DC90, a1);
}

uint64_t sub_1CDFE15EC()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE15F8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1BC8);
}

void sub_1CDFE1610(uint64_t a1)
{
  sub_1CDFE161C(a1, &qword_1EFA5E040);
}

void sub_1CDFE161C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1CE0B3DF4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1CDFE00C8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1CDFE16A0()
{
  return objectdestroy_5Tm(&qword_1EFA5DC90);
}

uint64_t sub_1CDFE16AC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5DC90, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A51AC);
}

void sub_1CDFE16C4(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_1CE0A6800(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1CDFE16F4()
{
  return objectdestroy_2Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE1700@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFE170C(&qword_1ED8F1070, a1);
}

uint64_t sub_1CDFE170C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(a1);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2+ ((*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80)), v4);
}

uint64_t sub_1CDFE1750()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE175C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1B08);
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1CE0B3DF4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CDFE1814(uint64_t a1)
{
  return sub_1CDFE1820(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))sub_1CDFDFA70);
}

uint64_t sub_1CDFE1820(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, unint64_t, _QWORD, _QWORD))
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1CE0B3DF4() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1CDFE18A8()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t sub_1CDFE18B4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1ED8F1070, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CE0A5190);
}

uint64_t sub_1CDFE18C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (_QWORD *)(v4 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a4(a1, a2, v4 + v8, *v9, v9[1]);
}

uint64_t sub_1CDFE193C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CDFE1960(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingGuestAuthenticationCompleted, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95BD0], (uint64_t)&protocol witness table for RemoteBrowsingGuestAuthenticationCompleted);
}

uint64_t sub_1CDFE1990(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingGuestEnvironmentReceived, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95780], (uint64_t)&protocol witness table for RemoteBrowsingGuestEnvironmentReceived);
}

uint64_t sub_1CDFE19C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteParticipantPasswordRequired, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95CA8], (uint64_t)&protocol witness table for RemoteParticipantPasswordRequired);
}

uint64_t sub_1CDFE19F0()
{
  return sub_1CDFD5190();
}

uint64_t sub_1CDFE19F8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void static ManagedProfileEffectiveSettingsChanged.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ManagedProfileEffectiveSettingsChanged()
{
  return &type metadata for ManagedProfileEffectiveSettingsChanged;
}

ValueMetadata *type metadata accessor for NullAnalyticsReporter()
{
  return &type metadata for NullAnalyticsReporter;
}

uint64_t sub_1CDFE1A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;

  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1CDFE1AFC;
  return WorkoutPlanScheduleConflictQuerying.queryExistingModalityReferences(for:workout:on:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1CDFE1AFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t WorkoutPlanScheduleConflictQuerying.queryExistingModalityReferences(for:workout:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[28] = a6;
  v7[29] = v6;
  v7[26] = a4;
  v7[27] = a5;
  v7[24] = a2;
  v7[25] = a3;
  v7[23] = a1;
  v7[30] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E050);
  v7[31] = swift_task_alloc();
  v7[32] = swift_task_alloc();
  v7[33] = swift_task_alloc();
  v7[34] = swift_task_alloc();
  v8 = sub_1CE0B5204();
  v7[35] = v8;
  v7[36] = *(_QWORD *)(v8 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  v9 = sub_1CE0B509C();
  v7[39] = v9;
  v7[40] = *(_QWORD *)(v9 - 8);
  v7[41] = swift_task_alloc();
  v10 = sub_1CE0B5840();
  v7[42] = v10;
  v7[43] = *(_QWORD *)(v10 - 8);
  v7[44] = swift_task_alloc();
  v7[45] = swift_task_alloc();
  v11 = sub_1CE0B3E54();
  v7[46] = v11;
  v7[47] = *(_QWORD *)(v11 - 8);
  v7[48] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E058);
  v7[49] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0F70);
  v7[50] = v12;
  v7[51] = *(_QWORD *)(v12 - 8);
  v7[52] = swift_task_alloc();
  v7[53] = swift_task_alloc();
  v13 = sub_1CE0B530C();
  v7[54] = v13;
  v7[55] = *(_QWORD *)(v13 - 8);
  v7[56] = swift_task_alloc();
  v7[57] = swift_task_alloc();
  v7[58] = swift_task_alloc();
  v7[59] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CDFE1D54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v13;

  v1 = v0[53];
  v2 = v0[27];
  v4 = v0[24];
  v3 = v0[25];
  v5 = *(void (**)(uint64_t))(v0[28] + 16);
  v0[60] = v5;
  v5(v2);
  v6 = v0[11];
  v7 = v0[12];
  __swift_project_boxed_opaque_existential_1(v0 + 8, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D998);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CE0BB0F0;
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 40) = v3;
  swift_bridgeObjectRetain();
  v9 = sub_1CDFE8AE0(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 208))(v9, v6, v7);
  swift_bridgeObjectRelease();
  v10 = swift_task_alloc();
  v0[61] = v10;
  *(_QWORD *)(v10 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourMedia/Workout Plans/Querying/Work"
                          "outPlanScheduleConflictQuerying.swift";
  *(_QWORD *)(v10 + 24) = 131;
  *(_BYTE *)(v10 + 32) = 2;
  *(_QWORD *)(v10 + 40) = 24;
  *(_QWORD *)(v10 + 48) = v1;
  v13 = (char *)&dword_1EFA5E060 + dword_1EFA5E060;
  v11 = (_QWORD *)swift_task_alloc();
  v0[62] = v11;
  *v11 = v0;
  v11[1] = sub_1CDFE1EE0;
  return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(), uint64_t))v13)(0, 0, 0xD000000000000013, 0x80000001CE0C86B0, sub_1CDFE8C80, v10);
}

uint64_t sub_1CDFE1EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v4 = *(_QWORD **)v2;
  *(_QWORD *)(*(_QWORD *)v2 + 504) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v5 = v4[53];
    v6 = v4[50];
    v7 = v4[51];
    v4[64] = a1;
    swift_task_dealloc();
    v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v4[65] = v8;
    v8(v5, v6);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(v4 + 8));
  }
  return swift_task_switch();
}

uint64_t sub_1CDFE1F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t (*v21)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 432);
  v2 = *(_QWORD *)(v0 + 440);
  v3 = *(_QWORD *)(v0 + 392);
  sub_1CDFE365C(*(_QWORD *)(v0 + 512), sub_1CDFD0128, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93F80], v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1CDFB13F8(*(_QWORD *)(v0 + 392), &qword_1EFA5E058);
    v4 = sub_1CE0B422C();
    sub_1CDFB1900((unint64_t *)&qword_1EFA5E068, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90758], MEMORY[0x1E0D90768]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v5, *MEMORY[0x1E0D90740], v4);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 472);
    v8 = *(_QWORD *)(v0 + 432);
    v10 = *(_QWORD *)(v0 + 384);
    v9 = *(_QWORD *)(v0 + 392);
    v11 = *(_QWORD *)(v0 + 368);
    v12 = *(_QWORD *)(v0 + 376);
    v13 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 192);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 440) + 32);
    *(_QWORD *)(v0 + 528) = v15;
    v15(v7, v9, v8);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v10, *MEMORY[0x1E0CB1130], v11);
    v16 = sub_1CE0B4190();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRetain();
    v17 = sub_1CDFE90C4(v16, v14, v13);
    *(_QWORD *)(v0 + 536) = v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v17 + 16))
    {
      (*(void (**)(_QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 216));
      v18 = *(_QWORD *)(v0 + 128);
      v19 = *(_QWORD *)(v0 + 136);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 104), v18);
      v21 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v19 + 256) + *(_QWORD *)(v19 + 256));
      v20 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 544) = v20;
      *v20 = v0;
      v20[1] = sub_1CDFE24D4;
      return v21(v18, v19);
    }
    else
    {
      swift_release();
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 432));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(MEMORY[0x1E0DEE9E8]);
    }
  }
}

uint64_t sub_1CDFE2390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 424);
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 408);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFE24D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 552) = a1;
  *(_QWORD *)(v3 + 560) = v1;
  swift_task_dealloc();
  if (v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1CDFE254C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, unint64_t);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  int64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  int64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;

  v88 = v0 + 104;
  v1 = *(_QWORD *)(v0 + 552);
  v2 = *(_QWORD *)(v0 + 344);
  v105 = *(_QWORD *)(v0 + 320);
  v103 = *(_QWORD *)(v0 + 288);
  v3 = (_QWORD *)sub_1CDFE3734(MEMORY[0x1E0DEE9D8]);
  v90 = v1 + 56;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v1 + 56);
  v92 = (unint64_t)(63 - v5) >> 6;
  v96 = v1;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v98 = v0;
  v94 = v2;
  while (1)
  {
    if (v6)
    {
      v99 = (v6 - 1) & v6;
      v101 = v8;
      v13 = __clz(__rbit64(v6)) | (v8 << 6);
      goto LABEL_26;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_67;
    if (v14 >= v92)
    {
LABEL_37:
      v42 = *(_QWORD *)(v0 + 536);
      swift_release();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm(v88);
      swift_bridgeObjectRetain();
      v43 = sub_1CDFE9768(v42, (uint64_t)v3);
      *(_QWORD *)(v0 + 568) = v43;
      swift_bridgeObjectRelease_n();
      swift_release();
      v44 = *(_QWORD *)(v43 + 16);
      v45 = MEMORY[0x1E0DEE9D8];
      if (!v44)
      {
LABEL_63:
        v78 = *(_QWORD *)(v0 + 416);
        (*(void (**)(_QWORD, _QWORD))(v0 + 480))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 224));
        v79 = *(_QWORD *)(v0 + 168);
        v80 = *(_QWORD *)(v0 + 176);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 144), v79);
        v81 = sub_1CDFD0324(v45);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 208))(v81, v79, v80);
        swift_bridgeObjectRelease();
        v82 = swift_task_alloc();
        *(_QWORD *)(v0 + 576) = v82;
        *(_QWORD *)(v82 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore_clients/SeymourMedia/Workout Plans/Queryin"
                                "g/WorkoutPlanScheduleConflictQuerying.swift";
        *(_QWORD *)(v82 + 24) = 131;
        *(_BYTE *)(v82 + 32) = 2;
        *(_QWORD *)(v82 + 40) = 46;
        *(_QWORD *)(v82 + 48) = v78;
        v106 = (char *)&dword_1EFA5E060 + dword_1EFA5E060;
        v83 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 584) = v83;
        *v83 = v0;
        v83[1] = sub_1CDFE2DC0;
        return ((uint64_t (*)(_QWORD, _QWORD, unint64_t, unint64_t, uint64_t (*)(), uint64_t))v106)(0, 0, 0xD000000000000013, 0x80000001CE0C86B0, sub_1CDFE8C80, v82);
      }
      v89 = *(_QWORD *)(v0 + 240);
      v107 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v44, 0);
      result = sub_1CDFE8844(v43);
      if (result < 0 || (v47 = result, result >= 1 << *(_BYTE *)(v43 + 32)))
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      v48 = 0;
      v49 = v43 + 64;
      v91 = v43 + 80;
      v86 = v43 + 64;
      v87 = v43;
      v84 = v44;
      v85 = v46;
      while (1)
      {
        v50 = v47 >> 6;
        if ((*(_QWORD *)(v49 + 8 * (v47 >> 6)) & (1 << v47)) == 0)
          goto LABEL_68;
        if (*(_DWORD *)(v43 + 36) != v46)
          goto LABEL_69;
        v93 = v48;
        v95 = 1 << v47;
        v52 = *(_QWORD *)(v0 + 264);
        v51 = *(_QWORD *)(v0 + 272);
        v53 = v51 + *(int *)(v89 + 48);
        v100 = *(_QWORD *)(v0 + 256);
        v102 = *(_QWORD *)(v0 + 248);
        v54 = *(void (**)(uint64_t, unint64_t))(v105 + 16);
        v97 = *(_QWORD *)(v0 + 312);
        v54(v51, *(_QWORD *)(v43 + 48) + *(_QWORD *)(v105 + 72) * v47);
        v55 = *(_QWORD *)(v43 + 56);
        v56 = sub_1CE0B5498();
        v57 = v47;
        v58 = v56;
        v59 = *(_QWORD *)(v56 - 8);
        v104 = v57;
        v60 = v55 + *(_QWORD *)(v59 + 72) * v57;
        v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
        v61(v53, v60, v56);
        ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v52, v51, v97);
        v61(v52 + *(int *)(v89 + 48), v53, v58);
        sub_1CDFBA448(v52, v100, &qword_1EFA5E050);
        sub_1CDFB13F8(v51, &qword_1EFA5E050);
        v62 = *(int *)(v89 + 48);
        v63 = v102 + v62;
        v64 = v100 + v62;
        ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v102, v100, v97);
        v61(v63, v64, v58);
        v65 = sub_1CE0B548C();
        v67 = v66;
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v63, v58);
        (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v102, v97);
        sub_1CDFB13F8(v100, &qword_1EFA5E050);
        v45 = v107;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1CDFCF9BC(0, *(_QWORD *)(v107 + 16) + 1, 1);
          v45 = v107;
        }
        v69 = *(_QWORD *)(v45 + 16);
        v68 = *(_QWORD *)(v45 + 24);
        v0 = v98;
        v43 = v87;
        if (v69 >= v68 >> 1)
        {
          result = sub_1CDFCF9BC(v68 > 1, v69 + 1, 1);
          v45 = v107;
        }
        *(_QWORD *)(v45 + 16) = v69 + 1;
        v70 = v45 + 16 * v69;
        *(_QWORD *)(v70 + 32) = v65;
        *(_QWORD *)(v70 + 40) = v67;
        v71 = 1 << *(_BYTE *)(v87 + 32);
        if (v104 >= v71)
          goto LABEL_70;
        v49 = v86;
        v72 = *(_QWORD *)(v86 + 8 * v50);
        if ((v72 & v95) == 0)
          goto LABEL_71;
        v46 = v85;
        if (*(_DWORD *)(v87 + 36) != v85)
          goto LABEL_72;
        v73 = v72 & (-2 << (v104 & 0x3F));
        if (v73)
        {
          v47 = __clz(__rbit64(v73)) | v104 & 0xFFFFFFFFFFFFFFC0;
          v74 = v84;
        }
        else
        {
          v75 = v50 + 1;
          v76 = (unint64_t)(v71 + 63) >> 6;
          v74 = v84;
          if (v50 + 1 >= v76)
            goto LABEL_58;
          v77 = *(_QWORD *)(v86 + 8 * v75);
          if (!v77)
          {
            while (v76 - 2 != v50)
            {
              v77 = *(_QWORD *)(v91 + 8 * v50++);
              if (v77)
              {
                v75 = v50 + 1;
                goto LABEL_57;
              }
            }
LABEL_58:
            v47 = 1 << *(_BYTE *)(v87 + 32);
            goto LABEL_59;
          }
LABEL_57:
          v47 = __clz(__rbit64(v77)) + (v75 << 6);
        }
LABEL_59:
        v48 = v93 + 1;
        if (v93 + 1 == v74)
          goto LABEL_63;
        if ((v47 & 0x8000000000000000) != 0 || (uint64_t)v47 >= v71)
          goto LABEL_73;
      }
    }
    v15 = *(_QWORD *)(v90 + 8 * v14);
    v16 = v8 + 1;
    if (v15)
      goto LABEL_25;
    v16 = v8 + 2;
    if (v8 + 2 >= v92)
      goto LABEL_37;
    v15 = *(_QWORD *)(v90 + 8 * v16);
    if (v15)
      goto LABEL_25;
    v16 = v8 + 3;
    if (v8 + 3 >= v92)
      goto LABEL_37;
    v15 = *(_QWORD *)(v90 + 8 * v16);
    if (v15)
      goto LABEL_25;
    v16 = v8 + 4;
    if (v8 + 4 >= v92)
      goto LABEL_37;
    v15 = *(_QWORD *)(v90 + 8 * v16);
    if (v15)
      goto LABEL_25;
    v16 = v8 + 5;
    if (v8 + 5 >= v92)
      goto LABEL_37;
    v15 = *(_QWORD *)(v90 + 8 * v16);
    if (v15)
      goto LABEL_25;
    v17 = v8 + 6;
    if (v8 + 6 >= v92)
      goto LABEL_37;
    v15 = *(_QWORD *)(v90 + 8 * v17);
    if (!v15)
      break;
    v16 = v8 + 6;
LABEL_25:
    v99 = (v15 - 1) & v15;
    v101 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_26:
    v18 = *(_QWORD *)(v0 + 352);
    v19 = *(_QWORD *)(v0 + 360);
    v21 = *(_QWORD *)(v0 + 328);
    v20 = *(_QWORD *)(v0 + 336);
    v23 = *(_QWORD *)(v0 + 296);
    v22 = *(_QWORD *)(v0 + 304);
    v24 = *(_QWORD *)(v0 + 280);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16))(v19, *(_QWORD *)(v96 + 48) + *(_QWORD *)(v2 + 72) * v13, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v18, v19, v20);
    sub_1CE0B5828();
    sub_1CE0B581C();
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 32);
    v25(v23, v22, v24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = sub_1CDFD1E10(v21);
    v29 = v3[2];
    v30 = (v27 & 1) == 0;
    result = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    v31 = v27;
    if (v3[3] >= result)
    {
      v0 = v98;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1CDFE77D0();
        if ((v31 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      v0 = v98;
      v32 = *(_QWORD *)(v98 + 328);
      sub_1CDFE52D8(result, isUniquelyReferenced_nonNull_native);
      v33 = sub_1CDFD1E10(v32);
      if ((v31 & 1) != (v34 & 1))
        return sub_1CE0B6C98();
      v28 = v33;
      if ((v31 & 1) != 0)
      {
LABEL_4:
        (*(void (**)(unint64_t, _QWORD, _QWORD))(v103 + 40))(v3[7] + *(_QWORD *)(v103 + 72) * v28, *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
        goto LABEL_5;
      }
    }
    v35 = *(_QWORD *)(v0 + 328);
    v36 = *(_QWORD *)(v0 + 312);
    v37 = *(_QWORD *)(v0 + 296);
    v38 = *(_QWORD *)(v0 + 280);
    v3[(v28 >> 6) + 8] |= 1 << v28;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v105 + 16))(v3[6] + *(_QWORD *)(v105 + 72) * v28, v35, v36);
    result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v25)(v3[7] + *(_QWORD *)(v103 + 72) * v28, v37, v38);
    v39 = v3[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_66;
    v3[2] = v41;
LABEL_5:
    v9 = *(_QWORD *)(v0 + 352);
    v11 = *(_QWORD *)(v0 + 328);
    v10 = *(_QWORD *)(v0 + 336);
    v12 = *(_QWORD *)(v0 + 312);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v11, v12);
    v2 = v94;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v9, v10);
    v6 = v99;
    v8 = v101;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v92)
      goto LABEL_37;
    v15 = *(_QWORD *)(v90 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_25;
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE2DC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v3 = (_QWORD *)*v2;
  v3[74] = a1;
  v3[75] = v1;
  swift_task_dealloc();
  if (!v1)
  {
    v4 = (uint64_t)(v3 + 18);
    v5 = (void (*)(uint64_t, uint64_t))v3[65];
    v6 = v3[52];
    v7 = v3[50];
    swift_task_dealloc();
    v5(v6, v7);
    __swift_destroy_boxed_opaque_existential_1Tm(v4);
  }
  return swift_task_switch();
}

uint64_t sub_1CDFE2E64()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
  v2 = *(_QWORD *)(v0 + 472);
  v3 = *(_QWORD *)(v0 + 432);
  v4 = *(_QWORD *)(v0 + 440);
  v5 = *(_QWORD *)(v0 + 416);
  v6 = *(_QWORD *)(v0 + 400);
  swift_task_dealloc();
  v1(v5, v6);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFE2FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int isUniquelyReferenced_nonNull_native;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t (*v35)(unint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 592);
  v2 = *(_QWORD *)(v0 + 440);
  v54 = sub_1CDFE38EC(MEMORY[0x1E0DEE9D8]);
  v48 = v1 + 56;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 56);
  v49 = (unint64_t)(63 - v4) >> 6;
  v51 = v1;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v50 = v0;
  while (1)
  {
    if (v5)
    {
      v52 = (v5 - 1) & v5;
      v53 = v7;
      v10 = __clz(__rbit64(v5)) | (v7 << 6);
    }
    else
    {
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_40;
      if (v11 >= v49)
      {
LABEL_36:
        v42 = *(_QWORD *)(v0 + 568);
        v43 = *(_QWORD *)(v0 + 472);
        swift_release();
        swift_bridgeObjectRelease();
        v44 = sub_1CDFE3A8C(MEMORY[0x1E0DEE9D8]);
        swift_bridgeObjectRetain();
        v45 = sub_1CDFE992C(v44, v42, v54);
        swift_bridgeObjectRelease_n();
        swift_release();
        v46 = swift_task_alloc();
        *(_QWORD *)(v46 + 16) = v43;
        v47 = sub_1CDFE637C((uint64_t)sub_1CDFE9F84, v46, v45);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        v55 = sub_1CDFCD5C8(v47);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 432));
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        return (*(uint64_t (**)(uint64_t))(v0 + 8))(v55);
      }
      v12 = *(_QWORD *)(v48 + 8 * v11);
      v13 = v7 + 1;
      if (!v12)
      {
        v13 = v7 + 2;
        if (v7 + 2 >= v49)
          goto LABEL_36;
        v12 = *(_QWORD *)(v48 + 8 * v13);
        if (!v12)
        {
          v13 = v7 + 3;
          if (v7 + 3 >= v49)
            goto LABEL_36;
          v12 = *(_QWORD *)(v48 + 8 * v13);
          if (!v12)
          {
            v13 = v7 + 4;
            if (v7 + 4 >= v49)
              goto LABEL_36;
            v12 = *(_QWORD *)(v48 + 8 * v13);
            if (!v12)
            {
              v13 = v7 + 5;
              if (v7 + 5 >= v49)
                goto LABEL_36;
              v12 = *(_QWORD *)(v48 + 8 * v13);
              if (!v12)
              {
                v14 = v7 + 6;
                if (v7 + 6 >= v49)
                  goto LABEL_36;
                v12 = *(_QWORD *)(v48 + 8 * v14);
                if (!v12)
                {
                  while (1)
                  {
                    v13 = v14 + 1;
                    if (__OFADD__(v14, 1))
                      goto LABEL_41;
                    if (v13 >= v49)
                      goto LABEL_36;
                    v12 = *(_QWORD *)(v48 + 8 * v13);
                    ++v14;
                    if (v12)
                      goto LABEL_25;
                  }
                }
                v13 = v7 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      v52 = (v12 - 1) & v12;
      v53 = v13;
      v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 528);
    v17 = *(_QWORD *)(v0 + 456);
    v16 = *(_QWORD *)(v0 + 464);
    v18 = *(_QWORD *)(v0 + 448);
    v19 = *(_QWORD *)(v0 + 432);
    v20 = *(_QWORD *)(v2 + 72);
    v21 = v2;
    v22 = *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16);
    v22(v16, *(_QWORD *)(v51 + 48) + v20 * v10, v19);
    v15(v17, v16, v19);
    v23 = sub_1CE0B5258();
    v25 = v24;
    v22(v18, v17, v19);
    v26 = (_QWORD *)v54;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = sub_1CDFD1DAC(v23, v25);
    v30 = *(_QWORD *)(v54 + 16);
    v31 = (v28 & 1) == 0;
    result = v30 + v31;
    if (__OFADD__(v30, v31))
      break;
    v32 = v28;
    if (*(_QWORD *)(v54 + 24) >= result)
    {
      v2 = v21;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1CDFE757C();
        v26 = (_QWORD *)v54;
      }
      v0 = v50;
      v54 = (unint64_t)v26;
      if ((v32 & 1) != 0)
        goto LABEL_4;
    }
    else
    {
      sub_1CDFE4F70(result, isUniquelyReferenced_nonNull_native);
      v33 = sub_1CDFD1DAC(v23, v25);
      if ((v32 & 1) != (v34 & 1))
        return sub_1CE0B6C98();
      v29 = v33;
      v2 = v21;
      v0 = v50;
      v26 = (_QWORD *)v54;
      if ((v32 & 1) != 0)
      {
LABEL_4:
        (*(void (**)(unint64_t, _QWORD, _QWORD))(v2 + 40))(v26[7] + v29 * v20, *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 432));
        goto LABEL_5;
      }
    }
    v35 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v0 + 528);
    v36 = *(_QWORD *)(v0 + 448);
    v37 = *(_QWORD *)(v0 + 432);
    v26[(v29 >> 6) + 8] |= 1 << v29;
    v38 = (uint64_t *)(v26[6] + 16 * v29);
    *v38 = v23;
    v38[1] = v25;
    result = v35(v26[7] + v29 * v20, v36, v37);
    v39 = v26[2];
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
      goto LABEL_39;
    v26[2] = v41;
    swift_bridgeObjectRetain();
LABEL_5:
    v8 = *(_QWORD *)(v0 + 456);
    v9 = *(_QWORD *)(v0 + 432);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v8, v9);
    v5 = v52;
    v7 = v53;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE3514()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 440) + 8))(*(_QWORD *)(v0 + 472), *(_QWORD *)(v0 + 432));
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 104);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFE3648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CDFE365C(a1, sub_1CDFD0128, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93B68], a2);
}

uint64_t sub_1CDFE365C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  result = a2();
  if ((v9 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v8)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v10 = a3(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 1;
  }
  else
  {
    sub_1CDFE87B0(result, v8, a1, a3, a4);
    v10 = a3(0);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
    v12 = a4;
    v13 = 0;
  }
  return v11(v12, v13, 1, v10);
}

uint64_t sub_1CDFE370C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CDFE365C(a1, (uint64_t (*)(void))sub_1CDFD0128, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92F30], a2);
}

uint64_t sub_1CDFE3720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CDFE365C(a1, sub_1CDFD0128, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], a2);
}

unint64_t sub_1CDFE3734(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E118);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E110);
  v6 = sub_1CE0B6B54();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CDFB1434(v12, (uint64_t)v5, &qword_1EFA5E118);
    result = sub_1CDFD1E10((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CE0B509C();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_1CE0B5204();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CDFE38EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E100);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0F8);
  v6 = sub_1CE0B6B54();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CDFB1434(v12, (uint64_t)v5, &qword_1EFA5E100);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1CDFD1DAC(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_1CE0B530C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CDFE3A8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0F0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0E0);
  v6 = sub_1CE0B6B54();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1CDFB1434(v12, (uint64_t)v5, &qword_1EFA5E0F0);
    result = sub_1CDFD1E10((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_1CE0B509C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = (_QWORD *)(v7[7] + 16 * v16);
    v20 = *((_QWORD *)v9 + 1);
    *v19 = *(_QWORD *)v9;
    v19[1] = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CDFE3C28(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E090);
  v2 = sub_1CE0B6B54();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1CDFB1434(v6, (uint64_t)&v15, &qword_1EFA5E098);
    v7 = v15;
    v8 = v16;
    result = sub_1CDFD1DAC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = sub_1CDFBA448((uint64_t)&v17, v3[7] + 32 * result, &qword_1ED8F10C0);
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE3D70(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E120);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B5204();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1CDFB13F8(a1, &qword_1EFA5E120);
    sub_1CE0B229C(a2, v8);
    v13 = sub_1CE0B509C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1CDFB13F8((uint64_t)v8, &qword_1EFA5E120);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CDFE6EC8((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1CE0B509C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1CDFE3EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CDFC3290((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1CDFE7050(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CDFB13F8(a1, &qword_1EFA5E080);
    sub_1CE0B2420(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1CDFB13F8((uint64_t)v9, &qword_1EFA5E080);
  }
}

uint64_t sub_1CDFE3FD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0E8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  v7 = a2[1];
  v9 = sub_1CE0B509C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, a1, v9);
  v10 = &v6[*(int *)(v4 + 48)];
  *(_QWORD *)v10 = v8;
  *((_QWORD *)v10 + 1) = v7;
  swift_bridgeObjectRetain();
  if (v8 == sub_1CE0B5288() && v7 == v11)
    v12 = 1;
  else
    v12 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  sub_1CDFB13F8((uint64_t)v6, &qword_1EFA5E0E8);
  return v12 & 1;
}

uint64_t sub_1CDFE40E8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  os_log_type_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v41 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E90);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v39 = v12;
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CDFBBCDC(0x65uLL);
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v15 = sub_1CE0B6080();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F1058);
  v16 = sub_1CE0B6068();
  v17 = sub_1CE0B6734();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v38 = a2;
    v19 = v18;
    v20 = swift_slowAlloc();
    v37 = a6;
    v35 = v20;
    v42 = v14;
    v43 = v20;
    *(_DWORD *)v19 = 134218498;
    v34 = v14;
    v36 = v13;
    sub_1CE0B68F0();
    *(_WORD *)(v19 + 12) = 2080;
    v21 = sub_1CE0B6A1C();
    v33 = a4;
    v42 = sub_1CDFC7270(v21, v22, &v43);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    v42 = a5;
    v14 = v34;
    v13 = v36;
    sub_1CE0B68F0();
    v23 = v17;
    v24 = v33;
    _os_log_impl(&dword_1CDFAA000, v16, v23, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v25, -1, -1);
    v26 = v19;
    a2 = v38;
    MEMORY[0x1D17C092C](v26, -1, -1);

  }
  else
  {

    v24 = a4;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v40, v10);
  v27 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v14;
  *(_QWORD *)(v28 + 24) = a2;
  *(_QWORD *)(v28 + 32) = v41;
  *(_BYTE *)(v28 + 40) = v24;
  *(_QWORD *)(v28 + 48) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0F70);
  v29 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1CDFEA810;
  *(_QWORD *)(v30 + 24) = v28;
  swift_retain();
  v29(sub_1CDFEA868, v30);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1CDFE4418(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  os_log_type_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v30;
  uint64_t v32;
  int v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v40 = a1;
  v41 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v39 = v12;
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CDFBBCDC(0x65uLL);
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v15 = sub_1CE0B6080();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F1058);
  v16 = sub_1CE0B6068();
  v17 = sub_1CE0B6734();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v38 = a2;
    v19 = v18;
    v20 = swift_slowAlloc();
    v37 = a6;
    v35 = v20;
    v42 = v14;
    v43 = v20;
    *(_DWORD *)v19 = 134218498;
    v34 = v14;
    v36 = v13;
    sub_1CE0B68F0();
    *(_WORD *)(v19 + 12) = 2080;
    v21 = sub_1CE0B6A1C();
    v33 = a4;
    v42 = sub_1CDFC7270(v21, v22, &v43);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    v42 = a5;
    v14 = v34;
    v13 = v36;
    sub_1CE0B68F0();
    v23 = v17;
    v24 = v33;
    _os_log_impl(&dword_1CDFAA000, v16, v23, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v19, 0x20u);
    v25 = v35;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v25, -1, -1);
    v26 = v19;
    a2 = v38;
    MEMORY[0x1D17C092C](v26, -1, -1);

  }
  else
  {

    v24 = a4;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v40, v10);
  v27 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = v14;
  *(_QWORD *)(v28 + 24) = a2;
  *(_QWORD *)(v28 + 32) = v41;
  *(_BYTE *)(v28 + 40) = v24;
  *(_QWORD *)(v28 + 48) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v13, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DE08);
  v29 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1CDFEA0A8;
  *(_QWORD *)(v30 + 24) = v28;
  swift_retain();
  v29(sub_1CDFEA0FC, v30);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1CDFE4748(void *a1, char a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v12;
  uint64_t v13;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v4 = sub_1CE0B6080();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1058);
  v5 = sub_1CE0B6068();
  v6 = sub_1CE0B6734();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 134218498;
    sub_1CE0B68F0();
    *(_WORD *)(v7 + 12) = 2080;
    v9 = sub_1CE0B6A1C();
    sub_1CDFC7270(v9, v10, &v13);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2048;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v5, v6, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v8, -1, -1);
    MEMORY[0x1D17C092C](v7, -1, -1);
  }

  v13 = (uint64_t)a1;
  if ((a2 & 1) != 0)
  {
    v12 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E90);
    return sub_1CE0B6500();
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E90);
    return sub_1CE0B650C();
  }
}

uint64_t sub_1CDFE498C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a7;
  LODWORD(v33) = a5;
  v31 = a3;
  v32 = a4;
  v10 = sub_1CE0B41D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E028);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v17 = sub_1CE0B6080();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED8F1058);
  v18 = sub_1CE0B6068();
  v19 = sub_1CE0B6734();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v30 = v11;
    v21 = v20;
    v28 = swift_slowAlloc();
    v35 = a2;
    v36 = v28;
    *(_DWORD *)v21 = 134218498;
    sub_1CE0B68F0();
    *(_WORD *)(v21 + 12) = 2080;
    v29 = a1;
    v22 = sub_1CE0B6A1C();
    v33 = a6;
    v35 = sub_1CDFC7270(v22, v23, &v36);
    a1 = v29;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2048;
    v35 = v33;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v18, v19, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v21, 0x20u);
    v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v24, -1, -1);
    v25 = v21;
    v11 = v30;
    MEMORY[0x1D17C092C](v25, -1, -1);
  }

  sub_1CDFB1434(a1, (uint64_t)v16, &qword_1EFA5E028);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v36 = *v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A8);
    return sub_1CE0B6500();
  }
  else
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v16, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A8);
    return sub_1CE0B650C();
  }
}

uint64_t sub_1CDFE4C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;

  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v8 = (_QWORD *)swift_task_alloc();
    v6[16] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0FA8);
    *v8 = v6;
    v8[1] = sub_1CDFE4D94;
    return sub_1CE0B6C80();
  }
  else
  {
    if (a1)
    {
      swift_getObjectType();
      sub_1CE0B64DC();
    }
    return swift_task_switch();
  }
}

uint64_t sub_1CDFE4D94()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return (*(uint64_t (**)(_QWORD))(v3 + 8))(*(_QWORD *)(v2 + 80));
}

uint64_t sub_1CDFE4DF8()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void (*)(uint64_t))v0[14];
  v0[7] = v0 + 11;
  v0[2] = v0;
  v0[3] = sub_1CDFE4F00;
  swift_continuation_init();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E90);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = swift_task_alloc();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0FA8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  sub_1CE0B64F4();
  v1(v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  return swift_continuation_await();
}

uint64_t sub_1CDFE4F00()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (!*(_QWORD *)(v1 + 48))
    return (*(uint64_t (**)(_QWORD))(v1 + 8))(*(_QWORD *)(v1 + 88));
  swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1CDFE4F70(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_1CE0B530C();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0F8);
  v43 = a2;
  v8 = sub_1CE0B6B48();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_1CE0B6D34();
      sub_1CE0B62CC();
      result = sub_1CE0B6D64();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_1CDFE52D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1CE0B5204();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1CE0B509C();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E110);
  v11 = sub_1CE0B6B48();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932F0]);
    result = sub_1CE0B6230();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1CDFE56D0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_1CE0B509C();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0E0);
  v44 = a2;
  v9 = sub_1CE0B6B48();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v28;
      v29 = v28[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v31;
      v29 = v31[1];
      swift_bridgeObjectRetain();
    }
    sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932F0]);
    result = sub_1CE0B6230();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1CDFE5A7C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E088);
  v37 = a2;
  v6 = sub_1CE0B6B48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_1CDFC3290(v25, (uint64_t)v38);
    }
    else
    {
      sub_1CDFAC5C8((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1CE0B6D34();
    sub_1CE0B62CC();
    result = sub_1CE0B6D64();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_1CDFC3290(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CDFE5DA0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  __int16 v27;
  uint64_t v28;
  _QWORD *v29;
  __int128 v30;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0058);
  result = sub_1CE0B6B48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v29 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v12)
          goto LABEL_33;
        v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v12)
            goto LABEL_33;
          v21 = v29[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v2;
                goto LABEL_40;
              }
              v28 = 1 << *(_BYTE *)(v5 + 32);
              if (v28 >= 64)
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v29 = -1 << v28;
              v3 = v2;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_33;
                v21 = v29[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_WORD *)(*(_QWORD *)(v5 + 48) + 2 * v19);
      v30 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_1CE0B6D34();
      sub_1CE0B6D40();
      result = sub_1CE0B6D64();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_WORD *)(*(_QWORD *)(v7 + 48) + 2 * v17) = v27;
      *(_OWORD *)(*(_QWORD *)(v7 + 56) + 16 * v17) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v7;
  return result;
}

uint64_t sub_1CDFE6080(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A0);
  v6 = sub_1CE0B6B48();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1CDFB96B0(v24, v35);
      }
      else
      {
        sub_1CDFC74F8((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1CE0B6D34();
      sub_1CE0B62CC();
      result = sub_1CE0B6D64();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1CDFB96B0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CDFE637C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(char *, _QWORD *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(char *, _QWORD *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1CDFE64EC((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_1CDFE64EC((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x1D17C092C](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_1CDFE64EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, _QWORD *))
{
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, _QWORD *);
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[2];
  uint64_t v37;

  v33 = a4;
  v26 = a2;
  v27 = a1;
  v34 = sub_1CE0B509C();
  v32 = *(_QWORD *)(v34 - 8);
  result = MEMORY[0x1E0C80A78](v34);
  v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v35 = (_QWORD *)a3;
  v8 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v30 = (unint64_t)(v9 + 63) >> 6;
  v12 = v31;
  v13 = v32;
  v14 = v34;
  while (v11)
  {
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v16 = v15 | (v7 << 6);
LABEL_17:
    v20 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v12, v35[6] + *(_QWORD *)(v13 + 72) * v16, v14);
    v21 = (_QWORD *)(v20[7] + 16 * v16);
    v22 = v21[1];
    v36[0] = *v21;
    v36[1] = v22;
    swift_bridgeObjectRetain();
    v23 = v37;
    v24 = v33(v12, v36);
    v37 = v23;
    if (v23)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v12, v14);
    }
    v25 = v24;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v12, v14);
    if ((v25 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v28++, 1);
      if (v17)
        goto LABEL_31;
    }
  }
  v17 = __OFADD__(v7++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v7 >= v30)
    return sub_1CDFE6780(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v7);
  if (v18)
  {
LABEL_16:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
    goto LABEL_17;
  }
  v19 = v7 + 1;
  if (v7 + 1 >= v30)
    return sub_1CDFE6780(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v7 + 2;
  if (v7 + 2 >= v30)
    return sub_1CDFE6780(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v7 + 3;
  if (v7 + 3 >= v30)
    return sub_1CDFE6780(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v7 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v30)
      return sub_1CDFE6780(v27, v26, v28, v35);
    v18 = *(_QWORD *)(v29 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE6780(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v47 = sub_1CE0B509C();
  v42 = *(_QWORD *)(v47 - 8);
  v8 = MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v38 - v10;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0E0);
  result = sub_1CE0B6B54();
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v40 = a4;
  v16 = v47;
  while (1)
  {
    if (v13)
    {
      v43 = (v13 - 1) & v13;
      v44 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v39)
        return v12;
      v19 = v38[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v39)
          return v12;
        v19 = v38[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v39)
            return v12;
          v19 = v38[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v39)
              return v12;
            v19 = v38[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v39)
                  return v12;
                v19 = v38[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v43 = (v19 - 1) & v19;
      v44 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v41;
    v23 = v42;
    v24 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v41, a4[6] + v24 * v17, v16);
    v25 = (uint64_t *)(a4[7] + 16 * v17);
    v26 = v25[1];
    v45 = *v25;
    v27 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v27(v46, v22, v16);
    sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932F0]);
    swift_bridgeObjectRetain();
    result = sub_1CE0B6230();
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(_QWORD *)(v12 + 48) + v31 * v24, v46, v47);
    v36 = (_QWORD *)(*(_QWORD *)(v12 + 56) + 16 * v31);
    *v36 = v45;
    v36[1] = v26;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v40;
    v13 = v43;
    v14 = v44;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE6ADC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v57 = sub_1CE0B5498();
  v51 = *(_QWORD *)(v57 - 8);
  v8 = MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v44 - v10;
  v11 = sub_1CE0B509C();
  v49 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v44 - v14;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E108);
  result = sub_1CE0B6B54();
  v16 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v46 = a4;
  v47 = result;
  v20 = v50;
  while (1)
  {
    v54 = a3;
    if (v17)
    {
      v52 = (v17 - 1) & v17;
      v53 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v16;
      v23 = v44[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v45)
          return v16;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v45)
            return v16;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v45)
              return v16;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v16;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v52 = (v23 - 1) & v23;
      v53 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v48;
    v27 = v49;
    v28 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v48, a4[6] + v28 * v21, v11);
    v29 = a4[7];
    v30 = v51;
    v31 = *(_QWORD *)(v51 + 72);
    v32 = v29 + v31 * v21;
    v33 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v20, v32, v57);
    v34 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v34(v55, v26, v11);
    v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v35(v56, v20, v33);
    v16 = v47;
    sub_1CDFB1900((unint64_t *)&unk_1EFA64C70, (uint64_t (*)(uint64_t))MEMORY[0x1E0D932E0], MEMORY[0x1E0D932F0]);
    result = sub_1CE0B6230();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v19 + 8 * (v37 >> 6))) != 0)
    {
      v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v19 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v42 = v38 == v41;
        if (v38 == v41)
          v38 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v19 + 8 * v38);
      }
      while (v43 == -1);
      v39 = __clz(__rbit64(~v43)) + (v38 << 6);
    }
    *(_QWORD *)(v19 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v34((char *)(*(_QWORD *)(v16 + 48) + v39 * v28), v55, v11);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(*(_QWORD *)(v16 + 56) + v39 * v31, v56, v57);
    ++*(_QWORD *)(v16 + 16);
    a3 = v54 - 1;
    if (__OFSUB__(v54, 1))
      break;
    a4 = v46;
    v17 = v52;
    v18 = v53;
    if (v54 == 1)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE6EC8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1CE0B509C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1CDFD1E10(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1CE0B5204();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1CDFE77D0();
      goto LABEL_7;
    }
    sub_1CDFE52D8(v17, a3 & 1);
    v24 = sub_1CDFD1E10(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1CDFE73F0(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

uint64_t sub_1CDFE7050(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CDFD1DAC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1Tm(v19);
        return sub_1CDFC3290(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CDFE7D14();
      goto LABEL_7;
    }
    sub_1CDFE5A7C(v15, a4 & 1);
    v21 = sub_1CDFD1DAC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CDFE74A8(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

_OWORD *sub_1CDFE7184(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1CDFD1DAC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        return sub_1CDFB96B0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1CDFE85CC();
      goto LABEL_7;
    }
    sub_1CDFE6080(v15, a4 & 1);
    v21 = sub_1CDFD1DAC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1CDFE7514(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1CE0B6C98();
  __break(1u);
  return result;
}

uint64_t sub_1CDFE72B4(uint64_t a1, uint64_t a2, __int16 a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1CDFC20F4(a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1CDFE8280();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_QWORD *)(v18[7] + 16 * v12);
      result = swift_release();
      *v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_WORD *)(v18[6] + 2 * v12) = a3;
    v21 = (_QWORD *)(v18[7] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_1CDFE5DA0(result, a4 & 1);
  result = sub_1CDFC20F4(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

uint64_t sub_1CDFE73F0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1CE0B509C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_1CE0B5204();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1CDFE74A8(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1CDFC3290(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1CDFE7514(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1CDFB96B0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

void *sub_1CDFE757C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v33 = sub_1CE0B530C();
  v2 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v32 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0F8);
  v4 = *v0;
  v5 = sub_1CE0B6B3C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v6;
    return result;
  }
  v29 = v1;
  result = (void *)(v5 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  v30 = v4 + 64;
  v10 = 0;
  v11 = *(_QWORD *)(v4 + 16);
  v34 = v6;
  *(_QWORD *)(v6 + 16) = v11;
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v31 = (unint64_t)(v12 + 63) >> 6;
  v15 = v33;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v10 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_30;
    if (v10 >= v31)
    {
LABEL_27:
      result = (void *)swift_release();
      v1 = v29;
      v6 = v34;
      goto LABEL_28;
    }
    v27 = *(_QWORD *)(v30 + 8 * v10);
    if (!v27)
      break;
LABEL_24:
    v14 = (v27 - 1) & v27;
    v17 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v2 + 72) * v17;
    v23 = v32;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v32, *(_QWORD *)(v4 + 56) + v22, v15);
    v24 = v34;
    v25 = (_QWORD *)(*(_QWORD *)(v34 + 48) + v18);
    *v25 = v21;
    v25[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v24 + 56) + v22, v23, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v10 + 1;
  if (v10 + 1 >= v31)
    goto LABEL_27;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    ++v10;
    goto LABEL_24;
  }
  v6 = v34;
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v31)
    {
      result = (void *)swift_release();
      v1 = v29;
      goto LABEL_28;
    }
    v27 = *(_QWORD *)(v30 + 8 * v10);
    ++v28;
    if (v27)
      goto LABEL_24;
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

char *sub_1CDFE77D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;

  v1 = v0;
  v37 = sub_1CE0B5204();
  v33 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1CE0B509C();
  v32 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E110);
  v4 = *v0;
  v5 = sub_1CE0B6B3C();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = (char *)swift_release();
LABEL_25:
    *v1 = v6;
    return result;
  }
  result = (char *)(v5 + 64);
  v8 = (char *)(v4 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v30 = v1;
  v31 = v4 + 64;
  if (v6 != v4 || result >= &v8[8 * v9])
    result = (char *)memmove(result, v8, 8 * v9);
  v10 = 0;
  v11 = *(_QWORD *)(v4 + 16);
  v38 = v4;
  v39 = v6;
  *(_QWORD *)(v6 + 16) = v11;
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v40 = (unint64_t)(v12 + 63) >> 6;
  v15 = v32;
  v16 = v33;
  v17 = v34;
  v18 = v36;
  v19 = v6;
  while (1)
  {
    if (v14)
    {
      v41 = (v14 - 1) & v14;
      v20 = __clz(__rbit64(v14)) | (v10 << 6);
      v21 = v38;
      goto LABEL_9;
    }
    v27 = __OFADD__(v10++, 1);
    v21 = v38;
    if (v27)
      goto LABEL_27;
    if (v10 >= v40)
    {
LABEL_24:
      result = (char *)swift_release();
      v1 = v30;
      v6 = v39;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    if (!v28)
      break;
LABEL_21:
    v41 = (v28 - 1) & v28;
    v20 = __clz(__rbit64(v28)) + (v10 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v15 + 72) * v20;
    v23 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v17, *(_QWORD *)(v21 + 48) + v22, v35);
    v24 = *(_QWORD *)(v16 + 72) * v20;
    v25 = *(_QWORD *)(v21 + 56) + v24;
    v26 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, v25, v37);
    (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 48) + v22, v17, v23);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v19 + 56) + v24, v18, v26);
    v14 = v41;
  }
  v29 = v10 + 1;
  if (v10 + 1 >= v40)
    goto LABEL_24;
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    ++v10;
    goto LABEL_21;
  }
  v6 = v39;
  while (1)
  {
    v10 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v10 >= v40)
    {
      result = (char *)swift_release();
      v1 = v30;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v31 + 8 * v10);
    ++v29;
    if (v28)
      goto LABEL_21;
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1CDFE7AA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  const void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_1CE0B509C();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0E0);
  v32 = v0;
  v3 = *v0;
  v4 = sub_1CE0B6B3C();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v34, 8 * v8);
    v6 = v38;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v37 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v35;
  v14 = v36;
  v16 = v38;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v10 + 1;
    v19 = v37;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *((_QWORD *)v34 + v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 16 * v18;
    v22 = (uint64_t *)(*(_QWORD *)(v19 + 56) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = (_QWORD *)(*(_QWORD *)(v16 + 56) + v21);
    *v25 = v23;
    v25[1] = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_28;
  }
  v27 = *((_QWORD *)v34 + v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CDFE7D14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E088);
  v2 = *v0;
  v3 = sub_1CE0B6B3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1CDFAC5C8(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1CDFC3290(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1CDFE7EFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8EF720);
  v2 = *v0;
  v3 = sub_1CE0B6B3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CDFE809C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  _OWORD v24[2];
  _OWORD v25[2];
  uint64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0D0);
  v2 = *v0;
  v3 = sub_1CE0B6B3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    sub_1CDFB92E8(*(_QWORD *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    v17 = 32 * v15;
    sub_1CDFC74F8(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v24);
    v18 = *(_QWORD *)(v4 + 48) + v16;
    v19 = v25[0];
    v20 = v25[1];
    *(_QWORD *)(v18 + 32) = v26;
    *(_OWORD *)v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    result = sub_1CDFB96B0(v24, (_OWORD *)(*(_QWORD *)(v4 + 56) + v17));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CDFE8280()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  __int128 v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0058);
  v2 = *v0;
  v3 = sub_1CE0B6B3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 2 * v15;
    v17 = *(_WORD *)(*(_QWORD *)(v2 + 48) + 2 * v15);
    v18 = 16 * v15;
    v19 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v18);
    *(_WORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CDFE8428()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F15A0);
  v2 = *v0;
  v3 = sub_1CE0B6B3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + 16 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + 16 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1CDFE85CC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A0);
  v2 = *v0;
  v3 = sub_1CE0B6B3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1CDFC74F8(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1CDFB96B0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE87B0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  if (result < 0 || (v5 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v7 = *(_QWORD *)(a3 + 48);
    v8 = a4(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a5, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v5, v8);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE8844(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1CDFE88CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0050);
    v3 = sub_1CE0B69EC();
    v4 = 0;
    v5 = v3 + 56;
    v29 = v1;
    v30 = a1 + 32;
    while (1)
    {
      v6 = *(_BYTE *)(v30 + v4);
      sub_1CE0B6D34();
      sub_1CE0B4490();
      sub_1CE0B62CC();
      swift_bridgeObjectRelease();
      result = sub_1CE0B6D64();
      v8 = -1 << *(_BYTE *)(v3 + 32);
      v9 = result & ~v8;
      v10 = v9 >> 6;
      v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
      v12 = 1 << v9;
      if (((1 << v9) & v11) != 0)
      {
        v13 = sub_1CE0B4490();
        v15 = v14;
        if (v13 == sub_1CE0B4490() && v15 == v16)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
          goto LABEL_4;
        }
        v18 = sub_1CE0B6C50();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v18 & 1) != 0)
          goto LABEL_4;
        v19 = ~v8;
        while (1)
        {
          v9 = (v9 + 1) & v19;
          v10 = v9 >> 6;
          v11 = *(_QWORD *)(v5 + 8 * (v9 >> 6));
          v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0)
            break;
          v20 = sub_1CE0B4490();
          v22 = v21;
          if (v20 == sub_1CE0B4490() && v22 == v23)
            goto LABEL_3;
          v25 = sub_1CE0B6C50();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v25 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v10) = v12 | v11;
      *(_BYTE *)(*(_QWORD *)(v3 + 48) + v9) = v6;
      v26 = *(_QWORD *)(v3 + 16);
      v27 = __OFADD__(v26, 1);
      v28 = v26 + 1;
      if (v27)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v28;
LABEL_4:
      if (++v4 == v29)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1CDFE8AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA63CA0);
    v3 = sub_1CE0B69EC();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1CE0B6D34();
      swift_bridgeObjectRetain();
      sub_1CE0B62CC();
      result = sub_1CE0B6D64();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1CE0B6C50(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1CE0B6C50();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1CDFE8C84(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  unint64_t v23;
  BOOL v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  _QWORD *v60;

  v43 = a2;
  v51 = a5;
  v53 = a4;
  v44 = a1;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E050);
  v6 = MEMORY[0x1E0C80A78](v50);
  v59 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v43 - v8;
  v9 = sub_1CE0B5498();
  v60 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B509C();
  v12 = *(_QWORD *)(v11 - 8);
  result = MEMORY[0x1E0C80A78](v11);
  v56 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v52 = (_QWORD *)a3;
  v16 = *(_QWORD *)(a3 + 64);
  v45 = 0;
  v46 = a3 + 64;
  v17 = 1 << *(_BYTE *)(a3 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v47 = (unint64_t)(v17 + 63) >> 6;
  v49 = v12;
  v20 = v56;
  while (1)
  {
    if (v19)
    {
      v54 = (v19 - 1) & v19;
      v55 = v15;
      v23 = __clz(__rbit64(v19)) | (v15 << 6);
      goto LABEL_18;
    }
    v24 = __OFADD__(v15, 1);
    v25 = v15 + 1;
    if (v24)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v47)
      return sub_1CDFE6ADC(v44, v43, v45, v52);
    v26 = *(_QWORD *)(v46 + 8 * v25);
    if (!v26)
      break;
LABEL_17:
    v54 = (v26 - 1) & v26;
    v55 = v25;
    v23 = __clz(__rbit64(v26)) + (v25 << 6);
LABEL_18:
    v28 = v52;
    v29 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    v29(v20, v52[6] + *(_QWORD *)(v12 + 72) * v23, v11);
    v30 = v28[7];
    v31 = v60[9];
    v48 = v23;
    v32 = v30 + v31 * v23;
    v33 = (void (*)(char *, uint64_t, uint64_t))v60[2];
    v34 = v57;
    v33(v57, v32, v9);
    v35 = v50;
    v36 = &v58[*(int *)(v50 + 48)];
    v29(v58, (unint64_t)v20, v11);
    v33(v36, (uint64_t)v34, v9);
    v37 = &v59[*(int *)(v35 + 48)];
    ((void (*)(char *))v29)(v59);
    v33(v37, (uint64_t)v36, v9);
    v38 = sub_1CE0B548C();
    v40 = v39;
    v41 = (void (*)(char *, uint64_t))v60[1];
    v41(v37, v9);
    if (v38 == v53 && v40 == v51)
    {
      swift_bridgeObjectRelease();
      sub_1CDFB13F8((uint64_t)v58, &qword_1EFA5E050);
      v12 = v49;
      v42 = *(void (**)(char *, uint64_t))(v49 + 8);
      v42(v59, v11);
      v41(v57, v9);
      result = ((uint64_t (*)(char *, uint64_t))v42)(v56, v11);
      v19 = v54;
      v15 = v55;
    }
    else
    {
      v21 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      sub_1CDFB13F8((uint64_t)v58, &qword_1EFA5E050);
      v12 = v49;
      v22 = *(void (**)(char *, uint64_t))(v49 + 8);
      v22(v59, v11);
      v41(v57, v9);
      result = ((uint64_t (*)(char *, uint64_t))v22)(v56, v11);
      v19 = v54;
      v15 = v55;
      if ((v21 & 1) == 0)
      {
        *(unint64_t *)((char *)v44 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
        v24 = __OFADD__(v45++, 1);
        if (v24)
        {
          __break(1u);
          return sub_1CDFE6ADC(v44, v43, v45, v52);
        }
      }
    }
  }
  v27 = v25 + 1;
  if (v25 + 1 >= v47)
    return sub_1CDFE6ADC(v44, v43, v45, v52);
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
    goto LABEL_16;
  v27 = v25 + 2;
  if (v25 + 2 >= v47)
    return sub_1CDFE6ADC(v44, v43, v45, v52);
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
    goto LABEL_16;
  v27 = v25 + 3;
  if (v25 + 3 >= v47)
    return sub_1CDFE6ADC(v44, v43, v45, v52);
  v26 = *(_QWORD *)(v46 + 8 * v27);
  if (v26)
  {
LABEL_16:
    v25 = v27;
    goto LABEL_17;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v47)
      return sub_1CDFE6ADC(v44, v43, v45, v52);
    v26 = *(_QWORD *)(v46 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE90C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v12 = sub_1CDFE8C84((_QWORD *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    v12 = sub_1CDFE8C84((unint64_t *)v13, v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x1D17C092C](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_1CDFE9284(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  void (*v37)(char *, unint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  int64_t v81;
  char *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;

  v77 = a4;
  v65 = a2;
  v66 = a1;
  v5 = sub_1CE0B5204();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v72 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v64 - v8;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E050);
  v9 = MEMORY[0x1E0C80A78](v76);
  v75 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v64 - v11;
  v86 = sub_1CE0B5498();
  v85 = *(_QWORD **)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CE0B509C();
  v83 = *(_QWORD **)(v15 - 8);
  v84 = v15;
  result = MEMORY[0x1E0C80A78](v15);
  v82 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = 0;
  v78 = (_QWORD *)a3;
  v19 = *(_QWORD *)(a3 + 64);
  v67 = 0;
  v68 = a3 + 64;
  v20 = 1 << *(_BYTE *)(a3 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v69 = (unint64_t)(v20 + 63) >> 6;
  v70 = v14;
  while (1)
  {
    if (v22)
    {
      v80 = (v22 - 1) & v22;
      v81 = v18;
      v30 = __clz(__rbit64(v22)) | (v18 << 6);
      goto LABEL_22;
    }
    v31 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v69)
      return sub_1CDFE6ADC(v66, v65, v67, v78);
    v32 = *(_QWORD *)(v68 + 8 * v31);
    v33 = v18 + 1;
    if (!v32)
    {
      v33 = v18 + 2;
      if (v18 + 2 >= v69)
        return sub_1CDFE6ADC(v66, v65, v67, v78);
      v32 = *(_QWORD *)(v68 + 8 * v33);
      if (!v32)
      {
        v33 = v18 + 3;
        if (v18 + 3 >= v69)
          return sub_1CDFE6ADC(v66, v65, v67, v78);
        v32 = *(_QWORD *)(v68 + 8 * v33);
        if (!v32)
          break;
      }
    }
LABEL_21:
    v80 = (v32 - 1) & v32;
    v81 = v33;
    v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_22:
    v35 = v78;
    v36 = v82;
    v37 = (void (*)(char *, unint64_t, uint64_t))v83[2];
    v38 = v84;
    v37(v82, v78[6] + v83[9] * v30, v84);
    v39 = v35[7];
    v40 = v85[9];
    v79 = v30;
    v41 = (void (*)(char *, unint64_t, uint64_t))v85[2];
    v42 = v86;
    v41(v14, v39 + v40 * v30, v86);
    v43 = v76;
    v44 = &v12[*(int *)(v76 + 48)];
    v37(v12, (unint64_t)v36, v38);
    v41(v44, (unint64_t)v14, v42);
    v45 = *(int *)(v43 + 48);
    v46 = (uint64_t)v75;
    v47 = &v75[v45];
    v37(v75, (unint64_t)v12, v38);
    v41(v47, (unint64_t)v44, v42);
    v48 = v77;
    if (*(_QWORD *)(v77 + 16) && (v49 = sub_1CDFD1E10(v46), (v50 & 1) != 0))
    {
      v51 = *(_QWORD *)(v48 + 56);
      v52 = v12;
      v53 = v46;
      v55 = v72;
      v54 = v73;
      v56 = v74;
      (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v72, v51 + *(_QWORD *)(v73 + 72) * v49, v74);
      v57 = v71;
      (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v71, v55, v56);
      v58 = (void (*)(char *, uint64_t))v85[1];
      v59 = v86;
      v58(v47, v86);
      v60 = (void (*)(uint64_t, uint64_t))v83[1];
      v61 = v53;
      v12 = v52;
      v62 = v84;
      v60(v61, v84);
      LOBYTE(v55) = sub_1CE0B51F8();
      v63 = v57;
      v14 = v70;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v63, v56);
      sub_1CDFB13F8((uint64_t)v12, &qword_1EFA5E050);
      v58(v14, v59);
      result = ((uint64_t (*)(char *, uint64_t))v60)(v82, v62);
      v22 = v80;
      v18 = v81;
      if ((v55 & 1) == 0)
        goto LABEL_5;
    }
    else
    {
      sub_1CDFB13F8((uint64_t)v12, &qword_1EFA5E050);
      v23 = (void (*)(char *, uint64_t))v85[1];
      v24 = v47;
      v25 = v86;
      v23(v24, v86);
      v26 = (void (*)(uint64_t, uint64_t))v83[1];
      v27 = v46;
      v28 = v84;
      v26(v27, v84);
      v23(v14, v25);
      result = ((uint64_t (*)(char *, uint64_t))v26)(v82, v28);
      v22 = v80;
      v18 = v81;
LABEL_5:
      *(unint64_t *)((char *)v66 + ((v79 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v79;
      if (__OFADD__(v67++, 1))
        goto LABEL_29;
    }
  }
  v34 = v18 + 4;
  if (v18 + 4 >= v69)
    return sub_1CDFE6ADC(v66, v65, v67, v78);
  v32 = *(_QWORD *)(v68 + 8 * v34);
  if (v32)
  {
    v33 = v18 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v33 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v33 >= v69)
      return sub_1CDFE6ADC(v66, v65, v67, v78);
    v32 = *(_QWORD *)(v68 + 8 * v33);
    ++v34;
    if (v32)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1CDFE9768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_1CDFE9284((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_1CDFE9284((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1D17C092C](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1CDFE991C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFE40E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1CDFE992C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int isUniquelyReferenced_nonNull_native;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t result;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  void (*v82)(uint64_t, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  int64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;

  v85 = a3;
  v95 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E058);
  MEMORY[0x1E0C80A78](v4);
  v86 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B530C();
  v92 = *(_QWORD *)(v6 - 8);
  v93 = v6;
  MEMORY[0x1E0C80A78](v6);
  v83 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E050);
  v8 = MEMORY[0x1E0C80A78](v94);
  v91 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v100 = (char *)&v79 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v101 = (uint64_t)&v79 - v13;
  MEMORY[0x1E0C80A78](v12);
  v84 = (char *)&v79 - v14;
  v15 = *(_QWORD *)(a2 + 64);
  v80 = a2 + 64;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v81 = (unint64_t)(v16 + 63) >> 6;
  v87 = a2;
  swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v18)
    {
      v97 = (v18 - 1) & v18;
      v98 = v19;
      v20 = __clz(__rbit64(v18)) | (v19 << 6);
      goto LABEL_24;
    }
    v21 = v19 + 1;
    if (__OFADD__(v19, 1))
      goto LABEL_43;
    if (v21 >= v81)
    {
LABEL_41:
      swift_release();
      return v95;
    }
    v22 = *(_QWORD *)(v80 + 8 * v21);
    v23 = v19 + 1;
    if (!v22)
    {
      v23 = v19 + 2;
      if (v19 + 2 >= v81)
        goto LABEL_41;
      v22 = *(_QWORD *)(v80 + 8 * v23);
      if (!v22)
      {
        v23 = v19 + 3;
        if (v19 + 3 >= v81)
          goto LABEL_41;
        v22 = *(_QWORD *)(v80 + 8 * v23);
        if (!v22)
        {
          v23 = v19 + 4;
          if (v19 + 4 >= v81)
            goto LABEL_41;
          v22 = *(_QWORD *)(v80 + 8 * v23);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v97 = (v22 - 1) & v22;
    v98 = v23;
    v20 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_24:
    v25 = v87;
    v26 = *(_QWORD *)(v87 + 48);
    v27 = sub_1CE0B509C();
    v28 = *(char **)(v27 - 8);
    v88 = *((_QWORD *)v28 + 9);
    v99 = v28;
    v29 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v28 + 2);
    v30 = (uint64_t)v84;
    v29(v84, v26 + v88 * v20, v27);
    v31 = *(_QWORD *)(v25 + 56);
    v32 = sub_1CE0B5498();
    v33 = *(_QWORD **)(v32 - 8);
    v34 = v31 + v33[9] * v20;
    v35 = v94;
    v36 = (void (*)(uint64_t, uint64_t, uint64_t))v33[2];
    v36(v30 + *(int *)(v94 + 48), v34, v32);
    v37 = v101;
    sub_1CDFBA448(v30, v101, &qword_1EFA5E050);
    v38 = *(int *)(v35 + 48);
    v39 = &v100[v38];
    v40 = v37 + v38;
    v41 = v27;
    v96 = (void (*)(uint64_t, uint64_t, uint64_t))v29;
    ((void (*)(void))v29)();
    v89 = v40;
    v90 = v36;
    v36((uint64_t)v39, v40, v32);
    v42 = sub_1CE0B548C();
    v44 = v43;
    v45 = (void (*)(char *, uint64_t))v33[1];
    v45(v39, v32);
    if (*(_QWORD *)(v85 + 16))
    {
      v46 = v42;
      v47 = v85;
      v48 = sub_1CDFD1DAC(v46, v44);
      v50 = v92;
      v49 = v93;
      if ((v51 & 1) != 0)
      {
        v52 = *(_QWORD *)(v47 + 56) + *(_QWORD *)(v92 + 72) * v48;
        v53 = (uint64_t)v86;
        (*(void (**)(char *, unint64_t, uint64_t))(v92 + 16))(v86, v52, v93);
        v54 = 0;
      }
      else
      {
        v54 = 1;
        v53 = (uint64_t)v86;
      }
    }
    else
    {
      v54 = 1;
      v53 = (uint64_t)v86;
      v50 = v92;
      v49 = v93;
    }
    v55 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v53, v54, 1, v49);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v53, 1, v49) == 1)
    {
      sub_1CDFB13F8(v53, &qword_1EFA5E058);
      (*((void (**)(char *, uint64_t))v99 + 1))(v100, v41);
    }
    else
    {
      v82 = (void (*)(uint64_t, uint64_t))v45;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v83, v53, v49);
      v56 = (void (*)(char *, uint64_t))*((_QWORD *)v99 + 1);
      v56(v100, v41);
      v57 = (uint64_t)v91;
      v58 = &v91[*(int *)(v94 + 48)];
      v96((uint64_t)v91, v101, v41);
      v99 = v58;
      v90((uint64_t)v58, v89, v32);
      v59 = sub_1CE0B5288();
      v61 = v60;
      v62 = v95;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v102 = v62;
      v65 = sub_1CDFD1E10(v57);
      v66 = *(_QWORD *)(v62 + 16);
      v67 = (v64 & 1) == 0;
      v68 = v66 + v67;
      if (__OFADD__(v66, v67))
      {
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v69 = v64;
      if (*(_QWORD *)(v62 + 24) >= v68)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1CDFE7AA4();
      }
      else
      {
        sub_1CDFE56D0(v68, isUniquelyReferenced_nonNull_native);
        v70 = sub_1CDFD1E10((uint64_t)v91);
        if ((v69 & 1) != (v71 & 1))
          goto LABEL_46;
        v65 = v70;
      }
      v95 = v102;
      if ((v69 & 1) != 0)
      {
        v72 = (uint64_t *)(*(_QWORD *)(v102 + 56) + 16 * v65);
        swift_bridgeObjectRelease();
        *v72 = v59;
        v72[1] = v61;
      }
      else
      {
        *(_QWORD *)(v102 + 8 * (v65 >> 6) + 64) |= 1 << v65;
        v96(*(_QWORD *)(v95 + 48) + v65 * v88, (uint64_t)v91, v55);
        v73 = v95;
        v74 = (uint64_t *)(*(_QWORD *)(v95 + 56) + 16 * v65);
        *v74 = v59;
        v74[1] = v61;
        v75 = *(_QWORD *)(v73 + 16);
        v76 = __OFADD__(v75, 1);
        v77 = v75 + 1;
        if (v76)
          goto LABEL_44;
        *(_QWORD *)(v73 + 16) = v77;
      }
      swift_bridgeObjectRelease();
      v56(v91, v55);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v83, v93);
      v82((uint64_t)v99, v32);
    }
    v18 = v97;
    v19 = v98;
    sub_1CDFB13F8(v101, &qword_1EFA5E050);
  }
  v24 = v19 + 5;
  if (v19 + 5 >= v81)
    goto LABEL_41;
  v22 = *(_QWORD *)(v80 + 8 * v24);
  if (v22)
  {
    v23 = v19 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v23 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v23 >= v81)
      goto LABEL_41;
    v22 = *(_QWORD *)(v80 + 8 * v23);
    ++v24;
    if (v22)
      goto LABEL_23;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1CE0B6C98();
  __break(1u);
  return result;
}

uint64_t sub_1CDFE9F84(uint64_t a1, uint64_t *a2)
{
  return sub_1CDFE3FD0(a1, a2) & 1;
}

uint64_t dispatch thunk of WorkoutPlanScheduleConflictQuerying.workoutPlanClient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WorkoutPlanScheduleConflictQuerying.catalogClient.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WorkoutPlanScheduleConflictQuerying.queryExistingModalityReferences(for:workout:on:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 24)
                                                                                     + *(_QWORD *)(a6 + 24));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_1CDFEA04C;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1CDFEA04C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1CDFEA09C()
{
  return objectdestroyTm_0(&qword_1EFA5E0A8);
}

uint64_t sub_1CDFEA0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0A8) - 8) + 80);
  return sub_1CDFE498C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), v1 + ((v3 + 56) & ~v3));
}

uint64_t sub_1CDFEA0FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFF3348(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1CDFEA104(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F01E0);
    v3 = sub_1CE0B69EC();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1CE0B6D34();
      sub_1CE0B6D40();
      result = sub_1CE0B6D64();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(unsigned __int8 *)(v14 + v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_BYTE *)(v14 + v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_1CDFEA244(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0C8);
      v3 = sub_1CE0B69EC();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1CE0B6B30();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v39 = v1;
    while (1)
    {
      v8 = MEMORY[0x1D17BFD98](v7, v1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_1CE0B6848();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_1CDFC8588();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_1CE0B6854();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v1 = v39;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1CE0B6854();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v39;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v40 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v1 + 32 + 8 * v24);
    v26 = sub_1CE0B6848();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1CDFC8588();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1CE0B6854();

      if ((v33 & 1) != 0)
        goto LABEL_24;
      v34 = ~v27;
      v28 = (v28 + 1) & v34;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if ((v30 & (1 << v28)) != 0)
      {
        while (1)
        {
          v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
          v36 = sub_1CE0B6854();

          if ((v36 & 1) != 0)
            break;
          v28 = (v28 + 1) & v34;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v4 = v41;
        goto LABEL_25;
      }
LABEL_32:
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_1CDFEA59C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1CE0B3E24();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E0B0);
    v10 = sub_1CE0B69EC();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1CDFB1900(&qword_1EFA5E0B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      v14 = sub_1CE0B6230();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1CDFB1900(&qword_1EFA5E0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v20 = sub_1CE0B6260();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1CDFEA804()
{
  return objectdestroyTm_0(&qword_1ED8F0E90);
}

uint64_t sub_1CDFEA810(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E90);
  return sub_1CDFE4748(*(void **)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1CDFEA868(uint64_t result)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  char v3;
  uint64_t v4;
  char v5;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v3 = *(_BYTE *)(result + 8);
  v4 = *(_QWORD *)result;
  v5 = v3;
  if (v2)
    return v2(&v4);
  return result;
}

BOOL static NetworkInterfaceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkInterfaceType.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t NetworkInterfaceType.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

BOOL sub_1CDFEA928(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_1CDFEA940()
{
  unint64_t result;

  result = qword_1EFA5E128[0];
  if (!qword_1EFA5E128[0])
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for NetworkInterfaceType, &type metadata for NetworkInterfaceType);
    atomic_store(result, qword_1EFA5E128);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkInterfaceType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NetworkInterfaceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CDFEAA60 + 4 * byte_1CE0BBD65[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CDFEAA94 + 4 * byte_1CE0BBD60[v4]))();
}

uint64_t sub_1CDFEAA94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CDFEAA9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CDFEAAA4);
  return result;
}

uint64_t sub_1CDFEAAB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CDFEAAB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CDFEAABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CDFEAAC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkInterfaceType()
{
  return &type metadata for NetworkInterfaceType;
}

void static ActiveWorkoutPlanUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ActiveWorkoutPlanUpdated()
{
  return &type metadata for ActiveWorkoutPlanUpdated;
}

uint64_t PlaylistsUpdated.changeset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4D18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t PlaylistsUpdated.init(changeset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static PlaylistsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PlaylistsUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4D18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PlaylistsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PlaylistsUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFEAD14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PlaylistsUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFEAD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D18();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

_QWORD *UpNextQueueClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for UpNextQueueClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CDFEB14C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t UpNextQueueClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFEB22C);
}

uint64_t sub_1CDFEAED8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v2 = sub_1CE0B6080();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
    v3._countAndFlagsBits = 0xD000000000000070;
    v3._object = (void *)0x80000001CE0C86D0;
    v4._object = (void *)0x80000001CE0C87C0;
    v4._countAndFlagsBits = 0xD00000000000001FLL;
    Logger.trace(file:function:)(v3, v4);
    v5 = *(_QWORD *)(v1 + 48);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(ObjectType, &type metadata for UpNextQueueItemsUpdated, &protocol witness table for UpNextQueueItemsUpdated, ObjectType, v5);
    return swift_release();
  }
  return result;
}

uint64_t UpNextQueueClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t UpNextQueueClient.processUpNextQueueUpdates(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  __int16 v14;

  if (qword_1EFA5D558 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63558);
  v4._countAndFlagsBits = 0xD000000000000070;
  v4._object = (void *)0x80000001CE0C86D0;
  v5._object = (void *)0x80000001CE0C8770;
  v5._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 286;
  v13 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 16);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E178);
  v10 = sub_1CDFC889C(&qword_1EFA5E180, &qword_1EFA5E178, MEMORY[0x1E0D92618]);
  v11 = sub_1CDFEB298();
  return v8(&v14, &v13, v9, v10, v11, ObjectType, v6);
}

uint64_t sub_1CDFEB12C(uint64_t a1)
{
  return UpNextQueueClient.processUpNextQueueUpdates(_:)(a1);
}

_QWORD *sub_1CDFEB14C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  char v9;
  uint64_t v10;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v10 = a1;
  v9 = 46;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v9, (uint64_t)sub_1CDFEB34C, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFEB22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for UpNextQueueClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB1324(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CDFEB298()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5E188;
  if (!qword_1EFA5E188)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5E178);
    v2 = sub_1CDFB1900(&qword_1EFA5E190, MEMORY[0x1E0D92628], MEMORY[0x1E0D92620]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5E188);
  }
  return result;
}

uint64_t method lookup function for UpNextQueueClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UpNextQueueClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CDFEB328()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CDFEB34C()
{
  return sub_1CDFEAED8();
}

uint64_t static AchievementConstants.maxNumberOfArchivedSessionForIncrementalEvaluation.getter()
{
  return 3;
}

double static AchievementConstants.minimumDurationThreshold.getter()
{
  return 300.0;
}

double static AchievementConstants.minimumPercentComplete.getter()
{
  return 0.5;
}

unint64_t static AchievementConstants.weeklyStreakAwardName.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static AchievementConstants.longestWeeklyStreakAwardName.getter()
{
  return 0xD000000000000023;
}

unint64_t static AchievementConstants.modalityAwardPrefix.getter()
{
  return 0xD000000000000027;
}

unint64_t static AchievementConstants.lifetimeAwardPrefix.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static AchievementConstants.firstOfModalityAwardPrefix.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static AchievementConstants.weeklyStreakMinimumNotificationPresentationInterval.getter()
{
  return 90;
}

uint64_t static AchievementConstants.guidedString.getter()
{
  return 0x646564697547;
}

void sub_1CDFEB41C()
{
  qword_1EFA5E248 = (uint64_t)&unk_1E8B60938;
}

uint64_t static AchievementConstants.personalizationIneligibleAwardNames.getter()
{
  if (qword_1EFA5D448 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t AchievementConstants.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AchievementConstants.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for AchievementConstants()
{
  return swift_lookUpClassMethod();
}

void RemoteBrowsingJournalProperty.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[3];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v75 = a1;
  v1 = sub_1CE0B57A4();
  v73 = *(_QWORD *)(v1 - 8);
  v74 = v1;
  MEMORY[0x1E0C80A78](v1);
  v72 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CE0B5840();
  v70 = *(_QWORD *)(v3 - 8);
  v71 = v3;
  MEMORY[0x1E0C80A78](v3);
  v69 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CE0B54B0();
  v67 = *(_QWORD *)(v5 - 8);
  v68 = v5;
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B41D8();
  v64 = *(_QWORD *)(v7 - 8);
  v65 = v7;
  MEMORY[0x1E0C80A78](v7);
  v63 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B4B08();
  v61 = *(_QWORD *)(v9 - 8);
  v62 = v9;
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B4FB8();
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x1E0C80A78](v11);
  v57 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1CE0B4C28();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1CE0B4C10();
  v52 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v51 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1CE0B54F8();
  v49 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v48 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1CE0B5F60();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1CE0B5A8C();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v42 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1CE0B5198();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v39 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1CE0B5180();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1CE0B5348();
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33 = (char *)v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_1CE0B5078();
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1CE0B5444();
  v28[2] = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v28[1] = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = sub_1CE0B53FC();
  MEMORY[0x1E0C80A78](v28[0]);
  v23 = sub_1CE0B4904();
  MEMORY[0x1E0C80A78](v23);
  v24 = sub_1CE0B43B8();
  MEMORY[0x1E0C80A78](v24);
  v25 = type metadata accessor for RemoteBrowsingJournalProperty();
  MEMORY[0x1E0C80A78](v25);
  sub_1CDFEC1FC(v76, (uint64_t)v28 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = (char *)sub_1CDFEBA2C + 4 * word_1CE0BBF00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1CDFEBA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v0, v1);
  sub_1CE0B6D40();
  sub_1CDFB1900(&qword_1EFA5E2C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90A38], MEMORY[0x1E0D90A48]);
  sub_1CE0B623C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
}

uint64_t type metadata accessor for RemoteBrowsingJournalProperty()
{
  uint64_t result;

  result = qword_1EFA5E340;
  if (!qword_1EFA5E340)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFEC1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t RemoteBrowsingJournalProperty.hashValue.getter()
{
  _BYTE v1[72];

  sub_1CE0B6D34();
  RemoteBrowsingJournalProperty.hash(into:)((uint64_t)v1);
  return sub_1CE0B6D64();
}

uint64_t sub_1CDFEC280()
{
  _BYTE v1[72];

  sub_1CE0B6D34();
  RemoteBrowsingJournalProperty.hash(into:)((uint64_t)v1);
  return sub_1CE0B6D64();
}

uint64_t sub_1CDFEC2C0()
{
  _BYTE v1[72];

  sub_1CE0B6D34();
  RemoteBrowsingJournalProperty.hash(into:)((uint64_t)v1);
  return sub_1CE0B6D64();
}

uint64_t sub_1CDFEC2FC(__int128 *a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v28;
  int64_t v29;
  _QWORD v30[3];
  uint64_t (*v31)(uint64_t);
  unint64_t *v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v32 = a4;
  v33 = a5;
  v31 = a3;
  v7 = a3(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v30 - v9;
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v34 = *a1;
  v35 = v12;
  v13 = a1[2];
  v14 = a1[3];
  v30[1] = a1;
  v36 = v13;
  v37 = v14;
  v38 = v11;
  v30[2] = sub_1CE0B6D64();
  v15 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  v20 = a2;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  v23 = 0;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v25 = v24 | (v23 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v23++, 1))
      goto LABEL_19;
    if (v23 >= v19)
    {
LABEL_17:
      swift_release();
      return sub_1CE0B6D40();
    }
    v28 = *(_QWORD *)(v15 + 8 * v23);
    if (!v28)
      break;
LABEL_16:
    v18 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v23 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
    sub_1CDFB1900(v32, v31, v33);
    v26 = sub_1CE0B6230();
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v22 ^= v26;
  }
  v29 = v23 + 1;
  if (v23 + 1 >= v19)
    goto LABEL_17;
  v28 = *(_QWORD *)(v15 + 8 * v29);
  if (v28)
  {
    ++v23;
    goto LABEL_16;
  }
  while (1)
  {
    v23 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v23 >= v19)
      goto LABEL_17;
    v28 = *(_QWORD *)(v15 + 8 * v23);
    ++v29;
    if (v28)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1CDFEC4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v13;
  int64_t v14;

  sub_1CE0B6D64();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_1CE0B6D40();
    }
    v13 = *(_QWORD *)(v3 + 8 * v10);
    if (!v13)
      break;
LABEL_16:
    v6 = (v13 - 1) & v13;
LABEL_5:
    sub_1CE0B6D34();
    swift_bridgeObjectRetain();
    sub_1CE0B62CC();
    v11 = sub_1CE0B6D64();
    result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  v14 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v13 = *(_QWORD *)(v3 + 8 * v10);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  _QWORD v80[20];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;

  v138 = a2;
  v139 = (char *)a1;
  v97 = sub_1CE0B57A4();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v80[9] = (char *)v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CE0B5840();
  v135 = *(_QWORD *)(v3 - 8);
  v136 = v3;
  MEMORY[0x1E0C80A78](v3);
  v80[18] = (char *)v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1CE0B54B0();
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v80[8] = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1CE0B41D8();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v80[7] = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1CE0B4B08();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v80[6] = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1CE0B4FB8();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v80[5] = (char *)v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1CE0B4C28();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v80[4] = (char *)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B4C10();
  v133 = *(_QWORD *)(v10 - 8);
  v134 = v10;
  MEMORY[0x1E0C80A78](v10);
  v80[17] = (char *)v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B54F8();
  v131 = *(_QWORD *)(v12 - 8);
  v132 = v12;
  MEMORY[0x1E0C80A78](v12);
  v80[16] = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B5F60();
  v129 = *(_QWORD *)(v14 - 8);
  v130 = v14;
  MEMORY[0x1E0C80A78](v14);
  v80[15] = (char *)v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = sub_1CE0B5A8C();
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v80[3] = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B5198();
  v127 = *(_QWORD *)(v17 - 8);
  v128 = v17;
  MEMORY[0x1E0C80A78](v17);
  v80[14] = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1CE0B5180();
  v125 = *(_QWORD *)(v19 - 8);
  v126 = v19;
  MEMORY[0x1E0C80A78](v19);
  v80[13] = (char *)v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1CE0B5348();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v80[2] = (char *)v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1CE0B5078();
  v123 = *(_QWORD *)(v22 - 8);
  v124 = v22;
  MEMORY[0x1E0C80A78](v22);
  v80[12] = (char *)v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_1CE0B5444();
  v80[19] = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v80[1] = (char *)v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1CE0B53FC();
  v121 = *(_QWORD *)(v25 - 8);
  v122 = v25;
  MEMORY[0x1E0C80A78](v25);
  v80[11] = (char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1CE0B4904();
  v119 = *(_QWORD *)(v27 - 8);
  v120 = v27;
  MEMORY[0x1E0C80A78](v27);
  v80[10] = (char *)v80 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1CE0B43B8();
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v80[0] = (char *)v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = type metadata accessor for RemoteBrowsingJournalProperty();
  v30 = MEMORY[0x1E0C80A78](v137);
  v107 = (char *)v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v115 = (char *)v80 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v116 = (char *)v80 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v106 = (char *)v80 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v105 = (char *)v80 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v104 = (char *)v80 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v101 = (char *)v80 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v103 = (char *)v80 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v102 = (char *)v80 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v114 = (char *)v80 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v113 = (char *)v80 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v109 = (char *)v80 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v112 = (char *)v80 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v100 = (char *)v80 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v111 = (char *)v80 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v110 = (char *)v80 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v99 = (char *)v80 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v108 = (char *)v80 - v65;
  v66 = MEMORY[0x1E0C80A78](v64);
  v98 = (char *)v80 - v67;
  v68 = MEMORY[0x1E0C80A78](v66);
  v69 = MEMORY[0x1E0C80A78](v68);
  v70 = MEMORY[0x1E0C80A78](v69);
  v71 = MEMORY[0x1E0C80A78](v70);
  v72 = MEMORY[0x1E0C80A78](v71);
  v73 = MEMORY[0x1E0C80A78](v72);
  v74 = MEMORY[0x1E0C80A78](v73);
  MEMORY[0x1E0C80A78](v74);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E378);
  v76 = MEMORY[0x1E0C80A78](v75);
  v78 = (char *)v80 + *(int *)(v76 + 48) - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFEC1FC((uint64_t)v139, (uint64_t)v80 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  v139 = v78;
  sub_1CDFEC1FC(v138, (uint64_t)v78);
  v79 = (char *)sub_1CDFED004 + 4 * word_1CE0BBF36[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1CDFED004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);

  sub_1CDFEC1FC(v1, v0);
  v3 = *(_QWORD *)(v2 - 96);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 272) + 8))(v0, *(_QWORD *)(v2 - 264));
    sub_1CDFEF7AC(v1);
    v4 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(v2 - 272);
    v7 = *(_QWORD *)(v2 - 720);
    v8 = *(_QWORD *)(v2 - 264);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v3, v8);
    v4 = MEMORY[0x1D17BD6F8](v0, v7);
    v9 = *(void (**)(void))(v6 + 8);
    ((void (*)(uint64_t, uint64_t))v9)(v7, v8);
    v9();
    sub_1CDFEEC4C(v1);
  }
  return v4 & 1;
}

uint64_t sub_1CDFEDBC0()
{
  return sub_1CDFB1900(&qword_1EFA5E2C8, (uint64_t (*)(uint64_t))type metadata accessor for RemoteBrowsingJournalProperty, (uint64_t)&protocol conformance descriptor for RemoteBrowsingJournalProperty);
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteBrowsingJournalProperty(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = sub_1CE0B43B8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v10 = sub_1CE0B4904();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v11 = sub_1CE0B53FC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v12 = sub_1CE0B5444();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v13 = sub_1CE0B5078();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v14 = sub_1CE0B5348();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v15 = sub_1CE0B5180();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v16 = sub_1CE0B5198();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v17 = sub_1CE0B5A8C();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v18 = sub_1CE0B5F60();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        v19 = sub_1CE0B54F8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        v20 = sub_1CE0B4C10();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        v21 = sub_1CE0B4C28();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        v22 = sub_1CE0B4FB8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x14u:
        v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        v24 = sub_1CE0B4B08();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
        v25 = sub_1CE0B41D8();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        v26 = sub_1CE0B54B0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        v27 = sub_1CE0B5840();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
        v28 = sub_1CE0B57A4();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for RemoteBrowsingJournalProperty(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_1CE0B43B8();
      goto LABEL_22;
    case 1:
      v3 = sub_1CE0B4904();
      goto LABEL_22;
    case 3:
    case 5:
    case 6:
    case 7:
    case 15:
    case 20:
    case 25:
      return swift_bridgeObjectRelease();
    case 4:
      v3 = sub_1CE0B53FC();
      goto LABEL_22;
    case 8:
      v3 = sub_1CE0B5444();
      goto LABEL_22;
    case 9:
      v3 = sub_1CE0B5078();
      goto LABEL_22;
    case 10:
      v3 = sub_1CE0B5348();
      goto LABEL_22;
    case 11:
      v3 = sub_1CE0B5180();
      goto LABEL_22;
    case 12:
      v3 = sub_1CE0B5198();
      goto LABEL_22;
    case 13:
      v3 = sub_1CE0B5A8C();
      goto LABEL_22;
    case 14:
      v3 = sub_1CE0B5F60();
      goto LABEL_22;
    case 16:
      v3 = sub_1CE0B54F8();
      goto LABEL_22;
    case 17:
      v3 = sub_1CE0B4C10();
      goto LABEL_22;
    case 18:
      v3 = sub_1CE0B4C28();
      goto LABEL_22;
    case 19:
      v3 = sub_1CE0B4FB8();
      goto LABEL_22;
    case 21:
      v3 = sub_1CE0B4B08();
      goto LABEL_22;
    case 22:
      v3 = sub_1CE0B41D8();
      goto LABEL_22;
    case 23:
      v3 = sub_1CE0B54B0();
      goto LABEL_22;
    case 24:
      v3 = sub_1CE0B5840();
      goto LABEL_22;
    case 26:
      v3 = sub_1CE0B57A4();
LABEL_22:
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *initializeWithCopy for RemoteBrowsingJournalProperty(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1CE0B43B8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_24;
    case 1u:
      v7 = sub_1CE0B4904();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_24;
    case 3u:
    case 5u:
    case 6u:
    case 7u:
    case 0xFu:
    case 0x19u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 4u:
      v8 = sub_1CE0B53FC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_24;
    case 8u:
      v9 = sub_1CE0B5444();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_24;
    case 9u:
      v10 = sub_1CE0B5078();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_24;
    case 0xAu:
      v11 = sub_1CE0B5348();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_24;
    case 0xBu:
      v12 = sub_1CE0B5180();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_24;
    case 0xCu:
      v13 = sub_1CE0B5198();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_24;
    case 0xDu:
      v14 = sub_1CE0B5A8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_24;
    case 0xEu:
      v15 = sub_1CE0B5F60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_24;
    case 0x10u:
      v16 = sub_1CE0B54F8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      goto LABEL_24;
    case 0x11u:
      v17 = sub_1CE0B4C10();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_24;
    case 0x12u:
      v18 = sub_1CE0B4C28();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      goto LABEL_24;
    case 0x13u:
      v19 = sub_1CE0B4FB8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      goto LABEL_24;
    case 0x14u:
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_24;
    case 0x15u:
      v21 = sub_1CE0B4B08();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
      goto LABEL_24;
    case 0x16u:
      v22 = sub_1CE0B41D8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_24;
    case 0x17u:
      v23 = sub_1CE0B54B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      goto LABEL_24;
    case 0x18u:
      v24 = sub_1CE0B5840();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
      goto LABEL_24;
    case 0x1Au:
      v25 = sub_1CE0B57A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
LABEL_24:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for RemoteBrowsingJournalProperty(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1CDFEEC4C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1CE0B43B8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_25;
      case 1u:
        v7 = sub_1CE0B4904();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_25;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 4u:
        v8 = sub_1CE0B53FC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_25;
      case 8u:
        v9 = sub_1CE0B5444();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_25;
      case 9u:
        v10 = sub_1CE0B5078();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_25;
      case 0xAu:
        v11 = sub_1CE0B5348();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_25;
      case 0xBu:
        v12 = sub_1CE0B5180();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_25;
      case 0xCu:
        v13 = sub_1CE0B5198();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_25;
      case 0xDu:
        v14 = sub_1CE0B5A8C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_25;
      case 0xEu:
        v15 = sub_1CE0B5F60();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_25;
      case 0x10u:
        v16 = sub_1CE0B54F8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_25;
      case 0x11u:
        v17 = sub_1CE0B4C10();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        goto LABEL_25;
      case 0x12u:
        v18 = sub_1CE0B4C28();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        goto LABEL_25;
      case 0x13u:
        v19 = sub_1CE0B4FB8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        goto LABEL_25;
      case 0x14u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 0x15u:
        v20 = sub_1CE0B4B08();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_25;
      case 0x16u:
        v21 = sub_1CE0B41D8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        goto LABEL_25;
      case 0x17u:
        v22 = sub_1CE0B54B0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_25;
      case 0x18u:
        v23 = sub_1CE0B5840();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_25;
      case 0x1Au:
        v24 = sub_1CE0B57A4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1CDFEEC4C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteBrowsingJournalProperty();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for RemoteBrowsingJournalProperty(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = sub_1CE0B43B8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_22;
    case 1u:
      v7 = sub_1CE0B4904();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_22;
    case 4u:
      v8 = sub_1CE0B53FC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_22;
    case 8u:
      v9 = sub_1CE0B5444();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_22;
    case 9u:
      v10 = sub_1CE0B5078();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_22;
    case 0xAu:
      v11 = sub_1CE0B5348();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_22;
    case 0xBu:
      v12 = sub_1CE0B5180();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_22;
    case 0xCu:
      v13 = sub_1CE0B5198();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_22;
    case 0xDu:
      v14 = sub_1CE0B5A8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_22;
    case 0xEu:
      v15 = sub_1CE0B5F60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_22;
    case 0x10u:
      v16 = sub_1CE0B54F8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_22;
    case 0x11u:
      v17 = sub_1CE0B4C10();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      goto LABEL_22;
    case 0x12u:
      v18 = sub_1CE0B4C28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_22;
    case 0x13u:
      v19 = sub_1CE0B4FB8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      goto LABEL_22;
    case 0x15u:
      v20 = sub_1CE0B4B08();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_22;
    case 0x16u:
      v21 = sub_1CE0B41D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_22;
    case 0x17u:
      v22 = sub_1CE0B54B0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      goto LABEL_22;
    case 0x18u:
      v23 = sub_1CE0B5840();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      goto LABEL_22;
    case 0x1Au:
      v24 = sub_1CE0B57A4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithTake for RemoteBrowsingJournalProperty(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1CDFEEC4C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = sub_1CE0B43B8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v7 = sub_1CE0B4904();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v8 = sub_1CE0B53FC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v9 = sub_1CE0B5444();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v10 = sub_1CE0B5078();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v11 = sub_1CE0B5348();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v12 = sub_1CE0B5180();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
        v13 = sub_1CE0B5198();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
        v14 = sub_1CE0B5A8C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
        v15 = sub_1CE0B5F60();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
        v16 = sub_1CE0B54F8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
        v17 = sub_1CE0B4C10();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
        v18 = sub_1CE0B4C28();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
        v19 = sub_1CE0B4FB8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
        v20 = sub_1CE0B4B08();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
        v21 = sub_1CE0B41D8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
        v22 = sub_1CE0B54B0();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
        v23 = sub_1CE0B5840();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
        v24 = sub_1CE0B57A4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingJournalProperty(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingJournalProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1CDFEF50C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1CDFEF51C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  result = sub_1CE0B43B8();
  if (v1 <= 0x3F)
  {
    result = sub_1CE0B4904();
    if (v2 <= 0x3F)
    {
      result = sub_1CE0B53FC();
      if (v3 <= 0x3F)
      {
        result = sub_1CE0B5444();
        if (v4 <= 0x3F)
        {
          result = sub_1CE0B5078();
          if (v5 <= 0x3F)
          {
            result = sub_1CE0B5348();
            if (v6 <= 0x3F)
            {
              result = sub_1CE0B5180();
              if (v7 <= 0x3F)
              {
                result = sub_1CE0B5198();
                if (v8 <= 0x3F)
                {
                  result = sub_1CE0B5A8C();
                  if (v9 <= 0x3F)
                  {
                    result = sub_1CE0B5F60();
                    if (v10 <= 0x3F)
                    {
                      result = sub_1CE0B54F8();
                      if (v11 <= 0x3F)
                      {
                        result = sub_1CE0B4C10();
                        if (v12 <= 0x3F)
                        {
                          result = sub_1CE0B4C28();
                          if (v13 <= 0x3F)
                          {
                            result = sub_1CE0B4FB8();
                            if (v14 <= 0x3F)
                            {
                              result = sub_1CE0B4B08();
                              if (v15 <= 0x3F)
                              {
                                result = sub_1CE0B41D8();
                                if (v16 <= 0x3F)
                                {
                                  result = sub_1CE0B54B0();
                                  if (v17 <= 0x3F)
                                  {
                                    result = sub_1CE0B5840();
                                    if (v18 <= 0x3F)
                                    {
                                      result = sub_1CE0B57A4();
                                      if (v19 <= 0x3F)
                                      {
                                        swift_initEnumMetadataMultiPayload();
                                        return 0;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1CDFEF7AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E378);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MusicTrackEnded.musicTrack.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MusicTrackEnded.init(musicTrack:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MusicTrackEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MusicTrackEnded(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MusicTrackEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicTrackEnded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFEF9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MusicTrackEnded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFEFA44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3EFC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MusicTrackEnded()
{
  uint64_t result;

  result = qword_1EFA5E3F0;
  if (!qword_1EFA5E3F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFEFAC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B3EFC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RecentSearchTermsUpdated.changeset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5504();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RecentSearchTermsUpdated.init(changeset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static RecentSearchTermsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RecentSearchTermsUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5504();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RecentSearchTermsUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RecentSearchTermsUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFEFD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RecentSearchTermsUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFEFD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5504();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RecentSearchTermsUpdated()
{
  uint64_t result;

  result = qword_1ED8F0198;
  if (!qword_1ED8F0198)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFEFDFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5504();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t GatedResource.__allocating_init(logger:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  GatedResource.init(logger:)(a1, v3, v4, v5);
  return v2;
}

void sub_1CDFEFEA0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1CDFEFF2C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall GatedResource.reset()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + qword_1ED8F1ED0);
  v2 = (uint64_t *)(v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16));
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1CDFEFFB4(v2, v0, v4, v5);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1CDFEFFB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  Swift::String v9;
  Swift::String v10;
  int EnumCaseMultiPayload;
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;

  v5 = type metadata accessor for GatedResource.State(0, *(_QWORD *)(*(_QWORD *)a2 + 80), a3, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (id *)((char *)&v14 - v7);
  v9._object = (void *)0x80000001CE0C8900;
  v9._countAndFlagsBits = 0xD000000000000070;
  v10._countAndFlagsBits = 0x29287465736572;
  v10._object = (void *)0xE700000000000000;
  Logger.trace(file:function:)(v9, v10);
  (*(void (**)(id *, uint64_t *, uint64_t))(v6 + 16))(v8, a1, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
    return swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t *, uint64_t))(v6 + 8))(a1, v5);

  }
  else
  {
    v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
    v13(a1, v5);
    v13((uint64_t *)v8, v5);
  }
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B6518();
  *a1 = sub_1CE0B6488();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1CDFF0128()
{
  return GatedResource.queueCount.getter();
}

void sub_1CDFF014C(uint64_t a1@<X8>)
{
  GatedResource.query()(a1);
}

uint64_t sub_1CDFF016C(uint64_t a1)
{
  _QWORD **v1;
  uint64_t v2;
  _QWORD *v4;
  _QWORD *v5;

  v4 = *v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD3C;
  v5[2] = a1;
  v5[3] = v4;
  v5[4] = *v4;
  return swift_task_switch();
}

void sub_1CDFF01D8()
{
  GatedResource.reset()();
}

uint64_t method lookup function for GatedResource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GatedResource.__allocating_init(logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

id *sub_1CDFF0210(id *a1, id *a2, uint64_t a3)
{
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  char *v8;
  unsigned int v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = (char *)*a2;
    *v3 = *a2;
    v3 = (id *)&v8[(unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8];
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 3)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 2)
    {
      (*(void (**)(id *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 2;
    }
    else if (v9 == 1)
    {
      v11 = *a2;
      v12 = *a2;
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v5) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v3;
}

id *sub_1CDFF0354(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else if (v8 == 1)
    {

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 16))(a1, a2, v5);
      v14 = 2;
    }
    else
    {
      if (v10 != 1)
      {
        *a1 = *a2;
        *((_BYTE *)a1 + v7) = 0;
        swift_bridgeObjectRetain();
        return a1;
      }
      v12 = *a2;
      v13 = v12;
      *a1 = v12;
      v14 = 1;
    }
    *((_BYTE *)a1 + v7) = v14;
  }
  return a1;
}

_QWORD *sub_1CDFF0518(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 2;
  }
  else if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

id *sub_1CDFF0604(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else if (v8 == 1)
    {

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 2;
    }
    else if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1CDFF07BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CDFF0880 + 4 * byte_1CE0BC230[(v4 - 1)]))();
}

void sub_1CDFF08CC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1CDFF0A74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CDFF0ABC + 4 * byte_1CE0BC23E[v3]))();
}

void sub_1CDFF0B04(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

unint64_t sub_1CDFF0BCC()
{
  unint64_t result;

  result = qword_1EFA5E498;
  if (!qword_1EFA5E498)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for GatedResourceError, &type metadata for GatedResourceError);
    atomic_store(result, (unint64_t *)&qword_1EFA5E498);
  }
  return result;
}

_QWORD *PrivacyPreferenceClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for PrivacyPreferenceClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CDFF336C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t PrivacyPreferenceClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFF3738);
}

uint64_t PrivacyPreferenceClient.init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFF3558);
}

uint64_t sub_1CDFF0D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v17;

  v11 = a4(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - v12;
  ObjectType = swift_getObjectType();
  v15 = a5(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8))(v13, v11, a6, ObjectType, a3);
  return sub_1CDFE19F8((uint64_t)v13, a4);
}

uint64_t PrivacyPreferenceClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t PrivacyPreferenceClient.queryNoticePrivacyPreference()()
{
  return sub_1CDFF172C(240, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
}

uint64_t PrivacyPreferenceClient.fetchNoticePrivacyPreference(ignoreCaches:)(char a1)
{
  return sub_1CDFF0EF4(a1, 242, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
}

uint64_t PrivacyPreferenceClient.updateNoticePrivacyPreference(_:)(uint64_t a1)
{
  return sub_1CDFF166C(a1, 244, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
}

uint64_t PrivacyPreferenceClient.queryOptInPrivacyPreference()()
{
  return sub_1CDFF172C(241, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
}

uint64_t PrivacyPreferenceClient.fetchOptInPrivacyPreference(ignoreCaches:)(char a1)
{
  return sub_1CDFF0EF4(a1, 243, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
}

uint64_t sub_1CDFF0EF4(char a1, __int16 a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(__int16 *, char *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char v16;
  __int16 v17;

  v11 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType();
  v17 = a2;
  v16 = a1;
  v13 = *(uint64_t (**)(__int16 *, char *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32);
  v14 = a3(0);
  return v13(&v17, &v16, MEMORY[0x1E0DEAFA0], v14, MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], a4, a5, ObjectType, v11);
}

uint64_t PrivacyPreferenceClient.updateOptInPrivacyPreference(_:)(uint64_t a1)
{
  return sub_1CDFF166C(a1, 245, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
}

uint64_t PrivacyPreferenceClient.queryAllPrivacyAcknowledgements()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t (*v3)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int16 v8;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v8 = 246;
  v3 = *(uint64_t (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v1 + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD40);
  v5 = sub_1CDFE1084();
  v6 = sub_1CDFE10E8();
  return v3(&v8, v4, v5, v6, ObjectType, v1);
}

uint64_t PrivacyPreferenceClient.queryPrivacyAcknowledgement(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t ObjectType;
  void (*v12)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t (**v24)@<X0>(uint64_t@<X8>);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  __int16 v33;

  v31 = a3;
  v29 = a1;
  v30 = a2;
  v32 = a4;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD38);
  v5 = *(_QWORD *)(v28 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v10 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v33 = 246;
  v12 = *(void (**)(__int16 *, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(v10 + 24);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD40);
  v14 = sub_1CDFE1084();
  v15 = sub_1CDFE10E8();
  v26 = v9;
  v12(&v33, v13, v14, v15, ObjectType, v10);
  v16 = swift_allocObject();
  v17 = v29;
  v18 = v30;
  *(_QWORD *)(v16 + 16) = v29;
  *(_QWORD *)(v16 + 24) = v18;
  LOBYTE(v10) = v31 & 1;
  *(_BYTE *)(v16 + 32) = v31 & 1;
  v19 = v27;
  v20 = v9;
  v21 = v28;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v27, v20, v28);
  v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, v19, v21);
  v24 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v23 + ((v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v24 = sub_1CDFF37DC;
  v24[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v16;
  sub_1CDFF38E8(v17, v18, v10);
  sub_1CE0B51C8();
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v26, v21);
}

uint64_t sub_1CDFF124C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;

  v35 = a4;
  v6 = a3 & 1;
  v7 = sub_1CE0B51C8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - v12;
  MEMORY[0x1E0C80A78](v11);
  v32 = (char *)&v31 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E5A0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v31 - v19;
  sub_1CDFF38E8(a1, a2, v6);
  v21 = swift_bridgeObjectRetain();
  v22 = sub_1CDFF3E00(v21, a1, a2, v6);
  sub_1CDFF37CC(a1, a2, v6);
  sub_1CDFE3648(v22, (uint64_t)v20);
  swift_release();
  v34 = v20;
  sub_1CDFB1434((uint64_t)v20, (uint64_t)v18, &qword_1EFA5E5A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v18, 1, v7) == 1)
  {
    sub_1CDFB13F8((uint64_t)v18, &qword_1EFA5E5A0);
    sub_1CDFF38E8(a1, a2, v6);
    sub_1CE0B51B0();
    v23 = v33;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v33, v13, v7);
    v24 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v25 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v24, v23, v7);
    sub_1CE0B5C0C();
  }
  else
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v27 = v32;
    v26(v32, v18, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v27, v7);
    v28 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v29 = swift_allocObject();
    v26((char *)(v29 + v28), v13, v7);
    sub_1CE0B5C0C();
    v13 = v27;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return sub_1CDFB13F8((uint64_t)v34, &qword_1EFA5E5A0);
}

uint64_t PrivacyPreferenceClient.insertPrivacyAcknowledgement(for:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v14;
  __int16 v15;

  v7 = sub_1CE0B51C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFF38E8(a1, a2, a3 & 1);
  sub_1CE0B51B0();
  v11 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v15 = 247;
  (*(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 16))(&v15, v10, v7, MEMORY[0x1E0D93B50], MEMORY[0x1E0D93B58], ObjectType, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t PrivacyPreferenceClient.insertPersonalizationPrivacyPreference(_:)(uint64_t a1)
{
  return sub_1CDFF166C(a1, 248, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95A88], MEMORY[0x1E0D95A78], MEMORY[0x1E0D95A80]);
}

uint64_t sub_1CDFF166C(uint64_t a1, __int16 a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  __int16 v16;

  v11 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType();
  v16 = a2;
  v13 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16);
  v14 = a3(0);
  return v13(&v16, a1, v14, a4, a5, ObjectType, v11);
}

uint64_t PrivacyPreferenceClient.queryPersonalizationPrivacyPreference()()
{
  return sub_1CDFF172C(249, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95A88], MEMORY[0x1E0D95A78], MEMORY[0x1E0D95A80]);
}

uint64_t sub_1CDFF172C(__int16 a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t (*v11)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  __int16 v14;

  v9 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  v14 = a1;
  v11 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
  v12 = a2(0);
  return v11(&v14, v12, a3, a4, ObjectType, v9);
}

uint64_t sub_1CDFF17C4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFF1A5C(a1, a2, 240, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
}

uint64_t sub_1CDFF17E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFF199C(a1, a2, a3, 244, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
}

uint64_t sub_1CDFF1804(uint64_t a1, uint64_t a2)
{
  return sub_1CDFF1A5C(a1, a2, 241, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
}

uint64_t sub_1CDFF1824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFF199C(a1, a2, a3, 245, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
}

uint64_t sub_1CDFF1844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  return PrivacyPreferenceClient.queryPrivacyAcknowledgement(for:)(a1, a2, a3 & 1, a4);
}

uint64_t sub_1CDFF1868(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v15;
  __int16 v16;

  v7 = sub_1CE0B51C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v3;
  sub_1CDFF38E8(a1, a2, a3 & 1);
  sub_1CE0B51B0();
  v12 = *(_QWORD *)(v11 + 24);
  ObjectType = swift_getObjectType();
  v16 = 247;
  (*(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v12 + 16))(&v16, v10, v7, MEMORY[0x1E0D93B50], MEMORY[0x1E0D93B58], ObjectType, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1CDFF197C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFF199C(a1, a2, a3, 248, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95A88], MEMORY[0x1E0D95A78], MEMORY[0x1E0D95A80]);
}

uint64_t sub_1CDFF199C(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  __int16 v18;

  v13 = *(_QWORD *)(*(_QWORD *)v7 + 24);
  ObjectType = swift_getObjectType();
  v18 = a4;
  v15 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 16);
  v16 = a5(0);
  return v15(&v18, a1, v16, a6, a7, ObjectType, v13);
}

uint64_t sub_1CDFF1A3C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFF1A5C(a1, a2, 249, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95A88], MEMORY[0x1E0D95A78], MEMORY[0x1E0D95A80]);
}

uint64_t sub_1CDFF1A5C(uint64_t a1, uint64_t a2, __int16 a3, uint64_t (*a4)(_QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t (*v13)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  __int16 v16;

  v11 = *(_QWORD *)(*(_QWORD *)v6 + 24);
  ObjectType = swift_getObjectType();
  v16 = a3;
  v13 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24);
  v14 = a4(0);
  return v13(&v16, v14, a5, a6, ObjectType, v11);
}

uint64_t sub_1CDFF1AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, (uint64_t *)&unk_1ED8F1200, (uint64_t)&unk_1E8B63310, (uint64_t)sub_1CDFF3B14);
}

uint64_t sub_1CDFF1B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B632C0, (uint64_t)sub_1CDFF3B00);
}

uint64_t sub_1CDFF1B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  void (*v13)(uint64_t, _QWORD *);
  _QWORD *v14;

  __swift_instantiateConcreteTypeFromMangledName(a6);
  v13 = (void (*)(uint64_t, _QWORD *))sub_1CE0B5C54();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = a5;
  v14[4] = a1;
  v14[5] = a2;
  swift_retain();
  swift_retain();
  v13(a8, v14);
  swift_release();
  return swift_release();
}

uint64_t sub_1CDFF1BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63720, (uint64_t)sub_1CDFF4390);
}

uint64_t sub_1CDFF1BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B636D0, (uint64_t)sub_1CDFF4364);
}

uint64_t sub_1CDFF1C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63680, (uint64_t)sub_1CDFF4338);
}

uint64_t sub_1CDFF1C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63630, (uint64_t)sub_1CDFF4308);
}

uint64_t sub_1CDFF1C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B635E0, (uint64_t)sub_1CDFF42DC);
}

uint64_t sub_1CDFF1C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63590, (uint64_t)sub_1CDFF42B0);
}

uint64_t sub_1CDFF1C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63540, (uint64_t)sub_1CDFF4284);
}

uint64_t sub_1CDFF1C8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B634F0, (uint64_t)sub_1CDFF4258);
}

uint64_t sub_1CDFF1CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, (uint64_t *)&unk_1EFA62340, (uint64_t)&unk_1E8B63220, (uint64_t)sub_1CDFF3AB0);
}

uint64_t sub_1CDFF1CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63270, (uint64_t)sub_1CDFF3AC4);
}

uint64_t sub_1CDFF1CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA61960, (uint64_t)&unk_1E8B62F50, (uint64_t)sub_1CDFF3940);
}

uint64_t sub_1CDFF1CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA61960, (uint64_t)&unk_1E8B631D0, (uint64_t)sub_1CDFF3A84);
}

uint64_t sub_1CDFF1D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5E540, (uint64_t)&unk_1E8B62F00, (uint64_t)sub_1CDFF392C);
}

uint64_t sub_1CDFF1D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, qword_1ED8EF730, (uint64_t)&unk_1E8B63180, (uint64_t)sub_1CDFF3A70);
}

uint64_t sub_1CDFF1D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63130, (uint64_t)sub_1CDFF3A44);
}

uint64_t sub_1CDFF1D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B630E0, (uint64_t)sub_1CDFF3A18);
}

uint64_t sub_1CDFF1D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1ED8F1070, (uint64_t)&unk_1E8B63090, (uint64_t)sub_1CDFF39EC);
}

uint64_t sub_1CDFF1DA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5DCA0, (uint64_t)&unk_1E8B62EB0, (uint64_t)sub_1CDFF3910);
}

uint64_t sub_1CDFF1DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5E558, (uint64_t)&unk_1E8B62FF0, (uint64_t)sub_1CDFF39C0);
}

uint64_t sub_1CDFF1DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5E558, (uint64_t)&unk_1E8B63040, (uint64_t)sub_1CDFF39D4);
}

uint64_t sub_1CDFF1DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFF1B24(a1, a2, a3, a4, a5, &qword_1EFA5E548, (uint64_t)&unk_1E8B62FA0, (uint64_t)sub_1CDFF39A4);
}

void sub_1CDFF1E14(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t (*)(), uint64_t);
  uint64_t v16;
  id v17;
  void *v18;
  char v19;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  if ((a2 & 1) != 0)
  {
    v19 = 1;
    v17 = a1;
    a5(&v18);
    sub_1CDFF3B20(a1, 1, (void (*)(id))MEMORY[0x1E0DEEEC0]);
  }
  else
  {
    swift_unknownObjectRetain();
    a3(&v18);
    v15 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a5;
    *(_QWORD *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1CDFF4410, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_unknownObjectRelease();
  }
}

void sub_1CDFF1F6C(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t (*)(), uint64_t);
  uint64_t v17;
  id v18;
  void *v19;
  char v20;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v19 = a1;
    v20 = 1;
    v18 = a1;
    a5(&v19);
    sub_1CDFC2DF4(a1, 1);
  }
  else
  {
    a3(v13);
    v16 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_1CDFF4410, v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1CDFF20A4(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(_QWORD *), uint64_t a6, uint64_t *a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  id v26;
  void (*v27)(uint64_t);
  void (*v28)(_QWORD *);

  v27 = a3;
  v28 = a5;
  v15 = __swift_instantiateConcreteTypeFromMangledName(a7);
  MEMORY[0x1E0C80A78](v15);
  v17 = (void (**)(uint64_t))((char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(a8);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v27 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *v17 = a1;
    swift_storeEnumTagMultiPayload();
    v26 = a1;
    v28(v17);
    return sub_1CDFB13F8((uint64_t)v17, a7);
  }
  else
  {
    v27(v20);
    v23 = (void (*)(uint64_t, uint64_t))sub_1CE0B5C54();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v28;
    *(_QWORD *)(v24 + 24) = a6;
    swift_retain();
    v23(a10, v24);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  }
}

void sub_1CDFF2224(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v17;
  id v18;
  void *v19;
  char v20;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD38);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v19 = a1;
    v20 = 1;
    v18 = a1;
    a5(&v19);
    sub_1CDFC2DF4(a1, 1);
  }
  else
  {
    a3(v13);
    v16 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_1CDFEA868, v17);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t sub_1CDFF235C(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t (*)(), uint64_t);
  uint64_t v18;
  id v20;
  void (*v21)(_QWORD *);
  void *v22;

  v21 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E590);
  MEMORY[0x1E0C80A78](v10);
  v12 = (void (**)(_QWORD *))((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E598);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    *v12 = a1;
    swift_storeEnumTagMultiPayload();
    v20 = a1;
    v21(v12);
    return sub_1CDFB13F8((uint64_t)v12, &qword_1EFA5E590);
  }
  else
  {
    v22 = a1;
    swift_bridgeObjectRetain();
    a3(&v22);
    v17 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v21;
    *(_QWORD *)(v18 + 24) = a6;
    swift_retain();
    v17(sub_1CDFF39E4, v18);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return swift_bridgeObjectRelease();
  }
}

void sub_1CDFF2500(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  void (*v15)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __int128 v20[2];
  char v21;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA61960);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFB1434(a1, (uint64_t)v20, &qword_1EFA5E588);
  if ((v21 & 1) != 0)
  {
    v13 = *(void **)&v20[0];
    v18 = *(_QWORD *)&v20[0];
    v19 = 1;
    v14 = *(id *)&v20[0];
    a4(&v18);

  }
  else
  {
    sub_1CDFC3290(v20, (uint64_t)&v18);
    a2(&v18);
    v15 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a4;
    *(_QWORD *)(v16 + 24) = a5;
    swift_retain();
    v15(sub_1CDFF3AA4, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v18);
  }
}

uint64_t sub_1CDFF2664(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t (*)(), uint64_t);
  uint64_t v17;
  id v19;
  _QWORD v20[5];
  char v21;

  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62340);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v20[0] = a1;
    v21 = 1;
    v19 = a1;
    a5(v20);
    return sub_1CDFB13F8((uint64_t)v20, &qword_1EFA5E588);
  }
  else
  {
    a3(v13);
    v16 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = a5;
    *(_QWORD *)(v17 + 24) = a6;
    swift_retain();
    v16(sub_1CDFF3AD4, v17);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

void sub_1CDFF27A0(void *a1, char a2, void (*a3)(__int16 *), uint64_t a4, void (*a5)(void **), uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  __int16 v22;
  char v23;
  char v24;
  void *v25;
  char v26;

  v14 = __swift_instantiateConcreteTypeFromMangledName(a7);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v25 = a1;
    v26 = 1;
    v20 = a1;
    a5(&v25);
    sub_1CDFC2DF4(a1, 1);
  }
  else
  {
    v22 = (unsigned __int16)a1 & 0x1FF;
    v23 = BYTE2(a1) & 1;
    v24 = BYTE3(a1);
    a3(&v22);
    v18 = (void (*)(uint64_t, uint64_t))sub_1CE0B5C54();
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    swift_retain();
    v18(a9, v19);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

void sub_1CDFF28F4(void *a1, char a2, void (*a3)(char *), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t (*)(), uint64_t);
  uint64_t v16;
  id v17;
  uint64_t v18;
  char v19;
  void *v20;
  char v21;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v20 = a1;
    v21 = 1;
    v17 = a1;
    a5(&v20);
    sub_1CDFC2DF4(a1, 1);
  }
  else
  {
    v19 = a1 & 1;
    a3(&v19);
    v15 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a5;
    *(_QWORD *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1CDFF4410, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1CDFF2A38(void *a1, char a2, void (*a3)(void **), uint64_t a4, void (*a5)(void **), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t (*)(), uint64_t);
  uint64_t v16;
  id v17;
  void *v18;
  char v19;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1;
  if ((a2 & 1) != 0)
  {
    v19 = 1;
    v17 = a1;
    a5(&v18);
    sub_1CDFF3B20(a1, 1, (void (*)(id))MEMORY[0x1E0DEEB08]);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(&v18);
    v15 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a5;
    *(_QWORD *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1CDFF4410, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
  }
}

void sub_1CDFF2B90(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *);
  void (*v23)(id *);
  uint64_t v24;
  id v25;
  char v26;

  v23 = a4;
  v24 = a5;
  v21 = a3;
  v22 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B4FB8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E030);
  MEMORY[0x1E0C80A78](v14);
  v16 = (id *)((char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CDFB1434(a1, (uint64_t)v16, &qword_1EFA5E030);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = *v16;
    v17 = v25;
    v26 = 1;
    v18 = v25;
    v23(&v25);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    v22(v13);
    v19 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_1CDFF3920, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

void sub_1CDFF2D90(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(id *), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  id v17;
  id v18;
  void (*v19)(uint64_t (*)(), uint64_t);
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  void (*v23)(id *);
  uint64_t v24;
  id v25[2];
  char v26;

  v23 = a4;
  v24 = a5;
  v21[1] = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E550);
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B43E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E560);
  MEMORY[0x1E0C80A78](v14);
  v16 = (id *)((char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CDFB1434(a1, (uint64_t)v16, &qword_1EFA5E560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25[0] = *v16;
    v17 = v25[0];
    v25[1] = 0;
    v26 = 1;
    v18 = v25[0];
    v23(v25);

  }
  else
  {
    (*(void (**)(char *, id *, uint64_t))(v11 + 32))(v13, v16, v10);
    a2(v13);
    v19 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v23;
    *(_QWORD *)(v20 + 24) = v24;
    swift_retain();
    v19(sub_1CDFF4414, v20);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1CDFF2F9C(uint64_t a1, void (*a2)(char *), uint64_t a3, void (*a4)(void **), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  void *v19;
  id v20;
  uint64_t v22;
  void (*v23)(uint64_t (*)(), uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(void **);
  uint64_t v30;

  v29 = a4;
  v30 = a5;
  v25 = a3;
  v26 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E568);
  MEMORY[0x1E0C80A78](v6);
  v8 = (void **)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E570);
  v27 = *(_QWORD *)(v9 - 8);
  v28 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B43E8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E560);
  MEMORY[0x1E0C80A78](v16);
  v18 = (void **)((char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CDFB1434(a1, (uint64_t)v18, &qword_1EFA5E560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = *v18;
    *v8 = *v18;
    swift_storeEnumTagMultiPayload();
    v20 = v19;
    v29(v8);

    return sub_1CDFB13F8((uint64_t)v8, &qword_1EFA5E568);
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v13 + 32))(v15, v18, v12);
    v26(v15);
    v22 = v28;
    v23 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = v29;
    *(_QWORD *)(v24 + 24) = v30;
    swift_retain();
    v23(sub_1CDFF39E4, v24);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

void sub_1CDFF31F0(void *a1, char a2, void (*a3)(_QWORD *), uint64_t a4, void (*a5)(_QWORD *), uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v16;
  id v17;
  _QWORD v19[2];
  char v20;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E550);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = a1;
  if ((a2 & 1) != 0)
  {
    v19[1] = 0;
    v20 = 1;
    v17 = a1;
    a5(v19);
    sub_1CDFF3B20(a1, 1, (void (*)(id))MEMORY[0x1E0DEEB08]);
  }
  else
  {
    swift_bridgeObjectRetain();
    a3(v19);
    v15 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a5;
    *(_QWORD *)(v16 + 24) = a6;
    swift_retain();
    v15(sub_1CDFF39B4, v16);
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CDFF3348(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t result;

  if (a2)
    return a2();
  return result;
}

_QWORD *sub_1CDFF336C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  ObjectType = swift_getObjectType();
  v17 = a1;
  v16 = 50;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  v10 = sub_1CE0B5348();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CDFF4418, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
  swift_release();
  v17 = a1;
  v16 = 51;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v12 = sub_1CE0B5198();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CDFF441C, v11, ObjectType, v12, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
  swift_release();
  v17 = a1;
  v16 = 52;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v14 = sub_1CE0B5A8C();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v16, (uint64_t)sub_1CDFF4420, v13, ObjectType, v14, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95A78], MEMORY[0x1E0D95A80]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFF3558(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;

  a4[2] = a1;
  a4[3] = a6;
  a4[4] = a7;
  ObjectType = swift_getObjectType();
  v21 = a1;
  v20 = 50;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  v14 = sub_1CE0B5348();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CDFF41C4, v13, ObjectType, v14, a7, MEMORY[0x1E0D940D0], MEMORY[0x1E0D940D8]);
  swift_release();
  v21 = a1;
  v20 = 51;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v16 = sub_1CE0B5198();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CDFF41F4, v15, ObjectType, v16, a7, MEMORY[0x1E0D93A70], MEMORY[0x1E0D93A78]);
  swift_release();
  v21 = a1;
  v20 = 52;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  v18 = sub_1CE0B5A8C();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CDFF4224, v17, ObjectType, v18, a7, MEMORY[0x1E0D95A78], MEMORY[0x1E0D95A80]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CDFF3738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for PrivacyPreferenceClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFF3558(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t sub_1CDFF37A4()
{
  uint64_t v0;

  sub_1CDFF37CC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1CDFF37CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1CDFF37DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CDFF124C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), a1);
}

uint64_t sub_1CDFF37E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD38);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CDFF3864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DD38) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFF1B24(a1, a2, v2 + v6, *v7, v7[1], &qword_1EFA5DD38, (uint64_t)&unk_1E8B63360, (uint64_t)sub_1CDFF3B34);
}

uint64_t sub_1CDFF38E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t method lookup function for PrivacyPreferenceClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PrivacyPreferenceClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1CDFF3910(uint64_t a1)
{
  uint64_t v1;

  sub_1CDFF2B90(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1CDFF3920(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE000AA4(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1CDFF392C(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF28F4);
}

void sub_1CDFF3940(uint64_t a1)
{
  sub_1CDFF395C(a1, &qword_1ED8F1070, (uint64_t)&unk_1E8B62F78, (uint64_t)sub_1CDFF4410);
}

void sub_1CDFF395C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1CDFF27A0(*(void **)a1, *(_BYTE *)(a1 + 8), *(void (**)(__int16 *))(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(void **))(v4 + 32), *(_QWORD *)(v4 + 40), a2, a3, a4);
}

uint64_t sub_1CDFF39A4(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF31F0);
}

uint64_t sub_1CDFF39B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE05E240(a1, *(uint64_t (**)(__int128 *))(v1 + 16));
}

void sub_1CDFF39C0(uint64_t a1)
{
  uint64_t v1;

  sub_1CDFF2D90(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(id *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1CDFF39D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFF2F9C(a1, *(void (**)(char *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(void **))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1CDFF39EC(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E578, &qword_1EFA5E580, (uint64_t)&unk_1E8B630B8, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF3A18(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5DFF8, &qword_1EFA5DFF0, (uint64_t)&unk_1E8B63108, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF3A44(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E008, &qword_1EFA5E000, (uint64_t)&unk_1E8B63158, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF3A70(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF2A38);
}

void sub_1CDFF3A84(uint64_t a1)
{
  sub_1CDFF395C(a1, &qword_1EFA5E540, (uint64_t)&unk_1E8B631F8, (uint64_t)sub_1CDFF3AA4);
}

uint64_t sub_1CDFF3AA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE05E23C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1CDFF3AB0(uint64_t a1)
{
  uint64_t v1;

  sub_1CDFF2500(a1, *(void (**)(uint64_t *))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1CDFF3AC4(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF2664);
}

uint64_t sub_1CDFF3AD4()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1)
    return v1();
  return result;
}

uint64_t sub_1CDFF3B00(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF1F6C);
}

uint64_t sub_1CDFF3B14(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF1E14);
}

void sub_1CDFF3B20(id a1, char a2, void (*a3)(id))
{
  if ((a2 & 1) != 0)

  else
    a3(a1);
}

uint64_t sub_1CDFF3B34(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF235C);
}

uint64_t sub_1CDFF3B44(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int64_t v51;

  v34 = a2;
  v42 = a4;
  v43 = a5;
  v35 = a1;
  v8 = sub_1CE0B51C8();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  result = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v44 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v36 = 0;
  v37 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v38 = (unint64_t)(v14 + 63) >> 6;
  v39 = a6 & 1;
  v17 = v40;
  v18 = v41;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v51 = v12;
      v20 = v19 | (v12 << 6);
      goto LABEL_5;
    }
    v28 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v38)
      goto LABEL_24;
    v29 = *(_QWORD *)(v37 + 8 * v28);
    v30 = v12 + 1;
    if (!v29)
    {
      v30 = v12 + 2;
      if (v12 + 2 >= v38)
        goto LABEL_24;
      v29 = *(_QWORD *)(v37 + 8 * v30);
      if (!v29)
      {
        v30 = v12 + 3;
        if (v12 + 3 >= v38)
          goto LABEL_24;
        v29 = *(_QWORD *)(v37 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_20:
    v16 = (v29 - 1) & v29;
    v51 = v30;
    v20 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_5:
    v21 = v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, *(_QWORD *)(v44 + 48) + *(_QWORD *)(v17 + 72) * v20, v18);
    v22 = sub_1CE0B51BC();
    v24 = v23;
    v48 = v22;
    v49 = v23;
    v26 = v25 & 1;
    v50 = v25 & 1;
    v45 = v42;
    v46 = v43;
    v47 = v39;
    sub_1CDFF4118();
    sub_1CDFF415C();
    v27 = sub_1CE0B42E0();
    sub_1CDFF37CC(v22, v24, v26);
    result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v18);
    v12 = v51;
    if ((v27 & 1) != 0)
    {
      *(unint64_t *)((char *)v35 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      if (__OFADD__(v36++, 1))
      {
        __break(1u);
LABEL_24:
        v33 = v44;
        swift_retain();
        return sub_1CE054330(v35, v34, v36, v33);
      }
    }
  }
  v31 = v12 + 4;
  if (v12 + 4 >= v38)
    goto LABEL_24;
  v29 = *(_QWORD *)(v37 + 8 * v31);
  if (v29)
  {
    v30 = v12 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v38)
      goto LABEL_24;
    v29 = *(_QWORD *)(v37 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1CDFF3E00(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v8;
  char v9;
  unsigned int v10;
  unint64_t v11;
  size_t v12;
  uint64_t isStackAllocationSafe;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v8 = a4 & 1;
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  v12 = 8 * v11;
  sub_1CDFF38E8(a2, a3, a4 & 1);
  isStackAllocationSafe = sub_1CDFF38E8(a2, a3, v8);
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    sub_1CDFF38E8(a2, a3, v8);
    v14 = sub_1CDFF3B44((_QWORD *)((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0)), v11, a1, a2, a3, v8);
    sub_1CDFF37CC(a2, a3, v8);
    swift_release();
    if (v4)
      swift_willThrow();
    sub_1CDFF37CC(a2, a3, v8);
    sub_1CDFF37CC(a2, a3, v8);
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v12);
    sub_1CDFF38E8(a2, a3, v8);
    v14 = sub_1CDFF3B44((unint64_t *)v15, v11, a1, a2, a3, v8);
    sub_1CDFF37CC(a2, a3, v8);
    swift_release();
    MEMORY[0x1D17C092C](v15, -1, -1);
    sub_1CDFF37CC(a2, a3, v8);
    sub_1CDFF37CC(a2, a3, v8);
  }
  return v14;
}

uint64_t sub_1CDFF4058@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFF40D0(a1);
}

uint64_t objectdestroy_107Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1CE0B51C8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CDFF40D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B51C8() - 8) + 80);
  return sub_1CE06D4A4(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_1CDFF4118()
{
  unint64_t result;

  result = qword_1EFA5E5A8;
  if (!qword_1EFA5E5A8)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D93B28], MEMORY[0x1E0D93B20]);
    atomic_store(result, (unint64_t *)&qword_1EFA5E5A8);
  }
  return result;
}

unint64_t sub_1CDFF415C()
{
  unint64_t result;

  result = qword_1EFA5E5B0;
  if (!qword_1EFA5E5B0)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D93B30], MEMORY[0x1E0D93B20]);
    atomic_store(result, (unint64_t *)&qword_1EFA5E5B0);
  }
  return result;
}

uint64_t sub_1CDFF41A0()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CDFF41C4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFF0D58(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for NoticePrivacyPreferenceUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D940E0], (uint64_t)&protocol witness table for NoticePrivacyPreferenceUpdated);
}

uint64_t sub_1CDFF41F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFF0D58(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for OptInPrivacyPreferenceUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D93A80], (uint64_t)&protocol witness table for OptInPrivacyPreferenceUpdated);
}

uint64_t sub_1CDFF4224(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFF0D58(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))type metadata accessor for PersonalizationPrivacyPreferenceUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95A88], (uint64_t)&protocol witness table for PersonalizationPrivacyPreferenceUpdated);
}

uint64_t sub_1CDFF4258(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E010, &qword_1EFA5DF28, (uint64_t)&unk_1E8B63518, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF4284(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E018, &qword_1EFA5DE48, (uint64_t)&unk_1E8B63568, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF42B0(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E020, &qword_1EFA5DE40, (uint64_t)&unk_1E8B635B8, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF42DC(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E028, &qword_1EFA5DE08, (uint64_t)&unk_1E8B63608, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF4308(uint64_t a1)
{
  return sub_1CDFF4314(a1, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CDFF2224);
}

uint64_t sub_1CDFF4314(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1CDFF4338(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E030, &qword_1EFA5DCA0, (uint64_t)&unk_1E8B636A8, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF4364(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E038, &qword_1EFA5DC98, (uint64_t)&unk_1E8B636F8, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF4390(uint64_t a1)
{
  return sub_1CDFF43B4(a1, &qword_1EFA5E040, &qword_1EFA5DC90, (uint64_t)&unk_1E8B63748, (uint64_t)sub_1CDFF39E4);
}

uint64_t sub_1CDFF43B4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1CDFF20A4(*(void **)a1, *(_BYTE *)(a1 + 8), *(void (**)(uint64_t))(v5 + 16), *(_QWORD *)(v5 + 24), *(void (**)(_QWORD *))(v5 + 32), *(_QWORD *)(v5 + 40), a2, a3, a4, a5);
}

uint64_t HealthKitStandaloneWorkoutJobProcessed.healthKitStandaloneWorkoutJob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HealthKitStandaloneWorkoutJobProcessed.init(healthKitStandaloneWorkoutJob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static HealthKitStandaloneWorkoutJobProcessed.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HealthKitStandaloneWorkoutJobProcessed(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthKitStandaloneWorkoutJobProcessed()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF4634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HealthKitStandaloneWorkoutJobProcessed()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF467C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B58C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HealthKitStandaloneWorkoutJobProcessed()
{
  uint64_t result;

  result = qword_1ED8F0E08;
  if (!qword_1ED8F0E08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFF46F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B58C4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CDFF4760()
{
  return CatalogClientProtocol.fetchRemoteNavigationEditorialContent()();
}

uint64_t CatalogClientProtocol.fetchRemoteNavigationEditorialContent()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1CE0B422C();
  sub_1CDFF4818();
  v1 = swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x1E0D90738], v0);
  *(_QWORD *)(swift_allocObject() + 16) = v1;
  sub_1CE0B56FC();
  return sub_1CE0B5C0C();
}

unint64_t sub_1CDFF4818()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5E068;
  if (!qword_1EFA5E068)
  {
    v1 = sub_1CE0B422C();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90768], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA5E068);
  }
  return result;
}

uint64_t CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a4 + 56))(a1, a2, 0, 1, a3, a4);
}

uint64_t CatalogClientProtocol.queryCachedCatalogWorkoutDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a4 + 280))(a1, a2, 0, 1, a3, a4);
}

uint64_t CatalogClientProtocol.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t))(a6 + 272))(a1, a2 & 1, a3, a4, 0, 1, a5, a6);
}

id sub_1CDFF48AC(void *a1)
{
  swift_willThrow();
  return a1;
}

uint64_t sub_1CDFF48DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1CDFF4900()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_willThrow();
  return v1;
}

uint64_t dispatch thunk of CatalogClientProtocol.deleteAllCatalogTipJournals()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CatalogClientProtocol.deleteCatalog()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CatalogClientProtocol.deleteCatalogSyncAnchor()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogEditorialCollectionDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogModalityDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogProgramDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkoutDetail(_:completedCountOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a6 + 56))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogWorkouts(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteNavigationEditorialContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerDetail(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteCatalogLockups(displayStyle:placeholders:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteGalleryLockups(displayStyle:identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteExploreShelfLockupDescriptors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteShelfLockupDescriptors()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteShowcaseLockupContent()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTopShelfCatalogWorkoutDetails()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of CatalogClientProtocol.fetchRemoteTrainerTipGalleryDetail()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of CatalogClientProtocol.filterCatalog(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of CatalogClientProtocol.insertCatalogTipJournal(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of CatalogClientProtocol.insertChangeset(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogModalityReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogProgramReferences()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogWorkoutReferenceCount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogWorkoutReferences(workoutIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of CatalogClientProtocol.filterCatalogWorkoutReferenceIdentifiers(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllCatalogThemeCategories()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryAllMusicGenres()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCachedCatalogWorkoutLockups(inclusion:displayStyle:sortMode:limit:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD))(a8 + 272))(a1, a2 & 1, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCachedCatalogWorkoutDetail(_:completedCountOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(a6 + 280))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryFilterOptions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 288))();
}

uint64_t dispatch thunk of CatalogClientProtocol.requestCatalogLockupPlaceholderBackfill(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 296))();
}

uint64_t dispatch thunk of CatalogClientProtocol.refreshRemoteCatalogWorkoutMetadata(mediaTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogSyncAnchor()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 312) + *(_QWORD *)(a3 + 312));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CatalogClientProtocol.requestCatalogSync(mode:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of CatalogClientProtocol.enumerateCatalogWorkoutReferences(handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 328) + *(_QWORD *)(a4 + 328));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of CatalogClientProtocol.queryCatalogWorkoutReferences(releasedSince:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 336))();
}

uint64_t dispatch thunk of CatalogClientProtocol.queryLatestCatalogWorkoutReferences(limit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t MultiUserSessionUpdated.multiUserSession.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4BEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MultiUserSessionUpdated.init(multiUserSession:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MultiUserSessionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MultiUserSessionUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4BEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserSessionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserSessionUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF4D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserSessionUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF4DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4BEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

id sub_1CDFF4DF0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  void (*v13)(char *, uint64_t);
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(void);
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  char *v29;
  void *v30;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;

  v39 = sub_1CE0B5E04();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v35 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CE0B482C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v7, sel_setActivityType_, sub_1CE0B5D74());
  sub_1CE0B5CF0();
  v8 = sub_1CE0B4820();
  v10 = v9;
  v12 = v11 & 1;
  v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v38 = v3;
  v13(v6, v3);
  v40 = v8;
  v41 = v10;
  v42 = v12;
  v43 = 0;
  v14 = sub_1CDFF5110();
  sub_1CDFF5154();
  v34 = v14;
  LOBYTE(v14) = sub_1CE0B42EC();
  v15 = v10;
  v16 = a1;
  sub_1CDFF37CC(v8, v15, v12);
  v17 = v36;
  v18 = *(void (**)(void))(v36 + 16);
  v19 = v35;
  v37 = v16;
  v18();
  if ((v14 & 1) != 0)
  {
    v20 = *(void (**)(char *, uint64_t))(v17 + 8);
    v20(v19, v39);
    v21 = v38;
  }
  else
  {
    sub_1CE0B5CF0();
    v22 = sub_1CE0B4820();
    v24 = v23;
    v26 = v25 & 1;
    v33 = v13;
    v13(v6, v38);
    v40 = v22;
    v41 = v24;
    v42 = v26;
    v43 = 1;
    v27 = sub_1CE0B42EC();
    sub_1CDFF37CC(v22, v24, v26);
    v20 = *(void (**)(char *, uint64_t))(v17 + 8);
    v20(v19, v39);
    if ((v27 & 1) == 0)
    {
      v28 = 2;
      objc_msgSend(v7, sel_setLocationType_, 2);
      v21 = v38;
      v13 = v33;
      goto LABEL_7;
    }
    v21 = v38;
    v13 = v33;
  }
  objc_msgSend(v7, sel_setLocationType_, 3);
  v28 = 1;
  objc_msgSend(v7, sel_setShouldDisambiguateLocation_, 1);
LABEL_7:
  objc_msgSend(v7, sel_setFitnessPlusMediaType_, v28);
  v29 = v37;
  sub_1CE0B5CF0();
  sub_1CE0B46AC();
  v13(v6, v21);
  v30 = (void *)sub_1CE0B626C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setFitnessPlusCatalogWorkoutId_, v30);

  v20(v29, v39);
  return v7;
}

unint64_t sub_1CDFF5110()
{
  unint64_t result;

  result = qword_1EFA5E680;
  if (!qword_1EFA5E680)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D91C28], MEMORY[0x1E0D91C18]);
    atomic_store(result, (unint64_t *)&qword_1EFA5E680);
  }
  return result;
}

unint64_t sub_1CDFF5154()
{
  unint64_t result;

  result = qword_1EFA5E688;
  if (!qword_1EFA5E688)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D91C30], MEMORY[0x1E0D91C18]);
    atomic_store(result, (unint64_t *)&qword_1EFA5E688);
  }
  return result;
}

uint64_t MetricTopicRoutingBehavior.clickStreamTopic(isSubscribed:platform:)(char a1, char a2, uint64_t a3)
{
  uint64_t v4;
  BOOL v5;
  unsigned int v6;

  if ((_BYTE)a3)
  {
    if (a3 != 1)
    {
      v4 = Platform.supportedFeatures.getter(a2);
      v5 = sub_1CDFF521C(0x22u, v4);
      swift_bridgeObjectRelease();
      if ((a1 & 1) != 0)
        v6 = 0;
      else
        v6 = 2;
      if (v5)
        return 3;
      else
        return v6;
    }
  }
  else if ((a1 & 1) != 0)
  {
    return 0;
  }
  else
  {
    return 2;
  }
  return a3;
}

BOOL sub_1CDFF521C(unsigned __int8 a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = a1;
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  v4 = sub_1CE0B6D64();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(unsigned __int8 *)(v8 + v11);
    result = v12 == v3;
    if (v12 == v3)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1CDFF5308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1CE0B6D34();
    sub_1CE0B62CC();
    v6 = sub_1CE0B6D64();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1CE0B6C50() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1CE0B6C50() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t dispatch thunk of UpNextQueueClientProtocol.processUpNextQueueUpdates(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t CommentaryEventStarted.commentaryEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CommentaryEventStarted.init(commentaryEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static CommentaryEventStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CommentaryEventStarted(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CommentaryEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommentaryEventStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF5654(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CommentaryEventStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF569C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B49B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CommentaryEventStarted()
{
  uint64_t result;

  result = qword_1EFA5E6E8;
  if (!qword_1EFA5E6E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFF5718()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B49B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t static CatalogTipConstants.lastPostTipUpsellViewedDateDefaultKey.getter()
{
  return 0xD00000000000001BLL;
}

ValueMetadata *type metadata accessor for CatalogTipConstants()
{
  return &type metadata for CatalogTipConstants;
}

uint64_t AssetRequest.ExpirationPolicy.interval.getter(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 && !a1)
    return sub_1CE0B6668();
  else
    return sub_1CE0B665C();
}

uint64_t BlockingPromise.init(_:timeout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = sub_1CE0B5C6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a3, a1, v8);
  result = type metadata accessor for BlockingPromise(0, a2, v9, v10);
  *(double *)(a3 + *(int *)(result + 28)) = a4;
  return result;
}

uint64_t type metadata accessor for BlockingPromise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BlockingPromise);
}

void BlockingPromise.resolve()(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  dispatch_semaphore_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  NSObject *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v39 = a2;
  v47 = a1;
  v2 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v3 = sub_1CE0B6DA0();
  v4 = sub_1CE0B68A8();
  v36 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v33 - v5;
  v6 = sub_1CE0B6170();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v43 = (char *)&v33 - v10;
  v11 = sub_1CE0B5C6C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - v13;
  v15 = dispatch_semaphore_create(0);
  v37 = v4;
  v16 = swift_allocBox();
  v17 = *(_QWORD *)(v3 - 8);
  v34 = v18;
  v35 = v17;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v40 = v3;
  v19(v18, 1, 1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v44, v11);
  v20 = (_QWORD *)swift_allocObject();
  v38 = v2;
  v20[2] = v2;
  v20[3] = v16;
  v20[4] = v15;
  v42 = v16;
  swift_retain();
  v21 = v15;
  sub_1CE0B5C48();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1CE0B6164();
  sub_1CE0B6674();
  v22 = v43;
  MEMORY[0x1D17BF4F8](v9);
  v23 = *(void (**)(char *, uint64_t))(v45 + 8);
  v24 = v9;
  v25 = v46;
  v23(v24, v46);
  LOBYTE(v15) = sub_1CE0B6818();
  v23(v22, v25);
  if ((v15 & 1) != 0)
  {
    sub_1CDFF5D0C();
    swift_allocError();
    *v32 = 0;
    swift_willThrow();

  }
  else
  {
    v26 = v21;
    v28 = v38;
    v27 = v39;
    v29 = v34;
    swift_beginAccess();
    v30 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v41, v29, v37);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v30, 1, v40) == 1)
    {
      sub_1CDFF5D0C();
      swift_allocError();
      *v31 = 1;
LABEL_6:
      swift_willThrow();
      swift_release();

      return;
    }
    if (swift_getEnumCaseMultiPayload() == 1)
      goto LABEL_6;

    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, v30, v28);
  }
  swift_release();
}

uint64_t sub_1CDFF5BC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v2 = sub_1CE0B6DA0();
  v3 = sub_1CE0B68A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - v5;
  v7 = swift_projectBox();
  v8 = *(_QWORD *)(v2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v2);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v2);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v7, v6, v3);
  return sub_1CE0B6824();
}

uint64_t sub_1CDFF5CD4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CDFF5D00(uint64_t a1)
{
  return sub_1CDFF5BC4(a1);
}

unint64_t sub_1CDFF5D0C()
{
  unint64_t result;

  result = qword_1EFA5E720;
  if (!qword_1EFA5E720)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C469C, &type metadata for BlockingError);
    atomic_store(result, (unint64_t *)&qword_1EFA5E720);
  }
  return result;
}

uint64_t sub_1CDFF5D50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5C6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1CDFF5DC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B5C6C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t sub_1CDFF5E54(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1CDFF5E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B5C6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1CDFF5EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B5C6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1CDFF5F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B5C6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1CDFF5FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B5C6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_1CDFF600C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF6018(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1CDFF6058()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF6064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5C6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t ActivityRingsUpdated.activityRings.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B43B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ActivityRingsUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActivityRingsUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ActivityRingsUpdated()
{
  uint64_t result;

  result = qword_1EFA5E780;
  if (!qword_1EFA5E780)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ActivityRingsUpdated.init(activityRings:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B43B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for ActivityRingsUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static ActivityRingsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityRingsUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B43B8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActivityRingsUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B43B8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B43B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B43B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B43B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ActivityRingsUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B43B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityRingsUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF6460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B43B8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityRingsUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFF64EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B43B8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CDFF6568()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B43B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryNoticePrivacyPreference()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.updateNoticePrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryOptInPrivacyPreference()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.updateOptInPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryPrivacyAcknowledgement(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 56))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.insertPrivacyAcknowledgement(for:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(a5 + 64))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.insertPersonalizationPrivacyPreference(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PrivacyPreferenceClientProtocol.queryPersonalizationPrivacyPreference()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t EventHub.__allocating_init(queue:dispatchStrategy:timerProvider:)(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = swift_allocObject();
  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_1CDFF77A4(a1, a2, (uint64_t)v11, v6, v7, v8);
  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  return v13;
}

uint64_t sub_1CDFF66F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  double v41;
  uint64_t v42;
  uint64_t v43[3];

  v12 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B68A8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v30 - v19;
  v36 = a4;
  v37 = a5;
  v33 = a5;
  v34 = v6;
  v38 = v6;
  v39 = a2;
  v31 = a2;
  v35 = a3;
  v40 = a3;
  v41 = a6;
  sub_1CDFC1778((void (*)(void))sub_1CDFF79EC);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, a4) == 1)
  {
    v21 = *(void (**)(char *, uint64_t))(v15 + 8);
    v21(v18, v14);
    if (qword_1ED8F1890 != -1)
      swift_once();
    v22 = sub_1CE0B6080();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED8F1870);
    v23 = v35;
    swift_bridgeObjectRetain_n();
    v24 = sub_1CE0B6068();
    v25 = sub_1CE0B671C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v43[0] = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      v42 = sub_1CDFC7270(v31, v23, v43);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1CDFAA000, v24, v25, "Attempted to deliver %{public}s, but found no queued event", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v27, -1, -1);
      MEMORY[0x1D17C092C](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    return ((uint64_t (*)(char *, uint64_t))v21)(v20, v14);
  }
  else
  {
    v28 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v32, v18, a4);
    sub_1CDFC4C80(v28, a4, v33);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v28, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
}

uint64_t sub_1CDFF6A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>, double a6@<D0>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v43;
  uint64_t v44;
  _QWORD v46[2];
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  _UNKNOWN **v56;

  v52 = a5;
  v11 = sub_1CE0B68A8();
  v12 = *(_QWORD *)(v11 - 8);
  v50 = v11;
  v51 = v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v47 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v46 - v15;
  v19 = type metadata accessor for PublishRecord(255, a4, v17, v18);
  v20 = sub_1CE0B68A8();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v53 = (char *)v46 - v25;
  v46[1] = a1 + 88;
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 88);
  v27 = *(_QWORD *)(v26 + 16);
  v48 = a2;
  v49 = a3;
  if (v27)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1CDFD1DAC(a2, a3);
    if ((v29 & 1) != 0)
    {
      sub_1CDFAC5C8(*(_QWORD *)(v26 + 56) + 40 * v28, (uint64_t)&v54);
    }
    else
    {
      v56 = 0;
      v54 = 0u;
      v55 = 0u;
    }
    v30 = v20;
    v32 = v51;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v21;
    if (*((_QWORD *)&v55 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7C8);
      v33 = v53;
      v34 = swift_dynamicCast();
      v35 = *(_QWORD *)(v19 - 8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v33, v34 ^ 1u, 1, v19);
      goto LABEL_9;
    }
  }
  else
  {
    v56 = 0;
    v54 = 0u;
    v55 = 0u;
    v30 = v20;
    v31 = v21;
    v32 = v51;
  }
  sub_1CDFF7A10((uint64_t)&v54);
  v35 = *(_QWORD *)(v19 - 8);
  v33 = v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v53, 1, 1, v19);
LABEL_9:
  v36 = v33;
  v37 = v50;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v24, v36, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v24, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
    v38 = *(_QWORD *)(a4 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v16, 1, 1, a4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v16, &v24[*(int *)(v19 + 28)], v37);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v19);
    v38 = *(_QWORD *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v16, 1, a4) != 1)
    {
      v39 = v52;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v52, v16, a4);
      v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
      v41 = (uint64_t)v47;
      v40(v47, 1, 1, a4);
      *((_QWORD *)&v55 + 1) = v19;
      v56 = &protocol witness table for PublishRecord<A>;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v54);
      PublishRecord.init(lastDelivery:queuedEvent:timer:)(v41, 0, a4, v43, (double *)boxed_opaque_existential_1, a6);
      swift_beginAccess();
      v44 = v49;
      swift_bridgeObjectRetain();
      sub_1CDFE3EFC((uint64_t)&v54, v48, v44);
      swift_endAccess();
      v40(v39, 0, 1, a4);
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v53, v30);
    }
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v37);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v52, 1, 1, a4);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v53, v30);
}

uint64_t EventHub.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventHub.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CDFF6E78(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v41;
  double v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, double);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __int128 v69;
  __int128 v70;
  _UNKNOWN **v71;

  v56 = a6;
  v62 = a4;
  v61 = sub_1CE0B3DF4();
  v60 = *(_QWORD **)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = sub_1CE0B68A8();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v68 = (char *)&v56 - v16;
  v19 = type metadata accessor for PublishRecord(255, a5, v17, v18);
  v59 = sub_1CE0B68A8();
  v58 = *(_QWORD *)(v59 - 8);
  v20 = MEMORY[0x1E0C80A78](v59);
  v22 = (char *)&v56 - v21;
  v23 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v20);
  v25 = (double *)((char *)&v56 - v24);
  v63 = a1 + 11;
  swift_beginAccess();
  v57 = a1;
  v26 = a1[11];
  v27 = *(_QWORD *)(v26 + 16);
  v66 = a2;
  v67 = a3;
  if (!v27)
  {
    v71 = 0;
    v69 = 0u;
    v70 = 0u;
    v30 = v23;
    v31 = v65;
LABEL_9:
    sub_1CDFF7A10((uint64_t)&v69);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v22, 1, 1, v19);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = sub_1CDFD1DAC(a2, a3);
  if ((v29 & 1) != 0)
  {
    sub_1CDFAC5C8(*(_QWORD *)(v26 + 56) + 40 * v28, (uint64_t)&v69);
  }
  else
  {
    v71 = 0;
    v69 = 0u;
    v70 = 0u;
  }
  v30 = v23;
  v31 = v65;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v70 + 1))
    goto LABEL_9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7C8);
  v32 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v22, v32 ^ 1u, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v22, 1, v19) != 1)
  {
    (*(void (**)(double *, char *, uint64_t))(v30 + 32))(v25, v22, v19);
    goto LABEL_11;
  }
LABEL_10:
  v33 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 56))(v68, 1, 1, a5);
  sub_1CE0B3D94();
  sub_1CE0B3D70();
  v35 = v34;
  ((void (*)(char *, uint64_t))v60[1])(v15, v61);
  PublishRecord.init(lastDelivery:queuedEvent:timer:)(v33, 0, a5, v36, v25, v35);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v22, v59);
LABEL_11:
  v37 = v66;
  if (*(_QWORD *)((char *)v25 + *(int *)(v19 + 32)))
  {
    v38 = *(_QWORD *)(a5 - 8);
    v39 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v68, v62, a5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v39, 0, 1, a5);
    *((_QWORD *)&v70 + 1) = v19;
    v71 = &protocol witness table for PublishRecord<A>;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v69);
    v41 = v67;
    swift_bridgeObjectRetain();
    sub_1CE05F944(0.0, 1, v39, 0, v19, (double *)boxed_opaque_existential_1);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v39, v31);
    swift_beginAccess();
    sub_1CDFE3EFC((uint64_t)&v69, v37, v41);
    swift_endAccess();
    return (*(uint64_t (**)(double *, uint64_t))(v30 + 8))(v25, v19);
  }
  else
  {
    if (a8 - (a7 - *v25) < 0.0)
      v43 = 0.0;
    else
      v43 = a8 - (a7 - *v25);
    v44 = v57;
    v61 = v30;
    v45 = v57[8];
    v46 = v57[9];
    v60 = __swift_project_boxed_opaque_existential_1(v57 + 5, v45);
    v47 = v44[2];
    v48 = swift_allocObject();
    v49 = v56;
    *(_QWORD *)(v48 + 16) = a5;
    *(_QWORD *)(v48 + 24) = v49;
    *(_QWORD *)(v48 + 32) = v44;
    *(_QWORD *)(v48 + 40) = v37;
    v50 = v67;
    *(_QWORD *)(v48 + 48) = v67;
    *(double *)(v48 + 56) = v43 + a7;
    v51 = *(uint64_t (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, double))(v46 + 8);
    swift_bridgeObjectRetain();
    swift_retain();
    v52 = v51(v47, sub_1CDFF7BB8, v48, v45, v46, v43);
    swift_release();
    v53 = *(_QWORD *)(a5 - 8);
    v54 = (uint64_t)v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v68, v62, a5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v54, 0, 1, a5);
    *((_QWORD *)&v70 + 1) = v19;
    v71 = &protocol witness table for PublishRecord<A>;
    v55 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v69);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    sub_1CE05F944(0.0, 1, v54, v52, v19, (double *)v55);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v54, v65);
    swift_beginAccess();
    sub_1CDFE3EFC((uint64_t)&v69, v66, v50);
    swift_endAccess();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(double *, uint64_t))(v61 + 8))(v25, v19);
  }
}

uint64_t sub_1CDFF743C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_1CDFACD3C;
  return v5();
}

uint64_t sub_1CDFF7490(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  *(_QWORD *)(v7 + 64) = a7;
  v11 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 72) = v9;
  *v9 = v7;
  v9[1] = sub_1CDFF74F8;
  return v11(a6);
}

uint64_t sub_1CDFF74F8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CDFF7564()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = *(void **)(v0 + 80);
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
  v3 = v1;
  v4 = v1;
  v5 = sub_1CE0B6068();
  v6 = sub_1CE0B671C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 80);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136315394;
    v11 = sub_1CE0B6DF4();
    *(_QWORD *)(v0 + 40) = sub_1CDFC7270(v11, v12, &v16);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    v13 = MEMORY[0x1D17C0050](*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    *(_QWORD *)(v0 + 56) = sub_1CDFC7270(v13, v14, &v16);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v5, v6, "Caught error while executing %s: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v10, -1, -1);
    MEMORY[0x1D17C092C](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFF77A4(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v16[5];

  v6 = a5;
  v16[3] = a5;
  v16[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(boxed_opaque_existential_1, a3, v6);
  LOBYTE(v6) = *a2;
  sub_1CDFAC5C8((uint64_t)v16, a4 + 40);
  *(_QWORD *)(a4 + 16) = a1;
  *(_BYTE *)(a4 + 32) = v6;
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  *(_QWORD *)(a4 + 24) = v12;
  v14 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a4 + 80) = MEMORY[0x1E0DEE9E0];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  *(_QWORD *)(a4 + 88) = v14;
  return a4;
}

uint64_t sub_1CDFF786C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CDFF78D8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CDFF78FC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CDFF7928()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v2 = *(int **)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD3C;
  v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  v4 = (_QWORD *)swift_task_alloc();
  v3[2] = v4;
  *v4 = v3;
  v4[1] = sub_1CDFACD3C;
  return v6();
}

uint64_t sub_1CDFF79A4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t dispatch thunk of EventHubProtocol.publish<A>(_:atTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of EventHubProtocol.unsubscribe(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t method lookup function for EventHub()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EventHub.__allocating_init(queue:dispatchStrategy:timerProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1CDFF79EC@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1CDFF6A1C(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), a1, *(double *)(v1 + 56));
}

uint64_t sub_1CDFF7A10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E080);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CDFF7A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CDFF7AD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 32) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(int **)(v0 + 48);
  v5 = v0 + v3;
  v6 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v7;
  *v7 = v1;
  v7[1] = sub_1CDFACD3C;
  v7[8] = v6;
  v10 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v8 = (_QWORD *)swift_task_alloc();
  v7[9] = v8;
  *v8 = v7;
  v8[1] = sub_1CDFF74F8;
  return v10(v5);
}

uint64_t sub_1CDFF7B8C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CDFF7BB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFF66F0(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(double *)(v1 + 56));
}

uint64_t static BurnBarDisplayPreference.default()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = sub_1CE0B5B4C();
  MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0D95D00]);
  return sub_1CE0B53F0();
}

uint64_t Session.token.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = sub_1CE0B5C9C();
  v2 = v1;
  type metadata accessor for SessionToken();
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v0;
  *(_QWORD *)(result + 24) = v2;
  *(_BYTE *)(result + 32) = 0;
  return result;
}

uint64_t CatalogWorkout.metadata()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[16];

  v13[15] = a1;
  v1 = sub_1CE0B3D10();
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E0);
  MEMORY[0x1E0C80A78](v3);
  v13[0] = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  MEMORY[0x1E0C80A78](v5);
  v13[14] = sub_1CE0B476C();
  v13[13] = sub_1CE0B47B4();
  v13[12] = sub_1CE0B473C();
  v13[11] = sub_1CE0B4748();
  v13[10] = sub_1CE0B46F4();
  v6 = sub_1CE0B46AC();
  v13[8] = v7;
  v13[9] = v6;
  v13[7] = sub_1CE0B4760();
  v8 = sub_1CE0B47F0();
  v13[5] = v9;
  v13[6] = v8;
  v13[4] = sub_1CE0B470C();
  v10 = sub_1CE0B4778();
  v13[2] = v11;
  v13[3] = v10;
  sub_1CE0B4754();
  v13[1] = sub_1CE0B46DC();
  sub_1CE0B47CC();
  sub_1CE0B46B8();
  sub_1CE0B4784();
  sub_1CE0B4718();
  sub_1CE0B47D8();
  sub_1CE0B4790();
  sub_1CE0B4730();
  return sub_1CE0B50E4();
}

uint64_t Termination.applyingTimestampOffset(_:)()
{
  sub_1CE0B4154();
  return sub_1CE0B4160();
}

uint64_t sub_1CDFF7F08()
{
  sub_1CE0B4154();
  return sub_1CE0B4160();
}

uint64_t ResourceGating.release(throwing:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  id v11;
  uint64_t v13;

  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v6 = sub_1CE0B6DA0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - v8;
  *(uint64_t *)((char *)&v13 - v8) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(char *, uint64_t, uint64_t))(a3 + 48);
  v11 = a1;
  v10(v9, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t dispatch thunk of ResourceGating.queueCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ResourceGating.query()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ResourceGating.fetch()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ResourceGating.reset()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ResourceGating.release(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

void static RemoteParticipantDiscoveryExpired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t SessionUpdate.applyingTimestampOffset(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  void (*v133)(char *, uint64_t, uint64_t, uint64_t);
  void (*v134)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  char *v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  uint64_t v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  char *v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  char *v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  int v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  uint64_t v308;
  char *v309;
  char *v310;
  char *v311;
  char *v312;
  char *v313;
  char *v314;
  char *v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  char *v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  uint64_t v333;
  char v334;
  char v335;
  char v336;
  char v337;
  char v338;

  v308 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v330 = (char *)&v276 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v310 = (char *)&v276 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  v7 = MEMORY[0x1E0C80A78](v6);
  v307 = (char *)&v276 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v309 = (char *)&v276 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  v11 = MEMORY[0x1E0C80A78](v10);
  v324 = (char *)&v276 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v332 = (char *)&v276 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  v15 = MEMORY[0x1E0C80A78](v14);
  v306 = (char *)&v276 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v329 = (char *)&v276 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  v19 = MEMORY[0x1E0C80A78](v18);
  v305 = (char *)&v276 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v328 = (char *)&v276 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  v23 = MEMORY[0x1E0C80A78](v22);
  v303 = (char *)&v276 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v276 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D938);
  MEMORY[0x1E0C80A78](v27);
  v282 = (char *)&v276 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  v30 = MEMORY[0x1E0C80A78](v29);
  v301 = (char *)&v276 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v327 = (char *)&v276 - v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  v34 = MEMORY[0x1E0C80A78](v33);
  v296 = (char *)&v276 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v326 = (char *)&v276 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D898);
  MEMORY[0x1E0C80A78](v37);
  v281 = (char *)&v276 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  v40 = MEMORY[0x1E0C80A78](v39);
  v295 = (char *)&v276 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v325 = (char *)&v276 - v42;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  v44 = MEMORY[0x1E0C80A78](v43);
  v294 = (char *)&v276 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v323 = (char *)&v276 - v46;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  v48 = MEMORY[0x1E0C80A78](v47);
  v311 = (char *)&v276 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v48);
  v322 = (char *)&v276 - v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  v52 = MEMORY[0x1E0C80A78](v51);
  v304 = (char *)&v276 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v52);
  v321 = (char *)&v276 - v54;
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E800);
  MEMORY[0x1E0C80A78](v55);
  v280 = (char *)&v276 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E808);
  MEMORY[0x1E0C80A78](v57);
  v279 = (char *)&v276 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  v60 = MEMORY[0x1E0C80A78](v59);
  v293 = (char *)&v276 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v60);
  v320 = (char *)&v276 - v62;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  v64 = MEMORY[0x1E0C80A78](v63);
  v292 = (char *)&v276 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v64);
  v331 = (char *)&v276 - v66;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  v68 = MEMORY[0x1E0C80A78](v67);
  v291 = (char *)&v276 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v68);
  v319 = (char *)&v276 - v70;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  v72 = MEMORY[0x1E0C80A78](v71);
  v290 = (char *)&v276 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v72);
  v318 = (char *)&v276 - v74;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  v76 = MEMORY[0x1E0C80A78](v75);
  v289 = (char *)&v276 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v76);
  v317 = (char *)&v276 - v78;
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  v80 = MEMORY[0x1E0C80A78](v79);
  v288 = (char *)&v276 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v80);
  v316 = (char *)&v276 - v82;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  v84 = MEMORY[0x1E0C80A78](v83);
  v287 = (char *)&v276 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v84);
  v315 = (char *)&v276 - v86;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F0);
  MEMORY[0x1E0C80A78](v87);
  v278 = (char *)&v276 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F8);
  MEMORY[0x1E0C80A78](v89);
  v277 = (char *)&v276 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D900);
  MEMORY[0x1E0C80A78](v91);
  v276 = (char *)&v276 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  v94 = MEMORY[0x1E0C80A78](v93);
  v286 = (char *)&v276 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v94);
  v97 = (char *)&v276 - v96;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  v99 = MEMORY[0x1E0C80A78](v98);
  v285 = (char *)&v276 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v99);
  v314 = (char *)&v276 - v101;
  v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  v103 = MEMORY[0x1E0C80A78](v102);
  v284 = (char *)&v276 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v103);
  v313 = (char *)&v276 - v105;
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  v107 = MEMORY[0x1E0C80A78](v106);
  v283 = (char *)&v276 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v107);
  v312 = (char *)&v276 - v109;
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D928);
  v111 = MEMORY[0x1E0C80A78](v110);
  v113 = (char *)&v276 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v111);
  v115 = (char *)&v276 - v114;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D930);
  MEMORY[0x1E0C80A78](v116);
  v118 = (char *)&v276 - ((v117 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v120 = MEMORY[0x1E0C80A78](v119);
  v122 = (char *)&v276 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v120);
  v124 = (char *)&v276 - v123;
  v299 = sub_1CE0B4580();
  v298 = sub_1CE0B458C();
  v297 = v125;
  v333 = v1;
  sub_1CE0B4508();
  v126 = sub_1CE0B43B8();
  v127 = *(_QWORD *)(v126 - 8);
  v128 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 48))(v122, 1, v126);
  v302 = v26;
  if (v128 == 1)
  {
    sub_1CDFB13F8((uint64_t)v122, &qword_1EFA5D940);
    v129 = 1;
  }
  else
  {
    v130 = sub_1CE0B4B38();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v118, 1, 1, v130);
    v131 = sub_1CE0B41F0();
    v132 = v97;
    v133 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v131 - 8) + 56);
    v133(v115, 1, 1, v131);
    v133(v113, 1, 1, v131);
    v97 = v132;
    sub_1CE0B437C();
    sub_1CE0B43AC();
    sub_1CDFB13F8((uint64_t)v113, &qword_1EFA5D928);
    sub_1CDFB13F8((uint64_t)v115, &qword_1EFA5D928);
    sub_1CDFB13F8((uint64_t)v118, &qword_1EFA5D930);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v122, v126);
    v129 = 0;
  }
  v134 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56);
  v300 = v124;
  v134(v124, v129, 1, v126);
  v135 = (uint64_t)v283;
  sub_1CE0B45A4();
  v136 = sub_1CE0B5000();
  v137 = *(_QWORD *)(v136 - 8);
  v138 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v137 + 48))(v135, 1, v136);
  v139 = v318;
  v140 = v316;
  v141 = v313;
  if (v138 == 1)
  {
    sub_1CDFB13F8(v135, &qword_1EFA5D920);
    v142 = 1;
    v143 = v312;
  }
  else
  {
    sub_1CE0B4FE8();
    v143 = v312;
    sub_1CE0B4FF4();
    (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v135, v136);
    v142 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v137 + 56))(v143, v142, 1, v136);
  v144 = (uint64_t)v284;
  sub_1CE0B4544();
  v145 = sub_1CE0B4A24();
  v146 = *(_QWORD *)(v145 - 8);
  v147 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145);
  v148 = (uint64_t)v285;
  if (v147 == 1)
  {
    sub_1CDFB13F8(v144, &qword_1EFA5D910);
    v149 = 1;
  }
  else
  {
    sub_1CE0B4A0C();
    sub_1CE0B4A18();
    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v144, v145);
    v149 = 0;
  }
  v150 = (uint64_t)v311;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v146 + 56))(v141, v149, 1, v145);
  sub_1CE0B45F8();
  v151 = sub_1CE0B5FA8();
  v152 = *(_QWORD *)(v151 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v148, 1, v151) == 1)
  {
    sub_1CDFB13F8(v148, &qword_1EFA5D918);
    v153 = 1;
    v154 = v314;
  }
  else
  {
    sub_1CE0B5F90();
    v154 = v314;
    sub_1CE0B5F9C();
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v148, v151);
    v153 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v152 + 56))(v154, v153, 1, v151);
  v155 = (uint64_t)v286;
  sub_1CE0B4598();
  v156 = sub_1CE0B4D84();
  v157 = *(_QWORD *)(v156 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156) == 1)
  {
    sub_1CDFB13F8(v155, &qword_1EFA5D908);
    v158 = 1;
  }
  else
  {
    v159 = sub_1CE0B53FC();
    v160 = (uint64_t)v276;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v159 - 8) + 56))(v276, 1, 1, v159);
    v161 = sub_1CE0B5444();
    v162 = v140;
    v163 = v139;
    v164 = v277;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v277, 1, 1, v161);
    v165 = sub_1CE0B54F8();
    v166 = v155;
    v167 = (uint64_t)v278;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v278, 1, 1, v165);
    sub_1CE0B4D6C();
    sub_1CE0B4D78();
    sub_1CDFB13F8(v167, &qword_1EFA5D8F0);
    v168 = (uint64_t)v164;
    v139 = v163;
    v140 = v162;
    v150 = (uint64_t)v311;
    sub_1CDFB13F8(v168, &qword_1EFA5D8F8);
    sub_1CDFB13F8(v160, &qword_1EFA5D900);
    (*(void (**)(uint64_t, uint64_t))(v157 + 8))(v166, v156);
    v158 = 0;
  }
  v169 = (uint64_t)v304;
  v170 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v157 + 56);
  v304 = v97;
  v170(v97, v158, 1, v156);
  v171 = (uint64_t)v287;
  sub_1CE0B4520();
  v172 = sub_1CE0B4850();
  v173 = *(_QWORD *)(v172 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172) == 1)
  {
    sub_1CDFB13F8(v171, &qword_1EFA5D8E8);
    v174 = 1;
    v175 = v315;
  }
  else
  {
    v176 = v171;
    sub_1CE0B4838();
    v175 = v315;
    sub_1CE0B4844();
    (*(void (**)(uint64_t, uint64_t))(v173 + 8))(v176, v172);
    v174 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v173 + 56))(v175, v174, 1, v172);
  v177 = (uint64_t)v288;
  sub_1CE0B44FC();
  v178 = sub_1CE0B4274();
  v179 = *(_QWORD *)(v178 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v177, 1, v178) == 1)
  {
    sub_1CDFB13F8(v177, &qword_1EFA5D8E0);
    v180 = 1;
  }
  else
  {
    sub_1CE0B4250();
    sub_1CE0B4268();
    (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v177, v178);
    v180 = 0;
  }
  v181 = (uint64_t)v291;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56))(v140, v180, 1, v178);
  v182 = (uint64_t)v289;
  sub_1CE0B4568();
  v183 = sub_1CE0B4B80();
  v184 = *(_QWORD *)(v183 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v182, 1, v183) == 1)
  {
    sub_1CDFB13F8(v182, &qword_1EFA5D8D8);
    v185 = 1;
    v186 = v317;
  }
  else
  {
    v187 = v182;
    sub_1CE0B4B68();
    v186 = v317;
    sub_1CE0B4B74();
    (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v187, v183);
    v185 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v184 + 56))(v186, v185, 1, v183);
  v188 = (uint64_t)v290;
  sub_1CE0B4550();
  v189 = sub_1CE0B4A6C();
  v190 = *(_QWORD *)(v189 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189) == 1)
  {
    sub_1CDFB13F8(v188, &qword_1EFA5D8D0);
    v191 = 1;
  }
  else
  {
    sub_1CE0B4A54();
    sub_1CE0B4A60();
    (*(void (**)(uint64_t, uint64_t))(v190 + 8))(v188, v189);
    v191 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v190 + 56))(v139, v191, 1, v189);
  sub_1CE0B44CC();
  v192 = sub_1CE0B3ED8();
  v193 = *(_QWORD *)(v192 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48))(v181, 1, v192) == 1)
  {
    sub_1CDFB13F8(v181, &qword_1EFA5D8C8);
    v194 = 1;
    v195 = v319;
  }
  else
  {
    sub_1CE0B3EC0();
    v195 = v319;
    sub_1CE0B3ECC();
    (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v181, v192);
    v194 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v193 + 56))(v195, v194, 1, v192);
  v196 = (uint64_t)v292;
  sub_1CE0B45B0();
  v197 = sub_1CE0B5078();
  v198 = *(_QWORD *)(v197 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 48))(v196, 1, v197) == 1)
  {
    sub_1CDFB13F8(v196, &qword_1EFA5D8C0);
    v199 = 1;
  }
  else
  {
    sub_1CE0B5054();
    sub_1CE0B506C();
    (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v196, v197);
    v199 = 0;
  }
  v200 = (uint64_t)v296;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v198 + 56))(v331, v199, 1, v197);
  v201 = (uint64_t)v293;
  sub_1CE0B44B4();
  v202 = sub_1CE0B4BEC();
  v203 = *(_QWORD *)(v202 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v203 + 48))(v201, 1, v202) == 1)
  {
    sub_1CDFB13F8(v201, &qword_1EFA5D8B8);
    v204 = 1;
    v205 = v320;
  }
  else
  {
    v206 = sub_1CE0B4CE8();
    v207 = (uint64_t)v279;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v206 - 8) + 56))(v279, 1, 1, v206);
    v208 = sub_1CE0B4CDC();
    v209 = (uint64_t)v280;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v208 - 8) + 56))(v280, 1, 1, v208);
    v210 = v201;
    sub_1CE0B4BD4();
    v205 = v320;
    sub_1CE0B4BE0();
    sub_1CDFB13F8(v209, &qword_1EFA5E800);
    sub_1CDFB13F8(v207, &qword_1EFA5E808);
    (*(void (**)(uint64_t, uint64_t))(v203 + 8))(v210, v202);
    v204 = 0;
  }
  v211 = v323;
  v212 = v321;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v203 + 56))(v205, v204, 1, v202);
  sub_1CE0B44C0();
  v213 = sub_1CE0B56F0();
  v214 = *(_QWORD *)(v213 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(v169, 1, v213) == 1)
  {
    sub_1CDFB13F8(v169, &qword_1EFA5D8B0);
    v215 = 1;
  }
  else
  {
    sub_1CE0B56D8();
    sub_1CE0B56E4();
    (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v169, v213);
    v215 = 0;
  }
  v216 = (uint64_t)v295;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v214 + 56))(v212, v215, 1, v213);
  sub_1CE0B44D8();
  v217 = sub_1CE0B3F20();
  v218 = *(_QWORD *)(v217 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v150, 1, v217) == 1)
  {
    sub_1CDFB13F8(v150, &qword_1EFA5D8A8);
    v219 = 1;
    v220 = v322;
  }
  else
  {
    sub_1CE0B3F08();
    v220 = v322;
    sub_1CE0B3F14();
    (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v150, v217);
    v219 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v218 + 56))(v220, v219, 1, v217);
  v221 = (uint64_t)v294;
  sub_1CE0B452C();
  v222 = sub_1CE0B4880();
  v223 = *(_QWORD *)(v222 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v223 + 48))(v221, 1, v222) == 1)
  {
    sub_1CDFB13F8(v221, &qword_1EFA5D890);
    v224 = 1;
  }
  else
  {
    sub_1CE0B4868();
    sub_1CE0B4874();
    (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v221, v222);
    v224 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v223 + 56))(v211, v224, 1, v222);
  sub_1CE0B45EC();
  v225 = sub_1CE0B5F18();
  v226 = *(_QWORD *)(v225 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v216, 1, v225) == 1)
  {
    sub_1CDFB13F8(v216, &qword_1EFA5D8A0);
    v227 = 1;
    v228 = v325;
  }
  else
  {
    sub_1CE0B5EF4();
    v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D950);
    v230 = (uint64_t)v281;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v229 - 8) + 56))(v281, 1, 1, v229);
    v228 = v325;
    sub_1CE0B5F0C();
    sub_1CDFB13F8(v230, &qword_1EFA5D898);
    (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v216, v225);
    v227 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v226 + 56))(v228, v227, 1, v225);
  sub_1CE0B45BC();
  v231 = sub_1CE0B5384();
  v232 = *(_QWORD *)(v231 - 8);
  v233 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v232 + 48))(v200, 1, v231);
  v234 = v327;
  if (v233 == 1)
  {
    sub_1CDFB13F8(v200, &qword_1EFA5D888);
    v235 = 1;
    v236 = v326;
  }
  else
  {
    sub_1CE0B536C();
    v237 = v326;
    sub_1CE0B5378();
    (*(void (**)(uint64_t, uint64_t))(v232 + 8))(v200, v231);
    v235 = 0;
    v236 = v237;
  }
  v238 = (uint64_t)v301;
  v239 = (uint64_t)v303;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v232 + 56))(v236, v235, 1, v231);
  sub_1CE0B44E4();
  v240 = sub_1CE0B4148();
  v241 = *(_QWORD *)(v240 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v241 + 48))(v238, 1, v240) == 1)
  {
    sub_1CDFB13F8(v238, &qword_1EFA5E7F8);
    v242 = 1;
  }
  else
  {
    sub_1CE0B4118();
    v243 = sub_1CE0B49F4();
    v244 = (uint64_t)v282;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v243 - 8) + 56))(v282, 1, 1, v243);
    v338 = 1;
    v337 = 1;
    v336 = 1;
    v335 = 1;
    v334 = 1;
    sub_1CE0B4130();
    sub_1CDFB13F8(v244, &qword_1EFA5D938);
    (*(void (**)(uint64_t, uint64_t))(v241 + 8))(v238, v240);
    v242 = 0;
  }
  v245 = v310;
  v246 = v309;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v241 + 56))(v234, v242, 1, v240);
  sub_1CE0B44F0();
  v247 = sub_1CE0B416C();
  v248 = *(_QWORD *)(v247 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v248 + 48))(v239, 1, v247) == 1)
  {
    sub_1CDFB13F8(v239, &qword_1EFA5D880);
    v249 = 1;
    v250 = v302;
  }
  else
  {
    sub_1CE0B4154();
    v250 = v302;
    sub_1CE0B4160();
    (*(void (**)(uint64_t, uint64_t))(v248 + 8))(v239, v247);
    v249 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v248 + 56))(v250, v249, 1, v247);
  v251 = (uint64_t)v305;
  sub_1CE0B455C();
  v252 = sub_1CE0B4AE4();
  v253 = *(_QWORD *)(v252 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v253 + 48))(v251, 1, v252) == 1)
  {
    sub_1CDFB13F8(v251, &qword_1EFA5D878);
    v254 = 1;
    v255 = v328;
  }
  else
  {
    v256 = v251;
    sub_1CE0B4ACC();
    v255 = v328;
    sub_1CE0B4AD8();
    (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v256, v252);
    v254 = 0;
  }
  v257 = v329;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v253 + 56))(v255, v254, 1, v252);
  v258 = (uint64_t)v306;
  sub_1CE0B4538();
  v259 = sub_1CE0B4DD8();
  v260 = *(_QWORD *)(v259 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v260 + 48))(v258, 1, v259) == 1)
  {
    sub_1CDFB13F8(v258, &qword_1EFA5D870);
    v261 = 1;
  }
  else
  {
    sub_1CE0B4DB4();
    sub_1CE0B4DC0();
    (*(void (**)(uint64_t, uint64_t))(v260 + 8))(v258, v259);
    v261 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v260 + 56))(v257, v261, 1, v259);
  sub_1CE0B45C8();
  v262 = (uint64_t)v324;
  v263 = sub_1CE0B53C0();
  v264 = *(_QWORD *)(v263 - 8);
  v265 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v262, 1, v263);
  v266 = (uint64_t)v307;
  if (v265 == 1)
  {
    sub_1CDFB13F8(v262, &qword_1EFA5D860);
    v267 = 1;
  }
  else
  {
    sub_1CE0B53A8();
    sub_1CE0B53B4();
    (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v262, v263);
    v267 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v264 + 56))(v332, v267, 1, v263);
  sub_1CE0B45D4();
  v268 = sub_1CE0B5480();
  v269 = *(_QWORD *)(v268 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v269 + 48))(v266, 1, v268) == 1)
  {
    sub_1CDFB13F8(v266, &qword_1EFA5D868);
    v270 = 1;
  }
  else
  {
    sub_1CE0B5468();
    sub_1CE0B5474();
    (*(void (**)(uint64_t, uint64_t))(v269 + 8))(v266, v268);
    v270 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v269 + 56))(v246, v270, 1, v268);
  sub_1CE0B45E0();
  v271 = (uint64_t)v330;
  v272 = sub_1CE0B5EAC();
  v273 = *(_QWORD *)(v272 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v273 + 48))(v271, 1, v272) == 1)
  {
    sub_1CDFB13F8(v271, &qword_1EFA62FF0);
    v274 = 1;
  }
  else
  {
    sub_1CE0B5E88();
    sub_1CE0B5EA0();
    (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v271, v272);
    v274 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v273 + 56))(v245, v274, 1, v272);
  sub_1CE0B4514();
  return sub_1CE0B4574();
}

uint64_t RemoteBrowsingGuestEnvironmentReceived.environment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5978();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static RemoteBrowsingGuestEnvironmentReceived.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5978();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteBrowsingGuestEnvironmentReceived(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingGuestEnvironmentReceived()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFFA340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingGuestEnvironmentReceived()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFFA388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5978();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteBrowsingGuestEnvironmentReceived()
{
  uint64_t result;

  result = qword_1EFA5E868;
  if (!qword_1EFA5E868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFFA404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5978();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static DistributedSessionCancelled.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for DistributedSessionCancelled()
{
  return &type metadata for DistributedSessionCancelled;
}

uint64_t dispatch thunk of AdminClientProtocol.executeScoresTasks()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdminClientProtocol.deleteLocalScores()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdminClientProtocol.requestPersistentStoreStatistics(requiredDataProtection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of NetworkMonitoring.cellularDataRestrictedState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NetworkMonitoring.isAirplaneModeEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NetworkMonitoring.isCellularDataEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of NetworkMonitoring.isRoaming.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of NetworkMonitoring.isWiFiEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of NetworkMonitoring.queryCurrentNetwork()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of NetworkMonitoring.queryInterfaceAvailability()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t RemoteBrowsingGuestAuthenticationCompleted.handshake.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5B04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static RemoteBrowsingGuestAuthenticationCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5B04();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteBrowsingGuestAuthenticationCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteBrowsingGuestAuthenticationCompleted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFFA6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteBrowsingGuestAuthenticationCompleted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CDFFA6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B04();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteBrowsingGuestAuthenticationCompleted()
{
  uint64_t result;

  result = qword_1EFA5E8F8;
  if (!qword_1EFA5E8F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CDFFA778()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5B04();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

Swift::Void __swiftcall TextOutputStreamLog.write(_:)(Swift::String a1)
{
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  swift_bridgeObjectRetain_n();
  v4 = sub_1CE0B6068();
  v5 = sub_1CE0B6734();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v8 = v7;
    *(_DWORD *)v6 = 136446210;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(countAndFlagsBits, (unint64_t)object, &v8);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1CDFAA000, v4, v5, "%{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v7, -1, -1);
    MEMORY[0x1D17C092C](v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1CDFFA988(uint64_t a1, uint64_t a2)
{
  TextOutputStreamLog.write(_:)(*(Swift::String *)&a1);
}

ValueMetadata *type metadata accessor for TextOutputStreamLog()
{
  return &type metadata for TextOutputStreamLog;
}

uint64_t dispatch thunk of TransportClient.sendRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TransportClient.sendRequest<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 48)
                                                                                              + *(_QWORD *)(a7 + 48));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1CDFACD38;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TransportClient.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t dispatch thunk of TransportClient.sendRequest<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(void))(a10 + 32))();
}

uint64_t dispatch thunk of TransportClient.sendRequest<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a7 + 56)
                                                                                              + *(_QWORD *)(a7 + 56));
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 16) = v15;
  *v15 = v7;
  v15[1] = sub_1CDFACD38;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TransportClient.sendRequest<A, B>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a11 + 64) + *(_QWORD *)(a11 + 64));
  v18 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v11 + 16) = v18;
  *v18 = v11;
  v18[1] = sub_1CDFACD3C;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t dispatch thunk of TransportClient.broadcastEvent<A>(_:payload:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 80))();
}

void sub_1CDFFAC74()
{
  id v0;
  void *v1;
  int deviceClassNumber;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    byte_1ED8F0188 = deviceClassNumber == 3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t static Platform.current.getter()
{
  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  return byte_1ED8F0188;
}

uint64_t static Platform.current.setter(char a1)
{
  uint64_t result;

  if (qword_1ED8F0190 != -1)
    swift_once();
  result = swift_beginAccess();
  byte_1ED8F0188 = a1;
  return result;
}

uint64_t (*static Platform.current.modify())()
{
  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void Platform.systemVersion.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    v2 = (id)MobileGestalt_copy_buildVersion_obj();

    if (v2)
    {
      sub_1CE0B6278();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id Platform.internalInstall.getter()
{
  void *v0;
  uint64_t v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = sub_1CE0B62A8();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_isInternal_, v1 + 32);
  swift_release();
  return v2;
}

BOOL Platform.storeDemoMode.getter()
{
  __CFString *v0;
  __CFString *v1;
  int AppBooleanValue;
  BOOL v3;
  Boolean keyExistsAndHasValidFormat;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  keyExistsAndHasValidFormat = 0;
  v0 = (__CFString *)sub_1CE0B626C();
  v1 = (__CFString *)sub_1CE0B626C();
  AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (AppBooleanValue)
    v3 = keyExistsAndHasValidFormat == 0;
  else
    v3 = 1;
  return !v3;
}

SeymourClient::UserDefaultsKeys_optional __swiftcall UserDefaultsKeys.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  SeymourClient::UserDefaultsKeys_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1CE0B6C74();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 57;
  switch(v3)
  {
    case 0:
      goto LABEL_59;
    case 1:
      v5 = 1;
      goto LABEL_59;
    case 2:
      v5 = 2;
      goto LABEL_59;
    case 3:
      v5 = 3;
      goto LABEL_59;
    case 4:
      v5 = 4;
      goto LABEL_59;
    case 5:
      v5 = 5;
      goto LABEL_59;
    case 6:
      v5 = 6;
      goto LABEL_59;
    case 7:
      v5 = 7;
      goto LABEL_59;
    case 8:
      v5 = 8;
      goto LABEL_59;
    case 9:
      v5 = 9;
      goto LABEL_59;
    case 10:
      v5 = 10;
      goto LABEL_59;
    case 11:
      v5 = 11;
      goto LABEL_59;
    case 12:
      v5 = 12;
      goto LABEL_59;
    case 13:
      v5 = 13;
      goto LABEL_59;
    case 14:
      v5 = 14;
      goto LABEL_59;
    case 15:
      v5 = 15;
      goto LABEL_59;
    case 16:
      v5 = 16;
      goto LABEL_59;
    case 17:
      v5 = 17;
      goto LABEL_59;
    case 18:
      v5 = 18;
      goto LABEL_59;
    case 19:
      v5 = 19;
      goto LABEL_59;
    case 20:
      v5 = 20;
      goto LABEL_59;
    case 21:
      v5 = 21;
      goto LABEL_59;
    case 22:
      v5 = 22;
      goto LABEL_59;
    case 23:
      v5 = 23;
      goto LABEL_59;
    case 24:
      v5 = 24;
      goto LABEL_59;
    case 25:
      v5 = 25;
      goto LABEL_59;
    case 26:
      v5 = 26;
      goto LABEL_59;
    case 27:
      v5 = 27;
      goto LABEL_59;
    case 28:
      v5 = 28;
      goto LABEL_59;
    case 29:
      v5 = 29;
      goto LABEL_59;
    case 30:
      v5 = 30;
      goto LABEL_59;
    case 31:
      v5 = 31;
      goto LABEL_59;
    case 32:
      v5 = 32;
      goto LABEL_59;
    case 33:
      v5 = 33;
      goto LABEL_59;
    case 34:
      v5 = 34;
      goto LABEL_59;
    case 35:
      v5 = 35;
      goto LABEL_59;
    case 36:
      v5 = 36;
      goto LABEL_59;
    case 37:
      v5 = 37;
      goto LABEL_59;
    case 38:
      v5 = 38;
      goto LABEL_59;
    case 39:
      v5 = 39;
      goto LABEL_59;
    case 40:
      v5 = 40;
      goto LABEL_59;
    case 41:
      v5 = 41;
      goto LABEL_59;
    case 42:
      v5 = 42;
      goto LABEL_59;
    case 43:
      v5 = 43;
      goto LABEL_59;
    case 44:
      v5 = 44;
      goto LABEL_59;
    case 45:
      v5 = 45;
      goto LABEL_59;
    case 46:
      v5 = 46;
      goto LABEL_59;
    case 47:
      v5 = 47;
      goto LABEL_59;
    case 48:
      v5 = 48;
      goto LABEL_59;
    case 49:
      v5 = 49;
      goto LABEL_59;
    case 50:
      v5 = 50;
      goto LABEL_59;
    case 51:
      v5 = 51;
      goto LABEL_59;
    case 52:
      v5 = 52;
      goto LABEL_59;
    case 53:
      v5 = 53;
      goto LABEL_59;
    case 54:
      v5 = 54;
      goto LABEL_59;
    case 55:
      v5 = 55;
      goto LABEL_59;
    case 56:
      v5 = 56;
LABEL_59:
      v6 = v5;
      break;
    case 57:
      break;
    case 58:
      v6 = 58;
      break;
    case 59:
      v6 = 59;
      break;
    case 60:
      v6 = 60;
      break;
    case 61:
      v6 = 61;
      break;
    case 62:
      v6 = 62;
      break;
    case 63:
      v6 = 63;
      break;
    case 64:
      v6 = 64;
      break;
    case 65:
      v6 = 65;
      break;
    case 66:
      v6 = 66;
      break;
    case 67:
      v6 = 67;
      break;
    case 68:
      v6 = 68;
      break;
    case 69:
      v6 = 69;
      break;
    case 70:
      v6 = 70;
      break;
    case 71:
      v6 = 71;
      break;
    case 72:
      v6 = 72;
      break;
    case 73:
      v6 = 73;
      break;
    case 74:
      v6 = 74;
      break;
    default:
      v6 = 75;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1CDFFB2B8()
{
  return sub_1CE00C6F4();
}

unint64_t sub_1CDFFB2C8()
{
  unint64_t result;

  result = qword_1EFA5E950;
  if (!qword_1EFA5E950)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for UserDefaultsKeys, &type metadata for UserDefaultsKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5E950);
  }
  return result;
}

uint64_t sub_1CDFFB30C()
{
  sub_1CE0B6D34();
  UserDefaultsKeys.rawValue.getter();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CDFFB370()
{
  UserDefaultsKeys.rawValue.getter();
  sub_1CE0B62CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CDFFB3C0()
{
  sub_1CE0B6D34();
  UserDefaultsKeys.rawValue.getter();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

SeymourClient::UserDefaultsKeys_optional sub_1CDFFB420(Swift::String *a1)
{
  return UserDefaultsKeys.init(rawValue:)(*a1);
}

uint64_t sub_1CDFFB42C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UserDefaultsKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UserDefaultsKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xB6)
    goto LABEL_17;
  if (a2 + 74 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 74) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 74;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 74;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 74;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x4B;
  v8 = v6 - 75;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UserDefaultsKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 74 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 74) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xB6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xB5)
    return ((uint64_t (*)(void))((char *)&loc_1CDFFB52C + 4 * byte_1CE0BC837[v4]))();
  *a1 = a2 + 74;
  return ((uint64_t (*)(void))((char *)sub_1CDFFB560 + 4 * byte_1CE0BC832[v4]))();
}

uint64_t sub_1CDFFB560(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CDFFB568(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CDFFB570);
  return result;
}

uint64_t sub_1CDFFB57C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CDFFB584);
  *(_BYTE *)result = a2 + 74;
  return result;
}

uint64_t sub_1CDFFB588(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CDFFB590(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t XPCClient.dispatchService.getter()
{
  return swift_retain();
}

uint64_t sub_1CDFFB5A4(uint64_t a1, void (*a2)(void))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a2();
    return swift_release();
  }
  return result;
}

void sub_1CDFFB5FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  if (*(_BYTE *)(v0 + 48) == 2)
  {
    *(_BYTE *)(v0 + 48) = 1;
    objc_msgSend(*(id *)(v0 + 24), sel_suspend);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

void sub_1CDFFB648()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  if (*(_BYTE *)(v0 + 48))
  {
    *(_BYTE *)(v0 + 48) = 0;
    v2 = *(void **)(v0 + 24);
    objc_msgSend(v2, sel_setInterruptionHandler_, 0);
    objc_msgSend(v2, sel_setInvalidationHandler_, 0);
    objc_msgSend(v2, sel_invalidate);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

void sub_1CDFFB6C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = v0;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
  swift_retain_n();
  v3 = sub_1CE0B6068();
  v4 = sub_1CE0B671C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = objc_msgSend(*(id *)(v1 + 24), sel_serviceName);
    if (v7)
    {
      v8 = v7;
      v9 = sub_1CE0B6278();
      v11 = v10;

    }
    else
    {
      v11 = 0xEB00000000646569;
      v9 = 0x6669636570736E75;
    }
    sub_1CDFC7270(v9, v11, &v12);
    sub_1CE0B68F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v3, v4, "XPC connection (%{public}s) interrupted", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1CDFFB8A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  *(_BYTE *)(v1 + 48) = 0;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  swift_retain_n();
  v4 = sub_1CE0B6068();
  v5 = sub_1CE0B671C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = objc_msgSend(*(id *)(v1 + 24), sel_serviceName);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1CE0B6278();
      v12 = v11;

    }
    else
    {
      v12 = 0xEB00000000646569;
      v10 = 0x6669636570736E75;
    }
    sub_1CDFC7270(v10, v12, &v13);
    sub_1CE0B68F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, v4, v5, "XPC connection (%{public}s) invalidated", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v7, -1, -1);
    MEMORY[0x1D17C092C](v6, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_1CDFFBA98(uint64_t a1, int a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t *);
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint8_t *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  void (*v39)(uint64_t *);
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t aBlock;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;

  LODWORD(v45) = a2;
  v7 = sub_1CE0B6140();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CE0B6158();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a3;
  v16 = swift_allocObject();
  v17 = a4;
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a4;
  if (*(_QWORD *)(a1 + 40))
  {
    aBlock = *(_QWORD *)(a1 + 40);
    LOBYTE(v47) = 0;
    swift_retain();
    swift_unknownObjectRetain();
    v15(&aBlock);
    swift_release();
    swift_release();
    return swift_unknownObjectRelease();
  }
  v19 = v45;
  v43 = v8;
  v44 = v14;
  v41 = v12;
  v42 = v10;
  v20 = MEMORY[0x1E0C809B0];
  v21 = a1;
  if (*(_BYTE *)(a1 + 48) != 2)
  {
    v45 = v17;
    swift_retain();
    v27 = v7;
LABEL_8:
    v28 = v42;
    v29 = v44;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v30 = sub_1CE0B6080();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED8F1870);
    v31 = sub_1CE0B6068();
    v32 = sub_1CE0B671C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1CDFAA000, v31, v32, "TransportServer unavailable", v33, 2u);
      v34 = v33;
      v29 = v44;
      MEMORY[0x1D17C092C](v34, -1, -1);
    }

    v35 = *(void **)(*(_QWORD *)(v21 + 16) + 16);
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = sub_1CE001C90;
    *(_QWORD *)(v36 + 24) = v16;
    v50 = sub_1CE001CC8;
    v51 = v36;
    aBlock = MEMORY[0x1E0C809B0];
    v47 = 1107296256;
    v48 = sub_1CDFB33D0;
    v49 = &block_descriptor_247;
    v37 = _Block_copy(&aBlock);
    swift_retain();
    v38 = v35;
    sub_1CE0B614C();
    v52 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v29, v28, v37);
    _Block_release(v37);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v27);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v29, v11);
    swift_release();
    swift_release();
    return swift_release();
  }
  v22 = *(void **)(a1 + 24);
  v39 = v15;
  v40 = v22;
  v23 = v17;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a1;
  *(_BYTE *)(v24 + 24) = v19 & 1;
  *(_QWORD *)(v24 + 32) = sub_1CE001C90;
  *(_QWORD *)(v24 + 40) = v16;
  v50 = sub_1CE001CD4;
  v51 = v24;
  aBlock = v20;
  v47 = 1107296256;
  v48 = sub_1CDFFC8A4;
  v49 = &block_descriptor_253;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  v26 = objc_msgSend(v40, sel_remoteObjectProxyWithErrorHandler_, v25);
  _Block_release(v25);
  sub_1CE0B6938();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v27 = v7;
    v45 = v23;
    goto LABEL_8;
  }
  aBlock = v52;
  LOBYTE(v47) = 0;
  swift_unknownObjectRetain();
  v39(&aBlock);
  swift_release();
  swift_unknownObjectRelease_n();
  return swift_release();
}

uint64_t sub_1CDFFBF58(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint8_t *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  void (*v41)();
  uint64_t v42;
  uint64_t v43;

  v8 = sub_1CE0B6140();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B6158();
  v13 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 40))
  {
    v17 = swift_unknownObjectRetain();
    a2(v17, 0);
    return swift_unknownObjectRelease();
  }
  else
  {
    v34 = v14;
    v35 = v13;
    v36 = v9;
    v19 = MEMORY[0x1E0C809B0];
    if (*(_BYTE *)(a1 + 48) != 2)
      goto LABEL_6;
    v20 = *(void **)(a1 + 24);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = a1;
    *(_BYTE *)(v21 + 24) = a4 & 1;
    *(_QWORD *)(v21 + 32) = a2;
    *(_QWORD *)(v21 + 40) = a3;
    v41 = (void (*)())sub_1CE001DC8;
    v42 = v21;
    aBlock = v19;
    v38 = 1107296256;
    v39 = sub_1CDFFC8A4;
    v40 = &block_descriptor_273;
    v22 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v23 = objc_msgSend(v20, sel_remoteObjectProxyWithErrorHandler_, v22);
    _Block_release(v22);
    sub_1CE0B6938();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v24 = swift_unknownObjectRetain();
      a2(v24, 0);
      return swift_unknownObjectRelease_n();
    }
    else
    {
LABEL_6:
      if (qword_1ED8F1890 != -1)
        swift_once();
      v25 = sub_1CE0B6080();
      __swift_project_value_buffer(v25, (uint64_t)qword_1ED8F1870);
      v26 = sub_1CE0B6068();
      v27 = sub_1CE0B671C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_1CDFAA000, v26, v27, "TransportServer unavailable", v28, 2u);
        v29 = v28;
        v19 = MEMORY[0x1E0C809B0];
        MEMORY[0x1D17C092C](v29, -1, -1);
      }

      v30 = *(void **)(*(_QWORD *)(a1 + 16) + 16);
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = a2;
      *(_QWORD *)(v31 + 24) = a3;
      v41 = sub_1CE001DC4;
      v42 = v31;
      aBlock = v19;
      v38 = 1107296256;
      v39 = sub_1CDFB33D0;
      v40 = &block_descriptor_266;
      v32 = _Block_copy(&aBlock);
      swift_retain();
      v33 = v30;
      sub_1CE0B614C();
      v43 = MEMORY[0x1E0DEE9D8];
      sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
      sub_1CDFC20A8();
      sub_1CE0B6944();
      MEMORY[0x1D17BFB04](0, v16, v11, v32);
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v8);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
      return swift_release();
    }
  }
}

void sub_1CDFFC350(void *a1, uint64_t a2, int a3, void (*a4)(uint64_t, _QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  void (*v32)(uint64_t, _QWORD);
  uint8_t *v33;
  uint8_t *v34;
  uint64_t v35;
  void *v36;
  _QWORD *v37;
  void *v38;
  id v39;
  id v40;
  char *v41;
  void (*v42)(uint64_t, _QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock[7];

  v50 = a3;
  v9 = sub_1CE0B6140();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CE0B6158();
  v47 = *(_QWORD *)(v12 - 8);
  v48 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F1890 != -1)
    swift_once();
  v15 = sub_1CE0B6080();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v17 = a1;
  swift_retain();
  v18 = a1;
  v46 = v16;
  v19 = sub_1CE0B6068();
  v20 = sub_1CE0B671C();
  if (os_log_type_enabled(v19, v20))
  {
    v42 = a4;
    v43 = v10;
    v44 = v9;
    v45 = a5;
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136446466;
    v23 = objc_msgSend(*(id *)(a2 + 24), sel_serviceName);
    if (v23)
    {
      v24 = v23;
      v25 = sub_1CE0B6278();
      v27 = v26;

    }
    else
    {
      v27 = 0xE900000000000029;
      v25 = 0x6E776F6E6B6E7528;
    }
    v53 = sub_1CDFC7270(v25, v27, aBlock);
    sub_1CE0B68F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    swift_getErrorValue();
    v28 = MEMORY[0x1D17C0050](v51, v52);
    v53 = sub_1CDFC7270(v28, v29, aBlock);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v19, v20, "Error getting remoteObjectProxy from %{public}s: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v22, -1, -1);
    MEMORY[0x1D17C092C](v21, -1, -1);

    a5 = v45;
    v9 = v44;
    v10 = v43;
    a4 = v42;
    if ((v50 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    swift_release_n();

    if ((v50 & 1) == 0)
      goto LABEL_14;
  }
  swift_getErrorValue();
  if (sub_1CE0B6CBC() != 4097)
  {
LABEL_14:
    v36 = *(void **)(*(_QWORD *)(a2 + 16) + 16);
    v37 = (_QWORD *)swift_allocObject();
    v37[2] = a4;
    v37[3] = a5;
    v37[4] = a1;
    aBlock[4] = (uint64_t)sub_1CE001D28;
    aBlock[5] = (uint64_t)v37;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1CDFB33D0;
    aBlock[3] = (uint64_t)&block_descriptor_259;
    v38 = _Block_copy(aBlock);
    v39 = a1;
    v40 = v36;
    swift_retain();
    sub_1CE0B614C();
    v53 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    v41 = v49;
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v14, v41, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v48);
    swift_release();
    return;
  }
  v30 = sub_1CE0B6068();
  v31 = sub_1CE0B671C();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = a4;
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_1CDFAA000, v30, v31, "Retrying remoteObjectProxy, previous connection was interrupted", v33, 2u);
    v34 = v33;
    a4 = v32;
    MEMORY[0x1D17C092C](v34, -1, -1);
  }

  v35 = *(_QWORD *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v35 + 16));
  sub_1CDFFBF58(a2, a4, a5, 0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v35 + 16));
}

void sub_1CDFFC8A4(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1CDFFC8F4(void (*a1)(void *, uint64_t))
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = sub_1CE0B48C8();
  sub_1CDFC2DB0((unint64_t *)&qword_1EFA63A90, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
  v3 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v4, *MEMORY[0x1E0D913A8], v2);
  a1(v3, 1);

}

uint64_t sub_1CDFFC990(void *a1, uint64_t a2, char a3, uint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char v33;
  uint64_t v34;
  void (*v35)(_QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v12 = sub_1CE0B6080();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v13 = a1;
  swift_retain();
  v14 = a1;
  v15 = sub_1CE0B6068();
  v16 = sub_1CE0B671C();
  if (os_log_type_enabled(v15, v16))
  {
    v33 = a3;
    v34 = a6;
    v35 = a5;
    v36 = a4;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v37 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = objc_msgSend(*(id *)(a2 + 24), sel_serviceName);
    if (v19)
    {
      v20 = v19;
      v21 = sub_1CE0B6278();
      v23 = v22;

    }
    else
    {
      v23 = 0xE900000000000029;
      v21 = 0x6E776F6E6B6E7528;
    }
    sub_1CDFC7270(v21, v23, &v37);
    sub_1CE0B68F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    swift_getErrorValue();
    v24 = MEMORY[0x1D17C0050]();
    sub_1CDFC7270(v24, v25, &v37);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v15, v16, "Error getting remoteObjectProxy from %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v18, -1, -1);
    MEMORY[0x1D17C092C](v17, -1, -1);

    a5 = v35;
    a4 = v36;
    a6 = v34;
    if ((v33 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    swift_release_n();

    if ((a3 & 1) == 0)
      goto LABEL_14;
  }
  swift_getErrorValue();
  if (sub_1CE0B6CBC() != 4097)
  {
LABEL_14:
    v37 = (uint64_t)a1;
    v31 = a1;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
    return sub_1CE0B6500();
  }
  v26 = sub_1CE0B6068();
  v27 = sub_1CE0B671C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1CDFAA000, v26, v27, "Retrying remoteObjectProxy, previous connection was interrupted", v28, 2u);
    MEMORY[0x1D17C092C](v28, -1, -1);
  }

  v29 = *(_QWORD *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v29 + 16));
  v30 = sub_1CDFFD0E8(a2, 0, a4, a5, a6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
  a5(v30, a4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1CDFFCD54(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v36;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v12 = sub_1CE0B6080();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F1870);
  swift_retain();
  v13 = a1;
  swift_retain();
  v14 = a1;
  v15 = sub_1CE0B6068();
  v16 = sub_1CE0B671C();
  if (os_log_type_enabled(v15, v16))
  {
    v31 = a3;
    v32 = a7;
    v33 = a4;
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v36 = v18;
    *(_DWORD *)v17 = 136446466;
    v19 = objc_msgSend(*(id *)(a2 + 24), sel_serviceName);
    if (v19)
    {
      v20 = v19;
      v21 = sub_1CE0B6278();
      v23 = v22;

    }
    else
    {
      v23 = 0xE900000000000029;
      v21 = 0x6E776F6E6B6E7528;
    }
    sub_1CDFC7270(v21, v23, &v36);
    sub_1CE0B68F0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    swift_getErrorValue();
    v24 = MEMORY[0x1D17C0050]();
    sub_1CDFC7270(v24, v25, &v36);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v15, v16, "Error getting remoteObjectProxy from %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v18, -1, -1);
    MEMORY[0x1D17C092C](v17, -1, -1);

    a7 = v32;
    a4 = v33;
    if ((v31 & 1) == 0)
      goto LABEL_14;
  }
  else
  {
    swift_release_n();

    if ((a3 & 1) == 0)
      goto LABEL_14;
  }
  swift_getErrorValue();
  if (sub_1CE0B6CBC() != 4097)
  {
LABEL_14:
    v36 = (uint64_t)a1;
    v30 = a1;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
    sub_1CE0B6518();
    return sub_1CE0B6500();
  }
  v26 = sub_1CE0B6068();
  v27 = sub_1CE0B671C();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1CDFAA000, v26, v27, "Retrying remoteObjectProxy, previous connection was interrupted", v28, 2u);
    MEMORY[0x1D17C092C](v28, -1, -1);
  }

  return sub_1CDFB251C(0, a4, a5, a6, a7);
}

uint64_t sub_1CDFFD0E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  id v38;
  int v39;
  uint64_t v40;
  _QWORD aBlock[8];

  v40 = a5;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 40))
  {
    v14 = *(_QWORD *)(a1 + 40);
    swift_unknownObjectRetain();
  }
  else
  {
    v15 = a1;
    v39 = a2;
    v16 = v40;
    if (*(_BYTE *)(v15 + 48) != 2)
      goto LABEL_6;
    v17 = *(void **)(v15 + 24);
    v37 = v5;
    v38 = v17;
    v18 = a3;
    v19 = v15;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v18, v10);
    v20 = (*(unsigned __int8 *)(v11 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v19;
    *(_BYTE *)(v22 + 24) = v39 & 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22 + v20, v13, v10);
    v23 = (_QWORD *)(v22 + v21);
    *v23 = a4;
    v23[1] = v16;
    aBlock[4] = sub_1CE001670;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFFC8A4;
    aBlock[3] = &block_descriptor_145;
    v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    v25 = objc_msgSend(v38, sel_remoteObjectProxyWithErrorHandler_, v24);
    _Block_release(v24);
    sub_1CE0B6938();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
    if (swift_dynamicCast())
    {
      v14 = aBlock[7];
      swift_unknownObjectRetain();
    }
    else
    {
LABEL_6:
      if (qword_1ED8F1890 != -1)
        swift_once();
      v26 = sub_1CE0B6080();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED8F1870);
      v27 = sub_1CE0B6068();
      v28 = sub_1CE0B671C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1CDFAA000, v27, v28, "TransportServer unavailable", v29, 2u);
        MEMORY[0x1D17C092C](v29, -1, -1);
      }

      v30 = sub_1CE0B48C8();
      sub_1CDFC2DB0((unint64_t *)&qword_1EFA63A90, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D913F0], MEMORY[0x1E0D91400]);
      v31 = swift_allocError();
      v32 = *(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v30 - 8) + 104);
      v33 = v30;
      v34 = v31;
      v32(v35, *MEMORY[0x1E0D913A8], v33);
      v14 = v34;
      swift_willThrow();
    }
  }
  return v14;
}

void sub_1CDFFD42C(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  os_unfair_lock_s *v9;

  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  sub_1CDFFBA98(a3, a4, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
}

uint64_t XPCClient.deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCClient.sendRequest(_:)(__int16 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t (**v16)(uint64_t *);
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = *a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_BYTE *)(v11 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  v12 = swift_allocObject();
  *(_WORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v1;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v14 = (v5 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v13, v7, v3);
  v16 = (uint64_t (**)(uint64_t *))(v15 + v14);
  *v16 = sub_1CE0008E4;
  v16[1] = (uint64_t (*)(uint64_t *))v12;
  swift_retain();
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1CDFFD688(uint64_t *a1, __int16 a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_WORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1CE0B5C00();
}

void sub_1CDFFD710(uint64_t a1, uint64_t a2, void *a3, __int16 a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  _QWORD v13[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = qword_1CE0BCB90[a4];
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v10;
  v11[3] = sub_1CE001ED0;
  v11[4] = v8;
  v13[4] = sub_1CE001C44;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1CDFBBCE0;
  v13[3] = &block_descriptor_232;
  v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_receiveRequest_data_completion_, v9, 0, v12);
  _Block_release(v12);
}

uint64_t sub_1CDFFD844@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  v19 = a5;
  v20 = a6;
  v21 = a2;
  v22 = a7;
  v9 = *(_QWORD *)(a4 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v9 + 16))(v11);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = (v14 + 9) & 0xFFFFFFFFFFFFFFF8;
  v16 = (char *)swift_allocObject();
  v17 = v19;
  *((_QWORD *)v16 + 2) = a4;
  *((_QWORD *)v16 + 3) = v17;
  *((_QWORD *)v16 + 4) = v20;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v16[v13], v11, a4);
  *(_QWORD *)&v16[v14] = v12;
  *(_WORD *)&v16[v15] = v21;
  *(_QWORD *)&v16[(v15 + 9) & 0xFFFFFFFFFFFFFFF8] = a3;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CDFFD97C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, __int16 a5)
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  _QWORD aBlock[7];

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_retain();
  v10 = sub_1CE0B56B4();
  v12 = v11;
  sub_1CDFC0990(v10, v11);
  v13 = (void *)sub_1CE0B3D58();
  sub_1CDFC666C(v10, v12);
  v14 = qword_1CE0BCB90[a5];
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v15;
  v16[3] = sub_1CE001B6C;
  v16[4] = v9;
  aBlock[4] = sub_1CE001B84;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_212;
  v17 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a4, sel_receiveRequest_data_completion_, v14, v13, v17);
  _Block_release(v17);

  return sub_1CDFC094C(v10, v12);
}

uint64_t sub_1CDFFDB2C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  id v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v27 = a5;
  v28 = a8;
  v11 = sub_1CE0B6140();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CE0B6158();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v25 = v12;
    v26 = v15;
    v20 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    v21 = *(id *)(v20 + 16);
    swift_release();
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = v27;
    v22[3] = a6;
    v22[4] = a3;
    aBlock[4] = v28;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = a9;
    v23 = _Block_copy(aBlock);
    swift_retain();
    v24 = a3;
    sub_1CE0B614C();
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v18, v14, v23);
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v26);
    return swift_release();
  }
  return result;
}

void sub_1CDFFDD68(void (*a1)(void *, _QWORD), int a2, id a3)
{
  id v4;
  void *v5;
  unsigned __int8 v6;

  v4 = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  sub_1CE0B6D88();
  a1(v5, v6);
  sub_1CDFC2DF4(v5, v6);
}

uint64_t sub_1CDFFDDE8(uint64_t *a1, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;

  v11 = *a1;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a4;
  *(_QWORD *)(v12 + 24) = a5;
  *(_QWORD *)(v12 + 32) = a6;
  *(_QWORD *)(v12 + 40) = v11;
  *(_WORD *)(v12 + 48) = a2;
  *(_QWORD *)(v12 + 56) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1CE0B5C00();
}

void sub_1CDFFDE80(uint64_t a1, uint64_t a2, void *a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  _QWORD v18[6];

  v14 = qword_1CE0BCB90[a4];
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = v15;
  v16[6] = a1;
  v16[7] = a2;
  v18[4] = sub_1CE0019F4;
  v18[5] = v16;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1CDFBBCE0;
  v18[3] = &block_descriptor_193;
  v17 = _Block_copy(v18);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_receiveRequest_data_completion_, v14, 0, v17);
  _Block_release(v17);
}

uint64_t sub_1CDFFDFAC(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v31 = a5;
  v32 = a8;
  v30 = a7;
  v13 = sub_1CE0B6140();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B6158();
  v33 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v28 = v14;
    v29 = v17;
    v21 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    v22 = *(id *)(v21 + 16);
    swift_release();
    v23 = (_QWORD *)swift_allocObject();
    v24 = v32;
    v23[2] = v30;
    v23[3] = v24;
    v25 = v31;
    v23[4] = a9;
    v23[5] = v25;
    v23[6] = a6;
    v23[7] = a1;
    v23[8] = a2;
    v23[9] = a3;
    aBlock[4] = sub_1CE001A64;
    aBlock[5] = v23;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_199;
    v26 = _Block_copy(aBlock);
    swift_retain();
    sub_1CDFC2094(a1, a2);
    v27 = a3;
    sub_1CE0B614C();
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v19, v16, v26);
    _Block_release(v26);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v16, v13);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v29);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CDFFE224(void (*a1)(char *), uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  _QWORD v18[2];

  v18[1] = a8;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v12 = sub_1CE0B6DA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v18 - v14;
  sub_1CDFC2094(a3, a4);
  v16 = a5;
  sub_1CE0B6D70();
  a1(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1CDFFE324@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;

  v26 = a6;
  v27 = a7;
  v29 = a3;
  v30 = a8;
  v28 = a2;
  v24 = a9;
  v25 = a10;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v12 + 16))(v14);
  v16 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = (v17 + 9) & 0xFFFFFFFFFFFFFFF8;
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a4;
  *((_QWORD *)v19 + 3) = a5;
  v20 = v27;
  *((_QWORD *)v19 + 4) = v26;
  *((_QWORD *)v19 + 5) = v20;
  v21 = v25;
  *((_QWORD *)v19 + 6) = v24;
  *((_QWORD *)v19 + 7) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v16], v14, a4);
  *(_QWORD *)&v19[v17] = v15;
  *(_WORD *)&v19[v18] = v28;
  *(_QWORD *)&v19[(v18 + 9) & 0xFFFFFFFFFFFFFFF8] = v29;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CDFFE470(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, __int16 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  _QWORD aBlock[7];

  v15 = sub_1CE0B56B4();
  v17 = v16;
  sub_1CDFC0990(v15, v16);
  v18 = (void *)sub_1CE0B3D58();
  sub_1CDFC666C(v15, v17);
  v19 = qword_1CE0BCB90[a5];
  v20 = swift_allocObject();
  swift_weakInit();
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a7;
  v21[3] = a8;
  v21[4] = a9;
  v21[5] = a10;
  v21[6] = a11;
  v21[7] = a12;
  v21[8] = v20;
  v21[9] = a1;
  v21[10] = a2;
  aBlock[4] = sub_1CE0018E0;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_177;
  v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_receiveRequest_data_completion_, v19, v18, v22);
  _Block_release(v22);

  return sub_1CDFC094C(v15, v17);
}

uint64_t sub_1CDFFE62C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v39 = a7;
  v40 = a8;
  v41 = a5;
  v42 = a1;
  v15 = sub_1CE0B6140();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1CE0B6158();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v37 = v20;
    v38 = v19;
    v34 = a12;
    v35 = v15;
    v36 = v16;
    v24 = a6;
    v25 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    v26 = *(id *)(v25 + 16);
    swift_release();
    v27 = (_QWORD *)swift_allocObject();
    v28 = v40;
    v27[2] = v39;
    v27[3] = v28;
    v27[4] = a9;
    v27[5] = a10;
    v29 = v34;
    v27[6] = a11;
    v27[7] = v29;
    v30 = v42;
    v27[8] = v41;
    v27[9] = v24;
    v27[10] = v30;
    v27[11] = a2;
    v27[12] = a3;
    aBlock[4] = sub_1CE00195C;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_183;
    v31 = _Block_copy(aBlock);
    swift_retain();
    sub_1CDFC2094(v30, a2);
    v32 = a3;
    sub_1CE0B614C();
    v43 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    v33 = v35;
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v22, v18, v31);
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CDFFE8B8(void (*a1)(char *), uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  _QWORD v15[2];

  v15[1] = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v9 = sub_1CE0B6DA0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v15 - v11;
  sub_1CDFC2094(a3, a4);
  v13 = a5;
  sub_1CE0B6D70();
  a1(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t XPCClient.sendRequest(_:)(_WORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 48) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CDFFE9D4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_WORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_WORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_1CDFFEA84;
  return sub_1CE0B6C80();
}

uint64_t sub_1CDFFEA84()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CDFFEAF0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFFEAFC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFFEB30(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD aBlock[7];

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = swift_allocObject();
  *(_WORD *)(v9 + 16) = a3;
  v10 = *(_QWORD *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  v11 = (void *)sub_1CDFFD0E8(a2, 1, a1, (uint64_t)sub_1CE0016E8, v9);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  v12 = qword_1CE0BCB90[a3];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1CE0016D4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_160;
  v15 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v11, sel_receiveRequest_data_completion_, v12, 0, v15);
  _Block_release(v15);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1CDFFED0C(void *a1, uint64_t a2, __int16 a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = qword_1CE0BCB90[a3];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1CE0016D4;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_167;
  v12 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a1, sel_receiveRequest_data_completion_, v9, 0, v12);
  _Block_release(v12);
}

uint64_t XPCClient.sendRequest<A>(_:payload:)(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 16) = a2;
  *(_WORD *)(v6 + 80) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CDFFEE80()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_WORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v3 + 32) = v4;
  *(_QWORD *)(v3 + 48) = v2;
  *(_WORD *)(v3 + 56) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_1CDFFEF34;
  return sub_1CE0B6C80();
}

uint64_t sub_1CDFFEF34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CDFFEFA0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;
  char *v31;

  v30 = a1;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v29 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v17((char *)v29 - v15, v18, v19);
  v31 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17(v31, (uint64_t)v16, a5);
  v20 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v21 = (v13 + v20 + 1) & 0xFFFFFFFFFFFFFFFELL;
  v22 = (char *)swift_allocObject();
  *((_QWORD *)v22 + 2) = a5;
  *((_QWORD *)v22 + 3) = a6;
  v29[0] = a6;
  v29[1] = a7;
  v23 = v30;
  *((_QWORD *)v22 + 4) = a7;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v22[v20], v16, a5);
  *(_WORD *)&v22[v21] = a4;
  v24 = *(_QWORD *)(a2 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v24 + 16));
  v25 = (void *)sub_1CDFFD0E8(a2, 1, v23, (uint64_t)sub_1CE0015A4, (uint64_t)v22);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v24 + 16));
  v26 = v23;
  v27 = (uint64_t)v31;
  sub_1CDFFF16C(v25, v26, (uint64_t)v31, a4);
  swift_release();
  swift_unknownObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v27, a5);
}

uint64_t sub_1CDFFF16C(void *a1, uint64_t a2, uint64_t a3, __int16 a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v18;
  _QWORD aBlock[7];

  v18 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = sub_1CE0B56B4();
  v11 = v10;
  sub_1CDFC0990(v9, v10);
  v12 = (void *)sub_1CE0B3D58();
  sub_1CDFC666C(v9, v11);
  v13 = qword_1CE0BCB90[a4];
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_1CE0016D4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_151;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v18, sel_receiveRequest_data_completion_, v13, v12, v16);
  _Block_release(v16);

  return sub_1CDFC094C(v9, v11);
}

uint64_t sub_1CDFFF330(int a1, int a2, id a3)
{
  id v3;
  char v5;

  v3 = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
  sub_1CE0B6D88();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  if ((v5 & 1) != 0)
    return sub_1CE0B6500();
  else
    return sub_1CE0B650C();
}

uint64_t XPCClient.sendRequest<A>(_:)(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a3;
  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_WORD *)(v6 + 80) = *a2;
  return swift_task_switch();
}

uint64_t XPCClient.sendRequest<A, B>(_:payload:)(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  *(_QWORD *)(v9 + 72) = v11;
  *(_QWORD *)(v9 + 80) = v8;
  *(_QWORD *)(v9 + 56) = a7;
  *(_QWORD *)(v9 + 64) = a8;
  *(_QWORD *)(v9 + 40) = a5;
  *(_QWORD *)(v9 + 48) = a6;
  *(_QWORD *)(v9 + 24) = a3;
  *(_QWORD *)(v9 + 32) = a4;
  *(_QWORD *)(v9 + 16) = a1;
  *(_WORD *)(v9 + 112) = *a2;
  return swift_task_switch();
}

uint64_t sub_1CDFFF424()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  _QWORD *v7;

  v1 = *(_WORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v4;
  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = v6;
  *(_QWORD *)(v4 + 64) = v2;
  *(_QWORD *)(v4 + 72) = v3;
  *(_WORD *)(v4 + 80) = v1;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v7;
  *v7 = v0;
  v7[1] = sub_1CDFFF4E0;
  return sub_1CE0B6C80();
}

uint64_t sub_1CDFFF4E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CDFFF554()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CDFFF588(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v26 = a7;
  v27 = a8;
  v28 = a4;
  v29 = a1;
  v25 = a10;
  v13 = *(_QWORD *)(a5 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v17);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = (v14 + v18 + 1) & 0xFFFFFFFFFFFFFFFELL;
  v20 = (char *)swift_allocObject();
  *((_QWORD *)v20 + 2) = a5;
  *((_QWORD *)v20 + 3) = a6;
  v21 = v27;
  *((_QWORD *)v20 + 4) = v26;
  *((_QWORD *)v20 + 5) = v21;
  v22 = v25;
  *((_QWORD *)v20 + 6) = a9;
  *((_QWORD *)v20 + 7) = v22;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v20[v18], v15, a5);
  *(_WORD *)&v20[v19] = v28;
  *(_QWORD *)&v20[(v19 + 9) & 0xFFFFFFFFFFFFFFF8] = a2;
  swift_retain();
  sub_1CDFB251C(1, v29, (void (*)(uint64_t, uint64_t))sub_1CE001084, (uint64_t)v20, a6);
  return swift_release();
}

uint64_t sub_1CDFFF6C4(void *a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  _QWORD aBlock[7];

  v40 = a1;
  v35 = a10;
  v36 = a11;
  v33[1] = a5;
  v34 = a9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v38 = a7;
  v16 = sub_1CE0B6518();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v33 - v18;
  v37 = a6;
  v39 = a8;
  v20 = sub_1CE0B56B4();
  v22 = v21;
  sub_1CDFC0990(v20, v21);
  v23 = (void *)sub_1CE0B3D58();
  sub_1CDFC666C(v20, v22);
  v24 = qword_1CE0BCB90[a4];
  v25 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a2, v16);
  v26 = (*(unsigned __int8 *)(v17 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v27 = (char *)swift_allocObject();
  v28 = v38;
  *((_QWORD *)v27 + 2) = v37;
  *((_QWORD *)v27 + 3) = v28;
  v29 = v34;
  *((_QWORD *)v27 + 4) = v39;
  *((_QWORD *)v27 + 5) = v29;
  v30 = v36;
  *((_QWORD *)v27 + 6) = v35;
  *((_QWORD *)v27 + 7) = v30;
  *((_QWORD *)v27 + 8) = v25;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v27[v26], v19, v16);
  aBlock[4] = sub_1CE0011A4;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFBBCE0;
  aBlock[3] = &block_descriptor_114;
  v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v40, sel_receiveRequest_data_completion_, v24, v23, v31);
  _Block_release(v31);

  return sub_1CDFC094C(v20, v22);
}

uint64_t sub_1CDFFF910(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD aBlock[6];

  v49 = a8;
  v50 = a1;
  v46 = a5;
  v47 = a6;
  v51 = a2;
  v52 = a3;
  v12 = sub_1CE0B6140();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1CE0B6158();
  v53 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v48 = a7;
  v19 = sub_1CE0B6518();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(_QWORD *)(v20 + 64);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v41 - v22;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v43 = a11;
    v42 = a10;
    v41 = a9;
    v45 = v16;
    v25 = *(_QWORD *)(result + 16);
    swift_retain();
    swift_release();
    v44 = *(id *)(v25 + 16);
    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v46, v19);
    v26 = (*(unsigned __int8 *)(v20 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v27 = (v21 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v46 = v13;
    v28 = v12;
    v29 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    v30 = (char *)swift_allocObject();
    v31 = v48;
    *((_QWORD *)v30 + 2) = v47;
    *((_QWORD *)v30 + 3) = v31;
    v32 = v41;
    *((_QWORD *)v30 + 4) = v49;
    *((_QWORD *)v30 + 5) = v32;
    v33 = v43;
    *((_QWORD *)v30 + 6) = v42;
    *((_QWORD *)v30 + 7) = v33;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v30[v26], v23, v19);
    v34 = (uint64_t *)&v30[v27];
    v36 = v50;
    v35 = v51;
    *v34 = v50;
    v34[1] = v35;
    v37 = v52;
    *(_QWORD *)&v30[v29] = v52;
    aBlock[4] = sub_1CE001318;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_120;
    v38 = _Block_copy(aBlock);
    sub_1CDFC2094(v36, v35);
    v39 = v37;
    sub_1CE0B614C();
    v54 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC2DB0((unint64_t *)&qword_1ED8F1570, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    sub_1CE0B6944();
    v40 = v44;
    MEMORY[0x1D17BFB04](0, v18, v15, v38);
    _Block_release(v38);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v28);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v18, v45);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CDFFFC64(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[2];

  v14[1] = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v7 = sub_1CE0B6DA0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v14 - v9;
  sub_1CDFC2094(a2, a3);
  v11 = a4;
  sub_1CE0B6D70();
  v12 = sub_1CE0B6518();
  sub_1CDFC1068((uint64_t)v10, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

Swift::Void __swiftcall XPCClient.broadcastEvent(_:)(SeymourClient::TransportEvent a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (**v21)(uint64_t *);
  void (*v22)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v3 = (char *)a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v25 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v3;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  *(_BYTE *)(v15 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = v14;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1CE000A8C;
  *(_QWORD *)(v17 + 24) = v16;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  v18 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v19 = (v6 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20 + v18, v8, v4);
  v21 = (uint64_t (**)(uint64_t *))(v20 + v19);
  *v21 = sub_1CE000B68;
  v21[1] = (uint64_t (*)(uint64_t *))v17;
  sub_1CE0B5C00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  v22 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = 0;
  *(_QWORD *)(v23 + 24) = 0;
  v22(sub_1CE000B78, v23);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v11);
}

id sub_1CDFFFFEC(id *a1, char a2)
{
  return objc_msgSend(*a1, sel_receiveEvent_data_, qword_1CE0BD600[a2], 0);
}

uint64_t XPCClient.broadcastEvent<A>(_:payload:)(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (**v27)(uint64_t *);
  _BYTE *v28;
  uint64_t v29;
  void (*v30)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v31;
  _BYTE v33[4];
  int v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;

  v37 = a4;
  v38 = a5;
  v35 = a2;
  v8 = *(_QWORD *)(a3 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v36 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v33[-v14];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v17 = *(_QWORD *)(v16 - 8);
  v40 = v16;
  v41 = v17;
  MEMORY[0x1E0C80A78](v16);
  v39 = &v33[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = *a1;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v5;
  *(_BYTE *)(v19 + 24) = 1;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F16B0);
  sub_1CE0B5C00();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(&v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v35, a3);
  v20 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = swift_allocObject();
  v22 = v37;
  *(_QWORD *)(v21 + 16) = a3;
  *(_QWORD *)(v21 + 24) = v22;
  *(_QWORD *)(v21 + 32) = v38;
  *(_BYTE *)(v21 + 40) = v34;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v8 + 32))(v21 + v20, &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], a3);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1CE000BD4;
  *(_QWORD *)(v23 + 24) = v21;
  v24 = v36;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v36, v15, v10);
  v25 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v26 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v11 + 32))(v26 + v25, v24, v10);
  v27 = (uint64_t (**)(uint64_t *))(v26 + ((v12 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v27 = sub_1CE001EC4;
  v27[1] = (uint64_t (*)(uint64_t *))v23;
  v28 = v39;
  sub_1CE0B5C00();
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v15, v10);
  v29 = v40;
  v30 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)(v31 + 24) = 0;
  v30(sub_1CE000B78, v31);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v41 + 8))(v28, v29);
}

void sub_1CE000330(void **a1, char a2)
{
  void *v2;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *a1;
  v5 = sub_1CE0B56B4();
  if (v2)
  {

    v7 = 0;
  }
  else
  {
    v8 = v5;
    v9 = v6;
    v7 = (void *)sub_1CE0B3D58();
    sub_1CDFC666C(v8, v9);
  }
  objc_msgSend(v4, sel_receiveEvent_data_, qword_1CE0BD600[a2], v7);

}

uint64_t sub_1CE0003D4(_WORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_WORD *)(v2 + 48) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CE0003F4()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_WORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_WORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v4;
  *v4 = v0;
  v4[1] = sub_1CDFFEA84;
  return sub_1CE0B6C80();
}

uint64_t sub_1CE0004A4(_WORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  v12 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v12;
  *(_QWORD *)v12 = v6;
  *(_QWORD *)(v12 + 8) = sub_1CDFACD38;
  *(_QWORD *)(v12 + 40) = a5;
  *(_QWORD *)(v12 + 48) = v5;
  *(_QWORD *)(v12 + 24) = a3;
  *(_QWORD *)(v12 + 32) = a4;
  *(_QWORD *)(v12 + 16) = a2;
  *(_WORD *)(v12 + 80) = *a1;
  return swift_task_switch();
}

uint64_t sub_1CE000534(uint64_t a1, _WORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v17;
  uint64_t v20;

  v17 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v17;
  *(_QWORD *)v17 = v9;
  *(_QWORD *)(v17 + 8) = sub_1CDFACD3C;
  *(_QWORD *)(v17 + 72) = v20;
  *(_QWORD *)(v17 + 80) = v8;
  *(_QWORD *)(v17 + 56) = a7;
  *(_QWORD *)(v17 + 64) = a8;
  *(_QWORD *)(v17 + 40) = a5;
  *(_QWORD *)(v17 + 48) = a6;
  *(_QWORD *)(v17 + 24) = a3;
  *(_QWORD *)(v17 + 32) = a4;
  *(_QWORD *)(v17 + 16) = a1;
  *(_WORD *)(v17 + 112) = *a2;
  return swift_task_switch();
}

uint64_t static XPCClient.== infix(_:_:)()
{
  sub_1CE000C10();
  return sub_1CE0B6854() & 1;
}

void XPCClient.hash(into:)()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 24);
  sub_1CE0B6860();

}

uint64_t XPCClient.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6860();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE000774()
{
  sub_1CE0B6D34();
  sub_1CE0B6860();
  return sub_1CE0B6D64();
}

void sub_1CE0007B8()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 24);
  sub_1CE0B6860();

}

uint64_t sub_1CE000800()
{
  uint64_t v0;
  id v1;

  sub_1CE0B6D34();
  v1 = *(id *)(*(_QWORD *)v0 + 24);
  sub_1CE0B6860();

  return sub_1CE0B6D64();
}

uint64_t sub_1CE00084C()
{
  sub_1CE000C10();
  return sub_1CE0B6854() & 1;
}

uint64_t sub_1CE000890()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CE0008B4(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;

  sub_1CDFFD42C(a1, a2, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

uint64_t sub_1CE0008C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0008E4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CDFFD688(a1, *(_WORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE0008F8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00096C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;

  v3 = v2[2];
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
      + 1) & 0xFFFFFFFFFFFFFFFELL;
  return sub_1CDFFD844(a1, *(unsigned __int16 *)((char *)v2 + v4), *(_QWORD *)((char *)v2 + ((v4 + 9) & 0xFFFFFFFFFFFFF8)), v3, v2[3], v2[4], a2);
}

uint64_t sub_1CE0009B0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CDFFDDE8(a1, *(_WORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1CE0009C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;

  v3 = v2[2];
  v4 = (*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80))
      + 1) & 0xFFFFFFFFFFFFFFFELL;
  return sub_1CDFFE324(a1, *(unsigned __int16 *)((char *)v2 + v4), *(_QWORD *)((char *)v2 + ((v4 + 9) & 0xFFFFFFFFFFFFF8)), v3, v2[3], v2[4], v2[5], a2, v2[6], v2[7]);
}

uint64_t sub_1CE000A28(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFFEB30(a1, *(_QWORD *)(v1 + 16), *(_WORD *)(v1 + 24));
}

uint64_t sub_1CE000A34(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFFEFA0(a1, *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_WORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1CE000A48(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFFF588(a1, *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(unsigned __int16 *)(v1 + 80), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1CE000A7C()
{
  return swift_deallocObject();
}

id sub_1CE000A8C(id *a1)
{
  uint64_t v1;

  return sub_1CDFFFFEC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1CE000AA4(uint64_t result, uint64_t (*a2)(uint64_t *))
{
  char v2;
  uint64_t v3;
  char v4;

  v2 = *(_BYTE *)(result + 8);
  v3 = *(_QWORD *)result;
  v4 = v2;
  if (a2)
    return a2(&v3);
  return result;
}

uint64_t sub_1CE000AE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE000B68(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CE000AE4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE000B7C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

void sub_1CE000BD4(void **a1)
{
  uint64_t v1;

  sub_1CE000330(a1, *(_BYTE *)(v1 + 40));
}

unint64_t sub_1CE000C10()
{
  unint64_t result;

  result = qword_1ED8F03A8;
  if (!qword_1ED8F03A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F03A8);
  }
  return result;
}

uint64_t sub_1CE000C4C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC2DB0((unint64_t *)&unk_1ED8F0C90, a2, (uint64_t (*)(uint64_t))type metadata accessor for XPCClient, (uint64_t)&protocol conformance descriptor for XPCClient);
}

uint64_t method lookup function for XPCClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCClient.deactivate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of XPCClient.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t getEnumTagSinglePayload for XPCClient.ConnectionState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCClient.ConnectionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE000D78 + 4 * byte_1CE0BCA2D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE000DAC + 4 * byte_1CE0BCA28[v4]))();
}

uint64_t sub_1CE000DAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE000DB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE000DBCLL);
  return result;
}

uint64_t sub_1CE000DC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE000DD0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE000DD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE000DDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCClient.ConnectionState()
{
  return &type metadata for XPCClient.ConnectionState;
}

unint64_t sub_1CE000DFC()
{
  unint64_t result;

  result = qword_1EFA5E998;
  if (!qword_1EFA5E998)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BCB68, &type metadata for XPCClient.ConnectionState);
    atomic_store(result, (unint64_t *)&qword_1EFA5E998);
  }
  return result;
}

void sub_1CE000E40(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, uint64_t *), uint64_t a4, uint64_t *a5)
{
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;

  v7 = *a5;
  a3(&v8, &v7);
  v6 = v8;
  v9 = 0;
  a1(&v8);
  sub_1CDFC2DF4(v6, 0);
}

uint64_t sub_1CE000EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = sub_1CE0B6518();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE000F74(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;

  v3 = *(_QWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v4 = *(_QWORD *)(sub_1CE0B6518() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (uint64_t *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFFCD54(a1, *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), v1 + v5, *v6, v6[1], v3);
}

uint64_t sub_1CE001000(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1200) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFF1AEC(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1CE001068()
{
  return objectdestroy_101Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void sub_1CE001074(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_1CE000E40(a1, a2, *(void (**)(void **__return_ptr, uint64_t *))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t *)(v2 + 32));
}

uint64_t sub_1CE001084(void *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = v2[2];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 1) & 0xFFFFFFFFFFFFFFFELL;
  return sub_1CDFFF6C4(a1, a2, (uint64_t)v2 + v5, *(_WORD *)((char *)v2 + v6), *(_QWORD *)((char *)v2 + ((v6 + 9) & 0xFFFFFFFFFFFFF8)), v3, v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1CE0010EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE001110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = sub_1CE0B6518();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0011A4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = *(_QWORD *)(v3 + 32);
  v13 = *(_OWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 56);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CE0B6518() - 8) + 80);
  return sub_1CDFFF910(a1, a2, a3, *(_QWORD *)(v3 + 64), v3 + ((v11 + 72) & ~v11), v7, v8, v9, v13, *((uint64_t *)&v13 + 1), v10);
}

uint64_t sub_1CE001260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = sub_1CE0B6518();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = *(_QWORD *)(v0 + v4 + 8);
  if (v5 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + v4), v5);

  return swift_deallocObject();
}

uint64_t sub_1CE001318()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = *(_QWORD *)(sub_1CE0B6518() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CDFFFC64(v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(void **)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1CE0013D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0013F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = sub_1CE0B6518();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE001488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = sub_1CE0B6518();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v5 = *(_QWORD *)(v0 + v4 + 8);
  if (v5 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + v4), v5);

  return swift_deallocObject();
}

uint64_t sub_1CE001540()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1CE0015A4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1CDFFF16C(a1, a2, v2 + v4, *(_WORD *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 1) & 0xFFFFFFFFFFFFFELL)));
}

uint64_t sub_1CE0015D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE001670(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1CDFFC990(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), v1 + v4, *(void (**)(_QWORD, _QWORD))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_1CE0016D8()
{
  return swift_deallocObject();
}

void sub_1CE0016E8(void *a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CDFFED0C(a1, a2, *(_WORD *)(v2 + 16));
}

uint64_t sub_1CE0016F4(int a1, int a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  return sub_1CDFFF330(a1, a2, a3);
}

uint64_t objectdestroy_147Tm()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5E9A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CE0017B8()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE001844(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = v2[2];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CDFFE470(a1, a2, (uint64_t)v2 + v5, *(void **)((char *)v2 + v6), *(_WORD *)((char *)v2 + ((v6 + 9) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)((char *)v2 + ((((v6 + 9) & 0xFFFFFFFFFFFFFFF8) + 9) & 0xFFFFFFFFFFFFF8)), v3, v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_1CE0018B4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0018E0(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_1CDFFE62C(a1, a2, a3, v3[8], v3[9], v3[10], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_1CE001918()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 88);
  if (v1 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + 80), v1);

  return swift_deallocObject();
}

uint64_t sub_1CE00195C()
{
  uint64_t v0;

  return sub_1CDFFE8B8(*(void (**)(char *))(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(void **)(v0 + 96));
}

uint64_t sub_1CE001998()
{
  return objectdestroy_185Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void sub_1CE0019A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CDFFDE80(a1, a2, *(void **)(v2 + 40), *(_WORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1CE0019B8()
{
  return objectdestroy_185Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_185Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 40));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0019F4(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_1CDFFDFAC(a1, a2, a3, v3[5], v3[6], v3[7], v3[2], v3[3], v3[4]);
}

uint64_t sub_1CE001A20()
{
  uint64_t v0;
  unint64_t v1;

  swift_release();
  v1 = *(_QWORD *)(v0 + 64);
  if (v1 >> 60 != 15)
    sub_1CDFC666C(*(_QWORD *)(v0 + 56), v1);

  return swift_deallocObject();
}

uint64_t sub_1CE001A64()
{
  uint64_t v0;

  return sub_1CDFFE224(*(void (**)(char *))(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1CE001A78()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE001B04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CDFFD97C(a1, a2, v2 + v4, *(void **)(v2 + v5), *(_WORD *)(v2 + ((v5 + 9) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1CE001B6C(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1CE06CD14(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1CE001B78()
{
  return objectdestroy_208Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CE001B84(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_1CDFFDB2C(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1E8B64720, (uint64_t)sub_1CE001BD0, (uint64_t)&block_descriptor_218);
}

uint64_t sub_1CE001BC4()
{
  return objectdestroy_101Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

void sub_1CE001BD0()
{
  uint64_t v0;

  sub_1CDFFDD68(*(void (**)(void *, _QWORD))(v0 + 16), *(_QWORD *)(v0 + 24), *(id *)(v0 + 32));
}

uint64_t sub_1CE001BEC()
{
  return objectdestroy_208Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

void sub_1CE001BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CDFFD710(a1, a2, *(void **)(v2 + 16), *(_WORD *)(v2 + 24));
}

uint64_t sub_1CE001C08()
{
  return objectdestroy_208Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_208Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE001C44(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t *v3;

  return sub_1CDFFDB2C(a1, a2, a3, v3[2], v3[3], v3[4], (uint64_t)&unk_1E8B64810, (uint64_t)sub_1CE001ECC, (uint64_t)&block_descriptor_238);
}

uint64_t sub_1CE001C84()
{
  return objectdestroy_101Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t sub_1CE001C90(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

void sub_1CE001CC8()
{
  uint64_t v0;

  sub_1CDFFC8F4(*(void (**)(void *, uint64_t))(v0 + 16));
}

void sub_1CE001CD4(void *a1)
{
  uint64_t v1;

  sub_1CDFFC350(a1, *(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void (**)(uint64_t, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1CE001CE4()
{
  return objectdestroy_101Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_101Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_1CE001D28()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 16))(*(_QWORD *)(v0 + 32), 1);
}

uint64_t objectdestroy_249Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE001D84()
{
  uint64_t v0;

  return sub_1CDFFB5A4(v0, sub_1CDFFB6C0);
}

uint64_t sub_1CE001DA4()
{
  uint64_t v0;

  return sub_1CDFFB5A4(v0, sub_1CDFFB8A0);
}

uint64_t HealthKitStandaloneMindfulSessionJobAdded.healthKitStandaloneMindfulSessionJob.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HealthKitStandaloneMindfulSessionJobAdded.init(healthKitStandaloneMindfulSessionJob:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static HealthKitStandaloneMindfulSessionJobAdded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5B58();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HealthKitStandaloneMindfulSessionJobAdded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthKitStandaloneMindfulSessionJobAdded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0020E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HealthKitStandaloneMindfulSessionJobAdded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE002130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B58();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for HealthKitStandaloneMindfulSessionJobAdded()
{
  uint64_t result;

  result = qword_1ED8F0A78;
  if (!qword_1ED8F0A78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0021AC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5B58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *RecommendationClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for RecommendationClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE003428(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t RecommendationClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE003574);
}

uint64_t RecommendationClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RecommendationClient.deduplicateOnboardingSurveyResults()()
{
  return sub_1CE0023D4(0xD000000000000024, (void *)0x80000001CE0C8BA0, 162);
}

uint64_t RecommendationClient.deleteAllOnboardingSurveyResults()()
{
  return sub_1CE0023D4(0xD000000000000022, (void *)0x80000001CE0C8BD0, 158);
}

uint64_t RecommendationClient.evaluateAllRecommendations()()
{
  return sub_1CE0023D4(0xD00000000000001CLL, (void *)0x80000001CE0C8C00, 149);
}

uint64_t sub_1CE0023D4(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8EF7D8);
  v8._object = (void *)0x80000001CE0C8B20;
  v8._countAndFlagsBits = 0xD000000000000075;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t RecommendationClient.evaluateRecommendedGuidedAudioWorkouts()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF7D8);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8C20;
  v3._countAndFlagsBits = 0xD000000000000028;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 153;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F05C8);
  v8 = sub_1CDFC889C((unint64_t *)&qword_1ED8F0098, &qword_1ED8F05C8, MEMORY[0x1E0D96790]);
  v9 = sub_1CE0035E0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.fetchRemoteForYouCanvas()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1EFA5D508 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63498);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8C50;
  v3._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 96;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B50CC();
  return v6(&v9, v7, MEMORY[0x1E0D93540], MEMORY[0x1E0D93548], ObjectType, v4);
}

uint64_t RecommendationClient.fetchOnboardingDetail()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF7D8);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8C70;
  v3._countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 159;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B4BF8();
  return v6(&v9, v7, MEMORY[0x1E0D91E88], MEMORY[0x1E0D91E90], ObjectType, v4);
}

uint64_t RecommendationClient.fetchPersonalizationInferenceResponse(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1EFA5D508 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63498);
  v4._countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001CE0C8B20;
  v5._object = (void *)0x80000001CE0C8C90;
  v5._countAndFlagsBits = 0xD00000000000002FLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 154;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5BB8();
  v10 = sub_1CE0B5A74();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D95EE0], MEMORY[0x1E0D95EE8], MEMORY[0x1E0D959E0], MEMORY[0x1E0D959E8], ObjectType, v6);
}

uint64_t RecommendationClient.fetchPersonalizationAwardProgressReferences()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1EFA5D508 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63498);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8CC0;
  v3._countAndFlagsBits = 0xD00000000000002DLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 160;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E9D0);
  v8 = sub_1CDFB0260(&qword_1EFA5E9D8, &qword_1EFA5E9D0, MEMORY[0x1E0D95E58], MEMORY[0x1E0D95E60]);
  v9 = sub_1CE003644();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.makePersonalizationInferenceRequest(options:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1EFA5D508 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63498);
  v4._countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001CE0C8B20;
  v5._object = (void *)0x80000001CE0C8CF0;
  v5._countAndFlagsBits = 0xD00000000000002DLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 155;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B5BB8();
  v10 = sub_1CE0B5A44();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D95EE0], MEMORY[0x1E0D95EE8], MEMORY[0x1E0D95920], MEMORY[0x1E0D95928], ObjectType, v6);
}

uint64_t RecommendationClient.queryAllRecommendations()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF7D8);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8D20;
  v3._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 150;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E9F0);
  v8 = sub_1CDFB0260(&qword_1EFA5E9F8, &qword_1EFA5E9F0, MEMORY[0x1E0D91300], MEMORY[0x1E0D91308]);
  v9 = sub_1CE0036C0();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.queryAllOnboardingSurveyResults()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int16 v11;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF7D8);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8D40;
  v3._countAndFlagsBits = 0xD000000000000021;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v11 = 161;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EA10);
  v8 = sub_1CDFB0260(&qword_1EFA5EA18, &qword_1EFA5EA10, MEMORY[0x1E0D939F8], MEMORY[0x1E0D93A00]);
  v9 = sub_1CE00373C();
  return v6(&v11, v7, v8, v9, ObjectType, v4);
}

uint64_t RecommendationClient.queryOnboardingSurveyResult()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8EF7D8);
  v2._countAndFlagsBits = 0xD000000000000075;
  v2._object = (void *)0x80000001CE0C8B20;
  v3._object = (void *)0x80000001CE0C8D70;
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 156;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B5180();
  return v6(&v9, v7, MEMORY[0x1E0D939F8], MEMORY[0x1E0D93A00], ObjectType, v4);
}

uint64_t RecommendationClient.queryRecommendations(for:)(char a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, char *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;
  __int16 v14;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF7D8);
  v4._countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001CE0C8B20;
  v5._object = (void *)0x80000001CE0C8D90;
  v5._countAndFlagsBits = 0xD00000000000001ALL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 151;
  v13 = a1;
  v8 = *(uint64_t (**)(__int16 *, char *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E9F0);
  v10 = sub_1CDFB0260(&qword_1EFA5E9F8, &qword_1EFA5E9F0, MEMORY[0x1E0D91300], MEMORY[0x1E0D91308]);
  v11 = sub_1CE0036C0();
  return v8(&v14, &v13, MEMORY[0x1E0D93FD0], v9, MEMORY[0x1E0D93FB8], MEMORY[0x1E0D93FC0], v10, v11, ObjectType, v6);
}

uint64_t RecommendationClient.queryRelatedWorkouts(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  __int16 v16;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8EF7D8);
  v6._countAndFlagsBits = 0xD000000000000075;
  v6._object = (void *)0x80000001CE0C8B20;
  v7._object = (void *)0x80000001CE0C8DB0;
  v7._countAndFlagsBits = 0xD000000000000018;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v16 = 152;
  v15[0] = a1;
  v15[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v8 + 32);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EA30);
  v12 = sub_1CDFC889C(&qword_1EFA5EA38, &qword_1EFA5EA30, MEMORY[0x1E0D94370]);
  v13 = sub_1CE0037B8();
  return v10(&v16, v15, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], v12, v13, ObjectType, v8);
}

uint64_t RecommendationClient.updateOnboardingSurveyResult(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8EFF78 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8EF7D8);
  v4._countAndFlagsBits = 0xD000000000000075;
  v4._object = (void *)0x80000001CE0C8B20;
  v5._object = (void *)0x80000001CE0C8DD0;
  v5._countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 157;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B5180();
  return v8(&v11, a1, v9, MEMORY[0x1E0D939F8], MEMORY[0x1E0D93A00], ObjectType, v6);
}

uint64_t sub_1CE003248()
{
  return RecommendationClient.deduplicateOnboardingSurveyResults()();
}

uint64_t sub_1CE003268()
{
  return RecommendationClient.deleteAllOnboardingSurveyResults()();
}

uint64_t sub_1CE003288()
{
  return RecommendationClient.evaluateAllRecommendations()();
}

uint64_t sub_1CE0032A8()
{
  return RecommendationClient.evaluateRecommendedGuidedAudioWorkouts()();
}

uint64_t sub_1CE0032C8()
{
  return RecommendationClient.fetchRemoteForYouCanvas()();
}

uint64_t sub_1CE0032E8()
{
  return RecommendationClient.fetchOnboardingDetail()();
}

uint64_t sub_1CE003308(uint64_t a1)
{
  return RecommendationClient.fetchPersonalizationInferenceResponse(options:)(a1);
}

uint64_t sub_1CE003328()
{
  return RecommendationClient.fetchPersonalizationAwardProgressReferences()();
}

uint64_t sub_1CE003348(uint64_t a1)
{
  return RecommendationClient.makePersonalizationInferenceRequest(options:)(a1);
}

uint64_t sub_1CE003368()
{
  return RecommendationClient.queryAllRecommendations()();
}

uint64_t sub_1CE003388()
{
  return RecommendationClient.queryAllOnboardingSurveyResults()();
}

uint64_t sub_1CE0033A8()
{
  return RecommendationClient.queryOnboardingSurveyResult()();
}

uint64_t sub_1CE0033C8(char a1)
{
  return RecommendationClient.queryRecommendations(for:)(a1);
}

uint64_t sub_1CE0033E8(uint64_t a1, uint64_t a2)
{
  return RecommendationClient.queryRelatedWorkouts(_:)(a1, a2);
}

uint64_t sub_1CE003408(uint64_t a1)
{
  return RecommendationClient.updateOnboardingSurveyResult(_:)(a1);
}

_QWORD *sub_1CE003428(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char v10;
  uint64_t v11;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v11 = a1;
  v10 = 15;
  v7 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1CE00386C, v7, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v11 = a1;
  v10 = 16;
  v8 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v10, (uint64_t)sub_1CE003894, v8, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE003574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for RecommendationClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB11E4(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE0035E0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1ED8F00A0;
  if (!qword_1ED8F00A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F05C8);
    v2 = sub_1CDFAC428();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED8F00A0);
  }
  return result;
}

unint64_t sub_1CE003644()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5E9E0;
  if (!qword_1EFA5E9E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5E9D0);
    v2 = sub_1CDFB1900(&qword_1EFA5E9E8, MEMORY[0x1E0D95E70], MEMORY[0x1E0D95E68]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5E9E0);
  }
  return result;
}

unint64_t sub_1CE0036C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5EA00;
  if (!qword_1EFA5EA00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5E9F0);
    v2 = sub_1CDFB1900(&qword_1EFA5EA08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91318], MEMORY[0x1E0D91310]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5EA00);
  }
  return result;
}

unint64_t sub_1CE00373C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5EA20;
  if (!qword_1EFA5EA20)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5EA10);
    v2 = sub_1CDFB1900(&qword_1EFA5EA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93A10], MEMORY[0x1E0D93A08]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D968E8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5EA20);
  }
  return result;
}

unint64_t sub_1CE0037B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5EA40;
  if (!qword_1EFA5EA40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5EA30);
    v2 = sub_1CDFB1900(&qword_1EFA5EA48, MEMORY[0x1E0D94380], MEMORY[0x1E0D94378]);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5EA40);
  }
  return result;
}

uint64_t method lookup function for RecommendationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RecommendationClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE003848()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE00386C()
{
  uint64_t v0;

  return sub_1CDFCBACC(v0, (uint64_t)&type metadata for RecommendationsUpdated, (uint64_t)&protocol witness table for RecommendationsUpdated);
}

uint64_t sub_1CE003894()
{
  uint64_t v0;

  return sub_1CDFCBACC(v0, (uint64_t)&type metadata for OnboardingSurveyResultsUpdated, (uint64_t)&protocol witness table for OnboardingSurveyResultsUpdated);
}

uint64_t RemoteBrowsingJournalEntry.property.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE00396C(v1, (uint64_t)v5);
  return sub_1CE0039B0((uint64_t)v5, a1);
}

uint64_t type metadata accessor for RemoteBrowsingJournalEntry()
{
  uint64_t result;

  result = qword_1EFA5EB70;
  if (!qword_1EFA5EB70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE00396C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteBrowsingJournalEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE0039B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RemoteBrowsingJournalEntry.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = v1;
  v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE00396C(v2, (uint64_t)v9);
  swift_getEnumCaseMultiPayload();
  sub_1CE0039B0((uint64_t)v9, (uint64_t)v6);
  sub_1CE0B6D40();
  RemoteBrowsingJournalProperty.hash(into:)(a1);
  return sub_1CDFE19F8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
}

uint64_t RemoteBrowsingJournalEntry.hashValue.getter()
{
  _BYTE v1[72];

  sub_1CE0B6D34();
  RemoteBrowsingJournalEntry.hash(into:)((uint64_t)v1);
  return sub_1CE0B6D64();
}

uint64_t sub_1CE003B24()
{
  _BYTE v1[72];

  sub_1CE0B6D34();
  RemoteBrowsingJournalEntry.hash(into:)((uint64_t)v1);
  return sub_1CE0B6D64();
}

uint64_t sub_1CE003B64()
{
  _BYTE v1[72];

  sub_1CE0B6D34();
  RemoteBrowsingJournalEntry.hash(into:)((uint64_t)v1);
  return sub_1CE0B6D64();
}

uint64_t _s13SeymourClient26RemoteBrowsingJournalEntryO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for RemoteBrowsingJournalProperty();
  v5 = MEMORY[0x1E0C80A78](v4);
  v35 = (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v34 - v10;
  v12 = type metadata accessor for RemoteBrowsingJournalEntry();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v34 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v34 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EBA8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = (uint64_t)&v24[*(int *)(v22 + 48)];
  sub_1CE00396C(a1, (uint64_t)v24);
  sub_1CE00396C(a2, v25);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1CE00396C((uint64_t)v24, (uint64_t)v18);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1CE0039B0(v25, (uint64_t)v9);
        _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)v18, (uint64_t)v9);
        v28 = v27;
        sub_1CDFE19F8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
        v29 = (uint64_t)v18;
LABEL_12:
        sub_1CDFE19F8(v29, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
        sub_1CDFE19F8((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
        return v28 & 1;
      }
      v15 = v18;
    }
    else
    {
      sub_1CE00396C((uint64_t)v24, (uint64_t)v15);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v30 = v35;
        sub_1CE0039B0(v25, v35);
        _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)v15, v30);
        v28 = v31;
        sub_1CDFE19F8(v30, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
        v29 = (uint64_t)v15;
        goto LABEL_12;
      }
    }
  }
  else
  {
    sub_1CE00396C((uint64_t)v24, (uint64_t)v20);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1CE0039B0(v25, (uint64_t)v11);
      _s13SeymourClient29RemoteBrowsingJournalPropertyO2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v11);
      v28 = v32;
      sub_1CDFE19F8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
      v29 = (uint64_t)v20;
      goto LABEL_12;
    }
    v15 = v20;
  }
  sub_1CDFE19F8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
  sub_1CE0064E4((uint64_t)v24);
  v28 = 0;
  return v28 & 1;
}

unint64_t sub_1CE003E8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5EAF8;
  if (!qword_1EFA5EAF8)
  {
    v1 = type metadata accessor for RemoteBrowsingJournalEntry();
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for RemoteBrowsingJournalEntry, v1);
    atomic_store(result, (unint64_t *)&qword_1EFA5EAF8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteBrowsingJournalEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v11 = sub_1CE0B43B8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
          goto LABEL_55;
        case 1u:
          v33 = sub_1CE0B4904();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a1, a2, v33);
          goto LABEL_55;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_55;
        case 4u:
          v34 = sub_1CE0B53FC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(a1, a2, v34);
          goto LABEL_55;
        case 8u:
          v35 = sub_1CE0B5444();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
          goto LABEL_55;
        case 9u:
          v36 = sub_1CE0B5078();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
          goto LABEL_55;
        case 0xAu:
          v37 = sub_1CE0B5348();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(a1, a2, v37);
          goto LABEL_55;
        case 0xBu:
          v38 = sub_1CE0B5180();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
          goto LABEL_55;
        case 0xCu:
          v39 = sub_1CE0B5198();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(a1, a2, v39);
          goto LABEL_55;
        case 0xDu:
          v40 = sub_1CE0B5A8C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
          goto LABEL_55;
        case 0xEu:
          v41 = sub_1CE0B5F60();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
          goto LABEL_55;
        case 0x10u:
          v42 = sub_1CE0B54F8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(a1, a2, v42);
          goto LABEL_55;
        case 0x11u:
          v43 = sub_1CE0B4C10();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(a1, a2, v43);
          goto LABEL_55;
        case 0x12u:
          v44 = sub_1CE0B4C28();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(a1, a2, v44);
          goto LABEL_55;
        case 0x13u:
          v45 = sub_1CE0B4FB8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(a1, a2, v45);
          goto LABEL_55;
        case 0x14u:
          v46 = a2[1];
          *a1 = *a2;
          a1[1] = v46;
          swift_bridgeObjectRetain();
          goto LABEL_55;
        case 0x15u:
          v47 = sub_1CE0B4B08();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(a1, a2, v47);
          goto LABEL_55;
        case 0x16u:
          v48 = sub_1CE0B41D8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
          goto LABEL_55;
        case 0x17u:
          v49 = sub_1CE0B54B0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(a1, a2, v49);
          goto LABEL_55;
        case 0x18u:
          v50 = sub_1CE0B5840();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(a1, a2, v50);
          goto LABEL_55;
        case 0x1Au:
          v51 = sub_1CE0B57A4();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(a1, a2, v51);
LABEL_55:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v8 = sub_1CE0B43B8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
          goto LABEL_32;
        case 1u:
          v14 = sub_1CE0B4904();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
          goto LABEL_32;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 4u:
          v15 = sub_1CE0B53FC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
          goto LABEL_32;
        case 8u:
          v16 = sub_1CE0B5444();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_32;
        case 9u:
          v17 = sub_1CE0B5078();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
          goto LABEL_32;
        case 0xAu:
          v18 = sub_1CE0B5348();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
          goto LABEL_32;
        case 0xBu:
          v19 = sub_1CE0B5180();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
          goto LABEL_32;
        case 0xCu:
          v20 = sub_1CE0B5198();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
          goto LABEL_32;
        case 0xDu:
          v21 = sub_1CE0B5A8C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
          goto LABEL_32;
        case 0xEu:
          v22 = sub_1CE0B5F60();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
          goto LABEL_32;
        case 0x10u:
          v23 = sub_1CE0B54F8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
          goto LABEL_32;
        case 0x11u:
          v24 = sub_1CE0B4C10();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
          goto LABEL_32;
        case 0x12u:
          v25 = sub_1CE0B4C28();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
          goto LABEL_32;
        case 0x13u:
          v26 = sub_1CE0B4FB8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
          goto LABEL_32;
        case 0x14u:
          v27 = a2[1];
          *a1 = *a2;
          a1[1] = v27;
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 0x15u:
          v28 = sub_1CE0B4B08();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
          goto LABEL_32;
        case 0x16u:
          v29 = sub_1CE0B41D8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(a1, a2, v29);
          goto LABEL_32;
        case 0x17u:
          v30 = sub_1CE0B54B0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(a1, a2, v30);
          goto LABEL_32;
        case 0x18u:
          v31 = sub_1CE0B5840();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
          goto LABEL_32;
        case 0x1Au:
          v32 = sub_1CE0B57A4();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(a1, a2, v32);
LABEL_32:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
    }
    else
    {
      v12 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v13 = sub_1CE0B43B8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
          goto LABEL_78;
        case 1u:
          v52 = sub_1CE0B4904();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(a1, a2, v52);
          goto LABEL_78;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 4u:
          v53 = sub_1CE0B53FC();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(a1, a2, v53);
          goto LABEL_78;
        case 8u:
          v54 = sub_1CE0B5444();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v54 - 8) + 16))(a1, a2, v54);
          goto LABEL_78;
        case 9u:
          v55 = sub_1CE0B5078();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(a1, a2, v55);
          goto LABEL_78;
        case 0xAu:
          v56 = sub_1CE0B5348();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(a1, a2, v56);
          goto LABEL_78;
        case 0xBu:
          v57 = sub_1CE0B5180();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(a1, a2, v57);
          goto LABEL_78;
        case 0xCu:
          v58 = sub_1CE0B5198();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(a1, a2, v58);
          goto LABEL_78;
        case 0xDu:
          v59 = sub_1CE0B5A8C();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v59 - 8) + 16))(a1, a2, v59);
          goto LABEL_78;
        case 0xEu:
          v60 = sub_1CE0B5F60();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(a1, a2, v60);
          goto LABEL_78;
        case 0x10u:
          v61 = sub_1CE0B54F8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(a1, a2, v61);
          goto LABEL_78;
        case 0x11u:
          v62 = sub_1CE0B4C10();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(a1, a2, v62);
          goto LABEL_78;
        case 0x12u:
          v63 = sub_1CE0B4C28();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v63 - 8) + 16))(a1, a2, v63);
          goto LABEL_78;
        case 0x13u:
          v64 = sub_1CE0B4FB8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(a1, a2, v64);
          goto LABEL_78;
        case 0x14u:
          v65 = a2[1];
          *a1 = *a2;
          a1[1] = v65;
          swift_bridgeObjectRetain();
          goto LABEL_78;
        case 0x15u:
          v66 = sub_1CE0B4B08();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(a1, a2, v66);
          goto LABEL_78;
        case 0x16u:
          v67 = sub_1CE0B41D8();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v67 - 8) + 16))(a1, a2, v67);
          goto LABEL_78;
        case 0x17u:
          v68 = sub_1CE0B54B0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(a1, a2, v68);
          goto LABEL_78;
        case 0x18u:
          v69 = sub_1CE0B5840();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(a1, a2, v69);
          goto LABEL_78;
        case 0x1Au:
          v70 = sub_1CE0B57A4();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(a1, a2, v70);
LABEL_78:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for RemoteBrowsingJournalEntry(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      type metadata accessor for RemoteBrowsingJournalProperty();
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
LABEL_9:
          v3 = sub_1CE0B43B8();
          goto LABEL_28;
        case 1:
LABEL_10:
          v3 = sub_1CE0B4904();
          goto LABEL_28;
        case 3:
        case 5:
        case 6:
        case 7:
        case 15:
        case 20:
        case 25:
          return swift_bridgeObjectRelease();
        case 4:
LABEL_11:
          v3 = sub_1CE0B53FC();
          goto LABEL_28;
        case 8:
LABEL_12:
          v3 = sub_1CE0B5444();
          goto LABEL_28;
        case 9:
LABEL_13:
          v3 = sub_1CE0B5078();
          goto LABEL_28;
        case 10:
LABEL_14:
          v3 = sub_1CE0B5348();
          goto LABEL_28;
        case 11:
LABEL_15:
          v3 = sub_1CE0B5180();
          goto LABEL_28;
        case 12:
LABEL_16:
          v3 = sub_1CE0B5198();
          goto LABEL_28;
        case 13:
LABEL_17:
          v3 = sub_1CE0B5A8C();
          goto LABEL_28;
        case 14:
LABEL_18:
          v3 = sub_1CE0B5F60();
          goto LABEL_28;
        case 16:
LABEL_19:
          v3 = sub_1CE0B54F8();
          goto LABEL_28;
        case 17:
LABEL_20:
          v3 = sub_1CE0B4C10();
          goto LABEL_28;
        case 18:
LABEL_21:
          v3 = sub_1CE0B4C28();
          goto LABEL_28;
        case 19:
LABEL_22:
          v3 = sub_1CE0B4FB8();
          goto LABEL_28;
        case 21:
LABEL_23:
          v3 = sub_1CE0B4B08();
          goto LABEL_28;
        case 22:
LABEL_24:
          v3 = sub_1CE0B41D8();
          goto LABEL_28;
        case 23:
LABEL_25:
          v3 = sub_1CE0B54B0();
          goto LABEL_28;
        case 24:
LABEL_26:
          v3 = sub_1CE0B5840();
          goto LABEL_28;
        case 26:
LABEL_27:
          v3 = sub_1CE0B57A4();
LABEL_28:
          result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
          break;
        default:
          return result;
      }
      break;
    case 1:
      type metadata accessor for RemoteBrowsingJournalProperty();
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_9;
        case 1:
          goto LABEL_10;
        case 3:
        case 5:
        case 6:
        case 7:
        case 15:
        case 20:
        case 25:
          return swift_bridgeObjectRelease();
        case 4:
          goto LABEL_11;
        case 8:
          goto LABEL_12;
        case 9:
          goto LABEL_13;
        case 10:
          goto LABEL_14;
        case 11:
          goto LABEL_15;
        case 12:
          goto LABEL_16;
        case 13:
          goto LABEL_17;
        case 14:
          goto LABEL_18;
        case 16:
          goto LABEL_19;
        case 17:
          goto LABEL_20;
        case 18:
          goto LABEL_21;
        case 19:
          goto LABEL_22;
        case 21:
          goto LABEL_23;
        case 22:
          goto LABEL_24;
        case 23:
          goto LABEL_25;
        case 24:
          goto LABEL_26;
        case 26:
          goto LABEL_27;
        default:
          return result;
      }
    case 0:
      type metadata accessor for RemoteBrowsingJournalProperty();
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_9;
        case 1:
          goto LABEL_10;
        case 3:
        case 5:
        case 6:
        case 7:
        case 15:
        case 20:
        case 25:
          return swift_bridgeObjectRelease();
        case 4:
          goto LABEL_11;
        case 8:
          goto LABEL_12;
        case 9:
          goto LABEL_13;
        case 10:
          goto LABEL_14;
        case 11:
          goto LABEL_15;
        case 12:
          goto LABEL_16;
        case 13:
          goto LABEL_17;
        case 14:
          goto LABEL_18;
        case 16:
          goto LABEL_19;
        case 17:
          goto LABEL_20;
        case 18:
          goto LABEL_21;
        case 19:
          goto LABEL_22;
        case 21:
          goto LABEL_23;
        case 22:
          goto LABEL_24;
        case 23:
          goto LABEL_25;
        case 24:
          goto LABEL_26;
        case 26:
          goto LABEL_27;
        default:
          return result;
      }
  }
  return result;
}

_QWORD *initializeWithCopy for RemoteBrowsingJournalEntry(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_6;
        case 1u:
          goto LABEL_7;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          goto LABEL_10;
        case 4u:
          goto LABEL_9;
        case 8u:
          goto LABEL_11;
        case 9u:
          goto LABEL_12;
        case 0xAu:
          goto LABEL_13;
        case 0xBu:
          goto LABEL_14;
        case 0xCu:
          goto LABEL_15;
        case 0xDu:
          goto LABEL_16;
        case 0xEu:
          goto LABEL_17;
        case 0x10u:
          goto LABEL_18;
        case 0x11u:
          goto LABEL_19;
        case 0x12u:
          goto LABEL_20;
        case 0x13u:
          goto LABEL_21;
        case 0x14u:
          goto LABEL_22;
        case 0x15u:
          goto LABEL_23;
        case 0x16u:
          goto LABEL_24;
        case 0x17u:
          goto LABEL_25;
        case 0x18u:
          goto LABEL_26;
        case 0x1Au:
          goto LABEL_27;
        default:
          goto LABEL_8;
      }
    }
    v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_6;
      case 1u:
        goto LABEL_7;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
        goto LABEL_10;
      case 4u:
        goto LABEL_9;
      case 8u:
        goto LABEL_11;
      case 9u:
        goto LABEL_12;
      case 0xAu:
        goto LABEL_13;
      case 0xBu:
        goto LABEL_14;
      case 0xCu:
        goto LABEL_15;
      case 0xDu:
        goto LABEL_16;
      case 0xEu:
        goto LABEL_17;
      case 0x10u:
        goto LABEL_18;
      case 0x11u:
        goto LABEL_19;
      case 0x12u:
        goto LABEL_20;
      case 0x13u:
        goto LABEL_21;
      case 0x14u:
        goto LABEL_22;
      case 0x15u:
        goto LABEL_23;
      case 0x16u:
        goto LABEL_24;
      case 0x17u:
        goto LABEL_25;
      case 0x18u:
        goto LABEL_26;
      case 0x1Au:
        goto LABEL_27;
      default:
        goto LABEL_8;
    }
  }
  v5 = type metadata accessor for RemoteBrowsingJournalProperty();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
LABEL_6:
      v6 = sub_1CE0B43B8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_28;
    case 1u:
LABEL_7:
      v7 = sub_1CE0B4904();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_28;
    case 3u:
    case 5u:
    case 6u:
    case 7u:
    case 0xFu:
    case 0x19u:
LABEL_10:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 4u:
LABEL_9:
      v8 = sub_1CE0B53FC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_28;
    case 8u:
LABEL_11:
      v9 = sub_1CE0B5444();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_28;
    case 9u:
LABEL_12:
      v10 = sub_1CE0B5078();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      goto LABEL_28;
    case 0xAu:
LABEL_13:
      v11 = sub_1CE0B5348();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      goto LABEL_28;
    case 0xBu:
LABEL_14:
      v12 = sub_1CE0B5180();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      goto LABEL_28;
    case 0xCu:
LABEL_15:
      v13 = sub_1CE0B5198();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      goto LABEL_28;
    case 0xDu:
LABEL_16:
      v14 = sub_1CE0B5A8C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_28;
    case 0xEu:
LABEL_17:
      v15 = sub_1CE0B5F60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      goto LABEL_28;
    case 0x10u:
LABEL_18:
      v16 = sub_1CE0B54F8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      goto LABEL_28;
    case 0x11u:
LABEL_19:
      v17 = sub_1CE0B4C10();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      goto LABEL_28;
    case 0x12u:
LABEL_20:
      v18 = sub_1CE0B4C28();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      goto LABEL_28;
    case 0x13u:
LABEL_21:
      v19 = sub_1CE0B4FB8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      goto LABEL_28;
    case 0x14u:
LABEL_22:
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 0x15u:
LABEL_23:
      v21 = sub_1CE0B4B08();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
      goto LABEL_28;
    case 0x16u:
LABEL_24:
      v22 = sub_1CE0B41D8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
      goto LABEL_28;
    case 0x17u:
LABEL_25:
      v23 = sub_1CE0B54B0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
      goto LABEL_28;
    case 0x18u:
LABEL_26:
      v24 = sub_1CE0B5840();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
      goto LABEL_28;
    case 0x1Au:
LABEL_27:
      v25 = sub_1CE0B57A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
LABEL_28:
      swift_storeEnumTagMultiPayload();
      break;
    default:
LABEL_8:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for RemoteBrowsingJournalEntry(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1CDFE19F8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v5 = type metadata accessor for RemoteBrowsingJournalProperty();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            goto LABEL_7;
          case 1u:
            goto LABEL_8;
          case 3u:
          case 5u:
          case 6u:
          case 7u:
          case 0xFu:
          case 0x19u:
            goto LABEL_11;
          case 4u:
            goto LABEL_10;
          case 8u:
            goto LABEL_12;
          case 9u:
            goto LABEL_13;
          case 0xAu:
            goto LABEL_14;
          case 0xBu:
            goto LABEL_15;
          case 0xCu:
            goto LABEL_16;
          case 0xDu:
            goto LABEL_17;
          case 0xEu:
            goto LABEL_18;
          case 0x10u:
            goto LABEL_19;
          case 0x11u:
            goto LABEL_20;
          case 0x12u:
            goto LABEL_21;
          case 0x13u:
            goto LABEL_22;
          case 0x14u:
            goto LABEL_23;
          case 0x15u:
            goto LABEL_24;
          case 0x16u:
            goto LABEL_25;
          case 0x17u:
            goto LABEL_26;
          case 0x18u:
            goto LABEL_27;
          case 0x1Au:
            goto LABEL_28;
          default:
            goto LABEL_9;
        }
      }
      v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_7;
        case 1u:
          goto LABEL_8;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
        case 0xFu:
        case 0x19u:
          goto LABEL_11;
        case 4u:
          goto LABEL_10;
        case 8u:
          goto LABEL_12;
        case 9u:
          goto LABEL_13;
        case 0xAu:
          goto LABEL_14;
        case 0xBu:
          goto LABEL_15;
        case 0xCu:
          goto LABEL_16;
        case 0xDu:
          goto LABEL_17;
        case 0xEu:
          goto LABEL_18;
        case 0x10u:
          goto LABEL_19;
        case 0x11u:
          goto LABEL_20;
        case 0x12u:
          goto LABEL_21;
        case 0x13u:
          goto LABEL_22;
        case 0x14u:
          goto LABEL_23;
        case 0x15u:
          goto LABEL_24;
        case 0x16u:
          goto LABEL_25;
        case 0x17u:
          goto LABEL_26;
        case 0x18u:
          goto LABEL_27;
        case 0x1Au:
          goto LABEL_28;
        default:
          goto LABEL_9;
      }
    }
    v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
LABEL_7:
        v6 = sub_1CE0B43B8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_29;
      case 1u:
LABEL_8:
        v7 = sub_1CE0B4904();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_29;
      case 3u:
      case 5u:
      case 6u:
      case 7u:
      case 0xFu:
      case 0x19u:
LABEL_11:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_29;
      case 4u:
LABEL_10:
        v8 = sub_1CE0B53FC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_29;
      case 8u:
LABEL_12:
        v9 = sub_1CE0B5444();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_29;
      case 9u:
LABEL_13:
        v10 = sub_1CE0B5078();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_29;
      case 0xAu:
LABEL_14:
        v11 = sub_1CE0B5348();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_29;
      case 0xBu:
LABEL_15:
        v12 = sub_1CE0B5180();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        goto LABEL_29;
      case 0xCu:
LABEL_16:
        v13 = sub_1CE0B5198();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        goto LABEL_29;
      case 0xDu:
LABEL_17:
        v14 = sub_1CE0B5A8C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        goto LABEL_29;
      case 0xEu:
LABEL_18:
        v15 = sub_1CE0B5F60();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        goto LABEL_29;
      case 0x10u:
LABEL_19:
        v16 = sub_1CE0B54F8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        goto LABEL_29;
      case 0x11u:
LABEL_20:
        v17 = sub_1CE0B4C10();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        goto LABEL_29;
      case 0x12u:
LABEL_21:
        v18 = sub_1CE0B4C28();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        goto LABEL_29;
      case 0x13u:
LABEL_22:
        v19 = sub_1CE0B4FB8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        goto LABEL_29;
      case 0x14u:
LABEL_23:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_29;
      case 0x15u:
LABEL_24:
        v20 = sub_1CE0B4B08();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        goto LABEL_29;
      case 0x16u:
LABEL_25:
        v21 = sub_1CE0B41D8();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(a1, a2, v21);
        goto LABEL_29;
      case 0x17u:
LABEL_26:
        v22 = sub_1CE0B54B0();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        goto LABEL_29;
      case 0x18u:
LABEL_27:
        v23 = sub_1CE0B5840();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
        goto LABEL_29;
      case 0x1Au:
LABEL_28:
        v24 = sub_1CE0B57A4();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_29:
        swift_storeEnumTagMultiPayload();
        break;
      default:
LABEL_9:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for RemoteBrowsingJournalEntry(void *a1, const void *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_6;
        case 1u:
          goto LABEL_7;
        case 4u:
          goto LABEL_9;
        case 8u:
          goto LABEL_10;
        case 9u:
          goto LABEL_11;
        case 0xAu:
          goto LABEL_12;
        case 0xBu:
          goto LABEL_13;
        case 0xCu:
          goto LABEL_14;
        case 0xDu:
          goto LABEL_15;
        case 0xEu:
          goto LABEL_16;
        case 0x10u:
          goto LABEL_17;
        case 0x11u:
          goto LABEL_18;
        case 0x12u:
          goto LABEL_19;
        case 0x13u:
          goto LABEL_20;
        case 0x15u:
          goto LABEL_21;
        case 0x16u:
          goto LABEL_22;
        case 0x17u:
          goto LABEL_23;
        case 0x18u:
          goto LABEL_24;
        case 0x1Au:
          goto LABEL_25;
        default:
          goto LABEL_8;
      }
    }
    v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        goto LABEL_6;
      case 1u:
        goto LABEL_7;
      case 4u:
        goto LABEL_9;
      case 8u:
        goto LABEL_10;
      case 9u:
        goto LABEL_11;
      case 0xAu:
        goto LABEL_12;
      case 0xBu:
        goto LABEL_13;
      case 0xCu:
        goto LABEL_14;
      case 0xDu:
        goto LABEL_15;
      case 0xEu:
        goto LABEL_16;
      case 0x10u:
        goto LABEL_17;
      case 0x11u:
        goto LABEL_18;
      case 0x12u:
        goto LABEL_19;
      case 0x13u:
        goto LABEL_20;
      case 0x15u:
        goto LABEL_21;
      case 0x16u:
        goto LABEL_22;
      case 0x17u:
        goto LABEL_23;
      case 0x18u:
        goto LABEL_24;
      case 0x1Au:
        goto LABEL_25;
      default:
        goto LABEL_8;
    }
  }
  v5 = type metadata accessor for RemoteBrowsingJournalProperty();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
LABEL_6:
      v6 = sub_1CE0B43B8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_26;
    case 1u:
LABEL_7:
      v7 = sub_1CE0B4904();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_26;
    case 4u:
LABEL_9:
      v8 = sub_1CE0B53FC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      goto LABEL_26;
    case 8u:
LABEL_10:
      v9 = sub_1CE0B5444();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      goto LABEL_26;
    case 9u:
LABEL_11:
      v10 = sub_1CE0B5078();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      goto LABEL_26;
    case 0xAu:
LABEL_12:
      v11 = sub_1CE0B5348();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      goto LABEL_26;
    case 0xBu:
LABEL_13:
      v12 = sub_1CE0B5180();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      goto LABEL_26;
    case 0xCu:
LABEL_14:
      v13 = sub_1CE0B5198();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      goto LABEL_26;
    case 0xDu:
LABEL_15:
      v14 = sub_1CE0B5A8C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      goto LABEL_26;
    case 0xEu:
LABEL_16:
      v15 = sub_1CE0B5F60();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      goto LABEL_26;
    case 0x10u:
LABEL_17:
      v16 = sub_1CE0B54F8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
      goto LABEL_26;
    case 0x11u:
LABEL_18:
      v17 = sub_1CE0B4C10();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      goto LABEL_26;
    case 0x12u:
LABEL_19:
      v18 = sub_1CE0B4C28();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      goto LABEL_26;
    case 0x13u:
LABEL_20:
      v19 = sub_1CE0B4FB8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      goto LABEL_26;
    case 0x15u:
LABEL_21:
      v20 = sub_1CE0B4B08();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      goto LABEL_26;
    case 0x16u:
LABEL_22:
      v21 = sub_1CE0B41D8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      goto LABEL_26;
    case 0x17u:
LABEL_23:
      v22 = sub_1CE0B54B0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
      goto LABEL_26;
    case 0x18u:
LABEL_24:
      v23 = sub_1CE0B5840();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
      goto LABEL_26;
    case 0x1Au:
LABEL_25:
      v24 = sub_1CE0B57A4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
LABEL_26:
      swift_storeEnumTagMultiPayload();
      break;
    default:
LABEL_8:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for RemoteBrowsingJournalEntry(void *a1, const void *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (a1 != a2)
  {
    sub_1CDFE19F8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalEntry);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v5 = type metadata accessor for RemoteBrowsingJournalProperty();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            goto LABEL_7;
          case 1u:
            goto LABEL_8;
          case 4u:
            goto LABEL_9;
          case 8u:
            goto LABEL_10;
          case 9u:
            goto LABEL_11;
          case 0xAu:
            goto LABEL_12;
          case 0xBu:
            goto LABEL_13;
          case 0xCu:
            goto LABEL_14;
          case 0xDu:
            goto LABEL_15;
          case 0xEu:
            goto LABEL_16;
          case 0x10u:
            goto LABEL_17;
          case 0x11u:
            goto LABEL_18;
          case 0x12u:
            goto LABEL_19;
          case 0x13u:
            goto LABEL_20;
          case 0x15u:
            goto LABEL_21;
          case 0x16u:
            goto LABEL_22;
          case 0x17u:
            goto LABEL_23;
          case 0x18u:
            goto LABEL_24;
          case 0x1Au:
            goto LABEL_25;
          default:
            goto LABEL_26;
        }
      }
      v5 = type metadata accessor for RemoteBrowsingJournalProperty();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_7;
        case 1u:
          goto LABEL_8;
        case 4u:
          goto LABEL_9;
        case 8u:
          goto LABEL_10;
        case 9u:
          goto LABEL_11;
        case 0xAu:
          goto LABEL_12;
        case 0xBu:
          goto LABEL_13;
        case 0xCu:
          goto LABEL_14;
        case 0xDu:
          goto LABEL_15;
        case 0xEu:
          goto LABEL_16;
        case 0x10u:
          goto LABEL_17;
        case 0x11u:
          goto LABEL_18;
        case 0x12u:
          goto LABEL_19;
        case 0x13u:
          goto LABEL_20;
        case 0x15u:
          goto LABEL_21;
        case 0x16u:
          goto LABEL_22;
        case 0x17u:
          goto LABEL_23;
        case 0x18u:
          goto LABEL_24;
        case 0x1Au:
          goto LABEL_25;
        default:
          goto LABEL_26;
      }
    }
    v5 = type metadata accessor for RemoteBrowsingJournalProperty();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
LABEL_7:
        v6 = sub_1CE0B43B8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
LABEL_8:
        v7 = sub_1CE0B4904();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
LABEL_9:
        v8 = sub_1CE0B53FC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
LABEL_10:
        v9 = sub_1CE0B5444();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
LABEL_11:
        v10 = sub_1CE0B5078();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
LABEL_12:
        v11 = sub_1CE0B5348();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
LABEL_13:
        v12 = sub_1CE0B5180();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xCu:
LABEL_14:
        v13 = sub_1CE0B5198();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xDu:
LABEL_15:
        v14 = sub_1CE0B5A8C();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
        swift_storeEnumTagMultiPayload();
        break;
      case 0xEu:
LABEL_16:
        v15 = sub_1CE0B5F60();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x10u:
LABEL_17:
        v16 = sub_1CE0B54F8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a1, a2, v16);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x11u:
LABEL_18:
        v17 = sub_1CE0B4C10();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x12u:
LABEL_19:
        v18 = sub_1CE0B4C28();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x13u:
LABEL_20:
        v19 = sub_1CE0B4FB8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x15u:
LABEL_21:
        v20 = sub_1CE0B4B08();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x16u:
LABEL_22:
        v21 = sub_1CE0B41D8();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x17u:
LABEL_23:
        v22 = sub_1CE0B54B0();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a1, a2, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x18u:
LABEL_24:
        v23 = sub_1CE0B5840();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(a1, a2, v23);
        swift_storeEnumTagMultiPayload();
        break;
      case 0x1Au:
LABEL_25:
        v24 = sub_1CE0B57A4();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a1, a2, v24);
        swift_storeEnumTagMultiPayload();
        break;
      default:
LABEL_26:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1CE00647C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RemoteBrowsingJournalProperty();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1CE0064E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EBA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AnalyticsErrorTransformable<>.errorCode.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1CE0B6290();
}

uint64_t AnalyticsErrorTransformable<>.errorDomain.getter()
{
  swift_getDynamicType();
  swift_getMetatypeMetadata();
  return sub_1CE0B6290();
}

uint64_t sub_1CE0065E0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC38);
}

uint64_t sub_1CE0065EC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC30);
}

uint64_t sub_1CE0065F8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC28);
}

uint64_t sub_1CE006604(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC20);
}

uint64_t sub_1CE006610(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC18);
}

uint64_t sub_1CE00661C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC10);
}

uint64_t sub_1CE006628()
{
  return sub_1CE0B6290();
}

uint64_t sub_1CE006654(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC08);
}

uint64_t sub_1CE006660(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EC00);
}

uint64_t sub_1CE006670(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBB0);
}

uint64_t sub_1CE00667C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBF8);
}

uint64_t sub_1CE006688(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBF0);
}

uint64_t sub_1CE006694(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBE8);
}

uint64_t sub_1CE0066A0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBE0);
}

uint64_t sub_1CE0066AC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBD8);
}

uint64_t sub_1CE0066B8(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBD0);
}

uint64_t sub_1CE0066C4(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBC8);
}

uint64_t sub_1CE0066D0(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBC0);
}

uint64_t sub_1CE0066DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1CE0B6290();
}

uint64_t sub_1CE006748(uint64_t a1, uint64_t a2)
{
  return sub_1CDFC9990(a1, a2, &qword_1EFA5EBB8);
}

uint64_t PersonalizationInferenceRequestHashes.init(canvas:catalogData:userAwardData:userData:userHistoryData:userLibraryData:userOnboardingData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1CE006A34(100000, (void (*)(_QWORD))MEMORY[0x1E0D93550]);
  if (v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CE006A34(100000, (void (*)(_QWORD))MEMORY[0x1E0D94CE0]);
    sub_1CE006D94(100000, a3);
    swift_bridgeObjectRelease();
    sub_1CE006A34(100000, (void (*)(_QWORD))MEMORY[0x1E0D94130]);
    sub_1CE006A34(100000, (void (*)(_QWORD))MEMORY[0x1E0D956F0]);
    sub_1CE006A34(100000, (void (*)(_QWORD))MEMORY[0x1E0D95708]);
    sub_1CE006A34(100000, (void (*)(_QWORD))MEMORY[0x1E0D95B68]);
    sub_1CE0B5BA0();
  }
  v13 = sub_1CE0B5AD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a7, v13);
  v14 = sub_1CE0B5960();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a6, v14);
  v15 = sub_1CE0B5954();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a5, v15);
  v16 = sub_1CE0B5360();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a4, v16);
  v17 = sub_1CE0B5708();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  v18 = sub_1CE0B50CC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(a1, v18);
}

uint64_t sub_1CE006A34(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = sub_1CE0B61DC();
  MEMORY[0x1E0C80A78](v5);
  a2(0);
  sub_1CE0B56B4();
  if (!v3)
    __asm { BR              X10 }
  return v2;
}

_QWORD *sub_1CE006D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD v7[4];

  v7[3] = *MEMORY[0x1E0C80C00];
  v4 = sub_1CE0B61DC();
  MEMORY[0x1E0C80A78](v4);
  v7[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5EC48);
  sub_1CE007154();
  sub_1CE0B58F4();
  if (!v2)
    __asm { BR              X10 }
  return v7;
}

unint64_t sub_1CE007108()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5EC40;
  if (!qword_1EFA5EC40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F05C8);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA5EC40);
  }
  return result;
}

unint64_t sub_1CE007154()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5EC50;
  if (!qword_1EFA5EC50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5EC48);
    v2 = MEMORY[0x1E0D95E58];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96830], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5EC50);
  }
  return result;
}

unint64_t sub_1CE0071B0()
{
  return ServiceSubscription.dictionary()();
}

uint64_t MultiUserBeginActivityRequested.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MultiUserBeginActivityRequested.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MultiUserBeginActivityRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MultiUserBeginActivityRequested(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserBeginActivityRequested(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserBeginActivityRequested()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0073E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserBeginActivityRequested()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00742C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

unint64_t static StorefrontConstants.contentAvailableUserDefaultKey.getter()
{
  return 0xD000000000000010;
}

unint64_t static StorefrontConstants.storefrontIdentifierDefaultsKey.getter()
{
  return 0xD000000000000014;
}

ValueMetadata *type metadata accessor for StorefrontConstants()
{
  return &type metadata for StorefrontConstants;
}

BOOL StringProtocol.isEmptyOrWhiteSpace.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1CE0B3BCC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B3BC0();
  v4 = sub_1CE0B6914();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v7 = v4 & 0xFFFFFFFFFFFFLL;
  return v7 == 0;
}

BOOL Optional<A>.isEmptyOrWhiteSpace.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = sub_1CE0B3BCC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
    return 1;
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  sub_1CE0B3BC0();
  sub_1CDFC7620();
  v8 = sub_1CE0B6914();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  return v11 == 0;
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarks(mediaTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarkCount(mediaTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarks(referenceTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarkCount(referenceTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.filterBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryBookmarkCount(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.filterPlaylists(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylistCount(filter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylist(playlistIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylistCount()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.queryPlaylists(playlistIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.insertBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.insertPlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.removeBookmarks(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of BookmarkClientProtocol.deletePlaylist(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t RemoteParticipantUpdated.participant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoteParticipantUpdated.init(participant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static RemoteParticipantUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RemoteParticipantUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteParticipantUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0078EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE007934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantUpdated()
{
  uint64_t result;

  result = qword_1EFA5ED48;
  if (!qword_1EFA5ED48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE0079B0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v10 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v8;
  *v8 = v6;
  v8[1] = sub_1CDFACD3C;
  return v10(a6);
}

uint64_t ActivityRingsObserver.deinit()
{
  uint64_t v0;

  sub_1CE0B65B4();
  swift_release();
  return v0;
}

uint64_t ActivityRingsObserver.__deallocating_deinit()
{
  sub_1CE0B65B4();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityRingsObserver()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityRingsObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t DataProtectionClass.rawValue.getter(uint64_t result)
{
  return result;
}

unint64_t sub_1CE007AEC@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s13SeymourClient19DataProtectionClassO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1CE007B14(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

BOOL sub_1CE007B20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1CE007B34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1CE007B48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1CE007B5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unint64_t _s13SeymourClient19DataProtectionClassO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

unint64_t sub_1CE007B84()
{
  unint64_t result;

  result = qword_1EFA5EE28;
  if (!qword_1EFA5EE28)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for DataProtectionClass, &type metadata for DataProtectionClass);
    atomic_store(result, (unint64_t *)&qword_1EFA5EE28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DataProtectionClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CE007C14 + 4 * byte_1CE0BDFA5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CE007C48 + 4 * asc_1CE0BDFA0[v4]))();
}

uint64_t sub_1CE007C48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE007C50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE007C58);
  return result;
}

uint64_t sub_1CE007C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE007C6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CE007C70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE007C78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DataProtectionClass()
{
  return &type metadata for DataProtectionClass;
}

uint64_t dispatch thunk of EngagementClientProtocol.dispatchEngagementRequest(json:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of EngagementClientProtocol.fetchEngagementRedirectURL(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of EngagementClientProtocol.insertEngagementBadge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of EngagementClientProtocol.deleteEngagementBadge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of EngagementClientProtocol.deleteAllEngagementBadges()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EngagementClientProtocol.queryAllCompletedMarketingVideoIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EngagementClientProtocol.insertCompletedMarketingVideo(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of EngagementClientProtocol.deleteAllCompletedMarketingVideos()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t Collection.parallelForEach(parallelism:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CE007CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(_QWORD *)(v0 + 32);
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  swift_retain();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *(_QWORD *)v4 = v0;
  *(_QWORD *)(v4 + 8) = sub_1CE007DBC;
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 16);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v0 + 48);
  v7 = MEMORY[0x1E0DEE9C0] + 8;
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = v7;
  *(_QWORD *)(v4 + 32) = &unk_1EFA5EE40;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 24) = v6;
  return swift_task_switch();
}

uint64_t sub_1CE007DBC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE007E50()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE007E84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v5;
  *v5 = v3;
  v5[1] = sub_1CDFACD3C;
  return v7(a2);
}

uint64_t sub_1CE007EE4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE007F08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v5 = *(int **)(v2 + 32);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1CDFACD38;
  v9 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_1CDFACD3C;
  return v9(a2);
}

uint64_t Collection.parallelMap<A>(parallelism:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = v6;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE007FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  sub_1CE0B66E0();
  v1 = sub_1CE0B68CC();
  v3 = v2;
  *(_QWORD *)(v0 + 80) = v1;
  *(_QWORD *)(v0 + 88) = v2;
  v4 = sub_1CE0B68C0();
  if (!v4)
    return sub_1CE0B6AE8();
  v5 = v4;
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 56);
  v15 = *(_QWORD *)(v0 + 24);
  v14 = *(_OWORD *)(v0 + 32);
  v13 = sub_1CE0B66E0();
  swift_getTupleTypeMetadata2();
  v10 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v10;
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(v10 + 32) = v7;
  *(_QWORD *)(v10 + 40) = v6;
  *(_OWORD *)(v10 + 48) = v14;
  *(_QWORD *)(v10 + 64) = v15;
  *(_QWORD *)(v10 + 72) = v5;
  *(_QWORD *)(v10 + 80) = v13;
  *(_QWORD *)(v10 + 88) = v1;
  *(_QWORD *)(v10 + 96) = v3;
  sub_1CE0B64C4();
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v11;
  *v11 = v0;
  v11[1] = sub_1CE008174;
  return sub_1CE0B6BCC();
}

uint64_t sub_1CE008174()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE0081E0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1CE0B68B4();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1CE008220()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_1CE0B68B4();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE008274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8[15] = v14;
  v8[16] = v15;
  v8[13] = v12;
  v8[14] = v13;
  v8[11] = a8;
  v8[12] = v11;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  v8[5] = a2;
  v8[6] = a3;
  v8[4] = a1;
  v8[17] = swift_getTupleTypeMetadata2();
  v9 = sub_1CE0B68A8();
  v8[18] = v9;
  v8[19] = *(_QWORD *)(v9 - 8);
  v8[20] = swift_task_alloc();
  v8[21] = *(_QWORD *)(v14 - 8);
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  v8[24] = *(_QWORD *)(v15 + 8);
  v8[25] = sub_1CE0B6B24();
  v8[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE008380()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = v0[9];
  sub_1CE0B6B18();
  v2 = swift_allocBox();
  v0[27] = v2;
  sub_1CE0B63A4();
  result = sub_1CE0B6B00();
  if (v1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (v0[9])
    {
      v4 = 0;
      do
      {
        v5 = v0[9];
        ++v4;
        sub_1CE00890C(v2, v0[5], v0[7], v0[8], v0[14], v0[15], v0[16]);
      }
      while (v4 != v5);
    }
    v0[28] = 0;
    v6 = (_QWORD *)swift_task_alloc();
    v0[29] = (uint64_t)v6;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
    sub_1CE0B65FC();
    *v6 = v0;
    v6[1] = sub_1CE0084B4;
    return sub_1CE0B65E4();
  }
  return result;
}

uint64_t sub_1CE0084B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 240) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE008518()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v1 = (uint64_t *)v0[20];
  v2 = v0[17];
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t *, _QWORD))(v0[19] + 8))(v1, v0[18]);
    result = sub_1CE0B65C0();
    if ((result & 1) != 0)
    {
      sub_1CE0B6890();
      sub_1CE0B6524();
      sub_1CE00A234();
      swift_allocError();
      sub_1CE0B61F4();
      swift_willThrow();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v4 = (uint64_t (*)(void))v0[1];
      return v4();
    }
    v16 = v0[13];
    if (v0[11] == v16)
    {
      v17 = (uint64_t *)v0[4];
      v0[2] = v0[12];
      v0[3] = v16;
      v18 = sub_1CE0B68D8();
      MEMORY[0x1D17C0848](MEMORY[0x1E0DEB9E8], v18);
      v19 = sub_1CE0B64D0();
      swift_release();
      *v17 = v19;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v4 = (uint64_t (*)(void))v0[1];
      return v4();
    }
    goto LABEL_12;
  }
  v5 = v0[28];
  v7 = v0[22];
  v6 = v0[23];
  v8 = v0[21];
  v9 = v0[15];
  v10 = v0[10];
  v11 = *v1;
  v12 = (char *)v1 + *(int *)(v2 + 48);
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v13(v6, v12, v9);
  v14 = v10 + *(_QWORD *)(v8 + 72) * v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v6, v9);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v14, v7, v9);
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if ((sub_1CE0B65C0() & 1) == 0)
    sub_1CE00890C(v0[27], v0[5], v0[7], v0[8], v0[14], v0[15], v0[16]);
  (*(void (**)(_QWORD, _QWORD))(v0[21] + 8))(v0[23], v0[15]);
  v0[28] = v5 + 1;
  v15 = (_QWORD *)swift_task_alloc();
  v0[29] = v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B65FC();
  *v15 = v0;
  v15[1] = sub_1CE0084B4;
  return sub_1CE0B65E4();
}

uint64_t sub_1CE0087E8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE00884C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  v8 = v2[8];
  v9 = v2[9];
  v10 = v2[10];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1CDFACD38;
  return sub_1CE008274(a1, a2, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1CE00890C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v44 = a4;
  v45 = a6;
  v42 = a3;
  v47 = a2;
  v48 = a1;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = sub_1CE0B68A8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v38 - v15);
  v17 = swift_getTupleTypeMetadata2();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v38 - v19);
  v40 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v21 = *(_QWORD *)(v40 + 64);
  v22 = MEMORY[0x1E0C80A78](v18);
  v38 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v39 = (char *)&v38 - v23;
  v41 = a5;
  sub_1CE0B6B18();
  swift_projectBox();
  swift_beginAccess();
  sub_1CE0B6B0C();
  swift_endAccess();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) == 1)return (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  v25 = (char *)v16 + *(int *)(TupleTypeMetadata2 + 48);
  v26 = (char *)v20 + *(int *)(v17 + 48);
  *v20 = *v16;
  v27 = v40;
  v28 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v28(v26, v25, AssociatedTypeWitness);
  v48 = *v20;
  v29 = v39;
  v28(v39, (char *)v20 + *(int *)(v17 + 48), AssociatedTypeWitness);
  v30 = sub_1CE0B6560();
  v31 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v46, 1, 1, v30);
  v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v38, v29, AssociatedTypeWitness);
  v33 = (*(unsigned __int8 *)(v27 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v34 = (v21 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  v35 = (char *)swift_allocObject();
  *((_QWORD *)v35 + 2) = 0;
  *((_QWORD *)v35 + 3) = 0;
  v36 = v45;
  *((_QWORD *)v35 + 4) = v41;
  *((_QWORD *)v35 + 5) = v36;
  v37 = v42;
  *((_QWORD *)v35 + 6) = v43;
  *((_QWORD *)v35 + 7) = v37;
  *((_QWORD *)v35 + 8) = v44;
  v28(&v35[v33], v32, AssociatedTypeWitness);
  *(_QWORD *)&v35[v34] = v48;
  swift_retain();
  swift_getTupleTypeMetadata2();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B65FC();
  sub_1CE00B8D4(v31, (uint64_t)&unk_1EFA5EEA0, (uint64_t)v35);
  sub_1CDFBBC14(v31);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, AssociatedTypeWitness);
}

uint64_t sub_1CE008CAC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v7[3] = a7;
  v7[4] = v14;
  v7[2] = a1;
  v7[5] = *(_QWORD *)(v14 - 8);
  v10 = swift_task_alloc();
  v7[6] = v10;
  v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  v7[7] = v11;
  *v11 = v7;
  v11[1] = sub_1CE008D50;
  return v13(v10, a6);
}

uint64_t sub_1CE008D50()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE008DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char *v6;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD **)(v0 + 16);
  v6 = (char *)v5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *v5 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v6, v1, v3);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE008E3C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE008E70(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t Collection.parallelCompactMap<A>(parallelism:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v13;
  uint64_t v14;

  v7[4] = a5;
  v7[5] = a6;
  v7[3] = a4;
  v13 = (_QWORD *)swift_task_alloc();
  v7[6] = v13;
  v14 = sub_1CE0B68A8();
  v7[7] = v14;
  *v13 = v7;
  v13[1] = sub_1CE008F28;
  v13[8] = a6;
  v13[9] = v6;
  v13[6] = a4;
  v13[7] = v14;
  v13[4] = a2;
  v13[5] = a3;
  v13[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE008F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 64) = v1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v4 + 8))();
  *(_QWORD *)(v4 + 72) = a1;
  return swift_task_switch();
}

uint64_t sub_1CE008FA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 72);
  v2 = swift_task_alloc();
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = v3;
  v4 = sub_1CE0B64C4();
  MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v4);
  v5 = sub_1CE0B6398();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1CE00906C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B68A8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t Collection.parallelFilter(parallelism:predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CE0090E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;

  v1 = v0[5];
  v2 = v0[6];
  v4 = v0[3];
  v3 = v0[4];
  v5 = (_QWORD *)swift_allocObject();
  v0[8] = (uint64_t)v5;
  v5[2] = v1;
  v5[3] = v2;
  v5[4] = v4;
  v5[5] = v3;
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[9] = (uint64_t)v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *v6 = v0;
  v6[1] = sub_1CE0091AC;
  return Collection.parallelCompactMap<A>(parallelism:transform:)(v0[2], (uint64_t)&unk_1EFA5EE78, (uint64_t)v5, v0[5], AssociatedTypeWitness, v0[6]);
}

uint64_t sub_1CE0091AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1CE009234(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a2;
  v10 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v8 = (_QWORD *)swift_task_alloc();
  v6[6] = v8;
  *v8 = v6;
  v8[1] = sub_1CE00929C;
  return v10(a2);
}

uint64_t sub_1CE00929C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_BYTE *)(v4 + 56) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1CE00931C()
{
  uint64_t v0;
  int v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 56);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (v1 == 1)
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v3 + 16))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), AssociatedTypeWitness);
    v4 = 0;
  }
  else
  {
    v4 = 1;
  }
  (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(v3 + 56))(*(_QWORD *)(v0 + 16), v4, 1, AssociatedTypeWitness);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE0093B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t v7;
  __int128 v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);

  v6 = *(int **)(v2 + 32);
  v7 = swift_task_alloc();
  v8 = *(_OWORD *)(v2 + 16);
  *(_QWORD *)(v3 + 16) = v7;
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = sub_1CDFACD38;
  *(_OWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v11 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 48) = v9;
  *v9 = v7;
  v9[1] = sub_1CE00929C;
  return v11(a2);
}

uint64_t Collection.asyncCompactMap<A>(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  v6[6] = a4;
  v6[7] = v5;
  v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  v10 = sub_1CE0B68A8();
  v6[8] = v10;
  v6[9] = *(_QWORD *)(v10 - 8);
  v6[10] = swift_task_alloc();
  v6[11] = *(_QWORD *)(a4 - 8);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  v6[14] = *(_QWORD *)(a5 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6[15] = AssociatedTypeWitness;
  v6[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6[17] = swift_task_alloc();
  sub_1CE0B68A8();
  v6[18] = swift_task_alloc();
  v6[19] = *(_QWORD *)(a3 - 8);
  v6[20] = swift_task_alloc();
  v12 = swift_getAssociatedTypeWitness();
  v6[21] = v12;
  v6[22] = *(_QWORD *)(v12 - 8);
  v6[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE0095D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v10;
  _QWORD *v11;
  int *v12;

  v2 = *(_QWORD *)(v0 + 152);
  v1 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 16) = sub_1CE0B61E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  sub_1CE0B6380();
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 128);
  swift_getAssociatedConformanceWitness();
  sub_1CE0B68E4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    v8 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v8);
  }
  else
  {
    v10 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    v12 = (int *)((char *)v10 + *v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v11;
    *v11 = v0;
    v11[1] = sub_1CE00978C;
    return ((uint64_t (*)(_QWORD, _QWORD))v12)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_1CE00978C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1CE0097F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v17;
  _QWORD *v18;
  int *v19;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 120);
  if (v4 == 1)
  {
    v9 = *(_QWORD *)(v0 + 64);
    v8 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(v6 + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1, v9);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v1, v3);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v11, v10, v3);
    sub_1CE0B64C4();
    sub_1CE0B64B8();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v10, v3);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  v12 = *(_QWORD *)(v0 + 144);
  v13 = *(_QWORD *)(v0 + 120);
  v14 = *(_QWORD *)(v0 + 128);
  swift_getAssociatedConformanceWitness();
  sub_1CE0B68E4();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    v15 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v15);
  }
  else
  {
    v17 = *(int **)(v0 + 24);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 32))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 120));
    v19 = (int *)((char *)v17 + *v17);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v18;
    *v18 = v0;
    v18[1] = sub_1CE00978C;
    return ((uint64_t (*)(_QWORD, _QWORD))v19)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 136));
  }
}

uint64_t sub_1CE009A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 176);
  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Set.asyncFilter(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = *(_QWORD *)(a4 - 8);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  sub_1CE0B68A8();
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE009B80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);

  v1 = v0[10];
  v0[7] = sub_1CE0B6200();
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1CE0B6968();
    result = sub_1CE0B66BC();
    v1 = v0[2];
    v3 = v0[3];
    v5 = v0[4];
    v4 = v0[5];
    v6 = v0[6];
  }
  else
  {
    v7 = -1 << *(_BYTE *)(v0[10] + 32);
    v8 = v0[10];
    v10 = *(_QWORD *)(v8 + 56);
    v3 = v8 + 56;
    v9 = v10;
    v5 = ~v7;
    v11 = -v7;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v6 = v12 & v9;
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v0[18] = v1;
  v0[19] = v3;
  v13 = v0[13];
  v0[21] = v4;
  v0[22] = v6;
  v0[20] = v5;
  if (v1 < 0)
  {
    if (sub_1CE0B698C())
    {
      sub_1CE0B6C44();
      swift_unknownObjectRelease();
      goto LABEL_13;
    }
    v13 = v0[13];
    goto LABEL_27;
  }
  if (v6)
  {
    v14 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v15 = v14 | (v4 << 6);
LABEL_10:
    (*(void (**)(_QWORD, unint64_t, _QWORD))(v13 + 16))(v0[17], *(_QWORD *)(v1 + 48) + *(_QWORD *)(v13 + 72) * v15, v0[11]);
LABEL_13:
    v0[23] = v4;
    v0[24] = v6;
    v16 = v0[16];
    v17 = v0[17];
    v18 = v0[13];
    v19 = v0[11];
    v20 = (int *)v0[8];
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v17, 0, 1, v19);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v16, v17, v19);
    v30 = (uint64_t (*)(uint64_t))((char *)v20 + *v20);
    v21 = (_QWORD *)swift_task_alloc();
    v0[25] = v21;
    *v21 = v0;
    v21[1] = sub_1CE009E54;
    v22 = v0[16];
    v23 = v30;
    return v23(v22);
  }
  v24 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    v25 = (unint64_t)(v5 + 64) >> 6;
    if (v24 < v25)
    {
      v26 = *(_QWORD *)(v3 + 8 * v24);
      v27 = v4 + 1;
      if (v26)
      {
LABEL_17:
        v6 = (v26 - 1) & v26;
        v15 = __clz(__rbit64(v26)) + (v27 << 6);
        v4 = v27;
        goto LABEL_10;
      }
      v27 = v4 + 2;
      if (v4 + 2 < v25)
      {
        v26 = *(_QWORD *)(v3 + 8 * v27);
        if (v26)
          goto LABEL_17;
        v27 = v4 + 3;
        if (v4 + 3 < v25)
        {
          v26 = *(_QWORD *)(v3 + 8 * v27);
          if (v26)
            goto LABEL_17;
          v28 = v4 + 4;
          while (v25 != v28)
          {
            v26 = *(_QWORD *)(v3 + 8 * v28++);
            if (v26)
            {
              v27 = v28 - 1;
              goto LABEL_17;
            }
          }
        }
      }
    }
LABEL_27:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v13 + 56))(v0[17], 1, 1, v0[11]);
    sub_1CDFC879C();
    v29 = v0[7];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = (uint64_t (*)(uint64_t))v0[1];
    v22 = v29;
    return v23(v22);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE009E54(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 208) = v1;
  swift_task_dealloc();
  if (v1)
    swift_bridgeObjectRelease();
  else
    *(_BYTE *)(v4 + 216) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1CE009ED4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);

  if ((*(_BYTE *)(v0 + 216) & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 120);
    v2 = *(_QWORD *)(v0 + 104);
    v3 = *(_QWORD *)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v2 + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 128), v3);
    sub_1CE0B66C8();
    sub_1CE0B66B0();
    v4 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    v4(v1, v3);
  }
  else
  {
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 8);
  }
  result = ((uint64_t (*)(_QWORD, _QWORD))v4)(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 88));
  v6 = *(_QWORD *)(v0 + 184);
  v7 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 168) = v6;
  *(_QWORD *)(v0 + 176) = v7;
  v8 = *(_QWORD *)(v0 + 144);
  if (v8 < 0)
  {
    if (sub_1CE0B698C())
    {
      sub_1CE0B6C44();
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
    goto LABEL_24;
  }
  if (v7)
  {
    v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v10 = v9 | (v6 << 6);
LABEL_7:
    (*(void (**)(_QWORD, unint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v8 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 104) + 72) * v10, *(_QWORD *)(v0 + 88));
LABEL_10:
    *(_QWORD *)(v0 + 184) = v6;
    *(_QWORD *)(v0 + 192) = v7;
    v11 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 136);
    v13 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(int **)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v11, v12, v14);
    v26 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
    v16 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v16;
    *v16 = v0;
    v16[1] = sub_1CE009E54;
    v17 = *(_QWORD *)(v0 + 128);
    v18 = v26;
    return v18(v17);
  }
  v19 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    v20 = (unint64_t)(*(_QWORD *)(v0 + 160) + 64) >> 6;
    if (v19 < v20)
    {
      v21 = *(_QWORD *)(v0 + 152);
      v22 = *(_QWORD *)(v21 + 8 * v19);
      v23 = v6 + 1;
      if (v22)
      {
LABEL_14:
        v7 = (v22 - 1) & v22;
        v10 = __clz(__rbit64(v22)) + (v23 << 6);
        v6 = v23;
        goto LABEL_7;
      }
      v23 = v6 + 2;
      if (v6 + 2 < v20)
      {
        v22 = *(_QWORD *)(v21 + 8 * v23);
        if (v22)
          goto LABEL_14;
        v23 = v6 + 3;
        if (v6 + 3 < v20)
        {
          v22 = *(_QWORD *)(v21 + 8 * v23);
          if (v22)
            goto LABEL_14;
          v24 = v6 + 4;
          while (v20 != v24)
          {
            v22 = *(_QWORD *)(v21 + 8 * v24++);
            if (v22)
            {
              v23 = v24 - 1;
              goto LABEL_14;
            }
          }
        }
      }
    }
LABEL_24:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 56))(*(_QWORD *)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 88));
    sub_1CDFC879C();
    v25 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
    v17 = v25;
    return v18(v17);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE00A18C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 88));
  sub_1CDFC879C();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1CE00A234()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5EE90;
  if (!qword_1EFA5EE90)
  {
    v1 = sub_1CE0B6524();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DF05E8], v1);
    atomic_store(result, &qword_1EFA5EE90);
  }
  return result;
}

uint64_t sub_1CE00A27C()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1CE00A320(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v3 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (int *)v1[7];
  v8 = v1[8];
  v9 = (uint64_t)v1 + v4;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1CDFACD3C;
  return sub_1CE008CAC(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t static OpenLinkConstants.scheme.getter()
{
  return 0x617373656E746966;
}

uint64_t static OpenLinkConstants.encodedURLQueryItemKey.getter()
{
  return 0x556465646F636E65;
}

uint64_t static OpenLinkConstants.multiUserHost.getter()
{
  return 0x65735569746C756DLL;
}

unint64_t static OpenLinkConstants.workoutIdentifierKey.getter()
{
  return 0xD000000000000011;
}

unint64_t static OpenLinkConstants.sessionIdentifierKey.getter()
{
  return 0xD000000000000011;
}

uint64_t static OpenLinkConstants.sessionHealthKitActivityTypeKey.getter()
{
  return 0x7974697669746361;
}

uint64_t static OpenLinkConstants.sessionGoalTypeKey.getter()
{
  return 0x657079546C616F67;
}

unint64_t static OpenLinkConstants.sessionPresentConfigurationKey.getter()
{
  return 0xD000000000000014;
}

ValueMetadata *type metadata accessor for OpenLinkConstants()
{
  return &type metadata for OpenLinkConstants;
}

uint64_t MultiUserSessionIdentitiesUpdated.sessionIdentities.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B56F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MultiUserSessionIdentitiesUpdated.init(sessionIdentities:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MultiUserSessionIdentitiesUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MultiUserSessionIdentitiesUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B56F0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MultiUserSessionIdentitiesUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiUserSessionIdentitiesUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00A70C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserSessionIdentitiesUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00A754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B56F0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t MediaMomentEnded.mediaMoment.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MediaMomentEnded.init(mediaMoment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MediaMomentEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for MediaMomentEnded(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for MediaMomentEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaMomentEnded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00A9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MediaMomentEnded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00A9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B40AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for MediaMomentEnded()
{
  uint64_t result;

  result = qword_1EFA5EF90;
  if (!qword_1EFA5EF90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE00AA68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B40AC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static ProgressDisplayPreference.default()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = sub_1CE0B5B4C();
  MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0D95D00]);
  return sub_1CE0B54EC();
}

uint64_t ActivityMoveMode.init(_:)(uint64_t a1)
{
  return sub_1CE00AB98(a1) & 1;
}

uint64_t ActivityMoveMode.healthKitRawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 2;
  else
    return 1;
}

uint64_t ActivityFitnessMode.init(_:)(uint64_t a1)
{
  return sub_1CE00AC6C(a1) & 1;
}

uint64_t sub_1CE00AB98(uint64_t a1)
{
  uint64_t result;

  if (a1 == 1)
    return 0;
  if (a1 == 2)
    return 1;
  sub_1CE0B6A04();
  sub_1CE0B62F0();
  type metadata accessor for HKActivityMoveMode(0);
  sub_1CE0B6AA0();
  result = sub_1CE0B6AE8();
  __break(1u);
  return result;
}

uint64_t sub_1CE00AC6C(uint64_t a1)
{
  uint64_t result;

  if ((unint64_t)(a1 - 1) < 3)
    return ((_BYTE)a1 - 1) & 1;
  sub_1CE0B6A04();
  sub_1CE0B62F0();
  type metadata accessor for HKFitnessMode(0);
  sub_1CE0B6AA0();
  result = sub_1CE0B6AE8();
  __break(1u);
  return result;
}

void static ExerciseRingCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for ExerciseRingCompleted()
{
  return &type metadata for ExerciseRingCompleted;
}

uint64_t storeEnumTagSinglePayload for HealthStoreError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE00ADA4 + 4 * byte_1CE0BE1E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE00ADD8 + 4 * asc_1CE0BE1E0[v4]))();
}

uint64_t sub_1CE00ADD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE00ADE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE00ADE8);
  return result;
}

uint64_t sub_1CE00ADF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE00ADFCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE00AE00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE00AE08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HealthStoreError()
{
  return &type metadata for HealthStoreError;
}

unint64_t sub_1CE00AE28()
{
  unint64_t result;

  result = qword_1EFA5EFC8;
  if (!qword_1EFA5EFC8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BE244, &type metadata for HealthStoreError);
    atomic_store(result, (unint64_t *)&qword_1EFA5EFC8);
  }
  return result;
}

uint64_t sub_1CE00AE7C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFA5EFD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ContentRestrictionObserver.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ContentRestrictionObserver.init(eventHub:)(a1, a2);
  return v4;
}

_QWORD *ContentRestrictionObserver.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  void (*v12)(_QWORD *__return_ptr, ValueMetadata *, uint64_t, uint64_t (*)(), uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD v14[5];

  v3 = v2;
  v3[6] = sub_1CDFCD204();
  v3[2] = a1;
  v3[3] = a2;
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  swift_unknownObjectRetain();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  v3[4] = v6;
  type metadata accessor for SubscriptionToken();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = v9;
  swift_unknownObjectWeakAssign();
  v3[5] = v8;
  ObjectType = swift_getObjectType();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = *(void (**)(_QWORD *__return_ptr, ValueMetadata *, uint64_t, uint64_t (*)(), uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 24);
  swift_retain();
  v12(v14, &type metadata for ManagedProfileEffectiveSettingsChanged, v8, sub_1CE00B554, v11, &type metadata for ManagedProfileEffectiveSettingsChanged, &protocol witness table for ManagedProfileEffectiveSettingsChanged, ObjectType, a2);
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
  swift_release();
  return v3;
}

uint64_t sub_1CE00B064()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v0 = sub_1CE0B6080();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED8F1870);
  v1 = sub_1CE0B6068();
  v2 = sub_1CE0B6734();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1CDFAA000, v1, v2, "[ContentRestrictionObserver] Recieved update that content restrictions were changed.", v3, 2u);
    MEMORY[0x1D17C092C](v3, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6._countAndFlagsBits = 0xD000000000000083;
    v6._object = (void *)0x80000001CE0C92A0;
    v7._object = (void *)0x80000001CE0C9330;
    v7._countAndFlagsBits = 0xD00000000000001DLL;
    Logger.trace(file:function:)(v6, v7);
    v8 = *(_QWORD *)(v5 + 32);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
    sub_1CE00B1C8(v5);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE00B1C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  os_log_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint8_t *v24;
  uint8_t *v25;
  int v26;
  uint64_t v27;
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = sub_1CE0B5888();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s13SeymourClient26ContentRestrictionObserverC012queryAllowedC7RatingsShy0A4Core0C6RatingOGyF_0();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1CE04DA18(v7, v6);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v9 = sub_1CE0B6080();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED8F1870);
    swift_bridgeObjectRetain_n();
    v10 = sub_1CE0B6068();
    v11 = sub_1CE0B6734();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v28 = v10;
      v13 = swift_slowAlloc();
      v26 = v12;
      v14 = (uint8_t *)v13;
      v27 = swift_slowAlloc();
      v30 = v27;
      *(_DWORD *)v14 = 136446210;
      v24 = v14 + 4;
      v25 = v14;
      sub_1CDFB3EE4();
      swift_bridgeObjectRetain();
      v15 = sub_1CE0B6698();
      v17 = v16;
      swift_bridgeObjectRelease();
      v29 = sub_1CDFC7270(v15, v17, &v30);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v18 = v28;
      v19 = v25;
      _os_log_impl(&dword_1CDFAA000, v28, (os_log_type_t)v26, "[ContentRestrictionObserver] Allowed content ratings changed, updating to %{public}s", v25, 0xCu);
      v20 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v20, -1, -1);
      MEMORY[0x1D17C092C](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v21 = *(_QWORD *)(a1 + 24);
    ObjectType = swift_getObjectType();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CE0B587C();
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v21 + 8))(v5, v2, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v21);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(_QWORD *)(a1 + 48) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1CDFCD3CC(v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t ContentRestrictionObserver.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ContentRestrictionObserver.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1CE00B530()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE00B554()
{
  return sub_1CE00B064();
}

uint64_t type metadata accessor for ContentRestrictionObserver()
{
  return objc_opt_self();
}

uint64_t method lookup function for ContentRestrictionObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentRestrictionObserver.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t RemoteParticipantConnectionRejected.rejection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoteParticipantConnectionRejected.init(rejection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static RemoteParticipantConnectionRejected.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for RemoteParticipantConnectionRejected(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for RemoteParticipantConnectionRejected(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantConnectionRejected()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00B7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantConnectionRejected()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00B7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5B7C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RemoteParticipantConnectionRejected()
{
  uint64_t result;

  result = qword_1ED8F0A20;
  if (!qword_1ED8F0A20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE00B864()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5B7C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of SiriClientProtocol.evaluateStartWorkoutRequest(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1CE00B8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE00C2CC(a1, (uint64_t)v9);
  v10 = sub_1CE0B6560();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1CDFBBC14((uint64_t)v9);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_1CE0B64DC();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1CE0B6554();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t withTimeout<A>(seconds:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 48) = a4;
  *(_QWORD *)(v5 + 32) = a2;
  *(double *)(v5 + 24) = a5;
  *(_QWORD *)(v5 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_1CE00BA7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v3;
  v4 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v3 + 16) = v1;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = v2;
  sub_1CE008E70(v1, v1);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v5;
  *v5 = v0;
  v5[1] = sub_1CDFACDC8;
  return sub_1CE0B6BCC();
}

uint64_t sub_1CE00BB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 56) = a5;
  *(double *)(v6 + 48) = a6;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = sub_1CE0B68A8();
  *(_QWORD *)(v6 + 64) = v7;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE00BBC4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;

  v1 = v0[11];
  v2 = v0[7];
  v3 = v0[6];
  v5 = v0[4];
  v4 = v0[5];
  v6 = sub_1CE0B6560();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v1, 1, 1, v6);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  v8[5] = v5;
  v8[6] = v4;
  swift_retain();
  v0[12] = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B65FC();
  sub_1CE00B8D4(v1, (uint64_t)&unk_1EFA5F020, (uint64_t)v8);
  sub_1CDFBBC14(v1);
  v7(v1, 1, 1, v6);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = v3;
  sub_1CE00B8D4(v1, (uint64_t)&unk_1EFA5F030, (uint64_t)v9);
  sub_1CDFBBC14(v1);
  v10 = (_QWORD *)swift_task_alloc();
  v0[13] = v10;
  *v10 = v0;
  v10[1] = sub_1CE00BD4C;
  return sub_1CE0B65E4();
}

uint64_t sub_1CE00BD4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE00BDB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(v1, *(_QWORD *)(v0 + 64));
    return sub_1CE0B6AE8();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 16), v1, v2);
    sub_1CE0B65F0();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CE00BED0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE00BF0C(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  _QWORD *v10;

  v6 = *((_QWORD *)v2 + 2);
  v7 = *((_QWORD *)v2 + 3);
  v8 = *((_QWORD *)v2 + 4);
  v9 = v2[5];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1CDFACD3C;
  return sub_1CE00BB30(a1, a2, v7, v8, v6, v9);
}

uint64_t sub_1CE00BF98(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1CDFACD3C;
  return v8(a1);
}

uint64_t sub_1CE00BFFC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00C028(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *(int **)(v1 + 40);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CDFACD38;
  v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v6 = (_QWORD *)swift_task_alloc();
  v5[2] = v6;
  *v6 = v5;
  v6[1] = sub_1CDFACD3C;
  return v8(a1);
}

uint64_t sub_1CE00C0B0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch();
}

void sub_1CE00C0C8()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v2;
    *v2 = v0;
    v2[1] = sub_1CE00C164;
    sub_1CE0B65D8();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1CE00C164()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1CE00C1D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1CE0B65CC();
  if (!v1)
  {
    sub_1CE0B6524();
    sub_1CE00A234();
    swift_allocError();
    sub_1CE0B61F4();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE00C248()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE00C26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1CE00C2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for PromiseConstants()
{
  return &type metadata for PromiseConstants;
}

uint64_t AssetBundleProgressUpdated.bundleProgress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4E44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AssetBundleProgressUpdated.init(bundleProgress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static AssetBundleProgressUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0x3FC3333333333333;
  *(_BYTE *)(a1 + 8) = 0;
}

void sub_1CE00C3B0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0x3FC3333333333333;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t initializeBufferWithCopyOfBuffer for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for AssetBundleProgressUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4E44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AssetBundleProgressUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetBundleProgressUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00C554(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AssetBundleProgressUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE00C59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1CE00C5DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4E44();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CE00C644(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x616C696176616E75;
  else
    v3 = 0x6C62616C69617661;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xEB00000000656C62;
  if ((a2 & 1) != 0)
    v5 = 0x616C696176616E75;
  else
    v5 = 0x6C62616C69617661;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000656C62;
  else
    v6 = 0xE900000000000065;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1CE00C6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = UserDefaultsKeys.rawValue.getter();
  v2 = v1;
  if (v0 == UserDefaultsKeys.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1CE00C788(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEE00646572697571;
  v3 = 0x65526E6F69746361;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6C62616863616572;
    else
      v5 = 0x6168636165726E75;
    if (v4 == 1)
      v6 = 0xE900000000000065;
    else
      v6 = 0xEB00000000656C62;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x65526E6F69746361;
  v6 = 0xEE00646572697571;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6C62616863616572;
    else
      v3 = 0x6168636165726E75;
    if (v7 == 1)
      v2 = 0xE900000000000065;
    else
      v2 = 0xEB00000000656C62;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1CE0B6C50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t NetworkEvaluator.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_allocObject();
  v4 = sub_1CDFB799C(a1, a2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1CE00C920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t Strong;
  void *v16;
  id v17;
  _QWORD *v18;
  void *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v6 = sub_1CE0B6140();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B6158();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v22 = v7;
    v16 = *(void **)(Strong + 48);
    swift_retain();
    v17 = v16;
    swift_release();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a3;
    v18[3] = sub_1CE001B6C;
    v18[4] = v14;
    aBlock[4] = sub_1CE00D524;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_3;
    v19 = _Block_copy(aBlock);
    swift_retain();
    sub_1CE0B614C();
    v23 = MEMORY[0x1E0DEE9D8];
    sub_1CDFB1900((unint64_t *)&qword_1ED8F1570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFB7C5C((unint64_t *)&qword_1ED8F1590, (uint64_t *)&unk_1ED8F1580);
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v13, v9, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v22 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    swift_retain();
  }
  return swift_release();
}

uint64_t sub_1CE00CB88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  void (*v11)(uint64_t (*)(), uint64_t);
  uint64_t v12;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CDFC1560((uint64_t)v8);
    swift_release();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    *(_QWORD *)(v10 + 24) = a3;
    swift_retain();
    v11 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_1CE00D530;
    *(_QWORD *)(v12 + 24) = v10;
    swift_retain();
    v11(sub_1CDFF4410, v12);
    swift_release();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_1CE00CCDC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1CE00CCFC(unsigned __int8 *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t Strong;
  char *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  int v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  char v22;
  _BOOL4 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _BOOL4 v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40[3];
  int v41;
  unsigned __int8 v42;

  v5 = sub_1CE0B617C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  v38 = a3;
  if (!Strong)
  {
    v23 = 0;
    goto LABEL_10;
  }
  v10 = (char *)*(id *)(Strong + 32);
  swift_release();
  v11 = *(void **)&v10[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *v8 = v11;
  v12 = *MEMORY[0x1E0DEF740];
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v6 + 104);
  v13(v8, v12, v5);
  v14 = v11;
  LOBYTE(v11) = sub_1CE0B6194();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8);
  result = v15(v8, v5);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  v17 = *(unsigned __int8 *)(*(_QWORD *)&v10[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_coreTelephonyObserver]
                           + OBJC_IVAR____TtC13SeymourClient21CoreTelephonyObserver_isCellularDataEnabled);

  if (v17 != 1 || (swift_beginAccess(), (v18 = swift_weakLoadStrong()) == 0))
  {
    v23 = 0;
    goto LABEL_8;
  }
  v19 = (char *)*(id *)(v18 + 32);
  swift_release();
  v20 = *(void **)&v19[OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue];
  *v8 = v20;
  v13(v8, v12, v5);
  v21 = v20;
  v22 = sub_1CE0B6194();
  result = v15(v8, v5);
  if ((v22 & 1) == 0)
  {
LABEL_34:
    __break(1u);
    return result;
  }
  sub_1CDFC3FD0(v40);

  v23 = LOBYTE(v40[0]) == 0;
LABEL_8:
  a3 = v38;
LABEL_10:
  if (qword_1ED8F1890 != -1)
    swift_once();
  v24 = sub_1CE0B6080();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED8F1870);
  v25 = sub_1CE0B6068();
  v26 = sub_1CE0B6734();
  v27 = HIBYTE(a3);
  if (os_log_type_enabled(v25, v26))
  {
    v37 = v23;
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v40[0] = v29;
    *(_DWORD *)v28 = 136446722;
    v30 = 0x6C62616863616572;
    if (v27 == 1)
    {
      v31 = 0xE900000000000065;
    }
    else
    {
      v30 = 0x6168636165726E75;
      v31 = 0xEB00000000656C62;
    }
    if (v27)
      v32 = v30;
    else
      v32 = 0x65526E6F69746361;
    if (v27)
      v33 = v31;
    else
      v33 = 0xEE00646572697571;
    v39 = sub_1CDFC7270(v32, v33, v40);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2082;
    if (v41)
      v34 = 0x616C696176616E75;
    else
      v34 = 0x6C62616C69617661;
    if (v41)
      v35 = 0xEB00000000656C62;
    else
      v35 = 0xE900000000000065;
    v39 = sub_1CDFC7270(v34, v35, v40);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 1026;
    v23 = v37;
    LODWORD(v39) = v37;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v25, v26, "Evaluating network conditions.\nCurrent network status: %{public}s\nInterface availability: %{public}s\nCellular availability: %{BOOL,public}d", (uint8_t *)v28, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v29, -1, -1);
    MEMORY[0x1D17C092C](v28, -1, -1);

    a3 = v38;
  }
  else
  {

  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    LOWORD(v39) = a3 & 0x1FF;
    BYTE2(v39) = BYTE2(a3) & 1;
    BYTE3(v39) = v27;
    v42 = v41;
    sub_1CDFC40F0((uint64_t)&v39, &v42, v23);
    return swift_release();
  }
  return result;
}

uint64_t NetworkEvaluator.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t NetworkEvaluator.queryNetworkConditions()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  v3 = *(unsigned __int8 *)(v0 + 64);
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t sub_1CE00D218()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 40);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v2 + 16));
  v3 = *(unsigned __int8 *)(v1 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return v3;
}

uint64_t sub_1CE00D250()
{
  return sub_1CDFC466C("Airplane mode changed, updating cached network conditions", (uint64_t)&unk_1E8B65520, (uint64_t)sub_1CDFF4410);
}

uint64_t sub_1CE00D26C(char *a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;

  v5 = *a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  *(_BYTE *)(v6 + 32) = v5;
  swift_retain();
  return sub_1CE0B5C00();
}

void sub_1CE00D2E8(void (*a1)(void **), uint64_t a2, void (*a3)(void **__return_ptr, char *), uint64_t a4, char *a5)
{
  void *v6;
  char v7;
  void *v8;
  char v9;

  v7 = *a5;
  a3(&v8, &v7);
  v6 = v8;
  v9 = 0;
  a1(&v8);
  sub_1CDFC2DF4(v6, 0);
}

uint64_t sub_1CE00D368()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE00D38C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CE00C920(a1, a2, v2);
}

uint64_t sub_1CE00D394()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1CE00D3B4()
{
  return objectdestroy_5Tm(&qword_1ED8F1070);
}

uint64_t method lookup function for NetworkEvaluator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NetworkEvaluator.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of NetworkEvaluator.activateOnQueue()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1CE00D3E4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00D408(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  if (*(_BYTE *)(v1 + 26))
    v2 = 0x10000;
  else
    v2 = 0;
  v3 = v2 | (*(unsigned __int8 *)(v1 + 27) << 24);
  if (*(_BYTE *)(v1 + 25))
    v4 = 256;
  else
    v4 = 0;
  return sub_1CE00CCFC(a1, *(_QWORD *)(v1 + 16), v3 | v4 | *(unsigned __int8 *)(v1 + 24));
}

uint64_t sub_1CE00D454()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00D478(char *a1)
{
  uint64_t v1;

  return sub_1CE00D26C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE00D480()
{
  return objectdestroy_5Tm(&qword_1EFA5E540);
}

uint64_t sub_1CE00D48C(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA5E540, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1D18);
}

uint64_t sub_1CE00D4A0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CE00D4C4(void (*a1)(void **), uint64_t a2)
{
  uint64_t v2;

  sub_1CE00D2E8(a1, a2, *(void (**)(void **__return_ptr, char *))(v2 + 16), *(_QWORD *)(v2 + 24), (char *)(v2 + 32));
}

uint64_t sub_1CE00D4D0()
{
  return objectdestroy_5Tm(&qword_1EFA61960);
}

uint64_t sub_1CE00D4DC(uint64_t a1, uint64_t a2)
{
  return sub_1CDFE18C8(a1, a2, &qword_1EFA61960, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD, _QWORD))sub_1CDFF1CE0);
}

uint64_t sub_1CE00D4F8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00D524()
{
  uint64_t *v0;

  return sub_1CE00CB88(v0[2], v0[3], v0[4]);
}

uint64_t sub_1CE00D530(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t static Promise.parallel(queue:maxConcurrent:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;

  sub_1CE0B5C6C();
  v8 = sub_1CE0B64C4();
  v9 = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF38], v8);
  return sub_1CDFB1BA4(a1, a2, a3, v8, v9, a4);
}

uint64_t static Promise.parallel<A>(queue:maxConcurrent:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  return sub_1CDFB1BA4(a1, a2, a3, a4, *(_QWORD *)(a5 + 8), a6);
}

void sub_1CE00D604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  dispatch_group_t v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;
  void (*v32)(uint64_t (*)(uint64_t), uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  dispatch_group_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  dispatch_group_t v58;
  char *v59;
  uint64_t v60;
  _QWORD aBlock[6];

  v55 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F06D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v59 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CE0B6140();
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  MEMORY[0x1E0C80A78](v15);
  v52 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CE0B6158();
  v50 = *(_QWORD *)(v17 - 8);
  v51 = v17;
  MEMORY[0x1E0C80A78](v17);
  v49 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  v48 = v19;
  swift_retain();
  v58 = dispatch_group_create();
  type metadata accessor for UnfairLock();
  v20 = swift_allocObject();
  v21 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v20 + 16) = v21;
  *v21 = 0;
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = 0;
  v56 = swift_allocObject();
  *(_QWORD *)(v56 + 16) = MEMORY[0x1E0DEE9D8];
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a3;
  *(_QWORD *)(v22 + 24) = 0;
  if (a4 < 0)
  {
LABEL_13:
    __break(1u);
  }
  else
  {
    v23 = v22;
    swift_bridgeObjectRetain();
    if (a4)
    {
      swift_beginAccess();
      while (1)
      {
        os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 16));
        v24 = *(_QWORD *)(v23 + 16);
        v25 = *(_QWORD *)(v23 + 24);
        v26 = *(_QWORD *)(v24 + 16);
        if (v25 == v26)
        {
          v27 = 1;
        }
        else
        {
          if (v25 >= v26)
          {
            __break(1u);
            goto LABEL_13;
          }
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, v24+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v25, v12);
          v27 = 0;
          *(_QWORD *)(v23 + 24) = v25 + 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v27, 1, v12);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1CDFB2168((uint64_t)v11);
          if (!--a4)
            break;
        }
        else
        {
          (*(void (**)(void))(v13 + 32))();
          v28 = v58;
          dispatch_group_enter(v58);
          v29 = (_QWORD *)swift_allocObject();
          v30 = v56;
          v29[2] = v20;
          v29[3] = v30;
          v29[4] = v57;
          v29[5] = v23;
          v29[6] = v28;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          v31 = v28;
          v32 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1CE0B5C54();
          v33 = a4;
          v34 = v13;
          v35 = v12;
          v36 = v23;
          v37 = v11;
          v38 = v20;
          v39 = swift_allocObject();
          *(_QWORD *)(v39 + 16) = sub_1CE00F9A8;
          *(_QWORD *)(v39 + 24) = v29;
          swift_retain();
          v32(sub_1CDFF3920, v39);
          swift_release();
          swift_release();
          v20 = v38;
          v11 = v37;
          v23 = v36;
          v12 = v35;
          v13 = v34;
          swift_release();
          (*(void (**)(char *, uint64_t))(v34 + 8))(v59, v12);
          a4 = v33 - 1;
          if (v33 == 1)
            break;
        }
      }
    }
    v40 = (_QWORD *)swift_allocObject();
    v41 = v56;
    v40[2] = v57;
    v40[3] = sub_1CE001C90;
    v40[4] = v48;
    v40[5] = v41;
    aBlock[4] = sub_1CE00F998;
    aBlock[5] = v40;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_4;
    v42 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v43 = v49;
    sub_1CE0B614C();
    v60 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC1B50();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    v44 = v52;
    v45 = v54;
    sub_1CE0B6944();
    v46 = v58;
    sub_1CE0B6758();
    _Block_release(v42);

    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v45);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v43, v51);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1CE00DB4C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  NSObject *v21;
  uint64_t v22;
  _DWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD *v29;
  _QWORD *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  const void *v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  _QWORD aBlock[6];

  v38 = a5;
  v45 = a3;
  v14 = sub_1CE0B6140();
  v41 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  MEMORY[0x1E0C80A78](v14);
  v40 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1CE0B6158();
  v37 = *(_QWORD *)(v39 - 8);
  v16 = MEMORY[0x1E0C80A78](v39);
  v36 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](v16);
  v44 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a6;
  v20[3] = a7;
  v20[4] = a8;
  v20[5] = a1;
  v35 = v20;
  v20[6] = a2;
  swift_retain();
  v21 = dispatch_group_create();
  type metadata accessor for UnfairLock();
  v22 = swift_allocObject();
  v23 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v22 + 16) = v23;
  *v23 = 0;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_1CE0B6488();
  swift_getAssociatedTypeWitness();
  v26 = swift_allocBox();
  v43 = v27;
  (*(void (**)(char *, void *, uint64_t))(v18 + 16))(v44, v45, a7);
  result = sub_1CE0B6380();
  if (a4 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a4; --a4)
      sub_1CE00E144(v22, v26, v21, v25, v24, a6, a7, a8);
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = a6;
    v29[3] = a7;
    v29[4] = a8;
    v29[5] = v24;
    v30 = v35;
    v29[6] = sub_1CE00FAA8;
    v29[7] = v30;
    v29[8] = v25;
    aBlock[4] = sub_1CE00FC98;
    aBlock[5] = v29;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_94;
    v45 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v31 = v36;
    sub_1CE0B614C();
    v46 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC1B50();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    v32 = v40;
    v33 = v42;
    sub_1CE0B6944();
    v34 = v45;
    sub_1CE0B6758();
    _Block_release(v34);

    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v39);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE00DEE4(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  NSObject *v22;
  void (*v23)(uint64_t (*)(), uint64_t);
  uint64_t v24;
  uint64_t v25;

  v25 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F06D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
  v16 = 1;
  result = swift_beginAccess();
  v18 = *(_QWORD *)(a2 + 16);
  v19 = *(_QWORD *)(a2 + 24);
  v20 = *(_QWORD *)(v18 + 16);
  if (v19 != v20)
  {
    if (v19 >= v20)
    {
      __break(1u);
      return result;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v19, v12);
    v16 = 0;
    *(_QWORD *)(a2 + 24) = v19 + 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v16, 1, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    return sub_1CDFB2168((uint64_t)v11);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  dispatch_group_enter(a3);
  v21 = (_QWORD *)swift_allocObject();
  v21[2] = a1;
  v21[3] = a4;
  v21[4] = v25;
  v21[5] = a2;
  v21[6] = a3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v22 = a3;
  v23 = (void (*)(uint64_t (*)(), uint64_t))sub_1CE0B5C54();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1CE00F9A8;
  *(_QWORD *)(v24 + 24) = v21;
  swift_retain();
  v23(sub_1CDFF4410, v24);
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1CE00E144(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  dispatch_group_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  dispatch_group_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v36 = a4;
  v37 = a5;
  v38 = a3;
  v13 = sub_1CE0B5C6C();
  v14 = sub_1CE0B68A8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v31 - v17;
  v19 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v16);
  v31 = (char *)&v31 - v20;
  v33 = a2;
  v21 = swift_projectBox();
  v32 = a6;
  v39 = a6;
  v40 = a7;
  v34 = a7;
  v35 = a8;
  v41 = a8;
  v42 = v21;
  sub_1CDFC1778((void (*)(void))sub_1CE00F9D4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v13) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  v23 = v31;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v31, v18, v13);
  v24 = v38;
  dispatch_group_enter(v38);
  v25 = (_QWORD *)swift_allocObject();
  v26 = v33;
  v27 = v34;
  v25[2] = v32;
  v25[3] = v27;
  v28 = v36;
  v25[4] = v35;
  v25[5] = a1;
  v29 = v37;
  v25[6] = v28;
  v25[7] = v29;
  v25[8] = v26;
  v25[9] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v30 = v24;
  sub_1CE0B5C48();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v23, v13);
}

uint64_t sub_1CE00E32C()
{
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1CE0B68E4();
  return swift_endAccess();
}

void sub_1CE00E3EC(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  char v13;
  char **v14;
  void **v15;

  v13 = a2 & 1;
  v14 = (char **)(a4 + 16);
  v15 = (void **)(a5 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a3 + 16));
  sub_1CE00E558(a1, v13, v14, v15);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a3 + 16));
  sub_1CE00DEE4(a3, a6, a7, a4, a5);
  dispatch_group_leave(a7);
}

void sub_1CE00E494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  void **v17;

  v16 = a3 + 16;
  v17 = (void **)(a4 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a2 + 16));
  sub_1CE00E654(a1, v16, v17, a7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a2 + 16));
  sub_1CE00E144(a2, a5, a6, a3, a4, a7, a8, a9);
  dispatch_group_leave(a6);
}

void sub_1CE00E558(void *a1, char a2, char **a3, void **a4)
{
  char *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v12;
  id v13;

  if ((a2 & 1) != 0)
  {
    swift_beginAccess();
    v12 = *a4;
    *a4 = a1;
    v13 = a1;

  }
  else
  {
    swift_beginAccess();
    v5 = *a3;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a3 = v5;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v5 = sub_1CDFC83AC(0, *((_QWORD *)v5 + 2) + 1, 1, v5);
      *a3 = v5;
    }
    v8 = *((_QWORD *)v5 + 2);
    v7 = *((_QWORD *)v5 + 3);
    v9 = v8 + 1;
    if (v8 >= v7 >> 1)
    {
      v5 = sub_1CDFC83AC((char *)(v7 > 1), v8 + 1, 1, v5);
      *a3 = v5;
    }
    *((_QWORD *)v5 + 2) = v9;
    swift_endAccess();
  }
}

void sub_1CE00E654(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v7 = *(_QWORD *)(a4 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v19 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v13 = sub_1CE0B6DA0();
  MEMORY[0x1E0C80A78](v13);
  v15 = (void **)((char *)&v19 - v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v19 - v14, a1, v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *v15;
    swift_beginAccess();
    v18 = *a3;
    *a3 = v17;

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v7 + 32))(v12, v15, a4);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, a4);
    swift_beginAccess();
    sub_1CE0B64C4();
    sub_1CE0B64B8();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, a4);
  }
}

void sub_1CE00E800(uint64_t a1, void (*a2)(void *, uint64_t))
{
  void *v4;
  id v5;
  uint64_t v6;

  swift_beginAccess();
  v4 = *(void **)(a1 + 16);
  if (v4)
  {
    v5 = v4;
    a2(v4, 1);

  }
  else
  {
    swift_beginAccess();
    v6 = swift_bridgeObjectRetain();
    a2((void *)v6, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1CE00E8A8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  _QWORD v19[2];

  v19[1] = a6;
  v11 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v14 = swift_allocBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a4);
  sub_1CE0B6380();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1CE0B61E8();
  sub_1CE0B66E0();
  sub_1CE0B64C4();
  sub_1CE0B6464();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a5;
  v16[5] = v14;
  v16[6] = v15;
  v16[7] = a1;
  v17 = a1;
  return sub_1CE0B5C00();
}

uint64_t sub_1CE00EA1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v16;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a1;
  v16[6] = a2;
  swift_retain();
  sub_1CE00EACC(a3, (void (*)(uint64_t, _QWORD))sub_1CE00FAA8, (uint64_t)v16, a4, a5, a6, a7, a8);
  return swift_release();
}

uint64_t sub_1CE00EACC(uint64_t a1, void (*a2)(uint64_t, _QWORD), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  void (*v24)(_QWORD, _QWORD);
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void (*v34)(uint64_t, _QWORD);
  uint64_t v35;

  v32 = a5;
  v33 = a4;
  v34 = a2;
  v35 = a3;
  v29 = a6;
  v11 = sub_1CE0B5C6C();
  v28 = sub_1CE0B68A8();
  v12 = *(_QWORD *)(v28 - 8);
  v13 = MEMORY[0x1E0C80A78](v28);
  v15 = (char *)&v27 - v14;
  v16 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v27 - v17;
  v30 = a8;
  swift_getAssociatedTypeWitness();
  v31 = a1;
  swift_projectBox();
  swift_beginAccess();
  swift_getAssociatedConformanceWitness();
  sub_1CE0B68E4();
  swift_endAccess();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v11) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v28);
    swift_beginAccess();
    v19 = swift_bridgeObjectRetain();
    v34(v19, 0);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, v11);
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = v29;
    v21[3] = a7;
    v22 = v31;
    v21[4] = v30;
    v23 = v32;
    v21[5] = v33;
    v21[6] = v23;
    v24 = v34;
    v25 = v35;
    v21[7] = v22;
    v21[8] = v24;
    v21[9] = v25;
    swift_retain();
    v26 = v23;
    swift_retain();
    swift_retain();
    sub_1CE0B5C48();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v11);
  }
}

void sub_1CE00ED1C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  id *v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(id, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD aBlock[6];

  v40 = a8;
  v41 = a4;
  v47 = a5;
  v48 = a6;
  v42 = a2;
  v43 = a3;
  v11 = sub_1CE0B6140();
  v46 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CE0B6158();
  v44 = *(_QWORD *)(v14 - 8);
  v45 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a7 - 8);
  v19 = MEMORY[0x1E0C80A78](v15);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v38 - v22;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v24 = sub_1CE0B6DA0();
  MEMORY[0x1E0C80A78](v24);
  v26 = (id *)((char *)&v38 - v25);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))((char *)&v38 - v25, a1, v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v28 = *v26;
    v29 = *v26;
    v47(v28, 1);

  }
  else
  {
    v39 = v11;
    v30 = v42;
    (*(void (**)(char *, id *, uint64_t))(v18 + 32))(v23, v26, a7);
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v21, v23, a7);
    swift_beginAccess();
    sub_1CE0B64C4();
    sub_1CE0B64B8();
    swift_endAccess();
    v31 = (_QWORD *)swift_allocObject();
    v32 = v40;
    v33 = v41;
    v31[2] = a7;
    v31[3] = v32;
    v31[4] = a9;
    v31[5] = v33;
    v34 = v48;
    v31[6] = v47;
    v31[7] = v34;
    v35 = v43;
    v31[8] = v30;
    v31[9] = v35;
    aBlock[4] = sub_1CE00FB64;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CDFB33D0;
    aBlock[3] = &block_descriptor_78;
    v36 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    v35;
    sub_1CE0B614C();
    v49 = MEMORY[0x1E0DEE9D8];
    sub_1CDFC1B50();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
    sub_1CDFC20A8();
    v37 = v39;
    sub_1CE0B6944();
    MEMORY[0x1D17BFB04](0, v17, v13, v36);
    _Block_release(v36);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v37);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v45);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v23, a7);
    swift_release();
  }
}

uint64_t static Promise<>.parallel(queue:maxConcurrent:_:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t *);
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF730);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - v11;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a2;
  v13[4] = a1;
  swift_bridgeObjectRetain();
  v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0038);
  sub_1CE0B5C00();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = nullsub_1;
  *(_QWORD *)(v15 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v10, v6);
  v19 = (uint64_t (**)(uint64_t *))(v18 + v17);
  *v19 = sub_1CE00F7C0;
  v19[1] = (uint64_t (*)(uint64_t *))v15;
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

uint64_t static Promise<>.parallel<A>(queue:maxConcurrent:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t *);
  _QWORD v21[2];

  v21[1] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF730);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - v14;
  sub_1CDFB1BA4(a1, a2, MEMORY[0x1E0DEE9C0] + 8, a3, *(_QWORD *)(a4 + 8), (uint64_t)v21 - v14);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = nullsub_1;
  *(_QWORD *)(v16 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, v13, v9);
  v19 = (uint64_t (**)(uint64_t *))(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v19 = sub_1CE00FCCC;
  v19[1] = (uint64_t (*)(uint64_t *))v16;
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t static Promise<>.serial<A>(queue:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t *);
  _QWORD v21[2];

  v21[1] = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF730);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v21 - v14;
  sub_1CE00E8A8(a1, a2, MEMORY[0x1E0DEE9C0] + 8, a3, a4, (uint64_t)v21 - v14);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = nullsub_1;
  *(_QWORD *)(v16 + 24) = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v17, v13, v9);
  v19 = (uint64_t (**)(uint64_t *))(v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v19 = sub_1CE00FCCC;
  v19[1] = (uint64_t (*)(uint64_t *))v16;
  sub_1CE0B5C00();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t Promise<>.all<A>(queue:maxConcurrent:_:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v14;
  id v15;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = *(_QWORD *)(a5 + 16);
  v14[3] = a6;
  v14[4] = a7;
  v14[5] = a1;
  v14[6] = a2;
  v14[7] = a3;
  v14[8] = a4;
  sub_1CE0B64C4();
  v15 = a1;
  swift_retain();
  sub_1CE0B5C3C();
  return swift_release();
}

uint64_t sub_1CE00F610@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[10];

  v19[2] = a5;
  v19[3] = a6;
  v19[4] = a7;
  v19[5] = a3;
  v19[6] = a4;
  v14 = sub_1CE0B5C6C();
  v19[8] = sub_1CE05FBC8((void (*)(char *, char *))sub_1CE00F8A4, (uint64_t)v19, a5, v14, MEMORY[0x1E0DEDCE8], a7, MEMORY[0x1E0DEDD18], v15);
  v16 = sub_1CE0B64C4();
  v17 = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF50], v16);
  sub_1CDFB1BA4(a1, a2, a6, v16, *(_QWORD *)(v17 + 8), a8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE00F704(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE00F788()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1CE00F7B4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_1CE00D604(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1CE00F7C0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CE00F704(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE00F7D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00F7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_1ED8EF730) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CDFF1D34(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1CE00F864()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00F890@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CE00F610(*(void **)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1CE00F8A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_1CE00F8CC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE00F8F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CE00F91C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE00F940()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CE00F964()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CE00F998()
{
  uint64_t v0;

  sub_1CE00E800(*(_QWORD *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24));
}

void sub_1CE00F9B4(uint64_t a1)
{
  uint64_t v1;

  sub_1CE00E3EC(*(void **)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(NSObject **)(v1 + 48));
}

uint64_t sub_1CE00F9D4()
{
  return sub_1CE00E32C();
}

uint64_t sub_1CE00F9F0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CE00FA34(uint64_t a1)
{
  return sub_1CE00FAF4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CE00E494);
}

uint64_t sub_1CE00FA40()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CE00FA74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CE00EA1C(a1, a2, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(void **)(v2 + 56), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1CE00FA84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00FAAC()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE00FAE8(uint64_t a1)
{
  return sub_1CE00FAF4(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CE00ED1C);
}

uint64_t sub_1CE00FAF4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[7], v2[8], v2[9], v2[2], v2[3], v2[4]);
}

uint64_t sub_1CE00FB28()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CE00FB64()
{
  _QWORD *v0;

  return sub_1CE00EACC(v0[5], v0[6], v0[7], v0[8], v0[9], v0[2], v0[3], v0[4]);
}

uint64_t sub_1CE00FB78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t))(v1 + 8))(v0 + v2);

  return swift_deallocObject();
}

uint64_t sub_1CE00FBEC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = v2[3];
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1CE00DB4C(a1, a2, (char *)v2 + v5, *(uint64_t *)((char *)v2 + v6), *(uint64_t *)((char *)v2 + ((v6 + 15) & 0xFFFFFFFFFFFFF8)), v2[2], v3, v2[4]);
}

uint64_t sub_1CE00FC2C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 40);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1CE00FC64()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CE00FC98()
{
  uint64_t v0;

  sub_1CE00E800(*(_QWORD *)(v0 + 40), *(void (**)(void *, uint64_t))(v0 + 48));
}

_QWORD *SessionPreferenceClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for SessionPreferenceClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *SessionPreferenceClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE010348(a1, v3, ObjectType, a2, a3);
}

uint64_t SessionPreferenceClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t SessionPreferenceClient.queryAudioSelection()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 232;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E0D929A0], MEMORY[0x1E0D92988], MEMORY[0x1E0D92990], ObjectType, v1);
}

uint64_t SessionPreferenceClient.queryBurnBarDisplayPreference(for:)(uint64_t a1)
{
  return sub_1CE00FF10(a1, 221, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94338], MEMORY[0x1E0D94328], MEMORY[0x1E0D94330]);
}

uint64_t SessionPreferenceClient.queryMetricsDisplayPreference(for:)(uint64_t a1)
{
  return sub_1CE00FF10(a1, 222, (uint64_t (*)(_QWORD))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944C0], MEMORY[0x1E0D944C8]);
}

uint64_t SessionPreferenceClient.queryProgressDisplayPreference(for:)(uint64_t a1)
{
  return sub_1CE00FF10(a1, 223, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94940], MEMORY[0x1E0D94930], MEMORY[0x1E0D94938]);
}

uint64_t sub_1CE00FF10(uint64_t a1, __int16 a2, uint64_t (*a3)(_QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v12;
  void (*v13)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD v16[2];
  __int16 v17;

  v10 = *(_QWORD *)(v5 + 24);
  ObjectType = swift_getObjectType();
  v17 = a2;
  v16[0] = sub_1CE0B5B40();
  v16[1] = v12;
  v13 = *(void (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 32);
  v14 = a3(0);
  v13(&v17, v16, MEMORY[0x1E0DEA968], v14, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], a4, a5, ObjectType, v10);
  return swift_bridgeObjectRelease();
}

uint64_t SessionPreferenceClient.updateAudioFocusSelection(_:)(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t ObjectType;
  char v6;
  __int16 v7;

  v2 = a1 & 1;
  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v7 = 233;
  v6 = v2;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 16))(&v7, &v6, MEMORY[0x1E0D929A0], MEMORY[0x1E0D92988], MEMORY[0x1E0D92990], ObjectType, v3);
}

uint64_t SessionPreferenceClient.updateBurnBarDisplayPreference(_:)(uint64_t a1)
{
  return sub_1CDFF166C(a1, 227, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94338], MEMORY[0x1E0D94328], MEMORY[0x1E0D94330]);
}

uint64_t SessionPreferenceClient.updateMetricsDisplayPreference(_:)(uint64_t a1)
{
  return sub_1CDFF166C(a1, 228, (uint64_t (*)(_QWORD))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944C0], MEMORY[0x1E0D944C8]);
}

uint64_t SessionPreferenceClient.updateProgressDisplayPreference(_:)(uint64_t a1)
{
  return sub_1CDFF166C(a1, 229, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94940], MEMORY[0x1E0D94930], MEMORY[0x1E0D94938]);
}

uint64_t sub_1CE0100C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 232;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v1 + 24))(&v4, MEMORY[0x1E0D929A0], MEMORY[0x1E0D92988], MEMORY[0x1E0D92990], ObjectType, v1);
}

uint64_t sub_1CE010138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE010198(a1, a2, a3, 221, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94338], MEMORY[0x1E0D94328], MEMORY[0x1E0D94330]);
}

uint64_t sub_1CE010158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE010198(a1, a2, a3, 222, (uint64_t (*)(_QWORD))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944C0], MEMORY[0x1E0D944C8]);
}

uint64_t sub_1CE010178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE010198(a1, a2, a3, 223, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94940], MEMORY[0x1E0D94930], MEMORY[0x1E0D94938]);
}

uint64_t sub_1CE010198(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t (*a5)(_QWORD), uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void (*v15)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD v18[2];
  __int16 v19;

  v12 = *(_QWORD *)(*(_QWORD *)v7 + 24);
  ObjectType = swift_getObjectType();
  v19 = a4;
  v18[0] = sub_1CE0B5B40();
  v18[1] = v14;
  v15 = *(void (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 32);
  v16 = a5(0);
  v15(&v19, v18, MEMORY[0x1E0DEA968], v16, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], a6, a7, ObjectType, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE010268(char a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t ObjectType;
  char v6;
  __int16 v7;

  v2 = a1 & 1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  ObjectType = swift_getObjectType();
  v7 = 233;
  v6 = v2;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v3 + 16))(&v7, &v6, MEMORY[0x1E0D929A0], MEMORY[0x1E0D92988], MEMORY[0x1E0D92990], ObjectType, v3);
}

uint64_t sub_1CE0102E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFF199C(a1, a2, a3, 227, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94338], MEMORY[0x1E0D94328], MEMORY[0x1E0D94330]);
}

uint64_t sub_1CE010308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFF199C(a1, a2, a3, 228, (uint64_t (*)(_QWORD))MEMORY[0x1E0D944D0], MEMORY[0x1E0D944C0], MEMORY[0x1E0D944C8]);
}

uint64_t sub_1CE010328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CDFF199C(a1, a2, a3, 229, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94940], MEMORY[0x1E0D94930], MEMORY[0x1E0D94938]);
}

_QWORD *sub_1CE010348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for SessionPreferenceClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t method lookup function for SessionPreferenceClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SessionPreferenceClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1CE0103A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1CE0B66E0();
  if (!v18)
    return sub_1CE0B6488();
  v19 = v18;
  v25 = v15;
  v39 = sub_1CE0B61E8();
  v32 = sub_1CE0B6A94();
  sub_1CE0B6A70();
  v36 = v17;
  result = sub_1CE0B66D4();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1CE0B66F8();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1CE0B6A7C();
      sub_1CE0B66EC();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t RemoteBrowsingTransformable.applyingRemoteParticipant(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t Array<A>.applyingRemoteBrowsingEnvironment(_:)(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[8];

  v9[7] = a2;
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = a1;
  v5 = sub_1CE0B64C4();
  v6 = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF50], v5);
  return sub_1CE0103A0((void (*)(char *, char *))sub_1CE010724, (uint64_t)v9, v5, a3, MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
}

uint64_t sub_1CE010724()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[3] + 8))(v0[4], v0[2]);
}

uint64_t sub_1CE01075C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t result;

  result = Array<A>.applyingRemoteBrowsingEnvironment(_:)(a1, *v4, *(char **)(a2 + 16), *(_QWORD *)(a3 - 8));
  *a4 = result;
  return result;
}

uint64_t dispatch thunk of RemoteBrowsingTransformable.applyingRemoteBrowsingEnvironment(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RemoteBrowsingTransformable.applyingRemoteParticipant(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t OptInPrivacyPreferenceUpdated.init(preference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t OptInPrivacyPreferenceUpdated.preference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5198();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static OptInPrivacyPreferenceUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for OptInPrivacyPreferenceUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5198();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for OptInPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptInPrivacyPreferenceUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0109B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OptInPrivacyPreferenceUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0109F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5198();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for OptInPrivacyPreferenceUpdated()
{
  uint64_t result;

  result = qword_1ED8F01A8;
  if (!qword_1ED8F01A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE010A74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5198();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static AppIdleOccurred.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AppIdleOccurred()
{
  return &type metadata for AppIdleOccurred;
}

BOOL static NetworkMonitorError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkMonitorError.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t NetworkMonitorError.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

unint64_t sub_1CE010B84()
{
  unint64_t result;

  result = qword_1EFA5F248[0];
  if (!qword_1EFA5F248[0])
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for NetworkMonitorError, &type metadata for NetworkMonitorError);
    atomic_store(result, qword_1EFA5F248);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NetworkMonitorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE010C14 + 4 * byte_1CE0BE595[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE010C48 + 4 * asc_1CE0BE590[v4]))();
}

uint64_t sub_1CE010C48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE010C50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE010C58);
  return result;
}

uint64_t sub_1CE010C64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE010C6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE010C70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE010C78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkMonitorError()
{
  return &type metadata for NetworkMonitorError;
}

uint64_t RemoteParticipantDeviceType.init(modelString:)()
{
  id v0;
  int v1;
  void *v3;
  id v4;

  v0 = (id)sub_1CE0B626C();
  v1 = objc_msgSend(v0, "hasPrefix:", CFSTR("iPhone"));

  if (v1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v3 = (void *)sub_1CE0B626C();
    swift_bridgeObjectRelease();
    v4 = v3;
    LODWORD(v3) = objc_msgSend(v4, "hasPrefix:", CFSTR("Watch"));

    if ((_DWORD)v3)
      return 1;
    else
      return 4;
  }
}

void static RemoteBrowsingGuestVerificationCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RemoteBrowsingGuestVerificationCompleted()
{
  return &type metadata for RemoteBrowsingGuestVerificationCompleted;
}

uint64_t AchievementEnvironmentCacheUpdated.cache.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AchievementEnvironmentCacheUpdated.init(cache:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static AchievementEnvironmentCacheUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for AchievementEnvironmentCacheUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AchievementEnvironmentCacheUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AchievementEnvironmentCacheUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE010F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AchievementEnvironmentCacheUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE010FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B57A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AchievementEnvironmentCacheUpdated()
{
  uint64_t result;

  result = qword_1ED8F01C8;
  if (!qword_1ED8F01C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE011030()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B57A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void static CurrentDevice.identifier()()
{
  id v0;
  void *v1;
  id v2;

  v0 = (id)MobileGestalt_get_current_device();
  if (v0)
  {
    v1 = v0;
    v2 = (id)MobileGestalt_copy_uniqueDeviceID_obj();

    if (v2)
    {
      sub_1CE0B6278();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id static CurrentDevice.hasExtendedColorDisplay()()
{
  id result;
  void *v1;
  uint64_t hasExtendedColorDisplay;

  result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    v1 = result;
    hasExtendedColorDisplay = MobileGestalt_get_hasExtendedColorDisplay();

    return (id)hasExtendedColorDisplay;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static CurrentDevice.isFamilySetup()()
{
  return 0;
}

ValueMetadata *type metadata accessor for CurrentDevice()
{
  return &type metadata for CurrentDevice;
}

uint64_t FitnessModeObserver.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_DWORD *)(result + 32) = 0;
  *(_BYTE *)(result + 36) = 1;
  return result;
}

uint64_t FitnessModeObserver.deinit()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 36) & 1) == 0)
    objc_msgSend((id)objc_opt_self(), sel_cancelToken_, *(unsigned int *)(v0 + 32));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1CE0111F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE011218()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    if (qword_1ED8F1890 != -1)
      swift_once();
    v2 = sub_1CE0B6080();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
    v3._countAndFlagsBits = 0xD000000000000073;
    v3._object = (void *)0x80000001CE0C94B0;
    v4._object = (void *)0x80000001CE0C9530;
    v4._countAndFlagsBits = 0xD00000000000001ALL;
    Logger.trace(file:function:)(v3, v4);
    v5 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8))(ObjectType, &type metadata for FitnessModeUpdated, &protocol witness table for FitnessModeUpdated, ObjectType, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CE011314()
{
  return sub_1CE011218();
}

SeymourClient::FitnessMode __swiftcall FitnessModeObserver.queryMode()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_fitnessMode);

    LOBYTE(v0) = _s13SeymourClient11FitnessModeO09healthKitD0ACSo09HKFitnessD0V_tcfC_0((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return (char)v0;
}

void sub_1CE011378()
{
  FitnessModeObserver.activate()();
}

id sub_1CE011398()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_fitnessMode);

    return (id)_s13SeymourClient11FitnessModeO09healthKitD0ACSo09HKFitnessD0V_tcfC_0((uint64_t)v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of FitnessModeObserving.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FitnessModeObserving.queryMode()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for FitnessModeObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FitnessModeObserver.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FitnessModeObserver.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FitnessModeObserver.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_1CE011478(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CE011494(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FitnessModeObserver.State()
{
  return &type metadata for FitnessModeObserver.State;
}

BOOL static GatedResourceError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GatedResourceError.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t GatedResourceError.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

unint64_t sub_1CE01154C()
{
  unint64_t result;

  result = qword_1EFA5F340;
  if (!qword_1EFA5F340)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for GatedResourceError, &type metadata for GatedResourceError);
    atomic_store(result, (unint64_t *)&qword_1EFA5F340);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GatedResourceError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CE0115DC + 4 * byte_1CE0BE785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CE011610 + 4 * asc_1CE0BE780[v4]))();
}

uint64_t sub_1CE011610(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE011618(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE011620);
  return result;
}

uint64_t sub_1CE01162C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE011634);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CE011638(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE011640(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GatedResourceError()
{
  return &type metadata for GatedResourceError;
}

uint64_t sub_1CE01165C(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1ED8F0B08, &qword_1ED8F16C0, (uint64_t)qword_1ED8F2070);
}

uint64_t static Trace.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1ED8F0B28, (uint64_t)qword_1ED8F0B08, a1);
}

uint64_t sub_1CE01169C(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1ED8F0AE0, qword_1ED8F0C58, (uint64_t)qword_1ED8F1EA0);
}

uint64_t static Trace.asset.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1ED8F0B00, (uint64_t)qword_1ED8F0AE0, a1);
}

uint64_t sub_1CE0116DC(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1EFA5F348, &qword_1EFA5D588, (uint64_t)qword_1EFA6C130);
}

uint64_t static Trace.catalog.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(qword_1EFA5D458, (uint64_t)qword_1EFA5F348, a1);
}

uint64_t sub_1CE01171C(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1ED8F0B30, &qword_1ED8F0C80, (uint64_t)qword_1ED8F1FB0);
}

uint64_t sub_1CE011740(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1EFA5F360, &qword_1EFA5D5C0, (uint64_t)qword_1EFA6C1C0);
}

uint64_t static Trace.personalization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1EFA5D468, (uint64_t)qword_1EFA5F360, a1);
}

uint64_t sub_1CE011780(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1EFA5F378, qword_1EFA5D5C8, (uint64_t)qword_1EFA6C1D8);
}

uint64_t static Trace.playback.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1EFA5D470, (uint64_t)qword_1EFA5F378, a1);
}

uint64_t sub_1CE0117C0(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1EFA5F390, &qword_1ED8F0E30, (uint64_t)qword_1ED8F1FE0);
}

uint64_t static Trace.recommendation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1EFA5D478, (uint64_t)qword_1EFA5F390, a1);
}

uint64_t sub_1CE011800(uint64_t a1)
{
  return sub_1CE011824(a1, qword_1EFA5F3A8, &qword_1ED8F0C48, (uint64_t)qword_1ED8F1F50);
}

uint64_t sub_1CE011824(uint64_t a1, uint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7 = type metadata accessor for ActivityTracer();
  __swift_allocate_value_buffer(v7, a2);
  v8 = __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v9 = type metadata accessor for LogSystem();
  v10 = __swift_project_value_buffer(v9, a4) + *(int *)(v9 + 24);
  return sub_1CDFAFBAC(v10, v8);
}

uint64_t static Trace.remoteBrowsing.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1CDFAFB60(&qword_1EFA5D480, (uint64_t)qword_1EFA5F3A8, a1);
}

ValueMetadata *type metadata accessor for Trace()
{
  return &type metadata for Trace;
}

uint64_t Meditation.applyingTimestampOffset(_:)()
{
  sub_1CE0B3EC0();
  return sub_1CE0B3ECC();
}

uint64_t sub_1CE011928()
{
  sub_1CE0B3EC0();
  return sub_1CE0B3ECC();
}

unint64_t static AppBundleConstants.phoneBundleName.getter()
{
  return 0xD000000000000011;
}

unint64_t static AppBundleConstants.tabletBundleName.getter()
{
  return 0xD000000000000011;
}

unint64_t static AppBundleConstants.tvBundleName.getter()
{
  return 0xD000000000000011;
}

unint64_t static AppBundleConstants.watchBundleName.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t static AppBundleConstants.meditationBundleName.getter()
{
  return 0x6C7070612E6D6F63;
}

ValueMetadata *type metadata accessor for AppBundleConstants()
{
  return &type metadata for AppBundleConstants;
}

uint64_t DistanceMetricUpdated.distanceMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4850();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DistanceMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DistanceMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for DistanceMetricUpdated()
{
  uint64_t result;

  result = qword_1EFA5F418;
  if (!qword_1EFA5F418)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DistanceMetricUpdated.init(distanceMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B4850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for DistanceMetricUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static DistanceMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for DistanceMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B4850();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DistanceMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4850();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B4850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B4850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B4850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DistanceMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B4850();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DistanceMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE011DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B4850();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DistanceMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE011E50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B4850();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CE011ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4850();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AssetBundleUpdated.bundle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B3F44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t AssetBundleUpdated.init(bundle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static AssetBundleUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for AssetBundleUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B3F44();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for AssetBundleUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for AssetBundleUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE01214C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AssetBundleUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE012194(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3F44();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t RemoteBrowsingEnvironment.applyingJournal(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD v91[8];
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 v151;
  uint64_t v152;
  uint64_t v153;

  v105 = a1;
  v93 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F478);
  MEMORY[0x1E0C80A78](v3);
  v115 = (uint64_t)v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F0);
  MEMORY[0x1E0C80A78](v5);
  v128 = (uint64_t)v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F480);
  MEMORY[0x1E0C80A78](v7);
  v127 = (uint64_t)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F488);
  MEMORY[0x1E0C80A78](v9);
  v126 = (uint64_t)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F490);
  MEMORY[0x1E0C80A78](v11);
  v125 = (uint64_t)v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F498);
  MEMORY[0x1E0C80A78](v13);
  v129 = (uint64_t)v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8F8);
  MEMORY[0x1E0C80A78](v15);
  v124 = (uint64_t)v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4A0);
  MEMORY[0x1E0C80A78](v17);
  v123 = (uint64_t)v91 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D900);
  MEMORY[0x1E0C80A78](v19);
  v122 = (uint64_t)v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4A8);
  MEMORY[0x1E0C80A78](v21);
  v121 = (uint64_t)v91 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B0);
  MEMORY[0x1E0C80A78](v23);
  v130 = (uint64_t)v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_1CE0B5A8C();
  v113 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v26 = (char *)v91 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1CE0B5198();
  v112 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v91 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4B8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v91 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = sub_1CE0B5348();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v34 = (char *)v91 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v35);
  v37 = (char *)v91 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1CE0B5AF8();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v39 = (char *)v91 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)v91 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4C0);
  MEMORY[0x1E0C80A78](v43);
  v45 = (char *)v91 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = sub_1CE0B57A4();
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v116 = (char *)v91 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B5510();
  v153 = sub_1CE0B5648();
  v118 = v45;
  v47 = v105;
  sub_1CE0B5558();
  v152 = sub_1CE0B563C();
  v119 = v42;
  v48 = (uint64_t)v34;
  v49 = v129;
  sub_1CE0B551C();
  sub_1CE0B55B8();
  v149 = sub_1CE0B55AC();
  v150 = v50;
  v151 = v51 & 1;
  v148 = sub_1CE0B5678();
  v147 = sub_1CE0B557C();
  v146 = sub_1CE0B5600();
  v145 = sub_1CE0B5588();
  v144 = sub_1CE0B5660();
  v143 = sub_1CE0B5594();
  v117 = v37;
  v52 = v27;
  sub_1CE0B55DC();
  sub_1CE0B5540();
  v120 = v32;
  sub_1CE0B560C();
  sub_1CE0B5528();
  sub_1CE0B5654();
  v142 = sub_1CE0B5684();
  v141 = sub_1CE0B5618();
  v140 = sub_1CE0B55C4();
  v139 = sub_1CE0B5564();
  v138 = sub_1CE0B5534();
  v137 = sub_1CE0B5570();
  sub_1CE0B55D0();
  v136 = sub_1CE0B554C();
  v135 = sub_1CE0B5624();
  v53 = *(_QWORD *)(v47 + 16);
  v94 = v27;
  v134 = v48;
  v133 = v26;
  v132 = v39;
  if (v53)
  {
    v104 = v2;
    v54 = *(_QWORD *)(type metadata accessor for RemoteBrowsingJournalEntry() - 8);
    v55 = v47 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
    v131 = *(_QWORD *)(v54 + 72);
    swift_bridgeObjectRetain();
    v56 = v130;
    v57 = (uint64_t)v120;
    v58 = (uint64_t)v119;
    v59 = (uint64_t)v117;
    v60 = (uint64_t)v116;
    do
    {
      sub_1CE0131E0(v55, v60, (uint64_t)&v153, v58, (uint64_t)v132, (uint64_t)&v148, (uint64_t)&v146, (uint64_t)&v145, (uint64_t)&v144, v59, v134, v57, (uint64_t)v29, (uint64_t)v133, (uint64_t)&v142, (uint64_t)&v141, (uint64_t)&v139, (uint64_t)&v135, (uint64_t)&v137,
        v56,
        (uint64_t)&v136,
        (uint64_t)&v152);
      v55 += v131;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease();
    v49 = v129;
    v52 = v94;
    v39 = v132;
    v48 = v134;
  }
  v61 = v106;
  v62 = *(void (**)(uint64_t, char *, uint64_t))(v106 + 16);
  v92 = v29;
  v63 = v121;
  v64 = v107;
  v62(v121, v116, v107);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56))(v63, 0, 1, v64);
  v131 = v153;
  v105 = v152;
  v99 = v149;
  v98 = v150;
  v97 = v151;
  v104 = v148;
  v65 = sub_1CE0B53FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v122, 1, 1, v65);
  v103 = v147;
  v66 = sub_1CE0B5720();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v123, 1, 1, v66);
  v102 = v144;
  v101 = v145;
  v100 = v146;
  v67 = sub_1CE0B5444();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v124, 1, 1, v67);
  v96 = v143;
  v68 = v108;
  v69 = v109;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16))(v49, v48, v109);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v68 + 56))(v49, 0, 1, v69);
  v70 = v112;
  v71 = v125;
  (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v125, v29, v52);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v52);
  v72 = v110;
  v73 = v126;
  v74 = v39;
  v75 = v111;
  (*(void (**)(uint64_t, char *, uint64_t))(v110 + 16))(v126, v74, v111);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v73, 0, 1, v75);
  v76 = v113;
  v77 = v127;
  v78 = v114;
  (*(void (**)(void))(v113 + 16))();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v76 + 56))(v77, 0, 1, v78);
  v79 = v141;
  v80 = v142;
  v81 = sub_1CE0B54F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v128, 1, 1, v81);
  v83 = v139;
  v82 = v140;
  v85 = v137;
  v84 = v138;
  v86 = v136;
  v87 = sub_1CE0B4DA8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v115, 1, 1, v87);
  v95 = v135;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CDFF38E8(v99, v98, v97);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v91[1] = v80;
  swift_bridgeObjectRetain();
  v91[2] = v79;
  swift_bridgeObjectRetain();
  v91[3] = v82;
  swift_bridgeObjectRetain();
  v91[4] = v83;
  swift_bridgeObjectRetain();
  v91[5] = v84;
  swift_bridgeObjectRetain();
  v91[6] = v85;
  swift_bridgeObjectRetain();
  v91[7] = v86;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v82) = v97;
  v88 = v98;
  v89 = v99;
  sub_1CE0B566C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CDFF37CC(v89, v88, v82);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CDFB13F8(v115, &qword_1EFA5F478);
  sub_1CDFB13F8(v128, &qword_1EFA5D8F0);
  sub_1CDFB13F8(v127, &qword_1EFA5F480);
  sub_1CDFB13F8(v126, &qword_1EFA5F488);
  sub_1CDFB13F8(v125, &qword_1EFA5F490);
  sub_1CDFB13F8(v129, &qword_1EFA5F498);
  sub_1CDFB13F8(v124, &qword_1EFA5D8F8);
  sub_1CDFB13F8(v123, &qword_1EFA5F4A0);
  sub_1CDFB13F8(v122, &qword_1EFA5D900);
  sub_1CDFB13F8(v121, &qword_1EFA5F4A8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CDFB13F8(v130, &qword_1EFA5F4B0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v133, v114);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v92, v94);
  sub_1CDFB13F8((uint64_t)v120, &qword_1EFA5F4B8);
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v134, v109);
  sub_1CDFB13F8((uint64_t)v117, &qword_1EFA5D8C0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CDFF37CC(v149, v150, v151);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v132, v111);
  sub_1CDFB13F8((uint64_t)v119, &qword_1EFA5D940);
  swift_bridgeObjectRelease();
  sub_1CDFB13F8((uint64_t)v118, &qword_1EFA5F4C0);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v116, v107);
}

void sub_1CE0131E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t (*v135)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  _QWORD v143[6];
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;

  v203 = a8;
  v202 = a7;
  v201 = a6;
  v248 = a5;
  v234 = a4;
  v223 = a3;
  v227 = a2;
  v261 = (char *)a1;
  v235 = a22;
  v254 = a21;
  v225 = a20;
  v230 = a19;
  v200 = a18;
  v228 = a17;
  v222 = a16;
  v229 = a15;
  v199 = a14;
  v198 = a13;
  v232 = a12;
  v197 = a11;
  v233 = a10;
  v221 = a9;
  v262 = *MEMORY[0x1E0C80C00];
  v183 = sub_1CE0B54F8();
  v182 = *(_QWORD *)(v183 - 8);
  MEMORY[0x1E0C80A78](v183);
  v181 = (char *)v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = sub_1CE0B5444();
  v179 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v178 = (char *)v143 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_1CE0B53FC();
  v176 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v175 = (char *)v143 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4C8);
  MEMORY[0x1E0C80A78](v25);
  v172 = (char *)v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4D0);
  MEMORY[0x1E0C80A78](v27);
  v171 = (char *)v143 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_1CE0B5180();
  v231 = *(_QWORD *)(v224 - 8);
  v29 = MEMORY[0x1E0C80A78](v224);
  v147 = (char *)v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v174 = (char *)v143 - v31;
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4D8);
  MEMORY[0x1E0C80A78](v170);
  v189 = (char *)v143 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  v34 = MEMORY[0x1E0C80A78](v33);
  v247 = (char *)v143 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v34);
  v250 = (char *)v143 - v37;
  MEMORY[0x1E0C80A78](v36);
  v251 = (char *)v143 - v38;
  v226 = sub_1CE0B5078();
  v253 = *(_QWORD *)(v226 - 8);
  v39 = MEMORY[0x1E0C80A78](v226);
  v143[3] = (char *)v143 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v39);
  v252 = (char *)v143 - v41;
  v42 = sub_1CE0B58A0();
  v258 = *(_QWORD *)(v42 - 8);
  v259 = (char *)v42;
  v43 = MEMORY[0x1E0C80A78](v42);
  v257 = (char *)v143 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v43);
  v256 = (char *)v143 - v45;
  v239 = sub_1CE0B5EC4();
  v238 = *(_QWORD *)(v239 - 8);
  v46 = MEMORY[0x1E0C80A78](v239);
  v237 = (char *)v143 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v46);
  v236 = (char *)v143 - v48;
  v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4E0);
  MEMORY[0x1E0C80A78](v168);
  v173 = (char *)v143 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v51 = MEMORY[0x1E0C80A78](v50);
  v150 = (char *)v143 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = MEMORY[0x1E0C80A78](v51);
  v187 = (char *)v143 - v54;
  MEMORY[0x1E0C80A78](v53);
  v188 = (char *)v143 - v55;
  v220 = sub_1CE0B43B8();
  v219 = *(_QWORD *)(v220 - 8);
  v56 = MEMORY[0x1E0C80A78](v220);
  v143[2] = (char *)v143 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v56);
  v249 = (char *)v143 - v58;
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4E8);
  MEMORY[0x1E0C80A78](v167);
  v169 = (char *)v143 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4C0);
  v61 = MEMORY[0x1E0C80A78](v60);
  v149 = (char *)v143 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x1E0C80A78](v61);
  v185 = (char *)v143 - v64;
  MEMORY[0x1E0C80A78](v63);
  v186 = (char *)v143 - v65;
  v196 = sub_1CE0B41D8();
  v195 = *(_QWORD *)(v196 - 8);
  v66 = MEMORY[0x1E0C80A78](v196);
  v143[1] = (char *)v143 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v66);
  v194 = (char *)v143 - v68;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0180);
  MEMORY[0x1E0C80A78](v69);
  v148 = (char *)v143 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  v214 = sub_1CE0B57A4();
  v213 = *(_QWORD *)(v214 - 8);
  v71 = MEMORY[0x1E0C80A78](v214);
  v166 = (char *)v143 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v71);
  v184 = (char *)v143 - v73;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E120);
  MEMORY[0x1E0C80A78](v74);
  v211 = (char *)v143 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = sub_1CE0B509C();
  v163 = *(_QWORD *)(v165 - 8);
  MEMORY[0x1E0C80A78](v165);
  v206 = (char *)v143 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v209 = sub_1CE0B5840();
  v208 = *(_QWORD *)(v209 - 8);
  MEMORY[0x1E0C80A78](v209);
  v207 = (char *)v143 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v217 = sub_1CE0B4B08();
  v215 = *(_QWORD *)(v217 - 8);
  v78 = MEMORY[0x1E0C80A78](v217);
  v246 = (char *)v143 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = MEMORY[0x1E0C80A78](v78);
  v162 = (char *)v143 - v81;
  MEMORY[0x1E0C80A78](v80);
  v243 = (char *)v143 - v82;
  v218 = sub_1CE0B4C28();
  v216 = *(_QWORD *)(v218 - 8);
  v83 = MEMORY[0x1E0C80A78](v218);
  v164 = (char *)v143 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = MEMORY[0x1E0C80A78](v83);
  v161 = (char *)v143 - v86;
  MEMORY[0x1E0C80A78](v85);
  v242 = (char *)v143 - v87;
  v193 = sub_1CE0B54B0();
  v192 = *(_QWORD *)(v193 - 8);
  v88 = MEMORY[0x1E0C80A78](v193);
  v157 = (char *)v143 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = MEMORY[0x1E0C80A78](v88);
  v156 = (char *)v143 - v91;
  MEMORY[0x1E0C80A78](v90);
  v191 = (char *)v143 - v92;
  v205 = sub_1CE0B4C10();
  v204 = *(_QWORD *)(v205 - 8);
  v93 = MEMORY[0x1E0C80A78](v205);
  v160 = (char *)v143 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = MEMORY[0x1E0C80A78](v93);
  v154 = (char *)v143 - v96;
  v97 = MEMORY[0x1E0C80A78](v95);
  v153 = (char *)v143 - v98;
  MEMORY[0x1E0C80A78](v97);
  v190 = (char *)v143 - v99;
  v212 = sub_1CE0B5F60();
  v210 = *(_QWORD *)(v212 - 8);
  v100 = MEMORY[0x1E0C80A78](v212);
  v159 = (char *)v143 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = MEMORY[0x1E0C80A78](v100);
  v155 = (char *)v143 - v103;
  MEMORY[0x1E0C80A78](v102);
  v240 = (char *)v143 - v104;
  v146 = sub_1CE0B5AF8();
  v151 = *(_QWORD *)(v146 - 8);
  v105 = MEMORY[0x1E0C80A78](v146);
  v143[4] = (char *)v143 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = MEMORY[0x1E0C80A78](v105);
  v152 = (char *)v143 - v108;
  MEMORY[0x1E0C80A78](v107);
  v145 = (char *)v143 - v109;
  v144 = sub_1CE0B5948();
  v143[5] = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v158 = (char *)v143 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_1CE0B4904();
  v112 = *(_QWORD *)(v111 - 8);
  v113 = MEMORY[0x1E0C80A78](v111);
  v115 = (char *)v143 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = MEMORY[0x1E0C80A78](v113);
  v118 = (char *)v143 - v117;
  MEMORY[0x1E0C80A78](v116);
  v260 = type metadata accessor for RemoteBrowsingJournalProperty();
  v119 = MEMORY[0x1E0C80A78](v260);
  v244 = (uint64_t)v143 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = MEMORY[0x1E0C80A78](v119);
  v245 = (uint64_t)v143 - v122;
  v123 = MEMORY[0x1E0C80A78](v121);
  v241 = (uint64_t)v143 - v124;
  v125 = MEMORY[0x1E0C80A78](v123);
  v255 = (uint64_t)v143 - v126;
  v127 = MEMORY[0x1E0C80A78](v125);
  v129 = (char *)v143 - v128;
  MEMORY[0x1E0C80A78](v127);
  v131 = (char *)v143 - v130;
  v132 = type metadata accessor for RemoteBrowsingJournalEntry();
  MEMORY[0x1E0C80A78](v132);
  v134 = (char *)v143 - ((v133 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE017160((uint64_t)v261, (uint64_t)v134, v135);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v137 = v255;
      sub_1CE0039B0((uint64_t)v134, v255);
      sub_1CE017160(v137, v241, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
      v138 = (char *)&loc_1CE0140BC + *((int *)qword_1CE017088 + swift_getEnumCaseMultiPayload());
      __asm { BR              X10 }
    }
    v140 = (uint64_t)v134;
    v141 = v245;
    sub_1CE0039B0(v140, v245);
    sub_1CE017160(v141, v244, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
    v142 = (char *)&loc_1CE0141D8 + dword_1CE01701C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v261 = v118;
  v259 = v115;
  v143[0] = v112;
  sub_1CE0039B0((uint64_t)v134, (uint64_t)v131);
  sub_1CE017160((uint64_t)v131, (uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for RemoteBrowsingJournalProperty);
  v139 = (char *)&loc_1CE014168 + dword_1CE0170F4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1CE014200()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  sub_1CE054788(*v0);
  swift_bridgeObjectRelease();
  result = sub_1CDFEEC4C(v1);
  if (*MEMORY[0x1E0C80C00] != *(_QWORD *)(v2 - 96))
    JUMPOUT(0x1CE01700CLL);
  return result;
}

uint64_t sub_1CE017160(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1CE0171A4(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *, char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  int64_t v27;

  v5 = a2(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v26 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v26 - v14;
  v16 = 0;
  v17 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v27 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_5;
    }
    v23 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v27)
      return swift_release();
    v24 = *(_QWORD *)(v26 + 8 * v23);
    ++v16;
    if (!v24)
    {
      v16 = v23 + 1;
      if (v23 + 1 >= v27)
        return swift_release();
      v24 = *(_QWORD *)(v26 + 8 * v16);
      if (!v24)
      {
        v16 = v23 + 2;
        if (v23 + 2 >= v27)
          return swift_release();
        v24 = *(_QWORD *)(v26 + 8 * v16);
        if (!v24)
        {
          v16 = v23 + 3;
          if (v23 + 3 >= v27)
            return swift_release();
          v24 = *(_QWORD *)(v26 + 8 * v16);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v20 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v16 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v15, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v6 + 72) * v22, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v15, v5);
    a3(v12, v9);
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  v25 = v23 + 4;
  if (v25 >= v27)
    return swift_release();
  v24 = *(_QWORD *)(v26 + 8 * v25);
  if (v24)
  {
    v16 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v16 >= v27)
      return swift_release();
    v24 = *(_QWORD *)(v26 + 8 * v16);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL sub_1CE0173E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[2];

  v4 = sub_1CE0B5B4C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D95D20];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v17 - v11;
  v13 = a3(v10);
  a3(v13);
  sub_1CDFB1900(&qword_1EFA5F568, v5, MEMORY[0x1E0D95D30]);
  v14 = sub_1CE0B6260();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v4);
  v15(v12, v4);
  return (v14 & 1) == 0;
}

uint64_t sub_1CE017500(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    v8 = 0;
  }
  else
  {
    v9 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = v9 ^ 1;
  }
  return v8 & 1;
}

unint64_t sub_1CE0175AC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F560);
  v2 = (_QWORD *)sub_1CE0B6B54();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CE0177CC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CE0176BC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F558);
  v2 = (_QWORD *)sub_1CE0B6B54();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1CE0177CC(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1CE0177CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CE0B6D34();
  sub_1CE0B62CC();
  v4 = sub_1CE0B6D64();
  return sub_1CE017830(a1, a2, v4);
}

unint64_t sub_1CE017830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1CE0B6C50() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1CE0B6C50() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1CE0B6C50() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1CE017974(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v10)(char *);
  char v11;
  unint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v10 = (uint64_t (*)(char *))isStackAllocationSafe;
  v17[1] = *MEMORY[0x1E0C80C00];
  v11 = *(_BYTE *)(a3 + 32);
  v12 = (unint64_t)((1 << v11) + 63) >> 6;
  v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v17[0] = v17;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    v14 = sub_1CE017B18((uint64_t)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, a3, v10, a2, a4, a5);
    swift_release();
    if (v5)
      swift_willThrow();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    v14 = sub_1CE017B18((uint64_t)v15, v12, a3, v10, a2, a4, a5);
    swift_release();
    MEMORY[0x1D17C092C](v15, -1, -1);
  }
  return v14;
}

uint64_t sub_1CE017B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  char v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t (*v37)(char *);
  uint64_t v38;

  v31 = a2;
  v32 = a7;
  v37 = a4;
  v33 = a1;
  v9 = a6(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v30 - v12;
  v14 = 0;
  v38 = a3;
  v15 = *(_QWORD *)(a3 + 56);
  v34 = 0;
  v35 = a3 + 56;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v19 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v20 = v19 | (v14 << 6);
LABEL_17:
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, *(_QWORD *)(v38 + 48) + *(_QWORD *)(v10 + 72) * v20, v9);
    v24 = v37(v13);
    if (v7)
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v25 = v24;
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    if ((v25 & 1) != 0)
    {
      *(_QWORD *)(v33 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = __OFADD__(v34++, 1);
      if (v21)
        goto LABEL_30;
    }
  }
  v21 = __OFADD__(v14++, 1);
  if (v21)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v14 >= v36)
    goto LABEL_27;
  v22 = *(_QWORD *)(v35 + 8 * v14);
  if (v22)
  {
LABEL_16:
    v18 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v14 << 6);
    goto LABEL_17;
  }
  v23 = v14 + 1;
  if (v14 + 1 >= v36)
    goto LABEL_27;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
    goto LABEL_15;
  v23 = v14 + 2;
  if (v14 + 2 >= v36)
    goto LABEL_27;
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
    goto LABEL_15;
  v23 = v14 + 3;
  if (v14 + 3 >= v36)
  {
LABEL_27:
    v27 = v31;
    v26 = v32;
    v28 = v34;
    v29 = v38;
    swift_retain();
    return v26(v33, v27, v28, v29);
  }
  v22 = *(_QWORD *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_15:
    v14 = v23;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v36)
      goto LABEL_27;
    v22 = *(_QWORD *)(v35 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CE017D80(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(sub_1CE0B4B08() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_1CE0191E8(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_1CE017E00(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1CE017E00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  char *v68;
  void (*v69)(char *, unint64_t, uint64_t);
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  unint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  void (*v139)(char *, uint64_t);
  uint64_t *v140;
  uint64_t v141;
  char *v142;
  void (*v143)(char *, uint64_t, uint64_t);
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;

  v2 = v1;
  v141 = sub_1CE0B4B08();
  v147 = *(_QWORD *)(v141 - 8);
  v4 = MEMORY[0x1E0C80A78](v141);
  v132 = (char *)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v142 = (char *)&v126 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v137 = (char *)&v126 - v9;
  MEMORY[0x1E0C80A78](v8);
  v138 = (char *)&v126 - v10;
  v11 = a1[1];
  result = sub_1CE0B6C08();
  if (result >= v11)
  {
    if (v11 < 0)
      goto LABEL_139;
    if (v11)
      return sub_1CE018838(0, v11, 1, a1);
    return result;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_147;
  v128 = result;
  if (v11 < 2)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    v134 = MEMORY[0x1E0DEE9D8]
         + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
    if (v11 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v19 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_104:
      v127 = v17;
      if (v20 >= 2)
      {
        v120 = *a1;
        do
        {
          v121 = v20 - 2;
          if (v20 < 2)
            goto LABEL_134;
          if (!v120)
            goto LABEL_146;
          v122 = *(_QWORD *)&v19[16 * v121 + 32];
          v123 = *(_QWORD *)&v19[16 * v20 + 24];
          sub_1CE018AA0(v120 + *(_QWORD *)(v147 + 72) * v122, v120 + *(_QWORD *)(v147 + 72) * *(_QWORD *)&v19[16 * v20 + 16], v120 + *(_QWORD *)(v147 + 72) * v123, v134);
          if (v2)
            break;
          if (v123 < v122)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v19 = sub_1CE0191D4((uint64_t)v19);
          if (v121 >= *((_QWORD *)v19 + 2))
            goto LABEL_136;
          v124 = &v19[16 * v121 + 32];
          *(_QWORD *)v124 = v122;
          *((_QWORD *)v124 + 1) = v123;
          v125 = *((_QWORD *)v19 + 2);
          if (v20 > v125)
            goto LABEL_137;
          memmove(&v19[16 * v20 + 16], &v19[16 * v20 + 32], 16 * (v125 - v20));
          *((_QWORD *)v19 + 2) = v125 - 1;
          v20 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v127 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v14 = v13 >> 1;
    v15 = sub_1CE0B6494();
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v147 + 80);
    v127 = v15;
    v134 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v19 = (char *)MEMORY[0x1E0DEE9D8];
  v140 = a1;
  while (1)
  {
    v21 = (uint64_t)v18;
    v22 = (char *)v18 + 1;
    if ((uint64_t)v18 + 1 >= v11)
    {
      v31 = (uint64_t)v18 + 1;
    }
    else
    {
      v130 = v19;
      v23 = *a1;
      v24 = *(_QWORD *)(v147 + 72);
      v25 = *a1 + v24 * (_QWORD)v22;
      v146 = v24;
      v26 = *(void (**)(char *, uint64_t, uint64_t))(v147 + 16);
      v133 = (uint64_t)v18;
      v27 = v141;
      v26(v138, v25, v141);
      v28 = v137;
      v143 = v26;
      v26(v137, v23 + v24 * v133, v27);
      v29 = v138;
      v145 = sub_1CE0B4AFC();
      v144 = sub_1CE0B4AFC();
      v30 = *(void (**)(char *, uint64_t))(v147 + 8);
      v30(v28, v27);
      v21 = v133;
      v139 = v30;
      v30(v29, v27);
      v31 = v21 + 2;
      v131 = v23;
      if (v21 + 2 < v11)
      {
        v129 = v2;
        v32 = v23;
        v135 = v146 * v31;
        v136 = v146 * (_QWORD)v22;
        while (1)
        {
          v33 = v11;
          v34 = v31;
          v35 = v145 < v144;
          v36 = v138;
          v37 = v141;
          v38 = v143;
          v143(v138, v32 + v135, v141);
          v39 = v137;
          v38(v137, v32 + v136, v37);
          v40 = sub_1CE0B4AFC();
          LODWORD(v40) = v40 >= sub_1CE0B4AFC();
          v41 = v139;
          v139(v39, v37);
          v41(v36, v37);
          if (v35 == (_DWORD)v40)
            break;
          v31 = v34 + 1;
          v32 += v146;
          v11 = v33;
          if (v33 == v31)
          {
            v31 = v33;
            v2 = v129;
            a1 = v140;
            v21 = v133;
            goto LABEL_24;
          }
        }
        v2 = v129;
        a1 = v140;
        v31 = v34;
        v21 = v133;
        v11 = v33;
      }
LABEL_24:
      v19 = v130;
      if (v145 < v144)
      {
        if (v31 < v21)
          goto LABEL_140;
        if (v21 < v31)
        {
          v145 = v11;
          v129 = v2;
          v42 = 0;
          v43 = v146;
          v44 = v146 * (v31 - 1);
          v45 = v31 * v146;
          v46 = v21;
          v47 = v21 * v146;
          v139 = (void (*)(char *, uint64_t))v31;
          do
          {
            if (v46 != v31 + v42 - 1)
            {
              if (!v131)
                goto LABEL_145;
              v49 = v131 + v47;
              v50 = v131 + v44;
              v51 = v131;
              v52 = *(void (**)(char *, uint64_t, uint64_t))(v147 + 32);
              v52(v132, v131 + v47, v141);
              if (v47 < v44 || v49 >= v51 + v45)
              {
                v48 = v141;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v48 = v141;
                if (v47 != v44)
                  swift_arrayInitWithTakeBackToFront();
              }
              v52((char *)v50, (uint64_t)v132, v48);
              v31 = (uint64_t)v139;
              v43 = v146;
            }
            ++v46;
            --v42;
            v44 -= v43;
            v45 -= v43;
            v47 += v43;
          }
          while (v46 < v31 + v42);
          v2 = v129;
          v19 = v130;
          a1 = v140;
          v21 = v133;
          v11 = v145;
        }
      }
    }
    if (v31 >= v11)
      goto LABEL_56;
    if (__OFSUB__(v31, v21))
      goto LABEL_138;
    if (v31 - v21 >= v128)
      goto LABEL_56;
    if (__OFADD__(v21, v128))
      goto LABEL_141;
    v53 = v21 + v128 >= v11 ? v11 : v21 + v128;
    if (v53 < v21)
      break;
    if (v31 != v53)
    {
      v133 = v21;
      v129 = v2;
      v130 = v19;
      v54 = *(_QWORD *)(v147 + 72);
      v135 = *(_QWORD *)(v147 + 16);
      v136 = v54;
      v145 = v31 * v54;
      v146 = v54 * (v31 - 1);
      v131 = v53;
      do
      {
        v56 = 0;
        v57 = (void (*)(char *, uint64_t, uint64_t))v133;
        v58 = v141;
        v139 = (void (*)(char *, uint64_t))v31;
        while (1)
        {
          v143 = v57;
          v59 = v140;
          v60 = *v140;
          v61 = v138;
          v62 = (void (*)(char *, uint64_t, uint64_t))v135;
          ((void (*)(char *, unint64_t, uint64_t))v135)(v138, v145 + v56 + *v140, v58);
          v63 = v146 + v56 + v60;
          v64 = v137;
          v62(v137, v63, v58);
          v144 = sub_1CE0B4AFC();
          v65 = sub_1CE0B4AFC();
          v66 = *(void (**)(char *, uint64_t))(v147 + 8);
          v66(v64, v58);
          v66(v61, v58);
          if (v144 >= v65)
            break;
          v67 = *v59;
          if (!*v59)
            goto LABEL_143;
          v68 = (char *)(v67 + v146 + v56);
          v69 = *(void (**)(char *, unint64_t, uint64_t))(v147 + 32);
          v58 = v141;
          v69(v142, v67 + v145 + v56, v141);
          v55 = (char *)v139;
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (unint64_t)v142, v58);
          v56 -= v136;
          v57 = (void (*)(char *, uint64_t, uint64_t))((char *)v143 + 1);
          if (v55 == (char *)v143 + 1)
            goto LABEL_49;
        }
        v55 = (char *)v139;
LABEL_49:
        v31 = (uint64_t)(v55 + 1);
        v146 += v136;
        v145 += v136;
      }
      while (v31 != v131);
      v31 = v131;
      v2 = v129;
      v19 = v130;
      a1 = v140;
      v21 = v133;
    }
LABEL_56:
    if (v31 < v21)
      goto LABEL_133;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1CE018FD0(0, *((_QWORD *)v19 + 2) + 1, 1, v19);
    v71 = *((_QWORD *)v19 + 2);
    v70 = *((_QWORD *)v19 + 3);
    v20 = v71 + 1;
    if (v71 >= v70 >> 1)
      v19 = sub_1CE018FD0((char *)(v70 > 1), v71 + 1, 1, v19);
    *((_QWORD *)v19 + 2) = v20;
    v72 = v19 + 32;
    v73 = &v19[16 * v71 + 32];
    *(_QWORD *)v73 = v21;
    *((_QWORD *)v73 + 1) = v31;
    v139 = (void (*)(char *, uint64_t))v31;
    if (v71)
    {
      while (1)
      {
        v74 = v20 - 1;
        if (v20 >= 4)
        {
          v79 = &v72[16 * v20];
          v80 = *((_QWORD *)v79 - 8);
          v81 = *((_QWORD *)v79 - 7);
          v85 = __OFSUB__(v81, v80);
          v82 = v81 - v80;
          if (v85)
            goto LABEL_122;
          v84 = *((_QWORD *)v79 - 6);
          v83 = *((_QWORD *)v79 - 5);
          v85 = __OFSUB__(v83, v84);
          v77 = v83 - v84;
          v78 = v85;
          if (v85)
            goto LABEL_123;
          v86 = v20 - 2;
          v87 = &v72[16 * v20 - 32];
          v89 = *(_QWORD *)v87;
          v88 = *((_QWORD *)v87 + 1);
          v85 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          if (v85)
            goto LABEL_125;
          v85 = __OFADD__(v77, v90);
          v91 = v77 + v90;
          if (v85)
            goto LABEL_128;
          if (v91 >= v82)
          {
            v109 = &v72[16 * v74];
            v111 = *(_QWORD *)v109;
            v110 = *((_QWORD *)v109 + 1);
            v85 = __OFSUB__(v110, v111);
            v112 = v110 - v111;
            if (v85)
              goto LABEL_132;
            v102 = v77 < v112;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v103 = *((_QWORD *)v19 + 4);
            v104 = *((_QWORD *)v19 + 5);
            v85 = __OFSUB__(v104, v103);
            v96 = v104 - v103;
            v97 = v85;
            goto LABEL_87;
          }
          v76 = *((_QWORD *)v19 + 4);
          v75 = *((_QWORD *)v19 + 5);
          v85 = __OFSUB__(v75, v76);
          v77 = v75 - v76;
          v78 = v85;
        }
        if ((v78 & 1) != 0)
          goto LABEL_124;
        v86 = v20 - 2;
        v92 = &v72[16 * v20 - 32];
        v94 = *(_QWORD *)v92;
        v93 = *((_QWORD *)v92 + 1);
        v95 = __OFSUB__(v93, v94);
        v96 = v93 - v94;
        v97 = v95;
        if (v95)
          goto LABEL_127;
        v98 = &v72[16 * v74];
        v100 = *(_QWORD *)v98;
        v99 = *((_QWORD *)v98 + 1);
        v85 = __OFSUB__(v99, v100);
        v101 = v99 - v100;
        if (v85)
          goto LABEL_130;
        if (__OFADD__(v96, v101))
          goto LABEL_131;
        if (v96 + v101 >= v77)
        {
          v102 = v77 < v101;
LABEL_93:
          if (v102)
            v74 = v86;
          goto LABEL_95;
        }
LABEL_87:
        if ((v97 & 1) != 0)
          goto LABEL_126;
        v105 = &v72[16 * v74];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v85 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v85)
          goto LABEL_129;
        if (v108 < v96)
          goto LABEL_15;
LABEL_95:
        v113 = v74 - 1;
        if (v74 - 1 >= v20)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        v114 = *a1;
        if (!*a1)
          goto LABEL_144;
        v115 = &v72[16 * v113];
        v116 = *(_QWORD *)v115;
        v117 = &v72[16 * v74];
        v118 = *((_QWORD *)v117 + 1);
        sub_1CE018AA0(v114 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v115, v114 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v117, v114 + *(_QWORD *)(v147 + 72) * v118, v134);
        if (v2)
          goto LABEL_115;
        if (v118 < v116)
          goto LABEL_119;
        if (v74 > *((_QWORD *)v19 + 2))
          goto LABEL_120;
        *(_QWORD *)v115 = v116;
        *(_QWORD *)&v72[16 * v113 + 8] = v118;
        v119 = *((_QWORD *)v19 + 2);
        if (v74 >= v119)
          goto LABEL_121;
        v20 = v119 - 1;
        memmove(&v72[16 * v74], v117 + 16, 16 * (v119 - 1 - v74));
        *((_QWORD *)v19 + 2) = v119 - 1;
        a1 = v140;
        if (v119 <= 2)
          goto LABEL_15;
      }
    }
    v20 = 1;
LABEL_15:
    v11 = a1[1];
    v18 = v139;
    if ((uint64_t)v139 >= v11)
    {
      v17 = v127;
      goto LABEL_104;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_1CE0B6ADC();
  __break(1u);
  return result;
}

uint64_t sub_1CE018838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;

  v33 = a1;
  v7 = sub_1CE0B4B08();
  v41 = *(_QWORD **)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v31 - v11;
  result = MEMORY[0x1E0C80A78](v10);
  v35 = (char *)&v31 - v13;
  v39 = a3;
  v32 = a2;
  if (a3 != a2)
  {
    v14 = v41[9];
    v34 = (void (*)(char *, uint64_t, uint64_t))v41[2];
    v44 = v14 * (v39 - 1);
    v37 = v14;
    v15 = v14 * v39;
    v43 = a4;
LABEL_5:
    v16 = 0;
    v17 = v33;
    v38 = v15;
    while (1)
    {
      v18 = *v43;
      v19 = v15 + v16 + *v43;
      v21 = v34;
      v20 = v35;
      v34(v35, v19, v7);
      v22 = v7;
      v23 = v36;
      v21(v36, v44 + v16 + v18, v22);
      v42 = sub_1CE0B4AFC();
      v24 = sub_1CE0B4AFC();
      v25 = (void (*)(char *, uint64_t))v41[1];
      v26 = v23;
      v7 = v22;
      v25(v26, v22);
      v27 = v20;
      v15 = v38;
      result = ((uint64_t (*)(char *, uint64_t))v25)(v27, v22);
      if (v42 >= v24)
      {
LABEL_4:
        v44 += v37;
        v15 += v37;
        if (++v39 == v32)
          return result;
        goto LABEL_5;
      }
      v28 = *v43;
      if (!*v43)
        break;
      v29 = v28 + v44 + v16;
      v30 = (void (*)(char *, uint64_t, uint64_t))v41[4];
      v30(v40, v28 + v15 + v16, v22);
      swift_arrayInitWithTakeFrontToBack();
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(v29, v40, v22);
      v16 -= v37;
      if (v39 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1CE018AA0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, unint64_t, uint64_t);
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v36;
  void (*v37)(char *);
  void (*v38)(char *);
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  unint64_t v48;
  void (*v49)(_QWORD, _QWORD, _QWORD);
  unint64_t v50;
  unint64_t v51;
  uint64_t result;
  uint64_t v53;
  unint64_t v54;
  void (*v55)(char *);
  unint64_t v56;
  void (*v57)(_QWORD, _QWORD, _QWORD);
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_1CE0B4B08();
  v9 = MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v53 - v11;
  v60 = v13;
  v14 = *(_QWORD *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1)
    goto LABEL_63;
  v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1)
    goto LABEL_64;
  v16 = (uint64_t)(a2 - a1) / v14;
  v63 = a1;
  v62 = a4;
  v17 = v15 / v14;
  v56 = a4;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      v20 = v17 * v14;
      v21 = v56;
      if (v56 < a2 || a2 + v20 <= v56)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v56 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v34 = v21 + v20;
      v61 = v21 + v20;
      v63 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        v36 = -v14;
        v37 = *(void (**)(char *))(v60 + 16);
        v54 = a1;
        v55 = v37;
        do
        {
          v58 = a3 + v36;
          v38 = v55;
          ((void (*)(char *, unint64_t, uint64_t))v55)(v12, v34 + v36, v8);
          v39 = a3;
          v40 = v8;
          v41 = v12;
          v42 = v59;
          v57 = (void (*)(_QWORD, _QWORD, _QWORD))(a2 + v36);
          v38(v59);
          v43 = v36;
          v44 = sub_1CE0B4AFC();
          v45 = sub_1CE0B4AFC();
          v46 = *(void (**)(char *, uint64_t))(v60 + 8);
          v47 = v42;
          v12 = v41;
          v8 = v40;
          v46(v47, v40);
          v46(v12, v40);
          if (v44 >= v45)
          {
            v51 = v61;
            v61 += v43;
            v36 = v43;
            a3 = v58;
            if (v39 < v51 || v58 >= v51)
            {
              swift_arrayInitWithTakeFrontToBack();
              v49 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
              v48 = v56;
            }
            else
            {
              v48 = v56;
              if (v39 != v51)
                swift_arrayInitWithTakeBackToFront();
              v49 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
            }
            v50 = v54;
          }
          else
          {
            v36 = v43;
            a3 = v58;
            if (v39 < a2 || v58 >= a2)
            {
              v49 = v57;
              swift_arrayInitWithTakeFrontToBack();
              v48 = v56;
              v50 = v54;
            }
            else
            {
              v48 = v56;
              v49 = v57;
              v50 = v54;
              if (v39 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v36;
          }
          v34 = v61;
          if (v61 <= v48)
            break;
          a2 = (unint64_t)v49;
        }
        while ((unint64_t)v49 > v50);
      }
      goto LABEL_61;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    v18 = v16 * v14;
    v19 = v56;
    if (v56 < a1 || a1 + v18 <= v56)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v56 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = v19 + v18;
    v61 = v19 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      v23 = v19;
      v24 = v59;
      v57 = *(void (**)(_QWORD, _QWORD, _QWORD))(v60 + 16);
      do
      {
        v25 = v14;
        v26 = a3;
        v27 = (void (*)(char *, unint64_t, uint64_t))v57;
        v57(v12, a2, v8);
        v27(v24, v23, v8);
        v28 = sub_1CE0B4AFC();
        v29 = sub_1CE0B4AFC();
        v30 = *(void (**)(char *, uint64_t))(v60 + 8);
        v30(v24, v8);
        v30(v12, v8);
        v31 = v63;
        if (v28 >= v29)
        {
          v14 = v25;
          v33 = v62 + v25;
          if (v63 < v62 || v63 >= v33)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v26;
          }
          else
          {
            a3 = v26;
            if (v63 != v62)
              swift_arrayInitWithTakeBackToFront();
          }
          v62 = v33;
          v32 = a2;
        }
        else
        {
          v14 = v25;
          v32 = a2 + v25;
          if (v63 < a2 || v63 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v26;
          }
          else
          {
            a3 = v26;
            if (v63 == a2)
              v31 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        v63 = v31 + v14;
        v23 = v62;
        if (v62 >= v58)
          break;
        a2 = v32;
      }
      while (v32 < a3);
    }
LABEL_61:
    sub_1CE0190C8(&v63, &v62, (uint64_t *)&v61);
    return 1;
  }
LABEL_65:
  result = sub_1CE0B6B60();
  __break(1u);
  return result;
}

char *sub_1CE018FD0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F550);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1CE0190C8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_1CE0B4B08();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_1CE0B6B60();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_1CE0191D4(uint64_t a1)
{
  return sub_1CE018FD0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1CE0191E8(_QWORD *a1)
{
  return sub_1CDFCFC80(0, a1[2], 0, a1);
}

uint64_t sub_1CE0191FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE017500(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D91F28]) & 1;
}

BOOL sub_1CE019220(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0173E8(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D948F0]);
}

uint64_t sub_1CE019244(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  char v11;
  unsigned int v12;
  unint64_t v13;
  size_t v14;
  uint64_t isStackAllocationSafe;
  uint64_t v16;
  void *v17;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x1E0C80C00];
  v11 = *(_BYTE *)(a1 + 32);
  v12 = v11 & 0x3F;
  v13 = (unint64_t)((1 << v11) + 63) >> 6;
  v14 = 8 * v13;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v12 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v19[0] = v19;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v14);
    swift_bridgeObjectRetain();
    v16 = sub_1CE01943C((uint64_t)v19 - ((v14 + 15) & 0x3FFFFFFFFFFFFFF0), v13, a1, a2, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    if (v5)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v17 = (void *)swift_slowAlloc();
    bzero(v17, v14);
    swift_bridgeObjectRetain();
    v16 = sub_1CE01943C((uint64_t)v17, v13, a1, a2, a3, a4, a5);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1D17C092C](v17, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v16;
}

uint64_t sub_1CE01943C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t (*v49)(uint64_t);
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  int64_t v54;

  v43 = a7;
  v49 = a6;
  v42 = a2;
  v44 = a1;
  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v41 - v12;
  v14 = 0;
  v50 = a3;
  v15 = *(_QWORD *)(a3 + 56);
  v46 = 0;
  v47 = a3 + 56;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v48 = (unint64_t)(v16 + 63) >> 6;
  v52 = a4;
  v45 = a4 + 7;
  while (1)
  {
    while (1)
    {
      if (v18)
      {
        v53 = (v18 - 1) & v18;
        v54 = v14;
        v19 = __clz(__rbit64(v18)) | (v14 << 6);
      }
      else
      {
        v20 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_39;
        if (v20 >= v48)
          goto LABEL_37;
        v21 = *(_QWORD *)(v47 + 8 * v20);
        v22 = v14 + 1;
        if (!v21)
        {
          v22 = v14 + 2;
          if (v14 + 2 >= v48)
            goto LABEL_37;
          v21 = *(_QWORD *)(v47 + 8 * v22);
          if (!v21)
          {
            v22 = v14 + 3;
            if (v14 + 3 >= v48)
              goto LABEL_37;
            v21 = *(_QWORD *)(v47 + 8 * v22);
            if (!v21)
            {
              v23 = v14 + 4;
              if (v14 + 4 >= v48)
                goto LABEL_37;
              v21 = *(_QWORD *)(v47 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  v22 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_40;
                  if (v22 >= v48)
                    goto LABEL_37;
                  v21 = *(_QWORD *)(v47 + 8 * v22);
                  ++v23;
                  if (v21)
                    goto LABEL_20;
                }
              }
              v22 = v14 + 4;
            }
          }
        }
LABEL_20:
        v53 = (v21 - 1) & v21;
        v54 = v22;
        v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      v24 = *(_QWORD *)(v50 + 48);
      v25 = *(_QWORD *)(v10 + 72);
      v51 = v19;
      v26 = v10;
      v27 = v9;
      v28 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, v24 + v25 * v19, v9);
      v29 = v13;
      v30 = v49(v28);
      v32 = v31;
      v33 = v52[2];
      if (v33)
        break;
LABEL_34:
      swift_bridgeObjectRelease();
      v10 = v26;
      v13 = v29;
      v9 = v27;
      result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v27);
      *(_QWORD *)(v44 + ((v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v51;
      v39 = __OFADD__(v46++, 1);
      v14 = v54;
      v18 = v53;
      if (v39)
      {
        __break(1u);
LABEL_37:
        v40 = v50;
        swift_retain();
        return v43(v44, v42, v46, v40);
      }
    }
    v34 = v30;
    if (v52[4] != v30 || v52[5] != v31)
    {
      result = sub_1CE0B6C50();
      if ((result & 1) == 0)
        break;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    v10 = v26;
    v13 = v29;
    v9 = v27;
    result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v27);
    v14 = v54;
    v18 = v53;
  }
  if (v33 == 1)
    goto LABEL_34;
  v35 = v45;
  v36 = 1;
  while (1)
  {
    v37 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (*(v35 - 1) == v34 && *v35 == v32)
      goto LABEL_4;
    result = sub_1CE0B6C50();
    if ((result & 1) != 0)
      goto LABEL_4;
    v35 += 2;
    ++v36;
    if (v37 == v33)
      goto LABEL_34;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1CE019780(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v28 = a2;
  v34 = a4;
  v29 = a1;
  v7 = sub_1CE0B48A4();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v33 = a3;
  v13 = *(_QWORD *)(a3 + 56);
  v30 = 0;
  v31 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v32 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v12 << 6);
      goto LABEL_18;
    }
    v20 = __OFADD__(v12++, 1);
    if (v20)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v32)
      goto LABEL_28;
    v21 = *(_QWORD *)(v31 + 8 * v12);
    if (!v21)
      break;
LABEL_17:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_18:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v11, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v8 + 72) * v19, v7);
    if (sub_1CE0B4898() == v34 && v23 == a5)
    {
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
    else
    {
      v17 = sub_1CE0B6C50();
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      if ((v17 & 1) == 0)
      {
        *(unint64_t *)((char *)v29 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
        v20 = __OFADD__(v30++, 1);
        if (v20)
        {
          __break(1u);
LABEL_28:
          v24 = v28;
          v25 = v30;
          v26 = v33;
          swift_retain();
          return sub_1CE0546D4(v29, v24, v25, v26);
        }
      }
    }
  }
  v22 = v12 + 1;
  if (v12 + 1 >= v32)
    goto LABEL_28;
  v21 = *(_QWORD *)(v31 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v12 + 2;
  if (v12 + 2 >= v32)
    goto LABEL_28;
  v21 = *(_QWORD *)(v31 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v12 + 3;
  if (v12 + 3 >= v32)
    goto LABEL_28;
  v21 = *(_QWORD *)(v31 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v12 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v32)
      goto LABEL_28;
    v21 = *(_QWORD *)(v31 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1CE019A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v12 = sub_1CE019780((_QWORD *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    v12 = sub_1CE019780((unint64_t *)v13, v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1D17C092C](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_1CE019BE0(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *, char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;

  v5 = a2(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v17 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v15 = *(_QWORD *)(v6 + 72);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    do
    {
      v16(v9, v14, v5);
      a3(v12, v9);
      result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
      v14 += v15;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t sub_1CE019CD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE017500(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D964F0]) & 1;
}

BOOL sub_1CE019CF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0173E8(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D94480]);
}

BOOL sub_1CE019D18(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE0173E8(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D942E8]);
}

unint64_t sub_1CE019D3C()
{
  unint64_t result;

  result = qword_1EFA5F520;
  if (!qword_1EFA5F520)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D929A8], MEMORY[0x1E0D929A0]);
    atomic_store(result, (unint64_t *)&qword_1EFA5F520);
  }
  return result;
}

uint64_t sub_1CE019D80(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE017500(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D919E0]) & 1;
}

uint64_t sub_1CE019DA4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE017500(a1, *(_QWORD *)(v1 + 16), MEMORY[0x1E0D91F70]) & 1;
}

uint64_t sub_1CE019DC8(uint64_t a1)
{
  return sub_1CE019D80(a1) & 1;
}

uint64_t sub_1CE019DE0(uint64_t a1)
{
  return sub_1CE019DA4(a1) & 1;
}

uint64_t sub_1CE019DF8(uint64_t a1)
{
  return sub_1CE019CD0(a1) & 1;
}

uint64_t Workout.applyingTimestampOffset(_:)()
{
  sub_1CE0B5E88();
  return sub_1CE0B5EA0();
}

uint64_t sub_1CE019E58()
{
  sub_1CE0B5E88();
  return sub_1CE0B5EA0();
}

uint64_t TestProperty.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1CE01A038(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

void (*TestProperty.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  unsigned __int8 *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  unsigned __int8 v11;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  v11 = *v2;
  static TestProperty.value(for:fallback:)(&v11, (uint64_t)&v2[*(int *)(a2 + 44)], v6, *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32), (uint64_t)v9);
  return sub_1CE019F88;
}

void sub_1CE019F88(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1CE01A038((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_1CE01A038((*a1)[5], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t static TestProperty<>.BOOLean(for:fallback:)(char *a1, char a2)
{
  return sub_1CDFD3658(*a1, a2);
}

uint64_t sub_1CE01A038(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  result = (uint64_t)Platform.internalInstall.getter();
  if ((result & 1) != 0)
  {
    if (qword_1ED8F0398 != -1)
      swift_once();
    v4 = qword_1ED8F0388;
    v5 = UserDefaultsKeys.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(a2 + 24) + 16))(v4, v5, v6, *(_QWORD *)(a2 + 16));
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CE01A12C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for TestProperty(0, *(_QWORD *)(a2 + a1 - 24), *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  return TestProperty.wrappedValue.getter(v4, a3);
}

uint64_t sub_1CE01A168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for TestProperty(0, *(_QWORD *)(a4 + a3 - 24), *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
  return sub_1CE01A038(a1, v5);
}

uint64_t sub_1CE01A1A8()
{
  return 24;
}

__n128 sub_1CE01A1B4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t *sub_1CE01A1C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(_QWORD *)(v4 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

_BYTE *sub_1CE01A264(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_1CE01A2B4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_BYTE *sub_1CE01A304(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1CE01A354(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xB5)
    v6 = 181;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 1) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)&a1[v9];
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9])
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xB5)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v7 + 1] & ~v7);
      v15 = *a1;
      if (v15 >= 0x4B)
        return v15 - 74;
      else
        return 0;
    }
  }
  v11 = a1[v9];
  if (!a1[v9])
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CE01A428 + 4 * byte_1CE0BE938[(v9 - 1)]))();
}

void sub_1CE01A498(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xB5u)
    v6 = 181;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void static AudioPlayerExpansionRequested.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AudioPlayerExpansionRequested()
{
  return &type metadata for AudioPlayerExpansionRequested;
}

uint64_t CatalogModality.metadata()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1CE0B3D10();
  MEMORY[0x1E0C80A78](v0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E0);
  MEMORY[0x1E0C80A78](v1);
  sub_1CE0B4934();
  sub_1CE0B497C();
  sub_1CE0B491C();
  sub_1CE0B4988();
  sub_1CE0B4928();
  sub_1CE0B4994();
  return sub_1CE0B5240();
}

uint64_t TransportDispatching.register(request:handler:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CE01A7E0(a1, a2, a3, a4, a5, (uint64_t)&unk_1E8B660F0, (uint64_t)sub_1CDFC11C8);
}

{
  return sub_1CE01A7E0(a1, a2, a3, a4, a5, (uint64_t)&unk_1E8B66118, (uint64_t)sub_1CE01AB64);
}

uint64_t sub_1CE01A7E0(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __int16 v10;
  uint64_t v11;
  __int16 v13;

  v10 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  v13 = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  swift_retain();
  sub_1CE0B10F0(&v13, a7, v11);
  swift_release();
  return swift_release();
}

uint64_t TransportDispatching.register<A>(request:handler:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1CE01A918(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0B0108);
}

{
  return sub_1CE01A918(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0B01F8);
}

{
  return sub_1CE01A918(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0B053C);
}

{
  return sub_1CE01A918(a1, a2, a3, a4, a5, a6, a7, a8, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0B05B4);
}

uint64_t sub_1CE01A918(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __int16 v14;
  __int16 v16;

  v14 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a6 + 8))(a4, a6);
  v16 = v14;
  a9(&v16, a2, a3, a5, a7, a8);
  return swift_release();
}

uint64_t TransportDispatching.register<A, B>(request:handler:)(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_1CE01AA0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0B09C4);
}

{
  return sub_1CE01AA0C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, (void (*)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE0B0AD8);
}

uint64_t sub_1CE01AA0C(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void (*a12)(__int16 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __int16 v16;
  __int16 v19;

  v16 = *a1;
  (*(void (**)(uint64_t, uint64_t))(a7 + 8))(a4, a7);
  v19 = v16;
  a12(&v19, a2, a3, a5, a6, a8, a9, a10, a11);
  return swift_release();
}

Swift::Void __swiftcall TransportDispatching.unregister(request:)(SeymourClient::TransportRequest request)
{
  uint64_t v1;
  __int16 v2;
  __int16 v3;

  v2 = *(_WORD *)request;
  (*(void (**)())(v1 + 8))();
  v3 = v2;
  sub_1CE0B19C4(&v3);
  swift_release();
}

Swift::Void __swiftcall TransportDispatching.unregister(event:)(SeymourClient::TransportEvent event)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)event;
  (*(void (**)())(v1 + 8))();
  v3 = v2;
  sub_1CE0B1C90(&v3);
  swift_release();
}

uint64_t sub_1CE01AB40()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE01AB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CE0AFEAC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t dispatch thunk of TransportDispatching.dispatchService.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t static SessionDarwinNotification.sessionStatusToken.getter()
{
  return 5355107;
}

unint64_t static SessionDarwinNotification.sessionUpdated.getter()
{
  return 0xD000000000000021;
}

unint64_t static SessionDarwinNotification.sessionMindAppRequirementConfirmation.getter()
{
  return 0xD000000000000031;
}

unint64_t static SessionDarwinNotification.sessionWorkoutAppRequirementConfirmation.getter()
{
  return 0xD000000000000034;
}

unint64_t static SessionDarwinNotification.sessionGuidedRunWorkoutAppRequirementConfirmation.getter()
{
  return 0xD000000000000036;
}

unint64_t static SessionDarwinNotification.sessionGuidedWalkWorkoutAppRequirementConfirmation.getter()
{
  return 0xD000000000000037;
}

id SessionDarwinNotification.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id SessionDarwinNotification.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionDarwinNotification();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for SessionDarwinNotification()
{
  return objc_opt_self();
}

id SessionDarwinNotification.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SessionDarwinNotification();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t XPCStreamPublisher.__allocating_init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t XPCStreamPublisher.init(eventHub:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t XPCStreamPublisher.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCStreamPublisher.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

Swift::Void __swiftcall XPCStreamPublisher.publish(name:)(Swift::String name)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD v7[2];

  object = name._object;
  countAndFlagsBits = name._countAndFlagsBits;
  v4 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v7[0] = countAndFlagsBits;
  v7[1] = object;
  v6 = *(void (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  v6(v7, &type metadata for XPCStreamEventReceived, &protocol witness table for XPCStreamEventReceived, ObjectType, v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_1CE01AEE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD v9[2];

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  ObjectType = swift_getObjectType();
  v9[0] = a1;
  v9[1] = a2;
  v7 = *(void (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v5 + 8);
  swift_bridgeObjectRetain();
  v7(v9, &type metadata for XPCStreamEventReceived, &protocol witness table for XPCStreamEventReceived, ObjectType, v5);
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of XPCStreamPublishing.publish(name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for XPCStreamPublisher()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCStreamPublisher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCStreamPublisher.__allocating_init(eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t static AudioFocusConstants.metadataDomain.getter()
{
  return 0xD000000000000021;
}

unint64_t static AudioFocusConstants.audioFocusSelectionsKey.getter()
{
  return 0xD000000000000017;
}

ValueMetadata *type metadata accessor for AudioFocusConstants()
{
  return &type metadata for AudioFocusConstants;
}

uint64_t Subscription.identifier.getter()
{
  uint64_t v0;

  v0 = sub_1CDFC5BC4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t dispatch thunk of SubscriptionProtocol.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SubscriptionProtocol.objectIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

_QWORD *sub_1CE01B034(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1CE01B0A0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_1CE01B0EC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1CE01B134(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void static MoveRingCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for MoveRingCompleted()
{
  return &type metadata for MoveRingCompleted;
}

uint64_t sub_1CE01B1A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Artwork.imageURL(cropCode:fileType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  int v14;
  int v15;

  v10 = sub_1CE0B5BE8();
  v12 = v11;
  result = sub_1CE0B5BD0();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  v14 = result;
  if (result > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  result = sub_1CE0B5BDC();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v15 = result;
  if (result <= 0x7FFFFFFF)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return URL.init(templateURLString:pixelWidth:pixelHeight:cropCode:fileType:)(v10, v12, v14, v15, a1, a2, a3, a4, a5);
  }
LABEL_9:
  __break(1u);
  return result;
}

void static StandRingCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for StandRingCompleted()
{
  return &type metadata for StandRingCompleted;
}

_QWORD *ScoreClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for ScoreClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *ScoreClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE01B868(a1, v3, ObjectType, a2, a3);
}

uint64_t ScoreClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t ScoreClient.insertScores(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0C9920;
  v5._object = (void *)0x80000001CE0C9990;
  v5._countAndFlagsBits = 0xD000000000000010;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 213;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B44A8();
  return v8(&v11, a1, v9, MEMORY[0x1E0D90DE0], MEMORY[0x1E0D90DE8], ObjectType, v6);
}

uint64_t ScoreClient.submitScores()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._object = (void *)0x80000001CE0C9920;
  v2._countAndFlagsBits = 0xD00000000000006DLL;
  v3._countAndFlagsBits = 0x635374696D627573;
  v3._object = (void *)0xEE0029287365726FLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 214;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v4 + 8))(&v7, ObjectType, v4);
}

uint64_t ScoreClient.fetchRemoteScores(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED8F1870);
  v4._countAndFlagsBits = 0xD00000000000006DLL;
  v4._object = (void *)0x80000001CE0C9920;
  v5._object = (void *)0x80000001CE0C99B0;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v12 = 215;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4D90();
  v10 = sub_1CE0B4A00();
  return v8(&v12, a1, v9, v10, MEMORY[0x1E0D92758], MEMORY[0x1E0D92760], MEMORY[0x1E0D91678], MEMORY[0x1E0D91680], ObjectType, v6);
}

uint64_t sub_1CE01B750(uint64_t a1)
{
  return ScoreClient.insertScores(_:)(a1);
}

uint64_t sub_1CE01B770()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  __int16 v8;

  v1 = *v0;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1870);
  v3._object = (void *)0x80000001CE0C9920;
  v3._countAndFlagsBits = 0xD00000000000006DLL;
  v4._countAndFlagsBits = 0x635374696D627573;
  v4._object = (void *)0xEE0029287365726FLL;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 214;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1CE01B848(uint64_t a1)
{
  return ScoreClient.fetchRemoteScores(request:)(a1);
}

_QWORD *sub_1CE01B868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for ScoreClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t dispatch thunk of ScoreClientProtocol.insertScores(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ScoreClientProtocol.submitScores()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ScoreClientProtocol.fetchRemoteScores(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ScoreClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ScoreClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void static UpNextQueueItemsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void static RecommendationsUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for RecommendationsUpdated()
{
  return &type metadata for RecommendationsUpdated;
}

id sub_1CE01B910()
{
  char *v0;
  objc_super v2;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface], sel_invalidate);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WiFiObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1CE01B958(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D17C09E0](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1CE01B9B0(a1);

  }
}

uint64_t sub_1CE01B9B0(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v16[2];
  _QWORD aBlock[6];

  v3 = sub_1CE0B6140();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CE0B6158();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v1;
  aBlock[4] = sub_1CE01BE94;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CDFB33D0;
  aBlock[3] = &block_descriptor_6;
  v12 = _Block_copy(aBlock);
  v13 = a1;
  v14 = v1;
  sub_1CE0B614C();
  v16[1] = MEMORY[0x1E0DEE9D8];
  sub_1CDFC1B50();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1580);
  sub_1CDFC20A8();
  sub_1CE0B6944();
  MEMORY[0x1D17BFB04](0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1CE01BB6C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id *v17;
  id v18;
  id v19[2];

  v4 = sub_1CE0B617C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (id *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (objc_msgSend(a1, sel_type) == (id)1)
  {
    v8 = objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_wifiInterface), sel_powerOn);
    *(_BYTE *)(a2 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_isEnabled) = v8;
    v9 = MEMORY[0x1D17C09E0](a2 + OBJC_IVAR____TtC13SeymourClient12WiFiObserver_delegate);
    if (v9)
    {
      v10 = v9;
      v11 = *(void **)(v9 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_queue);
      *v7 = v11;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
      v12 = v11;
      LOBYTE(v11) = sub_1CE0B6194();
      (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
      if ((v11 & 1) != 0)
      {
        if (MEMORY[0x1D17C09E0](v10 + OBJC_IVAR____TtC13SeymourClient14NetworkMonitor_delegate))
        {
          sub_1CDFB7604();
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      else
      {
        __break(1u);
      }
    }
  }
  else
  {
    if (qword_1ED8F1890 != -1)
      swift_once();
    v13 = sub_1CE0B6080();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED8F1870);
    v19[0] = a1;
    v14 = sub_1CE0B6068();
    v15 = sub_1CE0B671C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (id *)swift_slowAlloc();
      *(_DWORD *)v16 = 138543362;
      v19[1] = v19[0];
      v18 = v19[0];
      sub_1CE0B68F0();
      *v17 = v19[0];

      _os_log_impl(&dword_1CDFAA000, v14, v15, "WiFi interface received unhandled event: %{public}@", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA64BF0);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v17, -1, -1);
      MEMORY[0x1D17C092C](v16, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1CE01BE68()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1CE01BE94()
{
  uint64_t v0;

  sub_1CE01BB6C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CE01BE9C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1CE01BEC0(void *a1)
{
  uint64_t v1;

  sub_1CE01B958(a1, v1);
}

SeymourClient::NetworkStatus_optional __swiftcall NetworkStatus.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SeymourClient::NetworkStatus_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CE0B6BC0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t NetworkStatus.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C62616863616572;
  if (*v0 != 1)
    v1 = 0x6168636165726E75;
  if (*v0)
    return v1;
  else
    return 0x65526E6F69746361;
}

uint64_t sub_1CE01BF9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CE00C788(*a1, *a2);
}

uint64_t sub_1CE01BFA8()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

uint64_t sub_1CE01C060()
{
  sub_1CE0B62CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE01C0F4()
{
  sub_1CE0B6D34();
  sub_1CE0B62CC();
  swift_bridgeObjectRelease();
  return sub_1CE0B6D64();
}

SeymourClient::NetworkStatus_optional sub_1CE01C1A8(Swift::String *a1)
{
  return NetworkStatus.init(rawValue:)(*a1);
}

void sub_1CE01C1B4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE00646572697571;
  v4 = 0xE900000000000065;
  v5 = 0x6C62616863616572;
  if (v2 != 1)
  {
    v5 = 0x6168636165726E75;
    v4 = 0xEB00000000656C62;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x65526E6F69746361;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t NetworkStatus.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C62616863616572;
  if (*v0 != 1)
    v1 = 0x6168636165726E75;
  if (*v0)
    return v1;
  else
    return 0x65526E6F69746361;
}

unint64_t sub_1CE01C2A4()
{
  unint64_t result;

  result = qword_1EFA5F680;
  if (!qword_1EFA5F680)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for NetworkStatus, &type metadata for NetworkStatus);
    atomic_store(result, (unint64_t *)&qword_1EFA5F680);
  }
  return result;
}

uint64_t sub_1CE01C2E8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C62616863616572;
  if (*v0 != 1)
    v1 = 0x6168636165726E75;
  if (*v0)
    return v1;
  else
    return 0x65526E6F69746361;
}

uint64_t storeEnumTagSinglePayload for NetworkStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE01C3A8 + 4 * byte_1CE0BEC25[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE01C3DC + 4 * asc_1CE0BEC20[v4]))();
}

uint64_t sub_1CE01C3DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE01C3E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE01C3ECLL);
  return result;
}

uint64_t sub_1CE01C3F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE01C400);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE01C404(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE01C40C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NetworkStatus()
{
  return &type metadata for NetworkStatus;
}

uint64_t Playback.applyingTimestampOffset(_:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D898);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B5EF4();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D950);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1CE0B5F0C();
  return sub_1CE01C4F0((uint64_t)v2);
}

uint64_t sub_1CE01C4F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D898);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1CE01C530()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D898);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B5EF4();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D950);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_1CE0B5F0C();
  return sub_1CE01C4F0((uint64_t)v2);
}

_QWORD *BookmarkClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for BookmarkClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE01DC24(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t BookmarkClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE01DD9C);
}

uint64_t BookmarkClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t BookmarkClient.queryBookmarks(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9B70;
  v5._countAndFlagsBits = 0xD000000000000012;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 43;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F688);
  v11 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v12 = sub_1CDFC86BC((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428);
  v13 = sub_1CDFB0260(&qword_1EFA5F690, &qword_1EFA5F688, MEMORY[0x1E0D963A8], MEMORY[0x1E0D963B0]);
  v14 = sub_1CDFC85C4();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarks(mediaTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9B90;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 45;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6A8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F688);
  v11 = sub_1CDFB0260(&qword_1EFA5F6B0, &qword_1EFA5F6A8, MEMORY[0x1E0D91BF8], MEMORY[0x1E0D91C00]);
  v12 = sub_1CDFC86BC(&qword_1EFA5F6B8, &qword_1EFA5F6A8, (uint64_t (*)(void))sub_1CE01DE08);
  v13 = sub_1CDFB0260(&qword_1EFA5F690, &qword_1EFA5F688, MEMORY[0x1E0D963A8], MEMORY[0x1E0D963B0]);
  v14 = sub_1CDFC85C4();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarks(referenceTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9BB0;
  v5._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 53;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6C8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F688);
  v11 = sub_1CDFB0260(&qword_1EFA5F6D0, &qword_1EFA5F6C8, MEMORY[0x1E0D93018], MEMORY[0x1E0D93020]);
  v12 = sub_1CDFC86BC(&qword_1EFA5F6D8, &qword_1EFA5F6C8, (uint64_t (*)(void))sub_1CE01DE4C);
  v13 = sub_1CDFB0260(&qword_1EFA5F690, &qword_1EFA5F688, MEMORY[0x1E0D963A8], MEMORY[0x1E0D963B0]);
  v14 = sub_1CDFC85C4();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarkCount(mediaTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9BD0;
  v5._countAndFlagsBits = 0xD00000000000001FLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 52;
  v13 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6A8);
  v10 = sub_1CDFB0260(&qword_1EFA5F6B0, &qword_1EFA5F6A8, MEMORY[0x1E0D91BF8], MEMORY[0x1E0D91C00]);
  v11 = sub_1CDFC86BC(&qword_1EFA5F6B8, &qword_1EFA5F6A8, (uint64_t (*)(void))sub_1CE01DE08);
  return v8(&v14, &v13, v9, MEMORY[0x1E0DEB418], v10, v11, MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v6);
}

uint64_t BookmarkClient.filterBookmarks(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9BF0;
  v5._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 55;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4628();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F688);
  v11 = sub_1CDFB0260(&qword_1EFA5F690, &qword_1EFA5F688, MEMORY[0x1E0D963A8], MEMORY[0x1E0D963B0]);
  v12 = sub_1CDFC85C4();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D91018], MEMORY[0x1E0D91020], v11, v12, ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarkCount(filter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9C10;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 57;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B4628();
  return v8(&v11, a1, v9, MEMORY[0x1E0DEB418], MEMORY[0x1E0D91018], MEMORY[0x1E0D91020], MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v6);
}

uint64_t BookmarkClient.queryBookmarkCount(referenceTypes:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9C30;
  v5._countAndFlagsBits = 0xD000000000000023;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 54;
  v13 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6C8);
  v10 = sub_1CDFB0260(&qword_1EFA5F6D0, &qword_1EFA5F6C8, MEMORY[0x1E0D93018], MEMORY[0x1E0D93020]);
  v11 = sub_1CDFC86BC(&qword_1EFA5F6D8, &qword_1EFA5F6C8, (uint64_t (*)(void))sub_1CE01DE4C);
  return v8(&v14, &v13, v9, MEMORY[0x1E0DEB418], v10, v11, MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v6);
}

uint64_t BookmarkClient.insertBookmarks(_:)(uint64_t a1)
{
  return sub_1CE01D1A4(a1, (void *)0x80000001CE0C9C60, 41);
}

uint64_t BookmarkClient.removeBookmarks(_:)(uint64_t a1)
{
  return sub_1CE01D1A4(a1, (void *)0x80000001CE0C9C80, 44);
}

uint64_t sub_1CE01D1A4(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  __int16 v18;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EFA63408);
  v8._countAndFlagsBits = 0xD000000000000069;
  v8._object = (void *)0x80000001CE0C9AE0;
  v9._countAndFlagsBits = 0xD000000000000013;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v18 = a3;
  v17 = a1;
  v12 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F688);
  v14 = sub_1CDFB0260(&qword_1EFA5F690, &qword_1EFA5F688, MEMORY[0x1E0D963A8], MEMORY[0x1E0D963B0]);
  v15 = sub_1CDFC85C4();
  return v12(&v18, &v17, v13, v14, v15, ObjectType, v10);
}

uint64_t BookmarkClient.filterPlaylists(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int16 v14;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9CC0;
  v5._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v14 = 56;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B488C();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6E8);
  v11 = sub_1CDFB0260(&qword_1EFA5F6F0, &qword_1EFA5F6E8, MEMORY[0x1E0D96520], MEMORY[0x1E0D96528]);
  v12 = sub_1CDFB01E4();
  return v8(&v14, a1, v9, v10, MEMORY[0x1E0D912A8], MEMORY[0x1E0D912B0], v11, v12, ObjectType, v6);
}

uint64_t BookmarkClient.queryPlaylistCount(filter:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9CE0;
  v5._countAndFlagsBits = 0xD00000000000001BLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 58;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 32);
  v9 = sub_1CE0B488C();
  return v8(&v11, a1, v9, MEMORY[0x1E0DEB418], MEMORY[0x1E0D912A8], MEMORY[0x1E0D912B0], MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v6);
}

uint64_t BookmarkClient.queryPlaylist(playlistIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v10)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD v13[2];
  __int16 v14;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EFA63408);
  v6._countAndFlagsBits = 0xD000000000000069;
  v6._object = (void *)0x80000001CE0C9AE0;
  v7._object = (void *)0x80000001CE0C9D00;
  v7._countAndFlagsBits = 0xD000000000000022;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v14 = 48;
  v13[0] = a1;
  v13[1] = a2;
  v10 = *(uint64_t (**)(__int16 *, _QWORD *, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 32);
  v11 = sub_1CE0B5F60();
  return v10(&v14, v13, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], MEMORY[0x1E0D96520], MEMORY[0x1E0D96528], ObjectType, v8);
}

uint64_t BookmarkClient.queryPlaylists(playlistIdentifiers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  __int16 v17;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63408);
  v4._countAndFlagsBits = 0xD000000000000069;
  v4._object = (void *)0x80000001CE0C9AE0;
  v5._object = (void *)0x80000001CE0C9D30;
  v5._countAndFlagsBits = 0xD000000000000024;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v17 = 50;
  v16 = a1;
  v8 = *(uint64_t (**)(__int16 *, uint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 32);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E98);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F6E8);
  v11 = sub_1CDFB0260(&qword_1ED8F0FC0, &qword_1ED8F0E98, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  v12 = sub_1CDFC86BC((unint64_t *)&qword_1ED8F0FC8, &qword_1ED8F0E98, (uint64_t (*)(void))sub_1CDFAC428);
  v13 = sub_1CDFB0260(&qword_1EFA5F6F0, &qword_1EFA5F6E8, MEMORY[0x1E0D96520], MEMORY[0x1E0D96528]);
  v14 = sub_1CDFB01E4();
  return v8(&v17, &v16, v9, v10, v11, v12, v13, v14, ObjectType, v6);
}

uint64_t BookmarkClient.queryPlaylistCount()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63408);
  v2._countAndFlagsBits = 0xD000000000000069;
  v2._object = (void *)0x80000001CE0C9AE0;
  v3._object = (void *)0x80000001CE0C9D60;
  v3._countAndFlagsBits = 0xD000000000000014;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 51;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E0DEB418], MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], ObjectType, v4);
}

uint64_t BookmarkClient.insertPlaylist(_:)(uint64_t a1)
{
  return sub_1CE01D928(a1, (void *)0x80000001CE0C9D80, 46);
}

uint64_t BookmarkClient.deletePlaylist(_:)(uint64_t a1)
{
  return sub_1CE01D928(a1, (void *)0x80000001CE0C9DA0, 49);
}

uint64_t sub_1CE01D928(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v13;
  __int16 v15;

  if (qword_1EFA5D4D0 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EFA63408);
  v8._countAndFlagsBits = 0xD000000000000069;
  v8._object = (void *)0x80000001CE0C9AE0;
  v9._countAndFlagsBits = 0xD000000000000012;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v15 = a3;
  v12 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v10 + 16);
  v13 = sub_1CE0B5F60();
  return v12(&v15, a1, v13, MEMORY[0x1E0D96520], MEMORY[0x1E0D96528], ObjectType, v10);
}

uint64_t sub_1CE01DA24(uint64_t a1)
{
  return BookmarkClient.queryBookmarks(_:)(a1);
}

uint64_t sub_1CE01DA44(uint64_t a1)
{
  return BookmarkClient.queryBookmarks(mediaTypes:)(a1);
}

uint64_t sub_1CE01DA64(uint64_t a1)
{
  return BookmarkClient.queryBookmarkCount(mediaTypes:)(a1);
}

uint64_t sub_1CE01DA84(uint64_t a1)
{
  return BookmarkClient.queryBookmarks(referenceTypes:)(a1);
}

uint64_t sub_1CE01DAA4(uint64_t a1)
{
  return BookmarkClient.queryBookmarkCount(referenceTypes:)(a1);
}

uint64_t sub_1CE01DAC4(uint64_t a1)
{
  return BookmarkClient.filterBookmarks(_:)(a1);
}

uint64_t sub_1CE01DAE4(uint64_t a1)
{
  return BookmarkClient.queryBookmarkCount(filter:)(a1);
}

uint64_t sub_1CE01DB04(uint64_t a1)
{
  return BookmarkClient.filterPlaylists(_:)(a1);
}

uint64_t sub_1CE01DB24(uint64_t a1)
{
  return BookmarkClient.queryPlaylistCount(filter:)(a1);
}

uint64_t sub_1CE01DB44(uint64_t a1, uint64_t a2)
{
  return BookmarkClient.queryPlaylist(playlistIdentifier:)(a1, a2);
}

uint64_t sub_1CE01DB64()
{
  return BookmarkClient.queryPlaylistCount()();
}

uint64_t sub_1CE01DB84(uint64_t a1)
{
  return BookmarkClient.queryPlaylists(playlistIdentifiers:)(a1);
}

uint64_t sub_1CE01DBA4(uint64_t a1)
{
  return BookmarkClient.insertBookmarks(_:)(a1);
}

uint64_t sub_1CE01DBC4(uint64_t a1)
{
  return BookmarkClient.insertPlaylist(_:)(a1);
}

uint64_t sub_1CE01DBE4(uint64_t a1)
{
  return BookmarkClient.removeBookmarks(_:)(a1);
}

uint64_t sub_1CE01DC04(uint64_t a1)
{
  return BookmarkClient.deletePlaylist(_:)(a1);
}

_QWORD *sub_1CE01DC24(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v13 = a1;
  v12 = 3;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B4C70();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1CE01DEC8, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D92178], MEMORY[0x1E0D92180]);
  swift_release();
  v13 = a1;
  v12 = 4;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = sub_1CE0B4D18();
  TransportDispatching.register<A>(event:handler:)(&v12, (uint64_t)sub_1CE01DEF8, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D924E8], MEMORY[0x1E0D924F0]);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE01DD9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for BookmarkClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFB21A8(a1, a2, a3, v13, a5, a6, a7);
}

unint64_t sub_1CE01DE08()
{
  unint64_t result;

  result = qword_1EFA5F6C0;
  if (!qword_1EFA5F6C0)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D91C08], MEMORY[0x1E0D91C18]);
    atomic_store(result, (unint64_t *)&qword_1EFA5F6C0);
  }
  return result;
}

unint64_t sub_1CE01DE4C()
{
  unint64_t result;

  result = qword_1EFA5F6E0;
  if (!qword_1EFA5F6E0)
  {
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D93028], MEMORY[0x1E0D93038]);
    atomic_store(result, (unint64_t *)&qword_1EFA5F6E0);
  }
  return result;
}

uint64_t method lookup function for BookmarkClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BookmarkClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE01DEA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE01DEC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for BookmarksUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92188], (uint64_t)&protocol witness table for BookmarksUpdated);
}

uint64_t sub_1CE01DEF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for PlaylistsUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D924F8], (uint64_t)&protocol witness table for PlaylistsUpdated);
}

uint64_t dispatch thunk of SearchClientProtocol.fetchSearchLandingShelfTileDescriptors()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 8) + *(_QWORD *)(a2 + 8));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE01E290;
  return v7(a1, a2);
}

uint64_t dispatch thunk of SearchClientProtocol.fetchSearchResults(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 16) + *(_QWORD *)(a4 + 16));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of SearchClientProtocol.fetchSearchSuggestions(term:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 24) + *(_QWORD *)(a5 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1CDFACD38;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of SearchClientProtocol.insertRecentSearchTerm(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SearchClientProtocol.deleteRecentSearchTerms(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 40) + *(_QWORD *)(a3 + 40));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD3C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SearchClientProtocol.deleteAllRecentSearchTerms(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 48) + *(_QWORD *)(a3 + 48));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of SearchClientProtocol.queryRecentSearchTerms(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 56) + *(_QWORD *)(a3 + 56));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFEA04C;
  return v9(a1, a2, a3);
}

uint64_t XPCStream.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t XPCStream.replyRequiredArg.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

SeymourClient::XPCStream __swiftcall XPCStream.init(name:replyRequiredArg:)(Swift::String name, Swift::String_optional replyRequiredArg)
{
  Swift::String_optional *v2;
  SeymourClient::XPCStream result;

  v2->value = name;
  v2[1] = replyRequiredArg;
  result.replyRequiredArg = replyRequiredArg;
  result.name = name;
  return result;
}

uint64_t destroy for XPCStream()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for XPCStream(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for XPCStream(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for XPCStream(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for XPCStream(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for XPCStream(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for XPCStream()
{
  return &type metadata for XPCStream;
}

BOOL static CellularDataRestrictedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CellularDataRestrictedState.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t CellularDataRestrictedState.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

void *static CellularDataRestrictedState.allCases.getter()
{
  return &unk_1E8B61588;
}

unint64_t sub_1CE01E534()
{
  unint64_t result;

  result = qword_1EFA5F7E8;
  if (!qword_1EFA5F7E8)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for CellularDataRestrictedState, &type metadata for CellularDataRestrictedState);
    atomic_store(result, (unint64_t *)&qword_1EFA5F7E8);
  }
  return result;
}

unint64_t sub_1CE01E57C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5F7F0;
  if (!qword_1EFA5F7F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F7F8);
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA5F7F0);
  }
  return result;
}

void sub_1CE01E5C8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E8B615B0;
}

uint64_t storeEnumTagSinglePayload for CellularDataRestrictedState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CE01E624 + 4 * byte_1CE0BEDD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CE01E658 + 4 * asc_1CE0BEDD0[v4]))();
}

uint64_t sub_1CE01E658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE01E660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE01E668);
  return result;
}

uint64_t sub_1CE01E674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE01E67CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CE01E680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE01E688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CellularDataRestrictedState()
{
  return &type metadata for CellularDataRestrictedState;
}

_QWORD *ContentAvailabilityClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  sub_1CDFB7C20();
  swift_retain();
  v8 = sub_1CE0B6788();
  type metadata accessor for EventHub();
  v9 = swift_allocObject();
  v10 = sub_1CE01EDB8(v8, 0, v9);
  type metadata accessor for ContentAvailabilityClient();
  v11 = (_QWORD *)swift_allocObject();
  v12 = sub_1CE01EE60(v6, v10, v11);

  swift_release_n();
  return v12;
}

uint64_t ContentAvailabilityClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFB154C(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CDFCB8DC);
}

uint64_t sub_1CE01E80C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;

  v2 = type metadata accessor for ContentAvailabilityUpdated();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v8 = sub_1CE0B4E80();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v4, a1, v8);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v4, v2, &protocol witness table for ContentAvailabilityUpdated, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_1CE01F104((uint64_t)v4);
  }
  return result;
}

uint64_t sub_1CE01E918(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t ObjectType;
  void (*v5)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v5 = *(void (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 8);
    v6 = sub_1CE0B5888();
    v5(a1, v6, &protocol witness table for AllowedContentRatingsUpdated, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1CE01E9C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD v7[2];

  v2 = *a1;
  v1 = a1[1];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v7[0] = v2;
    v7[1] = v1;
    v6 = *(void (**)(_QWORD *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    v6(v7, &type metadata for StorefrontLanguageUpdated, &protocol witness table for StorefrontLanguageUpdated, ObjectType, v4);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1CE01EA88()
{
  uint64_t result;
  uint64_t v1;
  uint64_t ObjectType;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v1 + 8))(ObjectType, &type metadata for SupportedDeviceChanged, &protocol witness table for SupportedDeviceChanged, ObjectType, v1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t ContentAvailabilityClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ContentAvailabilityClient.queryStorefrontLanguageCode()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  __int16 v7;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1870);
  v2._countAndFlagsBits = 0xD00000000000007FLL;
  v2._object = (void *)0x80000001CE0C9DF0;
  v3._object = (void *)0x80000001CE0C9EB0;
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v7 = 112;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24))(&v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v4);
}

uint64_t ContentAvailabilityClient.queryAccountContainsSupportedWatch()()
{
  return sub_1CE01EC50(0xD000000000000024, (void *)0x80000001CE0C9ED0, 113);
}

uint64_t sub_1CE01EC50(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0C9DF0;
  v8._countAndFlagsBits = 0xD00000000000007FLL;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v10 + 24))(&v13, MEMORY[0x1E0DEAFA0], MEMORY[0x1E0D96838], MEMORY[0x1E0D96840], ObjectType, v10);
}

uint64_t ContentAvailabilityClient.queryAccountContainsSupportedDevice()()
{
  return sub_1CE01EC50(0xD000000000000025, (void *)0x80000001CE0C9F00, 114);
}

uint64_t sub_1CE01ED58()
{
  return ContentAvailabilityClient.queryStorefrontLanguageCode()();
}

uint64_t sub_1CE01ED78()
{
  return ContentAvailabilityClient.queryAccountContainsSupportedWatch()();
}

uint64_t sub_1CE01ED98()
{
  return ContentAvailabilityClient.queryAccountContainsSupportedDevice()();
}

uint64_t sub_1CE01EDB8(uint64_t a1, char a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  _BYTE v10[24];
  ValueMetadata *v11;
  _UNKNOWN **v12;

  v5 = a2 & 1;
  v11 = &type metadata for DispatchTimerProvider;
  v12 = &protocol witness table for DispatchTimerProvider;
  sub_1CDFAC5C8((uint64_t)v10, a3 + 40);
  *(_QWORD *)(a3 + 16) = a1;
  *(_BYTE *)(a3 + 32) = v5;
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)(a3 + 24) = v6;
  v8 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a3 + 80) = MEMORY[0x1E0DEE9E0];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  *(_QWORD *)(a3 + 88) = v8;
  return a3;
}

_QWORD *sub_1CE01EE60(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;

  a3[2] = a1;
  a3[3] = &protocol witness table for XPCClient;
  a3[4] = &protocol witness table for XPCClient;
  a3[5] = a2;
  a3[6] = &protocol witness table for EventHub;
  ObjectType = swift_getObjectType();
  v14 = a1;
  v13 = 10;
  v6 = swift_allocObject();
  swift_weakInit();
  v7 = sub_1CE0B4E80();
  swift_retain();
  swift_retain();
  TransportDispatching.register<A>(event:handler:)(&v13, (uint64_t)sub_1CE01F0E4, v6, ObjectType, v7, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D92B00], MEMORY[0x1E0D92B08]);
  swift_release();
  v14 = a1;
  v13 = 9;
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = sub_1CE0B5888();
  TransportDispatching.register<A>(event:handler:)(&v13, (uint64_t)sub_1CE01F0EC, v8, ObjectType, v9, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95118], MEMORY[0x1E0D95120]);
  swift_release();
  v14 = a1;
  v13 = 12;
  v10 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v13, (uint64_t)sub_1CE01F0F4, v10, ObjectType, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D96790], MEMORY[0x1E0D96798]);
  swift_release();
  v14 = a1;
  v13 = 13;
  v11 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v13, (uint64_t)sub_1CE01F0FC, v11, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_release();
  return a3;
}

uint64_t method lookup function for ContentAvailabilityClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentAvailabilityClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE01F0C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE01F0E4(uint64_t a1)
{
  return sub_1CE01E80C(a1);
}

uint64_t sub_1CE01F0EC(uint64_t a1)
{
  return sub_1CE01E918(a1);
}

uint64_t sub_1CE01F0F4(uint64_t *a1)
{
  return sub_1CE01E9C8(a1);
}

uint64_t sub_1CE01F0FC()
{
  return sub_1CE01EA88();
}

uint64_t sub_1CE01F104(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContentAvailabilityUpdated();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t PaceMetric.applyingTimestampOffset(_:)()
{
  sub_1CE0B3F08();
  return sub_1CE0B3F14();
}

uint64_t sub_1CE01F184()
{
  sub_1CE0B3F08();
  return sub_1CE0B3F14();
}

void static AppAttentionLost.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AppAttentionLost()
{
  return &type metadata for AppAttentionLost;
}

uint64_t sub_1CE01F1EC()
{
  uint64_t v0;

  sub_1CDFB81CC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t destroy for AsyncLock()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AsyncLock(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for AsyncLock(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AsyncLock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1CE01F314(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1CE01F32C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

uint64_t dispatch thunk of AsyncLockable.lock.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AsyncLockable.lock.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AsyncLockable.lock.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1CE01F364(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFBFFD8(a1, *(unint64_t **)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *AdminClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for AdminClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *AdminClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE01F910(a1, v3, ObjectType, a2, a3);
}

uint64_t AdminClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t AdminClient.executeScoresTasks()()
{
  return sub_1CE01F51C(0xD000000000000014, (void *)0x80000001CE0C9FD0, 212);
}

uint64_t AdminClient.deleteLocalScores()()
{
  return sub_1CE01F51C(0xD000000000000013, (void *)0x80000001CE0C9FF0, 216);
}

uint64_t sub_1CE01F51C(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0C9F60;
  v8._countAndFlagsBits = 0xD000000000000062;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t AdminClient.pingServer(endpoint:)(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t ObjectType;
  char v10;
  __int16 v11;

  v2 = v1;
  if (qword_1ED8F1890 != -1)
    swift_once();
  v4 = sub_1CE0B6080();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED8F1870);
  v5._countAndFlagsBits = 0xD000000000000062;
  v5._object = (void *)0x80000001CE0C9F60;
  v6._object = (void *)0x80000001CE0CA010;
  v6._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v5, v6);
  v7 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v11 = 254;
  v10 = a1 & 1;
  return (*(uint64_t (**)(__int16 *, char *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v7 + 32))(&v11, &v10, MEMORY[0x1E0D93268], MEMORY[0x1E0DEA968], MEMORY[0x1E0D93250], MEMORY[0x1E0D93258], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v7);
}

uint64_t AdminClient.createRepresentativeDatabase()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  __int16 v4;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v4 = 253;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v1 + 8))(&v4, ObjectType, v1);
}

uint64_t AdminClient.requestPersistentStoreStatistics(requiredDataProtection:)(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  __int16 v11;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 255;
  v10 = a1;
  v5 = *(uint64_t (**)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F8D8);
  v7 = sub_1CE01F954();
  v8 = sub_1CE01F9B0();
  return v5(&v11, &v10, MEMORY[0x1E0DEB418], v6, MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], v7, v8, ObjectType, v3);
}

uint64_t sub_1CE01F814()
{
  return AdminClient.executeScoresTasks()();
}

uint64_t sub_1CE01F834()
{
  return AdminClient.deleteLocalScores()();
}

uint64_t sub_1CE01F854(unsigned __int8 a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t (*v5)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  __int16 v11;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 255;
  v10 = a1;
  v5 = *(uint64_t (**)(__int16 *, uint64_t *, _QWORD, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, uint64_t, uint64_t))(v3 + 32);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F8D8);
  v7 = sub_1CE01F954();
  v8 = sub_1CE01F9B0();
  return v5(&v11, &v10, MEMORY[0x1E0DEB418], v6, MEMORY[0x1E0D96900], MEMORY[0x1E0D96908], v7, v8, ObjectType, v3);
}

_QWORD *sub_1CE01F910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for AdminClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

unint64_t sub_1CE01F954()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EFA5F8E0;
  if (!qword_1EFA5F8E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F8D8);
    v2 = MEMORY[0x1E0D92780];
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96820], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5F8E0);
  }
  return result;
}

unint64_t sub_1CE01F9B0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EFA5F8E8;
  if (!qword_1EFA5F8E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFA5F8D8);
    v2 = sub_1CE01FA14();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D96828], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EFA5F8E8);
  }
  return result;
}

unint64_t sub_1CE01FA14()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA5F8F0;
  if (!qword_1EFA5F8F0)
  {
    v1 = sub_1CE0B4D9C();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D92788], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA5F8F0);
  }
  return result;
}

uint64_t method lookup function for AdminClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdminClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void *Data.compressed(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE01FB10(a1, a2, a3, (SEL *)&selRef_compressedDataUsingAlgorithm_error_);
}

void *Data.decompressed(using:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CE01FB10(a1, a2, a3, (SEL *)&selRef_decompressedDataUsingAlgorithm_error_);
}

void *sub_1CE01FB10(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = (void *)sub_1CE0B3D58();
  v11[0] = 0;
  v7 = objc_msgSend(v6, *a4, a1, v11);

  v8 = v11[0];
  if (v7)
  {
    v9 = (void *)sub_1CE0B3D64();

  }
  else
  {
    v9 = v8;
    sub_1CE0B3CC8();

    swift_willThrow();
  }
  return v9;
}

uint64_t CoachingEventStarted.coachingEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CoachingEventStarted.init(coachingEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static CoachingEventStarted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CoachingEventStarted(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CoachingEventStarted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CoachingEventStarted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE01FDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CoachingEventStarted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE01FE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4460();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CoachingEventStarted()
{
  uint64_t result;

  result = qword_1EFA5F9F0;
  if (!qword_1EFA5F9F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE01FEC0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4460();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MultiUserBeginActivityCancelled.activity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t MultiUserBeginActivityCancelled.init(activity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static MultiUserBeginActivityCancelled.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for MultiUserBeginActivityCancelled()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE01FFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for MultiUserBeginActivityCancelled()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE020000(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4CDC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t PersonalizationPrivacyPreferenceUpdated.init(preference:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t PersonalizationPrivacyPreferenceUpdated.preference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5A8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static PersonalizationPrivacyPreferenceUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for PersonalizationPrivacyPreferenceUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5A8C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for PersonalizationPrivacyPreferenceUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationPrivacyPreferenceUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE020250(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PersonalizationPrivacyPreferenceUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE020298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5A8C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for PersonalizationPrivacyPreferenceUpdated()
{
  uint64_t result;

  result = qword_1ED8F0E18;
  if (!qword_1ED8F0E18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE020314()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5A8C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t ScoreMetricUpdated.scoreMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4148();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ScoreMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ScoreMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ScoreMetricUpdated()
{
  uint64_t result;

  result = qword_1EFA5FB38;
  if (!qword_1EFA5FB38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ScoreMetricUpdated.init(scoreMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B4148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for ScoreMetricUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static ScoreMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for ScoreMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B4148();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ScoreMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4148();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B4148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B4148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B4148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ScoreMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B4148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoreMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE020734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B4148();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoreMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE0207C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B4148();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CE02083C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4148();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MindfulMinutesMetric.applyingTimestampOffset(_:)()
{
  sub_1CE0B5054();
  return sub_1CE0B506C();
}

uint64_t sub_1CE0208F0()
{
  sub_1CE0B5054();
  return sub_1CE0B506C();
}

uint64_t CatalogProgram.reference()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, unint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  int64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  int64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  _QWORD v104[3];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;

  v104[2] = a1;
  v120 = sub_1CE0B4244();
  v125 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v119 = (char *)v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1CE0B3CB0();
  MEMORY[0x1E0C80A78](v3);
  v104[1] = (char *)v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CE0B5E70();
  v124 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v118 = (char *)v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1CE0B3EF0();
  v123 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v116 = (char *)v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = sub_1CE0B49AC();
  v122 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v114 = (char *)v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_1CE0B5FC0();
  v121 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v112 = (char *)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CE0B40A0();
  v110 = *(_QWORD *)(v10 - 8);
  v111 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v109 = (char *)v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v108 = (char *)v104 - v13;
  v106 = v1;
  v14 = sub_1CE0B4658();
  v15 = *(_QWORD *)(v14 + 16);
  v105 = v5;
  if (v15)
  {
    v126 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCF9BC(0, v15, 0);
    result = sub_1CDFD0128(v14);
    v17 = result;
    v19 = v18;
    v21 = v20 & 1;
    v107 = v14 + 56;
    while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(_BYTE *)(v14 + 32))
    {
      if (((*(_QWORD *)(v107 + (((unint64_t)v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
        goto LABEL_55;
      if (*(_DWORD *)(v14 + 36) != (_DWORD)v19)
        goto LABEL_56;
      v23 = v110;
      v22 = v111;
      v24 = v108;
      (*(void (**)(char *, uint64_t, uint64_t))(v110 + 16))(v108, *(_QWORD *)(v14 + 48) + *(_QWORD *)(v110 + 72) * v17, v111);
      v25 = v109;
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v109, v24, v22);
      v26 = sub_1CE0B4094();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      v29 = v126;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CDFCF9BC(0, *(_QWORD *)(v29 + 16) + 1, 1);
        v29 = v126;
      }
      v31 = *(_QWORD *)(v29 + 16);
      v30 = *(_QWORD *)(v29 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_1CDFCF9BC(v30 > 1, v31 + 1, 1);
        v29 = v126;
      }
      *(_QWORD *)(v29 + 16) = v31 + 1;
      v32 = v29 + 16 * v31;
      *(_QWORD *)(v32 + 32) = v26;
      *(_QWORD *)(v32 + 40) = v28;
      result = sub_1CDFD01CC(v17, v19, v21 & 1, v14);
      v17 = result;
      v19 = v33;
      v21 = v34 & 1;
      if (!--v15)
      {
        v111 = v29;
        sub_1CDFCD5BC(result, v33, v34 & 1);
        swift_bridgeObjectRelease();
        v5 = v105;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v111 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v35 = sub_1CE0B46A0();
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v126 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v36, 0);
      v37 = v35 + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
      v38 = *(_QWORD *)(v121 + 72);
      v39 = *(void (**)(char *, unint64_t, uint64_t))(v121 + 16);
      do
      {
        v40 = v112;
        v41 = v113;
        v39(v112, v37, v113);
        v42 = sub_1CE0B5FB4();
        v44 = v43;
        (*(void (**)(char *, uint64_t))(v121 + 8))(v40, v41);
        v45 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v45 + 16) + 1, 1);
          v45 = v126;
        }
        v47 = *(_QWORD *)(v45 + 16);
        v46 = *(_QWORD *)(v45 + 24);
        if (v47 >= v46 >> 1)
        {
          sub_1CDFCF9BC(v46 > 1, v47 + 1, 1);
          v45 = v126;
        }
        *(_QWORD *)(v45 + 16) = v47 + 1;
        v48 = v45 + 16 * v47;
        *(_QWORD *)(v48 + 32) = v42;
        *(_QWORD *)(v48 + 40) = v44;
        v37 += v38;
        --v36;
      }
      while (v36);
      v121 = v45;
      swift_bridgeObjectRelease();
      v5 = v105;
    }
    else
    {
      swift_bridgeObjectRelease();
      v121 = MEMORY[0x1E0DEE9D8];
    }
    v49 = sub_1CE0B4640();
    v50 = *(_QWORD *)(v49 + 16);
    if (v50)
    {
      v126 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v50, 0);
      v51 = (*(unsigned __int8 *)(v122 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
      v113 = v49;
      v52 = v49 + v51;
      v53 = *(_QWORD *)(v122 + 72);
      v54 = *(void (**)(char *, unint64_t, uint64_t))(v122 + 16);
      do
      {
        v56 = v114;
        v55 = v115;
        v54(v114, v52, v115);
        v57 = sub_1CE0B491C();
        v59 = v58;
        (*(void (**)(char *, uint64_t))(v122 + 8))(v56, v55);
        v60 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v60 + 16) + 1, 1);
          v60 = v126;
        }
        v62 = *(_QWORD *)(v60 + 16);
        v61 = *(_QWORD *)(v60 + 24);
        if (v62 >= v61 >> 1)
        {
          sub_1CDFCF9BC(v61 > 1, v62 + 1, 1);
          v60 = v126;
        }
        *(_QWORD *)(v60 + 16) = v62 + 1;
        v63 = v60 + 16 * v62;
        *(_QWORD *)(v63 + 32) = v57;
        *(_QWORD *)(v63 + 40) = v59;
        v52 += v53;
        --v50;
      }
      while (v50);
      v115 = v60;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v115 = MEMORY[0x1E0DEE9D8];
    }
    v64 = sub_1CE0B464C();
    v65 = *(_QWORD *)(v64 + 16);
    if (v65)
    {
      v126 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v65, 0);
      v66 = *(unsigned __int8 *)(v123 + 80);
      v114 = (char *)v64;
      v67 = v64 + ((v66 + 32) & ~v66);
      v122 = *(_QWORD *)(v123 + 72);
      v68 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
      do
      {
        v69 = v116;
        v70 = v117;
        v68(v116, v67, v117);
        v71 = sub_1CE0B3EE4();
        v73 = v72;
        (*(void (**)(char *, uint64_t))(v123 + 8))(v69, v70);
        v74 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v74 + 16) + 1, 1);
          v74 = v126;
        }
        v76 = *(_QWORD *)(v74 + 16);
        v75 = *(_QWORD *)(v74 + 24);
        if (v76 >= v75 >> 1)
        {
          sub_1CDFCF9BC(v75 > 1, v76 + 1, 1);
          v74 = v126;
        }
        *(_QWORD *)(v74 + 16) = v76 + 1;
        v77 = v74 + 16 * v76;
        *(_QWORD *)(v77 + 32) = v71;
        *(_QWORD *)(v77 + 40) = v73;
        v67 += v122;
        --v65;
      }
      while (v65);
    }
    swift_bridgeObjectRelease();
    v78 = sub_1CE0B4694();
    v79 = *(_QWORD *)(v78 + 16);
    if (v79)
    {
      v126 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v79, 0);
      v80 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
      v117 = v78;
      v81 = v78 + v80;
      v82 = *(_QWORD *)(v124 + 72);
      v122 = *(_QWORD *)(v124 + 16);
      v123 = v82;
      do
      {
        v83 = v118;
        ((void (*)(char *, unint64_t, uint64_t))v122)(v118, v81, v5);
        v84 = sub_1CE0B5E10();
        v86 = v85;
        (*(void (**)(char *, uint64_t))(v124 + 8))(v83, v5);
        v87 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v87 + 16) + 1, 1);
          v87 = v126;
        }
        v89 = *(_QWORD *)(v87 + 16);
        v88 = *(_QWORD *)(v87 + 24);
        if (v89 >= v88 >> 1)
        {
          sub_1CDFCF9BC(v88 > 1, v89 + 1, 1);
          v87 = v126;
        }
        *(_QWORD *)(v87 + 16) = v89 + 1;
        v90 = v87 + 16 * v89;
        *(_QWORD *)(v90 + 32) = v84;
        *(_QWORD *)(v90 + 40) = v86;
        v81 += v123;
        --v79;
      }
      while (v79);
    }
    swift_bridgeObjectRelease();
    v91 = sub_1CE0B4688();
    v92 = *(_QWORD *)(v91 + 16);
    if (v92)
    {
      v126 = MEMORY[0x1E0DEE9D8];
      sub_1CDFCF9BC(0, v92, 0);
      v93 = v91 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
      v124 = *(_QWORD *)(v125 + 72);
      v94 = *(_QWORD *)(v125 + 16);
      v122 = v91;
      v123 = v94;
      do
      {
        v95 = v119;
        v96 = v120;
        ((void (*)(char *, unint64_t, uint64_t))v123)(v119, v93, v120);
        v97 = sub_1CE0B4238();
        v99 = v98;
        (*(void (**)(char *, uint64_t))(v125 + 8))(v95, v96);
        v100 = v126;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CDFCF9BC(0, *(_QWORD *)(v100 + 16) + 1, 1);
          v100 = v126;
        }
        v102 = *(_QWORD *)(v100 + 16);
        v101 = *(_QWORD *)(v100 + 24);
        if (v102 >= v101 >> 1)
        {
          sub_1CDFCF9BC(v101 > 1, v102 + 1, 1);
          v100 = v126;
        }
        *(_QWORD *)(v100 + 16) = v102 + 1;
        v103 = v100 + 16 * v102;
        *(_QWORD *)(v103 + 32) = v97;
        *(_QWORD *)(v103 + 40) = v99;
        v93 += v124;
        --v92;
      }
      while (v92);
    }
    swift_bridgeObjectRelease();
    sub_1CE0B4670();
    sub_1CE0B4664();
    sub_1CE0B4634();
    sub_1CE0B467C();
    return sub_1CE0B524C();
  }
  return result;
}

uint64_t ActivityRings.applyingTimestampOffset(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D928);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v13 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D930);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B4B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = sub_1CE0B41F0();
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v5, 1, 1, v10);
  v11(v3, 1, 1, v10);
  sub_1CE0B437C();
  sub_1CE0B43AC();
  sub_1CDFB13F8((uint64_t)v3, &qword_1EFA5D928);
  sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5D928);
  return sub_1CDFB13F8((uint64_t)v8, &qword_1EFA5D930);
}

uint64_t sub_1CE0214F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D928);
  v1 = MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v13 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D930);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1CE0B4B38();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = sub_1CE0B41F0();
  v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v5, 1, 1, v10);
  v11(v3, 1, 1, v10);
  sub_1CE0B437C();
  sub_1CE0B43AC();
  sub_1CDFB13F8((uint64_t)v3, &qword_1EFA5D928);
  sub_1CDFB13F8((uint64_t)v5, &qword_1EFA5D928);
  return sub_1CDFB13F8((uint64_t)v8, &qword_1EFA5D930);
}

BOOL static Feature.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1CE0216A0()
{
  return 0;
}

uint64_t sub_1CE0216AC()
{
  return 0;
}

void sub_1CE0216B8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1CE0216C4()
{
  sub_1CE024BC0();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0216EC()
{
  sub_1CE024BC0();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021714(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CE021750 + 4 * byte_1CE0BF100[a1]))(0xD000000000000010, 0x80000001CE0CA090);
}

uint64_t sub_1CE021750()
{
  uint64_t v0;

  return v0 + 11;
}

uint64_t sub_1CE021A28()
{
  sub_1CE0245A4();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021A50()
{
  sub_1CE0245A4();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021A78()
{
  sub_1CE024560();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021AA0()
{
  sub_1CE024560();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021AC8()
{
  sub_1CE024CD0();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021AF0()
{
  sub_1CE024CD0();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021B18()
{
  sub_1CE024EF0();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021B40()
{
  sub_1CE024EF0();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021B68()
{
  sub_1CE0247C4();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021B90()
{
  sub_1CE0247C4();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021BB8()
{
  sub_1CE02440C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021BE0()
{
  sub_1CE02440C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021C08()
{
  sub_1CE024B38();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021C30()
{
  sub_1CE024B38();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021C58()
{
  sub_1CE024E24();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021C80()
{
  sub_1CE024E24();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021CA8()
{
  sub_1CE024D14();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021CD0()
{
  sub_1CE024D14();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021CF8()
{
  sub_1CE024AB0();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021D20()
{
  sub_1CE024AB0();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021D50()
{
  unsigned __int8 *v0;

  return sub_1CE021714(*v0);
}

uint64_t sub_1CE021D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CE028BE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CE021D7C(_BYTE *a1@<X8>)
{
  *a1 = 43;
}

uint64_t sub_1CE021D88()
{
  sub_1CE024384();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021DB0()
{
  sub_1CE024384();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021DD8()
{
  sub_1CE024890();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021E00()
{
  sub_1CE024890();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021E28()
{
  sub_1CE024C48();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021E50()
{
  sub_1CE024C48();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021E78()
{
  sub_1CE024C04();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021EA0()
{
  sub_1CE024C04();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021EC8()
{
  sub_1CE024AF4();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021EF0()
{
  sub_1CE024AF4();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021F18()
{
  sub_1CE02495C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021F40()
{
  sub_1CE02495C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021F68()
{
  sub_1CE02473C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021F90()
{
  sub_1CE02473C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE021FB8()
{
  sub_1CE024B7C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE021FE0()
{
  sub_1CE024B7C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022008()
{
  sub_1CE0246F8();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE022030()
{
  sub_1CE0246F8();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022058()
{
  sub_1CE024494();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE022080()
{
  sub_1CE024494();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0220A8()
{
  sub_1CE024A6C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0220D0()
{
  sub_1CE024A6C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0220F8()
{
  sub_1CE024C8C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE022120()
{
  sub_1CE024C8C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022148()
{
  sub_1CE0249E4();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE022170()
{
  sub_1CE0249E4();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022198()
{
  sub_1CE0243C8();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0221C0()
{
  sub_1CE0243C8();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0221E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1CE022214()
{
  sub_1CE024918();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02223C()
{
  sub_1CE024918();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022264()
{
  sub_1CE0248D4();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02228C()
{
  sub_1CE0248D4();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0222B4()
{
  sub_1CE024DE0();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0222DC()
{
  sub_1CE024DE0();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022304()
{
  sub_1CE024EAC();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02232C()
{
  sub_1CE024EAC();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022354()
{
  sub_1CE0244D8();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02237C()
{
  sub_1CE0244D8();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0223A4()
{
  sub_1CE024808();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0223CC()
{
  sub_1CE024808();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0223F4()
{
  sub_1CE0249A0();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02241C()
{
  sub_1CE0249A0();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022444()
{
  sub_1CE024E68();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02246C()
{
  sub_1CE024E68();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022494()
{
  sub_1CE02484C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0224BC()
{
  sub_1CE02484C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0224E4()
{
  sub_1CE024D9C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02250C()
{
  sub_1CE024D9C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022534()
{
  sub_1CE024780();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02255C()
{
  sub_1CE024780();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022584()
{
  sub_1CE024D58();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0225AC()
{
  sub_1CE024D58();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0225D4()
{
  sub_1CE024A28();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0225FC()
{
  sub_1CE024A28();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022624()
{
  sub_1CE024670();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02264C()
{
  sub_1CE024670();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022674()
{
  sub_1CE02462C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02269C()
{
  sub_1CE02462C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0226C4()
{
  sub_1CE02451C();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0226EC()
{
  sub_1CE02451C();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022714()
{
  sub_1CE0245E8();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02273C()
{
  sub_1CE0245E8();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE022764()
{
  sub_1CE024450();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE02278C()
{
  sub_1CE024450();
  return sub_1CE0B6DE8();
}

uint64_t sub_1CE0227B4()
{
  sub_1CE0246B4();
  return sub_1CE0B6DDC();
}

uint64_t sub_1CE0227DC()
{
  sub_1CE0246B4();
  return sub_1CE0B6DE8();
}

void Feature.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FB70);
  v177 = *(_QWORD *)(v3 - 8);
  v178 = v3;
  MEMORY[0x1E0C80A78](v3);
  v176 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FB78);
  v174 = *(_QWORD *)(v5 - 8);
  v175 = v5;
  MEMORY[0x1E0C80A78](v5);
  v173 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FB80);
  v171 = *(_QWORD *)(v7 - 8);
  v172 = v7;
  MEMORY[0x1E0C80A78](v7);
  v170 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FB88);
  v168 = *(_QWORD *)(v9 - 8);
  v169 = v9;
  MEMORY[0x1E0C80A78](v9);
  v167 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FB90);
  v165 = *(_QWORD *)(v11 - 8);
  v166 = v11;
  MEMORY[0x1E0C80A78](v11);
  v164 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FB98);
  v162 = *(_QWORD *)(v13 - 8);
  v163 = v13;
  MEMORY[0x1E0C80A78](v13);
  v161 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBA0);
  v159 = *(_QWORD *)(v160 - 8);
  MEMORY[0x1E0C80A78](v160);
  v158 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBA8);
  v156 = *(_QWORD *)(v157 - 8);
  MEMORY[0x1E0C80A78](v157);
  v155 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBB0);
  v153 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v154);
  v152 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBB8);
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v149 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBC0);
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v146 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBC8);
  v144 = *(_QWORD *)(v145 - 8);
  MEMORY[0x1E0C80A78](v145);
  v143 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBD0);
  v141 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v140 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBD8);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v137 = (char *)&v54 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBE0);
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v134 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBE8);
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v131 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBF0);
  v129 = *(_QWORD *)(v130 - 8);
  MEMORY[0x1E0C80A78](v130);
  v128 = (char *)&v54 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FBF8);
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v125 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC00);
  v123 = *(_QWORD *)(v124 - 8);
  MEMORY[0x1E0C80A78](v124);
  v122 = (char *)&v54 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC08);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v119 = (char *)&v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC10);
  v117 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v116 = (char *)&v54 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC18);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v113 = (char *)&v54 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC20);
  v111 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v110 = (char *)&v54 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC28);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC30);
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v104 = (char *)&v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC38);
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v101 = (char *)&v54 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC40);
  v99 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v98 = (char *)&v54 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC48);
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)&v54 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC50);
  v93 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v92 = (char *)&v54 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC58);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)&v54 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC60);
  v87 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v86 = (char *)&v54 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC68);
  v84 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v83 = (char *)&v54 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC70);
  v81 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v80 = (char *)&v54 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC78);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v77 = (char *)&v54 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC80);
  v75 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v74 = (char *)&v54 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC88);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v71 = (char *)&v54 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC90);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)&v54 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FC98);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v65 = (char *)&v54 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FCA0);
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)&v54 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FCA8);
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (char *)&v54 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FCB0);
  v57 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v56 = (char *)&v54 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FCB8);
  v54 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FCC0);
  MEMORY[0x1E0C80A78](v50);
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FCC8);
  v179 = *(_QWORD *)(v181 - 8);
  MEMORY[0x1E0C80A78](v181);
  v52 = (char *)&v54 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1CE024384();
  v180 = v52;
  sub_1CE0B6DD0();
  __asm { BR              X9 }
}

uint64_t sub_1CE0235C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 65) = 0;
  sub_1CE024EF0();
  v4 = *(_QWORD *)(v3 - 104);
  v5 = *(_QWORD *)(v3 - 96);
  sub_1CE0B6BFC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v4, v5);
}

unint64_t sub_1CE024384()
{
  unint64_t result;

  result = qword_1EFA5FCD0;
  if (!qword_1EFA5FCD0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1654, &type metadata for Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FCD0);
  }
  return result;
}

unint64_t sub_1CE0243C8()
{
  unint64_t result;

  result = qword_1EFA5FCD8;
  if (!qword_1EFA5FCD8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1604, &type metadata for Feature.PersonalizationPrivacyConsentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FCD8);
  }
  return result;
}

unint64_t sub_1CE02440C()
{
  unint64_t result;

  result = qword_1EFA5FCE0;
  if (!qword_1EFA5FCE0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C15B4, &type metadata for Feature.AppleAccountUpgradingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FCE0);
  }
  return result;
}

unint64_t sub_1CE024450()
{
  unint64_t result;

  result = qword_1EFA5FCE8;
  if (!qword_1EFA5FCE8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1564, &type metadata for Feature.UserNotificationAlertingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FCE8);
  }
  return result;
}

unint64_t sub_1CE024494()
{
  unint64_t result;

  result = qword_1EFA5FCF0;
  if (!qword_1EFA5FCF0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1514, &type metadata for Feature.ImprovedAnalyticsConsentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FCF0);
  }
  return result;
}

unint64_t sub_1CE0244D8()
{
  unint64_t result;

  result = qword_1EFA5FCF8;
  if (!qword_1EFA5FCF8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C14C4, &type metadata for Feature.RemoteBrowsingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FCF8);
  }
  return result;
}

unint64_t sub_1CE02451C()
{
  unint64_t result;

  result = qword_1EFA5FD00;
  if (!qword_1EFA5FD00)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1474, &type metadata for Feature.TrainerTipsObfuscationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD00);
  }
  return result;
}

unint64_t sub_1CE024560()
{
  unint64_t result;

  result = qword_1EFA5FD08;
  if (!qword_1EFA5FD08)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1424, &type metadata for Feature.AchievementsEvaluatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD08);
  }
  return result;
}

unint64_t sub_1CE0245A4()
{
  unint64_t result;

  result = qword_1EFA5FD10;
  if (!qword_1EFA5FD10)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C13D4, &type metadata for Feature.AchievementsArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD10);
  }
  return result;
}

unint64_t sub_1CE0245E8()
{
  unint64_t result;

  result = qword_1EFA5FD18;
  if (!qword_1EFA5FD18)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1384, &type metadata for Feature.TrainerTipsQuarantineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD18);
  }
  return result;
}

unint64_t sub_1CE02462C()
{
  unint64_t result;

  result = qword_1EFA5FD20;
  if (!qword_1EFA5FD20)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1334, &type metadata for Feature.TipsUpsellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD20);
  }
  return result;
}

unint64_t sub_1CE024670()
{
  unint64_t result;

  result = qword_1EFA5FD28;
  if (!qword_1EFA5FD28)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C12E4, &type metadata for Feature.TipsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD28);
  }
  return result;
}

unint64_t sub_1CE0246B4()
{
  unint64_t result;

  result = qword_1EFA5FD30;
  if (!qword_1EFA5FD30)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1294, &type metadata for Feature.VideoAssetDownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD30);
  }
  return result;
}

unint64_t sub_1CE0246F8()
{
  unint64_t result;

  result = qword_1EFA5FD38;
  if (!qword_1EFA5FD38)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1244, &type metadata for Feature.HealthKitBehaviorQueryingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD38);
  }
  return result;
}

unint64_t sub_1CE02473C()
{
  unint64_t result;

  result = qword_1EFA5FD40;
  if (!qword_1EFA5FD40)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C11F4, &type metadata for Feature.HeadlessDistributedSessionHostingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD40);
  }
  return result;
}

unint64_t sub_1CE024780()
{
  unint64_t result;

  result = qword_1EFA5FD48;
  if (!qword_1EFA5FD48)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C11A4, &type metadata for Feature.StandaloneMeditationArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD48);
  }
  return result;
}

unint64_t sub_1CE0247C4()
{
  unint64_t result;

  result = qword_1EFA5FD50;
  if (!qword_1EFA5FD50)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1154, &type metadata for Feature.AppRequirementCheckingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD50);
  }
  return result;
}

unint64_t sub_1CE024808()
{
  unint64_t result;

  result = qword_1EFA5FD58;
  if (!qword_1EFA5FD58)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1104, &type metadata for Feature.ServerSyncingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD58);
  }
  return result;
}

unint64_t sub_1CE02484C()
{
  unint64_t result;

  result = qword_1EFA5FD60;
  if (!qword_1EFA5FD60)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C10B4, &type metadata for Feature.StandaloneHealthKitMindfulSavingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD60);
  }
  return result;
}

unint64_t sub_1CE024890()
{
  unint64_t result;

  result = qword_1EFA5FD68;
  if (!qword_1EFA5FD68)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1064, &type metadata for Feature.ContactsProvidingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD68);
  }
  return result;
}

unint64_t sub_1CE0248D4()
{
  unint64_t result;

  result = qword_1EFA5FD70;
  if (!qword_1EFA5FD70)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C1014, &type metadata for Feature.PlaybackTimeJumpPreventingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD70);
  }
  return result;
}

unint64_t sub_1CE024918()
{
  unint64_t result;

  result = qword_1EFA5FD78;
  if (!qword_1EFA5FD78)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0FC4, &type metadata for Feature.PictureInPicturePresentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD78);
  }
  return result;
}

unint64_t sub_1CE02495C()
{
  unint64_t result;

  result = qword_1EFA5FD80;
  if (!qword_1EFA5FD80)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0F74, &type metadata for Feature.EngagementNotificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD80);
  }
  return result;
}

unint64_t sub_1CE0249A0()
{
  unint64_t result;

  result = qword_1EFA5FD88;
  if (!qword_1EFA5FD88)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0F24, &type metadata for Feature.SessionPassiveBluetoothScanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD88);
  }
  return result;
}

unint64_t sub_1CE0249E4()
{
  unint64_t result;

  result = qword_1EFA5FD90;
  if (!qword_1EFA5FD90)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0ED4, &type metadata for Feature.MetricIdentifiersUpdatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD90);
  }
  return result;
}

unint64_t sub_1CE024A28()
{
  unint64_t result;

  result = qword_1EFA5FD98;
  if (!qword_1EFA5FD98)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0E84, &type metadata for Feature.StreamingQualityReportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FD98);
  }
  return result;
}

unint64_t sub_1CE024A6C()
{
  unint64_t result;

  result = qword_1EFA5FDA0;
  if (!qword_1EFA5FDA0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0E34, &type metadata for Feature.LocalStandaloneSessionSupportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDA0);
  }
  return result;
}

unint64_t sub_1CE024AB0()
{
  unint64_t result;

  result = qword_1EFA5FDA8;
  if (!qword_1EFA5FDA8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0DE4, &type metadata for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDA8);
  }
  return result;
}

unint64_t sub_1CE024AF4()
{
  unint64_t result;

  result = qword_1EFA5FDB0;
  if (!qword_1EFA5FDB0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0D94, &type metadata for Feature.EngagementEventReportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDB0);
  }
  return result;
}

unint64_t sub_1CE024B38()
{
  unint64_t result;

  result = qword_1EFA5FDB8;
  if (!qword_1EFA5FDB8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0D44, &type metadata for Feature.ApplicationInstallationCheckRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDB8);
  }
  return result;
}

unint64_t sub_1CE024B7C()
{
  unint64_t result;

  result = qword_1EFA5FDC0;
  if (!qword_1EFA5FDC0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0CF4, &type metadata for Feature.HealthDatabaseWorkoutQueryingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDC0);
  }
  return result;
}

unint64_t sub_1CE024BC0()
{
  unint64_t result;

  result = qword_1EFA5FDC8;
  if (!qword_1EFA5FDC8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0CA4, &type metadata for Feature.AccountDeviceObservingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDC8);
  }
  return result;
}

unint64_t sub_1CE024C04()
{
  unint64_t result;

  result = qword_1EFA5FDD0;
  if (!qword_1EFA5FDD0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0C54, &type metadata for Feature.EngagementBadgingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDD0);
  }
  return result;
}

unint64_t sub_1CE024C48()
{
  unint64_t result;

  result = qword_1EFA5FDD8;
  if (!qword_1EFA5FDD8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0C04, &type metadata for Feature.ContentAvailabilityUnrestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDD8);
  }
  return result;
}

unint64_t sub_1CE024C8C()
{
  unint64_t result;

  result = qword_1EFA5FDE0;
  if (!qword_1EFA5FDE0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0BB4, &type metadata for Feature.LocalSupportedDeviceRegistryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDE0);
  }
  return result;
}

unint64_t sub_1CE024CD0()
{
  unint64_t result;

  result = qword_1EFA5FDE8;
  if (!qword_1EFA5FDE8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0B64, &type metadata for Feature.AnonymousMetricsLoggingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDE8);
  }
  return result;
}

unint64_t sub_1CE024D14()
{
  unint64_t result;

  result = qword_1EFA5FDF0;
  if (!qword_1EFA5FDF0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0B14, &type metadata for Feature.BackgroundCatalogSyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDF0);
  }
  return result;
}

unint64_t sub_1CE024D58()
{
  unint64_t result;

  result = qword_1EFA5FDF8;
  if (!qword_1EFA5FDF8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0AC4, &type metadata for Feature.StandaloneWorkoutArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FDF8);
  }
  return result;
}

unint64_t sub_1CE024D9C()
{
  unint64_t result;

  result = qword_1EFA5FE00;
  if (!qword_1EFA5FE00)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0A74, &type metadata for Feature.StandaloneHealthKitWorkoutSavingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FE00);
  }
  return result;
}

unint64_t sub_1CE024DE0()
{
  unint64_t result;

  result = qword_1EFA5FE08;
  if (!qword_1EFA5FE08)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0A24, &type metadata for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FE08);
  }
  return result;
}

unint64_t sub_1CE024E24()
{
  unint64_t result;

  result = qword_1EFA5FE10;
  if (!qword_1EFA5FE10)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C09D4, &type metadata for Feature.AssetProgressDeviceBroadcastingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FE10);
  }
  return result;
}

unint64_t sub_1CE024E68()
{
  unint64_t result;

  result = qword_1EFA5FE18;
  if (!qword_1EFA5FE18)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0984, &type metadata for Feature.SessionTerminatingOnAppExitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FE18);
  }
  return result;
}

unint64_t sub_1CE024EAC()
{
  unint64_t result;

  result = qword_1EFA5FE20;
  if (!qword_1EFA5FE20)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0934, &type metadata for Feature.ReactiveRecommendationEvaluationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FE20);
  }
  return result;
}

unint64_t sub_1CE024EF0()
{
  unint64_t result;

  result = qword_1EFA5FE28;
  if (!qword_1EFA5FE28)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C08E4, &type metadata for Feature.AppForegroundingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FE28);
  }
  return result;
}

uint64_t Feature.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD v62[5];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  _QWORD *v189;
  uint64_t v190;

  v185 = a2;
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE30);
  v144 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v183 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE38);
  v142 = *(_QWORD *)(v143 - 8);
  MEMORY[0x1E0C80A78](v143);
  v182 = (char *)v62 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE40);
  v140 = *(_QWORD *)(v141 - 8);
  MEMORY[0x1E0C80A78](v141);
  v181 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE48);
  v138 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v180 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE50);
  v136 = *(_QWORD *)(v137 - 8);
  MEMORY[0x1E0C80A78](v137);
  v179 = (char *)v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE58);
  v134 = *(_QWORD *)(v135 - 8);
  MEMORY[0x1E0C80A78](v135);
  v178 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE60);
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v177 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE68);
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v176 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE70);
  v128 = *(_QWORD *)(v129 - 8);
  MEMORY[0x1E0C80A78](v129);
  v175 = (char *)v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE78);
  v126 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v174 = (char *)v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE80);
  v124 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v173 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE88);
  v122 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v172 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE90);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v171 = (char *)v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FE98);
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v170 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEA0);
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v169 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEA8);
  v114 = *(_QWORD *)(v115 - 8);
  MEMORY[0x1E0C80A78](v115);
  v168 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEB0);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v167 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEB8);
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v166 = (char *)v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEC0);
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v165 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEC8);
  v106 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v164 = (char *)v62 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FED0);
  v104 = *(_QWORD *)(v105 - 8);
  MEMORY[0x1E0C80A78](v105);
  v163 = (char *)v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FED8);
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v162 = (char *)v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEE0);
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v161 = (char *)v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEE8);
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v160 = (char *)v62 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEF0);
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v159 = (char *)v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FEF8);
  v94 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v158 = (char *)v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF00);
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v157 = (char *)v62 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF08);
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v156 = (char *)v62 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF10);
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v188 = (char *)v62 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF18);
  v84 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v154 = (char *)v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF20);
  v85 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v187 = (char *)v62 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF28);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v155 = (char *)v62 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF30);
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x1E0C80A78](v81);
  v186 = (char *)v62 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF38);
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v153 = (char *)v62 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF40);
  v76 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v152 = (char *)v62 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF48);
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v151 = (char *)v62 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF50);
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v150 = (char *)v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF58);
  v70 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v149 = (char *)v62 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF60);
  v68 = *(_QWORD *)(v69 - 8);
  MEMORY[0x1E0C80A78](v69);
  v148 = (char *)v62 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF68);
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v147 = (char *)v62 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF70);
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v146 = (char *)v62 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF78);
  v62[4] = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v145 = (char *)v62 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF80);
  v46 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v48 = (char *)v62 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF88);
  v50 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v52 = (char *)v62 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = a1[3];
  v189 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v53);
  sub_1CE024384();
  v54 = v190;
  sub_1CE0B6DC4();
  if (!v54)
  {
    v62[3] = v48;
    v62[1] = v46;
    v62[2] = v45;
    v55 = v50;
    v190 = v49;
    v56 = sub_1CE0B6BF0();
    if (*(_QWORD *)(v56 + 16) == 1)
    {
      v62[0] = v56;
      __asm { BR              X9 }
    }
    v57 = sub_1CE0B6A40();
    swift_allocError();
    v59 = v58;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5FF90);
    *v59 = &type metadata for Feature;
    v60 = v190;
    sub_1CE0B6BE4();
    sub_1CE0B6A34();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v59, *MEMORY[0x1E0DEC450], v57);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v52, v60);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v189);
}

uint64_t sub_1CE026DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Feature.init(from:)(a1, a2);
}

void sub_1CE026DF4(_QWORD *a1)
{
  Feature.encode(to:)(a1);
}

uint64_t Feature.hash(into:)()
{
  return sub_1CE0B6D40();
}

uint64_t Feature.hashValue.getter()
{
  sub_1CE0B6D34();
  sub_1CE0B6D40();
  return sub_1CE0B6D64();
}

unint64_t sub_1CE026E78()
{
  unint64_t result;

  result = qword_1ED8F01D8;
  if (!qword_1ED8F01D8)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for Feature, &type metadata for Feature);
    atomic_store(result, (unint64_t *)&qword_1ED8F01D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Feature()
{
  return &type metadata for Feature;
}

uint64_t _s13SeymourClient7FeatureOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xD6)
    goto LABEL_17;
  if (a2 + 42 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 42) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 42;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 42;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 42;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x2B;
  v8 = v6 - 43;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13SeymourClient7FeatureOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 42 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 42) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xD6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xD5)
    return ((uint64_t (*)(void))((char *)&loc_1CE026FB0 + 4 * byte_1CE0BF1DD[v4]))();
  *a1 = a2 + 42;
  return ((uint64_t (*)(void))((char *)sub_1CE026FE4 + 4 * byte_1CE0BF1D8[v4]))();
}

uint64_t sub_1CE026FE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE026FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CE026FF4);
  return result;
}

uint64_t sub_1CE027000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CE027008);
  *(_BYTE *)result = a2 + 42;
  return result;
}

uint64_t sub_1CE02700C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CE027014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Feature.CodingKeys()
{
  return &type metadata for Feature.CodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AppForegroundingCodingKeys()
{
  return &type metadata for Feature.AppForegroundingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ReactiveRecommendationEvaluationCodingKeys()
{
  return &type metadata for Feature.ReactiveRecommendationEvaluationCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.SessionTerminatingOnAppExitCodingKeys()
{
  return &type metadata for Feature.SessionTerminatingOnAppExitCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AssetProgressDeviceBroadcastingCodingKeys()
{
  return &type metadata for Feature.AssetProgressDeviceBroadcastingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys()
{
  return &type metadata for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneHealthKitWorkoutSavingCodingKeys()
{
  return &type metadata for Feature.StandaloneHealthKitWorkoutSavingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneWorkoutArchivingCodingKeys()
{
  return &type metadata for Feature.StandaloneWorkoutArchivingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.BackgroundCatalogSyncCodingKeys()
{
  return &type metadata for Feature.BackgroundCatalogSyncCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AnonymousMetricsLoggingCodingKeys()
{
  return &type metadata for Feature.AnonymousMetricsLoggingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.LocalSupportedDeviceRegistryCodingKeys()
{
  return &type metadata for Feature.LocalSupportedDeviceRegistryCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ContentAvailabilityUnrestrictedCodingKeys()
{
  return &type metadata for Feature.ContentAvailabilityUnrestrictedCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.EngagementBadgingCodingKeys()
{
  return &type metadata for Feature.EngagementBadgingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AccountDeviceObservingCodingKeys()
{
  return &type metadata for Feature.AccountDeviceObservingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.HealthDatabaseWorkoutQueryingCodingKeys()
{
  return &type metadata for Feature.HealthDatabaseWorkoutQueryingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ApplicationInstallationCheckRequiredCodingKeys()
{
  return &type metadata for Feature.ApplicationInstallationCheckRequiredCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.EngagementEventReportingCodingKeys()
{
  return &type metadata for Feature.EngagementEventReportingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys()
{
  return &type metadata for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.LocalStandaloneSessionSupportingCodingKeys()
{
  return &type metadata for Feature.LocalStandaloneSessionSupportingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StreamingQualityReportingCodingKeys()
{
  return &type metadata for Feature.StreamingQualityReportingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.MetricIdentifiersUpdatingCodingKeys()
{
  return &type metadata for Feature.MetricIdentifiersUpdatingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.SessionPassiveBluetoothScanningCodingKeys()
{
  return &type metadata for Feature.SessionPassiveBluetoothScanningCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.EngagementNotificationsCodingKeys()
{
  return &type metadata for Feature.EngagementNotificationsCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PictureInPicturePresentingCodingKeys()
{
  return &type metadata for Feature.PictureInPicturePresentingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PlaybackTimeJumpPreventingCodingKeys()
{
  return &type metadata for Feature.PlaybackTimeJumpPreventingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ContactsProvidingCodingKeys()
{
  return &type metadata for Feature.ContactsProvidingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneHealthKitMindfulSavingCodingKeys()
{
  return &type metadata for Feature.StandaloneHealthKitMindfulSavingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ServerSyncingCodingKeys()
{
  return &type metadata for Feature.ServerSyncingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AppRequirementCheckingCodingKeys()
{
  return &type metadata for Feature.AppRequirementCheckingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.StandaloneMeditationArchivingCodingKeys()
{
  return &type metadata for Feature.StandaloneMeditationArchivingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.HeadlessDistributedSessionHostingCodingKeys()
{
  return &type metadata for Feature.HeadlessDistributedSessionHostingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.HealthKitBehaviorQueryingCodingKeys()
{
  return &type metadata for Feature.HealthKitBehaviorQueryingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.VideoAssetDownloadingCodingKeys()
{
  return &type metadata for Feature.VideoAssetDownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TipsCodingKeys()
{
  return &type metadata for Feature.TipsCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TipsUpsellCodingKeys()
{
  return &type metadata for Feature.TipsUpsellCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TrainerTipsQuarantineCodingKeys()
{
  return &type metadata for Feature.TrainerTipsQuarantineCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AchievementsArchivingCodingKeys()
{
  return &type metadata for Feature.AchievementsArchivingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AchievementsEvaluatingCodingKeys()
{
  return &type metadata for Feature.AchievementsEvaluatingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.TrainerTipsObfuscationCodingKeys()
{
  return &type metadata for Feature.TrainerTipsObfuscationCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.RemoteBrowsingCodingKeys()
{
  return &type metadata for Feature.RemoteBrowsingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.ImprovedAnalyticsConsentingCodingKeys()
{
  return &type metadata for Feature.ImprovedAnalyticsConsentingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.UserNotificationAlertingCodingKeys()
{
  return &type metadata for Feature.UserNotificationAlertingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.AppleAccountUpgradingCodingKeys()
{
  return &type metadata for Feature.AppleAccountUpgradingCodingKeys;
}

ValueMetadata *type metadata accessor for Feature.PersonalizationPrivacyConsentingCodingKeys()
{
  return &type metadata for Feature.PersonalizationPrivacyConsentingCodingKeys;
}

unint64_t sub_1CE0272E4()
{
  unint64_t result;

  result = qword_1EFA5FF98;
  if (!qword_1EFA5FF98)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C08BC, &type metadata for Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FF98);
  }
  return result;
}

unint64_t sub_1CE02732C()
{
  unint64_t result;

  result = qword_1EFA5FFA0;
  if (!qword_1EFA5FFA0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C07DC, &type metadata for Feature.AppForegroundingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFA0);
  }
  return result;
}

unint64_t sub_1CE027374()
{
  unint64_t result;

  result = qword_1EFA5FFA8;
  if (!qword_1EFA5FFA8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0804, &type metadata for Feature.AppForegroundingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFA8);
  }
  return result;
}

unint64_t sub_1CE0273BC()
{
  unint64_t result;

  result = qword_1EFA5FFB0;
  if (!qword_1EFA5FFB0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C078C, &type metadata for Feature.ReactiveRecommendationEvaluationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFB0);
  }
  return result;
}

unint64_t sub_1CE027404()
{
  unint64_t result;

  result = qword_1EFA5FFB8;
  if (!qword_1EFA5FFB8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C07B4, &type metadata for Feature.ReactiveRecommendationEvaluationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFB8);
  }
  return result;
}

unint64_t sub_1CE02744C()
{
  unint64_t result;

  result = qword_1EFA5FFC0;
  if (!qword_1EFA5FFC0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C073C, &type metadata for Feature.SessionTerminatingOnAppExitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFC0);
  }
  return result;
}

unint64_t sub_1CE027494()
{
  unint64_t result;

  result = qword_1EFA5FFC8;
  if (!qword_1EFA5FFC8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0764, &type metadata for Feature.SessionTerminatingOnAppExitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFC8);
  }
  return result;
}

unint64_t sub_1CE0274DC()
{
  unint64_t result;

  result = qword_1EFA5FFD0;
  if (!qword_1EFA5FFD0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C06EC, &type metadata for Feature.AssetProgressDeviceBroadcastingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFD0);
  }
  return result;
}

unint64_t sub_1CE027524()
{
  unint64_t result;

  result = qword_1EFA5FFD8;
  if (!qword_1EFA5FFD8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0714, &type metadata for Feature.AssetProgressDeviceBroadcastingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFD8);
  }
  return result;
}

unint64_t sub_1CE02756C()
{
  unint64_t result;

  result = qword_1EFA5FFE0;
  if (!qword_1EFA5FFE0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C069C, &type metadata for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFE0);
  }
  return result;
}

unint64_t sub_1CE0275B4()
{
  unint64_t result;

  result = qword_1EFA5FFE8;
  if (!qword_1EFA5FFE8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C06C4, &type metadata for Feature.PrefetchRecentCatalogWorkoutAssetBundlesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFE8);
  }
  return result;
}

unint64_t sub_1CE0275FC()
{
  unint64_t result;

  result = qword_1EFA5FFF0;
  if (!qword_1EFA5FFF0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C064C, &type metadata for Feature.StandaloneHealthKitWorkoutSavingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFF0);
  }
  return result;
}

unint64_t sub_1CE027644()
{
  unint64_t result;

  result = qword_1EFA5FFF8;
  if (!qword_1EFA5FFF8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0674, &type metadata for Feature.StandaloneHealthKitWorkoutSavingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA5FFF8);
  }
  return result;
}

unint64_t sub_1CE02768C()
{
  unint64_t result;

  result = qword_1EFA60000;
  if (!qword_1EFA60000)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C05FC, &type metadata for Feature.StandaloneWorkoutArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60000);
  }
  return result;
}

unint64_t sub_1CE0276D4()
{
  unint64_t result;

  result = qword_1EFA60008;
  if (!qword_1EFA60008)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0624, &type metadata for Feature.StandaloneWorkoutArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60008);
  }
  return result;
}

unint64_t sub_1CE02771C()
{
  unint64_t result;

  result = qword_1EFA60010;
  if (!qword_1EFA60010)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C05AC, &type metadata for Feature.BackgroundCatalogSyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60010);
  }
  return result;
}

unint64_t sub_1CE027764()
{
  unint64_t result;

  result = qword_1EFA60018;
  if (!qword_1EFA60018)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C05D4, &type metadata for Feature.BackgroundCatalogSyncCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60018);
  }
  return result;
}

unint64_t sub_1CE0277AC()
{
  unint64_t result;

  result = qword_1EFA60020;
  if (!qword_1EFA60020)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C055C, &type metadata for Feature.AnonymousMetricsLoggingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60020);
  }
  return result;
}

unint64_t sub_1CE0277F4()
{
  unint64_t result;

  result = qword_1EFA60028;
  if (!qword_1EFA60028)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0584, &type metadata for Feature.AnonymousMetricsLoggingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60028);
  }
  return result;
}

unint64_t sub_1CE02783C()
{
  unint64_t result;

  result = qword_1EFA60030;
  if (!qword_1EFA60030)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C050C, &type metadata for Feature.LocalSupportedDeviceRegistryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60030);
  }
  return result;
}

unint64_t sub_1CE027884()
{
  unint64_t result;

  result = qword_1EFA60038;
  if (!qword_1EFA60038)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0534, &type metadata for Feature.LocalSupportedDeviceRegistryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60038);
  }
  return result;
}

unint64_t sub_1CE0278CC()
{
  unint64_t result;

  result = qword_1EFA60040;
  if (!qword_1EFA60040)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C04BC, &type metadata for Feature.ContentAvailabilityUnrestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60040);
  }
  return result;
}

unint64_t sub_1CE027914()
{
  unint64_t result;

  result = qword_1EFA60048;
  if (!qword_1EFA60048)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C04E4, &type metadata for Feature.ContentAvailabilityUnrestrictedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60048);
  }
  return result;
}

unint64_t sub_1CE02795C()
{
  unint64_t result;

  result = qword_1EFA60050;
  if (!qword_1EFA60050)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C046C, &type metadata for Feature.EngagementBadgingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60050);
  }
  return result;
}

unint64_t sub_1CE0279A4()
{
  unint64_t result;

  result = qword_1EFA60058;
  if (!qword_1EFA60058)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0494, &type metadata for Feature.EngagementBadgingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60058);
  }
  return result;
}

unint64_t sub_1CE0279EC()
{
  unint64_t result;

  result = qword_1EFA60060;
  if (!qword_1EFA60060)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C041C, &type metadata for Feature.AccountDeviceObservingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60060);
  }
  return result;
}

unint64_t sub_1CE027A34()
{
  unint64_t result;

  result = qword_1EFA60068;
  if (!qword_1EFA60068)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0444, &type metadata for Feature.AccountDeviceObservingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60068);
  }
  return result;
}

unint64_t sub_1CE027A7C()
{
  unint64_t result;

  result = qword_1EFA60070;
  if (!qword_1EFA60070)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C03CC, &type metadata for Feature.HealthDatabaseWorkoutQueryingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60070);
  }
  return result;
}

unint64_t sub_1CE027AC4()
{
  unint64_t result;

  result = qword_1EFA60078;
  if (!qword_1EFA60078)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C03F4, &type metadata for Feature.HealthDatabaseWorkoutQueryingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60078);
  }
  return result;
}

unint64_t sub_1CE027B0C()
{
  unint64_t result;

  result = qword_1EFA60080;
  if (!qword_1EFA60080)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C037C, &type metadata for Feature.ApplicationInstallationCheckRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60080);
  }
  return result;
}

unint64_t sub_1CE027B54()
{
  unint64_t result;

  result = qword_1EFA60088;
  if (!qword_1EFA60088)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C03A4, &type metadata for Feature.ApplicationInstallationCheckRequiredCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60088);
  }
  return result;
}

unint64_t sub_1CE027B9C()
{
  unint64_t result;

  result = qword_1EFA60090;
  if (!qword_1EFA60090)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C032C, &type metadata for Feature.EngagementEventReportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60090);
  }
  return result;
}

unint64_t sub_1CE027BE4()
{
  unint64_t result;

  result = qword_1EFA60098;
  if (!qword_1EFA60098)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0354, &type metadata for Feature.EngagementEventReportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60098);
  }
  return result;
}

unint64_t sub_1CE027C2C()
{
  unint64_t result;

  result = qword_1EFA600A0;
  if (!qword_1EFA600A0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C02DC, &type metadata for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600A0);
  }
  return result;
}

unint64_t sub_1CE027C74()
{
  unint64_t result;

  result = qword_1EFA600A8;
  if (!qword_1EFA600A8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0304, &type metadata for Feature.BackgroundWorkoutMetadataRefreshingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600A8);
  }
  return result;
}

unint64_t sub_1CE027CBC()
{
  unint64_t result;

  result = qword_1EFA600B0;
  if (!qword_1EFA600B0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C028C, &type metadata for Feature.LocalStandaloneSessionSupportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600B0);
  }
  return result;
}

unint64_t sub_1CE027D04()
{
  unint64_t result;

  result = qword_1EFA600B8;
  if (!qword_1EFA600B8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C02B4, &type metadata for Feature.LocalStandaloneSessionSupportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600B8);
  }
  return result;
}

unint64_t sub_1CE027D4C()
{
  unint64_t result;

  result = qword_1EFA600C0;
  if (!qword_1EFA600C0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C023C, &type metadata for Feature.StreamingQualityReportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600C0);
  }
  return result;
}

unint64_t sub_1CE027D94()
{
  unint64_t result;

  result = qword_1EFA600C8;
  if (!qword_1EFA600C8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0264, &type metadata for Feature.StreamingQualityReportingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600C8);
  }
  return result;
}

unint64_t sub_1CE027DDC()
{
  unint64_t result;

  result = qword_1EFA600D0;
  if (!qword_1EFA600D0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C01EC, &type metadata for Feature.MetricIdentifiersUpdatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600D0);
  }
  return result;
}

unint64_t sub_1CE027E24()
{
  unint64_t result;

  result = qword_1EFA600D8;
  if (!qword_1EFA600D8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0214, &type metadata for Feature.MetricIdentifiersUpdatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600D8);
  }
  return result;
}

unint64_t sub_1CE027E6C()
{
  unint64_t result;

  result = qword_1EFA600E0;
  if (!qword_1EFA600E0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C019C, &type metadata for Feature.SessionPassiveBluetoothScanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600E0);
  }
  return result;
}

unint64_t sub_1CE027EB4()
{
  unint64_t result;

  result = qword_1EFA600E8;
  if (!qword_1EFA600E8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C01C4, &type metadata for Feature.SessionPassiveBluetoothScanningCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600E8);
  }
  return result;
}

unint64_t sub_1CE027EFC()
{
  unint64_t result;

  result = qword_1EFA600F0;
  if (!qword_1EFA600F0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C014C, &type metadata for Feature.EngagementNotificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600F0);
  }
  return result;
}

unint64_t sub_1CE027F44()
{
  unint64_t result;

  result = qword_1EFA600F8;
  if (!qword_1EFA600F8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0174, &type metadata for Feature.EngagementNotificationsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA600F8);
  }
  return result;
}

unint64_t sub_1CE027F8C()
{
  unint64_t result;

  result = qword_1EFA60100;
  if (!qword_1EFA60100)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C00FC, &type metadata for Feature.PictureInPicturePresentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60100);
  }
  return result;
}

unint64_t sub_1CE027FD4()
{
  unint64_t result;

  result = qword_1EFA60108;
  if (!qword_1EFA60108)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0124, &type metadata for Feature.PictureInPicturePresentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60108);
  }
  return result;
}

unint64_t sub_1CE02801C()
{
  unint64_t result;

  result = qword_1EFA60110;
  if (!qword_1EFA60110)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C00AC, &type metadata for Feature.PlaybackTimeJumpPreventingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60110);
  }
  return result;
}

unint64_t sub_1CE028064()
{
  unint64_t result;

  result = qword_1EFA60118;
  if (!qword_1EFA60118)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C00D4, &type metadata for Feature.PlaybackTimeJumpPreventingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60118);
  }
  return result;
}

unint64_t sub_1CE0280AC()
{
  unint64_t result;

  result = qword_1EFA60120;
  if (!qword_1EFA60120)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C005C, &type metadata for Feature.ContactsProvidingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60120);
  }
  return result;
}

unint64_t sub_1CE0280F4()
{
  unint64_t result;

  result = qword_1EFA60128;
  if (!qword_1EFA60128)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0084, &type metadata for Feature.ContactsProvidingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60128);
  }
  return result;
}

unint64_t sub_1CE02813C()
{
  unint64_t result;

  result = qword_1EFA60130;
  if (!qword_1EFA60130)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C000C, &type metadata for Feature.StandaloneHealthKitMindfulSavingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60130);
  }
  return result;
}

unint64_t sub_1CE028184()
{
  unint64_t result;

  result = qword_1EFA60138;
  if (!qword_1EFA60138)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0034, &type metadata for Feature.StandaloneHealthKitMindfulSavingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60138);
  }
  return result;
}

unint64_t sub_1CE0281CC()
{
  unint64_t result;

  result = qword_1EFA60140;
  if (!qword_1EFA60140)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFFBC, &type metadata for Feature.ServerSyncingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60140);
  }
  return result;
}

unint64_t sub_1CE028214()
{
  unint64_t result;

  result = qword_1EFA60148;
  if (!qword_1EFA60148)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFFE4, &type metadata for Feature.ServerSyncingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60148);
  }
  return result;
}

unint64_t sub_1CE02825C()
{
  unint64_t result;

  result = qword_1EFA60150;
  if (!qword_1EFA60150)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFF6C, &type metadata for Feature.AppRequirementCheckingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60150);
  }
  return result;
}

unint64_t sub_1CE0282A4()
{
  unint64_t result;

  result = qword_1EFA60158;
  if (!qword_1EFA60158)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFF94, &type metadata for Feature.AppRequirementCheckingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60158);
  }
  return result;
}

unint64_t sub_1CE0282EC()
{
  unint64_t result;

  result = qword_1EFA60160;
  if (!qword_1EFA60160)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFF1C, &type metadata for Feature.StandaloneMeditationArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60160);
  }
  return result;
}

unint64_t sub_1CE028334()
{
  unint64_t result;

  result = qword_1EFA60168;
  if (!qword_1EFA60168)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFF44, &type metadata for Feature.StandaloneMeditationArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60168);
  }
  return result;
}

unint64_t sub_1CE02837C()
{
  unint64_t result;

  result = qword_1EFA60170;
  if (!qword_1EFA60170)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFECC, &type metadata for Feature.HeadlessDistributedSessionHostingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60170);
  }
  return result;
}

unint64_t sub_1CE0283C4()
{
  unint64_t result;

  result = qword_1EFA60178;
  if (!qword_1EFA60178)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFEF4, &type metadata for Feature.HeadlessDistributedSessionHostingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60178);
  }
  return result;
}

unint64_t sub_1CE02840C()
{
  unint64_t result;

  result = qword_1EFA60180;
  if (!qword_1EFA60180)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFE7C, &type metadata for Feature.HealthKitBehaviorQueryingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60180);
  }
  return result;
}

unint64_t sub_1CE028454()
{
  unint64_t result;

  result = qword_1EFA60188;
  if (!qword_1EFA60188)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFEA4, &type metadata for Feature.HealthKitBehaviorQueryingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60188);
  }
  return result;
}

unint64_t sub_1CE02849C()
{
  unint64_t result;

  result = qword_1EFA60190;
  if (!qword_1EFA60190)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFE2C, &type metadata for Feature.VideoAssetDownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60190);
  }
  return result;
}

unint64_t sub_1CE0284E4()
{
  unint64_t result;

  result = qword_1EFA60198;
  if (!qword_1EFA60198)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFE54, &type metadata for Feature.VideoAssetDownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60198);
  }
  return result;
}

unint64_t sub_1CE02852C()
{
  unint64_t result;

  result = qword_1EFA601A0;
  if (!qword_1EFA601A0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFDDC, &type metadata for Feature.TipsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601A0);
  }
  return result;
}

unint64_t sub_1CE028574()
{
  unint64_t result;

  result = qword_1EFA601A8;
  if (!qword_1EFA601A8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFE04, &type metadata for Feature.TipsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601A8);
  }
  return result;
}

unint64_t sub_1CE0285BC()
{
  unint64_t result;

  result = qword_1EFA601B0;
  if (!qword_1EFA601B0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFD8C, &type metadata for Feature.TipsUpsellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601B0);
  }
  return result;
}

unint64_t sub_1CE028604()
{
  unint64_t result;

  result = qword_1EFA601B8;
  if (!qword_1EFA601B8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFDB4, &type metadata for Feature.TipsUpsellCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601B8);
  }
  return result;
}

unint64_t sub_1CE02864C()
{
  unint64_t result;

  result = qword_1EFA601C0;
  if (!qword_1EFA601C0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFD3C, &type metadata for Feature.TrainerTipsQuarantineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601C0);
  }
  return result;
}

unint64_t sub_1CE028694()
{
  unint64_t result;

  result = qword_1EFA601C8;
  if (!qword_1EFA601C8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFD64, &type metadata for Feature.TrainerTipsQuarantineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601C8);
  }
  return result;
}

unint64_t sub_1CE0286DC()
{
  unint64_t result;

  result = qword_1EFA601D0;
  if (!qword_1EFA601D0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFCEC, &type metadata for Feature.AchievementsArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601D0);
  }
  return result;
}

unint64_t sub_1CE028724()
{
  unint64_t result;

  result = qword_1EFA601D8;
  if (!qword_1EFA601D8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFD14, &type metadata for Feature.AchievementsArchivingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601D8);
  }
  return result;
}

unint64_t sub_1CE02876C()
{
  unint64_t result;

  result = qword_1EFA601E0;
  if (!qword_1EFA601E0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFC9C, &type metadata for Feature.AchievementsEvaluatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601E0);
  }
  return result;
}

unint64_t sub_1CE0287B4()
{
  unint64_t result;

  result = qword_1EFA601E8;
  if (!qword_1EFA601E8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFCC4, &type metadata for Feature.AchievementsEvaluatingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601E8);
  }
  return result;
}

unint64_t sub_1CE0287FC()
{
  unint64_t result;

  result = qword_1EFA601F0;
  if (!qword_1EFA601F0)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFC4C, &type metadata for Feature.TrainerTipsObfuscationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601F0);
  }
  return result;
}

unint64_t sub_1CE028844()
{
  unint64_t result;

  result = qword_1EFA601F8;
  if (!qword_1EFA601F8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFC74, &type metadata for Feature.TrainerTipsObfuscationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA601F8);
  }
  return result;
}

unint64_t sub_1CE02888C()
{
  unint64_t result;

  result = qword_1EFA60200;
  if (!qword_1EFA60200)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFBFC, &type metadata for Feature.RemoteBrowsingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60200);
  }
  return result;
}

unint64_t sub_1CE0288D4()
{
  unint64_t result;

  result = qword_1EFA60208;
  if (!qword_1EFA60208)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFC24, &type metadata for Feature.RemoteBrowsingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60208);
  }
  return result;
}

unint64_t sub_1CE02891C()
{
  unint64_t result;

  result = qword_1EFA60210;
  if (!qword_1EFA60210)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFBAC, &type metadata for Feature.ImprovedAnalyticsConsentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60210);
  }
  return result;
}

unint64_t sub_1CE028964()
{
  unint64_t result;

  result = qword_1EFA60218;
  if (!qword_1EFA60218)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFBD4, &type metadata for Feature.ImprovedAnalyticsConsentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60218);
  }
  return result;
}

unint64_t sub_1CE0289AC()
{
  unint64_t result;

  result = qword_1EFA60220;
  if (!qword_1EFA60220)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFB5C, &type metadata for Feature.UserNotificationAlertingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60220);
  }
  return result;
}

unint64_t sub_1CE0289F4()
{
  unint64_t result;

  result = qword_1EFA60228;
  if (!qword_1EFA60228)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFB84, &type metadata for Feature.UserNotificationAlertingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60228);
  }
  return result;
}

unint64_t sub_1CE028A3C()
{
  unint64_t result;

  result = qword_1EFA60230;
  if (!qword_1EFA60230)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFB0C, &type metadata for Feature.AppleAccountUpgradingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60230);
  }
  return result;
}

unint64_t sub_1CE028A84()
{
  unint64_t result;

  result = qword_1EFA60238;
  if (!qword_1EFA60238)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFB34, &type metadata for Feature.AppleAccountUpgradingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60238);
  }
  return result;
}

unint64_t sub_1CE028ACC()
{
  unint64_t result;

  result = qword_1EFA60240;
  if (!qword_1EFA60240)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFABC, &type metadata for Feature.PersonalizationPrivacyConsentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60240);
  }
  return result;
}

unint64_t sub_1CE028B14()
{
  unint64_t result;

  result = qword_1EFA60248;
  if (!qword_1EFA60248)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BFAE4, &type metadata for Feature.PersonalizationPrivacyConsentingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60248);
  }
  return result;
}

unint64_t sub_1CE028B5C()
{
  unint64_t result;

  result = qword_1EFA60250;
  if (!qword_1EFA60250)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C082C, &type metadata for Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60250);
  }
  return result;
}

unint64_t sub_1CE028BA4()
{
  unint64_t result;

  result = qword_1EFA60258;
  if (!qword_1EFA60258)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0C0854, &type metadata for Feature.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFA60258);
  }
  return result;
}

uint64_t sub_1CE028BE8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001CE0CA090 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001CE0CA0B0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001CE0CA0E0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001CE0CA100 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001CE0CA120 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001CE0CA150 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001CE0CA180 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CE0CA1A0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001CE0CA1C0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001CE0CA1E0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001CE0CA200 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CE0CA220 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001CE0CA240 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001CE0CA260 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001CE0CA280 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001CE0CA2B0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001CE0CA2D0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001CE0CA300 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001CE0CA330 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001CE0CA350 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001CE0CA370 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001CE0CA390 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001CE0CA3B0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001CE0CA3D0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001CE0CA3F0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001CE0CA410 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x7953726576726573 && a2 == 0xED0000676E69636ELL || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001CE0CA440 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001CE0CA460 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001CE0CA480 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001CE0CA4B0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CE0CA4D0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 1936746868 && a2 == 0xE400000000000000 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x6573705573706974 && a2 == 0xEA00000000006C6CLL || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CE0CA4F0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CE0CA510 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001CE0CA530 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001CE0CA550 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x724265746F6D6572 && a2 == 0xEE00676E6973776FLL || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001CE0CA570 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001CE0CA590 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001CE0CA5B0 || (sub_1CE0B6C50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001CE0CA5D0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else
  {
    v5 = sub_1CE0B6C50();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 42;
    else
      return 43;
  }
}

uint64_t dispatch thunk of AnalyticsReporting.report(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1CE029AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  v7 = type metadata accessor for CacheResult(0, *(_QWORD *)(v3 + 80), v5, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t sub_1CE029B58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  v7 = type metadata accessor for CacheResult(0, *(_QWORD *)(v3 + 80), v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v4, a1, v7);
  return swift_endAccess();
}

uint64_t CacheTopic.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  CacheTopic.init()();
  return v0;
}

char *CacheTopic.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;

  v1 = *(_QWORD *)v0;
  type metadata accessor for UnfairLock();
  v2 = swift_allocObject();
  v3 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = 0;
  *((_QWORD *)v0 + 2) = v2;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 56))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 96)], 1, 1);
  return v0;
}

void sub_1CE029C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for CacheResult(0, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  sub_1CDFC1778((void (*)(void))sub_1CE029F34);
}

void sub_1CE029CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  sub_1CE029D2C(v1, a1, v4, v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
}

uint64_t sub_1CE029D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v6 = type metadata accessor for CacheResult(0, v5, a3, a4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - v7;
  v9 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v11 - v7, a2, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v5);
  return sub_1CE029B58((uint64_t)v8);
}

void sub_1CE029DE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1CE029E24(v0, v2, v3, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t sub_1CE029E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v5 = type metadata accessor for CacheResult(0, v4, a3, a4);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))((char *)&v9 - v6, 1, 1, v4);
  return sub_1CE029B58((uint64_t)v7);
}

uint64_t *CacheTopic.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 96);
  v5 = type metadata accessor for CacheResult(0, *(_QWORD *)(v1 + 80), v3, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v2, v5);
  return v0;
}

uint64_t CacheTopic.__deallocating_deinit()
{
  CacheTopic.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1CE029F34@<X0>(uint64_t a1@<X8>)
{
  return sub_1CE029AE8(a1);
}

uint64_t sub_1CE029F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for CacheResult(319, *(_QWORD *)(a1 + 80), a3, a4);
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for CacheTopic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CacheTopic);
}

uint64_t method lookup function for CacheTopic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CacheTopic.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of CacheTopic.query()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CacheTopic.populate(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of CacheTopic.purge()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t UnitPreferences.applyingTimestampOffset(_:)()
{
  sub_1CE0B4ACC();
  return sub_1CE0B4AD8();
}

uint64_t sub_1CE02A084()
{
  sub_1CE0B4ACC();
  return sub_1CE0B4AD8();
}

_QWORD *MultiUserClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for MultiUserClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE02BC2C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t MultiUserClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE02C010);
}

void sub_1CE02A228(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = sub_1CE0B4CDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v6 = sub_1CE0B6080();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EFA63450);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v7 = sub_1CE0B6068();
  v8 = sub_1CE0B6734();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    sub_1CDFB1900(&qword_1EFA60260, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92410], MEMORY[0x1E0D92430]);
    v11 = sub_1CE0B6C14();
    v13 = sub_1CDFC7270(v11, v12, &v14);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    _os_log_impl(&dword_1CDFAA000, v7, v8, "MultiUserClient - MultiUserSessionConnected %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v10, -1, -1);
    MEMORY[0x1D17C092C](v9, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

}

uint64_t sub_1CE02A438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t ObjectType;
  _QWORD v22[2];
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];

  v26 = type metadata accessor for MultiUserSessionUpdated();
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B4BEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EFA63450);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v24(v9, a1, v6);
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  v13 = os_log_type_enabled(v11, v12);
  v25 = a1;
  if (v13)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v22[1] = a2 + 16;
    v16 = v15;
    v28[0] = v15;
    v23 = v5;
    *(_DWORD *)v14 = 136446210;
    sub_1CDFB1900(qword_1EFA60318, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91E68], MEMORY[0x1E0D91E80]);
    v17 = sub_1CE0B6C14();
    v27 = sub_1CDFC7270(v17, v18, v28);
    v5 = v23;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1CDFAA000, v11, v12, "MultiUserClient - MultiUserSession updated %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v16, -1, -1);
    MEMORY[0x1D17C092C](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v24(v5, v25, v6);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v20 + 8))(v5, v26, &protocol witness table for MultiUserSessionUpdated, ObjectType, v20);
    swift_unknownObjectRelease();
    return sub_1CDFE19F8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MultiUserSessionUpdated);
  }
  return result;
}

uint64_t sub_1CE02A72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t ObjectType;
  _QWORD v22[2];
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];

  v26 = type metadata accessor for MultiUserActivityCancelled();
  MEMORY[0x1E0C80A78](v26);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B4CDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EFA63450);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v24(v9, a1, v6);
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  v13 = os_log_type_enabled(v11, v12);
  v25 = a1;
  if (v13)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v22[1] = a2 + 16;
    v16 = v15;
    v28[0] = v15;
    v23 = v5;
    *(_DWORD *)v14 = 136446210;
    sub_1CDFB1900(&qword_1EFA60260, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92410], MEMORY[0x1E0D92430]);
    v17 = sub_1CE0B6C14();
    v27 = sub_1CDFC7270(v17, v18, v28);
    v5 = v23;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1CDFAA000, v11, v12, "MultiUserClient - MultiUserActivityCancelled %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v16, -1, -1);
    MEMORY[0x1D17C092C](v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v24(v5, v25, v6);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v20 + 8))(v5, v26, &off_1E8B68248, ObjectType, v20);
    swift_unknownObjectRelease();
    return sub_1CDFE19F8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MultiUserActivityCancelled);
  }
  return result;
}

uint64_t sub_1CE02AA20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t ObjectType;
  _QWORD v24[2];
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];

  v28 = type metadata accessor for MultiUserCelebrationRequested();
  MEMORY[0x1E0C80A78](v28);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B5084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EFA63450);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v26(v9, a1, v6);
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  v13 = os_log_type_enabled(v11, v12);
  v27 = a1;
  if (v13)
  {
    v14 = swift_slowAlloc();
    v25 = v5;
    v15 = v14;
    v16 = swift_slowAlloc();
    v24[1] = a2 + 16;
    v17 = v16;
    *(_DWORD *)v15 = 141558274;
    v29 = 1752392040;
    v30[0] = v16;
    sub_1CE0B68F0();
    *(_WORD *)(v15 + 12) = 2080;
    sub_1CDFB1900(&qword_1EFA60310, (uint64_t (*)(uint64_t))MEMORY[0x1E0D93228], MEMORY[0x1E0D93238]);
    v18 = sub_1CE0B6C14();
    v29 = sub_1CDFC7270(v18, v19, v30);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1CDFAA000, v11, v12, "MultiUserClient - activityRingsCompleted %{mask.hash}s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v17, -1, -1);
    v20 = v15;
    v5 = v25;
    MEMORY[0x1D17C092C](v20, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = *(_QWORD *)(result + 48);
    swift_unknownObjectRetain();
    swift_release();
    ObjectType = swift_getObjectType();
    v26(v5, v27, v6);
    (*(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v22 + 8))(v5, v28, &protocol witness table for MultiUserCelebrationRequested, ObjectType, v22);
    swift_unknownObjectRelease();
    return sub_1CDFE19F8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for MultiUserCelebrationRequested);
  }
  return result;
}

uint64_t MultiUserClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t MultiUserClient.willBeginActivity(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v6 = sub_1CE0B4CDC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v10 = sub_1CE0B6080();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EFA63450);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B6734();
  if (os_log_type_enabled(v11, v12))
  {
    v23 = v2;
    v13 = swift_slowAlloc();
    v25 = a1;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v27 = v15;
    v24 = a2;
    *(_DWORD *)v14 = 136446210;
    sub_1CDFB1900(&qword_1EFA60260, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92410], MEMORY[0x1E0D92430]);
    v16 = sub_1CE0B6C14();
    v26 = sub_1CDFC7270(v16, v17, &v27);
    v3 = v23;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1CDFAA000, v11, v12, "Attempting to register %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v15, -1, -1);
    v18 = v14;
    a1 = v25;
    MEMORY[0x1D17C092C](v18, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  v19 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  LOWORD(v27) = 262;
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v19 + 16))(&v27, a1, v6, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408], ObjectType, v19);
}

uint64_t MultiUserClient.waitForSession(activity:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA690;
  v5._countAndFlagsBits = 0xD000000000000019;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 263;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4CDC();
  return v8(&v11, a1, v9, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408], ObjectType, v6);
}

uint64_t MultiUserClient.joinActivity()()
{
  return sub_1CE02B628(0x697463416E696F6ALL, (void *)0xEE00292879746976, 256);
}

uint64_t MultiUserClient.leaveActivity(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA6B0;
  v5._countAndFlagsBits = 0xD000000000000011;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 257;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4CDC();
  return v8(&v11, a1, v9, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408], ObjectType, v6);
}

uint64_t MultiUserClient.terminateActivity(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA6D0;
  v5._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 267;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B4CDC();
  return v8(&v11, a1, v9, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408], ObjectType, v6);
}

uint64_t MultiUserClient.launchActivityApplication(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA6F0;
  v5._countAndFlagsBits = 0xD000000000000020;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 258;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B3D10();
  return v8(&v11, a1, v9, MEMORY[0x1E0D8FBA0], MEMORY[0x1E0D8FBA8], ObjectType, v6);
}

uint64_t MultiUserClient.sendMediaPlayerSyncUpdate(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA720;
  v5._countAndFlagsBits = 0xD00000000000001DLL;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 259;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B50C0();
  return v8(&v11, a1, v9, MEMORY[0x1E0D934B8], MEMORY[0x1E0D934C0], ObjectType, v6);
}

uint64_t MultiUserClient.handleMediaPlayerSyncAnnouncement(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA740;
  v5._countAndFlagsBits = 0xD000000000000025;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 268;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B57D4();
  return v8(&v11, a1, v9, MEMORY[0x1E0D94F28], MEMORY[0x1E0D94F30], ObjectType, v6);
}

uint64_t MultiUserClient.requestMediaPlayerCatchup()()
{
  return sub_1CE02B628(0xD00000000000001BLL, (void *)0x80000001CE0CA770, 259);
}

uint64_t sub_1CE02B628(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EFA63450);
  v8._object = (void *)0x80000001CE0CA620;
  v8._countAndFlagsBits = 0xD00000000000006BLL;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t MultiUserClient.queryJoinedActivity()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63450);
  v2._countAndFlagsBits = 0xD00000000000006BLL;
  v2._object = (void *)0x80000001CE0CA620;
  v3._object = (void *)0x80000001CE0CA790;
  v3._countAndFlagsBits = 0xD000000000000015;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 266;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B4CDC();
  return v6(&v9, v7, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408], ObjectType, v4);
}

uint64_t MultiUserClient.sendCelebrationType(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  Swift::String v4;
  Swift::String v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t (*v8)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v9;
  __int16 v11;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v3 = sub_1CE0B6080();
  __swift_project_value_buffer(v3, (uint64_t)qword_1EFA63450);
  v4._countAndFlagsBits = 0xD00000000000006BLL;
  v4._object = (void *)0x80000001CE0CA620;
  v5._object = (void *)0x80000001CE0CA7B0;
  v5._countAndFlagsBits = 0xD000000000000017;
  Logger.trace(file:function:)(v4, v5);
  v6 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v11 = 261;
  v8 = *(uint64_t (**)(__int16 *, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v6 + 16);
  v9 = sub_1CE0B5450();
  return v8(&v11, a1, v9, MEMORY[0x1E0D944F0], MEMORY[0x1E0D944F8], ObjectType, v6);
}

uint64_t MultiUserClient.queryUserIdentity()()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  __int16 v9;

  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EFA63450);
  v2._countAndFlagsBits = 0xD00000000000006BLL;
  v2._object = (void *)0x80000001CE0CA620;
  v3._object = (void *)0x80000001CE0CA7D0;
  v3._countAndFlagsBits = 0xD000000000000013;
  Logger.trace(file:function:)(v2, v3);
  v4 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  v9 = 264;
  v6 = *(uint64_t (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v4 + 24);
  v7 = sub_1CE0B4CE8();
  return v6(&v9, v7, MEMORY[0x1E0D92468], MEMORY[0x1E0D92470], ObjectType, v4);
}

uint64_t sub_1CE02B9F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return MultiUserClient.willBeginActivity(_:)(a1, a2);
}

uint64_t sub_1CE02BA14(uint64_t a1)
{
  return MultiUserClient.waitForSession(activity:)(a1);
}

uint64_t sub_1CE02BA34()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  Swift::String v3;
  Swift::String v4;
  uint64_t v5;
  uint64_t ObjectType;
  __int16 v8;

  v1 = *v0;
  if (qword_1EFA5D4F0 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EFA63450);
  v3._object = (void *)0x80000001CE0CA620;
  v3._countAndFlagsBits = 0xD00000000000006BLL;
  v4._countAndFlagsBits = 0x697463416E696F6ALL;
  v4._object = (void *)0xEE00292879746976;
  Logger.trace(file:function:)(v3, v4);
  v5 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  v8 = 256;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v5 + 8))(&v8, ObjectType, v5);
}

uint64_t sub_1CE02BB0C(uint64_t a1)
{
  return MultiUserClient.leaveActivity(_:)(a1);
}

uint64_t sub_1CE02BB2C(uint64_t a1)
{
  return MultiUserClient.terminateActivity(_:)(a1);
}

uint64_t sub_1CE02BB4C()
{
  return MultiUserClient.queryJoinedActivity()();
}

uint64_t sub_1CE02BB6C(uint64_t a1)
{
  return MultiUserClient.launchActivityApplication(with:)(a1);
}

uint64_t sub_1CE02BB8C(uint64_t a1)
{
  return MultiUserClient.sendMediaPlayerSyncUpdate(_:)(a1);
}

uint64_t sub_1CE02BBAC(uint64_t a1)
{
  return MultiUserClient.handleMediaPlayerSyncAnnouncement(_:)(a1);
}

uint64_t sub_1CE02BBCC(uint64_t a1)
{
  return MultiUserClient.sendCelebrationType(_:)(a1);
}

uint64_t sub_1CE02BBEC()
{
  return MultiUserClient.requestMediaPlayerCatchup()();
}

uint64_t sub_1CE02BC0C()
{
  return MultiUserClient.queryUserIdentity()();
}

_QWORD *sub_1CE02BC2C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v24 = a1;
  v23 = 36;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B56CC();
  swift_retain();
  swift_unknownObjectRetain();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C0B4, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D94C48], MEMORY[0x1E0D94C50]);
  swift_release();
  v24 = a1;
  v23 = 38;
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = sub_1CE0B5144();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C0E4, v9, ObjectType, v10, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D939A8], MEMORY[0x1E0D939B0]);
  swift_release();
  v24 = a1;
  v23 = 35;
  v11 = sub_1CE0B4CDC();
  v12 = MEMORY[0x1E0D92400];
  v13 = MEMORY[0x1E0D92408];
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02A228, 0, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D92400], MEMORY[0x1E0D92408]);
  v24 = a1;
  v23 = 42;
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = sub_1CE0B4BEC();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C114, v14, ObjectType, v15, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D91E58], MEMORY[0x1E0D91E60]);
  swift_release();
  v24 = a1;
  v23 = 34;
  v16 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C11C, v16, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, v12, v13);
  swift_release();
  v24 = a1;
  v23 = 39;
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = sub_1CE0B5084();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C124, v17, ObjectType, v18, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D93218], MEMORY[0x1E0D93220]);
  swift_release();
  v24 = a1;
  v23 = 37;
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = sub_1CE0B50C0();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C12C, v19, ObjectType, v20, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D934B8], MEMORY[0x1E0D934C0]);
  swift_release();
  v24 = a1;
  v23 = 41;
  v21 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v23, (uint64_t)sub_1CE02C15C, v21, ObjectType, v11, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D92400], v13);
  swift_release();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE02C010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for MultiUserClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFBB718(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t method lookup function for MultiUserClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MultiUserClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE02C090()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE02C0B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for MultiUserParticipantUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94C58], (uint64_t)&off_1E8B6A858);
}

uint64_t sub_1CE02C0E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for MultiUserWorkoutUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D939B8], (uint64_t)&protocol witness table for MultiUserWorkoutUpdated);
}

uint64_t sub_1CE02C114(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE02A438(a1, v1);
}

uint64_t sub_1CE02C11C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE02A72C(a1, v1);
}

uint64_t sub_1CE02C124(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE02AA20(a1, v1);
}

uint64_t sub_1CE02C12C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayerSyncUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D934C8], (uint64_t)&protocol witness table for MediaPlayerSyncUpdated);
}

uint64_t sub_1CE02C15C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for MediaPlayerSyncCatchupRequested, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92410], (uint64_t)&protocol witness table for MediaPlayerSyncCatchupRequested);
}

void static CatalogDeleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for CatalogDeleted()
{
  return &type metadata for CatalogDeleted;
}

uint64_t ServiceSubscriptionClientProtocol.fetchServiceSubscription()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_1CE0B5738();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B572C();
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 8))(v7, a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StorefrontContentAvailabilityUpdated.availability.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StorefrontContentAvailabilityUpdated.init(availability:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static StorefrontContentAvailabilityUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for StorefrontContentAvailabilityUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for StorefrontContentAvailabilityUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for StorefrontContentAvailabilityUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02C470(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StorefrontContentAvailabilityUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02C4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4E80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for StorefrontContentAvailabilityUpdated()
{
  uint64_t result;

  result = qword_1ED8EFF00;
  if (!qword_1ED8EFF00)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *RemoteParticipantClient.__allocating_init(eventHub:queue:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v7 = a3;
  v8 = (void *)sub_1CE0B626C();
  v9 = objc_msgSend(v6, sel_initWithMachServiceName_options_, v8, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v10 = sub_1CDFBC9EC(v9, v7);
  v11 = *(_QWORD *)(v10 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v11 + 16));
  if (*(_BYTE *)(v10 + 48) == 1)
  {
    *(_BYTE *)(v10 + 48) = 2;
    objc_msgSend(*(id *)(v10 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  type metadata accessor for RemoteParticipantClient();
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_retain();
  v14 = sub_1CE02C94C(v13, a1, a2, v12);

  swift_release_n();
  return v14;
}

uint64_t RemoteParticipantClient.__allocating_init(connection:eventHub:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CDFAD7F4(a1, a2, a3, a4, a5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CE02CCC0);
}

uint64_t RemoteParticipantClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteParticipantClient.beginAdvertisingParticipantHost()()
{
  return sub_1CE02C6F4(0xD000000000000021, (void *)0x80000001CE0CA8A0, 205);
}

uint64_t RemoteParticipantClient.endAdvertisingParticipantHost()()
{
  return sub_1CE02C6F4(0xD00000000000001FLL, (void *)0x80000001CE0CA8D0, 208);
}

uint64_t RemoteParticipantClient.endDiscoveringParticipants()()
{
  return sub_1CE02C6F4(0xD00000000000001CLL, (void *)0x80000001CE0CA920, 209);
}

uint64_t sub_1CE02C6F4(uint64_t a1, void *a2, __int16 a3)
{
  uint64_t v3;
  uint64_t v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  uint64_t ObjectType;
  __int16 v13;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v7 = sub_1CE0B6080();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F1870);
  v8._object = (void *)0x80000001CE0CA820;
  v8._countAndFlagsBits = 0xD00000000000007CLL;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Logger.trace(file:function:)(v8, v9);
  v10 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v13 = a3;
  return (*(uint64_t (**)(__int16 *, uint64_t, uint64_t))(v10 + 8))(&v13, ObjectType, v10);
}

uint64_t RemoteParticipantClient.tryPassword(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  uint64_t ObjectType;
  _QWORD v11[2];
  __int16 v12;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v5 = sub_1CE0B6080();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED8F1870);
  v6._object = (void *)0x80000001CE0CA820;
  v6._countAndFlagsBits = 0xD00000000000007CLL;
  v7._countAndFlagsBits = 0x7773736150797274;
  v7._object = (void *)0xEF293A5F2864726FLL;
  Logger.trace(file:function:)(v6, v7);
  v8 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v12 = 210;
  v11[0] = a1;
  v11[1] = a2;
  return (*(uint64_t (**)(__int16 *, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 16))(&v12, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0D96790], MEMORY[0x1E0D96798], ObjectType, v8);
}

uint64_t sub_1CE02C8CC()
{
  return RemoteParticipantClient.beginAdvertisingParticipantHost()();
}

uint64_t sub_1CE02C8EC()
{
  return RemoteParticipantClient.endAdvertisingParticipantHost()();
}

uint64_t sub_1CE02C90C()
{
  return RemoteParticipantClient.endDiscoveringParticipants()();
}

uint64_t sub_1CE02C92C(uint64_t a1, uint64_t a2)
{
  return RemoteParticipantClient.tryPassword(_:)(a1, a2);
}

_QWORD *sub_1CE02C94C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;

  a4[2] = a1;
  a4[3] = &protocol witness table for XPCClient;
  a4[4] = &protocol witness table for XPCClient;
  a4[5] = a2;
  a4[6] = a3;
  ObjectType = swift_getObjectType();
  v21 = a1;
  v20 = 21;
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = sub_1CE0B4D48();
  swift_retain();
  swift_unknownObjectRetain();
  v9 = MEMORY[0x1E0D925A8];
  v10 = MEMORY[0x1E0D925B0];
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE02CD64, v7, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D925A8], MEMORY[0x1E0D925B0]);
  swift_release();
  v21 = a1;
  v20 = 24;
  v11 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE02CD94, v11, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, v9, v10);
  swift_release();
  v21 = a1;
  v20 = 26;
  v12 = swift_allocObject();
  swift_weakInit();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE02CDC4, v12, ObjectType, v8, (uint64_t)&protocol witness table for XPCClient, v9, v10);
  swift_release();
  v21 = a1;
  v20 = 25;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = sub_1CE0B5B28();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CDFE19C0, v13, ObjectType, v14, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95C98], MEMORY[0x1E0D95CA0]);
  swift_release();
  v21 = a1;
  v20 = 20;
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = sub_1CE0B5B7C();
  TransportDispatching.register<A>(event:handler:)(&v20, (uint64_t)sub_1CE02CDF4, v15, ObjectType, v16, (uint64_t)&protocol witness table for XPCClient, MEMORY[0x1E0D95DE0], MEMORY[0x1E0D95DE8]);
  swift_release();
  v21 = a1;
  v20 = 22;
  v17 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v20, (uint64_t)sub_1CDFCBB6C, v17, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  v21 = a1;
  v20 = 23;
  v18 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  TransportDispatching.register(event:handler:)(&v20, (uint64_t)sub_1CE02CE24, v18, ObjectType, (uint64_t)&protocol witness table for XPCClient);
  swift_release_n();
  swift_unknownObjectRelease();
  return a4;
}

_QWORD *sub_1CE02CCC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v13;

  type metadata accessor for RemoteParticipantClient();
  v13 = (_QWORD *)swift_allocObject();
  return sub_1CDFBB3B0(a1, a2, a3, v13, a5, a6, a7);
}

uint64_t method lookup function for RemoteParticipantClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteParticipantClient.__allocating_init(connection:eventHub:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1CE02CD40()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CE02CD64(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteParticipantDiscovered, (uint64_t (*)(_QWORD))MEMORY[0x1E0D925B8], (uint64_t)&protocol witness table for RemoteParticipantDiscovered);
}

uint64_t sub_1CE02CD94(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteParticipantLost, (uint64_t (*)(_QWORD))MEMORY[0x1E0D925B8], (uint64_t)&protocol witness table for RemoteParticipantLost);
}

uint64_t sub_1CE02CDC4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteParticipantUpdated, (uint64_t (*)(_QWORD))MEMORY[0x1E0D925B8], (uint64_t)&protocol witness table for RemoteParticipantUpdated);
}

uint64_t sub_1CE02CDF4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CDFD506C(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteParticipantConnectionRejected, (uint64_t (*)(_QWORD))MEMORY[0x1E0D95DF0], (uint64_t)&protocol witness table for RemoteParticipantConnectionRejected);
}

uint64_t sub_1CE02CE24()
{
  uint64_t v0;

  return sub_1CDFCBACC(v0, (uint64_t)&type metadata for RemoteParticipantHostAdvertisingExpired, (uint64_t)&protocol witness table for RemoteParticipantHostAdvertisingExpired);
}

uint64_t TrainerEventEnded.trainerEvent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TrainerEventEnded.init(trainerEvent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static TrainerEventEnded.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for TrainerEventEnded(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for TrainerEventEnded(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for TrainerEventEnded()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02D05C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TrainerEventEnded()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02D0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4370();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TrainerEventEnded()
{
  uint64_t result;

  result = qword_1EFA60448;
  if (!qword_1EFA60448)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE02D120()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4370();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t RemoteParticipantLost.init(participant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t RemoteParticipantLost.participant.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

void static RemoteParticipantLost.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t getEnumTagSinglePayload for RemoteParticipantLost()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02D218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RemoteParticipantLost()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02D260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4D48();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t GymKitConnectionUpdated.gymKitConnection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4B80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t GymKitConnectionUpdated.init(gymKitConnection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static GymKitConnectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for GymKitConnectionUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4B80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for GymKitConnectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for GymKitConnectionUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02D4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for GymKitConnectionUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02D4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4B80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GymKitConnectionUpdated()
{
  uint64_t result;

  result = qword_1EFA60568;
  if (!qword_1EFA60568)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE02D574()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4B80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double static SessionConstants.minimumElapsedTime.getter()
{
  if (qword_1EFA5D490 != -1)
    swift_once();
  return sub_1CDFD38F0(byte_1EFA605A0, *(double *)&qword_1EFA605A8);
}

void static SessionConstants.minimumElapsedTime.setter(double a1)
{
  void *v2;
  void *v3;

  if (qword_1EFA5D490 != -1)
    swift_once();
  if (qword_1ED8F0190 != -1)
    swift_once();
  swift_beginAccess();
  if ((Platform.internalInstall.getter() & 1) != 0)
  {
    if (qword_1ED8F0398 != -1)
      swift_once();
    v2 = (void *)qword_1ED8F0388;
    UserDefaultsKeys.rawValue.getter();
    v3 = (void *)sub_1CE0B626C();
    objc_msgSend(v2, sel_setDouble_forKey_, v3, a1);
    swift_bridgeObjectRelease();

  }
}

void (*static SessionConstants.minimumElapsedTime.modify(double **a1))(uint64_t a1, char a2)
{
  double *v2;
  char v3;

  v2 = (double *)malloc(0x39uLL);
  *a1 = v2;
  if (qword_1EFA5D490 != -1)
    swift_once();
  v3 = byte_1EFA605A0;
  *((_BYTE *)v2 + 56) = byte_1EFA605A0;
  v2[6] = sub_1CDFD38F0(v3, *(double *)&qword_1EFA605A8);
  return sub_1CE02D7C0;
}

void sub_1CE02D7C0(uint64_t a1, char a2)
{
  void *v2;
  double v3;
  void *v4;
  void *v5;

  v2 = *(void **)a1;
  v3 = *(double *)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    if (qword_1ED8F0190 != -1)
      swift_once();
    swift_beginAccess();
    if ((Platform.internalInstall.getter() & 1) != 0)
    {
      if (qword_1ED8F0398 != -1)
        swift_once();
      v4 = (void *)qword_1ED8F0388;
LABEL_14:
      UserDefaultsKeys.rawValue.getter();
      v5 = (void *)sub_1CE0B626C();
      objc_msgSend(v4, sel_setDouble_forKey_, v5, v3);

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (qword_1ED8F0190 != -1)
      swift_once();
    swift_beginAccess();
    if ((Platform.internalInstall.getter() & 1) != 0)
    {
      if (qword_1ED8F0398 != -1)
        swift_once();
      v4 = (void *)qword_1ED8F0388;
      goto LABEL_14;
    }
  }
  free(v2);
}

void sub_1CE02D950()
{
  qword_1EFA605A8 = 0x404E000000000000;
  byte_1EFA605A0 = 43;
}

double static SessionConstants.sessionIdleTimeout.getter()
{
  return 600.0;
}

uint64_t sub_1CE02D97C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1CE0B6674();
  qword_1EFA605B0 = v1;
  return result;
}

double static SessionConstants.integrityTerminationDelay.getter()
{
  if (qword_1EFA5D498 != -1)
    swift_once();
  return *(double *)&qword_1EFA605B0;
}

ValueMetadata *type metadata accessor for SessionConstants()
{
  return &type metadata for SessionConstants;
}

uint64_t sub_1CE02D9F0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) != 0)
    return sub_1CE0B4424();
  switch(a1)
  {
    case 0:
      result = sub_1CE0B43F4();
      break;
    case 1:
      result = sub_1CE0B4400();
      break;
    case 2:
      result = sub_1CE0B4430();
      break;
    case 3:
      result = sub_1CE0B440C();
      break;
    case 4:
      result = sub_1CE0B4418();
      break;
    default:
      return sub_1CE0B4424();
  }
  return result;
}

uint64_t sub_1CE02DA2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_1CE0B443C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - v7, v1, v2);
  sub_1CE0B43F4();
  sub_1CE02DC3C();
  v9 = sub_1CE0B6260();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  if ((v9 & 1) != 0)
  {
    v10(v8, v2);
    return 0;
  }
  else
  {
    sub_1CE0B4400();
    v12 = sub_1CE0B6260();
    v10(v6, v2);
    if ((v12 & 1) != 0)
    {
      v10(v8, v2);
      return 1;
    }
    else
    {
      sub_1CE0B4430();
      v13 = sub_1CE0B6260();
      v10(v6, v2);
      if ((v13 & 1) != 0)
      {
        v10(v8, v2);
        return 2;
      }
      else
      {
        sub_1CE0B440C();
        v14 = sub_1CE0B6260();
        v10(v6, v2);
        if ((v14 & 1) != 0)
        {
          v10(v8, v2);
          return 3;
        }
        else
        {
          sub_1CE0B4418();
          v15 = sub_1CE0B6260();
          v10(v6, v2);
          v10(v8, v2);
          if ((v15 & 1) != 0)
            return 4;
          else
            return 0;
        }
      }
    }
  }
}

unint64_t sub_1CE02DC3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFA605B8;
  if (!qword_1EFA605B8)
  {
    v1 = sub_1CE0B443C();
    result = MEMORY[0x1D17C0848](MEMORY[0x1E0D90B10], v1);
    atomic_store(result, (unint64_t *)&qword_1EFA605B8);
  }
  return result;
}

uint64_t WatchConnectionRejectionUpdated.watchConnectionRejection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B5480();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WatchConnectionRejectionUpdated.init(watchConnectionRejection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static WatchConnectionRejectionUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for WatchConnectionRejectionUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B5480();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WatchConnectionRejectionUpdated(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WatchConnectionRejectionUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02DE94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WatchConnectionRejectionUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02DEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B5480();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WatchConnectionRejectionUpdated()
{
  uint64_t result;

  result = qword_1EFA60618;
  if (!qword_1EFA60618)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE02DF58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B5480();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t CountdownIntentFired.countdownIntent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4A24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CountdownIntentFired.init(countdownIntent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static CountdownIntentFired.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CountdownIntentFired(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4A24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CountdownIntentFired(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CountdownIntentFired()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02E1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CountdownIntentFired()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE02E218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4A24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CountdownIntentFired()
{
  uint64_t result;

  result = qword_1EFA606A8;
  if (!qword_1EFA606A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE02E294()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4A24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static BuildVersion.oldest.getter()
{
  uint64_t v0;

  v0 = sub_1CE0B443C();
  MEMORY[0x1E0C80A78](v0);
  sub_1CE0B43F4();
  return sub_1CE0B4214();
}

uint64_t static BuildVersion.current.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  char *v14;
  uint64_t v16[2];
  __int128 v17;
  __int128 v18;

  v2 = sub_1CE0B443C();
  MEMORY[0x1E0C80A78](v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA606E0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteParticipantClient();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v8 = objc_msgSend(v7, sel_infoDictionary);

  if (!v8)
  {
    v17 = 0u;
    v18 = 0u;
    goto LABEL_10;
  }
  v9 = sub_1CE0B6218();

  if (!*(_QWORD *)(v9 + 16) || (v10 = sub_1CDFD1DAC(0xD00000000000001ALL, 0x80000001CE0CA970), (v11 & 1) == 0))
  {
    v17 = 0u;
    v18 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_1CDFC74F8(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
  {
LABEL_10:
    v13 = &qword_1ED8F10C0;
    v14 = (char *)&v17;
LABEL_11:
    sub_1CDFB13F8((uint64_t)v14, v13);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    BuildVersion.init(rawValue:)(v16[0], v16[1], (uint64_t)v5);
    v12 = sub_1CE0B4220();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v5, 1, v12) != 1)
      return sub_1CE02E59C((uint64_t)v5, a1);
    v13 = &qword_1EFA606E0;
    v14 = v5;
    goto LABEL_11;
  }
LABEL_12:
  sub_1CE0B43F4();
  return sub_1CE0B4214();
}

uint64_t sub_1CE02E59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B4220();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t RemoteParticipantConnectionRejection.watchConnectionRejectionReason()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unsigned __int8 v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v12;

  v0 = sub_1CE0B4D48();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CE0B5B64();
  v4 = sub_1CE0B4D3C();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v6 & 1) != 0)
  {
    v7 = sub_1CE0B5B70();
    if ((v9 & 1) != 0)
    {
      if (v4 <= 5u && ((1 << v4) & 0x34) != 0)
        return 0x1000202u >> (8 * v7);
    }
    else
    {
      sub_1CDFF37CC(v7, v8, 0);
    }
  }
  return 4;
}

void static AppAttentionGained.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

ValueMetadata *type metadata accessor for AppAttentionGained()
{
  return &type metadata for AppAttentionGained;
}

uint64_t Promise.resolve(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_BYTE *)(v7 + 88) = a4;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_1CE02E708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 24);
  v7 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  v8 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v7 + 24) = v6;
  *(_QWORD *)(v7 + 32) = v4;
  *(_BYTE *)(v7 + 40) = v5;
  *(_QWORD *)(v7 + 48) = v3;
  *(_QWORD *)(v7 + 56) = v2;
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFA606F0 + dword_1EFA606F0);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v9;
  *v9 = v0;
  v9[1] = sub_1CE02E7E4;
  return v11(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000013, 0x80000001CE0C86B0, (uint64_t)sub_1CE0301A8, v7, v8);
}

uint64_t sub_1CE02E7E4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1CE02E858()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t Promise<>.catch(file:line:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(void *);
  uint64_t v17;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1CE030540;
  *(_QWORD *)(v12 + 24) = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v4, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  v15 = (uint64_t (**)(void *))(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v15 = sub_1CE0307AC;
  v15[1] = (uint64_t (*)(void *))v12;
  swift_bridgeObjectRetain();
  return sub_1CE0B5C00();
}

void sub_1CE02E9EC(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (qword_1ED8F1890 != -1)
    swift_once();
  v6 = sub_1CE0B6080();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED8F1870);
  v7 = a1;
  swift_bridgeObjectRetain();
  v8 = a1;
  swift_bridgeObjectRetain();
  v9 = sub_1CE0B6068();
  v10 = sub_1CE0B671C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v11 = 136446722;
    swift_getErrorValue();
    v12 = MEMORY[0x1D17C0050]();
    sub_1CDFC7270(v12, v13, &v15);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    sub_1CDFC7270(a2, a3, &v15);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2050;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v9, v10, "Caught %{public}s at %{public}s:%{public}lu", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v14, -1, -1);
    MEMORY[0x1D17C092C](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1CE02EC58(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t);
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v8 + 104) = v17;
  *(_QWORD *)(v8 + 112) = v18;
  *(_OWORD *)(v8 + 88) = v16;
  *(_BYTE *)(v8 + 176) = v15;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 64) = a6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v10 = sub_1CE0B6DA0();
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 128) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 136) = swift_task_alloc();
  *(_QWORD *)(v8 + 144) = *(_QWORD *)(v18 - 8);
  v11 = swift_task_alloc();
  *(_QWORD *)(v8 + 152) = v11;
  v14 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 160) = v12;
  *v12 = v8;
  v12[1] = sub_1CE02ED44;
  return v14(v11);
}

uint64_t sub_1CE02ED44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE02EDA8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v17;
  uint64_t v18;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1058);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 88);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v18 = v6;
    *(_DWORD *)v5 = 134218498;
    *(_QWORD *)(v0 + 40) = v4;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    *(_QWORD *)(v0 + 48) = sub_1CDFC7270(v7, v8, &v18);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 56) = v17;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  v10 = *(_QWORD *)(v0 + 144);
  v9 = *(_QWORD *)(v0 + 152);
  v12 = *(_QWORD *)(v0 + 128);
  v11 = *(_QWORD *)(v0 + 136);
  v14 = *(_QWORD *)(v0 + 112);
  v13 = *(_QWORD *)(v0 + 120);
  v15 = *(void (**)(uint64_t))(v0 + 96);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v11, v9, v14);
  swift_storeEnumTagMultiPayload();
  v15(v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE02F004()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *);
  id v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v1 = sub_1CE0B6080();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED8F1058);
  v2 = sub_1CE0B6068();
  v3 = sub_1CE0B6734();
  if (os_log_type_enabled(v2, v3))
  {
    v16 = *(_QWORD *)(v0 + 88);
    v4 = *(_QWORD *)(v0 + 64);
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v17 = v6;
    *(_DWORD *)v5 = 134218498;
    *(_QWORD *)(v0 + 16) = v4;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    *(_QWORD *)(v0 + 24) = sub_1CDFC7270(v7, v8, &v17);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    *(_QWORD *)(v0 + 32) = v16;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v2, v3, "Finished A->P conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  v9 = *(void **)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD **)(v0 + 136);
  v12 = *(_QWORD *)(v0 + 120);
  v13 = *(void (**)(_QWORD *))(v0 + 96);
  *v10 = v9;
  swift_storeEnumTagMultiPayload();
  v14 = v9;
  v13(v10);

  (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v10, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static Promise.main(_:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a7;
  *(_QWORD *)(v14 + 24) = a3;
  *(_QWORD *)(v14 + 32) = a4;
  *(_BYTE *)(v14 + 40) = a5;
  *(_QWORD *)(v14 + 48) = a6;
  *(_QWORD *)(v14 + 56) = a1;
  *(_QWORD *)(v14 + 64) = a2;
  swift_retain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE02F2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, const char *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[2];
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v46 = a7;
  v47 = a3;
  v18 = a12;
  v44 = a11;
  v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v19);
  v45 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1CDFBBCDC(0x65uLL);
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v43 = a9;
  v22 = sub_1CE0B6080();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED8F1058);
  v23 = sub_1CE0B6068();
  v24 = sub_1CE0B6734();
  if (os_log_type_enabled(v23, v24))
  {
    v39 = a10;
    v25 = swift_slowAlloc();
    v40 = a1;
    v26 = v25;
    v27 = swift_slowAlloc();
    v41 = a12;
    v38 = v27;
    v48 = v21;
    v49 = v27;
    *(_DWORD *)v26 = 134218498;
    v42 = a4;
    sub_1CE0B68F0();
    *(_WORD *)(v26 + 12) = 2080;
    v37[1] = v26 + 14;
    v28 = sub_1CE0B6A1C();
    v48 = sub_1CDFC7270(v28, v29, &v49);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2048;
    v48 = a6;
    a4 = v42;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v23, v24, v39, (uint8_t *)v26, 0x20u);
    v30 = v38;
    swift_arrayDestroy();
    v18 = v41;
    MEMORY[0x1D17C092C](v30, -1, -1);
    v31 = v26;
    a1 = v40;
    MEMORY[0x1D17C092C](v31, -1, -1);
  }

  v32 = sub_1CE0B6560();
  v33 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v45, 1, 1, v32);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = 0;
  *(_QWORD *)(v34 + 24) = 0;
  v35 = v46;
  *(_QWORD *)(v34 + 32) = v43;
  *(_QWORD *)(v34 + 40) = v35;
  *(_QWORD *)(v34 + 48) = a8;
  *(_QWORD *)(v34 + 56) = v21;
  *(_QWORD *)(v34 + 64) = v47;
  *(_QWORD *)(v34 + 72) = a4;
  *(_BYTE *)(v34 + 80) = a5;
  *(_QWORD *)(v34 + 88) = a6;
  *(_QWORD *)(v34 + 96) = a1;
  *(_QWORD *)(v34 + 104) = a2;
  swift_retain();
  swift_retain();
  sub_1CE06A744(v33, v18, v34);
  return swift_release();
}

uint64_t sub_1CE02F5DC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t);
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v8 + 56) = v16;
  *(_QWORD *)(v8 + 64) = v17;
  *(_OWORD *)(v8 + 40) = v15;
  *(_BYTE *)(v8 + 120) = v14;
  *(_QWORD *)(v8 + 24) = a7;
  *(_QWORD *)(v8 + 32) = a8;
  *(_QWORD *)(v8 + 16) = a6;
  *(_QWORD *)(v8 + 72) = *(_QWORD *)(v17 - 8);
  v10 = swift_task_alloc();
  *(_QWORD *)(v8 + 80) = v10;
  v13 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 88) = v11;
  *v11 = v8;
  v11[1] = sub_1CE02F684;
  return v13(v10);
}

uint64_t sub_1CE02F684()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE02F6E8()
{
  uint64_t v0;

  sub_1CE0B6548();
  *(_QWORD *)(v0 + 104) = sub_1CE0B653C();
  sub_1CE0B64DC();
  return swift_task_switch();
}

uint64_t sub_1CE02F750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(void (**)(char *))(v0 + 48);
  v7 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v0 + 32);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(unsigned __int8 *)(v0 + 120);
  swift_release();
  sub_1CE02F974(v8, v7, v6, v9, v5, v4, v2, v1, v3);
  return swift_task_switch();
}

uint64_t sub_1CE02F7F4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE02F834()
{
  uint64_t v0;

  sub_1CE0B6548();
  *(_QWORD *)(v0 + 112) = sub_1CE0B653C();
  sub_1CE0B64DC();
  return swift_task_switch();
}

uint64_t sub_1CE02F89C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(_QWORD *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  v1 = *(void **)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(void (**)(_QWORD *))(v0 + 48);
  v6 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 16);
  v8 = *(unsigned __int8 *)(v0 + 120);
  swift_release();
  sub_1CE02FC20(v7, v6, v5, v8, v4, v3, v2, v1);
  return swift_task_switch();
}

uint64_t sub_1CE02F93C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE02F974(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(char *), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v35 = a5;
  v34 = a4;
  v32 = a2;
  v33 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v37 = a9;
  v13 = sub_1CE0B6DA0();
  v36 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - v14;
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v16 = sub_1CE0B6080();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED8F1058);
  v17 = sub_1CE0B6068();
  v18 = sub_1CE0B6734();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v29 = v13;
    v20 = v19;
    v21 = swift_slowAlloc();
    v31 = v9;
    v28 = v21;
    v39 = v21;
    *(_DWORD *)v20 = 134218498;
    v38 = a1;
    sub_1CE0B68F0();
    *(_WORD *)(v20 + 12) = 2080;
    v30 = a8;
    v22 = sub_1CE0B6A1C();
    v38 = sub_1CDFC7270(v22, v23, &v39);
    a8 = v30;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    v38 = v35;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v17, v18, "Finished Main A->P conversion: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v24, -1, -1);
    v25 = v20;
    v13 = v29;
    MEMORY[0x1D17C092C](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v15, a8);
  swift_storeEnumTagMultiPayload();
  a6(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v15, v13);
}

uint64_t sub_1CE02FC20(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, void (*a6)(_QWORD *), uint64_t a7, void *a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD v27[2];
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a7;
  LODWORD(v32) = a4;
  v30 = a2;
  v31 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v12 = sub_1CE0B6DA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (_QWORD *)((char *)v27 - v14);
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v16 = sub_1CE0B6080();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED8F1058);
  v17 = sub_1CE0B6068();
  v18 = sub_1CE0B6734();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v29 = a8;
    v20 = v19;
    v28 = swift_slowAlloc();
    v35 = v28;
    *(_DWORD *)v20 = 134218498;
    v34 = a1;
    sub_1CE0B68F0();
    *(_WORD *)(v20 + 12) = 2080;
    v27[1] = v20 + 14;
    v21 = sub_1CE0B6A1C();
    v32 = a5;
    v34 = sub_1CDFC7270(v21, v22, &v35);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    v34 = v32;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v17, v18, "Finished Main A->P conversion: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    v23 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v23, -1, -1);
    v24 = v20;
    a8 = v29;
    MEMORY[0x1D17C092C](v24, -1, -1);
  }

  *v15 = a8;
  swift_storeEnumTagMultiPayload();
  v25 = a8;
  a6(v15);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1CE02FEB0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v36 = a6;
  v40 = a5;
  v38 = a1;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v11 = sub_1CE0B6518();
  v12 = *(_QWORD *)(v11 - 8);
  v37 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v31 - v13;
  v14 = sub_1CDFBBCDC(0x65uLL);
  if (qword_1ED8F10A8 != -1)
    swift_once();
  v15 = sub_1CE0B6080();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED8F1058);
  v16 = sub_1CE0B6068();
  v17 = sub_1CE0B6734();
  v18 = os_log_type_enabled(v16, v17);
  v35 = a4;
  if (v18)
  {
    v19 = swift_slowAlloc();
    v32 = a7;
    v20 = v19;
    v21 = swift_slowAlloc();
    v34 = a3;
    v31 = v21;
    v41 = v14;
    v42 = v21;
    *(_DWORD *)v20 = 134218498;
    v33 = a2;
    sub_1CE0B68F0();
    *(_WORD *)(v20 + 12) = 2080;
    v22 = sub_1CE0B6A1C();
    v41 = sub_1CDFC7270(v22, v23, &v42);
    sub_1CE0B68F0();
    v24 = v40;
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2048;
    v41 = v24;
    a2 = v33;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v16, v17, "Converting from Promise to Async-Await. Created at: %ld:%s:%lu", (uint8_t *)v20, 0x20u);
    v25 = v31;
    swift_arrayDestroy();
    a3 = v34;
    MEMORY[0x1D17C092C](v25, -1, -1);
    v26 = v20;
    a7 = v32;
    MEMORY[0x1D17C092C](v26, -1, -1);
  }

  v27 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v39, v38, v11);
  v28 = (*(unsigned __int8 *)(v12 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a7;
  *(_QWORD *)(v29 + 24) = v14;
  *(_QWORD *)(v29 + 32) = a2;
  *(_QWORD *)(v29 + 40) = a3;
  *(_BYTE *)(v29 + 48) = v35;
  *(_QWORD *)(v29 + 56) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v29 + v28, v27, v11);
  sub_1CE0B5C6C();
  sub_1CE0B5C48();
  return swift_release();
}

uint64_t sub_1CE0301A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE02FEB0(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CE0301BC(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  if (qword_1ED8F10A8 != -1)
    swift_once();
  v2 = sub_1CE0B6080();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED8F1058);
  v3 = sub_1CE0B6068();
  v4 = sub_1CE0B6734();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 134218498;
    sub_1CE0B68F0();
    *(_WORD *)(v5 + 12) = 2080;
    v7 = sub_1CE0B6A1C();
    sub_1CDFC7270(v7, v8, &v11);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2048;
    sub_1CE0B68F0();
    _os_log_impl(&dword_1CDFAA000, v3, v4, "Finished P->A conversion: %ld:%s:%lu", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v6, -1, -1);
    MEMORY[0x1D17C092C](v5, -1, -1);
  }

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v9 = sub_1CE0B6518();
  return sub_1CDFC1068(a1, v9);
}

uint64_t sub_1CE0303E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  _QWORD *v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  if (__isPlatformVersionAtLeast(2, 18, 0, 0))
  {
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 24) = v17;
    *v17 = v8;
    v17[1] = sub_1CDFD4708;
    return sub_1CE0B6C80();
  }
  else
  {
    v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EFA60718 + dword_1EFA60718);
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v8 + 16) = v19;
    *v19 = v8;
    v19[1] = sub_1CDFACD3C;
    return v20(a1, a2, a3, a4, a5, a6, a7, a8);
  }
}

uint64_t sub_1CE03051C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CE030540(void *a1)
{
  uint64_t v1;

  sub_1CE02E9EC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE03055C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a1;
  v8[11] = a4;
  if (a2)
  {
    swift_getObjectType();
    sub_1CE0B64DC();
  }
  return swift_task_switch();
}

uint64_t sub_1CE0305C8()
{
  _QWORD *v0;
  void (*v1)(char *);
  uint64_t v2;

  v1 = (void (*)(char *))v0[13];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1CE030644;
  v2 = swift_continuation_init();
  sub_1CE030698(v2, v1);
  return swift_continuation_await();
}

uint64_t sub_1CE030644()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1CE030698(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v3 = sub_1CE0B6518();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - v5;
  swift_bridgeObjectRetain();
  sub_1CE0B64F4();
  a2(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1CE030788()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0307AC(void *a1)
{
  uint64_t v1;

  return sub_1CE05DDAC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CE0307B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE030830(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (uint64_t *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1CE05DF6C(a1, a2, v2 + v6, *v7, v7[1]);
}

uint64_t sub_1CE030898()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE0308BC(uint64_t a1, uint64_t a2)
{
  return sub_1CE0308F4(a1, a2, "Converting from Async-Await to Promise: %ld:%s:%lu", (uint64_t)&unk_1E8B67510, (uint64_t)&unk_1EFA60710);
}

uint64_t sub_1CE0308D8(uint64_t a1, uint64_t a2)
{
  return sub_1CE0308F4(a1, a2, "Converting from Async-Await to Promise Main: %ld:%s:%lu", (uint64_t)&unk_1E8B674E8, (uint64_t)&unk_1EFA60700);
}

uint64_t sub_1CE0308F4(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1CE02F2E8(a1, a2, *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(_BYTE *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_QWORD *)(v5 + 64), *(_QWORD *)(v5 + 16), a3, a4, a5);
}

void sub_1CE03093C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD3C;
  __asm { BR              X9; sub_1CE02F5DC }
}

void sub_1CE030A0C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CDFACD38;
  __asm { BR              X9; sub_1CE02EC58 }
}

uint64_t sub_1CE030AD8()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  v1 = sub_1CE0B6518();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CE030B58(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1ED8F15A8);
  sub_1CE0B6518();
  return sub_1CE0301BC(a1);
}

uint64_t HeartRateMetricUpdated.heartRateMetric.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B4A6C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HeartRateMetricUpdated.sessionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeartRateMetricUpdated() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for HeartRateMetricUpdated()
{
  uint64_t result;

  result = qword_1EFA60778;
  if (!qword_1EFA60778)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t HeartRateMetricUpdated.init(heartRateMetric:sessionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;

  v8 = sub_1CE0B4A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  result = type metadata accessor for HeartRateMetricUpdated();
  v10 = (_QWORD *)(a4 + *(int *)(result + 20));
  *v10 = a2;
  v10[1] = a3;
  return result;
}

void static HeartRateMetricUpdated.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeartRateMetricUpdated(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CE0B4A6C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for HeartRateMetricUpdated(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B4A6C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1CE0B4A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1CE0B4A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CE0B4A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for HeartRateMetricUpdated(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1CE0B4A6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for HeartRateMetricUpdated()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE030F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1CE0B4A6C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for HeartRateMetricUpdated()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE031018(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1CE0B4A6C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1CE031094()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B4A6C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t AudioFocusPreference.applyingTimestampOffset(_:)()
{
  sub_1CE0B4FE8();
  return sub_1CE0B4FF4();
}

uint64_t sub_1CE03114C()
{
  sub_1CE0B4FE8();
  return sub_1CE0B4FF4();
}

uint64_t dispatch thunk of MetricClientProtocol.recordMetricClickStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of MetricClientProtocol.recordMetricPerformanceStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MetricClientProtocol.recordMetricPlayStream(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MetricClientProtocol.flushMetrics()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MetricClientProtocol.updateMetricIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MetricClientProtocol.resetMetricIdentifiers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t PersistenceQueryClauses.predicates.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t PersistenceQueryClauses.limit.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 8) = result;
  *(_BYTE *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t (*PersistenceQueryClauses.limit.modify())()
{
  return nullsub_1;
}

uint64_t PersistenceQueryClauses.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t PersistenceQueryClauses.offset.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*PersistenceQueryClauses.offset.modify())()
{
  return nullsub_1;
}

uint64_t PersistenceQueryClauses.sort.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*PersistenceQueryClauses.sort.modify())()
{
  return nullsub_1;
}

uint64_t (*PersistenceQueryClauses.returnsObjectsAsFaults.modify())()
{
  return nullsub_1;
}

void __swiftcall PersistenceQueryClauses.init(predicates:limit:offset:sort:returnsObjectsAsFaults:)(SeymourClient::PersistenceQueryClauses *__return_ptr retstr, Swift::OpaquePointer predicates, Swift::Int_optional limit, Swift::Int_optional offset, Swift::OpaquePointer sort, Swift::Bool returnsObjectsAsFaults)
{
  retstr->predicates = predicates;
  retstr->limit.value = limit.value;
  retstr->limit.is_nil = limit.is_nil;
  retstr->offset.value = offset.value;
  retstr->offset.is_nil = offset.is_nil;
  retstr->sort = sort;
  retstr->returnsObjectsAsFaults = returnsObjectsAsFaults;
}

uint64_t PersistenceQueryClauses.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  int v5;
  int v6;
  unint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)v2;
  v5 = *(unsigned __int8 *)(v2 + 16);
  v6 = *(unsigned __int8 *)(v2 + 32);
  v7 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  sub_1CE0320B0(a1, v4);
  swift_bridgeObjectRelease();
  if (v5 != 1)
  {
    sub_1CE0B6D4C();
    sub_1CE0B6D40();
    if (!v6)
      goto LABEL_3;
LABEL_5:
    sub_1CE0B6D4C();
    goto LABEL_6;
  }
  sub_1CE0B6D4C();
  if (v6)
    goto LABEL_5;
LABEL_3:
  sub_1CE0B6D4C();
  sub_1CE0B6D40();
LABEL_6:
  swift_bridgeObjectRetain();
  sub_1CE0320B0(a1, v7);
  swift_bridgeObjectRelease();
  return sub_1CE0B6D4C();
}

uint64_t PersistenceQueryClauses.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  _QWORD v8[11];
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_BYTE *)(v0 + 48);
  v8[9] = *(_QWORD *)v0;
  v8[10] = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  sub_1CE0B6D34();
  PersistenceQueryClauses.hash(into:)((uint64_t)v8);
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0313EC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  _QWORD v8[11];
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_BYTE *)(v0 + 48);
  v8[9] = *(_QWORD *)v0;
  v8[10] = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  sub_1CE0B6D34();
  PersistenceQueryClauses.hash(into:)((uint64_t)v8);
  return sub_1CE0B6D64();
}

uint64_t sub_1CE031460()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  _QWORD v8[11];
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_BYTE *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_BYTE *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_BYTE *)(v0 + 48);
  v8[9] = *(_QWORD *)v0;
  v8[10] = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  sub_1CE0B6D34();
  PersistenceQueryClauses.hash(into:)((uint64_t)v8);
  return sub_1CE0B6D64();
}

uint64_t sub_1CE0314D0()
{
  sub_1CE032530();
  return sub_1CE0B58F4();
}

uint64_t sub_1CE031504()
{
  sub_1CE032530();
  return sub_1CE0B5900();
}

uint64_t sub_1CE031560()
{
  sub_1CE032530();
  return sub_1CE0B58DC();
}

uint64_t sub_1CE031594()
{
  sub_1CE032530();
  return sub_1CE0B58E8();
}

uint64_t sub_1CE0315F0()
{
  sub_1CE032530();
  return sub_1CE0B590C();
}

uint64_t sub_1CE031624()
{
  sub_1CE032530();
  return sub_1CE0B5918();
}

uint64_t PersistenceQueryClauses.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1CE0B599C();
  v5 = MEMORY[0x1E0DEE9D8];
  v33 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(v4 + 16);
  if (v6)
  {
    sub_1CDFB53C8(0, &qword_1EFA607B0);
    sub_1CDFB53C8(0, &qword_1EFA607B8);
    swift_bridgeObjectRetain();
    v7 = (unint64_t *)(v4 + 40);
    while (1)
    {
      v9 = *(v7 - 1);
      v8 = *v7;
      sub_1CDFC0990(v9, *v7);
      v10 = sub_1CE0B674C();
      if (v2)
        break;
      v11 = v10;
      v12 = sub_1CDFC666C(v9, v8);
      if (v11)
      {
        MEMORY[0x1D17BF798](v12);
        if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1CE0B6470();
        sub_1CE0B64A0();
        sub_1CE0B644C();
      }
      v7 += 2;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        v13 = v33;
        v5 = MEMORY[0x1E0DEE9D8];
        goto LABEL_12;
      }
    }
    sub_1CDFC666C(v9, v8);
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    v25 = sub_1CE0B5A2C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
LABEL_12:
    swift_bridgeObjectRelease();
    v14 = sub_1CE0B5A14();
    if ((v14 & 1) != 0)
      v15 = sub_1CE0B59E4();
    else
      v15 = 0;
    v31 = sub_1CE0B5A20();
    if ((v31 & 1) != 0)
      v16 = sub_1CE0B59FC();
    else
      v16 = 0;
    v17 = sub_1CE0B59CC();
    v34 = v5;
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v29 = v14;
      v30 = v15;
      sub_1CDFB53C8(0, &qword_1EFA607B0);
      sub_1CDFB53C8(0, &qword_1EFA607C0);
      swift_bridgeObjectRetain();
      v19 = (unint64_t *)(v17 + 40);
      do
      {
        v20 = *(v19 - 1);
        v21 = *v19;
        sub_1CDFC0990(v20, *v19);
        v22 = sub_1CE0B674C();
        if (v2)
        {
          sub_1CDFC666C(v20, v21);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        v23 = v22;
        v24 = sub_1CDFC666C(v20, v21);
        if (v23)
        {
          MEMORY[0x1D17BF798](v24);
          if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1CE0B6470();
          sub_1CE0B64A0();
          sub_1CE0B644C();
        }
        v19 += 2;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v5 = v34;
      v15 = v30;
      v14 = v29;
    }
    swift_bridgeObjectRelease();
    v27 = sub_1CE0B59B4();
    v28 = sub_1CE0B5A2C();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
    *(_QWORD *)a2 = v13;
    *(_QWORD *)(a2 + 8) = v15;
    *(_BYTE *)(a2 + 16) = (v14 ^ 1) & 1;
    *(_QWORD *)(a2 + 24) = v16;
    *(_BYTE *)(a2 + 32) = (v31 ^ 1) & 1;
    *(_QWORD *)(a2 + 40) = v5;
    *(_BYTE *)(a2 + 48) = v27 & 1;
  }
  return result;
}

uint64_t PersistenceQueryClauses.protobuf()()
{
  sub_1CE0B5A2C();
  sub_1CE03234C(&qword_1EFA607C8, MEMORY[0x1E0D95860]);
  return sub_1CE0B5FD8();
}

uint64_t sub_1CE031AD8(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t result;
  _QWORD *v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _BYTE v40[16];
  _BYTE v41[16];
  unint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;

  v2 = a2;
  v46 = *MEMORY[0x1E0C80C00];
  v4 = *a2;
  v39 = v4;
  if (v4 >> 62)
    goto LABEL_42;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v6 = MEMORY[0x1E0DEE9D8];
    v32 = v2;
    v33 = a1;
    if (!v5)
      break;
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1CDFCFA30(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
LABEL_46:
      __break(1u);
    }
    v7 = v37;
    v34 = (id)objc_opt_self();
    v8 = 0;
    while (v5 != v8)
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1D17BFD98](v8, v4);
      else
        v9 = *(id *)(v4 + 8 * v8 + 32);
      v10 = v9;
      v36 = 0;
      v11 = objc_msgSend(v34, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v9, 1, &v36);
      v12 = v36;
      if (!v11)
      {
        v17 = v12;
        sub_1CE0B3CC8();

        swift_willThrow();
        swift_release();

        v18 = (uint64_t *)&v39;
        return sub_1CE032574((uint64_t)v18);
      }
      a1 = sub_1CE0B3D64();
      v2 = v13;

      v37 = v7;
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1CDFCFA30(v14 > 1, v15 + 1, 1);
        v7 = v37;
      }
      ++v8;
      *(_QWORD *)(v7 + 16) = v15 + 1;
      v16 = v7 + 16 * v15;
      *(_QWORD *)(v16 + 32) = a1;
      *(_QWORD *)(v16 + 40) = v2;
      if (v5 == v8)
      {
        sub_1CE032574((uint64_t)&v39);
        v2 = v32;
        a1 = v33;
        v6 = MEMORY[0x1E0DEE9D8];
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    v5 = sub_1CE0B6B30();
  }
  sub_1CE032574((uint64_t)&v39);
LABEL_17:
  sub_1CE0B59A8();
  sub_1CE03259C((uint64_t)(v2 + 1), (uint64_t)v41);
  sub_1CE03259C((uint64_t)v41, (uint64_t)&v42);
  if ((v43 & 1) == 0)
  {
    if ((v42 & 0x8000000000000000) != 0 || HIDWORD(v42))
      goto LABEL_47;
    sub_1CE0B59F0();
  }
  sub_1CE03259C((uint64_t)(v2 + 3), (uint64_t)v40);
  sub_1CE03259C((uint64_t)v40, (uint64_t)&v44);
  if ((v45 & 1) != 0)
    goto LABEL_25;
  if ((v44 & 0x8000000000000000) != 0 || HIDWORD(v44))
  {
LABEL_47:
    result = sub_1CE0B6ADC();
    __break(1u);
    return result;
  }
  sub_1CE0B5A08();
LABEL_25:
  v4 = v2[5];
  v38 = v4;
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v19 = sub_1CE0B6B30();
    if (v19)
      goto LABEL_27;
LABEL_44:
    sub_1CE032574((uint64_t)&v38);
    sub_1CE0B59D8();
    return sub_1CE0B59C0();
  }
  v19 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19)
    goto LABEL_44;
LABEL_27:
  v37 = v6;
  sub_1CDFCFA30(0, v19 & ~(v19 >> 63), 0);
  if (v19 < 0)
    goto LABEL_46;
  v20 = v37;
  v35 = (id)objc_opt_self();
  v21 = 0;
  while (1)
  {
    if (v19 == v21)
      goto LABEL_41;
    v22 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D17BFD98](v21, v4) : *(id *)(v4 + 8 * v21 + 32);
    v23 = v22;
    v36 = 0;
    v24 = objc_msgSend(v35, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v22, 1, &v36);
    v25 = v36;
    if (!v24)
      break;
    a1 = sub_1CE0B3D64();
    v2 = v26;

    v37 = v20;
    v28 = *(_QWORD *)(v20 + 16);
    v27 = *(_QWORD *)(v20 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1CDFCFA30(v27 > 1, v28 + 1, 1);
      v20 = v37;
    }
    ++v21;
    *(_QWORD *)(v20 + 16) = v28 + 1;
    v29 = v20 + 16 * v28;
    *(_QWORD *)(v29 + 32) = a1;
    *(_QWORD *)(v29 + 40) = v2;
    if (v19 == v21)
      goto LABEL_44;
  }
  v30 = v25;
  sub_1CE0B3CC8();

  swift_willThrow();
  swift_release();

  v18 = (uint64_t *)&v38;
  return sub_1CE032574((uint64_t)v18);
}

uint64_t sub_1CE031FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return PersistenceQueryClauses.init(_:)(a1, a2);
}

uint64_t sub_1CE031FD0()
{
  sub_1CE0B5A2C();
  sub_1CE03234C(&qword_1EFA607C8, MEMORY[0x1E0D95860]);
  return sub_1CE0B5FD8();
}

uint64_t sub_1CE032060()
{
  return sub_1CE0B5918();
}

uint64_t sub_1CE032074()
{
  return sub_1CE0B590C();
}

uint64_t sub_1CE032088()
{
  return sub_1CE0B58E8();
}

uint64_t sub_1CE03209C()
{
  return sub_1CE0B58DC();
}

void sub_1CE0320B0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    sub_1CE0B6D40();
    swift_bridgeObjectRetain();
    v3 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_1CE0B6D40();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1D17BFD98](i, a2);
      sub_1CE0B6860();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_1CE0B6860();

      --v3;
    }
    while (v3);
  }
}

uint64_t _s13SeymourClient23PersistenceQueryClausesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  int v11;
  char v12;
  char v14;
  uint64_t v15;
  char v16;

  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_BYTE *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(unsigned __int8 *)(a1 + 48);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  if ((sub_1CE04FC60(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if ((v16 & 1) != 0)
  {
    if (!v7)
      return 0;
  }
  else
  {
    if (v15 == v6)
      v12 = v7;
    else
      v12 = 1;
    if ((v12 & 1) != 0)
      return 0;
  }
  if ((v3 & 1) != 0)
  {
    if (!v9)
      return 0;
  }
  else
  {
    if (v2 == v8)
      v14 = v9;
    else
      v14 = 1;
    if ((v14 & 1) != 0)
      return 0;
  }
  if ((sub_1CE04FC74(v4, v10) & 1) != 0)
    return v5 ^ v11 ^ 1u;
  else
    return 0;
}

uint64_t sub_1CE0322A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CE031AD8(a1, *(_QWORD **)(v1 + 16));
}

unint64_t sub_1CE0322C0()
{
  unint64_t result;

  result = qword_1EFA607D0;
  if (!qword_1EFA607D0)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for PersistenceQueryClauses, &type metadata for PersistenceQueryClauses);
    atomic_store(result, (unint64_t *)&qword_1EFA607D0);
  }
  return result;
}

uint64_t sub_1CE032304()
{
  return sub_1CE03234C(&qword_1EFA607C8, MEMORY[0x1E0D95860]);
}

uint64_t sub_1CE032328()
{
  return sub_1CE03234C(&qword_1EFA607D8, MEMORY[0x1E0D958D8]);
}

uint64_t sub_1CE03234C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CE0B5A2C();
    result = MEMORY[0x1D17C0848](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t assignWithCopy for PersistenceQueryClauses(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  LOBYTE(v4) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PersistenceQueryClauses(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PersistenceQueryClauses(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PersistenceQueryClauses(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

unint64_t sub_1CE032530()
{
  unint64_t result;

  result = qword_1EFA607E0;
  if (!qword_1EFA607E0)
  {
    result = MEMORY[0x1D17C0848](&protocol conformance descriptor for PersistenceQueryClauses, &type metadata for PersistenceQueryClauses);
    atomic_store(result, (unint64_t *)&qword_1EFA607E0);
  }
  return result;
}

uint64_t sub_1CE032574(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CE03259C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA607E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE0325E4(uint64_t a1)
{
  return sub_1CE0322A4(a1);
}

id ActivityRingsQueryProvider.makeActivityRingsQuery(handler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = objc_allocWithZone(MEMORY[0x1E0CB6F40]);
  v9[4] = sub_1CE032C28;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1CE032D04;
  v9[3] = &block_descriptor_7;
  v6 = _Block_copy(v9);
  swift_retain();
  v7 = objc_msgSend(v5, sel_initWithUpdateHandler_, v6);
  _Block_release(v6);
  swift_release();
  return v7;
}

uint64_t sub_1CE0326D0(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  void (*v22)(uint64_t *);
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  _BYTE *v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint8_t *v32;
  uint8_t *v33;
  id v34;
  _BYTE *v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  id v47;
  _QWORD v48[6];
  uint64_t v49;

  v48[1] = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA607F0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1CE0B43B8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (a3)
    {
      v27 = a3;
    }
    else
    {
      sub_1CE032DA4();
      v27 = (void *)swift_allocError();
      *v36 = 1;
    }
    v37 = a3;
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v38 = sub_1CE0B6080();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED8F0FD0);
    v39 = v27;
    v40 = v27;
    v41 = sub_1CE0B6068();
    v42 = sub_1CE0B671C();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v49 = v44;
      v48[0] = a4;
      *(_DWORD *)v43 = 136315138;
      swift_getErrorValue();
      v45 = MEMORY[0x1D17C0050](v48[4], v48[5]);
      v48[2] = sub_1CDFC7270(v45, v46, &v49);
      a4 = (void (*)(uint64_t *))v48[0];
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v41, v42, "ActivityRingsQueryProvider - failed to get rings %s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v44, -1, -1);
      MEMORY[0x1D17C092C](v43, -1, -1);
    }
    else
    {

    }
    *v13 = (uint64_t)v27;
    swift_storeEnumTagMultiPayload();
    v47 = v27;
    a4(v13);

    return sub_1CE032DE8((uint64_t)v13);
  }
  v18 = a2;
  if ((objc_msgSend(v18, sel__isDataLoading) & 1) != 0)
  {
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v19 = sub_1CE0B6080();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED8F0FD0);
    v20 = sub_1CE0B6068();
    v21 = sub_1CE0B671C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = a4;
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_1CDFAA000, v20, v21, "ActivityRingsQueryProvider - data is loading", v23, 2u);
      v24 = v23;
      a4 = v22;
      MEMORY[0x1D17C092C](v24, -1, -1);
    }

    sub_1CE032DA4();
    v25 = swift_allocError();
    *v26 = 0;
    *v13 = v25;
    swift_storeEnumTagMultiPayload();
    a4(v13);

    return sub_1CE032DE8((uint64_t)v13);
  }
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v28 = sub_1CE0B6080();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED8F0FD0);
  v29 = sub_1CE0B6068();
  v30 = sub_1CE0B6734();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v48[0] = a4;
    v32 = v31;
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1CDFAA000, v29, v30, "ActivityRingsQueryProvider - results received", v31, 2u);
    v33 = v32;
    a4 = (void (*)(uint64_t *))v48[0];
    MEMORY[0x1D17C092C](v33, -1, -1);
  }

  HKActivitySummary.activityRings()((uint64_t)v17);
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v17, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
  v34 = a3;
  sub_1CE0B6D7C();
  a4(v13);

  sub_1CE032DE8((uint64_t)v13);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1CE032C04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CE032C28(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;

  return sub_1CE0326D0(a1, a2, a3, *(void (**)(uint64_t *))(v3 + 16), *(_QWORD *)(v3 + 24));
}

id sub_1CE032C30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = objc_allocWithZone(MEMORY[0x1E0CB6F40]);
  v9[4] = sub_1CE032E30;
  v9[5] = v4;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1CE032D04;
  v9[3] = &block_descriptor_7;
  v6 = _Block_copy(v9);
  swift_retain();
  v7 = objc_msgSend(v5, sel_initWithUpdateHandler_, v6);
  _Block_release(v6);
  swift_release();
  return v7;
}

void sub_1CE032D04(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, void *, void *);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, void *, void *))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, a3, a4);
  swift_release();

}

uint64_t dispatch thunk of ActivityRingsQueryProviderProtocol.makeActivityRingsQuery(handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for ActivityRingsQueryProvider()
{
  return &type metadata for ActivityRingsQueryProvider;
}

unint64_t sub_1CE032DA4()
{
  unint64_t result;

  result = qword_1EFA607F8;
  if (!qword_1EFA607F8)
  {
    result = MEMORY[0x1D17C0848](&unk_1CE0BE26C, &type metadata for HealthStoreError);
    atomic_store(result, (unint64_t *)&qword_1EFA607F8);
  }
  return result;
}

uint64_t sub_1CE032DE8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA607F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Session.+ infix(_:_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  char *v230;
  char *v231;
  char *v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t v269;

  v252 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  v2 = MEMORY[0x1E0C80A78](v1);
  v251 = (char *)&v197 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v249 = (char *)&v197 - v5;
  MEMORY[0x1E0C80A78](v4);
  v250 = (uint64_t)&v197 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v248 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v246 = (char *)&v197 - v11;
  MEMORY[0x1E0C80A78](v10);
  v247 = (uint64_t)&v197 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  v14 = MEMORY[0x1E0C80A78](v13);
  v245 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v243 = (char *)&v197 - v17;
  MEMORY[0x1E0C80A78](v16);
  v244 = (uint64_t)&v197 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  v20 = MEMORY[0x1E0C80A78](v19);
  v242 = (char *)&v197 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v240 = (char *)&v197 - v23;
  MEMORY[0x1E0C80A78](v22);
  v241 = (uint64_t)&v197 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  v26 = MEMORY[0x1E0C80A78](v25);
  v239 = (char *)&v197 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v237 = (char *)&v197 - v29;
  MEMORY[0x1E0C80A78](v28);
  v238 = (uint64_t)&v197 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  v32 = MEMORY[0x1E0C80A78](v31);
  v236 = (char *)&v197 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v234 = (char *)&v197 - v35;
  MEMORY[0x1E0C80A78](v34);
  v235 = (uint64_t)&v197 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  MEMORY[0x1E0C80A78](v37);
  v233 = (char *)&v197 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  v40 = MEMORY[0x1E0C80A78](v39);
  v232 = (char *)&v197 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x1E0C80A78](v40);
  v231 = (char *)&v197 - v43;
  MEMORY[0x1E0C80A78](v42);
  v269 = (uint64_t)&v197 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFA62FC0);
  MEMORY[0x1E0C80A78](v45);
  v268 = (char *)&v197 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  v48 = MEMORY[0x1E0C80A78](v47);
  v230 = (char *)&v197 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v48);
  v229 = (char *)&v197 - v51;
  MEMORY[0x1E0C80A78](v50);
  v267 = (uint64_t)&v197 - v52;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  v54 = MEMORY[0x1E0C80A78](v53);
  v228 = (char *)&v197 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x1E0C80A78](v54);
  v227 = (char *)&v197 - v57;
  MEMORY[0x1E0C80A78](v56);
  v266 = (uint64_t)&v197 - v58;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  v60 = MEMORY[0x1E0C80A78](v59);
  v226 = (char *)&v197 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = MEMORY[0x1E0C80A78](v60);
  v225 = (char *)&v197 - v63;
  MEMORY[0x1E0C80A78](v62);
  v265 = (uint64_t)&v197 - v64;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  v66 = MEMORY[0x1E0C80A78](v65);
  v224 = (char *)&v197 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = MEMORY[0x1E0C80A78](v66);
  v223 = (char *)&v197 - v69;
  MEMORY[0x1E0C80A78](v68);
  v264 = (uint64_t)&v197 - v70;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  v72 = MEMORY[0x1E0C80A78](v71);
  v214 = (char *)&v197 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = MEMORY[0x1E0C80A78](v72);
  v213 = (char *)&v197 - v75;
  MEMORY[0x1E0C80A78](v74);
  v263 = (uint64_t)&v197 - v76;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  v78 = MEMORY[0x1E0C80A78](v77);
  v212 = (char *)&v197 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = MEMORY[0x1E0C80A78](v78);
  v211 = (char *)&v197 - v81;
  MEMORY[0x1E0C80A78](v80);
  v262 = (uint64_t)&v197 - v82;
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  v84 = MEMORY[0x1E0C80A78](v83);
  v210 = (char *)&v197 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = MEMORY[0x1E0C80A78](v84);
  v209 = (char *)&v197 - v87;
  MEMORY[0x1E0C80A78](v86);
  v261 = (uint64_t)&v197 - v88;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  v90 = MEMORY[0x1E0C80A78](v89);
  v208 = (char *)&v197 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = MEMORY[0x1E0C80A78](v90);
  v207 = (char *)&v197 - v93;
  MEMORY[0x1E0C80A78](v92);
  v260 = (uint64_t)&v197 - v94;
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  v96 = MEMORY[0x1E0C80A78](v95);
  v206 = (char *)&v197 - ((v97 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = MEMORY[0x1E0C80A78](v96);
  v205 = (char *)&v197 - v99;
  MEMORY[0x1E0C80A78](v98);
  v259 = (uint64_t)&v197 - v100;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  v102 = MEMORY[0x1E0C80A78](v101);
  v204 = (char *)&v197 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = MEMORY[0x1E0C80A78](v102);
  v203 = (char *)&v197 - v105;
  MEMORY[0x1E0C80A78](v104);
  v258 = (uint64_t)&v197 - v106;
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  v108 = MEMORY[0x1E0C80A78](v107);
  v202 = (char *)&v197 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = MEMORY[0x1E0C80A78](v108);
  v201 = (char *)&v197 - v111;
  MEMORY[0x1E0C80A78](v110);
  v257 = (uint64_t)&v197 - v112;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  v114 = MEMORY[0x1E0C80A78](v113);
  v200 = (char *)&v197 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = MEMORY[0x1E0C80A78](v114);
  v199 = (char *)&v197 - v117;
  MEMORY[0x1E0C80A78](v116);
  v256 = (uint64_t)&v197 - v118;
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  v120 = MEMORY[0x1E0C80A78](v119);
  v198 = (char *)&v197 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = MEMORY[0x1E0C80A78](v120);
  v197 = (char *)&v197 - v123;
  MEMORY[0x1E0C80A78](v122);
  v255 = (uint64_t)&v197 - v124;
  v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  v126 = MEMORY[0x1E0C80A78](v125);
  v128 = (char *)&v197 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = MEMORY[0x1E0C80A78](v126);
  v131 = (char *)&v197 - v130;
  MEMORY[0x1E0C80A78](v129);
  v254 = (uint64_t)&v197 - v132;
  v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  v134 = MEMORY[0x1E0C80A78](v133);
  v136 = (char *)&v197 - ((v135 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = MEMORY[0x1E0C80A78](v134);
  v139 = (char *)&v197 - v138;
  MEMORY[0x1E0C80A78](v137);
  v253 = (uint64_t)&v197 - v140;
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v142 = MEMORY[0x1E0C80A78](v141);
  v144 = (char *)&v197 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = MEMORY[0x1E0C80A78](v142);
  v147 = (char *)&v197 - v146;
  MEMORY[0x1E0C80A78](v145);
  v149 = (char *)&v197 - v148;
  v215 = (char *)&v197 - v148;
  v150 = sub_1CE0B482C();
  MEMORY[0x1E0C80A78](v150);
  v220 = (char *)&v197 - ((v151 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = sub_1CE0B5C9C();
  v221 = v152;
  sub_1CE0B5CF0();
  v219 = sub_1CE0B5D98();
  v218 = v153;
  v217 = sub_1CE0B5D5C();
  v216 = sub_1CE0B5D74();
  sub_1CE0B5CE4();
  sub_1CE0B4508();
  sub_1CE034668((uint64_t)v147, (uint64_t)v144, &qword_1EFA5D940, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90A38], (double (*)(void))MEMORY[0x1E0D90A10], (uint64_t)v149);
  sub_1CDFB13F8((uint64_t)v144, &qword_1EFA5D940);
  sub_1CDFB13F8((uint64_t)v147, &qword_1EFA5D940);
  sub_1CE0B5D80();
  sub_1CE0B45A4();
  sub_1CE034668((uint64_t)v139, (uint64_t)v136, &qword_1EFA5D920, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92FA8], (double (*)(void))MEMORY[0x1E0D92F98], v253);
  sub_1CDFB13F8((uint64_t)v136, &qword_1EFA5D920);
  sub_1CDFB13F8((uint64_t)v139, &qword_1EFA5D920);
  sub_1CE0B5DF8();
  sub_1CE0B45F8();
  sub_1CE034668((uint64_t)v131, (uint64_t)v128, &qword_1EFA5D918, (uint64_t (*)(_QWORD))MEMORY[0x1E0D966F0], (double (*)(void))MEMORY[0x1E0D966E0], v254);
  sub_1CDFB13F8((uint64_t)v128, &qword_1EFA5D918);
  sub_1CDFB13F8((uint64_t)v131, &qword_1EFA5D918);
  v154 = (uint64_t)v197;
  sub_1CE0B5D20();
  v155 = (uint64_t)v198;
  sub_1CE0B4544();
  sub_1CE034870(v154, v155, &qword_1EFA5D910, (uint64_t (*)(_QWORD))MEMORY[0x1E0D916C8], (double (*)(void))MEMORY[0x1E0D916B8], v255);
  sub_1CDFB13F8(v155, &qword_1EFA5D910);
  sub_1CDFB13F8(v154, &qword_1EFA5D910);
  v156 = (uint64_t)v199;
  sub_1CE0B5D68();
  v157 = (uint64_t)v200;
  sub_1CE0B4598();
  sub_1CE034668(v156, v157, &qword_1EFA5D908, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92730], (double (*)(void))MEMORY[0x1E0D92720], v256);
  sub_1CDFB13F8(v157, &qword_1EFA5D908);
  sub_1CDFB13F8(v156, &qword_1EFA5D908);
  v158 = (uint64_t)v201;
  sub_1CE0B5CFC();
  v159 = (uint64_t)v202;
  sub_1CE0B4520();
  sub_1CE034668(v158, v159, &qword_1EFA5D8E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91220], (double (*)(void))MEMORY[0x1E0D91210], v257);
  sub_1CDFB13F8(v159, &qword_1EFA5D8E8);
  sub_1CDFB13F8(v158, &qword_1EFA5D8E8);
  v160 = (uint64_t)v203;
  sub_1CE0B5CCC();
  v161 = (uint64_t)v204;
  sub_1CE0B44FC();
  sub_1CE034668(v160, v161, &qword_1EFA5D8E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D907E8], (double (*)(void))MEMORY[0x1E0D907D0], v258);
  sub_1CDFB13F8(v161, &qword_1EFA5D8E0);
  sub_1CDFB13F8(v160, &qword_1EFA5D8E0);
  v162 = (uint64_t)v205;
  sub_1CE0B5D50();
  v163 = (uint64_t)v206;
  sub_1CE0B4568();
  sub_1CE034668(v162, v163, &qword_1EFA5D8D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91C78], (double (*)(void))MEMORY[0x1E0D91C48], v259);
  sub_1CDFB13F8(v163, &qword_1EFA5D8D8);
  sub_1CDFB13F8(v162, &qword_1EFA5D8D8);
  v164 = (uint64_t)v207;
  sub_1CE0B5D2C();
  v165 = (uint64_t)v208;
  sub_1CE0B4550();
  sub_1CE034668(v164, v165, &qword_1EFA5D8D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D917F8], (double (*)(void))MEMORY[0x1E0D917E8], v260);
  sub_1CDFB13F8(v165, &qword_1EFA5D8D0);
  sub_1CDFB13F8(v164, &qword_1EFA5D8D0);
  v166 = (uint64_t)v209;
  sub_1CE0B5CA8();
  v167 = (uint64_t)v210;
  sub_1CE0B44CC();
  sub_1CE034668(v166, v167, &qword_1EFA5D8C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8FF40], (double (*)(void))MEMORY[0x1E0D8FF10], v261);
  sub_1CDFB13F8(v167, &qword_1EFA5D8C8);
  sub_1CDFB13F8(v166, &qword_1EFA5D8C8);
  v168 = (uint64_t)v211;
  sub_1CE0B5D8C();
  v169 = (uint64_t)v212;
  sub_1CE0B45B0();
  sub_1CE034668(v168, v169, &qword_1EFA5D8C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D931E0], (double (*)(void))MEMORY[0x1E0D931B8], v262);
  sub_1CDFB13F8(v169, &qword_1EFA5D8C0);
  sub_1CDFB13F8(v168, &qword_1EFA5D8C0);
  v170 = (uint64_t)v213;
  sub_1CE0B5C78();
  v171 = (uint64_t)v214;
  sub_1CE0B44B4();
  sub_1CE034668(v170, v171, &qword_1EFA5D8B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91E68], (double (*)(void))MEMORY[0x1E0D91E38], v263);
  sub_1CDFB13F8(v171, &qword_1EFA5D8B8);
  sub_1CDFB13F8(v170, &qword_1EFA5D8B8);
  v172 = (uint64_t)v223;
  sub_1CE0B5C84();
  v173 = (uint64_t)v224;
  sub_1CE0B44C0();
  sub_1CE034668(v172, v173, &qword_1EFA5D8B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94C90], (double (*)(void))MEMORY[0x1E0D94C70], v264);
  sub_1CDFB13F8(v173, &qword_1EFA5D8B0);
  sub_1CDFB13F8(v172, &qword_1EFA5D8B0);
  v174 = (uint64_t)v225;
  sub_1CE0B5CB4();
  v175 = (uint64_t)v226;
  sub_1CE0B44D8();
  sub_1CE034668(v174, v175, &qword_1EFA5D8A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90060], (double (*)(void))MEMORY[0x1E0D90050], v265);
  sub_1CDFB13F8(v175, &qword_1EFA5D8A8);
  sub_1CDFB13F8(v174, &qword_1EFA5D8A8);
  v176 = (uint64_t)v227;
  sub_1CE0B5DEC();
  v177 = (uint64_t)v228;
  sub_1CE0B45EC();
  sub_1CE034668(v176, v177, &qword_1EFA5D8A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D964D0], (double (*)(void))MEMORY[0x1E0D96458], v266);
  sub_1CDFB13F8(v177, &qword_1EFA5D8A0);
  sub_1CDFB13F8(v176, &qword_1EFA5D8A0);
  v178 = (uint64_t)v229;
  sub_1CE0B5D08();
  v179 = (uint64_t)v230;
  sub_1CE0B452C();
  sub_1CE034668(v178, v179, &qword_1EFA5D890, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91278], (double (*)(void))MEMORY[0x1E0D91268], v267);
  sub_1CDFB13F8(v179, &qword_1EFA5D890);
  sub_1CDFB13F8(v178, &qword_1EFA5D890);
  sub_1CE0B5D38();
  v180 = (uint64_t)v231;
  sub_1CE0B5DA4();
  v181 = (uint64_t)v232;
  sub_1CE0B45BC();
  sub_1CE034668(v180, v181, &qword_1EFA5D888, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94170], (double (*)(void))MEMORY[0x1E0D94150], v269);
  sub_1CDFB13F8(v181, &qword_1EFA5D888);
  sub_1CDFB13F8(v180, &qword_1EFA5D888);
  v182 = sub_1CE0B5CD8();
  v183 = (uint64_t)v233;
  sub_1CE0B44E4();
  v232 = (char *)sub_1CE034A78(v182, v183);
  swift_bridgeObjectRelease();
  sub_1CDFB13F8(v183, &qword_1EFA5E7F8);
  v184 = (uint64_t)v234;
  sub_1CE0B5CC0();
  v185 = (uint64_t)v236;
  sub_1CE0B44F0();
  sub_1CE034870(v184, v185, &qword_1EFA5D880, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90528], (double (*)(void))MEMORY[0x1E0D90500], v235);
  sub_1CDFB13F8(v185, &qword_1EFA5D880);
  sub_1CDFB13F8(v184, &qword_1EFA5D880);
  v186 = (uint64_t)v237;
  sub_1CE0B5D44();
  v187 = (uint64_t)v239;
  sub_1CE0B455C();
  sub_1CE034668(v186, v187, &qword_1EFA5D878, (uint64_t (*)(_QWORD))MEMORY[0x1E0D919C0], (double (*)(void))MEMORY[0x1E0D919B0], v238);
  sub_1CDFB13F8(v187, &qword_1EFA5D878);
  sub_1CDFB13F8(v186, &qword_1EFA5D878);
  v188 = (uint64_t)v240;
  sub_1CE0B5D14();
  v189 = (uint64_t)v242;
  sub_1CE0B4538();
  sub_1CE034668(v188, v189, &qword_1EFA5D870, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92878], (double (*)(void))MEMORY[0x1E0D92860], v241);
  sub_1CDFB13F8(v189, &qword_1EFA5D870);
  sub_1CDFB13F8(v188, &qword_1EFA5D870);
  v190 = (uint64_t)v243;
  sub_1CE0B5DBC();
  v191 = (uint64_t)v245;
  sub_1CE0B45D4();
  sub_1CE034668(v190, v191, &qword_1EFA5D868, (uint64_t (*)(_QWORD))MEMORY[0x1E0D945B0], (double (*)(void))MEMORY[0x1E0D94598], v244);
  sub_1CDFB13F8(v191, &qword_1EFA5D868);
  sub_1CDFB13F8(v190, &qword_1EFA5D868);
  v192 = (uint64_t)v246;
  sub_1CE0B5DD4();
  v193 = (uint64_t)v248;
  sub_1CE0B45E0();
  sub_1CE034668(v192, v193, &qword_1EFA62FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96368], (double (*)(void))MEMORY[0x1E0D96328], v247);
  sub_1CDFB13F8(v193, &qword_1EFA62FF0);
  sub_1CDFB13F8(v192, &qword_1EFA62FF0);
  v194 = (uint64_t)v249;
  sub_1CE0B5DB0();
  v195 = (uint64_t)v251;
  sub_1CE0B45C8();
  sub_1CE034668(v194, v195, &qword_1EFA5D860, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94248], (double (*)(void))MEMORY[0x1E0D94200], v250);
  sub_1CDFB13F8(v195, &qword_1EFA5D860);
  sub_1CDFB13F8(v194, &qword_1EFA5D860);
  return sub_1CE0B5C90();
}

uint64_t sub_1CE034668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, double (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double (*v29)(void);
  double v30;
  double v31;
  char *v32;
  char *v33;
  double (*v34)(void);
  uint64_t v35;

  v34 = a5;
  v35 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - v14;
  v16 = a4(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v34 - v21;
  sub_1CDFB1434(a1, (uint64_t)v15, a3);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v15, 1, v16) == 1)
  {
    sub_1CDFB13F8((uint64_t)v15, a3);
    return sub_1CDFB1434(v35, a6, a3);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v25(v22, v15, v16);
    sub_1CDFB1434(v35, (uint64_t)v13, a3);
    if (v23(v13, 1, v16) == 1)
    {
      sub_1CDFB13F8((uint64_t)v13, a3);
      v26 = a6;
      v27 = v22;
    }
    else
    {
      v28 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v20, v13, v16);
      v29 = v34;
      v30 = ((double (*)(uint64_t))v34)(v28);
      v31 = v29();
      if (v31 >= v30)
        v32 = v20;
      else
        v32 = v22;
      if (v31 >= v30)
        v33 = v22;
      else
        v33 = v20;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v32, v16);
      v26 = a6;
      v27 = v33;
    }
    v25((char *)v26, v27, v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a6, 0, 1, v16);
  }
}

uint64_t sub_1CE034870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, double (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double (*v29)(void);
  double v30;
  double v31;
  char *v32;
  char *v33;
  double (*v34)(void);
  uint64_t v35;

  v34 = a5;
  v35 = a2;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - v14;
  v16 = a4(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v34 - v21;
  sub_1CDFB1434(a1, (uint64_t)v15, a3);
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v15, 1, v16) == 1)
  {
    sub_1CDFB13F8((uint64_t)v15, a3);
    return sub_1CDFB1434(v35, a6, a3);
  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v25(v22, v15, v16);
    sub_1CDFB1434(v35, (uint64_t)v13, a3);
    if (v23(v13, 1, v16) == 1)
    {
      sub_1CDFB13F8((uint64_t)v13, a3);
      v26 = a6;
      v27 = v22;
    }
    else
    {
      v28 = ((uint64_t (*)(char *, char *, uint64_t))v25)(v20, v13, v16);
      v29 = v34;
      v30 = ((double (*)(uint64_t))v34)(v28);
      v31 = v29();
      if (v30 >= v31)
        v32 = v20;
      else
        v32 = v22;
      if (v30 >= v31)
        v33 = v22;
      else
        v33 = v20;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v32, v16);
      v26 = a6;
      v27 = v33;
    }
    v25((char *)v26, v27, v16);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(a6, 0, 1, v16);
  }
}

uint64_t sub_1CE034A78(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v3 = sub_1CE0B4148();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - v8;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  v10 = *(_QWORD *)(v26 - 8);
  v11 = MEMORY[0x1E0C80A78](v26);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v26 - v14;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EFA60950);
  v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1CE0BB0F0;
  v18 = v17 + v16;
  sub_1CDFB1434(a2, v18, &qword_1EFA5E7F8);
  sub_1CDFB1434(v18, (uint64_t)v15, &qword_1EFA5E7F8);
  sub_1CE039A44((uint64_t)v15, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
    sub_1CDFB13F8((uint64_t)v13, &qword_1EFA5E7F8);
    v19 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v20 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v20(v9, v13, v3);
    v20(v7, v9, v3);
    v19 = MEMORY[0x1E0DEE9D8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1CE0910F4(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
    v22 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 24);
    if (v22 >= v21 >> 1)
      v19 = sub_1CE0910F4(v21 > 1, v22 + 1, 1, v19);
    *(_QWORD *)(v19 + 16) = v22 + 1;
    v20((char *)(v19+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v22), v7, v3);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v23 = v27;
  swift_bridgeObjectRetain();
  v24 = sub_1CE039A8C(v19, v23);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t static Session.- infix(_:_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  char *v202;
  char *v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  char *v215;
  char *v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  char *v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;

  v244 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v243 = (char *)&v192 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v241 = (char *)&v192 - v5;
  MEMORY[0x1E0C80A78](v4);
  v242 = (uint64_t)&v192 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  v8 = MEMORY[0x1E0C80A78](v7);
  v240 = (char *)&v192 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v238 = (char *)&v192 - v11;
  MEMORY[0x1E0C80A78](v10);
  v239 = (uint64_t)&v192 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  v14 = MEMORY[0x1E0C80A78](v13);
  v237 = (char *)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v235 = (char *)&v192 - v17;
  MEMORY[0x1E0C80A78](v16);
  v236 = (uint64_t)&v192 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  v20 = MEMORY[0x1E0C80A78](v19);
  v234 = (char *)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v232 = (char *)&v192 - v23;
  MEMORY[0x1E0C80A78](v22);
  v233 = (uint64_t)&v192 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  v26 = MEMORY[0x1E0C80A78](v25);
  v231 = (char *)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v229 = (char *)&v192 - v29;
  MEMORY[0x1E0C80A78](v28);
  v230 = (uint64_t)&v192 - v30;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  v32 = MEMORY[0x1E0C80A78](v31);
  v228 = (char *)&v192 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v226 = (char *)&v192 - v35;
  MEMORY[0x1E0C80A78](v34);
  v227 = (uint64_t)&v192 - v36;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  MEMORY[0x1E0C80A78](v37);
  v260 = (char *)&v192 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  v40 = MEMORY[0x1E0C80A78](v39);
  v225 = (char *)&v192 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x1E0C80A78](v40);
  v224 = (char *)&v192 - v43;
  MEMORY[0x1E0C80A78](v42);
  v259 = (uint64_t)&v192 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  v46 = MEMORY[0x1E0C80A78](v45);
  v223 = (char *)&v192 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x1E0C80A78](v46);
  v222 = (char *)&v192 - v49;
  MEMORY[0x1E0C80A78](v48);
  v258 = (uint64_t)&v192 - v50;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  v52 = MEMORY[0x1E0C80A78](v51);
  v221 = (char *)&v192 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = MEMORY[0x1E0C80A78](v52);
  v220 = (char *)&v192 - v55;
  MEMORY[0x1E0C80A78](v54);
  v257 = (uint64_t)&v192 - v56;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  v58 = MEMORY[0x1E0C80A78](v57);
  v219 = (char *)&v192 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = MEMORY[0x1E0C80A78](v58);
  v218 = (char *)&v192 - v61;
  MEMORY[0x1E0C80A78](v60);
  v256 = (uint64_t)&v192 - v62;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  v64 = MEMORY[0x1E0C80A78](v63);
  v217 = (char *)&v192 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = MEMORY[0x1E0C80A78](v64);
  v216 = (char *)&v192 - v67;
  MEMORY[0x1E0C80A78](v66);
  v255 = (uint64_t)&v192 - v68;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  v70 = MEMORY[0x1E0C80A78](v69);
  v215 = (char *)&v192 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = MEMORY[0x1E0C80A78](v70);
  v211 = (char *)&v192 - v73;
  MEMORY[0x1E0C80A78](v72);
  v254 = (uint64_t)&v192 - v74;
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  v76 = MEMORY[0x1E0C80A78](v75);
  v208 = (char *)&v192 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = MEMORY[0x1E0C80A78](v76);
  v207 = (char *)&v192 - v79;
  MEMORY[0x1E0C80A78](v78);
  v253 = (uint64_t)&v192 - v80;
  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  v82 = MEMORY[0x1E0C80A78](v81);
  v206 = (char *)&v192 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x1E0C80A78](v82);
  v205 = (char *)&v192 - v85;
  MEMORY[0x1E0C80A78](v84);
  v252 = (uint64_t)&v192 - v86;
  v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  v88 = MEMORY[0x1E0C80A78](v87);
  v204 = (char *)&v192 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = MEMORY[0x1E0C80A78](v88);
  v203 = (char *)&v192 - v91;
  MEMORY[0x1E0C80A78](v90);
  v251 = (uint64_t)&v192 - v92;
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  v94 = MEMORY[0x1E0C80A78](v93);
  v202 = (char *)&v192 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = MEMORY[0x1E0C80A78](v94);
  v201 = (char *)&v192 - v97;
  MEMORY[0x1E0C80A78](v96);
  v250 = (uint64_t)&v192 - v98;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  v100 = MEMORY[0x1E0C80A78](v99);
  v200 = (char *)&v192 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = MEMORY[0x1E0C80A78](v100);
  v199 = (char *)&v192 - v103;
  MEMORY[0x1E0C80A78](v102);
  v249 = (uint64_t)&v192 - v104;
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  v106 = MEMORY[0x1E0C80A78](v105);
  v198 = (char *)&v192 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = MEMORY[0x1E0C80A78](v106);
  v197 = (char *)&v192 - v109;
  MEMORY[0x1E0C80A78](v108);
  v248 = (uint64_t)&v192 - v110;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  v112 = MEMORY[0x1E0C80A78](v111);
  v196 = (char *)&v192 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = MEMORY[0x1E0C80A78](v112);
  v195 = (char *)&v192 - v115;
  MEMORY[0x1E0C80A78](v114);
  v247 = (uint64_t)&v192 - v116;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  v118 = MEMORY[0x1E0C80A78](v117);
  v194 = (char *)&v192 - ((v119 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = MEMORY[0x1E0C80A78](v118);
  v193 = (char *)&v192 - v121;
  MEMORY[0x1E0C80A78](v120);
  v246 = (uint64_t)&v192 - v122;
  v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  v124 = MEMORY[0x1E0C80A78](v123);
  v192 = (char *)&v192 - ((v125 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = MEMORY[0x1E0C80A78](v124);
  v128 = (char *)&v192 - v127;
  MEMORY[0x1E0C80A78](v126);
  v245 = (uint64_t)&v192 - v129;
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  v131 = MEMORY[0x1E0C80A78](v130);
  v133 = (char *)&v192 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = MEMORY[0x1E0C80A78](v131);
  v136 = (char *)&v192 - v135;
  MEMORY[0x1E0C80A78](v134);
  v138 = (char *)&v192 - v137;
  v209 = (char *)&v192 - v137;
  v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v140 = MEMORY[0x1E0C80A78](v139);
  v142 = (char *)&v192 - ((v141 + 15) & 0xFFFFFFFFFFFFFFF0);
  v143 = MEMORY[0x1E0C80A78](v140);
  v145 = (char *)&v192 - v144;
  MEMORY[0x1E0C80A78](v143);
  v147 = (char *)&v192 - v146;
  v210 = (char *)&v192 - v146;
  v214 = sub_1CE0B6DAC();
  v213 = sub_1CE0B5C9C();
  v212 = v148;
  sub_1CE0B5CE4();
  sub_1CE0B5CE4();
  sub_1CE036234((uint64_t)v145, (uint64_t)v142, (uint64_t)v147);
  sub_1CDFB13F8((uint64_t)v142, &qword_1EFA5D940);
  sub_1CDFB13F8((uint64_t)v145, &qword_1EFA5D940);
  sub_1CE0B5D80();
  sub_1CE0B5D80();
  sub_1CE0364A4((uint64_t)v136, (uint64_t)v133, (uint64_t)v138);
  sub_1CDFB13F8((uint64_t)v133, &qword_1EFA5D920);
  sub_1CDFB13F8((uint64_t)v136, &qword_1EFA5D920);
  sub_1CE0B5D20();
  v149 = (uint64_t)v192;
  sub_1CE0B5D20();
  sub_1CE036714((uint64_t)v128, v149, v245);
  sub_1CDFB13F8(v149, &qword_1EFA5D910);
  sub_1CDFB13F8((uint64_t)v128, &qword_1EFA5D910);
  v150 = (uint64_t)v193;
  sub_1CE0B5DF8();
  v151 = (uint64_t)v194;
  sub_1CE0B5DF8();
  sub_1CE036984(v150, v151, v246);
  sub_1CDFB13F8(v151, &qword_1EFA5D918);
  sub_1CDFB13F8(v150, &qword_1EFA5D918);
  v152 = (uint64_t)v195;
  sub_1CE0B5D68();
  v153 = (uint64_t)v196;
  sub_1CE0B5D68();
  sub_1CE036BF4(v152, v153, v247);
  sub_1CDFB13F8(v153, &qword_1EFA5D908);
  sub_1CDFB13F8(v152, &qword_1EFA5D908);
  v154 = (uint64_t)v197;
  sub_1CE0B5CFC();
  v155 = (uint64_t)v198;
  sub_1CE0B5CFC();
  sub_1CE036E64(v154, v155, v248);
  sub_1CDFB13F8(v155, &qword_1EFA5D8E8);
  sub_1CDFB13F8(v154, &qword_1EFA5D8E8);
  v156 = (uint64_t)v199;
  sub_1CE0B5CCC();
  v157 = (uint64_t)v200;
  sub_1CE0B5CCC();
  sub_1CE0370D4(v156, v157, v249);
  sub_1CDFB13F8(v157, &qword_1EFA5D8E0);
  sub_1CDFB13F8(v156, &qword_1EFA5D8E0);
  v158 = (uint64_t)v201;
  sub_1CE0B5D50();
  v159 = (uint64_t)v202;
  sub_1CE0B5D50();
  sub_1CE037344(v158, v159, v250);
  sub_1CDFB13F8(v159, &qword_1EFA5D8D8);
  sub_1CDFB13F8(v158, &qword_1EFA5D8D8);
  v160 = (uint64_t)v203;
  sub_1CE0B5D2C();
  v161 = (uint64_t)v204;
  sub_1CE0B5D2C();
  sub_1CE0375B4(v160, v161, v251);
  sub_1CDFB13F8(v161, &qword_1EFA5D8D0);
  sub_1CDFB13F8(v160, &qword_1EFA5D8D0);
  v162 = (uint64_t)v205;
  sub_1CE0B5CA8();
  v163 = (uint64_t)v206;
  sub_1CE0B5CA8();
  sub_1CE037824(v162, v163, v252);
  sub_1CDFB13F8(v163, &qword_1EFA5D8C8);
  sub_1CDFB13F8(v162, &qword_1EFA5D8C8);
  v164 = (uint64_t)v207;
  sub_1CE0B5D8C();
  v165 = (uint64_t)v208;
  sub_1CE0B5D8C();
  sub_1CE037A94(v164, v165, v253);
  sub_1CDFB13F8(v165, &qword_1EFA5D8C0);
  sub_1CDFB13F8(v164, &qword_1EFA5D8C0);
  v166 = (uint64_t)v211;
  sub_1CE0B5C78();
  v167 = (uint64_t)v215;
  sub_1CE0B5C78();
  sub_1CE037D04(v166, v167, v254);
  sub_1CDFB13F8(v167, &qword_1EFA5D8B8);
  sub_1CDFB13F8(v166, &qword_1EFA5D8B8);
  v168 = (uint64_t)v216;
  sub_1CE0B5C84();
  v169 = (uint64_t)v217;
  sub_1CE0B5C84();
  sub_1CE037F74(v168, v169, v255);
  sub_1CDFB13F8(v169, &qword_1EFA5D8B0);
  sub_1CDFB13F8(v168, &qword_1EFA5D8B0);
  v170 = (uint64_t)v218;
  sub_1CE0B5CB4();
  v171 = (uint64_t)v219;
  sub_1CE0B5CB4();
  sub_1CE0381E4(v170, v171, v256);
  sub_1CDFB13F8(v171, &qword_1EFA5D8A8);
  sub_1CDFB13F8(v170, &qword_1EFA5D8A8);
  v172 = (uint64_t)v220;
  sub_1CE0B5D08();
  v173 = (uint64_t)v221;
  sub_1CE0B5D08();
  sub_1CE038454(v172, v173, v257);
  sub_1CDFB13F8(v173, &qword_1EFA5D890);
  sub_1CDFB13F8(v172, &qword_1EFA5D890);
  v174 = (uint64_t)v222;
  sub_1CE0B5DEC();
  v175 = (uint64_t)v223;
  sub_1CE0B5DEC();
  sub_1CE0386C4(v174, v175, v258);
  sub_1CDFB13F8(v175, &qword_1EFA5D8A0);
  sub_1CDFB13F8(v174, &qword_1EFA5D8A0);
  v176 = (uint64_t)v224;
  sub_1CE0B5DA4();
  v177 = (uint64_t)v225;
  sub_1CE0B5DA4();
  sub_1CE038934(v176, v177, v259);
  sub_1CDFB13F8(v177, &qword_1EFA5D888);
  sub_1CDFB13F8(v176, &qword_1EFA5D888);
  v178 = sub_1CE0B4148();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(v260, 1, 1, v178);
  v179 = (uint64_t)v226;
  sub_1CE0B5CC0();
  v180 = (uint64_t)v228;
  sub_1CE0B5CC0();
  sub_1CE038BA4(v179, v180, v227);
  sub_1CDFB13F8(v180, &qword_1EFA5D880);
  sub_1CDFB13F8(v179, &qword_1EFA5D880);
  v181 = (uint64_t)v229;
  sub_1CE0B5D44();
  v182 = (uint64_t)v231;
  sub_1CE0B5D44();
  sub_1CE038E14(v181, v182, v230);
  sub_1CDFB13F8(v182, &qword_1EFA5D878);
  sub_1CDFB13F8(v181, &qword_1EFA5D878);
  v183 = (uint64_t)v232;
  sub_1CE0B5D14();
  v184 = (uint64_t)v234;
  sub_1CE0B5D14();
  sub_1CE039084(v183, v184, v233);
  sub_1CDFB13F8(v184, &qword_1EFA5D870);
  sub_1CDFB13F8(v183, &qword_1EFA5D870);
  v185 = (uint64_t)v235;
  sub_1CE0B5DB0();
  v186 = (uint64_t)v237;
  sub_1CE0B5DB0();
  sub_1CE0392F4(v185, v186, v236);
  sub_1CDFB13F8(v186, &qword_1EFA5D860);
  sub_1CDFB13F8(v185, &qword_1EFA5D860);
  v187 = (uint64_t)v238;
  sub_1CE0B5DBC();
  v188 = (uint64_t)v240;
  sub_1CE0B5DBC();
  sub_1CE039564(v187, v188, v239);
  sub_1CDFB13F8(v188, &qword_1EFA5D868);
  sub_1CDFB13F8(v187, &qword_1EFA5D868);
  v189 = (uint64_t)v241;
  sub_1CE0B5DD4();
  v190 = (uint64_t)v243;
  sub_1CE0B5DD4();
  sub_1CE0397D4(v189, v190, v242);
  sub_1CDFB13F8(v190, &qword_1EFA62FF0);
  sub_1CDFB13F8(v189, &qword_1EFA62FF0);
  sub_1CE0B6650();
  return sub_1CE0B4574();
}

uint64_t sub_1CE036234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B43B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4E0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D940);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D940);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D940);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D940);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5F4E0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D940, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90A38], (double (*)(void))MEMORY[0x1E0D90A10], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA5F530, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90A38], MEMORY[0x1E0D90A50]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D940);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D940, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90A38], (double (*)(void))MEMORY[0x1E0D90A10], a3);
}

uint64_t sub_1CE0364A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5000();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D920);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60940);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D920);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D920);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D920);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D920);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60940);
    return sub_1CE034668(a1, a2, &qword_1EFA5D920, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92FA8], (double (*)(void))MEMORY[0x1E0D92F98], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60948, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92FA8], MEMORY[0x1E0D92FB8]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D920);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D920, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92FA8], (double (*)(void))MEMORY[0x1E0D92F98], a3);
}

uint64_t sub_1CE036714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4A24();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D910);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60930);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D910);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D910);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D910);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D910);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60930);
    return sub_1CE034870(a1, a2, &qword_1EFA5D910, (uint64_t (*)(_QWORD))MEMORY[0x1E0D916C8], (double (*)(void))MEMORY[0x1E0D916B8], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60938, (uint64_t (*)(uint64_t))MEMORY[0x1E0D916C8], MEMORY[0x1E0D916D8]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D910);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034870(a1, a2, &qword_1EFA5D910, (uint64_t (*)(_QWORD))MEMORY[0x1E0D916C8], (double (*)(void))MEMORY[0x1E0D916B8], a3);
}

uint64_t sub_1CE036984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5FA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D918);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60920);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D918);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D918);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D918);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D918);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60920);
    return sub_1CE034668(a1, a2, &qword_1EFA5D918, (uint64_t (*)(_QWORD))MEMORY[0x1E0D966F0], (double (*)(void))MEMORY[0x1E0D966E0], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60928, (uint64_t (*)(uint64_t))MEMORY[0x1E0D966F0], MEMORY[0x1E0D96700]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D918);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D918, (uint64_t (*)(_QWORD))MEMORY[0x1E0D966F0], (double (*)(void))MEMORY[0x1E0D966E0], a3);
}

uint64_t sub_1CE036BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4D84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D908);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60910);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D908);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D908);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D908);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D908);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60910);
    return sub_1CE034668(a1, a2, &qword_1EFA5D908, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92730], (double (*)(void))MEMORY[0x1E0D92720], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60918, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92730], MEMORY[0x1E0D92740]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D908);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D908, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92730], (double (*)(void))MEMORY[0x1E0D92720], a3);
}

uint64_t sub_1CE036E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4850();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60900);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8E8);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8E8);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8E8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8E8);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60900);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91220], (double (*)(void))MEMORY[0x1E0D91210], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60908, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91220], MEMORY[0x1E0D91230]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8E8);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91220], (double (*)(void))MEMORY[0x1E0D91210], a3);
}

uint64_t sub_1CE0370D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4274();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8E0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA608F0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8E0);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8E0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8E0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8E0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA608F0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D907E8], (double (*)(void))MEMORY[0x1E0D907D0], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA608F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D907E8], MEMORY[0x1E0D907F8]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8E0);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8E0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D907E8], (double (*)(void))MEMORY[0x1E0D907D0], a3);
}

uint64_t sub_1CE037344@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4B80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA608E0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8D8);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8D8);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8D8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8D8);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA608E0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91C78], (double (*)(void))MEMORY[0x1E0D91C48], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA608E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91C78], MEMORY[0x1E0D91C88]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8D8);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8D8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91C78], (double (*)(void))MEMORY[0x1E0D91C48], a3);
}

uint64_t sub_1CE0375B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4A6C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8D0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA608D0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8D0);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8D0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8D0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8D0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA608D0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D917F8], (double (*)(void))MEMORY[0x1E0D917E8], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA608D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D917F8], MEMORY[0x1E0D91808]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8D0);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8D0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D917F8], (double (*)(void))MEMORY[0x1E0D917E8], a3);
}

uint64_t sub_1CE037824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B3ED8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA608C0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8C8);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8C8);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8C8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8C8);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA608C0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8FF40], (double (*)(void))MEMORY[0x1E0D8FF10], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA608C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8FF40], MEMORY[0x1E0D8FF50]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8C8);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8C8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8FF40], (double (*)(void))MEMORY[0x1E0D8FF10], a3);
}

uint64_t sub_1CE037A94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5078();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5F4D8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8C0);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8C0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8C0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8C0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5F4D8);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D931E0], (double (*)(void))MEMORY[0x1E0D931B8], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA5F528, (uint64_t (*)(uint64_t))MEMORY[0x1E0D931E0], MEMORY[0x1E0D931F8]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8C0);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D931E0], (double (*)(void))MEMORY[0x1E0D931B8], a3);
}

uint64_t sub_1CE037D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4BEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA608B0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8B8);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8B8);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8B8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8B8);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA608B0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91E68], (double (*)(void))MEMORY[0x1E0D91E38], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA608B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91E68], MEMORY[0x1E0D91E78]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8B8);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91E68], (double (*)(void))MEMORY[0x1E0D91E38], a3);
}

uint64_t sub_1CE037F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B56F0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8B0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA608A0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8B0);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8B0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8B0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8B0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA608A0);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94C90], (double (*)(void))MEMORY[0x1E0D94C70], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA608A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94C90], MEMORY[0x1E0D94CA0]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8B0);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94C90], (double (*)(void))MEMORY[0x1E0D94C70], a3);
}

uint64_t sub_1CE0381E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B3F20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60890);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8A8);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8A8);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8A8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8A8);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60890);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90060], (double (*)(void))MEMORY[0x1E0D90050], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60898, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90060], MEMORY[0x1E0D90070]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8A8);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8A8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90060], (double (*)(void))MEMORY[0x1E0D90050], a3);
}

uint64_t sub_1CE038454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4880();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D890);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60880);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D890);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D890);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D890);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D890);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60880);
    return sub_1CE034668(a1, a2, &qword_1EFA5D890, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91278], (double (*)(void))MEMORY[0x1E0D91268], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D91278], MEMORY[0x1E0D91288]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D890);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D890, (uint64_t (*)(_QWORD))MEMORY[0x1E0D91278], (double (*)(void))MEMORY[0x1E0D91268], a3);
}

uint64_t sub_1CE0386C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5F18();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D8A0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60870);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D8A0);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D8A0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8A0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D8A0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60870);
    return sub_1CE034668(a1, a2, &qword_1EFA5D8A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D964D0], (double (*)(void))MEMORY[0x1E0D96458], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D964D0], MEMORY[0x1E0D964E0]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D8A0);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D8A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D964D0], (double (*)(void))MEMORY[0x1E0D96458], a3);
}

uint64_t sub_1CE038934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5384();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D888);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60860);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D888);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D888);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D888);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D888);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60860);
    return sub_1CE034668(a1, a2, &qword_1EFA5D888, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94170], (double (*)(void))MEMORY[0x1E0D94150], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60868, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94170], MEMORY[0x1E0D94180]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D888);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D888, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94170], (double (*)(void))MEMORY[0x1E0D94150], a3);
}

uint64_t sub_1CE038BA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B416C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D880);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60850);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D880);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D880);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D880);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D880);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60850);
    return sub_1CE034870(a1, a2, &qword_1EFA5D880, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90528], (double (*)(void))MEMORY[0x1E0D90500], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60858, (uint64_t (*)(uint64_t))MEMORY[0x1E0D90528], MEMORY[0x1E0D90538]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D880);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034870(a1, a2, &qword_1EFA5D880, (uint64_t (*)(_QWORD))MEMORY[0x1E0D90528], (double (*)(void))MEMORY[0x1E0D90500], a3);
}

uint64_t sub_1CE038E14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4AE4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D878);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60840);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D878);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D878);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D878);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D878);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60840);
    return sub_1CE034668(a1, a2, &qword_1EFA5D878, (uint64_t (*)(_QWORD))MEMORY[0x1E0D919C0], (double (*)(void))MEMORY[0x1E0D919B0], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60848, (uint64_t (*)(uint64_t))MEMORY[0x1E0D919C0], MEMORY[0x1E0D919D0]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D878);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D878, (uint64_t (*)(_QWORD))MEMORY[0x1E0D919C0], (double (*)(void))MEMORY[0x1E0D919B0], a3);
}

uint64_t sub_1CE039084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B4DD8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D870);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60830);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D870);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D870);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D870);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D870);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60830);
    return sub_1CE034668(a1, a2, &qword_1EFA5D870, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92878], (double (*)(void))MEMORY[0x1E0D92860], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60838, (uint64_t (*)(uint64_t))MEMORY[0x1E0D92878], MEMORY[0x1E0D92888]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D870);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D870, (uint64_t (*)(_QWORD))MEMORY[0x1E0D92878], (double (*)(void))MEMORY[0x1E0D92860], a3);
}

uint64_t sub_1CE0392F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B53C0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D860);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60820);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D860);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D860);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D860);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D860);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60820);
    return sub_1CE034668(a1, a2, &qword_1EFA5D860, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94248], (double (*)(void))MEMORY[0x1E0D94200], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60828, (uint64_t (*)(uint64_t))MEMORY[0x1E0D94248], MEMORY[0x1E0D94258]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D860);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D860, (uint64_t (*)(_QWORD))MEMORY[0x1E0D94248], (double (*)(void))MEMORY[0x1E0D94200], a3);
}

uint64_t sub_1CE039564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5480();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D868);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60810);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA5D868);
  sub_1CDFB1434(a1, v17, &qword_1EFA5D868);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D868);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA5D868);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60810);
    return sub_1CE034668(a1, a2, &qword_1EFA5D868, (uint64_t (*)(_QWORD))MEMORY[0x1E0D945B0], (double (*)(void))MEMORY[0x1E0D94598], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60818, (uint64_t (*)(uint64_t))MEMORY[0x1E0D945B0], MEMORY[0x1E0D945C0]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA5D868);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA5D868, (uint64_t (*)(_QWORD))MEMORY[0x1E0D945B0], (double (*)(void))MEMORY[0x1E0D94598], a3);
}

uint64_t sub_1CE0397D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v6 = sub_1CE0B5EAC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA62FF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60800);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_1CDFB1434(a2, (uint64_t)v16, &qword_1EFA62FF0);
  sub_1CDFB1434(a1, v17, &qword_1EFA62FF0);
  v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v18((uint64_t)v16, 1, v6) == 1)
  {
    if (v18(v17, 1, v6) == 1)
    {
      sub_1CDFB13F8((uint64_t)v16, &qword_1EFA62FF0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
    }
    goto LABEL_6;
  }
  sub_1CDFB1434((uint64_t)v16, (uint64_t)v12, &qword_1EFA62FF0);
  if (v18(v17, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_6:
    sub_1CDFB13F8((uint64_t)v16, &qword_1EFA60800);
    return sub_1CE034668(a1, a2, &qword_1EFA62FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96368], (double (*)(void))MEMORY[0x1E0D96328], a3);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v9, v17, v6);
  sub_1CDFB1900(&qword_1EFA60808, (uint64_t (*)(uint64_t))MEMORY[0x1E0D96368], MEMORY[0x1E0D96378]);
  v19 = sub_1CE0B6260();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  v20(v12, v6);
  sub_1CDFB13F8((uint64_t)v16, &qword_1EFA62FF0);
  if ((v19 & 1) != 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  return sub_1CE034668(a1, a2, &qword_1EFA62FF0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D96368], (double (*)(void))MEMORY[0x1E0D96328], a3);
}

uint64_t sub_1CE039A44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E7F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CE039A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1CE0B4148();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v17 = a2;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v14(v8, v12, v4);
      sub_1CE093D9C((uint64_t)v10, v8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v12 += v13;
      --v11;
    }
    while (v11);
    return v17;
  }
  return a2;
}

uint64_t UnfairLock.__allocating_init()()
{
  uint64_t v0;
  _DWORD *v1;

  v0 = swift_allocObject();
  v1 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = 0;
  return v0;
}

uint64_t UnfairLock.deinit()
{
  uint64_t v0;

  MEMORY[0x1D17C092C](*(_QWORD *)(v0 + 16), -1, -1);
  return v0;
}

uint64_t method lookup function for UnfairLock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UnfairLock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of UnfairLock.acquire<A>(expression:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t static MetricsDisplayPreference.default()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v0 = sub_1CE0B5B4C();
  MEMORY[0x1E0C80A78](v0);
  (*(void (**)(char *, _QWORD))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x1E0D95D00]);
  return sub_1CE0B5438();
}

uint64_t PlaybackIntent.applyingTimestampOffset(_:)()
{
  sub_1CE0B4868();
  return sub_1CE0B4874();
}

uint64_t sub_1CE039CF0()
{
  sub_1CE0B4868();
  return sub_1CE0B4874();
}

uint64_t WorkoutPlanCompleted.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1CE0B3E24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t WorkoutPlanCompleted.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

void static WorkoutPlanCompleted.deliveryStyle.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t initializeBufferWithCopyOfBuffer for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for WorkoutPlanCompleted(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CE0B3E24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for WorkoutPlanCompleted(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPlanCompleted()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE039F40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WorkoutPlanCompleted()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CE039F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CE0B3E24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WorkoutPlanCompleted()
{
  uint64_t result;

  result = qword_1ED8F0DF8;
  if (!qword_1ED8F0DF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CE03A004()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CE0B3E24();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CE03A06C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v0 = MEMORY[0x1D17BD428]();
  v1 = sub_1CE03A154(v0);
  swift_bridgeObjectRelease();
  v2 = sub_1CDFD0574(v1);
  result = swift_bridgeObjectRelease();
  qword_1ED8F0680 = v2;
  return result;
}

uint64_t static MetricTopic.anonymousTopics.getter()
{
  if (qword_1ED8F01F0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t MetricTopic.supportsDemographicEvent.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu)
    return 0;
  else
    return sub_1CE0B5108();
}

uint64_t MetricTopic.supportsIsSubscribedField.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu)
    return 0;
  else
    return sub_1CE0B5114();
}

uint64_t MetricTopic.supportsPurchaseEventAdditionalDetails.getter(unsigned __int8 a1)
{
  if (a1 > 0x3Fu)
    return 0;
  else
    return sub_1CE0B5138();
}

uint64_t sub_1CE03A154(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t i;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = 0;
    v3 = result + 32;
    v4 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v5 = 0;
      if (v2 <= v1)
        v6 = v1;
      else
        v6 = v2;
      v7 = v2 - v6;
      v8 = v1;
      for (i = v3; ; ++i)
      {
        if (!(v7 + v5))
        {
          __break(1u);
          return result;
        }
        v10 = *(unsigned __int8 *)(i + v2);
        if (v10 >> 6)
          break;
        result = sub_1CE0B50FC();
        if ((result & 1) != 0)
          goto LABEL_13;
LABEL_8:
        ++v5;
        if (v2 == --v8)
          return v4;
      }
      if (v10 >> 6 == 1)
      {
        result = sub_1CE0B4EC8();
        if ((result & 1) == 0)
          goto LABEL_8;
      }
LABEL_13:
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_1CDFCFA4C(0, *(_QWORD *)(v4 + 16) + 1, 1);
      v12 = *(_QWORD *)(v4 + 16);
      v11 = *(_QWORD *)(v4 + 24);
      if (v12 >= v11 >> 1)
        result = sub_1CDFCFA4C(v11 > 1, v12 + 1, 1);
      v13 = v2 + 1;
      v2 += 1 + v5;
      *(_QWORD *)(v4 + 16) = v12 + 1;
      *(_BYTE *)(v4 + v12 + 32) = v10;
      if (v13 == v8)
        return v4;
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

_QWORD *RemoteKeyDeliveryClient.__allocating_init(queue:)(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;

  v2 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v3 = a1;
  v4 = (void *)sub_1CE0B626C();
  v5 = objc_msgSend(v2, sel_initWithMachServiceName_options_, v4, 0);

  type metadata accessor for XPCClient();
  swift_allocObject();
  v6 = sub_1CDFBC9EC(v5, v3);
  v7 = *(_QWORD *)(v6 + 32);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v7 + 16));
  if (*(_BYTE *)(v6 + 48) == 1)
  {
    *(_BYTE *)(v6 + 48) = 2;
    objc_msgSend(*(id *)(v6 + 24), sel_resume);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));

  type metadata accessor for RemoteKeyDeliveryClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = v6;
  result[3] = &protocol witness table for XPCClient;
  result[4] = &protocol witness table for XPCClient;
  return result;
}

_QWORD *RemoteKeyDeliveryClient.__allocating_init(connection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1CE03AC60(a1, v3, ObjectType, a2, a3);
}

uint64_t RemoteKeyDeliveryClient.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t RemoteKeyDeliveryClient.fetchCertificateContext()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  void (*v13)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v16;
  __int16 v17;

  v2 = v1;
  v16 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5E000);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v10, (uint64_t)v9);
  v11 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v17 = 136;
  v13 = *(void (**)(__int16 *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v11 + 24);
  v14 = sub_1CE0B50B4();
  swift_retain();
  v13(&v17, v14, MEMORY[0x1E0D93458], MEMORY[0x1E0D93460], ObjectType, v11);
  sub_1CDFDED00("RemoteKeyDeliveryClient::fetchCertificateContext", 48, 2, &dword_1CDFAA000, 0, (uint64_t)v6, v16);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  return sub_1CE03ACA4((uint64_t)v9);
}

uint64_t RemoteKeyDeliveryClient.fetchContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DFF0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B50D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 137;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B3EB4();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D935C8], MEMORY[0x1E0D935D0], MEMORY[0x1E0D8FEF0], MEMORY[0x1E0D8FEF8], ObjectType, v16);
  sub_1CDFDF3B8("RemoteKeyDeliveryClient::fetchContext", 37, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CE03ACA4((uint64_t)v14);
}

uint64_t RemoteKeyDeliveryClient.renewContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;

  v3 = v2;
  v23 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5DFF0);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B50D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v26 = 138;
  v22 = v9;
  v18 = *(void (**)(__int16 *, char *, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 32);
  v19 = sub_1CE0B3EB4();
  swift_retain();
  v18(&v26, v11, v8, v19, MEMORY[0x1E0D935C8], MEMORY[0x1E0D935D0], MEMORY[0x1E0D8FEF0], MEMORY[0x1E0D8FEF8], ObjectType, v16);
  sub_1CDFDF3B8("RemoteKeyDeliveryClient::renewContext", 37, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v23);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
  return sub_1CE03ACA4((uint64_t)v14);
}

uint64_t RemoteKeyDeliveryClient.releaseContext(spc:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  void (*v18)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;

  v3 = v2;
  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F1070);
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1CE0B50D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ActivityTracer();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED8F0B28 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED8F0B08);
  sub_1CDFAFBAC(v15, (uint64_t)v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v16 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  v23 = 139;
  v18 = *(void (**)(__int16 *, char *, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v16 + 16);
  swift_retain();
  v18(&v23, v11, v8, MEMORY[0x1E0D935C8], MEMORY[0x1E0D935D0], ObjectType, v16);
  sub_1CDFDB0F0("RemoteKeyDeliveryClient::releaseContext", 39, 2, &dword_1CDFAA000, 0, (uint64_t)v7, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_1CE03ACA4((uint64_t)v14);
}

uint64_t sub_1CE03ABE0@<X0>(uint64_t a1@<X8>)
{
  return RemoteKeyDeliveryClient.fetchCertificateContext()(a1);
}

uint64_t sub_1CE03AC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteKeyDeliveryClient.fetchContext(spc:)(a1, a2);
}

uint64_t sub_1CE03AC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteKeyDeliveryClient.renewContext(spc:)(a1, a2);
}

uint64_t sub_1CE03AC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteKeyDeliveryClient.releaseContext(spc:)(a1, a2);
}

_QWORD *sub_1CE03AC60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *result;

  type metadata accessor for RemoteKeyDeliveryClient();
  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a4;
  result[4] = a5;
  return result;
}

uint64_t sub_1CE03ACA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityTracer();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t method lookup function for RemoteKeyDeliveryClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteKeyDeliveryClient.__allocating_init(connection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1CE03ACF4()
{
  sub_1CDFAC8CC();
  return sub_1CE0B58F4();
}

uint64_t sub_1CE03AD28()
{
  sub_1CDFAC8CC();
  return sub_1CE0B5900();
}

uint64_t sub_1CE03AD84()
{
  sub_1CDFAC8CC();
  return sub_1CE0B58E8();
}

uint64_t sub_1CE03ADE0()
{
  sub_1CDFAC8CC();
  return sub_1CE0B590C();
}

uint64_t sub_1CE03AE14()
{
  sub_1CDFAC8CC();
  return sub_1CE0B5918();
}

uint64_t sub_1CE03AE70()
{
  return sub_1CE03AEB8(&qword_1EFA60A20, MEMORY[0x1E0D93A98]);
}

uint64_t sub_1CE03AE94()
{
  return sub_1CE03AEB8(&qword_1EFA60A28, MEMORY[0x1E0D93AB0]);
}

uint64_t sub_1CE03AEB8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1CE0B51A4();
    result = MEMORY[0x1D17C0848](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CE03AEF8()
{
  sub_1CDFAC46C();
  sub_1CDFAC428();
  return sub_1CE0B63D4();
}

uint64_t sub_1CE03AF58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1CE0B6560();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1CE0B6554();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1CDFB13F8(a1, (uint64_t *)&unk_1ED8F1170);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CE0B64DC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1CE03B0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFB1434(a1, (uint64_t)v9, (uint64_t *)&unk_1ED8F1170);
  v10 = sub_1CE0B6560();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1CDFB13F8((uint64_t)v9, (uint64_t *)&unk_1ED8F1170);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_1CE0B64DC();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1CE0B6554();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  sub_1CE0B43B8();
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1CE03B234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;

  *(double *)(v5 + 48) = a5;
  *(_QWORD *)(v5 + 32) = a3;
  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  *(_QWORD *)(v5 + 56) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  *(_QWORD *)(v5 + 64) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE03B2BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = v0[8];
  v2 = v0[6];
  v4 = v0[4];
  v3 = v0[5];
  v5 = sub_1CE0B6560();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  v7[5] = v3;
  swift_retain();
  sub_1CE03B0A4(v1, (uint64_t)&unk_1EFA60BB0, (uint64_t)v7);
  sub_1CDFB13F8(v1, (uint64_t *)&unk_1ED8F1170);
  v6(v1, 1, 1, v5);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v2;
  sub_1CE03B0A4(v1, (uint64_t)&unk_1EFA60BC0, (uint64_t)v8);
  sub_1CDFB13F8(v1, (uint64_t *)&unk_1ED8F1170);
  v9 = (_QWORD *)swift_task_alloc();
  v0[9] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BC8);
  *v9 = v0;
  v9[1] = sub_1CE03B418;
  return sub_1CE0B65E4();
}

uint64_t sub_1CE03B418()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE03B47C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = sub_1CE0B43B8();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1CDFB13F8(v1, &qword_1EFA5D940);
    return sub_1CE0B6AE8();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 16), v1, v2);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
    sub_1CE0B65F0();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CE03B5A8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03B5E4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1CDFACD38;
  return v8(a1);
}

uint64_t sub_1CE03B648(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
  return swift_task_switch();
}

void sub_1CE03B660()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16) * 1000000000.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -1.0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 1.84467441e19)
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v2;
    *v2 = v0;
    v2[1] = sub_1CE03B6FC;
    sub_1CE0B65D8();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1CE03B6FC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 32) = v0;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1CE03B768()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1CE0B65CC();
  if (!v1)
  {
    sub_1CE0B6524();
    sub_1CDFB1900(&qword_1EFA5EE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF05E0], MEMORY[0x1E0DF05E8]);
    swift_allocError();
    sub_1CE0B61F4();
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void HealthStore.birthday.getter()
{
  void **v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v7[0] = 0;
  v2 = objc_msgSend(v1, sel_dateOfBirthComponentsWithError_, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = v2;
    sub_1CE0B3CA4();
    v5 = v3;

  }
  else
  {
    v6 = v7[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }
}

uint64_t HealthStore.init(activityRingsQueryProvider:activityRingsFetchTimeout:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t result;
  __int128 v9[2];

  a4[4] = &type metadata for ActivityRingsQueryProvider;
  a4[5] = &protocol witness table for ActivityRingsQueryProvider;
  a4[6] = 0x3FF0000000000000;
  *a4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CDFC3290((__int128 *)a1, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a4 + 1));
    result = sub_1CDFC3290(v9, (uint64_t)(a4 + 1));
    if ((a3 & 1) != 0)
      return result;
  }
  else
  {
    result = sub_1CDFB13F8(a1, &qword_1EFA60A40);
    if ((a3 & 1) != 0)
      return result;
  }
  a4[6] = a2;
  return result;
}

SEL *HealthStore.biologicalSex.getter()
{
  return sub_1CE03BA34((SEL *)&selRef_biologicalSexWithError_, (SEL *)&selRef_biologicalSex);
}

SEL *HealthStore.wheelchairUse.getter()
{
  return sub_1CE03BA34((SEL *)&selRef_wheelchairUseWithError_, (SEL *)&selRef_wheelchairUse);
}

SEL *sub_1CE03BA34(SEL *a1, SEL *a2)
{
  void **v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = *v2;
  v10[0] = 0;
  v5 = objc_msgSend(v4, *a1, v10);
  if (v5)
  {
    v6 = v5;
    v7 = v10[0];
    a2 = (SEL *)objc_msgSend(v6, *a2);

  }
  else
  {
    v8 = v10[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }
  return a2;
}

id HealthStore.bodyMass.getter()
{
  return sub_1CE03BBA0((SEL *)&selRef__bodyMassCharacteristicQuantityWithError_);
}

id HealthStore.height.getter()
{
  return sub_1CE03BBA0((SEL *)&selRef__heightCharacteristicQuantityWithError_);
}

id sub_1CE03BBA0(SEL *a1)
{
  void **v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = *v1;
  v7[0] = 0;
  v3 = objc_msgSend(v2, *a1, v7);
  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }
  return v3;
}

uint64_t HealthStore.betaBlockerUse.getter()
{
  void **v0;
  void *v1;
  id v2;
  unsigned __int8 v3;
  void *v4;
  id v5;
  id v6;
  id v8[2];

  v8[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *v0;
  v8[0] = 0;
  v2 = objc_msgSend(v1, sel__cardioFitnessMedicationsUseWithError_, v8);
  v3 = v8[0];
  if (v2)
  {
    v4 = v2;
    v5 = v8[0];
    v3 = objc_msgSend(v4, sel_takingBetaBlockers);

  }
  else
  {
    v6 = v8[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }
  return v3 & 1;
}

void sub_1CE03BD20()
{
  qword_1ED8F0690 = 0;
  unk_1ED8F0698 = 0;
  byte_1ED8F0688 = 16;
}

uint64_t HealthStore.moveMode.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED8F06A8 != -1)
    swift_once();
  v1 = qword_1ED8F0690;
  v2 = unk_1ED8F0698;
  v3 = byte_1ED8F0688;
  swift_bridgeObjectRetain();
  sub_1CDFD3308(v3, v1, v2);
  v5 = v4;
  swift_bridgeObjectRelease();
  if (v5)
  {
    v6 = sub_1CE0B4B14();
    if (v6 != 2)
      return v6 & 1;
  }
  v7 = *v0;
  v14[0] = 0;
  v8 = objc_msgSend(v7, sel_activityMoveModeWithError_, v14);
  if (v8)
  {
    v9 = v8;
    v10 = v14[0];
    v11 = objc_msgSend(v9, sel_activityMoveMode);

    v6 = sub_1CE00AB98((uint64_t)v11);
    return v6 & 1;
  }
  v13 = v14[0];
  sub_1CE0B3CC8();

  return swift_willThrow();
}

id HealthStore.fitnessMode.getter()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_fitnessMode);

    return (id)(sub_1CE00AC6C((uint64_t)v2) & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HealthStore.fetchUnitPreferences()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE03BF1C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = *(void **)(v0 + 240);
  v3 = *(void **)(v0 + 224);
  v2 = *(void **)(v0 + 232);
  v5 = *(void **)(v0 + 208);
  v4 = *(void **)(v0 + 216);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HealthStore.save(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  _OWORD v6[3];
  uint64_t v7;

  sub_1CE040358(v1, (uint64_t)v6);
  v3 = swift_allocObject();
  v4 = v6[1];
  *(_OWORD *)(v3 + 16) = v6[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v6[2];
  *(_QWORD *)(v3 + 64) = v7;
  *(_QWORD *)(v3 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1CE0B5C00();
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

void sub_1CE03C01C(uint64_t a1, uint64_t a2, void **a3, unint64_t a4)
{
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  _QWORD v13[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *a3;
  if (a4 >> 62)
  {
    sub_1CDFB53C8(0, &qword_1EFA60A60);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1CE0B6AF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1CE0B6C5C();
    sub_1CDFB53C8(0, &qword_1EFA60A60);
  }
  sub_1CDFB53C8(0, &qword_1EFA60A60);
  v10 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1CE001ED0;
  *(_QWORD *)(v11 + 24) = v8;
  v13[4] = sub_1CE04124C;
  v13[5] = v11;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1CE03C1D0;
  v13[3] = &block_descriptor_128;
  v12 = _Block_copy(v13);
  swift_release();
  objc_msgSend(v9, sel_saveObjects_withCompletion_, v10, v12);
  _Block_release(v12);

}

void sub_1CE03C1D0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t HealthStore.save(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  id v5;
  _OWORD v7[3];
  uint64_t v8;

  sub_1CE040358(v1, (uint64_t)v7);
  v3 = swift_allocObject();
  v4 = v7[1];
  *(_OWORD *)(v3 + 16) = v7[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v7[2];
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 72) = a1;
  v5 = a1;
  return sub_1CE0B5C00();
}

void sub_1CE03C2C4(uint64_t a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1CE001B6C;
  *(_QWORD *)(v10 + 24) = v8;
  v12[4] = sub_1CE04122C;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1CE03C1D0;
  v12[3] = &block_descriptor_118;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(v9, sel_saveObject_withCompletion_, a4, v11);
  _Block_release(v11);
}

void sub_1CE03C3BC(char a1, void *a2, void (*a3)(void *, _QWORD), uint64_t a4, char *a5)
{
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char *format;
  void (*v23)(void *, _QWORD);
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;

  if ((a1 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
    sub_1CE0B6D94();
    a3(v24, v25);
    sub_1CDFC2DF4(v24, v25);
    return;
  }
  if (qword_1ED8F0EB0 != -1)
    swift_once();
  v8 = sub_1CE0B6080();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED8F0FD0);
  v9 = a2;
  v10 = a2;
  v11 = sub_1CE0B6068();
  v12 = sub_1CE0B671C();
  if (os_log_type_enabled(v11, v12))
  {
    v23 = a3;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v26 = v14;
    *(_DWORD *)v13 = 136446210;
    format = a5;
    if (a2)
    {
      swift_getErrorValue();
      MEMORY[0x1D17C0050]();
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0030);
    v16 = sub_1CE0B689C();
    v18 = v17;
    swift_bridgeObjectRelease();
    sub_1CDFC7270(v16, v18, &v26);
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1CDFAA000, v11, v12, format, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17C092C](v14, -1, -1);
    MEMORY[0x1D17C092C](v13, -1, -1);

    a3 = v23;
    v15 = a2;
    if (a2)
      goto LABEL_12;
    goto LABEL_11;
  }

  v15 = a2;
  if (!a2)
  {
LABEL_11:
    v19 = sub_1CE0B4A48();
    sub_1CDFB1900(&qword_1EFA60AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D917D0], MEMORY[0x1E0D917E0]);
    v15 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v20, *MEMORY[0x1E0D917C0], v19);
  }
LABEL_12:
  v21 = a2;
  a3(v15, 1);

}

uint64_t sub_1CE03C6BC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = **(void ***)(v0 + 128);
  if (*(_QWORD *)(v0 + 120) >> 62)
  {
    sub_1CDFB53C8(0, &qword_1EFA60A60);
    swift_bridgeObjectRetain();
    sub_1CE0B6AF4();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1CE0B6C5C();
    sub_1CDFB53C8(0, &qword_1EFA60A60);
  }
  sub_1CDFB53C8(0, &qword_1EFA60A60);
  v2 = sub_1CE0B6434();
  *(_QWORD *)(v0 + 136) = v2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CE03C810;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_1CE03C8E4;
  v4[3] = &block_descriptor_5;
  v4[4] = v3;
  objc_msgSend(v1, sel_saveObjects_withCompletion_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1CE03C810()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE03C870()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03C8A4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03C8E4(uint64_t a1, int a2, void *a3)
{
  uint64_t result;
  _QWORD *v5;
  id v6;

  if (a2)
    return swift_continuation_throwingResume();
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F15A8);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CE03C978()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = **(void ***)(v0 + 128);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CE03CA14;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_1CE03C8E4;
  v4[3] = &block_descriptor_7_0;
  v4[4] = v3;
  objc_msgSend(v2, sel_saveObject_withCompletion_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_1CE03CA14()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE03CA74()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HealthStore.save(_:to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_1CE03CACC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = **(void ***)(v0 + 136);
  sub_1CDFB53C8(0, &qword_1ED8F0E60);
  v3 = sub_1CE0B6434();
  *(_QWORD *)(v0 + 144) = v3;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CE03CB9C;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_1CE03C8E4;
  v5[3] = &block_descriptor_9;
  v5[4] = v4;
  objc_msgSend(v2, sel_addSamples_toWorkout_completion_, v3, v1, v5);
  return swift_continuation_await();
}

uint64_t sub_1CE03CB9C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 152) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1CE03CBFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03CC30()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Void __swiftcall HealthStore.execute(_:)(HKQuery a1)
{
  id *v1;

  objc_msgSend(*v1, sel_executeQuery_, a1.super.isa);
}

Swift::Void __swiftcall HealthStore.stop(_:)(HKQuery a1)
{
  id *v1;

  objc_msgSend(*v1, sel_stopQuery_, a1.super.isa);
}

id HealthStore.makeWorkoutSession(session:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  objc_class *v10;
  id v11;
  id result;
  _QWORD v14[5];

  v6 = sub_1CE0B5E04();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a1);
  v14[3] = &type metadata for HealthStore;
  v14[4] = &protocol witness table for HealthStore;
  v14[0] = swift_allocObject();
  sub_1CE040358(v2, v14[0] + 16);
  v10 = (objc_class *)type metadata accessor for HealthWorkoutSession();
  v11 = objc_allocWithZone(v10);
  result = HealthWorkoutSession.init(session:healthStore:)(v8, v14);
  if (!v3)
  {
    a2[3] = v10;
    a2[4] = &protocol witness table for HealthWorkoutSession;
    *a2 = result;
  }
  return result;
}

HKWorkoutSession __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> HealthStore.makeWorkoutSession(configuration:)(HKWorkoutConfiguration configuration)
{
  void **v1;
  void *v3;
  id v4;
  id v5;
  objc_class *v6;
  id v7;
  id v8;
  id v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = *v1;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB6E78]);
  v11[0] = 0;
  v5 = v3;
  v6 = configuration.super.isa;
  v7 = objc_msgSend(v4, sel_initWithHealthStore_configuration_error_, v5, v6, v11);
  if (v7)
  {
    v8 = v11[0];
  }
  else
  {
    v9 = v11[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }

  return (HKWorkoutSession)v7;
}

HKLiveWorkoutDataSource __swiftcall HealthStore.makeWorkoutDataSource(configuration:)(HKWorkoutConfiguration configuration)
{
  _QWORD *v1;

  return (HKLiveWorkoutDataSource)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6810]), sel_initWithHealthStore_workoutConfiguration_, *v1, configuration.super.isa);
}

uint64_t HealthStore.fetchActivityRings()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60A80);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60A88);
  v2[7] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[8] = v5;
  v2[9] = *(_QWORD *)(v5 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE03CF58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = v0[11];
  v2 = v0[8];
  v14 = v0[10];
  v4 = v0[6];
  v3 = v0[7];
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[3];
  *(_QWORD *)(swift_task_alloc() + 16) = v7;
  sub_1CE0B43B8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E0DF0A50], v5);
  sub_1CE0B6638();
  swift_task_dealloc();
  v8 = *(_QWORD *)(v7 + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v14, v1, v3);
  v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v10 = swift_allocObject();
  v0[12] = v10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v10 + v9, v14, v3);
  v11 = (_QWORD *)swift_task_alloc();
  v0[13] = v11;
  v11[2] = &unk_1EFA60A98;
  v11[3] = v10;
  v11[4] = v8;
  v12 = (_QWORD *)swift_task_alloc();
  v0[14] = v12;
  *v12 = v0;
  v12[1] = sub_1CE03D0E8;
  return sub_1CE0B6BCC();
}

uint64_t sub_1CE03D0E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_1CE03D15C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03D1C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03D240(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA5D940);
  v2[4] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BD0);
  v2[5] = swift_task_alloc();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60A88);
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BD8);
  v2[9] = v4;
  v2[10] = *(_QWORD *)(v4 - 8);
  v2[11] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BE0);
  v2[12] = v5;
  v2[13] = *(_QWORD *)(v5 - 8);
  v2[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE03D344()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = v0[10];
  v1 = v0[11];
  v3 = v0[9];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[7] + 16))(v0[8], v0[3], v0[6]);
  sub_1CDFE1194(&qword_1EFA60BE8, &qword_1EFA60A88, MEMORY[0x1E0DF0AE0]);
  sub_1CE0B6BB4();
  sub_1CE0B6B6C();
  sub_1CE0B6608();
  sub_1CE0B6B78();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1CE0B6BA8();
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EFA60BF0 + dword_1EFA60BF0);
  v4 = (_QWORD *)swift_task_alloc();
  v0[15] = v4;
  *v4 = v0;
  v4[1] = sub_1CE03D48C;
  return v6(v0[4], 0, 0);
}

uint64_t sub_1CE03D48C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE03D4F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v1 = *(_QWORD *)(v0 + 32);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  v2 = sub_1CE0B43B8();
  v3 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_1CE032DA4();
    swift_allocError();
    *v4 = 1;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 32), v2);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03D62C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03D6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  if (a2)
  {
    swift_getObjectType();
    v5 = sub_1CE0B64DC();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  v4[15] = v5;
  v4[16] = v7;
  return swift_task_switch();
}

uint64_t sub_1CE03D724()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BE0);
  if (sub_1CE0B6B78())
  {
    v1 = (void (*)(uint64_t, _QWORD))sub_1CE0B6B90();
    --*v2;
    v1(v0 + 16, 0);
    *(_QWORD *)(v0 + 136) = sub_1CE0B6B84();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BD0);
    sub_1CDFE1194(&qword_1EFA60BF8, &qword_1EFA60BD0, MEMORY[0x1E0DF0AC0]);
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v3;
    *v3 = v0;
    v3[1] = sub_1CE03D870;
    return sub_1CE0B6530();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 88);
    v6 = sub_1CE0B43B8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CE03D870()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  (*(void (**)(uint64_t, _QWORD))(v2 + 136))(v2 + 48, 0);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1CE03D8E4()
{
  uint64_t v0;

  (*(void (**)(uint64_t, uint64_t))(v0 + 136))(v0 + 48, 1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t HealthStore.makeActivityRingsStream()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AB8);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE03D984()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(swift_task_alloc() + 16) = v4;
  sub_1CE0B43B8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DF07B8], v3);
  sub_1CE0B65A8();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CE03DA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B98);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 8), v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1CE040FFC, v8, v9, v10);
  sub_1CE040358(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  v13 = v16[1];
  *(_OWORD *)(v12 + 16) = v16[0];
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v16[2];
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 72) = v11;
  v14 = v11;
  sub_1CE0B6578();
  objc_msgSend(*(id *)a2, sel_executeQuery_, v14);
  swift_release();

}

void sub_1CE03DBAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void **v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60BA0);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1CE0B43B8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA607F0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (void **)((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CDFB1434(a1, (uint64_t)v14, &qword_1EFA607F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v15 = *v14;
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v16 = sub_1CE0B6080();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED8F0FD0);
    v17 = v15;
    v18 = v15;
    v19 = sub_1CE0B6068();
    v20 = sub_1CE0B671C();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v30 = v22;
      *(_DWORD *)v21 = 136315138;
      swift_getErrorValue();
      v23 = MEMORY[0x1D17C0050](v28, v29);
      v27 = sub_1CDFC7270(v23, v24, &v30);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v19, v20, "HealthStore: An error occurred while loading ActivityRings: %s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v22, -1, -1);
      MEMORY[0x1D17C092C](v21, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v11, v14, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B98);
    sub_1CE0B6590();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t HealthStore.makeActivityRingsObserver(streamHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F1170);
  v3[5] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AB8);
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AC8);
  v3[9] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[10] = v6;
  v3[11] = *(_QWORD *)(v6 + 64);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE03DFBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 80);
  v18 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  v8 = *(_QWORD *)(v0 + 32);
  v17 = *(_QWORD *)(v0 + 40);
  v20 = *(_QWORD *)(v0 + 24);
  v19 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(swift_task_alloc() + 16) = v8;
  sub_1CE0B43B8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 104))(v4, *MEMORY[0x1E0DF07B8], v7);
  sub_1CE0B65A8();
  swift_task_dealloc();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v1, v2, v5);
  type metadata accessor for ActivityRingsObserver();
  v16 = swift_allocObject();
  v10 = sub_1CE0B6560();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v17, 1, 1, v10);
  v9(v18, v1, v5);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = 0;
  *((_QWORD *)v12 + 3) = 0;
  *((_QWORD *)v12 + 4) = v19;
  *((_QWORD *)v12 + 5) = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(&v12[v11], v18, v5);
  swift_retain();
  v13 = sub_1CE03AF58(v17, (uint64_t)&unk_1EFA60AD0, (uint64_t)v12);
  v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v14(v1, v5);
  *(_QWORD *)(v16 + 16) = v13;
  v14(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

void sub_1CE03E1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  id v14;
  uint64_t v15;
  _OWORD v16[3];
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60C00);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 8), v9);
  v11 = (void *)(*(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8))(sub_1CE04115C, v8, v9, v10);
  sub_1CE040358(a2, (uint64_t)v16);
  v12 = swift_allocObject();
  v13 = v16[1];
  *(_OWORD *)(v12 + 16) = v16[0];
  *(_OWORD *)(v12 + 32) = v13;
  *(_OWORD *)(v12 + 48) = v16[2];
  *(_QWORD *)(v12 + 64) = v17;
  *(_QWORD *)(v12 + 72) = v11;
  v14 = v11;
  sub_1CE0B6614();
  objc_msgSend(*(id *)a2, sel_executeQuery_, v14);
  swift_release();

}

uint64_t sub_1CE03E338(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v27[6];
  uint64_t v28;

  v27[1] = a2;
  v27[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60C08);
  v3 = *(_QWORD *)(v27[0] - 8);
  MEMORY[0x1E0C80A78](v27[0]);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1CE0B43B8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v27 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA607F0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (void **)((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CDFB1434(a1, (uint64_t)v15, &qword_1EFA607F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *v15;
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v17 = sub_1CE0B6080();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED8F0FD0);
    v18 = v16;
    v19 = v16;
    v20 = sub_1CE0B6068();
    v21 = sub_1CE0B671C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v28 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_getErrorValue();
      v24 = MEMORY[0x1D17C0050](v27[4], v27[5]);
      v27[2] = sub_1CDFC7270(v24, v25, &v28);
      sub_1CE0B68F0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CDFAA000, v20, v21, "HealthStore: An error occurred while loading ActivityRings: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17C092C](v23, -1, -1);
      MEMORY[0x1D17C092C](v22, -1, -1);
    }
    else
    {

    }
    v28 = (uint64_t)v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60C00);
    return sub_1CE0B662C();
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v7 + 32))(v12, v15, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60C00);
    sub_1CE0B6620();
    (*(void (**)(char *, _QWORD))(v3 + 8))(v5, v27[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t HealthStore.queryTotalMindfulMinutes()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = sub_1CE0B3E60();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = sub_1CE0B3DF4();
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  v1[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE03E734()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  Swift::String v7;
  Swift::String v8;
  id v9;
  void *v10;
  id v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  void *v14;
  void *v15;
  id v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1CDFB53C8(0, (unint64_t *)&unk_1ED8F0E48);
  v1 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_categoryTypeForIdentifier_, *MEMORY[0x1E0CB4928]);
  *(_QWORD *)(v0 + 104) = v1;
  if (v1)
  {
    v2 = v1;
    if (qword_1ED8F0EB0 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 48);
    v23 = *(_QWORD *)(v0 + 64);
    v24 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 40);
    v22 = *(_QWORD *)(v0 + 32);
    v25 = *(_QWORD *)(v0 + 24);
    v6 = sub_1CE0B6080();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED8F0FD0);
    v7._countAndFlagsBits = 0xD000000000000068;
    v7._object = (void *)0x80000001CE0CABE0;
    v8._object = (void *)0x80000001CE0CAC50;
    v8._countAndFlagsBits = 0xD00000000000001ALL;
    Logger.trace(file:function:)(v7, v8);
    sub_1CE0B6278();
    v9 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
    v10 = (void *)sub_1CE0B626C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend(v9, sel_initWithKey_ascending_, v10, 0);
    *(_QWORD *)(v0 + 112) = v11;

    sub_1CE0B3DE8();
    sub_1CE0B3DE8();
    sub_1CE0B3E48();
    sub_1CE0B3D88();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v22);
    v12 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    *(_QWORD *)(v0 + 120) = v12;
    v12(v3, v24);
    v13 = (void *)objc_opt_self();
    v14 = (void *)sub_1CE0B3DAC();
    v15 = (void *)sub_1CE0B3DAC();
    v16 = objc_msgSend(v13, sel_predicateForSamplesWithStartDate_endDate_options_, v14, v15, 0);
    *(_QWORD *)(v0 + 128) = v16;

    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v17;
    v17[2] = v2;
    v17[3] = v16;
    v17[4] = v11;
    v17[5] = v25;
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 144) = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E38);
    *v18 = v0;
    v18[1] = sub_1CE03EAA4;
    return sub_1CE0B6C80();
  }
  else
  {
    v20 = sub_1CE0B4A48();
    sub_1CDFB1900(&qword_1EFA60AE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D917D0], MEMORY[0x1E0D917E0]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v21, *MEMORY[0x1E0D917C8], v20);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1CE03EAA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE03EB10()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  double v6;
  id v7;
  void *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  double v15;
  double v16;
  void (*v17)(uint64_t, uint64_t);
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    v23 = v1;
    if (v2)
      goto LABEL_3;
LABEL_10:
    v6 = 0.0;
LABEL_11:
    v17 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
    v19 = *(void **)(v0 + 104);
    v18 = *(void **)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 88);
    v20 = *(_QWORD *)(v0 + 96);
    v22 = *(_QWORD *)(v0 + 56);

    swift_bridgeObjectRelease();
    v17(v21, v22);
    v17(v20, v22);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(double))(v0 + 8))(v6 / 60.0);
  }
  swift_bridgeObjectRetain();
  result = sub_1CE0B6B30();
  v2 = result;
  v23 = v1;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = v1 & 0xC000000000000001;
    v6 = 0.0;
    do
    {
      if (v5)
        v7 = (id)MEMORY[0x1D17BFD98](v4, v23);
      else
        v7 = *(id *)(v23 + 8 * v4 + 32);
      v8 = v7;
      v9 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
      v11 = *(_QWORD *)(v0 + 72);
      v10 = *(_QWORD *)(v0 + 80);
      v12 = *(_QWORD *)(v0 + 56);
      ++v4;
      v13 = objc_msgSend(v7, sel_endDate, v23);
      sub_1CE0B3DD0();

      v14 = objc_msgSend(v8, sel_startDate);
      sub_1CE0B3DD0();

      sub_1CE0B3DA0();
      v16 = v15;
      v9(v11, v12);
      v9(v10, v12);

      v6 = v6 + v16;
    }
    while (v2 != v4);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1CE03ED10()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void (**)(uint64_t, uint64_t))(v0 + 120);
  v1 = *(void **)(v0 + 128);
  v3 = *(void **)(v0 + 112);
  v4 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_QWORD *)(v0 + 56);

  v2(v4, v6);
  v2(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CE03EDB0(uint64_t a1, void *a2, void *a3, void *a4, id *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  id *v23;
  _QWORD aBlock[6];

  v23 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F0E40);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F03C8);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1CE0C21C0;
  *(_QWORD *)(v12 + 32) = a4;
  aBlock[0] = v12;
  sub_1CE0B644C();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14 + v13, (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  v15 = objc_allocWithZone(MEMORY[0x1E0CB6AF8]);
  sub_1CDFB53C8(0, &qword_1EFA607C0);
  v16 = a4;
  v17 = a3;
  v18 = a2;
  v19 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1CE040F10;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CE0402B8;
  aBlock[3] = &block_descriptor_76;
  v20 = _Block_copy(aBlock);
  v21 = objc_msgSend(v15, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v18, v17, 0, v19, v20);

  _Block_release(v20);
  swift_release();
  objc_msgSend(*v23, sel_executeQuery_, v21);

}

uint64_t HealthStore.queryStatistics(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CE03EFDC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  v1 = v0[4];
  v2 = v0[5];
  v3 = v0[3];
  v4 = (void *)objc_opt_self();
  v5 = (void *)sub_1CE0B626C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AF0);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1CE0BB0F0;
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 32) = v3;
  *(_QWORD *)(v6 + 40) = v1;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1CE0B6434();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v4, sel_predicateForObjectsWithMetadataKey_allowedValues_, v5, v7);
  v0[6] = v8;

  v9 = (_QWORD *)swift_allocObject();
  v0[7] = v9;
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = 0xE000000000000000;
  v10 = (_QWORD *)swift_task_alloc();
  v0[8] = v10;
  v10[2] = v8;
  v10[3] = v3;
  v10[4] = v1;
  v10[5] = v9;
  v10[6] = v2;
  v11 = (_QWORD *)swift_task_alloc();
  v0[9] = v11;
  *v11 = v0;
  v11[1] = sub_1CE03F188;
  return sub_1CE0B6C80();
}

uint64_t sub_1CE03F188()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1CE03F1F4()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE03F22C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1CE03F270(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, id *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id *v26;
  _QWORD aBlock[6];

  v25 = a2;
  v26 = a6;
  v24 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B88);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CDFB53C8(0, (unint64_t *)&unk_1ED8F0E48);
  v13 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_workoutType);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  v17 = (_QWORD *)(v16 + v15);
  *v17 = v24;
  v17[1] = a4;
  *(_QWORD *)(v16 + ((v15 + 23) & 0xFFFFFFFFFFFFFFF8)) = a5;
  v18 = objc_allocWithZone(MEMORY[0x1E0CB6AF8]);
  sub_1CDFB53C8(0, &qword_1EFA607C0);
  swift_bridgeObjectRetain();
  swift_retain();
  v19 = v25;
  v20 = (void *)sub_1CE0B6434();
  aBlock[4] = sub_1CE040E88;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CE0402B8;
  aBlock[3] = &block_descriptor_70;
  v21 = _Block_copy(aBlock);
  v22 = objc_msgSend(v18, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v13, v19, 1, v20, v21);

  _Block_release(v21);
  swift_release();
  objc_msgSend(*v26, sel_executeQuery_, v22);

}

uint64_t sub_1CE03F4A4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  _BOOL4 v21;
  unint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  _BYTE *v28;
  uint8_t *v29;
  id i;
  void *v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v13 = sub_1CE0B3E24();
  v14 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (!a3)
    {
      sub_1CE032DA4();
      v25 = swift_allocError();
      *v28 = 2;
      goto LABEL_11;
    }
LABEL_10:
    v25 = (uint64_t)a3;
LABEL_11:
    *(_QWORD *)&v62 = v25;
    v26 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B88);
    return sub_1CE0B6500();
  }
  if (a3)
    goto LABEL_10;
  v54 = v17;
  v55 = v15;
  v56 = v14;
  if (qword_1ED8F0360 != -1)
    swift_once();
  v18 = sub_1CE0B6080();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED8F0A30);
  swift_bridgeObjectRetain_n();
  v19 = sub_1CE0B6068();
  v20 = sub_1CE0B6734();
  v21 = os_log_type_enabled((os_log_t)v19, v20);
  v22 = a2 >> 62;
  v53[1] = a4;
  if (!v21)
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_14;
  }
  v23 = (uint8_t *)swift_slowAlloc();
  *(_DWORD *)v23 = 134217984;
  if (v22)
    goto LABEL_46;
  v24 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v62 = v24;
    sub_1CE0B68F0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CDFAA000, (os_log_t)v19, v20, "[HealthStore] HealthKit query returned %ld results", v23, 0xCu);
    MEMORY[0x1D17C092C](v23, -1, -1);

LABEL_14:
    v57 = a6;
    v58 = a7 + 2;
    v59 = a5;
    if (v22)
      break;
    v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v19)
      goto LABEL_42;
LABEL_16:
    v23 = (uint8_t *)(v19 - 1);
    if (v19 >= 1)
    {
      swift_beginAccess();
      v29 = 0;
      v60 = 0x80000001CE0CAC70;
      v61 = MEMORY[0x1E0DEE9B8] + 8;
      if ((a2 & 0xC000000000000001) != 0)
        goto LABEL_20;
LABEL_21:
      for (i = *(id *)(a2 + 8 * (_QWORD)v29 + 32); ; i = (id)MEMORY[0x1D17BFD98](v29, a2))
      {
        v31 = i;
        objc_opt_self();
        v32 = swift_dynamicCastObjCClass();
        if (!v32)
        {

          goto LABEL_41;
        }
        v33 = (void *)v32;
        v34 = v31;
        v35 = objc_msgSend(v33, sel_totalEnergyBurned);
        if (!v35)
          goto LABEL_39;
        v36 = v35;
        v37 = objc_msgSend((id)objc_opt_self(), sel_kilocalorieUnit);
        objc_msgSend(v36, sel_doubleValueForUnit_, v37);
        v39 = v38;

        v40 = objc_msgSend(v33, sel_metadata);
        if (v40)
        {
          v41 = v40;
          v42 = sub_1CE0B6218();

          if (*(_QWORD *)(v42 + 16) && (v43 = sub_1CDFD1DAC(0xD000000000000022, v60), (v44 & 1) != 0))
          {
            sub_1CDFC74F8(*(_QWORD *)(v42 + 56) + 32 * v43, (uint64_t)&v62);
          }
          else
          {
            v62 = 0u;
            v63 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((_QWORD *)&v63 + 1))
          {
            if (swift_dynamicCast())
            {
              if (v64 == v59 && v65 == v57)
              {
                swift_bridgeObjectRelease();
LABEL_38:
                v46 = objc_msgSend(v33, sel_UUID);
                v47 = v54;
                sub_1CE0B3E18();

                v48 = sub_1CE0B3E00();
                v50 = v49;

                (*(void (**)(char *, uint64_t))(v55 + 8))(v47, v56);
                a7[2] = v39;
                a7[3] = v48;
                a7[4] = v50;

                swift_bridgeObjectRelease();
                goto LABEL_41;
              }
              v45 = sub_1CE0B6C50();
              swift_bridgeObjectRelease();
              if ((v45 & 1) != 0)
                goto LABEL_38;
            }
LABEL_39:

            goto LABEL_40;
          }
        }
        else
        {
          v62 = 0u;
          v63 = 0u;
        }

        sub_1CDFB13F8((uint64_t)&v62, &qword_1ED8F10C0);
LABEL_40:

LABEL_41:
        if (v23 == v29)
          goto LABEL_42;
        ++v29;
        if ((a2 & 0xC000000000000001) == 0)
          goto LABEL_21;
LABEL_20:
        ;
      }
    }
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    v24 = sub_1CE0B6B30();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v19 = sub_1CE0B6B30();
  if (v19)
    goto LABEL_16;
LABEL_42:
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v52 = a7[3];
  v51 = a7[4];
  v64 = a7[2];
  v65 = v52;
  v66 = v51;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60B88);
  return sub_1CE0B650C();
}

uint64_t sub_1CE03FA1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  _OWORD v6[3];
  uint64_t v7;

  sub_1CE040358(v1, (uint64_t)v6);
  v3 = swift_allocObject();
  v4 = v6[1];
  *(_OWORD *)(v3 + 16) = v6[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v6[2];
  *(_QWORD *)(v3 + 64) = v7;
  *(_QWORD *)(v3 + 72) = a1;
  swift_bridgeObjectRetain();
  return sub_1CE0B5C00();
}

uint64_t sub_1CE03FAB4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  id v5;
  _OWORD v7[3];
  uint64_t v8;

  sub_1CE040358(v1, (uint64_t)v7);
  v3 = swift_allocObject();
  v4 = v7[1];
  *(_OWORD *)(v3 + 16) = v7[0];
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v7[2];
  *(_QWORD *)(v3 + 64) = v8;
  *(_QWORD *)(v3 + 72) = a1;
  v5 = a1;
  return sub_1CE0B5C00();
}

uint64_t sub_1CE03FB48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1CDFACD38;
  v4[15] = a1;
  v4[16] = v1;
  return swift_task_switch();
}

uint64_t sub_1CE03FBA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_1CE03FBC0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = **(void ***)(v0 + 128);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_1CE03CA14;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_1CE03C8E4;
  v4[3] = &block_descriptor_55;
  v4[4] = v3;
  objc_msgSend(v2, sel_saveObject_withCompletion_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_1CE03FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1CDFACD38;
  v6[16] = a2;
  v6[17] = v2;
  v6[15] = a1;
  return swift_task_switch();
}

id sub_1CE03FCCC(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_executeQuery_, a1);
}

id sub_1CE03FCE0(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_stopQuery_, a1);
}

uint64_t sub_1CE03FCF4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1CE03FD38;
  return HealthStore.queryTotalMindfulMinutes()();
}

uint64_t sub_1CE03FD38(double a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  __n128 v5;

  v4 = *v2;
  swift_task_dealloc();
  if (!v1)
    v5.n128_f64[0] = a1;
  return (*(uint64_t (**)(__n128))(v4 + 8))(v5);
}

void sub_1CE03FD8C()
{
  HealthStore.birthday.getter();
}

SEL *sub_1CE03FDA0()
{
  return HealthStore.biologicalSex.getter();
}

SEL *sub_1CE03FDB4()
{
  return HealthStore.wheelchairUse.getter();
}

id sub_1CE03FDC8()
{
  return HealthStore.bodyMass.getter();
}

id sub_1CE03FDDC()
{
  return HealthStore.height.getter();
}

uint64_t sub_1CE03FDF0()
{
  return HealthStore.betaBlockerUse.getter() & 1;
}

uint64_t sub_1CE03FE08()
{
  return HealthStore.moveMode.getter() & 1;
}

id sub_1CE03FE20()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_fitnessMode);

    return (id)(sub_1CE00AC6C((uint64_t)v2) & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1CE03FE94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  id result;
  _QWORD v18[5];

  v10 = sub_1CE0B5E04();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v13 + 16))(v12, a1);
  v18[3] = a2;
  v18[4] = a3;
  v18[0] = swift_allocObject();
  sub_1CE040358(v4, v18[0] + 16);
  v14 = (objc_class *)type metadata accessor for HealthWorkoutSession();
  v15 = objc_allocWithZone(v14);
  result = HealthWorkoutSession.init(session:healthStore:)(v12, v18);
  if (!v5)
  {
    a4[3] = v14;
    a4[4] = &protocol witness table for HealthWorkoutSession;
    *a4 = result;
  }
  return result;
}

id sub_1CE03FF88(void *a1)
{
  void **v1;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v3 = *v1;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB6E78]);
  v5 = v3;
  v6 = a1;
  v7 = sub_1CE040418((uint64_t)v5, (uint64_t)v6);

  return v7;
}

id sub_1CE03FFFC(uint64_t a1)
{
  _QWORD *v1;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6810]), sel_initWithHealthStore_workoutConfiguration_, *v1, a1);
}

uint64_t sub_1CE040038(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1CDFACD38;
  return HealthStore.fetchActivityRings()(a1);
}

uint64_t sub_1CE040088(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE0400E4;
  return HealthStore.makeActivityRingsObserver(streamHandler:)(a1, a2);
}

uint64_t sub_1CE0400E4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1CE040134(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AB8);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1CE040198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 40);
  v1 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(swift_task_alloc() + 16) = v4;
  sub_1CE0B43B8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E0DF07B8], v3);
  sub_1CE0B65A8();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1CE040244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;

  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_1CDFACD3C;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1CE0402B8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1CDFB53C8(0, &qword_1ED8F0E60);
    v5 = sub_1CE0B6440();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1CE040358(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)a1;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v5 = a2 + 8;
  v6 = a1 + 8;
  v7 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  *(_QWORD *)(a2 + 48) = *(_QWORD *)(a1 + 48);
  return a2;
}

void sub_1CE0403D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CE03C01C(a1, a2, (void **)(v2 + 16), *(_QWORD *)(v2 + 72));
}

void sub_1CE0403E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CE03C2C4(a1, a2, (void **)(v2 + 16), *(_QWORD *)(v2 + 72));
}

uint64_t sub_1CE0403EC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  return swift_deallocObject();
}

id sub_1CE040418(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v3 = objc_msgSend(v2, sel_initWithHealthStore_configuration_error_, a1, a2, v7);
  if (v3)
  {
    v4 = v7[0];
  }
  else
  {
    v5 = v7[0];
    sub_1CE0B3CC8();

    swift_willThrow();
  }
  return v3;
}

void sub_1CE0404CC(uint64_t a1)
{
  uint64_t v1;

  sub_1CE03E1BC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CE0404D4()
{
  return objectdestroy_2Tm(&qword_1EFA60A88);
}

uint64_t sub_1CE0404E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60A88) - 8) + 80);
  v5 = v1 + ((v4 + 16) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1CDFACD3C;
  return sub_1CE03D240(a1, v5);
}

uint64_t sub_1CE040554(uint64_t a1, uint64_t a2)
{
  double *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _QWORD *v9;

  v6 = *((_QWORD *)v2 + 2);
  v7 = *((_QWORD *)v2 + 3);
  v8 = v2[4];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1CDFACD38;
  return sub_1CE03B234(a1, a2, v6, v7, v8);
}

void sub_1CE0405D0(uint64_t a1)
{
  uint64_t v1;

  sub_1CE03DA30(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CE0405D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AC8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1CE040658(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFA60AC8) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (int *)v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1CDFACD38;
  return sub_1CE0079B0(a1, v5, v6, v7, v8, v9);
}

void sub_1CE0406F4(uint64_t a1)
{
  uint64_t v1;

  sub_1CE03EDB0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(id **)(v1 + 40));
}

uint64_t sub_1CE040700()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CE040724(uint64_t a1)
{
  uint64_t v1;

  sub_1CE03F270(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(id **)(v1 + 48));
}

uint64_t dispatch thunk of HealthStoreProtocol.save(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 32) + *(_QWORD *)(a3 + 32));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1CDFACD38;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of HealthStoreProtocol.save(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 40) + *(_QWORD *)(a4 + 40));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1CDFACD38;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of HealthStoreProtocol.execute(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of HealthStoreProtocol.stop(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HealthStoreProtocol.queryTotalMindfulMinutes()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(a2 + 64) + *(_QWORD *)(a2 + 64));
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1CE040934;
  return v7(a1, a2);
}

uint64_t sub_1CE040934(double a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(double))(v4 + 8))(a1);
}

uint64_t dispatch thunk of HealthStoreProtocol.birthday.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

